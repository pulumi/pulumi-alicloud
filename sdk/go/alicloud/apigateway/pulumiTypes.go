// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiConstantParameter struct {
	// The description of Constant parameter.
	Description *string `pulumi:"description"`
	// Constant parameter location; values: 'HEAD' and 'QUERY'.
	In string `pulumi:"in"`
	// Constant parameter name.
	Name string `pulumi:"name"`
	// Constant parameter value.
	Value string `pulumi:"value"`
}

// ApiConstantParameterInput is an input type that accepts ApiConstantParameterArgs and ApiConstantParameterOutput values.
// You can construct a concrete instance of `ApiConstantParameterInput` via:
//
//	ApiConstantParameterArgs{...}
type ApiConstantParameterInput interface {
	pulumi.Input

	ToApiConstantParameterOutput() ApiConstantParameterOutput
	ToApiConstantParameterOutputWithContext(context.Context) ApiConstantParameterOutput
}

type ApiConstantParameterArgs struct {
	// The description of Constant parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Constant parameter location; values: 'HEAD' and 'QUERY'.
	In pulumi.StringInput `pulumi:"in"`
	// Constant parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Constant parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiConstantParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConstantParameter)(nil)).Elem()
}

func (i ApiConstantParameterArgs) ToApiConstantParameterOutput() ApiConstantParameterOutput {
	return i.ToApiConstantParameterOutputWithContext(context.Background())
}

func (i ApiConstantParameterArgs) ToApiConstantParameterOutputWithContext(ctx context.Context) ApiConstantParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConstantParameterOutput)
}

// ApiConstantParameterArrayInput is an input type that accepts ApiConstantParameterArray and ApiConstantParameterArrayOutput values.
// You can construct a concrete instance of `ApiConstantParameterArrayInput` via:
//
//	ApiConstantParameterArray{ ApiConstantParameterArgs{...} }
type ApiConstantParameterArrayInput interface {
	pulumi.Input

	ToApiConstantParameterArrayOutput() ApiConstantParameterArrayOutput
	ToApiConstantParameterArrayOutputWithContext(context.Context) ApiConstantParameterArrayOutput
}

type ApiConstantParameterArray []ApiConstantParameterInput

func (ApiConstantParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConstantParameter)(nil)).Elem()
}

func (i ApiConstantParameterArray) ToApiConstantParameterArrayOutput() ApiConstantParameterArrayOutput {
	return i.ToApiConstantParameterArrayOutputWithContext(context.Background())
}

func (i ApiConstantParameterArray) ToApiConstantParameterArrayOutputWithContext(ctx context.Context) ApiConstantParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConstantParameterArrayOutput)
}

type ApiConstantParameterOutput struct{ *pulumi.OutputState }

func (ApiConstantParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConstantParameter)(nil)).Elem()
}

func (o ApiConstantParameterOutput) ToApiConstantParameterOutput() ApiConstantParameterOutput {
	return o
}

func (o ApiConstantParameterOutput) ToApiConstantParameterOutputWithContext(ctx context.Context) ApiConstantParameterOutput {
	return o
}

// The description of Constant parameter.
func (o ApiConstantParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConstantParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Constant parameter location; values: 'HEAD' and 'QUERY'.
func (o ApiConstantParameterOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiConstantParameter) string { return v.In }).(pulumi.StringOutput)
}

// Constant parameter name.
func (o ApiConstantParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiConstantParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Constant parameter value.
func (o ApiConstantParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiConstantParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ApiConstantParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiConstantParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConstantParameter)(nil)).Elem()
}

func (o ApiConstantParameterArrayOutput) ToApiConstantParameterArrayOutput() ApiConstantParameterArrayOutput {
	return o
}

func (o ApiConstantParameterArrayOutput) ToApiConstantParameterArrayOutputWithContext(ctx context.Context) ApiConstantParameterArrayOutput {
	return o
}

func (o ApiConstantParameterArrayOutput) Index(i pulumi.IntInput) ApiConstantParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiConstantParameter {
		return vs[0].([]ApiConstantParameter)[vs[1].(int)]
	}).(ApiConstantParameterOutput)
}

type ApiFcServiceConfig struct {
	// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
	ArnRole *string `pulumi:"arnRole"`
	// The function name of function compute service.
	FunctionName string `pulumi:"functionName"`
	// The region that the function compute service belongs to.
	Region string `pulumi:"region"`
	// The service name of function compute service.
	ServiceName string `pulumi:"serviceName"`
	// Backend service time-out time; unit: millisecond.
	Timeout int `pulumi:"timeout"`
}

// ApiFcServiceConfigInput is an input type that accepts ApiFcServiceConfigArgs and ApiFcServiceConfigOutput values.
// You can construct a concrete instance of `ApiFcServiceConfigInput` via:
//
//	ApiFcServiceConfigArgs{...}
type ApiFcServiceConfigInput interface {
	pulumi.Input

	ToApiFcServiceConfigOutput() ApiFcServiceConfigOutput
	ToApiFcServiceConfigOutputWithContext(context.Context) ApiFcServiceConfigOutput
}

type ApiFcServiceConfigArgs struct {
	// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
	ArnRole pulumi.StringPtrInput `pulumi:"arnRole"`
	// The function name of function compute service.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The region that the function compute service belongs to.
	Region pulumi.StringInput `pulumi:"region"`
	// The service name of function compute service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Backend service time-out time; unit: millisecond.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (ApiFcServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiFcServiceConfig)(nil)).Elem()
}

func (i ApiFcServiceConfigArgs) ToApiFcServiceConfigOutput() ApiFcServiceConfigOutput {
	return i.ToApiFcServiceConfigOutputWithContext(context.Background())
}

func (i ApiFcServiceConfigArgs) ToApiFcServiceConfigOutputWithContext(ctx context.Context) ApiFcServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiFcServiceConfigOutput)
}

func (i ApiFcServiceConfigArgs) ToApiFcServiceConfigPtrOutput() ApiFcServiceConfigPtrOutput {
	return i.ToApiFcServiceConfigPtrOutputWithContext(context.Background())
}

func (i ApiFcServiceConfigArgs) ToApiFcServiceConfigPtrOutputWithContext(ctx context.Context) ApiFcServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiFcServiceConfigOutput).ToApiFcServiceConfigPtrOutputWithContext(ctx)
}

// ApiFcServiceConfigPtrInput is an input type that accepts ApiFcServiceConfigArgs, ApiFcServiceConfigPtr and ApiFcServiceConfigPtrOutput values.
// You can construct a concrete instance of `ApiFcServiceConfigPtrInput` via:
//
//	        ApiFcServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiFcServiceConfigPtrInput interface {
	pulumi.Input

	ToApiFcServiceConfigPtrOutput() ApiFcServiceConfigPtrOutput
	ToApiFcServiceConfigPtrOutputWithContext(context.Context) ApiFcServiceConfigPtrOutput
}

type apiFcServiceConfigPtrType ApiFcServiceConfigArgs

func ApiFcServiceConfigPtr(v *ApiFcServiceConfigArgs) ApiFcServiceConfigPtrInput {
	return (*apiFcServiceConfigPtrType)(v)
}

func (*apiFcServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiFcServiceConfig)(nil)).Elem()
}

func (i *apiFcServiceConfigPtrType) ToApiFcServiceConfigPtrOutput() ApiFcServiceConfigPtrOutput {
	return i.ToApiFcServiceConfigPtrOutputWithContext(context.Background())
}

func (i *apiFcServiceConfigPtrType) ToApiFcServiceConfigPtrOutputWithContext(ctx context.Context) ApiFcServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiFcServiceConfigPtrOutput)
}

type ApiFcServiceConfigOutput struct{ *pulumi.OutputState }

func (ApiFcServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiFcServiceConfig)(nil)).Elem()
}

func (o ApiFcServiceConfigOutput) ToApiFcServiceConfigOutput() ApiFcServiceConfigOutput {
	return o
}

func (o ApiFcServiceConfigOutput) ToApiFcServiceConfigOutputWithContext(ctx context.Context) ApiFcServiceConfigOutput {
	return o
}

func (o ApiFcServiceConfigOutput) ToApiFcServiceConfigPtrOutput() ApiFcServiceConfigPtrOutput {
	return o.ToApiFcServiceConfigPtrOutputWithContext(context.Background())
}

func (o ApiFcServiceConfigOutput) ToApiFcServiceConfigPtrOutputWithContext(ctx context.Context) ApiFcServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiFcServiceConfig) *ApiFcServiceConfig {
		return &v
	}).(ApiFcServiceConfigPtrOutput)
}

// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
func (o ApiFcServiceConfigOutput) ArnRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiFcServiceConfig) *string { return v.ArnRole }).(pulumi.StringPtrOutput)
}

// The function name of function compute service.
func (o ApiFcServiceConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiFcServiceConfig) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The region that the function compute service belongs to.
func (o ApiFcServiceConfigOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ApiFcServiceConfig) string { return v.Region }).(pulumi.StringOutput)
}

// The service name of function compute service.
func (o ApiFcServiceConfigOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiFcServiceConfig) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Backend service time-out time; unit: millisecond.
func (o ApiFcServiceConfigOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v ApiFcServiceConfig) int { return v.Timeout }).(pulumi.IntOutput)
}

type ApiFcServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiFcServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiFcServiceConfig)(nil)).Elem()
}

func (o ApiFcServiceConfigPtrOutput) ToApiFcServiceConfigPtrOutput() ApiFcServiceConfigPtrOutput {
	return o
}

func (o ApiFcServiceConfigPtrOutput) ToApiFcServiceConfigPtrOutputWithContext(ctx context.Context) ApiFcServiceConfigPtrOutput {
	return o
}

func (o ApiFcServiceConfigPtrOutput) Elem() ApiFcServiceConfigOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) ApiFcServiceConfig {
		if v != nil {
			return *v
		}
		var ret ApiFcServiceConfig
		return ret
	}).(ApiFcServiceConfigOutput)
}

// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
func (o ApiFcServiceConfigPtrOutput) ArnRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ArnRole
	}).(pulumi.StringPtrOutput)
}

// The function name of function compute service.
func (o ApiFcServiceConfigPtrOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionName
	}).(pulumi.StringPtrOutput)
}

// The region that the function compute service belongs to.
func (o ApiFcServiceConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// The service name of function compute service.
func (o ApiFcServiceConfigPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Backend service time-out time; unit: millisecond.
func (o ApiFcServiceConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiFcServiceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ApiHttpServiceConfig struct {
	// The address of backend service.
	Address string `pulumi:"address"`
	// The name of aone.
	AoneName *string `pulumi:"aoneName"`
	// The http method of backend service.
	Method string `pulumi:"method"`
	// The path of backend service.
	Path string `pulumi:"path"`
	// Backend service time-out time; unit: millisecond.
	Timeout int `pulumi:"timeout"`
}

// ApiHttpServiceConfigInput is an input type that accepts ApiHttpServiceConfigArgs and ApiHttpServiceConfigOutput values.
// You can construct a concrete instance of `ApiHttpServiceConfigInput` via:
//
//	ApiHttpServiceConfigArgs{...}
type ApiHttpServiceConfigInput interface {
	pulumi.Input

	ToApiHttpServiceConfigOutput() ApiHttpServiceConfigOutput
	ToApiHttpServiceConfigOutputWithContext(context.Context) ApiHttpServiceConfigOutput
}

type ApiHttpServiceConfigArgs struct {
	// The address of backend service.
	Address pulumi.StringInput `pulumi:"address"`
	// The name of aone.
	AoneName pulumi.StringPtrInput `pulumi:"aoneName"`
	// The http method of backend service.
	Method pulumi.StringInput `pulumi:"method"`
	// The path of backend service.
	Path pulumi.StringInput `pulumi:"path"`
	// Backend service time-out time; unit: millisecond.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (ApiHttpServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHttpServiceConfig)(nil)).Elem()
}

func (i ApiHttpServiceConfigArgs) ToApiHttpServiceConfigOutput() ApiHttpServiceConfigOutput {
	return i.ToApiHttpServiceConfigOutputWithContext(context.Background())
}

func (i ApiHttpServiceConfigArgs) ToApiHttpServiceConfigOutputWithContext(ctx context.Context) ApiHttpServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpServiceConfigOutput)
}

func (i ApiHttpServiceConfigArgs) ToApiHttpServiceConfigPtrOutput() ApiHttpServiceConfigPtrOutput {
	return i.ToApiHttpServiceConfigPtrOutputWithContext(context.Background())
}

func (i ApiHttpServiceConfigArgs) ToApiHttpServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpServiceConfigOutput).ToApiHttpServiceConfigPtrOutputWithContext(ctx)
}

// ApiHttpServiceConfigPtrInput is an input type that accepts ApiHttpServiceConfigArgs, ApiHttpServiceConfigPtr and ApiHttpServiceConfigPtrOutput values.
// You can construct a concrete instance of `ApiHttpServiceConfigPtrInput` via:
//
//	        ApiHttpServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiHttpServiceConfigPtrInput interface {
	pulumi.Input

	ToApiHttpServiceConfigPtrOutput() ApiHttpServiceConfigPtrOutput
	ToApiHttpServiceConfigPtrOutputWithContext(context.Context) ApiHttpServiceConfigPtrOutput
}

type apiHttpServiceConfigPtrType ApiHttpServiceConfigArgs

func ApiHttpServiceConfigPtr(v *ApiHttpServiceConfigArgs) ApiHttpServiceConfigPtrInput {
	return (*apiHttpServiceConfigPtrType)(v)
}

func (*apiHttpServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHttpServiceConfig)(nil)).Elem()
}

func (i *apiHttpServiceConfigPtrType) ToApiHttpServiceConfigPtrOutput() ApiHttpServiceConfigPtrOutput {
	return i.ToApiHttpServiceConfigPtrOutputWithContext(context.Background())
}

func (i *apiHttpServiceConfigPtrType) ToApiHttpServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpServiceConfigPtrOutput)
}

type ApiHttpServiceConfigOutput struct{ *pulumi.OutputState }

func (ApiHttpServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHttpServiceConfig)(nil)).Elem()
}

func (o ApiHttpServiceConfigOutput) ToApiHttpServiceConfigOutput() ApiHttpServiceConfigOutput {
	return o
}

func (o ApiHttpServiceConfigOutput) ToApiHttpServiceConfigOutputWithContext(ctx context.Context) ApiHttpServiceConfigOutput {
	return o
}

func (o ApiHttpServiceConfigOutput) ToApiHttpServiceConfigPtrOutput() ApiHttpServiceConfigPtrOutput {
	return o.ToApiHttpServiceConfigPtrOutputWithContext(context.Background())
}

func (o ApiHttpServiceConfigOutput) ToApiHttpServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiHttpServiceConfig) *ApiHttpServiceConfig {
		return &v
	}).(ApiHttpServiceConfigPtrOutput)
}

// The address of backend service.
func (o ApiHttpServiceConfigOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpServiceConfig) string { return v.Address }).(pulumi.StringOutput)
}

// The name of aone.
func (o ApiHttpServiceConfigOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHttpServiceConfig) *string { return v.AoneName }).(pulumi.StringPtrOutput)
}

// The http method of backend service.
func (o ApiHttpServiceConfigOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpServiceConfig) string { return v.Method }).(pulumi.StringOutput)
}

// The path of backend service.
func (o ApiHttpServiceConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpServiceConfig) string { return v.Path }).(pulumi.StringOutput)
}

// Backend service time-out time; unit: millisecond.
func (o ApiHttpServiceConfigOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v ApiHttpServiceConfig) int { return v.Timeout }).(pulumi.IntOutput)
}

type ApiHttpServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiHttpServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHttpServiceConfig)(nil)).Elem()
}

func (o ApiHttpServiceConfigPtrOutput) ToApiHttpServiceConfigPtrOutput() ApiHttpServiceConfigPtrOutput {
	return o
}

func (o ApiHttpServiceConfigPtrOutput) ToApiHttpServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpServiceConfigPtrOutput {
	return o
}

func (o ApiHttpServiceConfigPtrOutput) Elem() ApiHttpServiceConfigOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) ApiHttpServiceConfig {
		if v != nil {
			return *v
		}
		var ret ApiHttpServiceConfig
		return ret
	}).(ApiHttpServiceConfigOutput)
}

// The address of backend service.
func (o ApiHttpServiceConfigPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// The name of aone.
func (o ApiHttpServiceConfigPtrOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.AoneName
	}).(pulumi.StringPtrOutput)
}

// The http method of backend service.
func (o ApiHttpServiceConfigPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The path of backend service.
func (o ApiHttpServiceConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Backend service time-out time; unit: millisecond.
func (o ApiHttpServiceConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiHttpServiceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ApiHttpVpcServiceConfig struct {
	// The name of aone.
	AoneName *string `pulumi:"aoneName"`
	// The http method of backend service.
	Method string `pulumi:"method"`
	// The name of vpc instance.
	Name string `pulumi:"name"`
	// The path of backend service.
	Path string `pulumi:"path"`
	// Backend service time-out time. Unit: millisecond.
	Timeout int `pulumi:"timeout"`
}

// ApiHttpVpcServiceConfigInput is an input type that accepts ApiHttpVpcServiceConfigArgs and ApiHttpVpcServiceConfigOutput values.
// You can construct a concrete instance of `ApiHttpVpcServiceConfigInput` via:
//
//	ApiHttpVpcServiceConfigArgs{...}
type ApiHttpVpcServiceConfigInput interface {
	pulumi.Input

	ToApiHttpVpcServiceConfigOutput() ApiHttpVpcServiceConfigOutput
	ToApiHttpVpcServiceConfigOutputWithContext(context.Context) ApiHttpVpcServiceConfigOutput
}

type ApiHttpVpcServiceConfigArgs struct {
	// The name of aone.
	AoneName pulumi.StringPtrInput `pulumi:"aoneName"`
	// The http method of backend service.
	Method pulumi.StringInput `pulumi:"method"`
	// The name of vpc instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The path of backend service.
	Path pulumi.StringInput `pulumi:"path"`
	// Backend service time-out time. Unit: millisecond.
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

func (ApiHttpVpcServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHttpVpcServiceConfig)(nil)).Elem()
}

func (i ApiHttpVpcServiceConfigArgs) ToApiHttpVpcServiceConfigOutput() ApiHttpVpcServiceConfigOutput {
	return i.ToApiHttpVpcServiceConfigOutputWithContext(context.Background())
}

func (i ApiHttpVpcServiceConfigArgs) ToApiHttpVpcServiceConfigOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpVpcServiceConfigOutput)
}

func (i ApiHttpVpcServiceConfigArgs) ToApiHttpVpcServiceConfigPtrOutput() ApiHttpVpcServiceConfigPtrOutput {
	return i.ToApiHttpVpcServiceConfigPtrOutputWithContext(context.Background())
}

func (i ApiHttpVpcServiceConfigArgs) ToApiHttpVpcServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpVpcServiceConfigOutput).ToApiHttpVpcServiceConfigPtrOutputWithContext(ctx)
}

// ApiHttpVpcServiceConfigPtrInput is an input type that accepts ApiHttpVpcServiceConfigArgs, ApiHttpVpcServiceConfigPtr and ApiHttpVpcServiceConfigPtrOutput values.
// You can construct a concrete instance of `ApiHttpVpcServiceConfigPtrInput` via:
//
//	        ApiHttpVpcServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiHttpVpcServiceConfigPtrInput interface {
	pulumi.Input

	ToApiHttpVpcServiceConfigPtrOutput() ApiHttpVpcServiceConfigPtrOutput
	ToApiHttpVpcServiceConfigPtrOutputWithContext(context.Context) ApiHttpVpcServiceConfigPtrOutput
}

type apiHttpVpcServiceConfigPtrType ApiHttpVpcServiceConfigArgs

func ApiHttpVpcServiceConfigPtr(v *ApiHttpVpcServiceConfigArgs) ApiHttpVpcServiceConfigPtrInput {
	return (*apiHttpVpcServiceConfigPtrType)(v)
}

func (*apiHttpVpcServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHttpVpcServiceConfig)(nil)).Elem()
}

func (i *apiHttpVpcServiceConfigPtrType) ToApiHttpVpcServiceConfigPtrOutput() ApiHttpVpcServiceConfigPtrOutput {
	return i.ToApiHttpVpcServiceConfigPtrOutputWithContext(context.Background())
}

func (i *apiHttpVpcServiceConfigPtrType) ToApiHttpVpcServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiHttpVpcServiceConfigPtrOutput)
}

type ApiHttpVpcServiceConfigOutput struct{ *pulumi.OutputState }

func (ApiHttpVpcServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiHttpVpcServiceConfig)(nil)).Elem()
}

func (o ApiHttpVpcServiceConfigOutput) ToApiHttpVpcServiceConfigOutput() ApiHttpVpcServiceConfigOutput {
	return o
}

func (o ApiHttpVpcServiceConfigOutput) ToApiHttpVpcServiceConfigOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigOutput {
	return o
}

func (o ApiHttpVpcServiceConfigOutput) ToApiHttpVpcServiceConfigPtrOutput() ApiHttpVpcServiceConfigPtrOutput {
	return o.ToApiHttpVpcServiceConfigPtrOutputWithContext(context.Background())
}

func (o ApiHttpVpcServiceConfigOutput) ToApiHttpVpcServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiHttpVpcServiceConfig) *ApiHttpVpcServiceConfig {
		return &v
	}).(ApiHttpVpcServiceConfigPtrOutput)
}

// The name of aone.
func (o ApiHttpVpcServiceConfigOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiHttpVpcServiceConfig) *string { return v.AoneName }).(pulumi.StringPtrOutput)
}

// The http method of backend service.
func (o ApiHttpVpcServiceConfigOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpVpcServiceConfig) string { return v.Method }).(pulumi.StringOutput)
}

// The name of vpc instance.
func (o ApiHttpVpcServiceConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpVpcServiceConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The path of backend service.
func (o ApiHttpVpcServiceConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiHttpVpcServiceConfig) string { return v.Path }).(pulumi.StringOutput)
}

// Backend service time-out time. Unit: millisecond.
func (o ApiHttpVpcServiceConfigOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v ApiHttpVpcServiceConfig) int { return v.Timeout }).(pulumi.IntOutput)
}

type ApiHttpVpcServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiHttpVpcServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiHttpVpcServiceConfig)(nil)).Elem()
}

func (o ApiHttpVpcServiceConfigPtrOutput) ToApiHttpVpcServiceConfigPtrOutput() ApiHttpVpcServiceConfigPtrOutput {
	return o
}

func (o ApiHttpVpcServiceConfigPtrOutput) ToApiHttpVpcServiceConfigPtrOutputWithContext(ctx context.Context) ApiHttpVpcServiceConfigPtrOutput {
	return o
}

func (o ApiHttpVpcServiceConfigPtrOutput) Elem() ApiHttpVpcServiceConfigOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) ApiHttpVpcServiceConfig {
		if v != nil {
			return *v
		}
		var ret ApiHttpVpcServiceConfig
		return ret
	}).(ApiHttpVpcServiceConfigOutput)
}

// The name of aone.
func (o ApiHttpVpcServiceConfigPtrOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.AoneName
	}).(pulumi.StringPtrOutput)
}

// The http method of backend service.
func (o ApiHttpVpcServiceConfigPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The name of vpc instance.
func (o ApiHttpVpcServiceConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The path of backend service.
func (o ApiHttpVpcServiceConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Backend service time-out time. Unit: millisecond.
func (o ApiHttpVpcServiceConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiHttpVpcServiceConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ApiMockServiceConfig struct {
	// The name of aone.
	AoneName *string `pulumi:"aoneName"`
	// The result of the mock service.
	Result string `pulumi:"result"`
}

// ApiMockServiceConfigInput is an input type that accepts ApiMockServiceConfigArgs and ApiMockServiceConfigOutput values.
// You can construct a concrete instance of `ApiMockServiceConfigInput` via:
//
//	ApiMockServiceConfigArgs{...}
type ApiMockServiceConfigInput interface {
	pulumi.Input

	ToApiMockServiceConfigOutput() ApiMockServiceConfigOutput
	ToApiMockServiceConfigOutputWithContext(context.Context) ApiMockServiceConfigOutput
}

type ApiMockServiceConfigArgs struct {
	// The name of aone.
	AoneName pulumi.StringPtrInput `pulumi:"aoneName"`
	// The result of the mock service.
	Result pulumi.StringInput `pulumi:"result"`
}

func (ApiMockServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiMockServiceConfig)(nil)).Elem()
}

func (i ApiMockServiceConfigArgs) ToApiMockServiceConfigOutput() ApiMockServiceConfigOutput {
	return i.ToApiMockServiceConfigOutputWithContext(context.Background())
}

func (i ApiMockServiceConfigArgs) ToApiMockServiceConfigOutputWithContext(ctx context.Context) ApiMockServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMockServiceConfigOutput)
}

func (i ApiMockServiceConfigArgs) ToApiMockServiceConfigPtrOutput() ApiMockServiceConfigPtrOutput {
	return i.ToApiMockServiceConfigPtrOutputWithContext(context.Background())
}

func (i ApiMockServiceConfigArgs) ToApiMockServiceConfigPtrOutputWithContext(ctx context.Context) ApiMockServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMockServiceConfigOutput).ToApiMockServiceConfigPtrOutputWithContext(ctx)
}

// ApiMockServiceConfigPtrInput is an input type that accepts ApiMockServiceConfigArgs, ApiMockServiceConfigPtr and ApiMockServiceConfigPtrOutput values.
// You can construct a concrete instance of `ApiMockServiceConfigPtrInput` via:
//
//	        ApiMockServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ApiMockServiceConfigPtrInput interface {
	pulumi.Input

	ToApiMockServiceConfigPtrOutput() ApiMockServiceConfigPtrOutput
	ToApiMockServiceConfigPtrOutputWithContext(context.Context) ApiMockServiceConfigPtrOutput
}

type apiMockServiceConfigPtrType ApiMockServiceConfigArgs

func ApiMockServiceConfigPtr(v *ApiMockServiceConfigArgs) ApiMockServiceConfigPtrInput {
	return (*apiMockServiceConfigPtrType)(v)
}

func (*apiMockServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiMockServiceConfig)(nil)).Elem()
}

func (i *apiMockServiceConfigPtrType) ToApiMockServiceConfigPtrOutput() ApiMockServiceConfigPtrOutput {
	return i.ToApiMockServiceConfigPtrOutputWithContext(context.Background())
}

func (i *apiMockServiceConfigPtrType) ToApiMockServiceConfigPtrOutputWithContext(ctx context.Context) ApiMockServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMockServiceConfigPtrOutput)
}

type ApiMockServiceConfigOutput struct{ *pulumi.OutputState }

func (ApiMockServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiMockServiceConfig)(nil)).Elem()
}

func (o ApiMockServiceConfigOutput) ToApiMockServiceConfigOutput() ApiMockServiceConfigOutput {
	return o
}

func (o ApiMockServiceConfigOutput) ToApiMockServiceConfigOutputWithContext(ctx context.Context) ApiMockServiceConfigOutput {
	return o
}

func (o ApiMockServiceConfigOutput) ToApiMockServiceConfigPtrOutput() ApiMockServiceConfigPtrOutput {
	return o.ToApiMockServiceConfigPtrOutputWithContext(context.Background())
}

func (o ApiMockServiceConfigOutput) ToApiMockServiceConfigPtrOutputWithContext(ctx context.Context) ApiMockServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiMockServiceConfig) *ApiMockServiceConfig {
		return &v
	}).(ApiMockServiceConfigPtrOutput)
}

// The name of aone.
func (o ApiMockServiceConfigOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiMockServiceConfig) *string { return v.AoneName }).(pulumi.StringPtrOutput)
}

// The result of the mock service.
func (o ApiMockServiceConfigOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ApiMockServiceConfig) string { return v.Result }).(pulumi.StringOutput)
}

type ApiMockServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiMockServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiMockServiceConfig)(nil)).Elem()
}

func (o ApiMockServiceConfigPtrOutput) ToApiMockServiceConfigPtrOutput() ApiMockServiceConfigPtrOutput {
	return o
}

func (o ApiMockServiceConfigPtrOutput) ToApiMockServiceConfigPtrOutputWithContext(ctx context.Context) ApiMockServiceConfigPtrOutput {
	return o
}

func (o ApiMockServiceConfigPtrOutput) Elem() ApiMockServiceConfigOutput {
	return o.ApplyT(func(v *ApiMockServiceConfig) ApiMockServiceConfig {
		if v != nil {
			return *v
		}
		var ret ApiMockServiceConfig
		return ret
	}).(ApiMockServiceConfigOutput)
}

// The name of aone.
func (o ApiMockServiceConfigPtrOutput) AoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiMockServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.AoneName
	}).(pulumi.StringPtrOutput)
}

// The result of the mock service.
func (o ApiMockServiceConfigPtrOutput) Result() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiMockServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Result
	}).(pulumi.StringPtrOutput)
}

type ApiRequestConfig struct {
	// The body format of the api, which support the values of 'STREAM' and 'FORM'.
	BodyFormat *string `pulumi:"bodyFormat"`
	// The method of the api, including 'GET','POST','PUT' etc.
	Method string `pulumi:"method"`
	// The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'.
	Mode string `pulumi:"mode"`
	// The request path of the api.
	Path string `pulumi:"path"`
	// The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'.
	Protocol string `pulumi:"protocol"`
}

// ApiRequestConfigInput is an input type that accepts ApiRequestConfigArgs and ApiRequestConfigOutput values.
// You can construct a concrete instance of `ApiRequestConfigInput` via:
//
//	ApiRequestConfigArgs{...}
type ApiRequestConfigInput interface {
	pulumi.Input

	ToApiRequestConfigOutput() ApiRequestConfigOutput
	ToApiRequestConfigOutputWithContext(context.Context) ApiRequestConfigOutput
}

type ApiRequestConfigArgs struct {
	// The body format of the api, which support the values of 'STREAM' and 'FORM'.
	BodyFormat pulumi.StringPtrInput `pulumi:"bodyFormat"`
	// The method of the api, including 'GET','POST','PUT' etc.
	Method pulumi.StringInput `pulumi:"method"`
	// The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The request path of the api.
	Path pulumi.StringInput `pulumi:"path"`
	// The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (ApiRequestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiRequestConfig)(nil)).Elem()
}

func (i ApiRequestConfigArgs) ToApiRequestConfigOutput() ApiRequestConfigOutput {
	return i.ToApiRequestConfigOutputWithContext(context.Background())
}

func (i ApiRequestConfigArgs) ToApiRequestConfigOutputWithContext(ctx context.Context) ApiRequestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRequestConfigOutput)
}

func (i ApiRequestConfigArgs) ToApiRequestConfigPtrOutput() ApiRequestConfigPtrOutput {
	return i.ToApiRequestConfigPtrOutputWithContext(context.Background())
}

func (i ApiRequestConfigArgs) ToApiRequestConfigPtrOutputWithContext(ctx context.Context) ApiRequestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRequestConfigOutput).ToApiRequestConfigPtrOutputWithContext(ctx)
}

// ApiRequestConfigPtrInput is an input type that accepts ApiRequestConfigArgs, ApiRequestConfigPtr and ApiRequestConfigPtrOutput values.
// You can construct a concrete instance of `ApiRequestConfigPtrInput` via:
//
//	        ApiRequestConfigArgs{...}
//
//	or:
//
//	        nil
type ApiRequestConfigPtrInput interface {
	pulumi.Input

	ToApiRequestConfigPtrOutput() ApiRequestConfigPtrOutput
	ToApiRequestConfigPtrOutputWithContext(context.Context) ApiRequestConfigPtrOutput
}

type apiRequestConfigPtrType ApiRequestConfigArgs

func ApiRequestConfigPtr(v *ApiRequestConfigArgs) ApiRequestConfigPtrInput {
	return (*apiRequestConfigPtrType)(v)
}

func (*apiRequestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRequestConfig)(nil)).Elem()
}

func (i *apiRequestConfigPtrType) ToApiRequestConfigPtrOutput() ApiRequestConfigPtrOutput {
	return i.ToApiRequestConfigPtrOutputWithContext(context.Background())
}

func (i *apiRequestConfigPtrType) ToApiRequestConfigPtrOutputWithContext(ctx context.Context) ApiRequestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRequestConfigPtrOutput)
}

type ApiRequestConfigOutput struct{ *pulumi.OutputState }

func (ApiRequestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiRequestConfig)(nil)).Elem()
}

func (o ApiRequestConfigOutput) ToApiRequestConfigOutput() ApiRequestConfigOutput {
	return o
}

func (o ApiRequestConfigOutput) ToApiRequestConfigOutputWithContext(ctx context.Context) ApiRequestConfigOutput {
	return o
}

func (o ApiRequestConfigOutput) ToApiRequestConfigPtrOutput() ApiRequestConfigPtrOutput {
	return o.ToApiRequestConfigPtrOutputWithContext(context.Background())
}

func (o ApiRequestConfigOutput) ToApiRequestConfigPtrOutputWithContext(ctx context.Context) ApiRequestConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiRequestConfig) *ApiRequestConfig {
		return &v
	}).(ApiRequestConfigPtrOutput)
}

// The body format of the api, which support the values of 'STREAM' and 'FORM'.
func (o ApiRequestConfigOutput) BodyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiRequestConfig) *string { return v.BodyFormat }).(pulumi.StringPtrOutput)
}

// The method of the api, including 'GET','POST','PUT' etc.
func (o ApiRequestConfigOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestConfig) string { return v.Method }).(pulumi.StringOutput)
}

// The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'.
func (o ApiRequestConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// The request path of the api.
func (o ApiRequestConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'.
func (o ApiRequestConfigOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestConfig) string { return v.Protocol }).(pulumi.StringOutput)
}

type ApiRequestConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiRequestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRequestConfig)(nil)).Elem()
}

func (o ApiRequestConfigPtrOutput) ToApiRequestConfigPtrOutput() ApiRequestConfigPtrOutput {
	return o
}

func (o ApiRequestConfigPtrOutput) ToApiRequestConfigPtrOutputWithContext(ctx context.Context) ApiRequestConfigPtrOutput {
	return o
}

func (o ApiRequestConfigPtrOutput) Elem() ApiRequestConfigOutput {
	return o.ApplyT(func(v *ApiRequestConfig) ApiRequestConfig {
		if v != nil {
			return *v
		}
		var ret ApiRequestConfig
		return ret
	}).(ApiRequestConfigOutput)
}

// The body format of the api, which support the values of 'STREAM' and 'FORM'.
func (o ApiRequestConfigPtrOutput) BodyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRequestConfig) *string {
		if v == nil {
			return nil
		}
		return v.BodyFormat
	}).(pulumi.StringPtrOutput)
}

// The method of the api, including 'GET','POST','PUT' etc.
func (o ApiRequestConfigPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRequestConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The mode of the parameters between request parameters and service parameters, which support the values of 'MAPPING' and 'PASSTHROUGH'.
func (o ApiRequestConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRequestConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The request path of the api.
func (o ApiRequestConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRequestConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The protocol of api which supports values of 'HTTP','HTTPS' or 'HTTP,HTTPS'.
func (o ApiRequestConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRequestConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

type ApiRequestParameter struct {
	// The default value of the parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// The description of parameter.
	Description *string `pulumi:"description"`
	// Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
	In string `pulumi:"in"`
	// Backend service's parameter location; values: BODY, HEAD, QUERY, and PATH.
	InService string `pulumi:"inService"`
	// Request's parameter name.
	Name string `pulumi:"name"`
	// Backend service's parameter name.
	NameService string `pulumi:"nameService"`
	// Parameter required or not; values: REQUIRED and OPTIONAL.
	Required string `pulumi:"required"`
	// Parameter type which supports values of 'STRING','INT','BOOLEAN','LONG',"FLOAT" and "DOUBLE".
	Type string `pulumi:"type"`
}

// ApiRequestParameterInput is an input type that accepts ApiRequestParameterArgs and ApiRequestParameterOutput values.
// You can construct a concrete instance of `ApiRequestParameterInput` via:
//
//	ApiRequestParameterArgs{...}
type ApiRequestParameterInput interface {
	pulumi.Input

	ToApiRequestParameterOutput() ApiRequestParameterOutput
	ToApiRequestParameterOutputWithContext(context.Context) ApiRequestParameterOutput
}

type ApiRequestParameterArgs struct {
	// The default value of the parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// The description of parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
	In pulumi.StringInput `pulumi:"in"`
	// Backend service's parameter location; values: BODY, HEAD, QUERY, and PATH.
	InService pulumi.StringInput `pulumi:"inService"`
	// Request's parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backend service's parameter name.
	NameService pulumi.StringInput `pulumi:"nameService"`
	// Parameter required or not; values: REQUIRED and OPTIONAL.
	Required pulumi.StringInput `pulumi:"required"`
	// Parameter type which supports values of 'STRING','INT','BOOLEAN','LONG',"FLOAT" and "DOUBLE".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiRequestParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiRequestParameter)(nil)).Elem()
}

func (i ApiRequestParameterArgs) ToApiRequestParameterOutput() ApiRequestParameterOutput {
	return i.ToApiRequestParameterOutputWithContext(context.Background())
}

func (i ApiRequestParameterArgs) ToApiRequestParameterOutputWithContext(ctx context.Context) ApiRequestParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRequestParameterOutput)
}

// ApiRequestParameterArrayInput is an input type that accepts ApiRequestParameterArray and ApiRequestParameterArrayOutput values.
// You can construct a concrete instance of `ApiRequestParameterArrayInput` via:
//
//	ApiRequestParameterArray{ ApiRequestParameterArgs{...} }
type ApiRequestParameterArrayInput interface {
	pulumi.Input

	ToApiRequestParameterArrayOutput() ApiRequestParameterArrayOutput
	ToApiRequestParameterArrayOutputWithContext(context.Context) ApiRequestParameterArrayOutput
}

type ApiRequestParameterArray []ApiRequestParameterInput

func (ApiRequestParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiRequestParameter)(nil)).Elem()
}

func (i ApiRequestParameterArray) ToApiRequestParameterArrayOutput() ApiRequestParameterArrayOutput {
	return i.ToApiRequestParameterArrayOutputWithContext(context.Background())
}

func (i ApiRequestParameterArray) ToApiRequestParameterArrayOutputWithContext(ctx context.Context) ApiRequestParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRequestParameterArrayOutput)
}

type ApiRequestParameterOutput struct{ *pulumi.OutputState }

func (ApiRequestParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiRequestParameter)(nil)).Elem()
}

func (o ApiRequestParameterOutput) ToApiRequestParameterOutput() ApiRequestParameterOutput {
	return o
}

func (o ApiRequestParameterOutput) ToApiRequestParameterOutputWithContext(ctx context.Context) ApiRequestParameterOutput {
	return o
}

// The default value of the parameter.
func (o ApiRequestParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiRequestParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The description of parameter.
func (o ApiRequestParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiRequestParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Request's parameter location; values: BODY, HEAD, QUERY, and PATH.
func (o ApiRequestParameterOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.In }).(pulumi.StringOutput)
}

// Backend service's parameter location; values: BODY, HEAD, QUERY, and PATH.
func (o ApiRequestParameterOutput) InService() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.InService }).(pulumi.StringOutput)
}

// Request's parameter name.
func (o ApiRequestParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Backend service's parameter name.
func (o ApiRequestParameterOutput) NameService() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.NameService }).(pulumi.StringOutput)
}

// Parameter required or not; values: REQUIRED and OPTIONAL.
func (o ApiRequestParameterOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.Required }).(pulumi.StringOutput)
}

// Parameter type which supports values of 'STRING','INT','BOOLEAN','LONG',"FLOAT" and "DOUBLE".
func (o ApiRequestParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiRequestParameter) string { return v.Type }).(pulumi.StringOutput)
}

type ApiRequestParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiRequestParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiRequestParameter)(nil)).Elem()
}

func (o ApiRequestParameterArrayOutput) ToApiRequestParameterArrayOutput() ApiRequestParameterArrayOutput {
	return o
}

func (o ApiRequestParameterArrayOutput) ToApiRequestParameterArrayOutputWithContext(ctx context.Context) ApiRequestParameterArrayOutput {
	return o
}

func (o ApiRequestParameterArrayOutput) Index(i pulumi.IntInput) ApiRequestParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiRequestParameter {
		return vs[0].([]ApiRequestParameter)[vs[1].(int)]
	}).(ApiRequestParameterOutput)
}

type ApiSystemParameter struct {
	// System parameter location; values: 'HEAD' and 'QUERY'.
	In string `pulumi:"in"`
	// System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html).
	Name string `pulumi:"name"`
	// Backend service's parameter name.
	NameService string `pulumi:"nameService"`
}

// ApiSystemParameterInput is an input type that accepts ApiSystemParameterArgs and ApiSystemParameterOutput values.
// You can construct a concrete instance of `ApiSystemParameterInput` via:
//
//	ApiSystemParameterArgs{...}
type ApiSystemParameterInput interface {
	pulumi.Input

	ToApiSystemParameterOutput() ApiSystemParameterOutput
	ToApiSystemParameterOutputWithContext(context.Context) ApiSystemParameterOutput
}

type ApiSystemParameterArgs struct {
	// System parameter location; values: 'HEAD' and 'QUERY'.
	In pulumi.StringInput `pulumi:"in"`
	// System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Backend service's parameter name.
	NameService pulumi.StringInput `pulumi:"nameService"`
}

func (ApiSystemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSystemParameter)(nil)).Elem()
}

func (i ApiSystemParameterArgs) ToApiSystemParameterOutput() ApiSystemParameterOutput {
	return i.ToApiSystemParameterOutputWithContext(context.Background())
}

func (i ApiSystemParameterArgs) ToApiSystemParameterOutputWithContext(ctx context.Context) ApiSystemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSystemParameterOutput)
}

// ApiSystemParameterArrayInput is an input type that accepts ApiSystemParameterArray and ApiSystemParameterArrayOutput values.
// You can construct a concrete instance of `ApiSystemParameterArrayInput` via:
//
//	ApiSystemParameterArray{ ApiSystemParameterArgs{...} }
type ApiSystemParameterArrayInput interface {
	pulumi.Input

	ToApiSystemParameterArrayOutput() ApiSystemParameterArrayOutput
	ToApiSystemParameterArrayOutputWithContext(context.Context) ApiSystemParameterArrayOutput
}

type ApiSystemParameterArray []ApiSystemParameterInput

func (ApiSystemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiSystemParameter)(nil)).Elem()
}

func (i ApiSystemParameterArray) ToApiSystemParameterArrayOutput() ApiSystemParameterArrayOutput {
	return i.ToApiSystemParameterArrayOutputWithContext(context.Background())
}

func (i ApiSystemParameterArray) ToApiSystemParameterArrayOutputWithContext(ctx context.Context) ApiSystemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSystemParameterArrayOutput)
}

type ApiSystemParameterOutput struct{ *pulumi.OutputState }

func (ApiSystemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSystemParameter)(nil)).Elem()
}

func (o ApiSystemParameterOutput) ToApiSystemParameterOutput() ApiSystemParameterOutput {
	return o
}

func (o ApiSystemParameterOutput) ToApiSystemParameterOutputWithContext(ctx context.Context) ApiSystemParameterOutput {
	return o
}

// System parameter location; values: 'HEAD' and 'QUERY'.
func (o ApiSystemParameterOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSystemParameter) string { return v.In }).(pulumi.StringOutput)
}

// System parameter name which supports values including in [system parameter list](https://www.alibabacloud.com/help/doc-detail/43677.html).
func (o ApiSystemParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSystemParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Backend service's parameter name.
func (o ApiSystemParameterOutput) NameService() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSystemParameter) string { return v.NameService }).(pulumi.StringOutput)
}

type ApiSystemParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiSystemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiSystemParameter)(nil)).Elem()
}

func (o ApiSystemParameterArrayOutput) ToApiSystemParameterArrayOutput() ApiSystemParameterArrayOutput {
	return o
}

func (o ApiSystemParameterArrayOutput) ToApiSystemParameterArrayOutputWithContext(ctx context.Context) ApiSystemParameterArrayOutput {
	return o
}

func (o ApiSystemParameterArrayOutput) Index(i pulumi.IntInput) ApiSystemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiSystemParameter {
		return vs[0].([]ApiSystemParameter)[vs[1].(int)]
	}).(ApiSystemParameterOutput)
}

type GetApisApi struct {
	// API description.
	Description string `pulumi:"description"`
	// ID of the specified group.
	GroupId string `pulumi:"groupId"`
	// The group name that the apis belong to.
	GroupName string `pulumi:"groupName"`
	// API ID, which is generated by the system and globally unique.
	Id string `pulumi:"id"`
	// API name.
	Name string `pulumi:"name"`
	// The ID of the region where the API is located.
	RegionId string `pulumi:"regionId"`
}

// GetApisApiInput is an input type that accepts GetApisApiArgs and GetApisApiOutput values.
// You can construct a concrete instance of `GetApisApiInput` via:
//
//	GetApisApiArgs{...}
type GetApisApiInput interface {
	pulumi.Input

	ToGetApisApiOutput() GetApisApiOutput
	ToGetApisApiOutputWithContext(context.Context) GetApisApiOutput
}

type GetApisApiArgs struct {
	// API description.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the specified group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The group name that the apis belong to.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// API ID, which is generated by the system and globally unique.
	Id pulumi.StringInput `pulumi:"id"`
	// API name.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the region where the API is located.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (GetApisApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApisApi)(nil)).Elem()
}

func (i GetApisApiArgs) ToGetApisApiOutput() GetApisApiOutput {
	return i.ToGetApisApiOutputWithContext(context.Background())
}

func (i GetApisApiArgs) ToGetApisApiOutputWithContext(ctx context.Context) GetApisApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApisApiOutput)
}

// GetApisApiArrayInput is an input type that accepts GetApisApiArray and GetApisApiArrayOutput values.
// You can construct a concrete instance of `GetApisApiArrayInput` via:
//
//	GetApisApiArray{ GetApisApiArgs{...} }
type GetApisApiArrayInput interface {
	pulumi.Input

	ToGetApisApiArrayOutput() GetApisApiArrayOutput
	ToGetApisApiArrayOutputWithContext(context.Context) GetApisApiArrayOutput
}

type GetApisApiArray []GetApisApiInput

func (GetApisApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApisApi)(nil)).Elem()
}

func (i GetApisApiArray) ToGetApisApiArrayOutput() GetApisApiArrayOutput {
	return i.ToGetApisApiArrayOutputWithContext(context.Background())
}

func (i GetApisApiArray) ToGetApisApiArrayOutputWithContext(ctx context.Context) GetApisApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApisApiArrayOutput)
}

type GetApisApiOutput struct{ *pulumi.OutputState }

func (GetApisApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApisApi)(nil)).Elem()
}

func (o GetApisApiOutput) ToGetApisApiOutput() GetApisApiOutput {
	return o
}

func (o GetApisApiOutput) ToGetApisApiOutputWithContext(ctx context.Context) GetApisApiOutput {
	return o
}

// API description.
func (o GetApisApiOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the specified group.
func (o GetApisApiOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.GroupId }).(pulumi.StringOutput)
}

// The group name that the apis belong to.
func (o GetApisApiOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.GroupName }).(pulumi.StringOutput)
}

// API ID, which is generated by the system and globally unique.
func (o GetApisApiOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.Id }).(pulumi.StringOutput)
}

// API name.
func (o GetApisApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the region where the API is located.
func (o GetApisApiOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApisApi) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetApisApiArrayOutput struct{ *pulumi.OutputState }

func (GetApisApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApisApi)(nil)).Elem()
}

func (o GetApisApiArrayOutput) ToGetApisApiArrayOutput() GetApisApiArrayOutput {
	return o
}

func (o GetApisApiArrayOutput) ToGetApisApiArrayOutputWithContext(ctx context.Context) GetApisApiArrayOutput {
	return o
}

func (o GetApisApiArrayOutput) Index(i pulumi.IntInput) GetApisApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApisApi {
		return vs[0].([]GetApisApi)[vs[1].(int)]
	}).(GetApisApiOutput)
}

type GetAppsApp struct {
	// App code.
	AppCode string `pulumi:"appCode"`
	// Creation time (Greenwich mean time).
	CreatedTime string `pulumi:"createdTime"`
	// App description.
	Description string `pulumi:"description"`
	// App ID, which is generated by the system and globally unique.
	Id int `pulumi:"id"`
	// Last modification time (Greenwich mean time).
	ModifiedTime string `pulumi:"modifiedTime"`
	// App name.
	Name string `pulumi:"name"`
}

// GetAppsAppInput is an input type that accepts GetAppsAppArgs and GetAppsAppOutput values.
// You can construct a concrete instance of `GetAppsAppInput` via:
//
//	GetAppsAppArgs{...}
type GetAppsAppInput interface {
	pulumi.Input

	ToGetAppsAppOutput() GetAppsAppOutput
	ToGetAppsAppOutputWithContext(context.Context) GetAppsAppOutput
}

type GetAppsAppArgs struct {
	// App code.
	AppCode pulumi.StringInput `pulumi:"appCode"`
	// Creation time (Greenwich mean time).
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// App description.
	Description pulumi.StringInput `pulumi:"description"`
	// App ID, which is generated by the system and globally unique.
	Id pulumi.IntInput `pulumi:"id"`
	// Last modification time (Greenwich mean time).
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// App name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAppsAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsApp)(nil)).Elem()
}

func (i GetAppsAppArgs) ToGetAppsAppOutput() GetAppsAppOutput {
	return i.ToGetAppsAppOutputWithContext(context.Background())
}

func (i GetAppsAppArgs) ToGetAppsAppOutputWithContext(ctx context.Context) GetAppsAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppsAppOutput)
}

// GetAppsAppArrayInput is an input type that accepts GetAppsAppArray and GetAppsAppArrayOutput values.
// You can construct a concrete instance of `GetAppsAppArrayInput` via:
//
//	GetAppsAppArray{ GetAppsAppArgs{...} }
type GetAppsAppArrayInput interface {
	pulumi.Input

	ToGetAppsAppArrayOutput() GetAppsAppArrayOutput
	ToGetAppsAppArrayOutputWithContext(context.Context) GetAppsAppArrayOutput
}

type GetAppsAppArray []GetAppsAppInput

func (GetAppsAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppsApp)(nil)).Elem()
}

func (i GetAppsAppArray) ToGetAppsAppArrayOutput() GetAppsAppArrayOutput {
	return i.ToGetAppsAppArrayOutputWithContext(context.Background())
}

func (i GetAppsAppArray) ToGetAppsAppArrayOutputWithContext(ctx context.Context) GetAppsAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppsAppArrayOutput)
}

type GetAppsAppOutput struct{ *pulumi.OutputState }

func (GetAppsAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppsApp)(nil)).Elem()
}

func (o GetAppsAppOutput) ToGetAppsAppOutput() GetAppsAppOutput {
	return o
}

func (o GetAppsAppOutput) ToGetAppsAppOutputWithContext(ctx context.Context) GetAppsAppOutput {
	return o
}

// App code.
func (o GetAppsAppOutput) AppCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsApp) string { return v.AppCode }).(pulumi.StringOutput)
}

// Creation time (Greenwich mean time).
func (o GetAppsAppOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsApp) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// App description.
func (o GetAppsAppOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsApp) string { return v.Description }).(pulumi.StringOutput)
}

// App ID, which is generated by the system and globally unique.
func (o GetAppsAppOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppsApp) int { return v.Id }).(pulumi.IntOutput)
}

// Last modification time (Greenwich mean time).
func (o GetAppsAppOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsApp) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// App name.
func (o GetAppsAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppsApp) string { return v.Name }).(pulumi.StringOutput)
}

type GetAppsAppArrayOutput struct{ *pulumi.OutputState }

func (GetAppsAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppsApp)(nil)).Elem()
}

func (o GetAppsAppArrayOutput) ToGetAppsAppArrayOutput() GetAppsAppArrayOutput {
	return o
}

func (o GetAppsAppArrayOutput) ToGetAppsAppArrayOutputWithContext(ctx context.Context) GetAppsAppArrayOutput {
	return o
}

func (o GetAppsAppArrayOutput) Index(i pulumi.IntInput) GetAppsAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppsApp {
		return vs[0].([]GetAppsApp)[vs[1].(int)]
	}).(GetAppsAppOutput)
}

type GetBackendsBackend struct {
	// The id of the Backend.
	BackendId string `pulumi:"backendId"`
	// The name of the Backend.
	BackendName string `pulumi:"backendName"`
	// The type of the Backend.
	BackendType string `pulumi:"backendType"`
	// The created time of the Backend.
	CreateTime string `pulumi:"createTime"`
	// The description of the Backend.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The modified time of the Backend.
	ModifiedTime string `pulumi:"modifiedTime"`
}

// GetBackendsBackendInput is an input type that accepts GetBackendsBackendArgs and GetBackendsBackendOutput values.
// You can construct a concrete instance of `GetBackendsBackendInput` via:
//
//	GetBackendsBackendArgs{...}
type GetBackendsBackendInput interface {
	pulumi.Input

	ToGetBackendsBackendOutput() GetBackendsBackendOutput
	ToGetBackendsBackendOutputWithContext(context.Context) GetBackendsBackendOutput
}

type GetBackendsBackendArgs struct {
	// The id of the Backend.
	BackendId pulumi.StringInput `pulumi:"backendId"`
	// The name of the Backend.
	BackendName pulumi.StringInput `pulumi:"backendName"`
	// The type of the Backend.
	BackendType pulumi.StringInput `pulumi:"backendType"`
	// The created time of the Backend.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Backend.
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.StringInput `pulumi:"id"`
	// The modified time of the Backend.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
}

func (GetBackendsBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackend)(nil)).Elem()
}

func (i GetBackendsBackendArgs) ToGetBackendsBackendOutput() GetBackendsBackendOutput {
	return i.ToGetBackendsBackendOutputWithContext(context.Background())
}

func (i GetBackendsBackendArgs) ToGetBackendsBackendOutputWithContext(ctx context.Context) GetBackendsBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendOutput)
}

// GetBackendsBackendArrayInput is an input type that accepts GetBackendsBackendArray and GetBackendsBackendArrayOutput values.
// You can construct a concrete instance of `GetBackendsBackendArrayInput` via:
//
//	GetBackendsBackendArray{ GetBackendsBackendArgs{...} }
type GetBackendsBackendArrayInput interface {
	pulumi.Input

	ToGetBackendsBackendArrayOutput() GetBackendsBackendArrayOutput
	ToGetBackendsBackendArrayOutputWithContext(context.Context) GetBackendsBackendArrayOutput
}

type GetBackendsBackendArray []GetBackendsBackendInput

func (GetBackendsBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackend)(nil)).Elem()
}

func (i GetBackendsBackendArray) ToGetBackendsBackendArrayOutput() GetBackendsBackendArrayOutput {
	return i.ToGetBackendsBackendArrayOutputWithContext(context.Background())
}

func (i GetBackendsBackendArray) ToGetBackendsBackendArrayOutputWithContext(ctx context.Context) GetBackendsBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendsBackendArrayOutput)
}

type GetBackendsBackendOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendsBackend)(nil)).Elem()
}

func (o GetBackendsBackendOutput) ToGetBackendsBackendOutput() GetBackendsBackendOutput {
	return o
}

func (o GetBackendsBackendOutput) ToGetBackendsBackendOutputWithContext(ctx context.Context) GetBackendsBackendOutput {
	return o
}

// The id of the Backend.
func (o GetBackendsBackendOutput) BackendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.BackendId }).(pulumi.StringOutput)
}

// The name of the Backend.
func (o GetBackendsBackendOutput) BackendName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.BackendName }).(pulumi.StringOutput)
}

// The type of the Backend.
func (o GetBackendsBackendOutput) BackendType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.BackendType }).(pulumi.StringOutput)
}

// The created time of the Backend.
func (o GetBackendsBackendOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Backend.
func (o GetBackendsBackendOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetBackendsBackendOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.Id }).(pulumi.StringOutput)
}

// The modified time of the Backend.
func (o GetBackendsBackendOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendsBackend) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

type GetBackendsBackendArrayOutput struct{ *pulumi.OutputState }

func (GetBackendsBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendsBackend)(nil)).Elem()
}

func (o GetBackendsBackendArrayOutput) ToGetBackendsBackendArrayOutput() GetBackendsBackendArrayOutput {
	return o
}

func (o GetBackendsBackendArrayOutput) ToGetBackendsBackendArrayOutputWithContext(ctx context.Context) GetBackendsBackendArrayOutput {
	return o
}

func (o GetBackendsBackendArrayOutput) Index(i pulumi.IntInput) GetBackendsBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendsBackend {
		return vs[0].([]GetBackendsBackend)[vs[1].(int)]
	}).(GetBackendsBackendOutput)
}

type GetGroupsGroup struct {
	// Billing status.
	// - NORMAL: The API group is normal.
	// - LOCKED: Locked due to outstanding payment.
	BillingStatus string `pulumi:"billingStatus"`
	// Creation time (Greenwich mean time).
	CreatedTime string `pulumi:"createdTime"`
	// API group description.
	Description string `pulumi:"description"`
	// API group ID, which is generated by the system and globally unique.
	Id string `pulumi:"id"`
	// Locking in invalid state.
	// - NORMAL: The API group is normal.
	// - LOCKED: Locked due to illegality.
	IllegalStatus string `pulumi:"illegalStatus"`
	// Last modification time (Greenwich mean time).
	ModifiedTime string `pulumi:"modifiedTime"`
	// API group name.
	Name string `pulumi:"name"`
	// The ID of the region where the API group is located.
	RegionId string `pulumi:"regionId"`
	// Second-level domain name automatically assigned to the API group.
	SubDomain string `pulumi:"subDomain"`
	// Upper QPS limit of the API group; default value: 500, which can be increased by submitting an application.
	TrafficLimit int `pulumi:"trafficLimit"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//	GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// Billing status.
	// - NORMAL: The API group is normal.
	// - LOCKED: Locked due to outstanding payment.
	BillingStatus pulumi.StringInput `pulumi:"billingStatus"`
	// Creation time (Greenwich mean time).
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// API group description.
	Description pulumi.StringInput `pulumi:"description"`
	// API group ID, which is generated by the system and globally unique.
	Id pulumi.StringInput `pulumi:"id"`
	// Locking in invalid state.
	// - NORMAL: The API group is normal.
	// - LOCKED: Locked due to illegality.
	IllegalStatus pulumi.StringInput `pulumi:"illegalStatus"`
	// Last modification time (Greenwich mean time).
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// API group name.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the region where the API group is located.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Second-level domain name automatically assigned to the API group.
	SubDomain pulumi.StringInput `pulumi:"subDomain"`
	// Upper QPS limit of the API group; default value: 500, which can be increased by submitting an application.
	TrafficLimit pulumi.IntInput `pulumi:"trafficLimit"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//	GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// Billing status.
// - NORMAL: The API group is normal.
// - LOCKED: Locked due to outstanding payment.
func (o GetGroupsGroupOutput) BillingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.BillingStatus }).(pulumi.StringOutput)
}

// Creation time (Greenwich mean time).
func (o GetGroupsGroupOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// API group description.
func (o GetGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// API group ID, which is generated by the system and globally unique.
func (o GetGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Locking in invalid state.
// - NORMAL: The API group is normal.
// - LOCKED: Locked due to illegality.
func (o GetGroupsGroupOutput) IllegalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.IllegalStatus }).(pulumi.StringOutput)
}

// Last modification time (Greenwich mean time).
func (o GetGroupsGroupOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// API group name.
func (o GetGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the region where the API group is located.
func (o GetGroupsGroupOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.RegionId }).(pulumi.StringOutput)
}

// Second-level domain name automatically assigned to the API group.
func (o GetGroupsGroupOutput) SubDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.SubDomain }).(pulumi.StringOutput)
}

// Upper QPS limit of the API group; default value: 500, which can be increased by submitting an application.
func (o GetGroupsGroupOutput) TrafficLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupsGroup) int { return v.TrafficLimit }).(pulumi.IntOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetLogConfigsConfig struct {
	// The ID of the Log Config.
	Id string `pulumi:"id"`
	// The type the of log.
	LogType string `pulumi:"logType"`
	// The region ID of the Log Config.
	RegionId string `pulumi:"regionId"`
	// The name of the Log Store.
	SlsLogStore string `pulumi:"slsLogStore"`
	// The name of the Project.
	SlsProject string `pulumi:"slsProject"`
}

// GetLogConfigsConfigInput is an input type that accepts GetLogConfigsConfigArgs and GetLogConfigsConfigOutput values.
// You can construct a concrete instance of `GetLogConfigsConfigInput` via:
//
//	GetLogConfigsConfigArgs{...}
type GetLogConfigsConfigInput interface {
	pulumi.Input

	ToGetLogConfigsConfigOutput() GetLogConfigsConfigOutput
	ToGetLogConfigsConfigOutputWithContext(context.Context) GetLogConfigsConfigOutput
}

type GetLogConfigsConfigArgs struct {
	// The ID of the Log Config.
	Id pulumi.StringInput `pulumi:"id"`
	// The type the of log.
	LogType pulumi.StringInput `pulumi:"logType"`
	// The region ID of the Log Config.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The name of the Log Store.
	SlsLogStore pulumi.StringInput `pulumi:"slsLogStore"`
	// The name of the Project.
	SlsProject pulumi.StringInput `pulumi:"slsProject"`
}

func (GetLogConfigsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogConfigsConfig)(nil)).Elem()
}

func (i GetLogConfigsConfigArgs) ToGetLogConfigsConfigOutput() GetLogConfigsConfigOutput {
	return i.ToGetLogConfigsConfigOutputWithContext(context.Background())
}

func (i GetLogConfigsConfigArgs) ToGetLogConfigsConfigOutputWithContext(ctx context.Context) GetLogConfigsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogConfigsConfigOutput)
}

// GetLogConfigsConfigArrayInput is an input type that accepts GetLogConfigsConfigArray and GetLogConfigsConfigArrayOutput values.
// You can construct a concrete instance of `GetLogConfigsConfigArrayInput` via:
//
//	GetLogConfigsConfigArray{ GetLogConfigsConfigArgs{...} }
type GetLogConfigsConfigArrayInput interface {
	pulumi.Input

	ToGetLogConfigsConfigArrayOutput() GetLogConfigsConfigArrayOutput
	ToGetLogConfigsConfigArrayOutputWithContext(context.Context) GetLogConfigsConfigArrayOutput
}

type GetLogConfigsConfigArray []GetLogConfigsConfigInput

func (GetLogConfigsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogConfigsConfig)(nil)).Elem()
}

func (i GetLogConfigsConfigArray) ToGetLogConfigsConfigArrayOutput() GetLogConfigsConfigArrayOutput {
	return i.ToGetLogConfigsConfigArrayOutputWithContext(context.Background())
}

func (i GetLogConfigsConfigArray) ToGetLogConfigsConfigArrayOutputWithContext(ctx context.Context) GetLogConfigsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogConfigsConfigArrayOutput)
}

type GetLogConfigsConfigOutput struct{ *pulumi.OutputState }

func (GetLogConfigsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogConfigsConfig)(nil)).Elem()
}

func (o GetLogConfigsConfigOutput) ToGetLogConfigsConfigOutput() GetLogConfigsConfigOutput {
	return o
}

func (o GetLogConfigsConfigOutput) ToGetLogConfigsConfigOutputWithContext(ctx context.Context) GetLogConfigsConfigOutput {
	return o
}

// The ID of the Log Config.
func (o GetLogConfigsConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogConfigsConfig) string { return v.Id }).(pulumi.StringOutput)
}

// The type the of log.
func (o GetLogConfigsConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogConfigsConfig) string { return v.LogType }).(pulumi.StringOutput)
}

// The region ID of the Log Config.
func (o GetLogConfigsConfigOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogConfigsConfig) string { return v.RegionId }).(pulumi.StringOutput)
}

// The name of the Log Store.
func (o GetLogConfigsConfigOutput) SlsLogStore() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogConfigsConfig) string { return v.SlsLogStore }).(pulumi.StringOutput)
}

// The name of the Project.
func (o GetLogConfigsConfigOutput) SlsProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogConfigsConfig) string { return v.SlsProject }).(pulumi.StringOutput)
}

type GetLogConfigsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLogConfigsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogConfigsConfig)(nil)).Elem()
}

func (o GetLogConfigsConfigArrayOutput) ToGetLogConfigsConfigArrayOutput() GetLogConfigsConfigArrayOutput {
	return o
}

func (o GetLogConfigsConfigArrayOutput) ToGetLogConfigsConfigArrayOutputWithContext(ctx context.Context) GetLogConfigsConfigArrayOutput {
	return o
}

func (o GetLogConfigsConfigArrayOutput) Index(i pulumi.IntInput) GetLogConfigsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogConfigsConfig {
		return vs[0].([]GetLogConfigsConfig)[vs[1].(int)]
	}).(GetLogConfigsConfigOutput)
}

type GetModelsModel struct {
	// The creation time of the model.
	CreateTime string `pulumi:"createTime"`
	// The description of the model.
	Description string `pulumi:"description"`
	// The ID of the api group.
	GroupId string `pulumi:"groupId"`
	// The ID of the Api Gateway Model.
	Id string `pulumi:"id"`
	// The id of the model.
	ModelId string `pulumi:"modelId"`
	// The name of the Model.
	ModelName string `pulumi:"modelName"`
	// The reference of the model.
	ModelRef string `pulumi:"modelRef"`
	// The modified time of the model.
	ModifiedTime string `pulumi:"modifiedTime"`
	// The schema of the model.
	Schema string `pulumi:"schema"`
}

// GetModelsModelInput is an input type that accepts GetModelsModelArgs and GetModelsModelOutput values.
// You can construct a concrete instance of `GetModelsModelInput` via:
//
//	GetModelsModelArgs{...}
type GetModelsModelInput interface {
	pulumi.Input

	ToGetModelsModelOutput() GetModelsModelOutput
	ToGetModelsModelOutputWithContext(context.Context) GetModelsModelOutput
}

type GetModelsModelArgs struct {
	// The creation time of the model.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the model.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the api group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Api Gateway Model.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the model.
	ModelId pulumi.StringInput `pulumi:"modelId"`
	// The name of the Model.
	ModelName pulumi.StringInput `pulumi:"modelName"`
	// The reference of the model.
	ModelRef pulumi.StringInput `pulumi:"modelRef"`
	// The modified time of the model.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The schema of the model.
	Schema pulumi.StringInput `pulumi:"schema"`
}

func (GetModelsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModel)(nil)).Elem()
}

func (i GetModelsModelArgs) ToGetModelsModelOutput() GetModelsModelOutput {
	return i.ToGetModelsModelOutputWithContext(context.Background())
}

func (i GetModelsModelArgs) ToGetModelsModelOutputWithContext(ctx context.Context) GetModelsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelOutput)
}

// GetModelsModelArrayInput is an input type that accepts GetModelsModelArray and GetModelsModelArrayOutput values.
// You can construct a concrete instance of `GetModelsModelArrayInput` via:
//
//	GetModelsModelArray{ GetModelsModelArgs{...} }
type GetModelsModelArrayInput interface {
	pulumi.Input

	ToGetModelsModelArrayOutput() GetModelsModelArrayOutput
	ToGetModelsModelArrayOutputWithContext(context.Context) GetModelsModelArrayOutput
}

type GetModelsModelArray []GetModelsModelInput

func (GetModelsModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModel)(nil)).Elem()
}

func (i GetModelsModelArray) ToGetModelsModelArrayOutput() GetModelsModelArrayOutput {
	return i.ToGetModelsModelArrayOutputWithContext(context.Background())
}

func (i GetModelsModelArray) ToGetModelsModelArrayOutputWithContext(ctx context.Context) GetModelsModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetModelsModelArrayOutput)
}

type GetModelsModelOutput struct{ *pulumi.OutputState }

func (GetModelsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetModelsModel)(nil)).Elem()
}

func (o GetModelsModelOutput) ToGetModelsModelOutput() GetModelsModelOutput {
	return o
}

func (o GetModelsModelOutput) ToGetModelsModelOutputWithContext(ctx context.Context) GetModelsModelOutput {
	return o
}

// The creation time of the model.
func (o GetModelsModelOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the model.
func (o GetModelsModelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the api group.
func (o GetModelsModelOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Api Gateway Model.
func (o GetModelsModelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the model.
func (o GetModelsModelOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.ModelId }).(pulumi.StringOutput)
}

// The name of the Model.
func (o GetModelsModelOutput) ModelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.ModelName }).(pulumi.StringOutput)
}

// The reference of the model.
func (o GetModelsModelOutput) ModelRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.ModelRef }).(pulumi.StringOutput)
}

// The modified time of the model.
func (o GetModelsModelOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The schema of the model.
func (o GetModelsModelOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetModelsModel) string { return v.Schema }).(pulumi.StringOutput)
}

type GetModelsModelArrayOutput struct{ *pulumi.OutputState }

func (GetModelsModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetModelsModel)(nil)).Elem()
}

func (o GetModelsModelArrayOutput) ToGetModelsModelArrayOutput() GetModelsModelArrayOutput {
	return o
}

func (o GetModelsModelArrayOutput) ToGetModelsModelArrayOutputWithContext(ctx context.Context) GetModelsModelArrayOutput {
	return o
}

func (o GetModelsModelArrayOutput) Index(i pulumi.IntInput) GetModelsModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetModelsModel {
		return vs[0].([]GetModelsModel)[vs[1].(int)]
	}).(GetModelsModelOutput)
}

type GetPluginsPlugin struct {
	// The CreateTime of the resource.
	CreateTime string `pulumi:"createTime"`
	// The description of the plug-in, which cannot exceed 200 characters.
	Description string `pulumi:"description"`
	// The ID of the Plugin.
	Id string `pulumi:"id"`
	// The ModifiedTime of the resource.
	ModifiedTime string `pulumi:"modifiedTime"`
	// The definition statement of the plug-in. Plug-in definition statements in the JSON and YAML formats are supported.
	PluginData string `pulumi:"pluginData"`
	// The first ID of the resource.
	PluginId string `pulumi:"pluginId"`
	// The name of the plug-in that you want to create.
	PluginName string `pulumi:"pluginName"`
	// The type of the plug-in.
	PluginType string `pulumi:"pluginType"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetPluginsPluginInput is an input type that accepts GetPluginsPluginArgs and GetPluginsPluginOutput values.
// You can construct a concrete instance of `GetPluginsPluginInput` via:
//
//	GetPluginsPluginArgs{...}
type GetPluginsPluginInput interface {
	pulumi.Input

	ToGetPluginsPluginOutput() GetPluginsPluginOutput
	ToGetPluginsPluginOutputWithContext(context.Context) GetPluginsPluginOutput
}

type GetPluginsPluginArgs struct {
	// The CreateTime of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the plug-in, which cannot exceed 200 characters.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Plugin.
	Id pulumi.StringInput `pulumi:"id"`
	// The ModifiedTime of the resource.
	ModifiedTime pulumi.StringInput `pulumi:"modifiedTime"`
	// The definition statement of the plug-in. Plug-in definition statements in the JSON and YAML formats are supported.
	PluginData pulumi.StringInput `pulumi:"pluginData"`
	// The first ID of the resource.
	PluginId pulumi.StringInput `pulumi:"pluginId"`
	// The name of the plug-in that you want to create.
	PluginName pulumi.StringInput `pulumi:"pluginName"`
	// The type of the plug-in.
	PluginType pulumi.StringInput `pulumi:"pluginType"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetPluginsPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsPlugin)(nil)).Elem()
}

func (i GetPluginsPluginArgs) ToGetPluginsPluginOutput() GetPluginsPluginOutput {
	return i.ToGetPluginsPluginOutputWithContext(context.Background())
}

func (i GetPluginsPluginArgs) ToGetPluginsPluginOutputWithContext(ctx context.Context) GetPluginsPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsPluginOutput)
}

// GetPluginsPluginArrayInput is an input type that accepts GetPluginsPluginArray and GetPluginsPluginArrayOutput values.
// You can construct a concrete instance of `GetPluginsPluginArrayInput` via:
//
//	GetPluginsPluginArray{ GetPluginsPluginArgs{...} }
type GetPluginsPluginArrayInput interface {
	pulumi.Input

	ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput
	ToGetPluginsPluginArrayOutputWithContext(context.Context) GetPluginsPluginArrayOutput
}

type GetPluginsPluginArray []GetPluginsPluginInput

func (GetPluginsPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsPlugin)(nil)).Elem()
}

func (i GetPluginsPluginArray) ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput {
	return i.ToGetPluginsPluginArrayOutputWithContext(context.Background())
}

func (i GetPluginsPluginArray) ToGetPluginsPluginArrayOutputWithContext(ctx context.Context) GetPluginsPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPluginsPluginArrayOutput)
}

type GetPluginsPluginOutput struct{ *pulumi.OutputState }

func (GetPluginsPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPluginsPlugin)(nil)).Elem()
}

func (o GetPluginsPluginOutput) ToGetPluginsPluginOutput() GetPluginsPluginOutput {
	return o
}

func (o GetPluginsPluginOutput) ToGetPluginsPluginOutputWithContext(ctx context.Context) GetPluginsPluginOutput {
	return o
}

// The CreateTime of the resource.
func (o GetPluginsPluginOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the plug-in, which cannot exceed 200 characters.
func (o GetPluginsPluginOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Plugin.
func (o GetPluginsPluginOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.Id }).(pulumi.StringOutput)
}

// The ModifiedTime of the resource.
func (o GetPluginsPluginOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The definition statement of the plug-in. Plug-in definition statements in the JSON and YAML formats are supported.
func (o GetPluginsPluginOutput) PluginData() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.PluginData }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetPluginsPluginOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.PluginId }).(pulumi.StringOutput)
}

// The name of the plug-in that you want to create.
func (o GetPluginsPluginOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.PluginName }).(pulumi.StringOutput)
}

// The type of the plug-in.
func (o GetPluginsPluginOutput) PluginType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPluginsPlugin) string { return v.PluginType }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetPluginsPluginOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetPluginsPlugin) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetPluginsPluginArrayOutput struct{ *pulumi.OutputState }

func (GetPluginsPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPluginsPlugin)(nil)).Elem()
}

func (o GetPluginsPluginArrayOutput) ToGetPluginsPluginArrayOutput() GetPluginsPluginArrayOutput {
	return o
}

func (o GetPluginsPluginArrayOutput) ToGetPluginsPluginArrayOutputWithContext(ctx context.Context) GetPluginsPluginArrayOutput {
	return o
}

func (o GetPluginsPluginArrayOutput) Index(i pulumi.IntInput) GetPluginsPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPluginsPlugin {
		return vs[0].([]GetPluginsPlugin)[vs[1].(int)]
	}).(GetPluginsPluginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiConstantParameterInput)(nil)).Elem(), ApiConstantParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiConstantParameterArrayInput)(nil)).Elem(), ApiConstantParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiFcServiceConfigInput)(nil)).Elem(), ApiFcServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiFcServiceConfigPtrInput)(nil)).Elem(), ApiFcServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHttpServiceConfigInput)(nil)).Elem(), ApiHttpServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHttpServiceConfigPtrInput)(nil)).Elem(), ApiHttpServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHttpVpcServiceConfigInput)(nil)).Elem(), ApiHttpVpcServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiHttpVpcServiceConfigPtrInput)(nil)).Elem(), ApiHttpVpcServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiMockServiceConfigInput)(nil)).Elem(), ApiMockServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiMockServiceConfigPtrInput)(nil)).Elem(), ApiMockServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRequestConfigInput)(nil)).Elem(), ApiRequestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRequestConfigPtrInput)(nil)).Elem(), ApiRequestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRequestParameterInput)(nil)).Elem(), ApiRequestParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRequestParameterArrayInput)(nil)).Elem(), ApiRequestParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiSystemParameterInput)(nil)).Elem(), ApiSystemParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiSystemParameterArrayInput)(nil)).Elem(), ApiSystemParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApisApiInput)(nil)).Elem(), GetApisApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApisApiArrayInput)(nil)).Elem(), GetApisApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppsAppInput)(nil)).Elem(), GetAppsAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppsAppArrayInput)(nil)).Elem(), GetAppsAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendInput)(nil)).Elem(), GetBackendsBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendsBackendArrayInput)(nil)).Elem(), GetBackendsBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogConfigsConfigInput)(nil)).Elem(), GetLogConfigsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogConfigsConfigArrayInput)(nil)).Elem(), GetLogConfigsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelInput)(nil)).Elem(), GetModelsModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetModelsModelArrayInput)(nil)).Elem(), GetModelsModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPluginsPluginInput)(nil)).Elem(), GetPluginsPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPluginsPluginArrayInput)(nil)).Elem(), GetPluginsPluginArray{})
	pulumi.RegisterOutputType(ApiConstantParameterOutput{})
	pulumi.RegisterOutputType(ApiConstantParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiFcServiceConfigOutput{})
	pulumi.RegisterOutputType(ApiFcServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiHttpServiceConfigOutput{})
	pulumi.RegisterOutputType(ApiHttpServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiHttpVpcServiceConfigOutput{})
	pulumi.RegisterOutputType(ApiHttpVpcServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiMockServiceConfigOutput{})
	pulumi.RegisterOutputType(ApiMockServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiRequestConfigOutput{})
	pulumi.RegisterOutputType(ApiRequestConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiRequestParameterOutput{})
	pulumi.RegisterOutputType(ApiRequestParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiSystemParameterOutput{})
	pulumi.RegisterOutputType(ApiSystemParameterArrayOutput{})
	pulumi.RegisterOutputType(GetApisApiOutput{})
	pulumi.RegisterOutputType(GetApisApiArrayOutput{})
	pulumi.RegisterOutputType(GetAppsAppOutput{})
	pulumi.RegisterOutputType(GetAppsAppArrayOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendOutput{})
	pulumi.RegisterOutputType(GetBackendsBackendArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetLogConfigsConfigOutput{})
	pulumi.RegisterOutputType(GetLogConfigsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetModelsModelOutput{})
	pulumi.RegisterOutputType(GetModelsModelArrayOutput{})
	pulumi.RegisterOutputType(GetPluginsPluginOutput{})
	pulumi.RegisterOutputType(GetPluginsPluginArrayOutput{})
}
