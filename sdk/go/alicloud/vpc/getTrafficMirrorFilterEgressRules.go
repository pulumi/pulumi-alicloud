// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Vpc Traffic Mirror Filter Egress Rules of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.140.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := vpc.GetTrafficMirrorFilterEgressRules(ctx, &vpc.GetTrafficMirrorFilterEgressRulesArgs{
// 			TrafficMirrorFilterId: "example_traffic_mirror_filter_id",
// 			Ids: []string{
// 				"example_id",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcTrafficMirrorFilterEgressRuleId1", ids.Rules[0].Id)
// 		status, err := vpc.GetTrafficMirrorFilterEgressRules(ctx, &vpc.GetTrafficMirrorFilterEgressRulesArgs{
// 			TrafficMirrorFilterId: "example_traffic_mirror_filter_id",
// 			Ids: []string{
// 				"example_id",
// 			},
// 			Status: pulumi.StringRef("Created"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcTrafficMirrorFilterEgressRuleId2", status.Rules[0].Id)
// 		return nil
// 	})
// }
// ```
func GetTrafficMirrorFilterEgressRules(ctx *pulumi.Context, args *GetTrafficMirrorFilterEgressRulesArgs, opts ...pulumi.InvokeOption) (*GetTrafficMirrorFilterEgressRulesResult, error) {
	var rv GetTrafficMirrorFilterEgressRulesResult
	err := ctx.Invoke("alicloud:vpc/getTrafficMirrorFilterEgressRules:getTrafficMirrorFilterEgressRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficMirrorFilterEgressRules.
type GetTrafficMirrorFilterEgressRulesArgs struct {
	// A list of Traffic Mirror Filter Egress Rule IDs.
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status *string `pulumi:"status"`
	// The ID of the filter associated with the outbound rule.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
}

// A collection of values returned by getTrafficMirrorFilterEgressRules.
type GetTrafficMirrorFilterEgressRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                    string                                  `pulumi:"id"`
	Ids                   []string                                `pulumi:"ids"`
	OutputFile            *string                                 `pulumi:"outputFile"`
	Rules                 []GetTrafficMirrorFilterEgressRulesRule `pulumi:"rules"`
	Status                *string                                 `pulumi:"status"`
	TrafficMirrorFilterId string                                  `pulumi:"trafficMirrorFilterId"`
}

func GetTrafficMirrorFilterEgressRulesOutput(ctx *pulumi.Context, args GetTrafficMirrorFilterEgressRulesOutputArgs, opts ...pulumi.InvokeOption) GetTrafficMirrorFilterEgressRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrafficMirrorFilterEgressRulesResult, error) {
			args := v.(GetTrafficMirrorFilterEgressRulesArgs)
			r, err := GetTrafficMirrorFilterEgressRules(ctx, &args, opts...)
			var s GetTrafficMirrorFilterEgressRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrafficMirrorFilterEgressRulesResultOutput)
}

// A collection of arguments for invoking getTrafficMirrorFilterEgressRules.
type GetTrafficMirrorFilterEgressRulesOutputArgs struct {
	// A list of Traffic Mirror Filter Egress Rule IDs.
	Ids        pulumi.StringArrayInput `pulumi:"ids"`
	OutputFile pulumi.StringPtrInput   `pulumi:"outputFile"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ID of the filter associated with the outbound rule.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
}

func (GetTrafficMirrorFilterEgressRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficMirrorFilterEgressRules.
type GetTrafficMirrorFilterEgressRulesResultOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterEgressRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesResult)(nil)).Elem()
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) ToGetTrafficMirrorFilterEgressRulesResultOutput() GetTrafficMirrorFilterEgressRulesResultOutput {
	return o
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) ToGetTrafficMirrorFilterEgressRulesResultOutputWithContext(ctx context.Context) GetTrafficMirrorFilterEgressRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficMirrorFilterEgressRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) Rules() GetTrafficMirrorFilterEgressRulesRuleArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) []GetTrafficMirrorFilterEgressRulesRule {
		return v.Rules
	}).(GetTrafficMirrorFilterEgressRulesRuleArrayOutput)
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorFilterEgressRulesResultOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesResult) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficMirrorFilterEgressRulesResultOutput{})
}
