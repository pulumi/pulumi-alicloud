// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Vpc Peer Peer Connection Accepter resource.
//
// Vpc peer connection receiver.
//
// For information about Vpc Peer Peer Connection Accepter and how to use it, see [What is Peer Connection Accepter](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpcpeer-2022-01-01-acceptvpcpeerconnection).
//
// > **NOTE:** Available since v1.196.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			acceptingRegion := "cn-beijing"
//			if param := cfg.Get("acceptingRegion"); param != "" {
//				acceptingRegion = param
//			}
//			anotherUid := "xxxx"
//			if param := cfg.Get("anotherUid"); param != "" {
//				anotherUid = param
//			}
//			local, err := vpc.NewNetwork(ctx, "local", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.4.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			acceptingNetwork, err := vpc.NewNetwork(ctx, "accepting", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("192.168.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			accepting, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_default, err := vpc.NewPeerConnection(ctx, "default", &vpc.PeerConnectionArgs{
//				PeerConnectionName: pulumi.String(name),
//				VpcId:              local.ID(),
//				AcceptingAliUid:    pulumi.String(accepting.Id),
//				AcceptingRegionId:  pulumi.String(acceptingRegion),
//				AcceptingVpcId:     acceptingNetwork.ID(),
//				Description:        pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewPeerConnectionAccepter(ctx, "default", &vpc.PeerConnectionAccepterArgs{
//				InstanceId: _default.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Vpc Peer Peer Connection Accepter can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter example <id>
// ```
type PeerConnectionAccepter struct {
	pulumi.CustomResourceState

	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
	AcceptingOwnerUid pulumi.IntOutput `pulumi:"acceptingOwnerUid"`
	// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
	AcceptingRegionId pulumi.StringOutput `pulumi:"acceptingRegionId"`
	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVpcId pulumi.StringOutput `pulumi:"acceptingVpcId"`
	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The new description of the VPC peering connection.
	//
	// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
	LinkType pulumi.StringOutput `pulumi:"linkType"`
	// The new name of the VPC peering connection.
	//
	// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
	PeerConnectionAccepterName pulumi.StringOutput `pulumi:"peerConnectionAccepterName"`
	// The ID of the region where you want to query VPC peering connections.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The ID of the new resource group.
	//
	// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The VPC ID of the initiator of the VPC peering connection.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewPeerConnectionAccepter registers a new resource with the given unique name, arguments, and options.
func NewPeerConnectionAccepter(ctx *pulumi.Context,
	name string, args *PeerConnectionAccepterArgs, opts ...pulumi.ResourceOption) (*PeerConnectionAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PeerConnectionAccepter
	err := ctx.RegisterResource("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeerConnectionAccepter gets an existing PeerConnectionAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeerConnectionAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeerConnectionAccepterState, opts ...pulumi.ResourceOption) (*PeerConnectionAccepter, error) {
	var resource PeerConnectionAccepter
	err := ctx.ReadResource("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeerConnectionAccepter resources.
type peerConnectionAccepterState struct {
	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
	AcceptingOwnerUid *int `pulumi:"acceptingOwnerUid"`
	// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
	AcceptingRegionId *string `pulumi:"acceptingRegionId"`
	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVpcId *string `pulumi:"acceptingVpcId"`
	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth *int `pulumi:"bandwidth"`
	// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
	CreateTime *string `pulumi:"createTime"`
	// The new description of the VPC peering connection.
	//
	// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `pulumi:"forceDelete"`
	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceId *string `pulumi:"instanceId"`
	// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
	LinkType *string `pulumi:"linkType"`
	// The new name of the VPC peering connection.
	//
	// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
	PeerConnectionAccepterName *string `pulumi:"peerConnectionAccepterName"`
	// The ID of the region where you want to query VPC peering connections.
	RegionId *string `pulumi:"regionId"`
	// The ID of the new resource group.
	//
	// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The VPC ID of the initiator of the VPC peering connection.
	VpcId *string `pulumi:"vpcId"`
}

type PeerConnectionAccepterState struct {
	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
	AcceptingOwnerUid pulumi.IntPtrInput
	// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
	AcceptingRegionId pulumi.StringPtrInput
	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVpcId pulumi.StringPtrInput
	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth pulumi.IntPtrInput
	// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
	CreateTime pulumi.StringPtrInput
	// The new description of the VPC peering connection.
	//
	// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrInput
	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete pulumi.BoolPtrInput
	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceId pulumi.StringPtrInput
	// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
	LinkType pulumi.StringPtrInput
	// The new name of the VPC peering connection.
	//
	// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
	PeerConnectionAccepterName pulumi.StringPtrInput
	// The ID of the region where you want to query VPC peering connections.
	RegionId pulumi.StringPtrInput
	// The ID of the new resource group.
	//
	// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
	ResourceGroupId pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The VPC ID of the initiator of the VPC peering connection.
	VpcId pulumi.StringPtrInput
}

func (PeerConnectionAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*peerConnectionAccepterState)(nil)).Elem()
}

type peerConnectionAccepterArgs struct {
	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth *int `pulumi:"bandwidth"`
	// The new description of the VPC peering connection.
	//
	// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `pulumi:"forceDelete"`
	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceId string `pulumi:"instanceId"`
	// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
	LinkType *string `pulumi:"linkType"`
	// The new name of the VPC peering connection.
	//
	// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
	PeerConnectionAccepterName *string `pulumi:"peerConnectionAccepterName"`
	// The ID of the new resource group.
	//
	// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
	ResourceGroupId *string `pulumi:"resourceGroupId"`
}

// The set of arguments for constructing a PeerConnectionAccepter resource.
type PeerConnectionAccepterArgs struct {
	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth pulumi.IntPtrInput
	// The new description of the VPC peering connection.
	//
	// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrInput
	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete pulumi.BoolPtrInput
	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceId pulumi.StringInput
	// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
	LinkType pulumi.StringPtrInput
	// The new name of the VPC peering connection.
	//
	// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
	PeerConnectionAccepterName pulumi.StringPtrInput
	// The ID of the new resource group.
	//
	// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
	ResourceGroupId pulumi.StringPtrInput
}

func (PeerConnectionAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peerConnectionAccepterArgs)(nil)).Elem()
}

type PeerConnectionAccepterInput interface {
	pulumi.Input

	ToPeerConnectionAccepterOutput() PeerConnectionAccepterOutput
	ToPeerConnectionAccepterOutputWithContext(ctx context.Context) PeerConnectionAccepterOutput
}

func (*PeerConnectionAccepter) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerConnectionAccepter)(nil)).Elem()
}

func (i *PeerConnectionAccepter) ToPeerConnectionAccepterOutput() PeerConnectionAccepterOutput {
	return i.ToPeerConnectionAccepterOutputWithContext(context.Background())
}

func (i *PeerConnectionAccepter) ToPeerConnectionAccepterOutputWithContext(ctx context.Context) PeerConnectionAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectionAccepterOutput)
}

// PeerConnectionAccepterArrayInput is an input type that accepts PeerConnectionAccepterArray and PeerConnectionAccepterArrayOutput values.
// You can construct a concrete instance of `PeerConnectionAccepterArrayInput` via:
//
//	PeerConnectionAccepterArray{ PeerConnectionAccepterArgs{...} }
type PeerConnectionAccepterArrayInput interface {
	pulumi.Input

	ToPeerConnectionAccepterArrayOutput() PeerConnectionAccepterArrayOutput
	ToPeerConnectionAccepterArrayOutputWithContext(context.Context) PeerConnectionAccepterArrayOutput
}

type PeerConnectionAccepterArray []PeerConnectionAccepterInput

func (PeerConnectionAccepterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerConnectionAccepter)(nil)).Elem()
}

func (i PeerConnectionAccepterArray) ToPeerConnectionAccepterArrayOutput() PeerConnectionAccepterArrayOutput {
	return i.ToPeerConnectionAccepterArrayOutputWithContext(context.Background())
}

func (i PeerConnectionAccepterArray) ToPeerConnectionAccepterArrayOutputWithContext(ctx context.Context) PeerConnectionAccepterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectionAccepterArrayOutput)
}

// PeerConnectionAccepterMapInput is an input type that accepts PeerConnectionAccepterMap and PeerConnectionAccepterMapOutput values.
// You can construct a concrete instance of `PeerConnectionAccepterMapInput` via:
//
//	PeerConnectionAccepterMap{ "key": PeerConnectionAccepterArgs{...} }
type PeerConnectionAccepterMapInput interface {
	pulumi.Input

	ToPeerConnectionAccepterMapOutput() PeerConnectionAccepterMapOutput
	ToPeerConnectionAccepterMapOutputWithContext(context.Context) PeerConnectionAccepterMapOutput
}

type PeerConnectionAccepterMap map[string]PeerConnectionAccepterInput

func (PeerConnectionAccepterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerConnectionAccepter)(nil)).Elem()
}

func (i PeerConnectionAccepterMap) ToPeerConnectionAccepterMapOutput() PeerConnectionAccepterMapOutput {
	return i.ToPeerConnectionAccepterMapOutputWithContext(context.Background())
}

func (i PeerConnectionAccepterMap) ToPeerConnectionAccepterMapOutputWithContext(ctx context.Context) PeerConnectionAccepterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerConnectionAccepterMapOutput)
}

type PeerConnectionAccepterOutput struct{ *pulumi.OutputState }

func (PeerConnectionAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerConnectionAccepter)(nil)).Elem()
}

func (o PeerConnectionAccepterOutput) ToPeerConnectionAccepterOutput() PeerConnectionAccepterOutput {
	return o
}

func (o PeerConnectionAccepterOutput) ToPeerConnectionAccepterOutputWithContext(ctx context.Context) PeerConnectionAccepterOutput {
	return o
}

// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
func (o PeerConnectionAccepterOutput) AcceptingOwnerUid() pulumi.IntOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.IntOutput { return v.AcceptingOwnerUid }).(pulumi.IntOutput)
}

// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
func (o PeerConnectionAccepterOutput) AcceptingRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.AcceptingRegionId }).(pulumi.StringOutput)
}

// The VPC ID of the receiving end of the VPC peer connection.
func (o PeerConnectionAccepterOutput) AcceptingVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.AcceptingVpcId }).(pulumi.StringOutput)
}

// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
func (o PeerConnectionAccepterOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
func (o PeerConnectionAccepterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The new description of the VPC peering connection.
//
// The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
func (o PeerConnectionAccepterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
func (o PeerConnectionAccepterOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// Specifies whether to forcefully delete the VPC peering connection. Valid values:
func (o PeerConnectionAccepterOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The ID of the VPC peering connection whose name or description you want to modify.
func (o PeerConnectionAccepterOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
func (o PeerConnectionAccepterOutput) LinkType() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.LinkType }).(pulumi.StringOutput)
}

// The new name of the VPC peering connection.
//
// The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
func (o PeerConnectionAccepterOutput) PeerConnectionAccepterName() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.PeerConnectionAccepterName }).(pulumi.StringOutput)
}

// The ID of the region where you want to query VPC peering connections.
func (o PeerConnectionAccepterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The ID of the new resource group.
//
// > **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
func (o PeerConnectionAccepterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The status of the resource
func (o PeerConnectionAccepterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The VPC ID of the initiator of the VPC peering connection.
func (o PeerConnectionAccepterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *PeerConnectionAccepter) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type PeerConnectionAccepterArrayOutput struct{ *pulumi.OutputState }

func (PeerConnectionAccepterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PeerConnectionAccepter)(nil)).Elem()
}

func (o PeerConnectionAccepterArrayOutput) ToPeerConnectionAccepterArrayOutput() PeerConnectionAccepterArrayOutput {
	return o
}

func (o PeerConnectionAccepterArrayOutput) ToPeerConnectionAccepterArrayOutputWithContext(ctx context.Context) PeerConnectionAccepterArrayOutput {
	return o
}

func (o PeerConnectionAccepterArrayOutput) Index(i pulumi.IntInput) PeerConnectionAccepterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PeerConnectionAccepter {
		return vs[0].([]*PeerConnectionAccepter)[vs[1].(int)]
	}).(PeerConnectionAccepterOutput)
}

type PeerConnectionAccepterMapOutput struct{ *pulumi.OutputState }

func (PeerConnectionAccepterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PeerConnectionAccepter)(nil)).Elem()
}

func (o PeerConnectionAccepterMapOutput) ToPeerConnectionAccepterMapOutput() PeerConnectionAccepterMapOutput {
	return o
}

func (o PeerConnectionAccepterMapOutput) ToPeerConnectionAccepterMapOutputWithContext(ctx context.Context) PeerConnectionAccepterMapOutput {
	return o
}

func (o PeerConnectionAccepterMapOutput) MapIndex(k pulumi.StringInput) PeerConnectionAccepterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PeerConnectionAccepter {
		return vs[0].(map[string]*PeerConnectionAccepter)[vs[1].(string)]
	}).(PeerConnectionAccepterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectionAccepterInput)(nil)).Elem(), &PeerConnectionAccepter{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectionAccepterArrayInput)(nil)).Elem(), PeerConnectionAccepterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerConnectionAccepterMapInput)(nil)).Elem(), PeerConnectionAccepterMap{})
	pulumi.RegisterOutputType(PeerConnectionAccepterOutput{})
	pulumi.RegisterOutputType(PeerConnectionAccepterArrayOutput{})
	pulumi.RegisterOutputType(PeerConnectionAccepterMapOutput{})
}
