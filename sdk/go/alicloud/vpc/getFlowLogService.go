// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Using this data source can open Vpc Flow Log service automatically. If the service has been opened, it will return opened.
//
// For information about Vpc Flow Log and how to use it, see [What is Vpc Flow Log](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-openflowlog).
//
// > **NOTE:** Available since v1.209.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetFlowLogService(ctx, &vpc.GetFlowLogServiceArgs{
//				Enable: pulumi.StringRef("On"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFlowLogService(ctx *pulumi.Context, args *GetFlowLogServiceArgs, opts ...pulumi.InvokeOption) (*GetFlowLogServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlowLogServiceResult
	err := ctx.Invoke("alicloud:vpc/getFlowLogService:getFlowLogService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlowLogService.
type GetFlowLogServiceArgs struct {
	// Setting the value to `On` to enable the service. If has been enabled, return the result. Default value: `Off`. Valid values: `On` and `Off`.
	//
	// > **NOTE:** Setting `enable = "On"` to open the Vpc Flow Log service that means you have read and agreed the [Vpc Flow Log Terms of Service](https://help.aliyun.com/zh/vpc/support/vpc-terms-of-service). The service can not closed once it is opened.
	Enable *string `pulumi:"enable"`
}

// A collection of values returned by getFlowLogService.
type GetFlowLogServiceResult struct {
	Enable *string `pulumi:"enable"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current service enable status.
	Status string `pulumi:"status"`
}

func GetFlowLogServiceOutput(ctx *pulumi.Context, args GetFlowLogServiceOutputArgs, opts ...pulumi.InvokeOption) GetFlowLogServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFlowLogServiceResult, error) {
			args := v.(GetFlowLogServiceArgs)
			r, err := GetFlowLogService(ctx, &args, opts...)
			var s GetFlowLogServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFlowLogServiceResultOutput)
}

// A collection of arguments for invoking getFlowLogService.
type GetFlowLogServiceOutputArgs struct {
	// Setting the value to `On` to enable the service. If has been enabled, return the result. Default value: `Off`. Valid values: `On` and `Off`.
	//
	// > **NOTE:** Setting `enable = "On"` to open the Vpc Flow Log service that means you have read and agreed the [Vpc Flow Log Terms of Service](https://help.aliyun.com/zh/vpc/support/vpc-terms-of-service). The service can not closed once it is opened.
	Enable pulumi.StringPtrInput `pulumi:"enable"`
}

func (GetFlowLogServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogServiceArgs)(nil)).Elem()
}

// A collection of values returned by getFlowLogService.
type GetFlowLogServiceResultOutput struct{ *pulumi.OutputState }

func (GetFlowLogServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogServiceResult)(nil)).Elem()
}

func (o GetFlowLogServiceResultOutput) ToGetFlowLogServiceResultOutput() GetFlowLogServiceResultOutput {
	return o
}

func (o GetFlowLogServiceResultOutput) ToGetFlowLogServiceResultOutputWithContext(ctx context.Context) GetFlowLogServiceResultOutput {
	return o
}

func (o GetFlowLogServiceResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFlowLogServiceResult] {
	return pulumix.Output[GetFlowLogServiceResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFlowLogServiceResultOutput) Enable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogServiceResult) *string { return v.Enable }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlowLogServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current service enable status.
func (o GetFlowLogServiceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogServiceResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowLogServiceResultOutput{})
}
