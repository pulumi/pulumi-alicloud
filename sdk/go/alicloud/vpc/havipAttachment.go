// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// The havip attachment can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:vpc/hAVipAttachment:HAVipAttachment foo havip-abc123456:i-abc123456
// ```
type HAVipAttachment struct {
	pulumi.CustomResourceState

	// The havipId of the havip attachment, the field can't be changed.
	HavipId pulumi.StringOutput `pulumi:"havipId"`
	// The instanceId of the havip attachment, the field can't be changed.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewHAVipAttachment registers a new resource with the given unique name, arguments, and options.
func NewHAVipAttachment(ctx *pulumi.Context,
	name string, args *HAVipAttachmentArgs, opts ...pulumi.ResourceOption) (*HAVipAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HavipId == nil {
		return nil, errors.New("invalid value for required argument 'HavipId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	var resource HAVipAttachment
	err := ctx.RegisterResource("alicloud:vpc/hAVipAttachment:HAVipAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHAVipAttachment gets an existing HAVipAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHAVipAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HAVipAttachmentState, opts ...pulumi.ResourceOption) (*HAVipAttachment, error) {
	var resource HAVipAttachment
	err := ctx.ReadResource("alicloud:vpc/hAVipAttachment:HAVipAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HAVipAttachment resources.
type havipAttachmentState struct {
	// The havipId of the havip attachment, the field can't be changed.
	HavipId *string `pulumi:"havipId"`
	// The instanceId of the havip attachment, the field can't be changed.
	InstanceId *string `pulumi:"instanceId"`
}

type HAVipAttachmentState struct {
	// The havipId of the havip attachment, the field can't be changed.
	HavipId pulumi.StringPtrInput
	// The instanceId of the havip attachment, the field can't be changed.
	InstanceId pulumi.StringPtrInput
}

func (HAVipAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*havipAttachmentState)(nil)).Elem()
}

type havipAttachmentArgs struct {
	// The havipId of the havip attachment, the field can't be changed.
	HavipId string `pulumi:"havipId"`
	// The instanceId of the havip attachment, the field can't be changed.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a HAVipAttachment resource.
type HAVipAttachmentArgs struct {
	// The havipId of the havip attachment, the field can't be changed.
	HavipId pulumi.StringInput
	// The instanceId of the havip attachment, the field can't be changed.
	InstanceId pulumi.StringInput
}

func (HAVipAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*havipAttachmentArgs)(nil)).Elem()
}

type HAVipAttachmentInput interface {
	pulumi.Input

	ToHAVipAttachmentOutput() HAVipAttachmentOutput
	ToHAVipAttachmentOutputWithContext(ctx context.Context) HAVipAttachmentOutput
}

func (*HAVipAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**HAVipAttachment)(nil)).Elem()
}

func (i *HAVipAttachment) ToHAVipAttachmentOutput() HAVipAttachmentOutput {
	return i.ToHAVipAttachmentOutputWithContext(context.Background())
}

func (i *HAVipAttachment) ToHAVipAttachmentOutputWithContext(ctx context.Context) HAVipAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAVipAttachmentOutput)
}

// HAVipAttachmentArrayInput is an input type that accepts HAVipAttachmentArray and HAVipAttachmentArrayOutput values.
// You can construct a concrete instance of `HAVipAttachmentArrayInput` via:
//
//          HAVipAttachmentArray{ HAVipAttachmentArgs{...} }
type HAVipAttachmentArrayInput interface {
	pulumi.Input

	ToHAVipAttachmentArrayOutput() HAVipAttachmentArrayOutput
	ToHAVipAttachmentArrayOutputWithContext(context.Context) HAVipAttachmentArrayOutput
}

type HAVipAttachmentArray []HAVipAttachmentInput

func (HAVipAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HAVipAttachment)(nil)).Elem()
}

func (i HAVipAttachmentArray) ToHAVipAttachmentArrayOutput() HAVipAttachmentArrayOutput {
	return i.ToHAVipAttachmentArrayOutputWithContext(context.Background())
}

func (i HAVipAttachmentArray) ToHAVipAttachmentArrayOutputWithContext(ctx context.Context) HAVipAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAVipAttachmentArrayOutput)
}

// HAVipAttachmentMapInput is an input type that accepts HAVipAttachmentMap and HAVipAttachmentMapOutput values.
// You can construct a concrete instance of `HAVipAttachmentMapInput` via:
//
//          HAVipAttachmentMap{ "key": HAVipAttachmentArgs{...} }
type HAVipAttachmentMapInput interface {
	pulumi.Input

	ToHAVipAttachmentMapOutput() HAVipAttachmentMapOutput
	ToHAVipAttachmentMapOutputWithContext(context.Context) HAVipAttachmentMapOutput
}

type HAVipAttachmentMap map[string]HAVipAttachmentInput

func (HAVipAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HAVipAttachment)(nil)).Elem()
}

func (i HAVipAttachmentMap) ToHAVipAttachmentMapOutput() HAVipAttachmentMapOutput {
	return i.ToHAVipAttachmentMapOutputWithContext(context.Background())
}

func (i HAVipAttachmentMap) ToHAVipAttachmentMapOutputWithContext(ctx context.Context) HAVipAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HAVipAttachmentMapOutput)
}

type HAVipAttachmentOutput struct{ *pulumi.OutputState }

func (HAVipAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HAVipAttachment)(nil)).Elem()
}

func (o HAVipAttachmentOutput) ToHAVipAttachmentOutput() HAVipAttachmentOutput {
	return o
}

func (o HAVipAttachmentOutput) ToHAVipAttachmentOutputWithContext(ctx context.Context) HAVipAttachmentOutput {
	return o
}

type HAVipAttachmentArrayOutput struct{ *pulumi.OutputState }

func (HAVipAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HAVipAttachment)(nil)).Elem()
}

func (o HAVipAttachmentArrayOutput) ToHAVipAttachmentArrayOutput() HAVipAttachmentArrayOutput {
	return o
}

func (o HAVipAttachmentArrayOutput) ToHAVipAttachmentArrayOutputWithContext(ctx context.Context) HAVipAttachmentArrayOutput {
	return o
}

func (o HAVipAttachmentArrayOutput) Index(i pulumi.IntInput) HAVipAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HAVipAttachment {
		return vs[0].([]*HAVipAttachment)[vs[1].(int)]
	}).(HAVipAttachmentOutput)
}

type HAVipAttachmentMapOutput struct{ *pulumi.OutputState }

func (HAVipAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HAVipAttachment)(nil)).Elem()
}

func (o HAVipAttachmentMapOutput) ToHAVipAttachmentMapOutput() HAVipAttachmentMapOutput {
	return o
}

func (o HAVipAttachmentMapOutput) ToHAVipAttachmentMapOutputWithContext(ctx context.Context) HAVipAttachmentMapOutput {
	return o
}

func (o HAVipAttachmentMapOutput) MapIndex(k pulumi.StringInput) HAVipAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HAVipAttachment {
		return vs[0].(map[string]*HAVipAttachment)[vs[1].(string)]
	}).(HAVipAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HAVipAttachmentInput)(nil)).Elem(), &HAVipAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*HAVipAttachmentArrayInput)(nil)).Elem(), HAVipAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HAVipAttachmentMapInput)(nil)).Elem(), HAVipAttachmentMap{})
	pulumi.RegisterOutputType(HAVipAttachmentOutput{})
	pulumi.RegisterOutputType(HAVipAttachmentArrayOutput{})
	pulumi.RegisterOutputType(HAVipAttachmentMapOutput{})
}
