// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Vpc Ipv4 Gateways of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.181.0+.
func GetIpv4Gateways(ctx *pulumi.Context, args *GetIpv4GatewaysArgs, opts ...pulumi.InvokeOption) (*GetIpv4GatewaysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpv4GatewaysResult
	err := ctx.Invoke("alicloud:vpc/getIpv4Gateways:getIpv4Gateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv4Gateways.
type GetIpv4GatewaysArgs struct {
	// A list of Ipv4 Gateway IDs.
	Ids []string `pulumi:"ids"`
	// The name of the IPv4 gateway.
	Ipv4GatewayName *string `pulumi:"ipv4GatewayName"`
	// A regex string to filter results by Ipv4 Gateway name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The ID of the VPC associated with the IPv4 Gateway.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getIpv4Gateways.
type GetIpv4GatewaysResult struct {
	Gateways []GetIpv4GatewaysGateway `pulumi:"gateways"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Ids             []string `pulumi:"ids"`
	Ipv4GatewayName *string  `pulumi:"ipv4GatewayName"`
	NameRegex       *string  `pulumi:"nameRegex"`
	Names           []string `pulumi:"names"`
	OutputFile      *string  `pulumi:"outputFile"`
	Status          *string  `pulumi:"status"`
	VpcId           *string  `pulumi:"vpcId"`
}

func GetIpv4GatewaysOutput(ctx *pulumi.Context, args GetIpv4GatewaysOutputArgs, opts ...pulumi.InvokeOption) GetIpv4GatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpv4GatewaysResult, error) {
			args := v.(GetIpv4GatewaysArgs)
			r, err := GetIpv4Gateways(ctx, &args, opts...)
			var s GetIpv4GatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpv4GatewaysResultOutput)
}

// A collection of arguments for invoking getIpv4Gateways.
type GetIpv4GatewaysOutputArgs struct {
	// A list of Ipv4 Gateway IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The name of the IPv4 gateway.
	Ipv4GatewayName pulumi.StringPtrInput `pulumi:"ipv4GatewayName"`
	// A regex string to filter results by Ipv4 Gateway name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ID of the VPC associated with the IPv4 Gateway.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetIpv4GatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv4GatewaysArgs)(nil)).Elem()
}

// A collection of values returned by getIpv4Gateways.
type GetIpv4GatewaysResultOutput struct{ *pulumi.OutputState }

func (GetIpv4GatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv4GatewaysResult)(nil)).Elem()
}

func (o GetIpv4GatewaysResultOutput) ToGetIpv4GatewaysResultOutput() GetIpv4GatewaysResultOutput {
	return o
}

func (o GetIpv4GatewaysResultOutput) ToGetIpv4GatewaysResultOutputWithContext(ctx context.Context) GetIpv4GatewaysResultOutput {
	return o
}

func (o GetIpv4GatewaysResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetIpv4GatewaysResult] {
	return pulumix.Output[GetIpv4GatewaysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetIpv4GatewaysResultOutput) Gateways() GetIpv4GatewaysGatewayArrayOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) []GetIpv4GatewaysGateway { return v.Gateways }).(GetIpv4GatewaysGatewayArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpv4GatewaysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpv4GatewaysResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetIpv4GatewaysResultOutput) Ipv4GatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) *string { return v.Ipv4GatewayName }).(pulumi.StringPtrOutput)
}

func (o GetIpv4GatewaysResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetIpv4GatewaysResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIpv4GatewaysResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetIpv4GatewaysResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetIpv4GatewaysResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv4GatewaysResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpv4GatewaysResultOutput{})
}
