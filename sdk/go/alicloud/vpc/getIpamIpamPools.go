// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Vpc Ipam Ipam Pool available to the user.[What is Ipam Pool](https://www.alibabacloud.com/help/en/)
//
// > **NOTE:** Available since v1.241.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultIpam, err := vpc.NewIpamIpam(ctx, "defaultIpam", &vpc.IpamIpamArgs{
//				OperatingRegionLists: pulumi.StringArray{
//					pulumi.String("cn-hangzhou"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			parentIpamPool, err := vpc.NewIpamIpamPool(ctx, "parentIpamPool", &vpc.IpamIpamPoolArgs{
//				IpamScopeId:  defaultIpam.PrivateDefaultScopeId,
//				PoolRegionId: pulumi.String("cn-hangzhou"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultIpamIpamPool, err := vpc.NewIpamIpamPool(ctx, "default", &vpc.IpamIpamPoolArgs{
//				IpamScopeId:         defaultIpam.PrivateDefaultScopeId,
//				PoolRegionId:        parentIpamPool.PoolRegionId,
//				IpamPoolName:        pulumi.String(name),
//				SourceIpamPoolId:    parentIpamPool.ID(),
//				IpVersion:           pulumi.String("IPv4"),
//				IpamPoolDescription: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGetIpamIpamPools, err := vpc.GetIpamIpamPools(ctx, &vpc.GetIpamIpamPoolsArgs{
//				NameRegex: pulumi.StringRef(defaultIpamIpamPool.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("alicloudVpcIpamIpamPoolExampleId", defaultGetIpamIpamPools.Pools[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetIpamIpamPools(ctx *pulumi.Context, args *GetIpamIpamPoolsArgs, opts ...pulumi.InvokeOption) (*GetIpamIpamPoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpamIpamPoolsResult
	err := ctx.Invoke("alicloud:vpc/getIpamIpamPools:getIpamIpamPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpamIpamPools.
type GetIpamIpamPoolsArgs struct {
	// A list of Ipam Pool IDs.
	Ids []string `pulumi:"ids"`
	// The first ID of the resource.
	IpamPoolId *string `pulumi:"ipamPoolId"`
	// The name of the resource.
	IpamPoolName *string `pulumi:"ipamPoolName"`
	// Ipam scope id.
	IpamScopeId *string `pulumi:"ipamScopeId"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The effective region of the IPAM address pool.
	PoolRegionId *string `pulumi:"poolRegionId"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The instance ID of the source IPAM address pool.> If this parameter is not entered, the created address pool is the parent address pool.
	SourceIpamPoolId *string `pulumi:"sourceIpamPoolId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getIpamIpamPools.
type GetIpamIpamPoolsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Ipam Pool IDs.
	Ids []string `pulumi:"ids"`
	// The first ID of the resource.
	IpamPoolId *string `pulumi:"ipamPoolId"`
	// The name of the resource.
	IpamPoolName *string `pulumi:"ipamPoolName"`
	// Ipam scope id.
	IpamScopeId *string `pulumi:"ipamScopeId"`
	NameRegex   *string `pulumi:"nameRegex"`
	// A list of name of Ipam Pools.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The effective region of the IPAM address pool.
	PoolRegionId *string `pulumi:"poolRegionId"`
	// A list of Ipam Pool Entries. Each element contains the following attributes:
	Pools []GetIpamIpamPoolsPool `pulumi:"pools"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The instance ID of the source IPAM address pool.> If this parameter is not entered, the created address pool is the parent address pool.
	SourceIpamPoolId *string `pulumi:"sourceIpamPoolId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

func GetIpamIpamPoolsOutput(ctx *pulumi.Context, args GetIpamIpamPoolsOutputArgs, opts ...pulumi.InvokeOption) GetIpamIpamPoolsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpamIpamPoolsResultOutput, error) {
			args := v.(GetIpamIpamPoolsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:vpc/getIpamIpamPools:getIpamIpamPools", args, GetIpamIpamPoolsResultOutput{}, options).(GetIpamIpamPoolsResultOutput), nil
		}).(GetIpamIpamPoolsResultOutput)
}

// A collection of arguments for invoking getIpamIpamPools.
type GetIpamIpamPoolsOutputArgs struct {
	// A list of Ipam Pool IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The first ID of the resource.
	IpamPoolId pulumi.StringPtrInput `pulumi:"ipamPoolId"`
	// The name of the resource.
	IpamPoolName pulumi.StringPtrInput `pulumi:"ipamPoolName"`
	// Ipam scope id.
	IpamScopeId pulumi.StringPtrInput `pulumi:"ipamScopeId"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The effective region of the IPAM address pool.
	PoolRegionId pulumi.StringPtrInput `pulumi:"poolRegionId"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The instance ID of the source IPAM address pool.> If this parameter is not entered, the created address pool is the parent address pool.
	SourceIpamPoolId pulumi.StringPtrInput `pulumi:"sourceIpamPoolId"`
	// The tag of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetIpamIpamPoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpamPoolsArgs)(nil)).Elem()
}

// A collection of values returned by getIpamIpamPools.
type GetIpamIpamPoolsResultOutput struct{ *pulumi.OutputState }

func (GetIpamIpamPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpamPoolsResult)(nil)).Elem()
}

func (o GetIpamIpamPoolsResultOutput) ToGetIpamIpamPoolsResultOutput() GetIpamIpamPoolsResultOutput {
	return o
}

func (o GetIpamIpamPoolsResultOutput) ToGetIpamIpamPoolsResultOutputWithContext(ctx context.Context) GetIpamIpamPoolsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpamIpamPoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Ipam Pool IDs.
func (o GetIpamIpamPoolsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The first ID of the resource.
func (o GetIpamIpamPoolsResultOutput) IpamPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.IpamPoolId }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o GetIpamIpamPoolsResultOutput) IpamPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.IpamPoolName }).(pulumi.StringPtrOutput)
}

// Ipam scope id.
func (o GetIpamIpamPoolsResultOutput) IpamScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.IpamScopeId }).(pulumi.StringPtrOutput)
}

func (o GetIpamIpamPoolsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Ipam Pools.
func (o GetIpamIpamPoolsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIpamIpamPoolsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The effective region of the IPAM address pool.
func (o GetIpamIpamPoolsResultOutput) PoolRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.PoolRegionId }).(pulumi.StringPtrOutput)
}

// A list of Ipam Pool Entries. Each element contains the following attributes:
func (o GetIpamIpamPoolsResultOutput) Pools() GetIpamIpamPoolsPoolArrayOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) []GetIpamIpamPoolsPool { return v.Pools }).(GetIpamIpamPoolsPoolArrayOutput)
}

// The ID of the resource group.
func (o GetIpamIpamPoolsResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The instance ID of the source IPAM address pool.> If this parameter is not entered, the created address pool is the parent address pool.
func (o GetIpamIpamPoolsResultOutput) SourceIpamPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) *string { return v.SourceIpamPoolId }).(pulumi.StringPtrOutput)
}

// The tag of the resource.
func (o GetIpamIpamPoolsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIpamIpamPoolsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpamIpamPoolsResultOutput{})
}
