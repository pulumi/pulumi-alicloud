// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides a list of Forward Entries owned by an Alibaba Cloud account.
//
// > **NOTE:** Available in 1.37.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "forward-entry-config-example-name"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/21"),
//				ZoneId:      *pulumi.String(defaultZones.Zones[0].Id),
//				VswitchName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultNatGateway, err := vpc.NewNatGateway(ctx, "defaultNatGateway", &vpc.NatGatewayArgs{
//				VpcId:              defaultNetwork.ID(),
//				InternetChargeType: pulumi.String("PayByLcu"),
//				NatGatewayName:     pulumi.String(name),
//				NatType:            pulumi.String("Enhanced"),
//				VswitchId:          defaultSwitch.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultEipAddress, err := ecs.NewEipAddress(ctx, "defaultEipAddress", &ecs.EipAddressArgs{
//				AddressName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewEipAssociation(ctx, "defaultEipAssociation", &ecs.EipAssociationArgs{
//				AllocationId: defaultEipAddress.ID(),
//				InstanceId:   defaultNatGateway.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultForwardEntry, err := vpc.NewForwardEntry(ctx, "defaultForwardEntry", &vpc.ForwardEntryArgs{
//				ForwardTableId: defaultNatGateway.ForwardTableIds,
//				ExternalIp:     defaultEipAddress.IpAddress,
//				ExternalPort:   pulumi.String("80"),
//				IpProtocol:     pulumi.String("tcp"),
//				InternalIp:     pulumi.String("172.16.0.3"),
//				InternalPort:   pulumi.String("8080"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = vpc.GetForwardEntriesOutput(ctx, vpc.GetForwardEntriesOutputArgs{
//				ForwardTableId: defaultForwardEntry.ForwardTableId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetForwardEntries(ctx *pulumi.Context, args *GetForwardEntriesArgs, opts ...pulumi.InvokeOption) (*GetForwardEntriesResult, error) {
	var rv GetForwardEntriesResult
	err := ctx.Invoke("alicloud:vpc/getForwardEntries:getForwardEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getForwardEntries.
type GetForwardEntriesArgs struct {
	// The public IP address.
	ExternalIp *string `pulumi:"externalIp"`
	// The public port.
	ExternalPort *string `pulumi:"externalPort"`
	// The name of forward entry.
	ForwardEntryName *string `pulumi:"forwardEntryName"`
	// The ID of the Forward table.
	ForwardTableId string `pulumi:"forwardTableId"`
	// A list of Forward Entries IDs.
	Ids []string `pulumi:"ids"`
	// The private IP address.
	InternalIp *string `pulumi:"internalIp"`
	// The internal port.
	InternalPort *string `pulumi:"internalPort"`
	// The ip protocol. Valid values: `any`,`tcp` and `udp`.
	IpProtocol *string `pulumi:"ipProtocol"`
	// A regex string to filter results by forward entry name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getForwardEntries.
type GetForwardEntriesResult struct {
	// A list of Forward Entries. Each element contains the following attributes:
	Entries []GetForwardEntriesEntry `pulumi:"entries"`
	// The public IP address.
	ExternalIp *string `pulumi:"externalIp"`
	// The public port.
	ExternalPort *string `pulumi:"externalPort"`
	// The name of forward entry.
	ForwardEntryName *string `pulumi:"forwardEntryName"`
	ForwardTableId   string  `pulumi:"forwardTableId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Forward Entries IDs.
	Ids []string `pulumi:"ids"`
	// The private IP address.
	InternalIp *string `pulumi:"internalIp"`
	// The private port.
	InternalPort *string `pulumi:"internalPort"`
	// The protocol type.
	IpProtocol *string `pulumi:"ipProtocol"`
	NameRegex  *string `pulumi:"nameRegex"`
	// A list of Forward Entries names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of forward entry.
	Status *string `pulumi:"status"`
}

func GetForwardEntriesOutput(ctx *pulumi.Context, args GetForwardEntriesOutputArgs, opts ...pulumi.InvokeOption) GetForwardEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetForwardEntriesResult, error) {
			args := v.(GetForwardEntriesArgs)
			r, err := GetForwardEntries(ctx, &args, opts...)
			var s GetForwardEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetForwardEntriesResultOutput)
}

// A collection of arguments for invoking getForwardEntries.
type GetForwardEntriesOutputArgs struct {
	// The public IP address.
	ExternalIp pulumi.StringPtrInput `pulumi:"externalIp"`
	// The public port.
	ExternalPort pulumi.StringPtrInput `pulumi:"externalPort"`
	// The name of forward entry.
	ForwardEntryName pulumi.StringPtrInput `pulumi:"forwardEntryName"`
	// The ID of the Forward table.
	ForwardTableId pulumi.StringInput `pulumi:"forwardTableId"`
	// A list of Forward Entries IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The private IP address.
	InternalIp pulumi.StringPtrInput `pulumi:"internalIp"`
	// The internal port.
	InternalPort pulumi.StringPtrInput `pulumi:"internalPort"`
	// The ip protocol. Valid values: `any`,`tcp` and `udp`.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// A regex string to filter results by forward entry name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetForwardEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getForwardEntries.
type GetForwardEntriesResultOutput struct{ *pulumi.OutputState }

func (GetForwardEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardEntriesResult)(nil)).Elem()
}

func (o GetForwardEntriesResultOutput) ToGetForwardEntriesResultOutput() GetForwardEntriesResultOutput {
	return o
}

func (o GetForwardEntriesResultOutput) ToGetForwardEntriesResultOutputWithContext(ctx context.Context) GetForwardEntriesResultOutput {
	return o
}

// A list of Forward Entries. Each element contains the following attributes:
func (o GetForwardEntriesResultOutput) Entries() GetForwardEntriesEntryArrayOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) []GetForwardEntriesEntry { return v.Entries }).(GetForwardEntriesEntryArrayOutput)
}

// The public IP address.
func (o GetForwardEntriesResultOutput) ExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.ExternalIp }).(pulumi.StringPtrOutput)
}

// The public port.
func (o GetForwardEntriesResultOutput) ExternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.ExternalPort }).(pulumi.StringPtrOutput)
}

// The name of forward entry.
func (o GetForwardEntriesResultOutput) ForwardEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.ForwardEntryName }).(pulumi.StringPtrOutput)
}

func (o GetForwardEntriesResultOutput) ForwardTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) string { return v.ForwardTableId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetForwardEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Forward Entries IDs.
func (o GetForwardEntriesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The private IP address.
func (o GetForwardEntriesResultOutput) InternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.InternalIp }).(pulumi.StringPtrOutput)
}

// The private port.
func (o GetForwardEntriesResultOutput) InternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.InternalPort }).(pulumi.StringPtrOutput)
}

// The protocol type.
func (o GetForwardEntriesResultOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

func (o GetForwardEntriesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Forward Entries names.
func (o GetForwardEntriesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetForwardEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The status of forward entry.
func (o GetForwardEntriesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetForwardEntriesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetForwardEntriesResultOutput{})
}
