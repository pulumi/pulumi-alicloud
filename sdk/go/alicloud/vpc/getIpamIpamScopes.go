// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Vpc Ipam Ipam Scope available to the user.[What is Ipam Scope](https://www.alibabacloud.com/help/en/)
//
// > **NOTE:** Available since v1.241.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultIpam, err := vpc.NewIpamIpam(ctx, "defaultIpam", &vpc.IpamIpamArgs{
//				OperatingRegionLists: pulumi.StringArray{
//					pulumi.String("cn-hangzhou"),
//				},
//				IpamName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultIpamIpamScope, err := vpc.NewIpamIpamScope(ctx, "default", &vpc.IpamIpamScopeArgs{
//				IpamScopeName:        pulumi.String(name),
//				IpamId:               defaultIpam.ID(),
//				IpamScopeDescription: pulumi.String("This is a ipam scope."),
//				IpamScopeType:        pulumi.String("private"),
//				Tags: pulumi.StringMap{
//					"k1": pulumi.String("v1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultGetIpamIpamScopes := defaultIpamIpamScope.IpamScopeName.ApplyT(func(ipamScopeName *string) (vpc.GetIpamIpamScopesResult, error) {
//				return vpc.GetIpamIpamScopesResult(interface{}(vpc.GetIpamIpamScopesOutput(ctx, vpc.GetIpamIpamScopesOutputArgs{
//					IpamScopeName: ipamScopeName,
//				}, nil))), nil
//			}).(vpc.GetIpamIpamScopesResultOutput)
//			ctx.Export("alicloudVpcIpamIpamScopeExampleId", defaultGetIpamIpamScopes.ApplyT(func(defaultGetIpamIpamScopes vpc.GetIpamIpamScopesResult) (*string, error) {
//				return &defaultGetIpamIpamScopes.Scopes[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetIpamIpamScopes(ctx *pulumi.Context, args *GetIpamIpamScopesArgs, opts ...pulumi.InvokeOption) (*GetIpamIpamScopesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpamIpamScopesResult
	err := ctx.Invoke("alicloud:vpc/getIpamIpamScopes:getIpamIpamScopes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpamIpamScopes.
type GetIpamIpamScopesArgs struct {
	// A list of Ipam Scope IDs.
	Ids []string `pulumi:"ids"`
	// The id of the Ipam instance.
	IpamId *string `pulumi:"ipamId"`
	// The first ID of the resource.
	IpamScopeId *string `pulumi:"ipamScopeId"`
	// The name of the resource.
	IpamScopeName *string `pulumi:"ipamScopeName"`
	// IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
	IpamScopeType *string `pulumi:"ipamScopeType"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getIpamIpamScopes.
type GetIpamIpamScopesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Ipam Scope IDs.
	Ids []string `pulumi:"ids"`
	// The id of the Ipam instance.
	IpamId *string `pulumi:"ipamId"`
	// The first ID of the resource.
	IpamScopeId *string `pulumi:"ipamScopeId"`
	// The name of the resource.
	IpamScopeName *string `pulumi:"ipamScopeName"`
	// IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
	IpamScopeType *string `pulumi:"ipamScopeType"`
	NameRegex     *string `pulumi:"nameRegex"`
	// A list of name of Ipam Scopes.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A list of Ipam Scope Entries. Each element contains the following attributes:
	Scopes []GetIpamIpamScopesScope `pulumi:"scopes"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

func GetIpamIpamScopesOutput(ctx *pulumi.Context, args GetIpamIpamScopesOutputArgs, opts ...pulumi.InvokeOption) GetIpamIpamScopesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpamIpamScopesResultOutput, error) {
			args := v.(GetIpamIpamScopesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:vpc/getIpamIpamScopes:getIpamIpamScopes", args, GetIpamIpamScopesResultOutput{}, options).(GetIpamIpamScopesResultOutput), nil
		}).(GetIpamIpamScopesResultOutput)
}

// A collection of arguments for invoking getIpamIpamScopes.
type GetIpamIpamScopesOutputArgs struct {
	// A list of Ipam Scope IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The id of the Ipam instance.
	IpamId pulumi.StringPtrInput `pulumi:"ipamId"`
	// The first ID of the resource.
	IpamScopeId pulumi.StringPtrInput `pulumi:"ipamScopeId"`
	// The name of the resource.
	IpamScopeName pulumi.StringPtrInput `pulumi:"ipamScopeName"`
	// IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
	IpamScopeType pulumi.StringPtrInput `pulumi:"ipamScopeType"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetIpamIpamScopesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpamScopesArgs)(nil)).Elem()
}

// A collection of values returned by getIpamIpamScopes.
type GetIpamIpamScopesResultOutput struct{ *pulumi.OutputState }

func (GetIpamIpamScopesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpamScopesResult)(nil)).Elem()
}

func (o GetIpamIpamScopesResultOutput) ToGetIpamIpamScopesResultOutput() GetIpamIpamScopesResultOutput {
	return o
}

func (o GetIpamIpamScopesResultOutput) ToGetIpamIpamScopesResultOutputWithContext(ctx context.Context) GetIpamIpamScopesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpamIpamScopesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Ipam Scope IDs.
func (o GetIpamIpamScopesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The id of the Ipam instance.
func (o GetIpamIpamScopesResultOutput) IpamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.IpamId }).(pulumi.StringPtrOutput)
}

// The first ID of the resource.
func (o GetIpamIpamScopesResultOutput) IpamScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.IpamScopeId }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o GetIpamIpamScopesResultOutput) IpamScopeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.IpamScopeName }).(pulumi.StringPtrOutput)
}

// IPAM scope of action type:**private**.> Currently, only the role scope of the private network is supported.
func (o GetIpamIpamScopesResultOutput) IpamScopeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.IpamScopeType }).(pulumi.StringPtrOutput)
}

func (o GetIpamIpamScopesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Ipam Scopes.
func (o GetIpamIpamScopesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIpamIpamScopesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The ID of the resource group.
func (o GetIpamIpamScopesResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// A list of Ipam Scope Entries. Each element contains the following attributes:
func (o GetIpamIpamScopesResultOutput) Scopes() GetIpamIpamScopesScopeArrayOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) []GetIpamIpamScopesScope { return v.Scopes }).(GetIpamIpamScopesScopeArrayOutput)
}

// The tag of the resource.
func (o GetIpamIpamScopesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIpamIpamScopesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpamIpamScopesResultOutput{})
}
