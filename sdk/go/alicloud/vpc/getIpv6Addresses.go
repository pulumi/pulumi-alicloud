// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Vpc Ipv6 Addresses of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.142.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		associatedInstanceId, err := vpc.GetIpv6Addresses(ctx, &vpc.GetIpv6AddressesArgs{
// 			AssociatedInstanceId: pulumi.StringRef("example_value"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcIpv6AddressId1", associatedInstanceId.Addresses[0].Id)
// 		vswitchId, err := vpc.GetIpv6Addresses(ctx, &vpc.GetIpv6AddressesArgs{
// 			VswitchId: pulumi.StringRef("example_value"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcIpv6AddressId2", vswitchId.Addresses[0].Id)
// 		vpcId, err := vpc.GetIpv6Addresses(ctx, &vpc.GetIpv6AddressesArgs{
// 			VpcId: pulumi.StringRef("example_value"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcIpv6AddressId3", vpcId.Addresses[0].Id)
// 		status, err := vpc.GetIpv6Addresses(ctx, &vpc.GetIpv6AddressesArgs{
// 			Status: pulumi.StringRef("Available"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcIpv6AddressId4", status.Addresses[0].Id)
// 		return nil
// 	})
// }
// ```
func GetIpv6Addresses(ctx *pulumi.Context, args *GetIpv6AddressesArgs, opts ...pulumi.InvokeOption) (*GetIpv6AddressesResult, error) {
	var rv GetIpv6AddressesResult
	err := ctx.Invoke("alicloud:vpc/getIpv6Addresses:getIpv6Addresses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv6Addresses.
type GetIpv6AddressesArgs struct {
	// The ID of the instance that is assigned the IPv6 address.
	AssociatedInstanceId *string  `pulumi:"associatedInstanceId"`
	Ids                  []string `pulumi:"ids"`
	OutputFile           *string  `pulumi:"outputFile"`
	// The status of the IPv6 address. Valid values:`Pending` or `Available`.
	Status *string `pulumi:"status"`
	// The ID of the VPC to which the IPv6 address belongs.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the vSwitch to which the IPv6 address belongs.
	VswitchId *string `pulumi:"vswitchId"`
}

// A collection of values returned by getIpv6Addresses.
type GetIpv6AddressesResult struct {
	Addresses            []GetIpv6AddressesAddress `pulumi:"addresses"`
	AssociatedInstanceId *string                   `pulumi:"associatedInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	Status     *string  `pulumi:"status"`
	VpcId      *string  `pulumi:"vpcId"`
	VswitchId  *string  `pulumi:"vswitchId"`
}

func GetIpv6AddressesOutput(ctx *pulumi.Context, args GetIpv6AddressesOutputArgs, opts ...pulumi.InvokeOption) GetIpv6AddressesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpv6AddressesResult, error) {
			args := v.(GetIpv6AddressesArgs)
			r, err := GetIpv6Addresses(ctx, &args, opts...)
			var s GetIpv6AddressesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpv6AddressesResultOutput)
}

// A collection of arguments for invoking getIpv6Addresses.
type GetIpv6AddressesOutputArgs struct {
	// The ID of the instance that is assigned the IPv6 address.
	AssociatedInstanceId pulumi.StringPtrInput   `pulumi:"associatedInstanceId"`
	Ids                  pulumi.StringArrayInput `pulumi:"ids"`
	OutputFile           pulumi.StringPtrInput   `pulumi:"outputFile"`
	// The status of the IPv6 address. Valid values:`Pending` or `Available`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ID of the VPC to which the IPv6 address belongs.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// The ID of the vSwitch to which the IPv6 address belongs.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (GetIpv6AddressesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesArgs)(nil)).Elem()
}

// A collection of values returned by getIpv6Addresses.
type GetIpv6AddressesResultOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesResult)(nil)).Elem()
}

func (o GetIpv6AddressesResultOutput) ToGetIpv6AddressesResultOutput() GetIpv6AddressesResultOutput {
	return o
}

func (o GetIpv6AddressesResultOutput) ToGetIpv6AddressesResultOutputWithContext(ctx context.Context) GetIpv6AddressesResultOutput {
	return o
}

func (o GetIpv6AddressesResultOutput) Addresses() GetIpv6AddressesAddressArrayOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) []GetIpv6AddressesAddress { return v.Addresses }).(GetIpv6AddressesAddressArrayOutput)
}

func (o GetIpv6AddressesResultOutput) AssociatedInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.AssociatedInstanceId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpv6AddressesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpv6AddressesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetIpv6AddressesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIpv6AddressesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetIpv6AddressesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetIpv6AddressesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func (o GetIpv6AddressesResultOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpv6AddressesResultOutput{})
}
