// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a network acl entries resource to create ingress and egress entries.
//
// > **NOTE:** Available in 1.45.0+. Currently, the resource are only available in Hongkong(cn-hongkong), India(ap-south-1), and Indonesia(ap-southeast-1) regions.
//
// > **NOTE:** It doesn't support concurrency and the order of the ingress and egress entries determines the priority.
//
// > **NOTE:** Using this resource need to open a whitelist.
//
// > **DEPRECATED:**  This resource  has been deprecated from version `1.122.0`. Replace by `ingressAclEntries` and `egressAclEntries` with the resource alicloud_network_acl.
type NetworkAclEntries struct {
	pulumi.CustomResourceState

	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayOutput `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayOutput `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringOutput `pulumi:"networkAclId"`
}

// NewNetworkAclEntries registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclEntries(ctx *pulumi.Context,
	name string, args *NetworkAclEntriesArgs, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkAclId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAclId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkAclEntries
	err := ctx.RegisterResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAclEntries gets an existing NetworkAclEntries resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclEntries(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclEntriesState, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	var resource NetworkAclEntries
	err := ctx.ReadResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAclEntries resources.
type networkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId *string `pulumi:"networkAclId"`
}

type NetworkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringPtrInput
}

func (NetworkAclEntriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesState)(nil)).Elem()
}

type networkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId string `pulumi:"networkAclId"`
}

// The set of arguments for constructing a NetworkAclEntries resource.
type NetworkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringInput
}

func (NetworkAclEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesArgs)(nil)).Elem()
}

type NetworkAclEntriesInput interface {
	pulumi.Input

	ToNetworkAclEntriesOutput() NetworkAclEntriesOutput
	ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput
}

func (*NetworkAclEntries) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclEntries)(nil)).Elem()
}

func (i *NetworkAclEntries) ToNetworkAclEntriesOutput() NetworkAclEntriesOutput {
	return i.ToNetworkAclEntriesOutputWithContext(context.Background())
}

func (i *NetworkAclEntries) ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesOutput)
}

func (i *NetworkAclEntries) ToOutput(ctx context.Context) pulumix.Output[*NetworkAclEntries] {
	return pulumix.Output[*NetworkAclEntries]{
		OutputState: i.ToNetworkAclEntriesOutputWithContext(ctx).OutputState,
	}
}

// NetworkAclEntriesArrayInput is an input type that accepts NetworkAclEntriesArray and NetworkAclEntriesArrayOutput values.
// You can construct a concrete instance of `NetworkAclEntriesArrayInput` via:
//
//	NetworkAclEntriesArray{ NetworkAclEntriesArgs{...} }
type NetworkAclEntriesArrayInput interface {
	pulumi.Input

	ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput
	ToNetworkAclEntriesArrayOutputWithContext(context.Context) NetworkAclEntriesArrayOutput
}

type NetworkAclEntriesArray []NetworkAclEntriesInput

func (NetworkAclEntriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclEntries)(nil)).Elem()
}

func (i NetworkAclEntriesArray) ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput {
	return i.ToNetworkAclEntriesArrayOutputWithContext(context.Background())
}

func (i NetworkAclEntriesArray) ToNetworkAclEntriesArrayOutputWithContext(ctx context.Context) NetworkAclEntriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesArrayOutput)
}

func (i NetworkAclEntriesArray) ToOutput(ctx context.Context) pulumix.Output[[]*NetworkAclEntries] {
	return pulumix.Output[[]*NetworkAclEntries]{
		OutputState: i.ToNetworkAclEntriesArrayOutputWithContext(ctx).OutputState,
	}
}

// NetworkAclEntriesMapInput is an input type that accepts NetworkAclEntriesMap and NetworkAclEntriesMapOutput values.
// You can construct a concrete instance of `NetworkAclEntriesMapInput` via:
//
//	NetworkAclEntriesMap{ "key": NetworkAclEntriesArgs{...} }
type NetworkAclEntriesMapInput interface {
	pulumi.Input

	ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput
	ToNetworkAclEntriesMapOutputWithContext(context.Context) NetworkAclEntriesMapOutput
}

type NetworkAclEntriesMap map[string]NetworkAclEntriesInput

func (NetworkAclEntriesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclEntries)(nil)).Elem()
}

func (i NetworkAclEntriesMap) ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput {
	return i.ToNetworkAclEntriesMapOutputWithContext(context.Background())
}

func (i NetworkAclEntriesMap) ToNetworkAclEntriesMapOutputWithContext(ctx context.Context) NetworkAclEntriesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesMapOutput)
}

func (i NetworkAclEntriesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*NetworkAclEntries] {
	return pulumix.Output[map[string]*NetworkAclEntries]{
		OutputState: i.ToNetworkAclEntriesMapOutputWithContext(ctx).OutputState,
	}
}

type NetworkAclEntriesOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclEntries)(nil)).Elem()
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesOutput() NetworkAclEntriesOutput {
	return o
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput {
	return o
}

func (o NetworkAclEntriesOutput) ToOutput(ctx context.Context) pulumix.Output[*NetworkAclEntries] {
	return pulumix.Output[*NetworkAclEntries]{
		OutputState: o.OutputState,
	}
}

// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
func (o NetworkAclEntriesOutput) Egresses() NetworkAclEntriesEgressArrayOutput {
	return o.ApplyT(func(v *NetworkAclEntries) NetworkAclEntriesEgressArrayOutput { return v.Egresses }).(NetworkAclEntriesEgressArrayOutput)
}

// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
func (o NetworkAclEntriesOutput) Ingresses() NetworkAclEntriesIngressArrayOutput {
	return o.ApplyT(func(v *NetworkAclEntries) NetworkAclEntriesIngressArrayOutput { return v.Ingresses }).(NetworkAclEntriesIngressArrayOutput)
}

// The id of the network acl, the field can't be changed.
func (o NetworkAclEntriesOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAclEntries) pulumi.StringOutput { return v.NetworkAclId }).(pulumi.StringOutput)
}

type NetworkAclEntriesArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclEntries)(nil)).Elem()
}

func (o NetworkAclEntriesArrayOutput) ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput {
	return o
}

func (o NetworkAclEntriesArrayOutput) ToNetworkAclEntriesArrayOutputWithContext(ctx context.Context) NetworkAclEntriesArrayOutput {
	return o
}

func (o NetworkAclEntriesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*NetworkAclEntries] {
	return pulumix.Output[[]*NetworkAclEntries]{
		OutputState: o.OutputState,
	}
}

func (o NetworkAclEntriesArrayOutput) Index(i pulumi.IntInput) NetworkAclEntriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkAclEntries {
		return vs[0].([]*NetworkAclEntries)[vs[1].(int)]
	}).(NetworkAclEntriesOutput)
}

type NetworkAclEntriesMapOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclEntries)(nil)).Elem()
}

func (o NetworkAclEntriesMapOutput) ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput {
	return o
}

func (o NetworkAclEntriesMapOutput) ToNetworkAclEntriesMapOutputWithContext(ctx context.Context) NetworkAclEntriesMapOutput {
	return o
}

func (o NetworkAclEntriesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*NetworkAclEntries] {
	return pulumix.Output[map[string]*NetworkAclEntries]{
		OutputState: o.OutputState,
	}
}

func (o NetworkAclEntriesMapOutput) MapIndex(k pulumi.StringInput) NetworkAclEntriesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkAclEntries {
		return vs[0].(map[string]*NetworkAclEntries)[vs[1].(string)]
	}).(NetworkAclEntriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesInput)(nil)).Elem(), &NetworkAclEntries{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesArrayInput)(nil)).Elem(), NetworkAclEntriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesMapInput)(nil)).Elem(), NetworkAclEntriesMap{})
	pulumi.RegisterOutputType(NetworkAclEntriesOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesMapOutput{})
}
