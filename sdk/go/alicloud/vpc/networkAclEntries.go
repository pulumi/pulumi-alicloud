// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a network acl entries resource to create ingress and egress entries.
//
// > **NOTE:** Available in 1.45.0+. Currently, the resource are only available in Hongkong(cn-hongkong), India(ap-south-1), and Indonesia(ap-southeast-1) regions.
//
// > **NOTE:** It doesn't support concurrency and the order of the ingress and egress entries determines the priority.
//
// > **NOTE:** Using this resource need to open a whitelist.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "NetworkAclEntries"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		opt0 := "VSwitch"
// 		defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
// 			AvailableResourceCreation: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
// 			CidrBlock: pulumi.String("172.16.0.0/12"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultNetworkAcl, err := vpc.NewNetworkAcl(ctx, "defaultNetworkAcl", &vpc.NetworkAclArgs{
// 			VpcId: defaultNetwork.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
// 			VpcId:            defaultNetwork.ID(),
// 			CidrBlock:        pulumi.String("172.16.0.0/21"),
// 			AvailabilityZone: pulumi.String(defaultZones.Zones[0].Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = vpc.NewNetworkAclAttachment(ctx, "defaultNetworkAclAttachment", &vpc.NetworkAclAttachmentArgs{
// 			NetworkAclId: defaultNetworkAcl.ID(),
// 			Resources: vpc.NetworkAclAttachmentResourceArray{
// 				&vpc.NetworkAclAttachmentResourceArgs{
// 					ResourceId:   defaultSwitch.ID(),
// 					ResourceType: pulumi.String("VSwitch"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = vpc.NewNetworkAclEntries(ctx, "defaultNetworkAclEntries", &vpc.NetworkAclEntriesArgs{
// 			NetworkAclId: defaultNetworkAcl.ID(),
// 			Ingresses: vpc.NetworkAclEntriesIngressArray{
// 				&vpc.NetworkAclEntriesIngressArgs{
// 					Protocol:     pulumi.String("all"),
// 					Port:         pulumi.String("-1/-1"),
// 					SourceCidrIp: pulumi.String("0.0.0.0/32"),
// 					Name:         pulumi.String(name),
// 					EntryType:    pulumi.String("custom"),
// 					Policy:       pulumi.String("accept"),
// 					Description:  pulumi.String(name),
// 				},
// 			},
// 			Egresses: vpc.NetworkAclEntriesEgressArray{
// 				&vpc.NetworkAclEntriesEgressArgs{
// 					Protocol:          pulumi.String("all"),
// 					Port:              pulumi.String("-1/-1"),
// 					DestinationCidrIp: pulumi.String("0.0.0.0/32"),
// 					Name:              pulumi.String(name),
// 					EntryType:         pulumi.String("custom"),
// 					Policy:            pulumi.String("accept"),
// 					Description:       pulumi.String(name),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type NetworkAclEntries struct {
	pulumi.CustomResourceState

	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayOutput `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayOutput `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringOutput `pulumi:"networkAclId"`
}

// NewNetworkAclEntries registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclEntries(ctx *pulumi.Context,
	name string, args *NetworkAclEntriesArgs, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	if args == nil || args.NetworkAclId == nil {
		return nil, errors.New("missing required argument 'NetworkAclId'")
	}
	if args == nil {
		args = &NetworkAclEntriesArgs{}
	}
	var resource NetworkAclEntries
	err := ctx.RegisterResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAclEntries gets an existing NetworkAclEntries resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclEntries(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclEntriesState, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	var resource NetworkAclEntries
	err := ctx.ReadResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAclEntries resources.
type networkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId *string `pulumi:"networkAclId"`
}

type NetworkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringPtrInput
}

func (NetworkAclEntriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesState)(nil)).Elem()
}

type networkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId string `pulumi:"networkAclId"`
}

// The set of arguments for constructing a NetworkAclEntries resource.
type NetworkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringInput
}

func (NetworkAclEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesArgs)(nil)).Elem()
}
