// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Route Entry resource. A Route Entry represents a route item of one VPC Route Table.
//
// For information about Route Entry and how to use it, see [What is Route Entry](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpc-2016-04-28-createrouteentry).
//
// > **NOTE:** Available since v0.1.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// _default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
// AvailableDiskCategory: pulumi.StringRef("cloud_efficiency"),
// AvailableResourceCreation: pulumi.StringRef("VSwitch"),
// }, nil);
// if err != nil {
// return err
// }
// defaultGetImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
// MostRecent: pulumi.BoolRef(true),
// Owners: pulumi.StringRef("system"),
// }, nil);
// if err != nil {
// return err
// }
// defaultGetInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
// AvailabilityZone: pulumi.StringRef(_default.Zones[0].Id),
// CpuCoreCount: pulumi.IntRef(2),
// MemorySize: pulumi.Float64Ref(8),
// InstanceTypeFamily: pulumi.StringRef("ecs.g6"),
// }, nil);
// if err != nil {
// return err
// }
// defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
// VpcName: pulumi.String(name),
// CidrBlock: pulumi.String("192.168.0.0/16"),
// })
// if err != nil {
// return err
// }
// defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
// VswitchName: pulumi.String(name),
// VpcId: defaultNetwork.ID(),
// CidrBlock: pulumi.String("192.168.192.0/24"),
// ZoneId: pulumi.String(_default.Zones[0].Id),
// })
// if err != nil {
// return err
// }
// defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
// Name: pulumi.String(name),
// VpcId: defaultNetwork.ID(),
// })
// if err != nil {
// return err
// }
// var splat0 pulumi.StringArray
// for _, val0 := range %!v(PANIC=Format method: fatal: An assertion has failed: tok: ) {
// splat0 = append(splat0, val0.ID())
// }
// defaultInstance, err := ecs.NewInstance(ctx, "default", &ecs.InstanceArgs{
// ImageId: pulumi.String(defaultGetImages.Images[0].Id),
// InstanceType: pulumi.String(defaultGetInstanceTypes.InstanceTypes[0].Id),
// SecurityGroups: splat0,
// InternetChargeType: pulumi.String("PayByTraffic"),
// InternetMaxBandwidthOut: pulumi.Int(10),
// AvailabilityZone: pulumi.String(defaultGetInstanceTypes.InstanceTypes[0].AvailabilityZones[0]),
// InstanceChargeType: pulumi.String("PostPaid"),
// SystemDiskCategory: pulumi.String("cloud_efficiency"),
// VswitchId: defaultSwitch.ID(),
// InstanceName: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// _, err = vpc.NewRouteEntry(ctx, "default", &vpc.RouteEntryArgs{
// RouteTableId: defaultNetwork.RouteTableId,
// DestinationCidrblock: pulumi.String("172.11.1.1/32"),
// NexthopType: pulumi.String("Instance"),
// NexthopId: defaultInstance.ID(),
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Module Support
//
// You can use to the existing vpc module
// to create a VPC, several VSwitches and add several route entries one-click.
//
// ## Import
//
// Route Entry can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:vpc/routeEntry:RouteEntry example <route_table_id>:<router_id>:<destination_cidrblock>:<nexthop_type>:<nexthop_id>
// ```
type RouteEntry struct {
	pulumi.CustomResourceState

	// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination CIDR block of the custom route entry.
	DestinationCidrblock pulumi.StringPtrOutput `pulumi:"destinationCidrblock"`
	// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of Next Hop.
	NexthopId pulumi.StringPtrOutput `pulumi:"nexthopId"`
	// The type of Next Hop. Valid values:
	// - `Instance`: An Elastic Compute Service (ECS) instance.
	// - `HaVip`: A high-availability virtual IP address (HAVIP).
	// - `RouterInterface`: A router interface.
	// - `NetworkInterface`: An elastic network interface (ENI).
	// - `VpnGateway`: A VPN Gateway.
	// - `IPv6Gateway`: An IPv6 gateway.
	// - `NatGateway`: A Nat Gateway.
	// - `Attachment`: A transit router.
	// - `VpcPeer`: A VPC Peering Connection.
	// - `Ipv4Gateway`: An IPv4 gateway.
	// - `GatewayEndpoint`: A gateway endpoint.
	// - `Ecr`: A Express Connect Router (ECR).
	NexthopType pulumi.StringPtrOutput `pulumi:"nexthopType"`
	// The ID of the Route Table.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`
	// This argument has been deprecated. Please use other arguments to launch a custom route entry.
	//
	// Deprecated: Attribute routerId has been deprecated and suggest removing it from your template.
	RouterId pulumi.StringOutput `pulumi:"routerId"`
}

// NewRouteEntry registers a new resource with the given unique name, arguments, and options.
func NewRouteEntry(ctx *pulumi.Context,
	name string, args *RouteEntryArgs, opts ...pulumi.ResourceOption) (*RouteEntry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'RouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteEntry
	err := ctx.RegisterResource("alicloud:vpc/routeEntry:RouteEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteEntry gets an existing RouteEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteEntryState, opts ...pulumi.ResourceOption) (*RouteEntry, error) {
	var resource RouteEntry
	err := ctx.ReadResource("alicloud:vpc/routeEntry:RouteEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteEntry resources.
type routeEntryState struct {
	// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The destination CIDR block of the custom route entry.
	DestinationCidrblock *string `pulumi:"destinationCidrblock"`
	// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
	Name *string `pulumi:"name"`
	// The ID of Next Hop.
	NexthopId *string `pulumi:"nexthopId"`
	// The type of Next Hop. Valid values:
	// - `Instance`: An Elastic Compute Service (ECS) instance.
	// - `HaVip`: A high-availability virtual IP address (HAVIP).
	// - `RouterInterface`: A router interface.
	// - `NetworkInterface`: An elastic network interface (ENI).
	// - `VpnGateway`: A VPN Gateway.
	// - `IPv6Gateway`: An IPv6 gateway.
	// - `NatGateway`: A Nat Gateway.
	// - `Attachment`: A transit router.
	// - `VpcPeer`: A VPC Peering Connection.
	// - `Ipv4Gateway`: An IPv4 gateway.
	// - `GatewayEndpoint`: A gateway endpoint.
	// - `Ecr`: A Express Connect Router (ECR).
	NexthopType *string `pulumi:"nexthopType"`
	// The ID of the Route Table.
	RouteTableId *string `pulumi:"routeTableId"`
	// This argument has been deprecated. Please use other arguments to launch a custom route entry.
	//
	// Deprecated: Attribute routerId has been deprecated and suggest removing it from your template.
	RouterId *string `pulumi:"routerId"`
}

type RouteEntryState struct {
	// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The destination CIDR block of the custom route entry.
	DestinationCidrblock pulumi.StringPtrInput
	// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
	Name pulumi.StringPtrInput
	// The ID of Next Hop.
	NexthopId pulumi.StringPtrInput
	// The type of Next Hop. Valid values:
	// - `Instance`: An Elastic Compute Service (ECS) instance.
	// - `HaVip`: A high-availability virtual IP address (HAVIP).
	// - `RouterInterface`: A router interface.
	// - `NetworkInterface`: An elastic network interface (ENI).
	// - `VpnGateway`: A VPN Gateway.
	// - `IPv6Gateway`: An IPv6 gateway.
	// - `NatGateway`: A Nat Gateway.
	// - `Attachment`: A transit router.
	// - `VpcPeer`: A VPC Peering Connection.
	// - `Ipv4Gateway`: An IPv4 gateway.
	// - `GatewayEndpoint`: A gateway endpoint.
	// - `Ecr`: A Express Connect Router (ECR).
	NexthopType pulumi.StringPtrInput
	// The ID of the Route Table.
	RouteTableId pulumi.StringPtrInput
	// This argument has been deprecated. Please use other arguments to launch a custom route entry.
	//
	// Deprecated: Attribute routerId has been deprecated and suggest removing it from your template.
	RouterId pulumi.StringPtrInput
}

func (RouteEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeEntryState)(nil)).Elem()
}

type routeEntryArgs struct {
	// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The destination CIDR block of the custom route entry.
	DestinationCidrblock *string `pulumi:"destinationCidrblock"`
	// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
	Name *string `pulumi:"name"`
	// The ID of Next Hop.
	NexthopId *string `pulumi:"nexthopId"`
	// The type of Next Hop. Valid values:
	// - `Instance`: An Elastic Compute Service (ECS) instance.
	// - `HaVip`: A high-availability virtual IP address (HAVIP).
	// - `RouterInterface`: A router interface.
	// - `NetworkInterface`: An elastic network interface (ENI).
	// - `VpnGateway`: A VPN Gateway.
	// - `IPv6Gateway`: An IPv6 gateway.
	// - `NatGateway`: A Nat Gateway.
	// - `Attachment`: A transit router.
	// - `VpcPeer`: A VPC Peering Connection.
	// - `Ipv4Gateway`: An IPv4 gateway.
	// - `GatewayEndpoint`: A gateway endpoint.
	// - `Ecr`: A Express Connect Router (ECR).
	NexthopType *string `pulumi:"nexthopType"`
	// The ID of the Route Table.
	RouteTableId string `pulumi:"routeTableId"`
}

// The set of arguments for constructing a RouteEntry resource.
type RouteEntryArgs struct {
	// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The destination CIDR block of the custom route entry.
	DestinationCidrblock pulumi.StringPtrInput
	// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
	Name pulumi.StringPtrInput
	// The ID of Next Hop.
	NexthopId pulumi.StringPtrInput
	// The type of Next Hop. Valid values:
	// - `Instance`: An Elastic Compute Service (ECS) instance.
	// - `HaVip`: A high-availability virtual IP address (HAVIP).
	// - `RouterInterface`: A router interface.
	// - `NetworkInterface`: An elastic network interface (ENI).
	// - `VpnGateway`: A VPN Gateway.
	// - `IPv6Gateway`: An IPv6 gateway.
	// - `NatGateway`: A Nat Gateway.
	// - `Attachment`: A transit router.
	// - `VpcPeer`: A VPC Peering Connection.
	// - `Ipv4Gateway`: An IPv4 gateway.
	// - `GatewayEndpoint`: A gateway endpoint.
	// - `Ecr`: A Express Connect Router (ECR).
	NexthopType pulumi.StringPtrInput
	// The ID of the Route Table.
	RouteTableId pulumi.StringInput
}

func (RouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeEntryArgs)(nil)).Elem()
}

type RouteEntryInput interface {
	pulumi.Input

	ToRouteEntryOutput() RouteEntryOutput
	ToRouteEntryOutputWithContext(ctx context.Context) RouteEntryOutput
}

func (*RouteEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteEntry)(nil)).Elem()
}

func (i *RouteEntry) ToRouteEntryOutput() RouteEntryOutput {
	return i.ToRouteEntryOutputWithContext(context.Background())
}

func (i *RouteEntry) ToRouteEntryOutputWithContext(ctx context.Context) RouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntryOutput)
}

// RouteEntryArrayInput is an input type that accepts RouteEntryArray and RouteEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntryArrayInput` via:
//
//	RouteEntryArray{ RouteEntryArgs{...} }
type RouteEntryArrayInput interface {
	pulumi.Input

	ToRouteEntryArrayOutput() RouteEntryArrayOutput
	ToRouteEntryArrayOutputWithContext(context.Context) RouteEntryArrayOutput
}

type RouteEntryArray []RouteEntryInput

func (RouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteEntry)(nil)).Elem()
}

func (i RouteEntryArray) ToRouteEntryArrayOutput() RouteEntryArrayOutput {
	return i.ToRouteEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntryArray) ToRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntryArrayOutput)
}

// RouteEntryMapInput is an input type that accepts RouteEntryMap and RouteEntryMapOutput values.
// You can construct a concrete instance of `RouteEntryMapInput` via:
//
//	RouteEntryMap{ "key": RouteEntryArgs{...} }
type RouteEntryMapInput interface {
	pulumi.Input

	ToRouteEntryMapOutput() RouteEntryMapOutput
	ToRouteEntryMapOutputWithContext(context.Context) RouteEntryMapOutput
}

type RouteEntryMap map[string]RouteEntryInput

func (RouteEntryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteEntry)(nil)).Elem()
}

func (i RouteEntryMap) ToRouteEntryMapOutput() RouteEntryMapOutput {
	return i.ToRouteEntryMapOutputWithContext(context.Background())
}

func (i RouteEntryMap) ToRouteEntryMapOutputWithContext(ctx context.Context) RouteEntryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntryMapOutput)
}

type RouteEntryOutput struct{ *pulumi.OutputState }

func (RouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteEntry)(nil)).Elem()
}

func (o RouteEntryOutput) ToRouteEntryOutput() RouteEntryOutput {
	return o
}

func (o RouteEntryOutput) ToRouteEntryOutputWithContext(ctx context.Context) RouteEntryOutput {
	return o
}

// The description of the Route Entry. The description must be `1` to `256` characters in length, and cannot start with `http://` or `https://`.
func (o RouteEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination CIDR block of the custom route entry.
func (o RouteEntryOutput) DestinationCidrblock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringPtrOutput { return v.DestinationCidrblock }).(pulumi.StringPtrOutput)
}

// The name of the Route Entry. The name must be `1` to `128` characters in length, and cannot start with `http://` or `https://`.
func (o RouteEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of Next Hop.
func (o RouteEntryOutput) NexthopId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringPtrOutput { return v.NexthopId }).(pulumi.StringPtrOutput)
}

// The type of Next Hop. Valid values:
// - `Instance`: An Elastic Compute Service (ECS) instance.
// - `HaVip`: A high-availability virtual IP address (HAVIP).
// - `RouterInterface`: A router interface.
// - `NetworkInterface`: An elastic network interface (ENI).
// - `VpnGateway`: A VPN Gateway.
// - `IPv6Gateway`: An IPv6 gateway.
// - `NatGateway`: A Nat Gateway.
// - `Attachment`: A transit router.
// - `VpcPeer`: A VPC Peering Connection.
// - `Ipv4Gateway`: An IPv4 gateway.
// - `GatewayEndpoint`: A gateway endpoint.
// - `Ecr`: A Express Connect Router (ECR).
func (o RouteEntryOutput) NexthopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringPtrOutput { return v.NexthopType }).(pulumi.StringPtrOutput)
}

// The ID of the Route Table.
func (o RouteEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringOutput { return v.RouteTableId }).(pulumi.StringOutput)
}

// This argument has been deprecated. Please use other arguments to launch a custom route entry.
//
// Deprecated: Attribute routerId has been deprecated and suggest removing it from your template.
func (o RouteEntryOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteEntry) pulumi.StringOutput { return v.RouterId }).(pulumi.StringOutput)
}

type RouteEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteEntry)(nil)).Elem()
}

func (o RouteEntryArrayOutput) ToRouteEntryArrayOutput() RouteEntryArrayOutput {
	return o
}

func (o RouteEntryArrayOutput) ToRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntryArrayOutput {
	return o
}

func (o RouteEntryArrayOutput) Index(i pulumi.IntInput) RouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteEntry {
		return vs[0].([]*RouteEntry)[vs[1].(int)]
	}).(RouteEntryOutput)
}

type RouteEntryMapOutput struct{ *pulumi.OutputState }

func (RouteEntryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteEntry)(nil)).Elem()
}

func (o RouteEntryMapOutput) ToRouteEntryMapOutput() RouteEntryMapOutput {
	return o
}

func (o RouteEntryMapOutput) ToRouteEntryMapOutputWithContext(ctx context.Context) RouteEntryMapOutput {
	return o
}

func (o RouteEntryMapOutput) MapIndex(k pulumi.StringInput) RouteEntryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteEntry {
		return vs[0].(map[string]*RouteEntry)[vs[1].(string)]
	}).(RouteEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntryInput)(nil)).Elem(), &RouteEntry{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntryArrayInput)(nil)).Elem(), RouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntryMapInput)(nil)).Elem(), RouteEntryMap{})
	pulumi.RegisterOutputType(RouteEntryOutput{})
	pulumi.RegisterOutputType(RouteEntryArrayOutput{})
	pulumi.RegisterOutputType(RouteEntryMapOutput{})
}
