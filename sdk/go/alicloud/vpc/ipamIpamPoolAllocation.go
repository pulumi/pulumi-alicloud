// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Vpc Ipam Ipam Pool Allocation resource.
//
// Allocates or reserves a CIDR from an IPAM address pool.
//
// For information about Vpc Ipam Ipam Pool Allocation and how to use it, see [What is Ipam Pool Allocation](https://next.api.alibabacloud.com/document/VpcIpam/2023-02-28/CreateIpamPoolAllocation).
//
// > **NOTE:** Available since v1.238.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultIpam, err := vpc.NewIpamIpam(ctx, "defaultIpam", &vpc.IpamIpamArgs{
//				OperatingRegionLists: pulumi.StringArray{
//					pulumi.String("cn-hangzhou"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultIpamPool, err := vpc.NewIpamIpamPool(ctx, "defaultIpamPool", &vpc.IpamIpamPoolArgs{
//				IpamScopeId:  defaultIpam.PrivateDefaultScopeId,
//				PoolRegionId: pulumi.String("cn-hangzhou"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultIpamPoolCidr, err := vpc.NewIpamIpamPoolCidr(ctx, "defaultIpamPoolCidr", &vpc.IpamIpamPoolCidrArgs{
//				Cidr:       pulumi.String("10.0.0.0/8"),
//				IpamPoolId: defaultIpamPool.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewIpamIpamPoolAllocation(ctx, "default", &vpc.IpamIpamPoolAllocationArgs{
//				IpamPoolAllocationDescription: pulumi.String("init alloc desc"),
//				IpamPoolAllocationName:        pulumi.String(name),
//				Cidr:                          pulumi.String("10.0.0.0/20"),
//				IpamPoolId:                    defaultIpamPoolCidr.IpamPoolId,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Vpc Ipam Ipam Pool Allocation can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:vpc/ipamIpamPoolAllocation:IpamIpamPoolAllocation example <id>
// ```
type IpamIpamPoolAllocation struct {
	pulumi.CustomResourceState

	// The allocated address segment.
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// Create a custom reserved network segment from The IPAM address pool by entering a mask.
	//
	// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
	CidrMask pulumi.IntPtrOutput `pulumi:"cidrMask"`
	// Instance creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the ipam pool alloctaion.
	// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
	IpamPoolAllocationDescription pulumi.StringPtrOutput `pulumi:"ipamPoolAllocationDescription"`
	// The name of the ipam pool allocation.
	// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
	IpamPoolAllocationName pulumi.StringPtrOutput `pulumi:"ipamPoolAllocationName"`
	// The ID of the IPAM Pool.
	IpamPoolId pulumi.StringOutput `pulumi:"ipamPoolId"`
	// When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.
	// When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The status of the instance. Value:
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewIpamIpamPoolAllocation registers a new resource with the given unique name, arguments, and options.
func NewIpamIpamPoolAllocation(ctx *pulumi.Context,
	name string, args *IpamIpamPoolAllocationArgs, opts ...pulumi.ResourceOption) (*IpamIpamPoolAllocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpamPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IpamPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpamIpamPoolAllocation
	err := ctx.RegisterResource("alicloud:vpc/ipamIpamPoolAllocation:IpamIpamPoolAllocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpamIpamPoolAllocation gets an existing IpamIpamPoolAllocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpamIpamPoolAllocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpamIpamPoolAllocationState, opts ...pulumi.ResourceOption) (*IpamIpamPoolAllocation, error) {
	var resource IpamIpamPoolAllocation
	err := ctx.ReadResource("alicloud:vpc/ipamIpamPoolAllocation:IpamIpamPoolAllocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpamIpamPoolAllocation resources.
type ipamIpamPoolAllocationState struct {
	// The allocated address segment.
	Cidr *string `pulumi:"cidr"`
	// Create a custom reserved network segment from The IPAM address pool by entering a mask.
	//
	// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
	CidrMask *int `pulumi:"cidrMask"`
	// Instance creation time.
	CreateTime *string `pulumi:"createTime"`
	// The description of the ipam pool alloctaion.
	// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
	IpamPoolAllocationDescription *string `pulumi:"ipamPoolAllocationDescription"`
	// The name of the ipam pool allocation.
	// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
	IpamPoolAllocationName *string `pulumi:"ipamPoolAllocationName"`
	// The ID of the IPAM Pool.
	IpamPoolId *string `pulumi:"ipamPoolId"`
	// When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.
	// When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
	RegionId *string `pulumi:"regionId"`
	// The status of the instance. Value:
	Status *string `pulumi:"status"`
}

type IpamIpamPoolAllocationState struct {
	// The allocated address segment.
	Cidr pulumi.StringPtrInput
	// Create a custom reserved network segment from The IPAM address pool by entering a mask.
	//
	// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
	CidrMask pulumi.IntPtrInput
	// Instance creation time.
	CreateTime pulumi.StringPtrInput
	// The description of the ipam pool alloctaion.
	// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
	IpamPoolAllocationDescription pulumi.StringPtrInput
	// The name of the ipam pool allocation.
	// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
	IpamPoolAllocationName pulumi.StringPtrInput
	// The ID of the IPAM Pool.
	IpamPoolId pulumi.StringPtrInput
	// When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.
	// When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
	RegionId pulumi.StringPtrInput
	// The status of the instance. Value:
	Status pulumi.StringPtrInput
}

func (IpamIpamPoolAllocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamIpamPoolAllocationState)(nil)).Elem()
}

type ipamIpamPoolAllocationArgs struct {
	// The allocated address segment.
	Cidr *string `pulumi:"cidr"`
	// Create a custom reserved network segment from The IPAM address pool by entering a mask.
	//
	// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
	CidrMask *int `pulumi:"cidrMask"`
	// The description of the ipam pool alloctaion.
	// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
	IpamPoolAllocationDescription *string `pulumi:"ipamPoolAllocationDescription"`
	// The name of the ipam pool allocation.
	// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
	IpamPoolAllocationName *string `pulumi:"ipamPoolAllocationName"`
	// The ID of the IPAM Pool.
	IpamPoolId string `pulumi:"ipamPoolId"`
}

// The set of arguments for constructing a IpamIpamPoolAllocation resource.
type IpamIpamPoolAllocationArgs struct {
	// The allocated address segment.
	Cidr pulumi.StringPtrInput
	// Create a custom reserved network segment from The IPAM address pool by entering a mask.
	//
	// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
	CidrMask pulumi.IntPtrInput
	// The description of the ipam pool alloctaion.
	// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
	IpamPoolAllocationDescription pulumi.StringPtrInput
	// The name of the ipam pool allocation.
	// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
	IpamPoolAllocationName pulumi.StringPtrInput
	// The ID of the IPAM Pool.
	IpamPoolId pulumi.StringInput
}

func (IpamIpamPoolAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamIpamPoolAllocationArgs)(nil)).Elem()
}

type IpamIpamPoolAllocationInput interface {
	pulumi.Input

	ToIpamIpamPoolAllocationOutput() IpamIpamPoolAllocationOutput
	ToIpamIpamPoolAllocationOutputWithContext(ctx context.Context) IpamIpamPoolAllocationOutput
}

func (*IpamIpamPoolAllocation) ElementType() reflect.Type {
	return reflect.TypeOf((**IpamIpamPoolAllocation)(nil)).Elem()
}

func (i *IpamIpamPoolAllocation) ToIpamIpamPoolAllocationOutput() IpamIpamPoolAllocationOutput {
	return i.ToIpamIpamPoolAllocationOutputWithContext(context.Background())
}

func (i *IpamIpamPoolAllocation) ToIpamIpamPoolAllocationOutputWithContext(ctx context.Context) IpamIpamPoolAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpamPoolAllocationOutput)
}

// IpamIpamPoolAllocationArrayInput is an input type that accepts IpamIpamPoolAllocationArray and IpamIpamPoolAllocationArrayOutput values.
// You can construct a concrete instance of `IpamIpamPoolAllocationArrayInput` via:
//
//	IpamIpamPoolAllocationArray{ IpamIpamPoolAllocationArgs{...} }
type IpamIpamPoolAllocationArrayInput interface {
	pulumi.Input

	ToIpamIpamPoolAllocationArrayOutput() IpamIpamPoolAllocationArrayOutput
	ToIpamIpamPoolAllocationArrayOutputWithContext(context.Context) IpamIpamPoolAllocationArrayOutput
}

type IpamIpamPoolAllocationArray []IpamIpamPoolAllocationInput

func (IpamIpamPoolAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpamIpamPoolAllocation)(nil)).Elem()
}

func (i IpamIpamPoolAllocationArray) ToIpamIpamPoolAllocationArrayOutput() IpamIpamPoolAllocationArrayOutput {
	return i.ToIpamIpamPoolAllocationArrayOutputWithContext(context.Background())
}

func (i IpamIpamPoolAllocationArray) ToIpamIpamPoolAllocationArrayOutputWithContext(ctx context.Context) IpamIpamPoolAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpamPoolAllocationArrayOutput)
}

// IpamIpamPoolAllocationMapInput is an input type that accepts IpamIpamPoolAllocationMap and IpamIpamPoolAllocationMapOutput values.
// You can construct a concrete instance of `IpamIpamPoolAllocationMapInput` via:
//
//	IpamIpamPoolAllocationMap{ "key": IpamIpamPoolAllocationArgs{...} }
type IpamIpamPoolAllocationMapInput interface {
	pulumi.Input

	ToIpamIpamPoolAllocationMapOutput() IpamIpamPoolAllocationMapOutput
	ToIpamIpamPoolAllocationMapOutputWithContext(context.Context) IpamIpamPoolAllocationMapOutput
}

type IpamIpamPoolAllocationMap map[string]IpamIpamPoolAllocationInput

func (IpamIpamPoolAllocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpamIpamPoolAllocation)(nil)).Elem()
}

func (i IpamIpamPoolAllocationMap) ToIpamIpamPoolAllocationMapOutput() IpamIpamPoolAllocationMapOutput {
	return i.ToIpamIpamPoolAllocationMapOutputWithContext(context.Background())
}

func (i IpamIpamPoolAllocationMap) ToIpamIpamPoolAllocationMapOutputWithContext(ctx context.Context) IpamIpamPoolAllocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpamPoolAllocationMapOutput)
}

type IpamIpamPoolAllocationOutput struct{ *pulumi.OutputState }

func (IpamIpamPoolAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpamIpamPoolAllocation)(nil)).Elem()
}

func (o IpamIpamPoolAllocationOutput) ToIpamIpamPoolAllocationOutput() IpamIpamPoolAllocationOutput {
	return o
}

func (o IpamIpamPoolAllocationOutput) ToIpamIpamPoolAllocationOutputWithContext(ctx context.Context) IpamIpamPoolAllocationOutput {
	return o
}

// The allocated address segment.
func (o IpamIpamPoolAllocationOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

// Create a custom reserved network segment from The IPAM address pool by entering a mask.
//
// > **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
func (o IpamIpamPoolAllocationOutput) CidrMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.IntPtrOutput { return v.CidrMask }).(pulumi.IntPtrOutput)
}

// Instance creation time.
func (o IpamIpamPoolAllocationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the ipam pool alloctaion.
// It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with 'http:// 'or 'https. If it is not filled in, it is empty. The default value is empty.
func (o IpamIpamPoolAllocationOutput) IpamPoolAllocationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringPtrOutput { return v.IpamPoolAllocationDescription }).(pulumi.StringPtrOutput)
}

// The name of the ipam pool allocation.
// It must be 1 to 128 characters in length and cannot start with 'http:// 'or 'https.
func (o IpamIpamPoolAllocationOutput) IpamPoolAllocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringPtrOutput { return v.IpamPoolAllocationName }).(pulumi.StringPtrOutput)
}

// The ID of the IPAM Pool.
func (o IpamIpamPoolAllocationOutput) IpamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringOutput { return v.IpamPoolId }).(pulumi.StringOutput)
}

// When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.
// When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
func (o IpamIpamPoolAllocationOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The status of the instance. Value:
func (o IpamIpamPoolAllocationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamIpamPoolAllocation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type IpamIpamPoolAllocationArrayOutput struct{ *pulumi.OutputState }

func (IpamIpamPoolAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpamIpamPoolAllocation)(nil)).Elem()
}

func (o IpamIpamPoolAllocationArrayOutput) ToIpamIpamPoolAllocationArrayOutput() IpamIpamPoolAllocationArrayOutput {
	return o
}

func (o IpamIpamPoolAllocationArrayOutput) ToIpamIpamPoolAllocationArrayOutputWithContext(ctx context.Context) IpamIpamPoolAllocationArrayOutput {
	return o
}

func (o IpamIpamPoolAllocationArrayOutput) Index(i pulumi.IntInput) IpamIpamPoolAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpamIpamPoolAllocation {
		return vs[0].([]*IpamIpamPoolAllocation)[vs[1].(int)]
	}).(IpamIpamPoolAllocationOutput)
}

type IpamIpamPoolAllocationMapOutput struct{ *pulumi.OutputState }

func (IpamIpamPoolAllocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpamIpamPoolAllocation)(nil)).Elem()
}

func (o IpamIpamPoolAllocationMapOutput) ToIpamIpamPoolAllocationMapOutput() IpamIpamPoolAllocationMapOutput {
	return o
}

func (o IpamIpamPoolAllocationMapOutput) ToIpamIpamPoolAllocationMapOutputWithContext(ctx context.Context) IpamIpamPoolAllocationMapOutput {
	return o
}

func (o IpamIpamPoolAllocationMapOutput) MapIndex(k pulumi.StringInput) IpamIpamPoolAllocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpamIpamPoolAllocation {
		return vs[0].(map[string]*IpamIpamPoolAllocation)[vs[1].(string)]
	}).(IpamIpamPoolAllocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpamPoolAllocationInput)(nil)).Elem(), &IpamIpamPoolAllocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpamPoolAllocationArrayInput)(nil)).Elem(), IpamIpamPoolAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpamPoolAllocationMapInput)(nil)).Elem(), IpamIpamPoolAllocationMap{})
	pulumi.RegisterOutputType(IpamIpamPoolAllocationOutput{})
	pulumi.RegisterOutputType(IpamIpamPoolAllocationArrayOutput{})
	pulumi.RegisterOutputType(IpamIpamPoolAllocationMapOutput{})
}
