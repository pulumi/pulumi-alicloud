// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides a list of Common Bandwidth Packages owned by an Alibaba Cloud account.
//
// > **NOTE:** Available in 1.36.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		fooCommonBandwithPackage, err := vpc.NewCommonBandwithPackage(ctx, "fooCommonBandwithPackage", &vpc.CommonBandwithPackageArgs{
// 			Bandwidth:   pulumi.String("2"),
// 			Description: pulumi.String("tf-testAcc-CommonBandwidthPackage"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_ = vpc.GetCommonBandwidthPackagesOutput(ctx, vpc.GetCommonBandwidthPackagesOutputArgs{
// 			Ids: pulumi.StringArray{
// 				fooCommonBandwithPackage.ID(),
// 			},
// 			NameRegex: pulumi.String("^tf-testAcc.*"),
// 		}, nil)
// 		return nil
// 	})
// }
// ```
// ## Public ip addresses Block
//
//   The public ip addresses mapping supports the following:
//
//   * `ipAddress`   - The address of the EIP.
//   * `allocationId` - The ID of the EIP instance.
//   * `bandwidthPackageIpRelationStatus` - The IP relation status of bandwidth package.
func GetCommonBandwidthPackages(ctx *pulumi.Context, args *GetCommonBandwidthPackagesArgs, opts ...pulumi.InvokeOption) (*GetCommonBandwidthPackagesResult, error) {
	var rv GetCommonBandwidthPackagesResult
	err := ctx.Invoke("alicloud:vpc/getCommonBandwidthPackages:getCommonBandwidthPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCommonBandwidthPackages.
type GetCommonBandwidthPackagesArgs struct {
	// The name of bandwidth package.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// Specifies whether to precheck only the request.
	DryRun *bool `pulumi:"dryRun"`
	// A list of Common Bandwidth Packages IDs.
	Ids []string `pulumi:"ids"`
	// Specifies whether to return data of orders that have not taken effect.
	IncludeReservationData *bool `pulumi:"includeReservationData"`
	// A regex string to filter results by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of bandwidth package. Valid values: `Available` and `Pending`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getCommonBandwidthPackages.
type GetCommonBandwidthPackagesResult struct {
	// The name of bandwidth package.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	DryRun               *bool   `pulumi:"dryRun"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Optional) A list of Common Bandwidth Packages IDs.
	Ids                    []string `pulumi:"ids"`
	IncludeReservationData *bool    `pulumi:"includeReservationData"`
	NameRegex              *string  `pulumi:"nameRegex"`
	// A list of Common Bandwidth Packages names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Common Bandwidth Packages. Each element contains the following attributes:
	Packages []GetCommonBandwidthPackagesPackage `pulumi:"packages"`
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Status of the Common Bandwidth Package.
	Status *string `pulumi:"status"`
}

func GetCommonBandwidthPackagesOutput(ctx *pulumi.Context, args GetCommonBandwidthPackagesOutputArgs, opts ...pulumi.InvokeOption) GetCommonBandwidthPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCommonBandwidthPackagesResult, error) {
			args := v.(GetCommonBandwidthPackagesArgs)
			r, err := GetCommonBandwidthPackages(ctx, &args, opts...)
			return *r, err
		}).(GetCommonBandwidthPackagesResultOutput)
}

// A collection of arguments for invoking getCommonBandwidthPackages.
type GetCommonBandwidthPackagesOutputArgs struct {
	// The name of bandwidth package.
	BandwidthPackageName pulumi.StringPtrInput `pulumi:"bandwidthPackageName"`
	// Specifies whether to precheck only the request.
	DryRun pulumi.BoolPtrInput `pulumi:"dryRun"`
	// A list of Common Bandwidth Packages IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Specifies whether to return data of orders that have not taken effect.
	IncludeReservationData pulumi.BoolPtrInput `pulumi:"includeReservationData"`
	// A regex string to filter results by name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The status of bandwidth package. Valid values: `Available` and `Pending`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetCommonBandwidthPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getCommonBandwidthPackages.
type GetCommonBandwidthPackagesResultOutput struct{ *pulumi.OutputState }

func (GetCommonBandwidthPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesResult)(nil)).Elem()
}

func (o GetCommonBandwidthPackagesResultOutput) ToGetCommonBandwidthPackagesResultOutput() GetCommonBandwidthPackagesResultOutput {
	return o
}

func (o GetCommonBandwidthPackagesResultOutput) ToGetCommonBandwidthPackagesResultOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesResultOutput {
	return o
}

// The name of bandwidth package.
func (o GetCommonBandwidthPackagesResultOutput) BandwidthPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *string { return v.BandwidthPackageName }).(pulumi.StringPtrOutput)
}

func (o GetCommonBandwidthPackagesResultOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *bool { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCommonBandwidthPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) A list of Common Bandwidth Packages IDs.
func (o GetCommonBandwidthPackagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetCommonBandwidthPackagesResultOutput) IncludeReservationData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *bool { return v.IncludeReservationData }).(pulumi.BoolPtrOutput)
}

func (o GetCommonBandwidthPackagesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Common Bandwidth Packages names.
func (o GetCommonBandwidthPackagesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetCommonBandwidthPackagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Common Bandwidth Packages. Each element contains the following attributes:
func (o GetCommonBandwidthPackagesResultOutput) Packages() GetCommonBandwidthPackagesPackageArrayOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) []GetCommonBandwidthPackagesPackage { return v.Packages }).(GetCommonBandwidthPackagesPackageArrayOutput)
}

// The Id of resource group which the common bandwidth package belongs.
func (o GetCommonBandwidthPackagesResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// Status of the Common Bandwidth Package.
func (o GetCommonBandwidthPackagesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCommonBandwidthPackagesResultOutput{})
}
