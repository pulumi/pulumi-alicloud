// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Vswitch can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:vpc/switch:Switch example vsw-abc123456
//
// ```
type Switch struct {
	pulumi.CustomResourceState

	// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
	//
	// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// The CIDR block for the switch.
	CidrBlock pulumi.StringOutput `pulumi:"cidrBlock"`
	// The switch description. Defaults to null.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
	EnableIpv6 pulumi.BoolPtrOutput `pulumi:"enableIpv6"`
	// (Available in 1.201.1+) The IPv6 CIDR block for the switch.
	Ipv6CidrBlock pulumi.StringOutput `pulumi:"ipv6CidrBlock"`
	// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
	Ipv6CidrBlockMask pulumi.IntPtrOutput `pulumi:"ipv6CidrBlockMask"`
	// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Available in 1.119.0+) The status of the switch.
	Status pulumi.StringOutput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The VPC ID.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The name of the switch. Defaults to null.
	VswitchName pulumi.StringOutput `pulumi:"vswitchName"`
	// The AZ for the switch. **Note:** Required for a VPC switch.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewSwitch registers a new resource with the given unique name, arguments, and options.
func NewSwitch(ctx *pulumi.Context,
	name string, args *SwitchArgs, opts ...pulumi.ResourceOption) (*Switch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CidrBlock == nil {
		return nil, errors.New("invalid value for required argument 'CidrBlock'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource Switch
	err := ctx.RegisterResource("alicloud:vpc/switch:Switch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitch gets an existing Switch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchState, opts ...pulumi.ResourceOption) (*Switch, error) {
	var resource Switch
	err := ctx.ReadResource("alicloud:vpc/switch:Switch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Switch resources.
type switchState struct {
	// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
	//
	// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The CIDR block for the switch.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The switch description. Defaults to null.
	Description *string `pulumi:"description"`
	// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// (Available in 1.201.1+) The IPv6 CIDR block for the switch.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
	Ipv6CidrBlockMask *int `pulumi:"ipv6CidrBlockMask"`
	// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
	Name *string `pulumi:"name"`
	// (Available in 1.119.0+) The status of the switch.
	Status *string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The VPC ID.
	VpcId *string `pulumi:"vpcId"`
	// The name of the switch. Defaults to null.
	VswitchName *string `pulumi:"vswitchName"`
	// The AZ for the switch. **Note:** Required for a VPC switch.
	ZoneId *string `pulumi:"zoneId"`
}

type SwitchState struct {
	// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
	//
	// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
	AvailabilityZone pulumi.StringPtrInput
	// The CIDR block for the switch.
	CidrBlock pulumi.StringPtrInput
	// The switch description. Defaults to null.
	Description pulumi.StringPtrInput
	// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
	EnableIpv6 pulumi.BoolPtrInput
	// (Available in 1.201.1+) The IPv6 CIDR block for the switch.
	Ipv6CidrBlock pulumi.StringPtrInput
	// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
	Ipv6CidrBlockMask pulumi.IntPtrInput
	// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
	Name pulumi.StringPtrInput
	// (Available in 1.119.0+) The status of the switch.
	Status pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput
	// The VPC ID.
	VpcId pulumi.StringPtrInput
	// The name of the switch. Defaults to null.
	VswitchName pulumi.StringPtrInput
	// The AZ for the switch. **Note:** Required for a VPC switch.
	ZoneId pulumi.StringPtrInput
}

func (SwitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchState)(nil)).Elem()
}

type switchArgs struct {
	// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
	//
	// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The CIDR block for the switch.
	CidrBlock string `pulumi:"cidrBlock"`
	// The switch description. Defaults to null.
	Description *string `pulumi:"description"`
	// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
	Ipv6CidrBlockMask *int `pulumi:"ipv6CidrBlockMask"`
	// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
	Name *string `pulumi:"name"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The VPC ID.
	VpcId string `pulumi:"vpcId"`
	// The name of the switch. Defaults to null.
	VswitchName *string `pulumi:"vswitchName"`
	// The AZ for the switch. **Note:** Required for a VPC switch.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Switch resource.
type SwitchArgs struct {
	// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
	//
	// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
	AvailabilityZone pulumi.StringPtrInput
	// The CIDR block for the switch.
	CidrBlock pulumi.StringInput
	// The switch description. Defaults to null.
	Description pulumi.StringPtrInput
	// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
	EnableIpv6 pulumi.BoolPtrInput
	// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
	Ipv6CidrBlockMask pulumi.IntPtrInput
	// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
	Name pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput
	// The VPC ID.
	VpcId pulumi.StringInput
	// The name of the switch. Defaults to null.
	VswitchName pulumi.StringPtrInput
	// The AZ for the switch. **Note:** Required for a VPC switch.
	ZoneId pulumi.StringPtrInput
}

func (SwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchArgs)(nil)).Elem()
}

type SwitchInput interface {
	pulumi.Input

	ToSwitchOutput() SwitchOutput
	ToSwitchOutputWithContext(ctx context.Context) SwitchOutput
}

func (*Switch) ElementType() reflect.Type {
	return reflect.TypeOf((**Switch)(nil)).Elem()
}

func (i *Switch) ToSwitchOutput() SwitchOutput {
	return i.ToSwitchOutputWithContext(context.Background())
}

func (i *Switch) ToSwitchOutputWithContext(ctx context.Context) SwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchOutput)
}

// SwitchArrayInput is an input type that accepts SwitchArray and SwitchArrayOutput values.
// You can construct a concrete instance of `SwitchArrayInput` via:
//
//	SwitchArray{ SwitchArgs{...} }
type SwitchArrayInput interface {
	pulumi.Input

	ToSwitchArrayOutput() SwitchArrayOutput
	ToSwitchArrayOutputWithContext(context.Context) SwitchArrayOutput
}

type SwitchArray []SwitchInput

func (SwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switch)(nil)).Elem()
}

func (i SwitchArray) ToSwitchArrayOutput() SwitchArrayOutput {
	return i.ToSwitchArrayOutputWithContext(context.Background())
}

func (i SwitchArray) ToSwitchArrayOutputWithContext(ctx context.Context) SwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchArrayOutput)
}

// SwitchMapInput is an input type that accepts SwitchMap and SwitchMapOutput values.
// You can construct a concrete instance of `SwitchMapInput` via:
//
//	SwitchMap{ "key": SwitchArgs{...} }
type SwitchMapInput interface {
	pulumi.Input

	ToSwitchMapOutput() SwitchMapOutput
	ToSwitchMapOutputWithContext(context.Context) SwitchMapOutput
}

type SwitchMap map[string]SwitchInput

func (SwitchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switch)(nil)).Elem()
}

func (i SwitchMap) ToSwitchMapOutput() SwitchMapOutput {
	return i.ToSwitchMapOutputWithContext(context.Background())
}

func (i SwitchMap) ToSwitchMapOutputWithContext(ctx context.Context) SwitchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchMapOutput)
}

type SwitchOutput struct{ *pulumi.OutputState }

func (SwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Switch)(nil)).Elem()
}

func (o SwitchOutput) ToSwitchOutput() SwitchOutput {
	return o
}

func (o SwitchOutput) ToSwitchOutputWithContext(ctx context.Context) SwitchOutput {
	return o
}

// Field `availabilityZone` has been deprecated from provider version 1.119.0. New field `zoneId` instead.
//
// Deprecated: Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.
func (o SwitchOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The CIDR block for the switch.
func (o SwitchOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.CidrBlock }).(pulumi.StringOutput)
}

// The switch description. Defaults to null.
func (o SwitchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the IPv6 CIDR block. Valid values: `false` (Default): disables IPv6 CIDR blocks. `true`: enables IPv6 CIDR blocks.
func (o SwitchOutput) EnableIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Switch) pulumi.BoolPtrOutput { return v.EnableIpv6 }).(pulumi.BoolPtrOutput)
}

// (Available in 1.201.1+) The IPv6 CIDR block for the switch.
func (o SwitchOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The last 8 bits of the switch's IPv6 segment, taking values: 0~255. This parameter is only supported to be configured when the VPC to which the switch belongs is IPv6 enabled.
func (o SwitchOutput) Ipv6CidrBlockMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Switch) pulumi.IntPtrOutput { return v.Ipv6CidrBlockMask }).(pulumi.IntPtrOutput)
}

// Field `name` has been deprecated from provider version 1.119.0. New field `vswitchName` instead.
//
// Deprecated: Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
func (o SwitchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Available in 1.119.0+) The status of the switch.
func (o SwitchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o SwitchOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Switch) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// The VPC ID.
func (o SwitchOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the switch. Defaults to null.
func (o SwitchOutput) VswitchName() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.VswitchName }).(pulumi.StringOutput)
}

// The AZ for the switch. **Note:** Required for a VPC switch.
func (o SwitchOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Switch) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type SwitchArrayOutput struct{ *pulumi.OutputState }

func (SwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Switch)(nil)).Elem()
}

func (o SwitchArrayOutput) ToSwitchArrayOutput() SwitchArrayOutput {
	return o
}

func (o SwitchArrayOutput) ToSwitchArrayOutputWithContext(ctx context.Context) SwitchArrayOutput {
	return o
}

func (o SwitchArrayOutput) Index(i pulumi.IntInput) SwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Switch {
		return vs[0].([]*Switch)[vs[1].(int)]
	}).(SwitchOutput)
}

type SwitchMapOutput struct{ *pulumi.OutputState }

func (SwitchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Switch)(nil)).Elem()
}

func (o SwitchMapOutput) ToSwitchMapOutput() SwitchMapOutput {
	return o
}

func (o SwitchMapOutput) ToSwitchMapOutputWithContext(ctx context.Context) SwitchMapOutput {
	return o
}

func (o SwitchMapOutput) MapIndex(k pulumi.StringInput) SwitchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Switch {
		return vs[0].(map[string]*Switch)[vs[1].(string)]
	}).(SwitchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchInput)(nil)).Elem(), &Switch{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchArrayInput)(nil)).Elem(), SwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchMapInput)(nil)).Elem(), SwitchMap{})
	pulumi.RegisterOutputType(SwitchOutput{})
	pulumi.RegisterOutputType(SwitchArrayOutput{})
	pulumi.RegisterOutputType(SwitchMapOutput{})
}
