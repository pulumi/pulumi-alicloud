// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Vpc Peer Connections of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.186.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := vpc.GetPeerConnections(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("vpcPeerConnectionId1", ids.Connections[0].Id)
//			nameRegex, err := vpc.GetPeerConnections(ctx, &vpc.GetPeerConnectionsArgs{
//				NameRegex: pulumi.StringRef("^my-PeerConnection"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("vpcPeerConnectionId2", nameRegex.Connections[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetPeerConnections(ctx *pulumi.Context, args *GetPeerConnectionsArgs, opts ...pulumi.InvokeOption) (*GetPeerConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPeerConnectionsResult
	err := ctx.Invoke("alicloud:vpc/getPeerConnections:getPeerConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeerConnections.
type GetPeerConnectionsArgs struct {
	// A list of PeerConnection IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by PeerConnection name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The name of the resource.
	PeerConnectionName *string `pulumi:"peerConnectionName"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The ID of the requester VPC.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getPeerConnections.
type GetPeerConnectionsResult struct {
	Connections []GetPeerConnectionsConnection `pulumi:"connections"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	Ids                []string `pulumi:"ids"`
	NameRegex          *string  `pulumi:"nameRegex"`
	Names              []string `pulumi:"names"`
	OutputFile         *string  `pulumi:"outputFile"`
	PeerConnectionName *string  `pulumi:"peerConnectionName"`
	Status             *string  `pulumi:"status"`
	VpcId              *string  `pulumi:"vpcId"`
}

func GetPeerConnectionsOutput(ctx *pulumi.Context, args GetPeerConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetPeerConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPeerConnectionsResult, error) {
			args := v.(GetPeerConnectionsArgs)
			r, err := GetPeerConnections(ctx, &args, opts...)
			var s GetPeerConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPeerConnectionsResultOutput)
}

// A collection of arguments for invoking getPeerConnections.
type GetPeerConnectionsOutputArgs struct {
	// A list of PeerConnection IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by PeerConnection name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of the resource.
	PeerConnectionName pulumi.StringPtrInput `pulumi:"peerConnectionName"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The ID of the requester VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetPeerConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getPeerConnections.
type GetPeerConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetPeerConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerConnectionsResult)(nil)).Elem()
}

func (o GetPeerConnectionsResultOutput) ToGetPeerConnectionsResultOutput() GetPeerConnectionsResultOutput {
	return o
}

func (o GetPeerConnectionsResultOutput) ToGetPeerConnectionsResultOutputWithContext(ctx context.Context) GetPeerConnectionsResultOutput {
	return o
}

func (o GetPeerConnectionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPeerConnectionsResult] {
	return pulumix.Output[GetPeerConnectionsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPeerConnectionsResultOutput) Connections() GetPeerConnectionsConnectionArrayOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) []GetPeerConnectionsConnection { return v.Connections }).(GetPeerConnectionsConnectionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPeerConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPeerConnectionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPeerConnectionsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetPeerConnectionsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetPeerConnectionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetPeerConnectionsResultOutput) PeerConnectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) *string { return v.PeerConnectionName }).(pulumi.StringPtrOutput)
}

func (o GetPeerConnectionsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetPeerConnectionsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerConnectionsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPeerConnectionsResultOutput{})
}
