// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DhcpOptionsSetAssociateVpc struct {
	// The status of the VPC network that is associated with the DHCP options set. Valid values:`InUse` or `Pending`. `InUse`: The VPC network is in use. `Pending`: The VPC network is being configured.
	AssociateStatus *string `pulumi:"associateStatus"`
	// The ID of the VPC network that is associated with the DHCP options set.
	VpcId *string `pulumi:"vpcId"`
}

// DhcpOptionsSetAssociateVpcInput is an input type that accepts DhcpOptionsSetAssociateVpcArgs and DhcpOptionsSetAssociateVpcOutput values.
// You can construct a concrete instance of `DhcpOptionsSetAssociateVpcInput` via:
//
//	DhcpOptionsSetAssociateVpcArgs{...}
type DhcpOptionsSetAssociateVpcInput interface {
	pulumi.Input

	ToDhcpOptionsSetAssociateVpcOutput() DhcpOptionsSetAssociateVpcOutput
	ToDhcpOptionsSetAssociateVpcOutputWithContext(context.Context) DhcpOptionsSetAssociateVpcOutput
}

type DhcpOptionsSetAssociateVpcArgs struct {
	// The status of the VPC network that is associated with the DHCP options set. Valid values:`InUse` or `Pending`. `InUse`: The VPC network is in use. `Pending`: The VPC network is being configured.
	AssociateStatus pulumi.StringPtrInput `pulumi:"associateStatus"`
	// The ID of the VPC network that is associated with the DHCP options set.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (DhcpOptionsSetAssociateVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsSetAssociateVpc)(nil)).Elem()
}

func (i DhcpOptionsSetAssociateVpcArgs) ToDhcpOptionsSetAssociateVpcOutput() DhcpOptionsSetAssociateVpcOutput {
	return i.ToDhcpOptionsSetAssociateVpcOutputWithContext(context.Background())
}

func (i DhcpOptionsSetAssociateVpcArgs) ToDhcpOptionsSetAssociateVpcOutputWithContext(ctx context.Context) DhcpOptionsSetAssociateVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsSetAssociateVpcOutput)
}

// DhcpOptionsSetAssociateVpcArrayInput is an input type that accepts DhcpOptionsSetAssociateVpcArray and DhcpOptionsSetAssociateVpcArrayOutput values.
// You can construct a concrete instance of `DhcpOptionsSetAssociateVpcArrayInput` via:
//
//	DhcpOptionsSetAssociateVpcArray{ DhcpOptionsSetAssociateVpcArgs{...} }
type DhcpOptionsSetAssociateVpcArrayInput interface {
	pulumi.Input

	ToDhcpOptionsSetAssociateVpcArrayOutput() DhcpOptionsSetAssociateVpcArrayOutput
	ToDhcpOptionsSetAssociateVpcArrayOutputWithContext(context.Context) DhcpOptionsSetAssociateVpcArrayOutput
}

type DhcpOptionsSetAssociateVpcArray []DhcpOptionsSetAssociateVpcInput

func (DhcpOptionsSetAssociateVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DhcpOptionsSetAssociateVpc)(nil)).Elem()
}

func (i DhcpOptionsSetAssociateVpcArray) ToDhcpOptionsSetAssociateVpcArrayOutput() DhcpOptionsSetAssociateVpcArrayOutput {
	return i.ToDhcpOptionsSetAssociateVpcArrayOutputWithContext(context.Background())
}

func (i DhcpOptionsSetAssociateVpcArray) ToDhcpOptionsSetAssociateVpcArrayOutputWithContext(ctx context.Context) DhcpOptionsSetAssociateVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsSetAssociateVpcArrayOutput)
}

type DhcpOptionsSetAssociateVpcOutput struct{ *pulumi.OutputState }

func (DhcpOptionsSetAssociateVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsSetAssociateVpc)(nil)).Elem()
}

func (o DhcpOptionsSetAssociateVpcOutput) ToDhcpOptionsSetAssociateVpcOutput() DhcpOptionsSetAssociateVpcOutput {
	return o
}

func (o DhcpOptionsSetAssociateVpcOutput) ToDhcpOptionsSetAssociateVpcOutputWithContext(ctx context.Context) DhcpOptionsSetAssociateVpcOutput {
	return o
}

// The status of the VPC network that is associated with the DHCP options set. Valid values:`InUse` or `Pending`. `InUse`: The VPC network is in use. `Pending`: The VPC network is being configured.
func (o DhcpOptionsSetAssociateVpcOutput) AssociateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DhcpOptionsSetAssociateVpc) *string { return v.AssociateStatus }).(pulumi.StringPtrOutput)
}

// The ID of the VPC network that is associated with the DHCP options set.
func (o DhcpOptionsSetAssociateVpcOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DhcpOptionsSetAssociateVpc) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type DhcpOptionsSetAssociateVpcArrayOutput struct{ *pulumi.OutputState }

func (DhcpOptionsSetAssociateVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DhcpOptionsSetAssociateVpc)(nil)).Elem()
}

func (o DhcpOptionsSetAssociateVpcArrayOutput) ToDhcpOptionsSetAssociateVpcArrayOutput() DhcpOptionsSetAssociateVpcArrayOutput {
	return o
}

func (o DhcpOptionsSetAssociateVpcArrayOutput) ToDhcpOptionsSetAssociateVpcArrayOutputWithContext(ctx context.Context) DhcpOptionsSetAssociateVpcArrayOutput {
	return o
}

func (o DhcpOptionsSetAssociateVpcArrayOutput) Index(i pulumi.IntInput) DhcpOptionsSetAssociateVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DhcpOptionsSetAssociateVpc {
		return vs[0].([]DhcpOptionsSetAssociateVpc)[vs[1].(int)]
	}).(DhcpOptionsSetAssociateVpcOutput)
}

type NetworkAclAttachmentResource struct {
	// The resource id that the network acl will associate with.
	ResourceId string `pulumi:"resourceId"`
	// The resource id that the network acl will associate with. Only support `VSwitch` now.
	ResourceType string `pulumi:"resourceType"`
}

// NetworkAclAttachmentResourceInput is an input type that accepts NetworkAclAttachmentResourceArgs and NetworkAclAttachmentResourceOutput values.
// You can construct a concrete instance of `NetworkAclAttachmentResourceInput` via:
//
//	NetworkAclAttachmentResourceArgs{...}
type NetworkAclAttachmentResourceInput interface {
	pulumi.Input

	ToNetworkAclAttachmentResourceOutput() NetworkAclAttachmentResourceOutput
	ToNetworkAclAttachmentResourceOutputWithContext(context.Context) NetworkAclAttachmentResourceOutput
}

type NetworkAclAttachmentResourceArgs struct {
	// The resource id that the network acl will associate with.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The resource id that the network acl will associate with. Only support `VSwitch` now.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (NetworkAclAttachmentResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclAttachmentResource)(nil)).Elem()
}

func (i NetworkAclAttachmentResourceArgs) ToNetworkAclAttachmentResourceOutput() NetworkAclAttachmentResourceOutput {
	return i.ToNetworkAclAttachmentResourceOutputWithContext(context.Background())
}

func (i NetworkAclAttachmentResourceArgs) ToNetworkAclAttachmentResourceOutputWithContext(ctx context.Context) NetworkAclAttachmentResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclAttachmentResourceOutput)
}

// NetworkAclAttachmentResourceArrayInput is an input type that accepts NetworkAclAttachmentResourceArray and NetworkAclAttachmentResourceArrayOutput values.
// You can construct a concrete instance of `NetworkAclAttachmentResourceArrayInput` via:
//
//	NetworkAclAttachmentResourceArray{ NetworkAclAttachmentResourceArgs{...} }
type NetworkAclAttachmentResourceArrayInput interface {
	pulumi.Input

	ToNetworkAclAttachmentResourceArrayOutput() NetworkAclAttachmentResourceArrayOutput
	ToNetworkAclAttachmentResourceArrayOutputWithContext(context.Context) NetworkAclAttachmentResourceArrayOutput
}

type NetworkAclAttachmentResourceArray []NetworkAclAttachmentResourceInput

func (NetworkAclAttachmentResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclAttachmentResource)(nil)).Elem()
}

func (i NetworkAclAttachmentResourceArray) ToNetworkAclAttachmentResourceArrayOutput() NetworkAclAttachmentResourceArrayOutput {
	return i.ToNetworkAclAttachmentResourceArrayOutputWithContext(context.Background())
}

func (i NetworkAclAttachmentResourceArray) ToNetworkAclAttachmentResourceArrayOutputWithContext(ctx context.Context) NetworkAclAttachmentResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclAttachmentResourceArrayOutput)
}

type NetworkAclAttachmentResourceOutput struct{ *pulumi.OutputState }

func (NetworkAclAttachmentResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclAttachmentResource)(nil)).Elem()
}

func (o NetworkAclAttachmentResourceOutput) ToNetworkAclAttachmentResourceOutput() NetworkAclAttachmentResourceOutput {
	return o
}

func (o NetworkAclAttachmentResourceOutput) ToNetworkAclAttachmentResourceOutputWithContext(ctx context.Context) NetworkAclAttachmentResourceOutput {
	return o
}

// The resource id that the network acl will associate with.
func (o NetworkAclAttachmentResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclAttachmentResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource id that the network acl will associate with. Only support `VSwitch` now.
func (o NetworkAclAttachmentResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclAttachmentResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type NetworkAclAttachmentResourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclAttachmentResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclAttachmentResource)(nil)).Elem()
}

func (o NetworkAclAttachmentResourceArrayOutput) ToNetworkAclAttachmentResourceArrayOutput() NetworkAclAttachmentResourceArrayOutput {
	return o
}

func (o NetworkAclAttachmentResourceArrayOutput) ToNetworkAclAttachmentResourceArrayOutputWithContext(ctx context.Context) NetworkAclAttachmentResourceArrayOutput {
	return o
}

func (o NetworkAclAttachmentResourceArrayOutput) Index(i pulumi.IntInput) NetworkAclAttachmentResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclAttachmentResource {
		return vs[0].([]NetworkAclAttachmentResource)[vs[1].(int)]
	}).(NetworkAclAttachmentResourceOutput)
}

type NetworkAclEgressAclEntry struct {
	// The description of the network acl instance.
	Description *string `pulumi:"description"`
	// The destination cidr ip of egress entries.
	DestinationCidrIp *string `pulumi:"destinationCidrIp"`
	// The entry name of ingress entries.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of ingress entries. Valid values `accept` and `drop`.
	Policy *string `pulumi:"policy"`
	// The port of ingress entries.
	Port *string `pulumi:"port"`
	// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
	Protocol *string `pulumi:"protocol"`
}

// NetworkAclEgressAclEntryInput is an input type that accepts NetworkAclEgressAclEntryArgs and NetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryInput` via:
//
//	NetworkAclEgressAclEntryArgs{...}
type NetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput
	ToNetworkAclEgressAclEntryOutputWithContext(context.Context) NetworkAclEgressAclEntryOutput
}

type NetworkAclEgressAclEntryArgs struct {
	// The description of the network acl instance.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination cidr ip of egress entries.
	DestinationCidrIp pulumi.StringPtrInput `pulumi:"destinationCidrIp"`
	// The entry name of ingress entries.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of ingress entries. Valid values `accept` and `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of ingress entries.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (NetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return i.ToNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryOutput)
}

// NetworkAclEgressAclEntryArrayInput is an input type that accepts NetworkAclEgressAclEntryArray and NetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryArrayInput` via:
//
//	NetworkAclEgressAclEntryArray{ NetworkAclEgressAclEntryArgs{...} }
type NetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput
	ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) NetworkAclEgressAclEntryArrayOutput
}

type NetworkAclEgressAclEntryArray []NetworkAclEgressAclEntryInput

func (NetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return i.ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryArrayOutput)
}

type NetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return o
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return o
}

// The description of the network acl instance.
func (o NetworkAclEgressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination cidr ip of egress entries.
func (o NetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.DestinationCidrIp }).(pulumi.StringPtrOutput)
}

// The entry name of ingress entries.
func (o NetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of ingress entries. Valid values `accept` and `drop`.
func (o NetworkAclEgressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of ingress entries.
func (o NetworkAclEgressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
func (o NetworkAclEgressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type NetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgressAclEntry {
		return vs[0].([]NetworkAclEgressAclEntry)[vs[1].(int)]
	}).(NetworkAclEgressAclEntryOutput)
}

type NetworkAclEntriesEgress struct {
	// The description of the ingress entry.
	Description *string `pulumi:"description"`
	// The destination ip of the egress entry.
	DestinationCidrIp *string `pulumi:"destinationCidrIp"`
	// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
	EntryType *string `pulumi:"entryType"`
	// The name of the ingress entry.
	Name *string `pulumi:"name"`
	// The policy of the ingress entry. It must be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of the ingress entry.
	Port *string `pulumi:"port"`
	// The protocol of the ingress entry.
	Protocol *string `pulumi:"protocol"`
}

// NetworkAclEntriesEgressInput is an input type that accepts NetworkAclEntriesEgressArgs and NetworkAclEntriesEgressOutput values.
// You can construct a concrete instance of `NetworkAclEntriesEgressInput` via:
//
//	NetworkAclEntriesEgressArgs{...}
type NetworkAclEntriesEgressInput interface {
	pulumi.Input

	ToNetworkAclEntriesEgressOutput() NetworkAclEntriesEgressOutput
	ToNetworkAclEntriesEgressOutputWithContext(context.Context) NetworkAclEntriesEgressOutput
}

type NetworkAclEntriesEgressArgs struct {
	// The description of the ingress entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination ip of the egress entry.
	DestinationCidrIp pulumi.StringPtrInput `pulumi:"destinationCidrIp"`
	// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
	EntryType pulumi.StringPtrInput `pulumi:"entryType"`
	// The name of the ingress entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The policy of the ingress entry. It must be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of the ingress entry.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol of the ingress entry.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (NetworkAclEntriesEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntriesEgress)(nil)).Elem()
}

func (i NetworkAclEntriesEgressArgs) ToNetworkAclEntriesEgressOutput() NetworkAclEntriesEgressOutput {
	return i.ToNetworkAclEntriesEgressOutputWithContext(context.Background())
}

func (i NetworkAclEntriesEgressArgs) ToNetworkAclEntriesEgressOutputWithContext(ctx context.Context) NetworkAclEntriesEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesEgressOutput)
}

// NetworkAclEntriesEgressArrayInput is an input type that accepts NetworkAclEntriesEgressArray and NetworkAclEntriesEgressArrayOutput values.
// You can construct a concrete instance of `NetworkAclEntriesEgressArrayInput` via:
//
//	NetworkAclEntriesEgressArray{ NetworkAclEntriesEgressArgs{...} }
type NetworkAclEntriesEgressArrayInput interface {
	pulumi.Input

	ToNetworkAclEntriesEgressArrayOutput() NetworkAclEntriesEgressArrayOutput
	ToNetworkAclEntriesEgressArrayOutputWithContext(context.Context) NetworkAclEntriesEgressArrayOutput
}

type NetworkAclEntriesEgressArray []NetworkAclEntriesEgressInput

func (NetworkAclEntriesEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEntriesEgress)(nil)).Elem()
}

func (i NetworkAclEntriesEgressArray) ToNetworkAclEntriesEgressArrayOutput() NetworkAclEntriesEgressArrayOutput {
	return i.ToNetworkAclEntriesEgressArrayOutputWithContext(context.Background())
}

func (i NetworkAclEntriesEgressArray) ToNetworkAclEntriesEgressArrayOutputWithContext(ctx context.Context) NetworkAclEntriesEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesEgressArrayOutput)
}

type NetworkAclEntriesEgressOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntriesEgress)(nil)).Elem()
}

func (o NetworkAclEntriesEgressOutput) ToNetworkAclEntriesEgressOutput() NetworkAclEntriesEgressOutput {
	return o
}

func (o NetworkAclEntriesEgressOutput) ToNetworkAclEntriesEgressOutputWithContext(ctx context.Context) NetworkAclEntriesEgressOutput {
	return o
}

// The description of the ingress entry.
func (o NetworkAclEntriesEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination ip of the egress entry.
func (o NetworkAclEntriesEgressOutput) DestinationCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.DestinationCidrIp }).(pulumi.StringPtrOutput)
}

// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
func (o NetworkAclEntriesEgressOutput) EntryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.EntryType }).(pulumi.StringPtrOutput)
}

// The name of the ingress entry.
func (o NetworkAclEntriesEgressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The policy of the ingress entry. It must be `accept` or `drop`.
func (o NetworkAclEntriesEgressOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of the ingress entry.
func (o NetworkAclEntriesEgressOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol of the ingress entry.
func (o NetworkAclEntriesEgressOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesEgress) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type NetworkAclEntriesEgressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEntriesEgress)(nil)).Elem()
}

func (o NetworkAclEntriesEgressArrayOutput) ToNetworkAclEntriesEgressArrayOutput() NetworkAclEntriesEgressArrayOutput {
	return o
}

func (o NetworkAclEntriesEgressArrayOutput) ToNetworkAclEntriesEgressArrayOutputWithContext(ctx context.Context) NetworkAclEntriesEgressArrayOutput {
	return o
}

func (o NetworkAclEntriesEgressArrayOutput) Index(i pulumi.IntInput) NetworkAclEntriesEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEntriesEgress {
		return vs[0].([]NetworkAclEntriesEgress)[vs[1].(int)]
	}).(NetworkAclEntriesEgressOutput)
}

type NetworkAclEntriesIngress struct {
	// The description of the ingress entry.
	Description *string `pulumi:"description"`
	// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
	EntryType *string `pulumi:"entryType"`
	// The name of the ingress entry.
	Name *string `pulumi:"name"`
	// The policy of the ingress entry. It must be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of the ingress entry.
	Port *string `pulumi:"port"`
	// The protocol of the ingress entry.
	Protocol *string `pulumi:"protocol"`
	// The source ip of the ingress entry.
	SourceCidrIp *string `pulumi:"sourceCidrIp"`
}

// NetworkAclEntriesIngressInput is an input type that accepts NetworkAclEntriesIngressArgs and NetworkAclEntriesIngressOutput values.
// You can construct a concrete instance of `NetworkAclEntriesIngressInput` via:
//
//	NetworkAclEntriesIngressArgs{...}
type NetworkAclEntriesIngressInput interface {
	pulumi.Input

	ToNetworkAclEntriesIngressOutput() NetworkAclEntriesIngressOutput
	ToNetworkAclEntriesIngressOutputWithContext(context.Context) NetworkAclEntriesIngressOutput
}

type NetworkAclEntriesIngressArgs struct {
	// The description of the ingress entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
	EntryType pulumi.StringPtrInput `pulumi:"entryType"`
	// The name of the ingress entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The policy of the ingress entry. It must be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of the ingress entry.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol of the ingress entry.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The source ip of the ingress entry.
	SourceCidrIp pulumi.StringPtrInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclEntriesIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntriesIngress)(nil)).Elem()
}

func (i NetworkAclEntriesIngressArgs) ToNetworkAclEntriesIngressOutput() NetworkAclEntriesIngressOutput {
	return i.ToNetworkAclEntriesIngressOutputWithContext(context.Background())
}

func (i NetworkAclEntriesIngressArgs) ToNetworkAclEntriesIngressOutputWithContext(ctx context.Context) NetworkAclEntriesIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesIngressOutput)
}

// NetworkAclEntriesIngressArrayInput is an input type that accepts NetworkAclEntriesIngressArray and NetworkAclEntriesIngressArrayOutput values.
// You can construct a concrete instance of `NetworkAclEntriesIngressArrayInput` via:
//
//	NetworkAclEntriesIngressArray{ NetworkAclEntriesIngressArgs{...} }
type NetworkAclEntriesIngressArrayInput interface {
	pulumi.Input

	ToNetworkAclEntriesIngressArrayOutput() NetworkAclEntriesIngressArrayOutput
	ToNetworkAclEntriesIngressArrayOutputWithContext(context.Context) NetworkAclEntriesIngressArrayOutput
}

type NetworkAclEntriesIngressArray []NetworkAclEntriesIngressInput

func (NetworkAclEntriesIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEntriesIngress)(nil)).Elem()
}

func (i NetworkAclEntriesIngressArray) ToNetworkAclEntriesIngressArrayOutput() NetworkAclEntriesIngressArrayOutput {
	return i.ToNetworkAclEntriesIngressArrayOutputWithContext(context.Background())
}

func (i NetworkAclEntriesIngressArray) ToNetworkAclEntriesIngressArrayOutputWithContext(ctx context.Context) NetworkAclEntriesIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesIngressArrayOutput)
}

type NetworkAclEntriesIngressOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntriesIngress)(nil)).Elem()
}

func (o NetworkAclEntriesIngressOutput) ToNetworkAclEntriesIngressOutput() NetworkAclEntriesIngressOutput {
	return o
}

func (o NetworkAclEntriesIngressOutput) ToNetworkAclEntriesIngressOutputWithContext(ctx context.Context) NetworkAclEntriesIngressOutput {
	return o
}

// The description of the ingress entry.
func (o NetworkAclEntriesIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The entry type of the ingress entry. It must be `custom` or `system`. Default value is `custom`.
func (o NetworkAclEntriesIngressOutput) EntryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.EntryType }).(pulumi.StringPtrOutput)
}

// The name of the ingress entry.
func (o NetworkAclEntriesIngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The policy of the ingress entry. It must be `accept` or `drop`.
func (o NetworkAclEntriesIngressOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of the ingress entry.
func (o NetworkAclEntriesIngressOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol of the ingress entry.
func (o NetworkAclEntriesIngressOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The source ip of the ingress entry.
func (o NetworkAclEntriesIngressOutput) SourceCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEntriesIngress) *string { return v.SourceCidrIp }).(pulumi.StringPtrOutput)
}

type NetworkAclEntriesIngressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEntriesIngress)(nil)).Elem()
}

func (o NetworkAclEntriesIngressArrayOutput) ToNetworkAclEntriesIngressArrayOutput() NetworkAclEntriesIngressArrayOutput {
	return o
}

func (o NetworkAclEntriesIngressArrayOutput) ToNetworkAclEntriesIngressArrayOutputWithContext(ctx context.Context) NetworkAclEntriesIngressArrayOutput {
	return o
}

func (o NetworkAclEntriesIngressArrayOutput) Index(i pulumi.IntInput) NetworkAclEntriesIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEntriesIngress {
		return vs[0].([]NetworkAclEntriesIngress)[vs[1].(int)]
	}).(NetworkAclEntriesIngressOutput)
}

type NetworkAclIngressAclEntry struct {
	// The description of the network acl instance.
	Description *string `pulumi:"description"`
	// The entry name of ingress entries.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of ingress entries. Valid values `accept` and `drop`.
	Policy *string `pulumi:"policy"`
	// The port of ingress entries.
	Port *string `pulumi:"port"`
	// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
	Protocol *string `pulumi:"protocol"`
	// The source cidr ip of ingress entries.
	SourceCidrIp *string `pulumi:"sourceCidrIp"`
}

// NetworkAclIngressAclEntryInput is an input type that accepts NetworkAclIngressAclEntryArgs and NetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryInput` via:
//
//	NetworkAclIngressAclEntryArgs{...}
type NetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput
	ToNetworkAclIngressAclEntryOutputWithContext(context.Context) NetworkAclIngressAclEntryOutput
}

type NetworkAclIngressAclEntryArgs struct {
	// The description of the network acl instance.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The entry name of ingress entries.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of ingress entries. Valid values `accept` and `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of ingress entries.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The source cidr ip of ingress entries.
	SourceCidrIp pulumi.StringPtrInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return i.ToNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryOutput)
}

// NetworkAclIngressAclEntryArrayInput is an input type that accepts NetworkAclIngressAclEntryArray and NetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryArrayInput` via:
//
//	NetworkAclIngressAclEntryArray{ NetworkAclIngressAclEntryArgs{...} }
type NetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput
	ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) NetworkAclIngressAclEntryArrayOutput
}

type NetworkAclIngressAclEntryArray []NetworkAclIngressAclEntryInput

func (NetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return i.ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryArrayOutput)
}

type NetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return o
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return o
}

// The description of the network acl instance.
func (o NetworkAclIngressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The entry name of ingress entries.
func (o NetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of ingress entries. Valid values `accept` and `drop`.
func (o NetworkAclIngressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of ingress entries.
func (o NetworkAclIngressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol of ingress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
func (o NetworkAclIngressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The source cidr ip of ingress entries.
func (o NetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.SourceCidrIp }).(pulumi.StringPtrOutput)
}

type NetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngressAclEntry {
		return vs[0].([]NetworkAclIngressAclEntry)[vs[1].(int)]
	}).(NetworkAclIngressAclEntryOutput)
}

type NetworkAclResource struct {
	// The ID of the associated resource.
	ResourceId *string `pulumi:"resourceId"`
	// The type of the associated resource. Valid values `VSwitch`.
	ResourceType *string `pulumi:"resourceType"`
}

// NetworkAclResourceInput is an input type that accepts NetworkAclResourceArgs and NetworkAclResourceOutput values.
// You can construct a concrete instance of `NetworkAclResourceInput` via:
//
//	NetworkAclResourceArgs{...}
type NetworkAclResourceInput interface {
	pulumi.Input

	ToNetworkAclResourceOutput() NetworkAclResourceOutput
	ToNetworkAclResourceOutputWithContext(context.Context) NetworkAclResourceOutput
}

type NetworkAclResourceArgs struct {
	// The ID of the associated resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The type of the associated resource. Valid values `VSwitch`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (NetworkAclResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclResource)(nil)).Elem()
}

func (i NetworkAclResourceArgs) ToNetworkAclResourceOutput() NetworkAclResourceOutput {
	return i.ToNetworkAclResourceOutputWithContext(context.Background())
}

func (i NetworkAclResourceArgs) ToNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclResourceOutput)
}

// NetworkAclResourceArrayInput is an input type that accepts NetworkAclResourceArray and NetworkAclResourceArrayOutput values.
// You can construct a concrete instance of `NetworkAclResourceArrayInput` via:
//
//	NetworkAclResourceArray{ NetworkAclResourceArgs{...} }
type NetworkAclResourceArrayInput interface {
	pulumi.Input

	ToNetworkAclResourceArrayOutput() NetworkAclResourceArrayOutput
	ToNetworkAclResourceArrayOutputWithContext(context.Context) NetworkAclResourceArrayOutput
}

type NetworkAclResourceArray []NetworkAclResourceInput

func (NetworkAclResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclResource)(nil)).Elem()
}

func (i NetworkAclResourceArray) ToNetworkAclResourceArrayOutput() NetworkAclResourceArrayOutput {
	return i.ToNetworkAclResourceArrayOutputWithContext(context.Background())
}

func (i NetworkAclResourceArray) ToNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclResourceArrayOutput)
}

type NetworkAclResourceOutput struct{ *pulumi.OutputState }

func (NetworkAclResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclResource)(nil)).Elem()
}

func (o NetworkAclResourceOutput) ToNetworkAclResourceOutput() NetworkAclResourceOutput {
	return o
}

func (o NetworkAclResourceOutput) ToNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclResourceOutput {
	return o
}

// The ID of the associated resource.
func (o NetworkAclResourceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclResource) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of the associated resource. Valid values `VSwitch`.
func (o NetworkAclResourceOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclResource) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type NetworkAclResourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclResource)(nil)).Elem()
}

func (o NetworkAclResourceArrayOutput) ToNetworkAclResourceArrayOutput() NetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclResourceArrayOutput) ToNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclResourceArrayOutput) Index(i pulumi.IntInput) NetworkAclResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclResource {
		return vs[0].([]NetworkAclResource)[vs[1].(int)]
	}).(NetworkAclResourceOutput)
}

type PrefixListEntry struct {
	// The CIDR address block of the prefix list.
	Cidr *string `pulumi:"cidr"`
	// The description of the cidr entry. It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
}

// PrefixListEntryInput is an input type that accepts PrefixListEntryArgs and PrefixListEntryOutput values.
// You can construct a concrete instance of `PrefixListEntryInput` via:
//
//	PrefixListEntryArgs{...}
type PrefixListEntryInput interface {
	pulumi.Input

	ToPrefixListEntryOutput() PrefixListEntryOutput
	ToPrefixListEntryOutputWithContext(context.Context) PrefixListEntryOutput
}

type PrefixListEntryArgs struct {
	// The CIDR address block of the prefix list.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// The description of the cidr entry. It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (PrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListEntry)(nil)).Elem()
}

func (i PrefixListEntryArgs) ToPrefixListEntryOutput() PrefixListEntryOutput {
	return i.ToPrefixListEntryOutputWithContext(context.Background())
}

func (i PrefixListEntryArgs) ToPrefixListEntryOutputWithContext(ctx context.Context) PrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListEntryOutput)
}

// PrefixListEntryArrayInput is an input type that accepts PrefixListEntryArray and PrefixListEntryArrayOutput values.
// You can construct a concrete instance of `PrefixListEntryArrayInput` via:
//
//	PrefixListEntryArray{ PrefixListEntryArgs{...} }
type PrefixListEntryArrayInput interface {
	pulumi.Input

	ToPrefixListEntryArrayOutput() PrefixListEntryArrayOutput
	ToPrefixListEntryArrayOutputWithContext(context.Context) PrefixListEntryArrayOutput
}

type PrefixListEntryArray []PrefixListEntryInput

func (PrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListEntry)(nil)).Elem()
}

func (i PrefixListEntryArray) ToPrefixListEntryArrayOutput() PrefixListEntryArrayOutput {
	return i.ToPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i PrefixListEntryArray) ToPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListEntryArrayOutput)
}

type PrefixListEntryOutput struct{ *pulumi.OutputState }

func (PrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListEntry)(nil)).Elem()
}

func (o PrefixListEntryOutput) ToPrefixListEntryOutput() PrefixListEntryOutput {
	return o
}

func (o PrefixListEntryOutput) ToPrefixListEntryOutputWithContext(ctx context.Context) PrefixListEntryOutput {
	return o
}

// The CIDR address block of the prefix list.
func (o PrefixListEntryOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListEntry) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// The description of the cidr entry. It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
func (o PrefixListEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type PrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (PrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListEntry)(nil)).Elem()
}

func (o PrefixListEntryArrayOutput) ToPrefixListEntryArrayOutput() PrefixListEntryArrayOutput {
	return o
}

func (o PrefixListEntryArrayOutput) ToPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListEntryArrayOutput {
	return o
}

func (o PrefixListEntryArrayOutput) Index(i pulumi.IntInput) PrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListEntry {
		return vs[0].([]PrefixListEntry)[vs[1].(int)]
	}).(PrefixListEntryOutput)
}

type GetBgpGroupsGroup struct {
	// The key used by the BGP group.
	AuthKey string `pulumi:"authKey"`
	// The name of the BGP group.
	BgpGroupName string `pulumi:"bgpGroupName"`
	// Description of the BGP group.
	Description string `pulumi:"description"`
	// The hold time to wait for the incoming BGP message. If no message has been passed in after the hold time, the BGP neighbor is considered disconnected.
	Hold string `pulumi:"hold"`
	// The ID of the Bgp Group.
	Id string `pulumi:"id"`
	// IP version.
	IpVersion string `pulumi:"ipVersion"`
	// Whether the AS number is false.
	IsFakeAsn bool `pulumi:"isFakeAsn"`
	// The keepalive time.
	Keepalive string `pulumi:"keepalive"`
	// The local AS number.
	LocalAsn int `pulumi:"localAsn"`
	// The autonomous system (AS) number of the BGP peer.
	PeerAsn int `pulumi:"peerAsn"`
	// Routing limits.
	RouteLimit string `pulumi:"routeLimit"`
	// The ID of the VBR.
	RouterId string `pulumi:"routerId"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetBgpGroupsGroupInput is an input type that accepts GetBgpGroupsGroupArgs and GetBgpGroupsGroupOutput values.
// You can construct a concrete instance of `GetBgpGroupsGroupInput` via:
//
//	GetBgpGroupsGroupArgs{...}
type GetBgpGroupsGroupInput interface {
	pulumi.Input

	ToGetBgpGroupsGroupOutput() GetBgpGroupsGroupOutput
	ToGetBgpGroupsGroupOutputWithContext(context.Context) GetBgpGroupsGroupOutput
}

type GetBgpGroupsGroupArgs struct {
	// The key used by the BGP group.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// The name of the BGP group.
	BgpGroupName pulumi.StringInput `pulumi:"bgpGroupName"`
	// Description of the BGP group.
	Description pulumi.StringInput `pulumi:"description"`
	// The hold time to wait for the incoming BGP message. If no message has been passed in after the hold time, the BGP neighbor is considered disconnected.
	Hold pulumi.StringInput `pulumi:"hold"`
	// The ID of the Bgp Group.
	Id pulumi.StringInput `pulumi:"id"`
	// IP version.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Whether the AS number is false.
	IsFakeAsn pulumi.BoolInput `pulumi:"isFakeAsn"`
	// The keepalive time.
	Keepalive pulumi.StringInput `pulumi:"keepalive"`
	// The local AS number.
	LocalAsn pulumi.IntInput `pulumi:"localAsn"`
	// The autonomous system (AS) number of the BGP peer.
	PeerAsn pulumi.IntInput `pulumi:"peerAsn"`
	// Routing limits.
	RouteLimit pulumi.StringInput `pulumi:"routeLimit"`
	// The ID of the VBR.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBgpGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpGroupsGroup)(nil)).Elem()
}

func (i GetBgpGroupsGroupArgs) ToGetBgpGroupsGroupOutput() GetBgpGroupsGroupOutput {
	return i.ToGetBgpGroupsGroupOutputWithContext(context.Background())
}

func (i GetBgpGroupsGroupArgs) ToGetBgpGroupsGroupOutputWithContext(ctx context.Context) GetBgpGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpGroupsGroupOutput)
}

// GetBgpGroupsGroupArrayInput is an input type that accepts GetBgpGroupsGroupArray and GetBgpGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetBgpGroupsGroupArrayInput` via:
//
//	GetBgpGroupsGroupArray{ GetBgpGroupsGroupArgs{...} }
type GetBgpGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetBgpGroupsGroupArrayOutput() GetBgpGroupsGroupArrayOutput
	ToGetBgpGroupsGroupArrayOutputWithContext(context.Context) GetBgpGroupsGroupArrayOutput
}

type GetBgpGroupsGroupArray []GetBgpGroupsGroupInput

func (GetBgpGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpGroupsGroup)(nil)).Elem()
}

func (i GetBgpGroupsGroupArray) ToGetBgpGroupsGroupArrayOutput() GetBgpGroupsGroupArrayOutput {
	return i.ToGetBgpGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetBgpGroupsGroupArray) ToGetBgpGroupsGroupArrayOutputWithContext(ctx context.Context) GetBgpGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpGroupsGroupArrayOutput)
}

type GetBgpGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetBgpGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpGroupsGroup)(nil)).Elem()
}

func (o GetBgpGroupsGroupOutput) ToGetBgpGroupsGroupOutput() GetBgpGroupsGroupOutput {
	return o
}

func (o GetBgpGroupsGroupOutput) ToGetBgpGroupsGroupOutputWithContext(ctx context.Context) GetBgpGroupsGroupOutput {
	return o
}

// The key used by the BGP group.
func (o GetBgpGroupsGroupOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.AuthKey }).(pulumi.StringOutput)
}

// The name of the BGP group.
func (o GetBgpGroupsGroupOutput) BgpGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.BgpGroupName }).(pulumi.StringOutput)
}

// Description of the BGP group.
func (o GetBgpGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The hold time to wait for the incoming BGP message. If no message has been passed in after the hold time, the BGP neighbor is considered disconnected.
func (o GetBgpGroupsGroupOutput) Hold() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.Hold }).(pulumi.StringOutput)
}

// The ID of the Bgp Group.
func (o GetBgpGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// IP version.
func (o GetBgpGroupsGroupOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Whether the AS number is false.
func (o GetBgpGroupsGroupOutput) IsFakeAsn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) bool { return v.IsFakeAsn }).(pulumi.BoolOutput)
}

// The keepalive time.
func (o GetBgpGroupsGroupOutput) Keepalive() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.Keepalive }).(pulumi.StringOutput)
}

// The local AS number.
func (o GetBgpGroupsGroupOutput) LocalAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) int { return v.LocalAsn }).(pulumi.IntOutput)
}

// The autonomous system (AS) number of the BGP peer.
func (o GetBgpGroupsGroupOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) int { return v.PeerAsn }).(pulumi.IntOutput)
}

// Routing limits.
func (o GetBgpGroupsGroupOutput) RouteLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.RouteLimit }).(pulumi.StringOutput)
}

// The ID of the VBR.
func (o GetBgpGroupsGroupOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.RouterId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetBgpGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

type GetBgpGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetBgpGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpGroupsGroup)(nil)).Elem()
}

func (o GetBgpGroupsGroupArrayOutput) ToGetBgpGroupsGroupArrayOutput() GetBgpGroupsGroupArrayOutput {
	return o
}

func (o GetBgpGroupsGroupArrayOutput) ToGetBgpGroupsGroupArrayOutputWithContext(ctx context.Context) GetBgpGroupsGroupArrayOutput {
	return o
}

func (o GetBgpGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetBgpGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpGroupsGroup {
		return vs[0].([]GetBgpGroupsGroup)[vs[1].(int)]
	}).(GetBgpGroupsGroupOutput)
}

type GetBgpNetworksNetwork struct {
	// Advertised BGP networks.
	DstCidrBlock string `pulumi:"dstCidrBlock"`
	// The ID of the Bgp Network. The value formats as `<router_id>:<dst_cidr_block>`.
	Id string `pulumi:"id"`
	// The ID of the vRouter.
	RouterId string `pulumi:"routerId"`
	// The state of the advertised BGP network.
	Status string `pulumi:"status"`
}

// GetBgpNetworksNetworkInput is an input type that accepts GetBgpNetworksNetworkArgs and GetBgpNetworksNetworkOutput values.
// You can construct a concrete instance of `GetBgpNetworksNetworkInput` via:
//
//	GetBgpNetworksNetworkArgs{...}
type GetBgpNetworksNetworkInput interface {
	pulumi.Input

	ToGetBgpNetworksNetworkOutput() GetBgpNetworksNetworkOutput
	ToGetBgpNetworksNetworkOutputWithContext(context.Context) GetBgpNetworksNetworkOutput
}

type GetBgpNetworksNetworkArgs struct {
	// Advertised BGP networks.
	DstCidrBlock pulumi.StringInput `pulumi:"dstCidrBlock"`
	// The ID of the Bgp Network. The value formats as `<router_id>:<dst_cidr_block>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the vRouter.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The state of the advertised BGP network.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBgpNetworksNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetworksNetwork)(nil)).Elem()
}

func (i GetBgpNetworksNetworkArgs) ToGetBgpNetworksNetworkOutput() GetBgpNetworksNetworkOutput {
	return i.ToGetBgpNetworksNetworkOutputWithContext(context.Background())
}

func (i GetBgpNetworksNetworkArgs) ToGetBgpNetworksNetworkOutputWithContext(ctx context.Context) GetBgpNetworksNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetworksNetworkOutput)
}

// GetBgpNetworksNetworkArrayInput is an input type that accepts GetBgpNetworksNetworkArray and GetBgpNetworksNetworkArrayOutput values.
// You can construct a concrete instance of `GetBgpNetworksNetworkArrayInput` via:
//
//	GetBgpNetworksNetworkArray{ GetBgpNetworksNetworkArgs{...} }
type GetBgpNetworksNetworkArrayInput interface {
	pulumi.Input

	ToGetBgpNetworksNetworkArrayOutput() GetBgpNetworksNetworkArrayOutput
	ToGetBgpNetworksNetworkArrayOutputWithContext(context.Context) GetBgpNetworksNetworkArrayOutput
}

type GetBgpNetworksNetworkArray []GetBgpNetworksNetworkInput

func (GetBgpNetworksNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetworksNetwork)(nil)).Elem()
}

func (i GetBgpNetworksNetworkArray) ToGetBgpNetworksNetworkArrayOutput() GetBgpNetworksNetworkArrayOutput {
	return i.ToGetBgpNetworksNetworkArrayOutputWithContext(context.Background())
}

func (i GetBgpNetworksNetworkArray) ToGetBgpNetworksNetworkArrayOutputWithContext(ctx context.Context) GetBgpNetworksNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpNetworksNetworkArrayOutput)
}

type GetBgpNetworksNetworkOutput struct{ *pulumi.OutputState }

func (GetBgpNetworksNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpNetworksNetwork)(nil)).Elem()
}

func (o GetBgpNetworksNetworkOutput) ToGetBgpNetworksNetworkOutput() GetBgpNetworksNetworkOutput {
	return o
}

func (o GetBgpNetworksNetworkOutput) ToGetBgpNetworksNetworkOutputWithContext(ctx context.Context) GetBgpNetworksNetworkOutput {
	return o
}

// Advertised BGP networks.
func (o GetBgpNetworksNetworkOutput) DstCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetworksNetwork) string { return v.DstCidrBlock }).(pulumi.StringOutput)
}

// The ID of the Bgp Network. The value formats as `<router_id>:<dst_cidr_block>`.
func (o GetBgpNetworksNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetworksNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the vRouter.
func (o GetBgpNetworksNetworkOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetworksNetwork) string { return v.RouterId }).(pulumi.StringOutput)
}

// The state of the advertised BGP network.
func (o GetBgpNetworksNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpNetworksNetwork) string { return v.Status }).(pulumi.StringOutput)
}

type GetBgpNetworksNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetBgpNetworksNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpNetworksNetwork)(nil)).Elem()
}

func (o GetBgpNetworksNetworkArrayOutput) ToGetBgpNetworksNetworkArrayOutput() GetBgpNetworksNetworkArrayOutput {
	return o
}

func (o GetBgpNetworksNetworkArrayOutput) ToGetBgpNetworksNetworkArrayOutputWithContext(ctx context.Context) GetBgpNetworksNetworkArrayOutput {
	return o
}

func (o GetBgpNetworksNetworkArrayOutput) Index(i pulumi.IntInput) GetBgpNetworksNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpNetworksNetwork {
		return vs[0].([]GetBgpNetworksNetwork)[vs[1].(int)]
	}).(GetBgpNetworksNetworkOutput)
}

type GetBgpPeersPeer struct {
	// The authentication key of the BGP group.
	AuthKey string `pulumi:"authKey"`
	// The BFD hop count.
	BfdMultiHop int `pulumi:"bfdMultiHop"`
	// The ID of the BGP group.
	BgpGroupId string `pulumi:"bgpGroupId"`
	// The ID of the BGP neighbor.
	BgpPeerId string `pulumi:"bgpPeerId"`
	// The name of the BGP neighbor.
	BgpPeerName string `pulumi:"bgpPeerName"`
	// The status of the BGP connection.
	BgpStatus string `pulumi:"bgpStatus"`
	// The description of the BGP group.
	Description string `pulumi:"description"`
	// Indicates whether the Bidirectional Forwarding Detection (BFD) protocol is enabled.
	EnableBfd bool `pulumi:"enableBfd"`
	// The hold time.
	Hold string `pulumi:"hold"`
	// The ID of the Bgp Peer.
	Id string `pulumi:"id"`
	// The IP version.
	IpVersion string `pulumi:"ipVersion"`
	// Indicates whether a fake AS number is used.
	IsFake bool `pulumi:"isFake"`
	// The keepalive time.
	Keepalive string `pulumi:"keepalive"`
	// The AS number of the device on the Alibaba Cloud side.
	LocalAsn string `pulumi:"localAsn"`
	// The autonomous system (AS) number of the BGP peer.
	PeerAsn string `pulumi:"peerAsn"`
	// The IP address of the BGP neighbor.
	PeerIpAddress string `pulumi:"peerIpAddress"`
	// The limit on routes.
	RouteLimit string `pulumi:"routeLimit"`
	// The ID of the router.
	RouterId string `pulumi:"routerId"`
	// The status of the BGP peer.
	Status string `pulumi:"status"`
}

// GetBgpPeersPeerInput is an input type that accepts GetBgpPeersPeerArgs and GetBgpPeersPeerOutput values.
// You can construct a concrete instance of `GetBgpPeersPeerInput` via:
//
//	GetBgpPeersPeerArgs{...}
type GetBgpPeersPeerInput interface {
	pulumi.Input

	ToGetBgpPeersPeerOutput() GetBgpPeersPeerOutput
	ToGetBgpPeersPeerOutputWithContext(context.Context) GetBgpPeersPeerOutput
}

type GetBgpPeersPeerArgs struct {
	// The authentication key of the BGP group.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// The BFD hop count.
	BfdMultiHop pulumi.IntInput `pulumi:"bfdMultiHop"`
	// The ID of the BGP group.
	BgpGroupId pulumi.StringInput `pulumi:"bgpGroupId"`
	// The ID of the BGP neighbor.
	BgpPeerId pulumi.StringInput `pulumi:"bgpPeerId"`
	// The name of the BGP neighbor.
	BgpPeerName pulumi.StringInput `pulumi:"bgpPeerName"`
	// The status of the BGP connection.
	BgpStatus pulumi.StringInput `pulumi:"bgpStatus"`
	// The description of the BGP group.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates whether the Bidirectional Forwarding Detection (BFD) protocol is enabled.
	EnableBfd pulumi.BoolInput `pulumi:"enableBfd"`
	// The hold time.
	Hold pulumi.StringInput `pulumi:"hold"`
	// The ID of the Bgp Peer.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP version.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Indicates whether a fake AS number is used.
	IsFake pulumi.BoolInput `pulumi:"isFake"`
	// The keepalive time.
	Keepalive pulumi.StringInput `pulumi:"keepalive"`
	// The AS number of the device on the Alibaba Cloud side.
	LocalAsn pulumi.StringInput `pulumi:"localAsn"`
	// The autonomous system (AS) number of the BGP peer.
	PeerAsn pulumi.StringInput `pulumi:"peerAsn"`
	// The IP address of the BGP neighbor.
	PeerIpAddress pulumi.StringInput `pulumi:"peerIpAddress"`
	// The limit on routes.
	RouteLimit pulumi.StringInput `pulumi:"routeLimit"`
	// The ID of the router.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The status of the BGP peer.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBgpPeersPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpPeersPeer)(nil)).Elem()
}

func (i GetBgpPeersPeerArgs) ToGetBgpPeersPeerOutput() GetBgpPeersPeerOutput {
	return i.ToGetBgpPeersPeerOutputWithContext(context.Background())
}

func (i GetBgpPeersPeerArgs) ToGetBgpPeersPeerOutputWithContext(ctx context.Context) GetBgpPeersPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpPeersPeerOutput)
}

// GetBgpPeersPeerArrayInput is an input type that accepts GetBgpPeersPeerArray and GetBgpPeersPeerArrayOutput values.
// You can construct a concrete instance of `GetBgpPeersPeerArrayInput` via:
//
//	GetBgpPeersPeerArray{ GetBgpPeersPeerArgs{...} }
type GetBgpPeersPeerArrayInput interface {
	pulumi.Input

	ToGetBgpPeersPeerArrayOutput() GetBgpPeersPeerArrayOutput
	ToGetBgpPeersPeerArrayOutputWithContext(context.Context) GetBgpPeersPeerArrayOutput
}

type GetBgpPeersPeerArray []GetBgpPeersPeerInput

func (GetBgpPeersPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpPeersPeer)(nil)).Elem()
}

func (i GetBgpPeersPeerArray) ToGetBgpPeersPeerArrayOutput() GetBgpPeersPeerArrayOutput {
	return i.ToGetBgpPeersPeerArrayOutputWithContext(context.Background())
}

func (i GetBgpPeersPeerArray) ToGetBgpPeersPeerArrayOutputWithContext(ctx context.Context) GetBgpPeersPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBgpPeersPeerArrayOutput)
}

type GetBgpPeersPeerOutput struct{ *pulumi.OutputState }

func (GetBgpPeersPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBgpPeersPeer)(nil)).Elem()
}

func (o GetBgpPeersPeerOutput) ToGetBgpPeersPeerOutput() GetBgpPeersPeerOutput {
	return o
}

func (o GetBgpPeersPeerOutput) ToGetBgpPeersPeerOutputWithContext(ctx context.Context) GetBgpPeersPeerOutput {
	return o
}

// The authentication key of the BGP group.
func (o GetBgpPeersPeerOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.AuthKey }).(pulumi.StringOutput)
}

// The BFD hop count.
func (o GetBgpPeersPeerOutput) BfdMultiHop() pulumi.IntOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) int { return v.BfdMultiHop }).(pulumi.IntOutput)
}

// The ID of the BGP group.
func (o GetBgpPeersPeerOutput) BgpGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.BgpGroupId }).(pulumi.StringOutput)
}

// The ID of the BGP neighbor.
func (o GetBgpPeersPeerOutput) BgpPeerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.BgpPeerId }).(pulumi.StringOutput)
}

// The name of the BGP neighbor.
func (o GetBgpPeersPeerOutput) BgpPeerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.BgpPeerName }).(pulumi.StringOutput)
}

// The status of the BGP connection.
func (o GetBgpPeersPeerOutput) BgpStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.BgpStatus }).(pulumi.StringOutput)
}

// The description of the BGP group.
func (o GetBgpPeersPeerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the Bidirectional Forwarding Detection (BFD) protocol is enabled.
func (o GetBgpPeersPeerOutput) EnableBfd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) bool { return v.EnableBfd }).(pulumi.BoolOutput)
}

// The hold time.
func (o GetBgpPeersPeerOutput) Hold() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.Hold }).(pulumi.StringOutput)
}

// The ID of the Bgp Peer.
func (o GetBgpPeersPeerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.Id }).(pulumi.StringOutput)
}

// The IP version.
func (o GetBgpPeersPeerOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Indicates whether a fake AS number is used.
func (o GetBgpPeersPeerOutput) IsFake() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) bool { return v.IsFake }).(pulumi.BoolOutput)
}

// The keepalive time.
func (o GetBgpPeersPeerOutput) Keepalive() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.Keepalive }).(pulumi.StringOutput)
}

// The AS number of the device on the Alibaba Cloud side.
func (o GetBgpPeersPeerOutput) LocalAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.LocalAsn }).(pulumi.StringOutput)
}

// The autonomous system (AS) number of the BGP peer.
func (o GetBgpPeersPeerOutput) PeerAsn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.PeerAsn }).(pulumi.StringOutput)
}

// The IP address of the BGP neighbor.
func (o GetBgpPeersPeerOutput) PeerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.PeerIpAddress }).(pulumi.StringOutput)
}

// The limit on routes.
func (o GetBgpPeersPeerOutput) RouteLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.RouteLimit }).(pulumi.StringOutput)
}

// The ID of the router.
func (o GetBgpPeersPeerOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.RouterId }).(pulumi.StringOutput)
}

// The status of the BGP peer.
func (o GetBgpPeersPeerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBgpPeersPeer) string { return v.Status }).(pulumi.StringOutput)
}

type GetBgpPeersPeerArrayOutput struct{ *pulumi.OutputState }

func (GetBgpPeersPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBgpPeersPeer)(nil)).Elem()
}

func (o GetBgpPeersPeerArrayOutput) ToGetBgpPeersPeerArrayOutput() GetBgpPeersPeerArrayOutput {
	return o
}

func (o GetBgpPeersPeerArrayOutput) ToGetBgpPeersPeerArrayOutputWithContext(ctx context.Context) GetBgpPeersPeerArrayOutput {
	return o
}

func (o GetBgpPeersPeerArrayOutput) Index(i pulumi.IntInput) GetBgpPeersPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBgpPeersPeer {
		return vs[0].([]GetBgpPeersPeer)[vs[1].(int)]
	}).(GetBgpPeersPeerOutput)
}

type GetCommonBandwidthPackagesPackage struct {
	// The peak bandwidth of the Internet Shared Bandwidth instance.
	Bandwidth string `pulumi:"bandwidth"`
	// The resource ID of bandwidth package.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The name of bandwidth package.
	BandwidthPackageName string `pulumi:"bandwidthPackageName"`
	// The business status of the Common Bandwidth Package instance.
	BusinessStatus string `pulumi:"businessStatus"`
	// The deletion protection of bandwidth package.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The description of the Common Bandwidth Package instance.
	Description string `pulumi:"description"`
	// The expired time of bandwidth package.
	ExpiredTime string `pulumi:"expiredTime"`
	// Is has reservation data.
	HasReservationData bool `pulumi:"hasReservationData"`
	// ID of the Common Bandwidth Package.
	Id string `pulumi:"id"`
	// The internet charge type of bandwidth package.
	InternetChargeType string `pulumi:"internetChargeType"`
	// ISP of the Common Bandwidth Package.
	Isp string `pulumi:"isp"`
	// Name of the Common Bandwidth Package.
	Name string `pulumi:"name"`
	// The payment type of bandwidth package.
	PaymentType string `pulumi:"paymentType"`
	// Public ip addresses that in the Common Bandwidth Pakcage.
	PublicIpAddresses []GetCommonBandwidthPackagesPackagePublicIpAddress `pulumi:"publicIpAddresses"`
	// The ratio of bandwidth package.
	Ratio int `pulumi:"ratio"`
	// The active time of reservation.
	ReservationActiveTime string `pulumi:"reservationActiveTime"`
	// The bandwidth of reservation.
	ReservationBandwidth string `pulumi:"reservationBandwidth"`
	// The charge type of reservation internet.
	ReservationInternetChargeType string `pulumi:"reservationInternetChargeType"`
	// The type of reservation order.
	ReservationOrderType string `pulumi:"reservationOrderType"`
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The service managed.
	ServiceManaged int `pulumi:"serviceManaged"`
	// The status of bandwidth package. Valid values: `Available` and `Pending`.
	Status string `pulumi:"status"`
}

// GetCommonBandwidthPackagesPackageInput is an input type that accepts GetCommonBandwidthPackagesPackageArgs and GetCommonBandwidthPackagesPackageOutput values.
// You can construct a concrete instance of `GetCommonBandwidthPackagesPackageInput` via:
//
//	GetCommonBandwidthPackagesPackageArgs{...}
type GetCommonBandwidthPackagesPackageInput interface {
	pulumi.Input

	ToGetCommonBandwidthPackagesPackageOutput() GetCommonBandwidthPackagesPackageOutput
	ToGetCommonBandwidthPackagesPackageOutputWithContext(context.Context) GetCommonBandwidthPackagesPackageOutput
}

type GetCommonBandwidthPackagesPackageArgs struct {
	// The peak bandwidth of the Internet Shared Bandwidth instance.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// The resource ID of bandwidth package.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The name of bandwidth package.
	BandwidthPackageName pulumi.StringInput `pulumi:"bandwidthPackageName"`
	// The business status of the Common Bandwidth Package instance.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The deletion protection of bandwidth package.
	DeletionProtection pulumi.BoolInput `pulumi:"deletionProtection"`
	// The description of the Common Bandwidth Package instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The expired time of bandwidth package.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Is has reservation data.
	HasReservationData pulumi.BoolInput `pulumi:"hasReservationData"`
	// ID of the Common Bandwidth Package.
	Id pulumi.StringInput `pulumi:"id"`
	// The internet charge type of bandwidth package.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// ISP of the Common Bandwidth Package.
	Isp pulumi.StringInput `pulumi:"isp"`
	// Name of the Common Bandwidth Package.
	Name pulumi.StringInput `pulumi:"name"`
	// The payment type of bandwidth package.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// Public ip addresses that in the Common Bandwidth Pakcage.
	PublicIpAddresses GetCommonBandwidthPackagesPackagePublicIpAddressArrayInput `pulumi:"publicIpAddresses"`
	// The ratio of bandwidth package.
	Ratio pulumi.IntInput `pulumi:"ratio"`
	// The active time of reservation.
	ReservationActiveTime pulumi.StringInput `pulumi:"reservationActiveTime"`
	// The bandwidth of reservation.
	ReservationBandwidth pulumi.StringInput `pulumi:"reservationBandwidth"`
	// The charge type of reservation internet.
	ReservationInternetChargeType pulumi.StringInput `pulumi:"reservationInternetChargeType"`
	// The type of reservation order.
	ReservationOrderType pulumi.StringInput `pulumi:"reservationOrderType"`
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The service managed.
	ServiceManaged pulumi.IntInput `pulumi:"serviceManaged"`
	// The status of bandwidth package. Valid values: `Available` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetCommonBandwidthPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetCommonBandwidthPackagesPackageArgs) ToGetCommonBandwidthPackagesPackageOutput() GetCommonBandwidthPackagesPackageOutput {
	return i.ToGetCommonBandwidthPackagesPackageOutputWithContext(context.Background())
}

func (i GetCommonBandwidthPackagesPackageArgs) ToGetCommonBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommonBandwidthPackagesPackageOutput)
}

// GetCommonBandwidthPackagesPackageArrayInput is an input type that accepts GetCommonBandwidthPackagesPackageArray and GetCommonBandwidthPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetCommonBandwidthPackagesPackageArrayInput` via:
//
//	GetCommonBandwidthPackagesPackageArray{ GetCommonBandwidthPackagesPackageArgs{...} }
type GetCommonBandwidthPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetCommonBandwidthPackagesPackageArrayOutput() GetCommonBandwidthPackagesPackageArrayOutput
	ToGetCommonBandwidthPackagesPackageArrayOutputWithContext(context.Context) GetCommonBandwidthPackagesPackageArrayOutput
}

type GetCommonBandwidthPackagesPackageArray []GetCommonBandwidthPackagesPackageInput

func (GetCommonBandwidthPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommonBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetCommonBandwidthPackagesPackageArray) ToGetCommonBandwidthPackagesPackageArrayOutput() GetCommonBandwidthPackagesPackageArrayOutput {
	return i.ToGetCommonBandwidthPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetCommonBandwidthPackagesPackageArray) ToGetCommonBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommonBandwidthPackagesPackageArrayOutput)
}

type GetCommonBandwidthPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetCommonBandwidthPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetCommonBandwidthPackagesPackageOutput) ToGetCommonBandwidthPackagesPackageOutput() GetCommonBandwidthPackagesPackageOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackageOutput) ToGetCommonBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackageOutput {
	return o
}

// The peak bandwidth of the Internet Shared Bandwidth instance.
func (o GetCommonBandwidthPackagesPackageOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// The resource ID of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The name of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) BandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.BandwidthPackageName }).(pulumi.StringOutput)
}

// The business status of the Common Bandwidth Package instance.
func (o GetCommonBandwidthPackagesPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The deletion protection of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The description of the Common Bandwidth Package instance.
func (o GetCommonBandwidthPackagesPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Description }).(pulumi.StringOutput)
}

// The expired time of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Is has reservation data.
func (o GetCommonBandwidthPackagesPackageOutput) HasReservationData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) bool { return v.HasReservationData }).(pulumi.BoolOutput)
}

// ID of the Common Bandwidth Package.
func (o GetCommonBandwidthPackagesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The internet charge type of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// ISP of the Common Bandwidth Package.
func (o GetCommonBandwidthPackagesPackageOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Isp }).(pulumi.StringOutput)
}

// Name of the Common Bandwidth Package.
func (o GetCommonBandwidthPackagesPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Name }).(pulumi.StringOutput)
}

// The payment type of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.PaymentType }).(pulumi.StringOutput)
}

// Public ip addresses that in the Common Bandwidth Pakcage.
func (o GetCommonBandwidthPackagesPackageOutput) PublicIpAddresses() GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) []GetCommonBandwidthPackagesPackagePublicIpAddress {
		return v.PublicIpAddresses
	}).(GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput)
}

// The ratio of bandwidth package.
func (o GetCommonBandwidthPackagesPackageOutput) Ratio() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) int { return v.Ratio }).(pulumi.IntOutput)
}

// The active time of reservation.
func (o GetCommonBandwidthPackagesPackageOutput) ReservationActiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ReservationActiveTime }).(pulumi.StringOutput)
}

// The bandwidth of reservation.
func (o GetCommonBandwidthPackagesPackageOutput) ReservationBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ReservationBandwidth }).(pulumi.StringOutput)
}

// The charge type of reservation internet.
func (o GetCommonBandwidthPackagesPackageOutput) ReservationInternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ReservationInternetChargeType }).(pulumi.StringOutput)
}

// The type of reservation order.
func (o GetCommonBandwidthPackagesPackageOutput) ReservationOrderType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ReservationOrderType }).(pulumi.StringOutput)
}

// The Id of resource group which the common bandwidth package belongs.
func (o GetCommonBandwidthPackagesPackageOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The service managed.
func (o GetCommonBandwidthPackagesPackageOutput) ServiceManaged() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) int { return v.ServiceManaged }).(pulumi.IntOutput)
}

// The status of bandwidth package. Valid values: `Available` and `Pending`.
func (o GetCommonBandwidthPackagesPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackage) string { return v.Status }).(pulumi.StringOutput)
}

type GetCommonBandwidthPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetCommonBandwidthPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommonBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetCommonBandwidthPackagesPackageArrayOutput) ToGetCommonBandwidthPackagesPackageArrayOutput() GetCommonBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackageArrayOutput) ToGetCommonBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetCommonBandwidthPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommonBandwidthPackagesPackage {
		return vs[0].([]GetCommonBandwidthPackagesPackage)[vs[1].(int)]
	}).(GetCommonBandwidthPackagesPackageOutput)
}

type GetCommonBandwidthPackagesPackagePublicIpAddress struct {
	AllocationId                     string `pulumi:"allocationId"`
	BandwidthPackageIpRelationStatus string `pulumi:"bandwidthPackageIpRelationStatus"`
	IpAddress                        string `pulumi:"ipAddress"`
}

// GetCommonBandwidthPackagesPackagePublicIpAddressInput is an input type that accepts GetCommonBandwidthPackagesPackagePublicIpAddressArgs and GetCommonBandwidthPackagesPackagePublicIpAddressOutput values.
// You can construct a concrete instance of `GetCommonBandwidthPackagesPackagePublicIpAddressInput` via:
//
//	GetCommonBandwidthPackagesPackagePublicIpAddressArgs{...}
type GetCommonBandwidthPackagesPackagePublicIpAddressInput interface {
	pulumi.Input

	ToGetCommonBandwidthPackagesPackagePublicIpAddressOutput() GetCommonBandwidthPackagesPackagePublicIpAddressOutput
	ToGetCommonBandwidthPackagesPackagePublicIpAddressOutputWithContext(context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressOutput
}

type GetCommonBandwidthPackagesPackagePublicIpAddressArgs struct {
	AllocationId                     pulumi.StringInput `pulumi:"allocationId"`
	BandwidthPackageIpRelationStatus pulumi.StringInput `pulumi:"bandwidthPackageIpRelationStatus"`
	IpAddress                        pulumi.StringInput `pulumi:"ipAddress"`
}

func (GetCommonBandwidthPackagesPackagePublicIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesPackagePublicIpAddress)(nil)).Elem()
}

func (i GetCommonBandwidthPackagesPackagePublicIpAddressArgs) ToGetCommonBandwidthPackagesPackagePublicIpAddressOutput() GetCommonBandwidthPackagesPackagePublicIpAddressOutput {
	return i.ToGetCommonBandwidthPackagesPackagePublicIpAddressOutputWithContext(context.Background())
}

func (i GetCommonBandwidthPackagesPackagePublicIpAddressArgs) ToGetCommonBandwidthPackagesPackagePublicIpAddressOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommonBandwidthPackagesPackagePublicIpAddressOutput)
}

// GetCommonBandwidthPackagesPackagePublicIpAddressArrayInput is an input type that accepts GetCommonBandwidthPackagesPackagePublicIpAddressArray and GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput values.
// You can construct a concrete instance of `GetCommonBandwidthPackagesPackagePublicIpAddressArrayInput` via:
//
//	GetCommonBandwidthPackagesPackagePublicIpAddressArray{ GetCommonBandwidthPackagesPackagePublicIpAddressArgs{...} }
type GetCommonBandwidthPackagesPackagePublicIpAddressArrayInput interface {
	pulumi.Input

	ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput() GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput
	ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutputWithContext(context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput
}

type GetCommonBandwidthPackagesPackagePublicIpAddressArray []GetCommonBandwidthPackagesPackagePublicIpAddressInput

func (GetCommonBandwidthPackagesPackagePublicIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommonBandwidthPackagesPackagePublicIpAddress)(nil)).Elem()
}

func (i GetCommonBandwidthPackagesPackagePublicIpAddressArray) ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput() GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput {
	return i.ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutputWithContext(context.Background())
}

func (i GetCommonBandwidthPackagesPackagePublicIpAddressArray) ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput)
}

type GetCommonBandwidthPackagesPackagePublicIpAddressOutput struct{ *pulumi.OutputState }

func (GetCommonBandwidthPackagesPackagePublicIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommonBandwidthPackagesPackagePublicIpAddress)(nil)).Elem()
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressOutput) ToGetCommonBandwidthPackagesPackagePublicIpAddressOutput() GetCommonBandwidthPackagesPackagePublicIpAddressOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressOutput) ToGetCommonBandwidthPackagesPackagePublicIpAddressOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackagePublicIpAddress) string { return v.AllocationId }).(pulumi.StringOutput)
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressOutput) BandwidthPackageIpRelationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackagePublicIpAddress) string {
		return v.BandwidthPackageIpRelationStatus
	}).(pulumi.StringOutput)
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommonBandwidthPackagesPackagePublicIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

type GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommonBandwidthPackagesPackagePublicIpAddress)(nil)).Elem()
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput) ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput() GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput) ToGetCommonBandwidthPackagesPackagePublicIpAddressArrayOutputWithContext(ctx context.Context) GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput {
	return o
}

func (o GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput) Index(i pulumi.IntInput) GetCommonBandwidthPackagesPackagePublicIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommonBandwidthPackagesPackagePublicIpAddress {
		return vs[0].([]GetCommonBandwidthPackagesPackagePublicIpAddress)[vs[1].(int)]
	}).(GetCommonBandwidthPackagesPackagePublicIpAddressOutput)
}

type GetDhcpOptionsSetsSet struct {
	// The Number of VPCs bound by the DHCP option set.
	AssociateVpcCount int `pulumi:"associateVpcCount"`
	// The description of the DHCP options set. The description must be 2 to 256
	// characters in length and cannot start with `http://` or `https://`.
	DhcpOptionsSetDescription string `pulumi:"dhcpOptionsSetDescription"`
	DhcpOptionsSetId          string `pulumi:"dhcpOptionsSetId"`
	// The root domain, for example, example.com. After a DHCP options set is associated with a
	// Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
	// ECS instances in the VPC network.
	DhcpOptionsSetName string `pulumi:"dhcpOptionsSetName"`
	// The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
	// Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
	// instances in the VPC network.
	DomainName string `pulumi:"domainName"`
	// The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
	// addresses must be separated with commas (,).
	DomainNameServers string `pulumi:"domainNameServers"`
	Id                string `pulumi:"id"`
	// The ID of the account to which the DHCP options set belongs.
	OwnerId string `pulumi:"ownerId"`
	// The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
	Status string `pulumi:"status"`
}

// GetDhcpOptionsSetsSetInput is an input type that accepts GetDhcpOptionsSetsSetArgs and GetDhcpOptionsSetsSetOutput values.
// You can construct a concrete instance of `GetDhcpOptionsSetsSetInput` via:
//
//	GetDhcpOptionsSetsSetArgs{...}
type GetDhcpOptionsSetsSetInput interface {
	pulumi.Input

	ToGetDhcpOptionsSetsSetOutput() GetDhcpOptionsSetsSetOutput
	ToGetDhcpOptionsSetsSetOutputWithContext(context.Context) GetDhcpOptionsSetsSetOutput
}

type GetDhcpOptionsSetsSetArgs struct {
	// The Number of VPCs bound by the DHCP option set.
	AssociateVpcCount pulumi.IntInput `pulumi:"associateVpcCount"`
	// The description of the DHCP options set. The description must be 2 to 256
	// characters in length and cannot start with `http://` or `https://`.
	DhcpOptionsSetDescription pulumi.StringInput `pulumi:"dhcpOptionsSetDescription"`
	DhcpOptionsSetId          pulumi.StringInput `pulumi:"dhcpOptionsSetId"`
	// The root domain, for example, example.com. After a DHCP options set is associated with a
	// Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
	// ECS instances in the VPC network.
	DhcpOptionsSetName pulumi.StringInput `pulumi:"dhcpOptionsSetName"`
	// The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
	// Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
	// instances in the VPC network.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
	// addresses must be separated with commas (,).
	DomainNameServers pulumi.StringInput `pulumi:"domainNameServers"`
	Id                pulumi.StringInput `pulumi:"id"`
	// The ID of the account to which the DHCP options set belongs.
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
	// The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDhcpOptionsSetsSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsSetsSet)(nil)).Elem()
}

func (i GetDhcpOptionsSetsSetArgs) ToGetDhcpOptionsSetsSetOutput() GetDhcpOptionsSetsSetOutput {
	return i.ToGetDhcpOptionsSetsSetOutputWithContext(context.Background())
}

func (i GetDhcpOptionsSetsSetArgs) ToGetDhcpOptionsSetsSetOutputWithContext(ctx context.Context) GetDhcpOptionsSetsSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsSetsSetOutput)
}

// GetDhcpOptionsSetsSetArrayInput is an input type that accepts GetDhcpOptionsSetsSetArray and GetDhcpOptionsSetsSetArrayOutput values.
// You can construct a concrete instance of `GetDhcpOptionsSetsSetArrayInput` via:
//
//	GetDhcpOptionsSetsSetArray{ GetDhcpOptionsSetsSetArgs{...} }
type GetDhcpOptionsSetsSetArrayInput interface {
	pulumi.Input

	ToGetDhcpOptionsSetsSetArrayOutput() GetDhcpOptionsSetsSetArrayOutput
	ToGetDhcpOptionsSetsSetArrayOutputWithContext(context.Context) GetDhcpOptionsSetsSetArrayOutput
}

type GetDhcpOptionsSetsSetArray []GetDhcpOptionsSetsSetInput

func (GetDhcpOptionsSetsSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsSetsSet)(nil)).Elem()
}

func (i GetDhcpOptionsSetsSetArray) ToGetDhcpOptionsSetsSetArrayOutput() GetDhcpOptionsSetsSetArrayOutput {
	return i.ToGetDhcpOptionsSetsSetArrayOutputWithContext(context.Background())
}

func (i GetDhcpOptionsSetsSetArray) ToGetDhcpOptionsSetsSetArrayOutputWithContext(ctx context.Context) GetDhcpOptionsSetsSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDhcpOptionsSetsSetArrayOutput)
}

type GetDhcpOptionsSetsSetOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsSetsSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDhcpOptionsSetsSet)(nil)).Elem()
}

func (o GetDhcpOptionsSetsSetOutput) ToGetDhcpOptionsSetsSetOutput() GetDhcpOptionsSetsSetOutput {
	return o
}

func (o GetDhcpOptionsSetsSetOutput) ToGetDhcpOptionsSetsSetOutputWithContext(ctx context.Context) GetDhcpOptionsSetsSetOutput {
	return o
}

// The Number of VPCs bound by the DHCP option set.
func (o GetDhcpOptionsSetsSetOutput) AssociateVpcCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) int { return v.AssociateVpcCount }).(pulumi.IntOutput)
}

// The description of the DHCP options set. The description must be 2 to 256
// characters in length and cannot start with `http://` or `https://`.
func (o GetDhcpOptionsSetsSetOutput) DhcpOptionsSetDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.DhcpOptionsSetDescription }).(pulumi.StringOutput)
}

func (o GetDhcpOptionsSetsSetOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

// The root domain, for example, example.com. After a DHCP options set is associated with a
// Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
// ECS instances in the VPC network.
func (o GetDhcpOptionsSetsSetOutput) DhcpOptionsSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.DhcpOptionsSetName }).(pulumi.StringOutput)
}

// The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
// Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
// instances in the VPC network.
func (o GetDhcpOptionsSetsSetOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.DomainName }).(pulumi.StringOutput)
}

// The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
// addresses must be separated with commas (,).
func (o GetDhcpOptionsSetsSetOutput) DomainNameServers() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.DomainNameServers }).(pulumi.StringOutput)
}

func (o GetDhcpOptionsSetsSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the account to which the DHCP options set belongs.
func (o GetDhcpOptionsSetsSetOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.OwnerId }).(pulumi.StringOutput)
}

// The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
func (o GetDhcpOptionsSetsSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDhcpOptionsSetsSet) string { return v.Status }).(pulumi.StringOutput)
}

type GetDhcpOptionsSetsSetArrayOutput struct{ *pulumi.OutputState }

func (GetDhcpOptionsSetsSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDhcpOptionsSetsSet)(nil)).Elem()
}

func (o GetDhcpOptionsSetsSetArrayOutput) ToGetDhcpOptionsSetsSetArrayOutput() GetDhcpOptionsSetsSetArrayOutput {
	return o
}

func (o GetDhcpOptionsSetsSetArrayOutput) ToGetDhcpOptionsSetsSetArrayOutputWithContext(ctx context.Context) GetDhcpOptionsSetsSetArrayOutput {
	return o
}

func (o GetDhcpOptionsSetsSetArrayOutput) Index(i pulumi.IntInput) GetDhcpOptionsSetsSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDhcpOptionsSetsSet {
		return vs[0].([]GetDhcpOptionsSetsSet)[vs[1].(int)]
	}).(GetDhcpOptionsSetsSetOutput)
}

type GetEnhancedNatAvailableZonesZone struct {
	LocalName string `pulumi:"localName"`
	ZoneId    string `pulumi:"zoneId"`
}

// GetEnhancedNatAvailableZonesZoneInput is an input type that accepts GetEnhancedNatAvailableZonesZoneArgs and GetEnhancedNatAvailableZonesZoneOutput values.
// You can construct a concrete instance of `GetEnhancedNatAvailableZonesZoneInput` via:
//
//	GetEnhancedNatAvailableZonesZoneArgs{...}
type GetEnhancedNatAvailableZonesZoneInput interface {
	pulumi.Input

	ToGetEnhancedNatAvailableZonesZoneOutput() GetEnhancedNatAvailableZonesZoneOutput
	ToGetEnhancedNatAvailableZonesZoneOutputWithContext(context.Context) GetEnhancedNatAvailableZonesZoneOutput
}

type GetEnhancedNatAvailableZonesZoneArgs struct {
	LocalName pulumi.StringInput `pulumi:"localName"`
	ZoneId    pulumi.StringInput `pulumi:"zoneId"`
}

func (GetEnhancedNatAvailableZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnhancedNatAvailableZonesZone)(nil)).Elem()
}

func (i GetEnhancedNatAvailableZonesZoneArgs) ToGetEnhancedNatAvailableZonesZoneOutput() GetEnhancedNatAvailableZonesZoneOutput {
	return i.ToGetEnhancedNatAvailableZonesZoneOutputWithContext(context.Background())
}

func (i GetEnhancedNatAvailableZonesZoneArgs) ToGetEnhancedNatAvailableZonesZoneOutputWithContext(ctx context.Context) GetEnhancedNatAvailableZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnhancedNatAvailableZonesZoneOutput)
}

// GetEnhancedNatAvailableZonesZoneArrayInput is an input type that accepts GetEnhancedNatAvailableZonesZoneArray and GetEnhancedNatAvailableZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetEnhancedNatAvailableZonesZoneArrayInput` via:
//
//	GetEnhancedNatAvailableZonesZoneArray{ GetEnhancedNatAvailableZonesZoneArgs{...} }
type GetEnhancedNatAvailableZonesZoneArrayInput interface {
	pulumi.Input

	ToGetEnhancedNatAvailableZonesZoneArrayOutput() GetEnhancedNatAvailableZonesZoneArrayOutput
	ToGetEnhancedNatAvailableZonesZoneArrayOutputWithContext(context.Context) GetEnhancedNatAvailableZonesZoneArrayOutput
}

type GetEnhancedNatAvailableZonesZoneArray []GetEnhancedNatAvailableZonesZoneInput

func (GetEnhancedNatAvailableZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnhancedNatAvailableZonesZone)(nil)).Elem()
}

func (i GetEnhancedNatAvailableZonesZoneArray) ToGetEnhancedNatAvailableZonesZoneArrayOutput() GetEnhancedNatAvailableZonesZoneArrayOutput {
	return i.ToGetEnhancedNatAvailableZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetEnhancedNatAvailableZonesZoneArray) ToGetEnhancedNatAvailableZonesZoneArrayOutputWithContext(ctx context.Context) GetEnhancedNatAvailableZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnhancedNatAvailableZonesZoneArrayOutput)
}

type GetEnhancedNatAvailableZonesZoneOutput struct{ *pulumi.OutputState }

func (GetEnhancedNatAvailableZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnhancedNatAvailableZonesZone)(nil)).Elem()
}

func (o GetEnhancedNatAvailableZonesZoneOutput) ToGetEnhancedNatAvailableZonesZoneOutput() GetEnhancedNatAvailableZonesZoneOutput {
	return o
}

func (o GetEnhancedNatAvailableZonesZoneOutput) ToGetEnhancedNatAvailableZonesZoneOutputWithContext(ctx context.Context) GetEnhancedNatAvailableZonesZoneOutput {
	return o
}

func (o GetEnhancedNatAvailableZonesZoneOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnhancedNatAvailableZonesZone) string { return v.LocalName }).(pulumi.StringOutput)
}

func (o GetEnhancedNatAvailableZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnhancedNatAvailableZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetEnhancedNatAvailableZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetEnhancedNatAvailableZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnhancedNatAvailableZonesZone)(nil)).Elem()
}

func (o GetEnhancedNatAvailableZonesZoneArrayOutput) ToGetEnhancedNatAvailableZonesZoneArrayOutput() GetEnhancedNatAvailableZonesZoneArrayOutput {
	return o
}

func (o GetEnhancedNatAvailableZonesZoneArrayOutput) ToGetEnhancedNatAvailableZonesZoneArrayOutputWithContext(ctx context.Context) GetEnhancedNatAvailableZonesZoneArrayOutput {
	return o
}

func (o GetEnhancedNatAvailableZonesZoneArrayOutput) Index(i pulumi.IntInput) GetEnhancedNatAvailableZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnhancedNatAvailableZonesZone {
		return vs[0].([]GetEnhancedNatAvailableZonesZone)[vs[1].(int)]
	}).(GetEnhancedNatAvailableZonesZoneOutput)
}

type GetForwardEntriesEntry struct {
	// The public IP address.
	ExternalIp string `pulumi:"externalIp"`
	// The public port.
	ExternalPort string `pulumi:"externalPort"`
	// The forward entry ID.
	ForwardEntryId string `pulumi:"forwardEntryId"`
	// The name of forward entry.
	ForwardEntryName string `pulumi:"forwardEntryName"`
	// The ID of the Forward Entry.
	Id string `pulumi:"id"`
	// The private IP address.
	InternalIp string `pulumi:"internalIp"`
	// The internal port.
	InternalPort string `pulumi:"internalPort"`
	// The ip protocol. Valid values: `any`,`tcp` and `udp`.
	IpProtocol string `pulumi:"ipProtocol"`
	// The forward entry name.
	Name string `pulumi:"name"`
	// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
	Status string `pulumi:"status"`
}

// GetForwardEntriesEntryInput is an input type that accepts GetForwardEntriesEntryArgs and GetForwardEntriesEntryOutput values.
// You can construct a concrete instance of `GetForwardEntriesEntryInput` via:
//
//	GetForwardEntriesEntryArgs{...}
type GetForwardEntriesEntryInput interface {
	pulumi.Input

	ToGetForwardEntriesEntryOutput() GetForwardEntriesEntryOutput
	ToGetForwardEntriesEntryOutputWithContext(context.Context) GetForwardEntriesEntryOutput
}

type GetForwardEntriesEntryArgs struct {
	// The public IP address.
	ExternalIp pulumi.StringInput `pulumi:"externalIp"`
	// The public port.
	ExternalPort pulumi.StringInput `pulumi:"externalPort"`
	// The forward entry ID.
	ForwardEntryId pulumi.StringInput `pulumi:"forwardEntryId"`
	// The name of forward entry.
	ForwardEntryName pulumi.StringInput `pulumi:"forwardEntryName"`
	// The ID of the Forward Entry.
	Id pulumi.StringInput `pulumi:"id"`
	// The private IP address.
	InternalIp pulumi.StringInput `pulumi:"internalIp"`
	// The internal port.
	InternalPort pulumi.StringInput `pulumi:"internalPort"`
	// The ip protocol. Valid values: `any`,`tcp` and `udp`.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// The forward entry name.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetForwardEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardEntriesEntry)(nil)).Elem()
}

func (i GetForwardEntriesEntryArgs) ToGetForwardEntriesEntryOutput() GetForwardEntriesEntryOutput {
	return i.ToGetForwardEntriesEntryOutputWithContext(context.Background())
}

func (i GetForwardEntriesEntryArgs) ToGetForwardEntriesEntryOutputWithContext(ctx context.Context) GetForwardEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardEntriesEntryOutput)
}

// GetForwardEntriesEntryArrayInput is an input type that accepts GetForwardEntriesEntryArray and GetForwardEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetForwardEntriesEntryArrayInput` via:
//
//	GetForwardEntriesEntryArray{ GetForwardEntriesEntryArgs{...} }
type GetForwardEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetForwardEntriesEntryArrayOutput() GetForwardEntriesEntryArrayOutput
	ToGetForwardEntriesEntryArrayOutputWithContext(context.Context) GetForwardEntriesEntryArrayOutput
}

type GetForwardEntriesEntryArray []GetForwardEntriesEntryInput

func (GetForwardEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardEntriesEntry)(nil)).Elem()
}

func (i GetForwardEntriesEntryArray) ToGetForwardEntriesEntryArrayOutput() GetForwardEntriesEntryArrayOutput {
	return i.ToGetForwardEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetForwardEntriesEntryArray) ToGetForwardEntriesEntryArrayOutputWithContext(ctx context.Context) GetForwardEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardEntriesEntryArrayOutput)
}

type GetForwardEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetForwardEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardEntriesEntry)(nil)).Elem()
}

func (o GetForwardEntriesEntryOutput) ToGetForwardEntriesEntryOutput() GetForwardEntriesEntryOutput {
	return o
}

func (o GetForwardEntriesEntryOutput) ToGetForwardEntriesEntryOutputWithContext(ctx context.Context) GetForwardEntriesEntryOutput {
	return o
}

// The public IP address.
func (o GetForwardEntriesEntryOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// The public port.
func (o GetForwardEntriesEntryOutput) ExternalPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.ExternalPort }).(pulumi.StringOutput)
}

// The forward entry ID.
func (o GetForwardEntriesEntryOutput) ForwardEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.ForwardEntryId }).(pulumi.StringOutput)
}

// The name of forward entry.
func (o GetForwardEntriesEntryOutput) ForwardEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.ForwardEntryName }).(pulumi.StringOutput)
}

// The ID of the Forward Entry.
func (o GetForwardEntriesEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.Id }).(pulumi.StringOutput)
}

// The private IP address.
func (o GetForwardEntriesEntryOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.InternalIp }).(pulumi.StringOutput)
}

// The internal port.
func (o GetForwardEntriesEntryOutput) InternalPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.InternalPort }).(pulumi.StringOutput)
}

// The ip protocol. Valid values: `any`,`tcp` and `udp`.
func (o GetForwardEntriesEntryOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// The forward entry name.
func (o GetForwardEntriesEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.Name }).(pulumi.StringOutput)
}

// The status of farward entry. Valid value `Available`, `Deleting` and `Pending`.
func (o GetForwardEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

type GetForwardEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetForwardEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardEntriesEntry)(nil)).Elem()
}

func (o GetForwardEntriesEntryArrayOutput) ToGetForwardEntriesEntryArrayOutput() GetForwardEntriesEntryArrayOutput {
	return o
}

func (o GetForwardEntriesEntryArrayOutput) ToGetForwardEntriesEntryArrayOutputWithContext(ctx context.Context) GetForwardEntriesEntryArrayOutput {
	return o
}

func (o GetForwardEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetForwardEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardEntriesEntry {
		return vs[0].([]GetForwardEntriesEntry)[vs[1].(int)]
	}).(GetForwardEntriesEntryOutput)
}

type GetHavipsHavip struct {
	// EIP bound to HaVip.
	AssociatedEipAddresses []string `pulumi:"associatedEipAddresses"`
	// An ECS instance that is bound to HaVip.
	AssociatedInstances []string `pulumi:"associatedInstances"`
	// Dependence of a HaVip instance.
	Description string `pulumi:"description"`
	// The  ID of the resource.
	HavipId string `pulumi:"havipId"`
	// The name of the HaVip instance.
	HavipName string `pulumi:"havipName"`
	// The ID of the Ha Vip.
	Id string `pulumi:"id"`
	// IP address of private network.
	IpAddress string `pulumi:"ipAddress"`
	// The primary instance ID bound to HaVip.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// The status.
	Status string `pulumi:"status"`
	// The VPC ID to which the HaVip instance belongs.
	VpcId string `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
}

// GetHavipsHavipInput is an input type that accepts GetHavipsHavipArgs and GetHavipsHavipOutput values.
// You can construct a concrete instance of `GetHavipsHavipInput` via:
//
//	GetHavipsHavipArgs{...}
type GetHavipsHavipInput interface {
	pulumi.Input

	ToGetHavipsHavipOutput() GetHavipsHavipOutput
	ToGetHavipsHavipOutputWithContext(context.Context) GetHavipsHavipOutput
}

type GetHavipsHavipArgs struct {
	// EIP bound to HaVip.
	AssociatedEipAddresses pulumi.StringArrayInput `pulumi:"associatedEipAddresses"`
	// An ECS instance that is bound to HaVip.
	AssociatedInstances pulumi.StringArrayInput `pulumi:"associatedInstances"`
	// Dependence of a HaVip instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The  ID of the resource.
	HavipId pulumi.StringInput `pulumi:"havipId"`
	// The name of the HaVip instance.
	HavipName pulumi.StringInput `pulumi:"havipName"`
	// The ID of the Ha Vip.
	Id pulumi.StringInput `pulumi:"id"`
	// IP address of private network.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The primary instance ID bound to HaVip.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// The status.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC ID to which the HaVip instance belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetHavipsHavipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHavipsHavip)(nil)).Elem()
}

func (i GetHavipsHavipArgs) ToGetHavipsHavipOutput() GetHavipsHavipOutput {
	return i.ToGetHavipsHavipOutputWithContext(context.Background())
}

func (i GetHavipsHavipArgs) ToGetHavipsHavipOutputWithContext(ctx context.Context) GetHavipsHavipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHavipsHavipOutput)
}

// GetHavipsHavipArrayInput is an input type that accepts GetHavipsHavipArray and GetHavipsHavipArrayOutput values.
// You can construct a concrete instance of `GetHavipsHavipArrayInput` via:
//
//	GetHavipsHavipArray{ GetHavipsHavipArgs{...} }
type GetHavipsHavipArrayInput interface {
	pulumi.Input

	ToGetHavipsHavipArrayOutput() GetHavipsHavipArrayOutput
	ToGetHavipsHavipArrayOutputWithContext(context.Context) GetHavipsHavipArrayOutput
}

type GetHavipsHavipArray []GetHavipsHavipInput

func (GetHavipsHavipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHavipsHavip)(nil)).Elem()
}

func (i GetHavipsHavipArray) ToGetHavipsHavipArrayOutput() GetHavipsHavipArrayOutput {
	return i.ToGetHavipsHavipArrayOutputWithContext(context.Background())
}

func (i GetHavipsHavipArray) ToGetHavipsHavipArrayOutputWithContext(ctx context.Context) GetHavipsHavipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHavipsHavipArrayOutput)
}

type GetHavipsHavipOutput struct{ *pulumi.OutputState }

func (GetHavipsHavipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHavipsHavip)(nil)).Elem()
}

func (o GetHavipsHavipOutput) ToGetHavipsHavipOutput() GetHavipsHavipOutput {
	return o
}

func (o GetHavipsHavipOutput) ToGetHavipsHavipOutputWithContext(ctx context.Context) GetHavipsHavipOutput {
	return o
}

// EIP bound to HaVip.
func (o GetHavipsHavipOutput) AssociatedEipAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHavipsHavip) []string { return v.AssociatedEipAddresses }).(pulumi.StringArrayOutput)
}

// An ECS instance that is bound to HaVip.
func (o GetHavipsHavipOutput) AssociatedInstances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHavipsHavip) []string { return v.AssociatedInstances }).(pulumi.StringArrayOutput)
}

// Dependence of a HaVip instance.
func (o GetHavipsHavipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.Description }).(pulumi.StringOutput)
}

// The  ID of the resource.
func (o GetHavipsHavipOutput) HavipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.HavipId }).(pulumi.StringOutput)
}

// The name of the HaVip instance.
func (o GetHavipsHavipOutput) HavipName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.HavipName }).(pulumi.StringOutput)
}

// The ID of the Ha Vip.
func (o GetHavipsHavipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.Id }).(pulumi.StringOutput)
}

// IP address of private network.
func (o GetHavipsHavipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The primary instance ID bound to HaVip.
func (o GetHavipsHavipOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The status.
func (o GetHavipsHavipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC ID to which the HaVip instance belongs.
func (o GetHavipsHavipOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetHavipsHavipOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHavipsHavip) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetHavipsHavipArrayOutput struct{ *pulumi.OutputState }

func (GetHavipsHavipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHavipsHavip)(nil)).Elem()
}

func (o GetHavipsHavipArrayOutput) ToGetHavipsHavipArrayOutput() GetHavipsHavipArrayOutput {
	return o
}

func (o GetHavipsHavipArrayOutput) ToGetHavipsHavipArrayOutputWithContext(ctx context.Context) GetHavipsHavipArrayOutput {
	return o
}

func (o GetHavipsHavipArrayOutput) Index(i pulumi.IntInput) GetHavipsHavipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHavipsHavip {
		return vs[0].([]GetHavipsHavip)[vs[1].(int)]
	}).(GetHavipsHavipOutput)
}

type GetIpsecServersServer struct {
	// The CIDR block of the client, which is assigned an access address to the virtual NIC of the client.
	ClientIpPool string `pulumi:"clientIpPool"`
	// The creation time of the IPsec server. T represents the delimiter, and Z represents UTC, which is World Standard Time.
	CreateTime string `pulumi:"createTime"`
	// Indicates whether the current IPsec tunnel is deleted and negotiations are reinitiated.
	EffectImmediately bool `pulumi:"effectImmediately"`
	// The ID of the Ipsec Server.
	Id string `pulumi:"id"`
	// The ID of the Identity as a Service (IDaaS) instance.
	IdaasInstanceId string `pulumi:"idaasInstanceId"`
	// The configurations of Phase 1 negotiations.
	IkeConfigs []GetIpsecServersServerIkeConfig `pulumi:"ikeConfigs"`
	// The public IP address of the VPN gateway.
	InternetIp string `pulumi:"internetIp"`
	// The configuration of Phase 2 negotiations.
	IpsecConfigs []GetIpsecServersServerIpsecConfig `pulumi:"ipsecConfigs"`
	// The ID of the IPsec server.
	IpsecServerId string `pulumi:"ipsecServerId"`
	// The name of the IPsec server.
	IpsecServerName string `pulumi:"ipsecServerName"`
	// Local network segment: the network segment on The VPC side that needs to be interconnected with the client network segment.
	LocalSubnet string `pulumi:"localSubnet"`
	// The number of SSL connections of the VPN gateway. SSL-VPN the number of SSL connections shared with the IPsec server. For example, if the number of SSL connections is 5 and you have three SSL clients connected to the SSL-VPN, you can also use two clients to connect to the IPsec server.
	MaxConnections int `pulumi:"maxConnections"`
	// Whether the two-factor authentication function has been turned on.
	MultiFactorAuthEnabled bool `pulumi:"multiFactorAuthEnabled"`
	// The number of clients that have connected to the IPsec server.
	OnlineClientCount int `pulumi:"onlineClientCount"`
	// The pre-shared key.
	Psk string `pulumi:"psk"`
	// Whether to enable the pre-shared key authentication method. The value is only `true`, which indicates that the pre-shared key authentication method is enabled.
	PskEnabled bool `pulumi:"pskEnabled"`
	// The ID of the VPN gateway.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetIpsecServersServerInput is an input type that accepts GetIpsecServersServerArgs and GetIpsecServersServerOutput values.
// You can construct a concrete instance of `GetIpsecServersServerInput` via:
//
//	GetIpsecServersServerArgs{...}
type GetIpsecServersServerInput interface {
	pulumi.Input

	ToGetIpsecServersServerOutput() GetIpsecServersServerOutput
	ToGetIpsecServersServerOutputWithContext(context.Context) GetIpsecServersServerOutput
}

type GetIpsecServersServerArgs struct {
	// The CIDR block of the client, which is assigned an access address to the virtual NIC of the client.
	ClientIpPool pulumi.StringInput `pulumi:"clientIpPool"`
	// The creation time of the IPsec server. T represents the delimiter, and Z represents UTC, which is World Standard Time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Indicates whether the current IPsec tunnel is deleted and negotiations are reinitiated.
	EffectImmediately pulumi.BoolInput `pulumi:"effectImmediately"`
	// The ID of the Ipsec Server.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Identity as a Service (IDaaS) instance.
	IdaasInstanceId pulumi.StringInput `pulumi:"idaasInstanceId"`
	// The configurations of Phase 1 negotiations.
	IkeConfigs GetIpsecServersServerIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// The public IP address of the VPN gateway.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The configuration of Phase 2 negotiations.
	IpsecConfigs GetIpsecServersServerIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The ID of the IPsec server.
	IpsecServerId pulumi.StringInput `pulumi:"ipsecServerId"`
	// The name of the IPsec server.
	IpsecServerName pulumi.StringInput `pulumi:"ipsecServerName"`
	// Local network segment: the network segment on The VPC side that needs to be interconnected with the client network segment.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The number of SSL connections of the VPN gateway. SSL-VPN the number of SSL connections shared with the IPsec server. For example, if the number of SSL connections is 5 and you have three SSL clients connected to the SSL-VPN, you can also use two clients to connect to the IPsec server.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Whether the two-factor authentication function has been turned on.
	MultiFactorAuthEnabled pulumi.BoolInput `pulumi:"multiFactorAuthEnabled"`
	// The number of clients that have connected to the IPsec server.
	OnlineClientCount pulumi.IntInput `pulumi:"onlineClientCount"`
	// The pre-shared key.
	Psk pulumi.StringInput `pulumi:"psk"`
	// Whether to enable the pre-shared key authentication method. The value is only `true`, which indicates that the pre-shared key authentication method is enabled.
	PskEnabled pulumi.BoolInput `pulumi:"pskEnabled"`
	// The ID of the VPN gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetIpsecServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServer)(nil)).Elem()
}

func (i GetIpsecServersServerArgs) ToGetIpsecServersServerOutput() GetIpsecServersServerOutput {
	return i.ToGetIpsecServersServerOutputWithContext(context.Background())
}

func (i GetIpsecServersServerArgs) ToGetIpsecServersServerOutputWithContext(ctx context.Context) GetIpsecServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerOutput)
}

// GetIpsecServersServerArrayInput is an input type that accepts GetIpsecServersServerArray and GetIpsecServersServerArrayOutput values.
// You can construct a concrete instance of `GetIpsecServersServerArrayInput` via:
//
//	GetIpsecServersServerArray{ GetIpsecServersServerArgs{...} }
type GetIpsecServersServerArrayInput interface {
	pulumi.Input

	ToGetIpsecServersServerArrayOutput() GetIpsecServersServerArrayOutput
	ToGetIpsecServersServerArrayOutputWithContext(context.Context) GetIpsecServersServerArrayOutput
}

type GetIpsecServersServerArray []GetIpsecServersServerInput

func (GetIpsecServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServer)(nil)).Elem()
}

func (i GetIpsecServersServerArray) ToGetIpsecServersServerArrayOutput() GetIpsecServersServerArrayOutput {
	return i.ToGetIpsecServersServerArrayOutputWithContext(context.Background())
}

func (i GetIpsecServersServerArray) ToGetIpsecServersServerArrayOutputWithContext(ctx context.Context) GetIpsecServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerArrayOutput)
}

type GetIpsecServersServerOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServer)(nil)).Elem()
}

func (o GetIpsecServersServerOutput) ToGetIpsecServersServerOutput() GetIpsecServersServerOutput {
	return o
}

func (o GetIpsecServersServerOutput) ToGetIpsecServersServerOutputWithContext(ctx context.Context) GetIpsecServersServerOutput {
	return o
}

// The CIDR block of the client, which is assigned an access address to the virtual NIC of the client.
func (o GetIpsecServersServerOutput) ClientIpPool() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.ClientIpPool }).(pulumi.StringOutput)
}

// The creation time of the IPsec server. T represents the delimiter, and Z represents UTC, which is World Standard Time.
func (o GetIpsecServersServerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Indicates whether the current IPsec tunnel is deleted and negotiations are reinitiated.
func (o GetIpsecServersServerOutput) EffectImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpsecServersServer) bool { return v.EffectImmediately }).(pulumi.BoolOutput)
}

// The ID of the Ipsec Server.
func (o GetIpsecServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Identity as a Service (IDaaS) instance.
func (o GetIpsecServersServerOutput) IdaasInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.IdaasInstanceId }).(pulumi.StringOutput)
}

// The configurations of Phase 1 negotiations.
func (o GetIpsecServersServerOutput) IkeConfigs() GetIpsecServersServerIkeConfigArrayOutput {
	return o.ApplyT(func(v GetIpsecServersServer) []GetIpsecServersServerIkeConfig { return v.IkeConfigs }).(GetIpsecServersServerIkeConfigArrayOutput)
}

// The public IP address of the VPN gateway.
func (o GetIpsecServersServerOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The configuration of Phase 2 negotiations.
func (o GetIpsecServersServerOutput) IpsecConfigs() GetIpsecServersServerIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetIpsecServersServer) []GetIpsecServersServerIpsecConfig { return v.IpsecConfigs }).(GetIpsecServersServerIpsecConfigArrayOutput)
}

// The ID of the IPsec server.
func (o GetIpsecServersServerOutput) IpsecServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.IpsecServerId }).(pulumi.StringOutput)
}

// The name of the IPsec server.
func (o GetIpsecServersServerOutput) IpsecServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.IpsecServerName }).(pulumi.StringOutput)
}

// Local network segment: the network segment on The VPC side that needs to be interconnected with the client network segment.
func (o GetIpsecServersServerOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The number of SSL connections of the VPN gateway. SSL-VPN the number of SSL connections shared with the IPsec server. For example, if the number of SSL connections is 5 and you have three SSL clients connected to the SSL-VPN, you can also use two clients to connect to the IPsec server.
func (o GetIpsecServersServerOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsecServersServer) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Whether the two-factor authentication function has been turned on.
func (o GetIpsecServersServerOutput) MultiFactorAuthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpsecServersServer) bool { return v.MultiFactorAuthEnabled }).(pulumi.BoolOutput)
}

// The number of clients that have connected to the IPsec server.
func (o GetIpsecServersServerOutput) OnlineClientCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsecServersServer) int { return v.OnlineClientCount }).(pulumi.IntOutput)
}

// The pre-shared key.
func (o GetIpsecServersServerOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.Psk }).(pulumi.StringOutput)
}

// Whether to enable the pre-shared key authentication method. The value is only `true`, which indicates that the pre-shared key authentication method is enabled.
func (o GetIpsecServersServerOutput) PskEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpsecServersServer) bool { return v.PskEnabled }).(pulumi.BoolOutput)
}

// The ID of the VPN gateway.
func (o GetIpsecServersServerOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServer) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetIpsecServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServer)(nil)).Elem()
}

func (o GetIpsecServersServerArrayOutput) ToGetIpsecServersServerArrayOutput() GetIpsecServersServerArrayOutput {
	return o
}

func (o GetIpsecServersServerArrayOutput) ToGetIpsecServersServerArrayOutputWithContext(ctx context.Context) GetIpsecServersServerArrayOutput {
	return o
}

func (o GetIpsecServersServerArrayOutput) Index(i pulumi.IntInput) GetIpsecServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsecServersServer {
		return vs[0].([]GetIpsecServersServer)[vs[1].(int)]
	}).(GetIpsecServersServerOutput)
}

type GetIpsecServersServerIkeConfig struct {
	// The IKE authentication algorithm.
	IkeAuthAlg string `pulumi:"ikeAuthAlg"`
	// The IKE encryption algorithm.
	IkeEncAlg string `pulumi:"ikeEncAlg"`
	// The IKE lifetime. Unit: seconds.
	IkeLifetime int `pulumi:"ikeLifetime"`
	// The IKE negotiation mode.
	IkeMode string `pulumi:"ikeMode"`
	// Diffie-Hellman key exchange algorithm.
	IkePfs string `pulumi:"ikePfs"`
	// The IKE version.
	IkeVersion string `pulumi:"ikeVersion"`
	// IPsec server identifier. Supports the format of FQDN and IP address. The public IP address of the VPN gateway is selected by default.
	LocalId string `pulumi:"localId"`
	// The peer identifier. Supports the format of FQDN and IP address, which is empty by default.
	RemoteId string `pulumi:"remoteId"`
}

// GetIpsecServersServerIkeConfigInput is an input type that accepts GetIpsecServersServerIkeConfigArgs and GetIpsecServersServerIkeConfigOutput values.
// You can construct a concrete instance of `GetIpsecServersServerIkeConfigInput` via:
//
//	GetIpsecServersServerIkeConfigArgs{...}
type GetIpsecServersServerIkeConfigInput interface {
	pulumi.Input

	ToGetIpsecServersServerIkeConfigOutput() GetIpsecServersServerIkeConfigOutput
	ToGetIpsecServersServerIkeConfigOutputWithContext(context.Context) GetIpsecServersServerIkeConfigOutput
}

type GetIpsecServersServerIkeConfigArgs struct {
	// The IKE authentication algorithm.
	IkeAuthAlg pulumi.StringInput `pulumi:"ikeAuthAlg"`
	// The IKE encryption algorithm.
	IkeEncAlg pulumi.StringInput `pulumi:"ikeEncAlg"`
	// The IKE lifetime. Unit: seconds.
	IkeLifetime pulumi.IntInput `pulumi:"ikeLifetime"`
	// The IKE negotiation mode.
	IkeMode pulumi.StringInput `pulumi:"ikeMode"`
	// Diffie-Hellman key exchange algorithm.
	IkePfs pulumi.StringInput `pulumi:"ikePfs"`
	// The IKE version.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// IPsec server identifier. Supports the format of FQDN and IP address. The public IP address of the VPN gateway is selected by default.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The peer identifier. Supports the format of FQDN and IP address, which is empty by default.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
}

func (GetIpsecServersServerIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServerIkeConfig)(nil)).Elem()
}

func (i GetIpsecServersServerIkeConfigArgs) ToGetIpsecServersServerIkeConfigOutput() GetIpsecServersServerIkeConfigOutput {
	return i.ToGetIpsecServersServerIkeConfigOutputWithContext(context.Background())
}

func (i GetIpsecServersServerIkeConfigArgs) ToGetIpsecServersServerIkeConfigOutputWithContext(ctx context.Context) GetIpsecServersServerIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerIkeConfigOutput)
}

// GetIpsecServersServerIkeConfigArrayInput is an input type that accepts GetIpsecServersServerIkeConfigArray and GetIpsecServersServerIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetIpsecServersServerIkeConfigArrayInput` via:
//
//	GetIpsecServersServerIkeConfigArray{ GetIpsecServersServerIkeConfigArgs{...} }
type GetIpsecServersServerIkeConfigArrayInput interface {
	pulumi.Input

	ToGetIpsecServersServerIkeConfigArrayOutput() GetIpsecServersServerIkeConfigArrayOutput
	ToGetIpsecServersServerIkeConfigArrayOutputWithContext(context.Context) GetIpsecServersServerIkeConfigArrayOutput
}

type GetIpsecServersServerIkeConfigArray []GetIpsecServersServerIkeConfigInput

func (GetIpsecServersServerIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServerIkeConfig)(nil)).Elem()
}

func (i GetIpsecServersServerIkeConfigArray) ToGetIpsecServersServerIkeConfigArrayOutput() GetIpsecServersServerIkeConfigArrayOutput {
	return i.ToGetIpsecServersServerIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetIpsecServersServerIkeConfigArray) ToGetIpsecServersServerIkeConfigArrayOutputWithContext(ctx context.Context) GetIpsecServersServerIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerIkeConfigArrayOutput)
}

type GetIpsecServersServerIkeConfigOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServerIkeConfig)(nil)).Elem()
}

func (o GetIpsecServersServerIkeConfigOutput) ToGetIpsecServersServerIkeConfigOutput() GetIpsecServersServerIkeConfigOutput {
	return o
}

func (o GetIpsecServersServerIkeConfigOutput) ToGetIpsecServersServerIkeConfigOutputWithContext(ctx context.Context) GetIpsecServersServerIkeConfigOutput {
	return o
}

// The IKE authentication algorithm.
func (o GetIpsecServersServerIkeConfigOutput) IkeAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.IkeAuthAlg }).(pulumi.StringOutput)
}

// The IKE encryption algorithm.
func (o GetIpsecServersServerIkeConfigOutput) IkeEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.IkeEncAlg }).(pulumi.StringOutput)
}

// The IKE lifetime. Unit: seconds.
func (o GetIpsecServersServerIkeConfigOutput) IkeLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) int { return v.IkeLifetime }).(pulumi.IntOutput)
}

// The IKE negotiation mode.
func (o GetIpsecServersServerIkeConfigOutput) IkeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.IkeMode }).(pulumi.StringOutput)
}

// Diffie-Hellman key exchange algorithm.
func (o GetIpsecServersServerIkeConfigOutput) IkePfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.IkePfs }).(pulumi.StringOutput)
}

// The IKE version.
func (o GetIpsecServersServerIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// IPsec server identifier. Supports the format of FQDN and IP address. The public IP address of the VPN gateway is selected by default.
func (o GetIpsecServersServerIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// The peer identifier. Supports the format of FQDN and IP address, which is empty by default.
func (o GetIpsecServersServerIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

type GetIpsecServersServerIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServerIkeConfig)(nil)).Elem()
}

func (o GetIpsecServersServerIkeConfigArrayOutput) ToGetIpsecServersServerIkeConfigArrayOutput() GetIpsecServersServerIkeConfigArrayOutput {
	return o
}

func (o GetIpsecServersServerIkeConfigArrayOutput) ToGetIpsecServersServerIkeConfigArrayOutputWithContext(ctx context.Context) GetIpsecServersServerIkeConfigArrayOutput {
	return o
}

func (o GetIpsecServersServerIkeConfigArrayOutput) Index(i pulumi.IntInput) GetIpsecServersServerIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsecServersServerIkeConfig {
		return vs[0].([]GetIpsecServersServerIkeConfig)[vs[1].(int)]
	}).(GetIpsecServersServerIkeConfigOutput)
}

type GetIpsecServersServerIpsecConfig struct {
	// IPsec authentication algorithm.
	IpsecAuthAlg string `pulumi:"ipsecAuthAlg"`
	// IPsec encryption algorithm.
	IpsecEncAlg string `pulumi:"ipsecEncAlg"`
	// IPsec survival time. Unit: seconds.
	IpsecLifetime int `pulumi:"ipsecLifetime"`
	// Diffie-Hellman key exchange algorithm.
	IpsecPfs string `pulumi:"ipsecPfs"`
}

// GetIpsecServersServerIpsecConfigInput is an input type that accepts GetIpsecServersServerIpsecConfigArgs and GetIpsecServersServerIpsecConfigOutput values.
// You can construct a concrete instance of `GetIpsecServersServerIpsecConfigInput` via:
//
//	GetIpsecServersServerIpsecConfigArgs{...}
type GetIpsecServersServerIpsecConfigInput interface {
	pulumi.Input

	ToGetIpsecServersServerIpsecConfigOutput() GetIpsecServersServerIpsecConfigOutput
	ToGetIpsecServersServerIpsecConfigOutputWithContext(context.Context) GetIpsecServersServerIpsecConfigOutput
}

type GetIpsecServersServerIpsecConfigArgs struct {
	// IPsec authentication algorithm.
	IpsecAuthAlg pulumi.StringInput `pulumi:"ipsecAuthAlg"`
	// IPsec encryption algorithm.
	IpsecEncAlg pulumi.StringInput `pulumi:"ipsecEncAlg"`
	// IPsec survival time. Unit: seconds.
	IpsecLifetime pulumi.IntInput `pulumi:"ipsecLifetime"`
	// Diffie-Hellman key exchange algorithm.
	IpsecPfs pulumi.StringInput `pulumi:"ipsecPfs"`
}

func (GetIpsecServersServerIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServerIpsecConfig)(nil)).Elem()
}

func (i GetIpsecServersServerIpsecConfigArgs) ToGetIpsecServersServerIpsecConfigOutput() GetIpsecServersServerIpsecConfigOutput {
	return i.ToGetIpsecServersServerIpsecConfigOutputWithContext(context.Background())
}

func (i GetIpsecServersServerIpsecConfigArgs) ToGetIpsecServersServerIpsecConfigOutputWithContext(ctx context.Context) GetIpsecServersServerIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerIpsecConfigOutput)
}

// GetIpsecServersServerIpsecConfigArrayInput is an input type that accepts GetIpsecServersServerIpsecConfigArray and GetIpsecServersServerIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetIpsecServersServerIpsecConfigArrayInput` via:
//
//	GetIpsecServersServerIpsecConfigArray{ GetIpsecServersServerIpsecConfigArgs{...} }
type GetIpsecServersServerIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetIpsecServersServerIpsecConfigArrayOutput() GetIpsecServersServerIpsecConfigArrayOutput
	ToGetIpsecServersServerIpsecConfigArrayOutputWithContext(context.Context) GetIpsecServersServerIpsecConfigArrayOutput
}

type GetIpsecServersServerIpsecConfigArray []GetIpsecServersServerIpsecConfigInput

func (GetIpsecServersServerIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServerIpsecConfig)(nil)).Elem()
}

func (i GetIpsecServersServerIpsecConfigArray) ToGetIpsecServersServerIpsecConfigArrayOutput() GetIpsecServersServerIpsecConfigArrayOutput {
	return i.ToGetIpsecServersServerIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetIpsecServersServerIpsecConfigArray) ToGetIpsecServersServerIpsecConfigArrayOutputWithContext(ctx context.Context) GetIpsecServersServerIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsecServersServerIpsecConfigArrayOutput)
}

type GetIpsecServersServerIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecServersServerIpsecConfig)(nil)).Elem()
}

func (o GetIpsecServersServerIpsecConfigOutput) ToGetIpsecServersServerIpsecConfigOutput() GetIpsecServersServerIpsecConfigOutput {
	return o
}

func (o GetIpsecServersServerIpsecConfigOutput) ToGetIpsecServersServerIpsecConfigOutputWithContext(ctx context.Context) GetIpsecServersServerIpsecConfigOutput {
	return o
}

// IPsec authentication algorithm.
func (o GetIpsecServersServerIpsecConfigOutput) IpsecAuthAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIpsecConfig) string { return v.IpsecAuthAlg }).(pulumi.StringOutput)
}

// IPsec encryption algorithm.
func (o GetIpsecServersServerIpsecConfigOutput) IpsecEncAlg() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIpsecConfig) string { return v.IpsecEncAlg }).(pulumi.StringOutput)
}

// IPsec survival time. Unit: seconds.
func (o GetIpsecServersServerIpsecConfigOutput) IpsecLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsecServersServerIpsecConfig) int { return v.IpsecLifetime }).(pulumi.IntOutput)
}

// Diffie-Hellman key exchange algorithm.
func (o GetIpsecServersServerIpsecConfigOutput) IpsecPfs() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecServersServerIpsecConfig) string { return v.IpsecPfs }).(pulumi.StringOutput)
}

type GetIpsecServersServerIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIpsecServersServerIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsecServersServerIpsecConfig)(nil)).Elem()
}

func (o GetIpsecServersServerIpsecConfigArrayOutput) ToGetIpsecServersServerIpsecConfigArrayOutput() GetIpsecServersServerIpsecConfigArrayOutput {
	return o
}

func (o GetIpsecServersServerIpsecConfigArrayOutput) ToGetIpsecServersServerIpsecConfigArrayOutputWithContext(ctx context.Context) GetIpsecServersServerIpsecConfigArrayOutput {
	return o
}

func (o GetIpsecServersServerIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetIpsecServersServerIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsecServersServerIpsecConfig {
		return vs[0].([]GetIpsecServersServerIpsecConfig)[vs[1].(int)]
	}).(GetIpsecServersServerIpsecConfigOutput)
}

type GetIpv4GatewaysGateway struct {
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// Indicates whether the IPv4 gateway is activated.
	Enabled bool `pulumi:"enabled"`
	// The ID of the Ipv4 Gateway.
	Id string `pulumi:"id"`
	// The description of the IPv4 gateway.
	Ipv4GatewayDescription string `pulumi:"ipv4GatewayDescription"`
	// The resource attribute field that represents the resource level 1 ID.
	Ipv4GatewayId string `pulumi:"ipv4GatewayId"`
	// The name of the IPv4 gateway.
	Ipv4GatewayName string `pulumi:"ipv4GatewayName"`
	// ID of the route table associated with IPv4 Gateway.
	Ipv4GatewayRouteTableId string `pulumi:"ipv4GatewayRouteTableId"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The ID of the VPC associated with the IPv4 Gateway.
	VpcId string `pulumi:"vpcId"`
}

// GetIpv4GatewaysGatewayInput is an input type that accepts GetIpv4GatewaysGatewayArgs and GetIpv4GatewaysGatewayOutput values.
// You can construct a concrete instance of `GetIpv4GatewaysGatewayInput` via:
//
//	GetIpv4GatewaysGatewayArgs{...}
type GetIpv4GatewaysGatewayInput interface {
	pulumi.Input

	ToGetIpv4GatewaysGatewayOutput() GetIpv4GatewaysGatewayOutput
	ToGetIpv4GatewaysGatewayOutputWithContext(context.Context) GetIpv4GatewaysGatewayOutput
}

type GetIpv4GatewaysGatewayArgs struct {
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Indicates whether the IPv4 gateway is activated.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the Ipv4 Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The description of the IPv4 gateway.
	Ipv4GatewayDescription pulumi.StringInput `pulumi:"ipv4GatewayDescription"`
	// The resource attribute field that represents the resource level 1 ID.
	Ipv4GatewayId pulumi.StringInput `pulumi:"ipv4GatewayId"`
	// The name of the IPv4 gateway.
	Ipv4GatewayName pulumi.StringInput `pulumi:"ipv4GatewayName"`
	// ID of the route table associated with IPv4 Gateway.
	Ipv4GatewayRouteTableId pulumi.StringInput `pulumi:"ipv4GatewayRouteTableId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VPC associated with the IPv4 Gateway.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetIpv4GatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv4GatewaysGateway)(nil)).Elem()
}

func (i GetIpv4GatewaysGatewayArgs) ToGetIpv4GatewaysGatewayOutput() GetIpv4GatewaysGatewayOutput {
	return i.ToGetIpv4GatewaysGatewayOutputWithContext(context.Background())
}

func (i GetIpv4GatewaysGatewayArgs) ToGetIpv4GatewaysGatewayOutputWithContext(ctx context.Context) GetIpv4GatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv4GatewaysGatewayOutput)
}

// GetIpv4GatewaysGatewayArrayInput is an input type that accepts GetIpv4GatewaysGatewayArray and GetIpv4GatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetIpv4GatewaysGatewayArrayInput` via:
//
//	GetIpv4GatewaysGatewayArray{ GetIpv4GatewaysGatewayArgs{...} }
type GetIpv4GatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetIpv4GatewaysGatewayArrayOutput() GetIpv4GatewaysGatewayArrayOutput
	ToGetIpv4GatewaysGatewayArrayOutputWithContext(context.Context) GetIpv4GatewaysGatewayArrayOutput
}

type GetIpv4GatewaysGatewayArray []GetIpv4GatewaysGatewayInput

func (GetIpv4GatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv4GatewaysGateway)(nil)).Elem()
}

func (i GetIpv4GatewaysGatewayArray) ToGetIpv4GatewaysGatewayArrayOutput() GetIpv4GatewaysGatewayArrayOutput {
	return i.ToGetIpv4GatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetIpv4GatewaysGatewayArray) ToGetIpv4GatewaysGatewayArrayOutputWithContext(ctx context.Context) GetIpv4GatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv4GatewaysGatewayArrayOutput)
}

type GetIpv4GatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetIpv4GatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv4GatewaysGateway)(nil)).Elem()
}

func (o GetIpv4GatewaysGatewayOutput) ToGetIpv4GatewaysGatewayOutput() GetIpv4GatewaysGatewayOutput {
	return o
}

func (o GetIpv4GatewaysGatewayOutput) ToGetIpv4GatewaysGatewayOutputWithContext(ctx context.Context) GetIpv4GatewaysGatewayOutput {
	return o
}

// The creation time of the resource.
func (o GetIpv4GatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Indicates whether the IPv4 gateway is activated.
func (o GetIpv4GatewaysGatewayOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the Ipv4 Gateway.
func (o GetIpv4GatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The description of the IPv4 gateway.
func (o GetIpv4GatewaysGatewayOutput) Ipv4GatewayDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Ipv4GatewayDescription }).(pulumi.StringOutput)
}

// The resource attribute field that represents the resource level 1 ID.
func (o GetIpv4GatewaysGatewayOutput) Ipv4GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Ipv4GatewayId }).(pulumi.StringOutput)
}

// The name of the IPv4 gateway.
func (o GetIpv4GatewaysGatewayOutput) Ipv4GatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Ipv4GatewayName }).(pulumi.StringOutput)
}

// ID of the route table associated with IPv4 Gateway.
func (o GetIpv4GatewaysGatewayOutput) Ipv4GatewayRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Ipv4GatewayRouteTableId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetIpv4GatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC associated with the IPv4 Gateway.
func (o GetIpv4GatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv4GatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetIpv4GatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetIpv4GatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv4GatewaysGateway)(nil)).Elem()
}

func (o GetIpv4GatewaysGatewayArrayOutput) ToGetIpv4GatewaysGatewayArrayOutput() GetIpv4GatewaysGatewayArrayOutput {
	return o
}

func (o GetIpv4GatewaysGatewayArrayOutput) ToGetIpv4GatewaysGatewayArrayOutputWithContext(ctx context.Context) GetIpv4GatewaysGatewayArrayOutput {
	return o
}

func (o GetIpv4GatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetIpv4GatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv4GatewaysGateway {
		return vs[0].([]GetIpv4GatewaysGateway)[vs[1].(int)]
	}).(GetIpv4GatewaysGatewayOutput)
}

type GetIpv6AddressesAddress struct {
	// The ID of the instance that is assigned the IPv6 address.
	AssociatedInstanceId string `pulumi:"associatedInstanceId"`
	// The type of the instance that is assigned the IPv6 address.
	AssociatedInstanceType string `pulumi:"associatedInstanceType"`
	// The time when the IPv6 address was created.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Ipv6 Address.
	Id string `pulumi:"id"`
	// The address of the Ipv6 Address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// The ID of the IPv6 address.
	Ipv6AddressId string `pulumi:"ipv6AddressId"`
	// The name of the IPv6 address.
	Ipv6AddressName string `pulumi:"ipv6AddressName"`
	// The ID of the IPv6 gateway to which the IPv6 address belongs.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The type of communication supported by the IPv6 address. Valid values:`Private` or `Public`. `Private`: communication within the private network. `Public`: communication over the public network
	NetworkType string `pulumi:"networkType"`
	// The status of the IPv6 address. Valid values:`Pending` or `Available`.
	Status string `pulumi:"status"`
	// The ID of the VPC to which the IPv6 address belongs.
	VpcId string `pulumi:"vpcId"`
	// The ID of the vSwitch to which the IPv6 address belongs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetIpv6AddressesAddressInput is an input type that accepts GetIpv6AddressesAddressArgs and GetIpv6AddressesAddressOutput values.
// You can construct a concrete instance of `GetIpv6AddressesAddressInput` via:
//
//	GetIpv6AddressesAddressArgs{...}
type GetIpv6AddressesAddressInput interface {
	pulumi.Input

	ToGetIpv6AddressesAddressOutput() GetIpv6AddressesAddressOutput
	ToGetIpv6AddressesAddressOutputWithContext(context.Context) GetIpv6AddressesAddressOutput
}

type GetIpv6AddressesAddressArgs struct {
	// The ID of the instance that is assigned the IPv6 address.
	AssociatedInstanceId pulumi.StringInput `pulumi:"associatedInstanceId"`
	// The type of the instance that is assigned the IPv6 address.
	AssociatedInstanceType pulumi.StringInput `pulumi:"associatedInstanceType"`
	// The time when the IPv6 address was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Ipv6 Address.
	Id pulumi.StringInput `pulumi:"id"`
	// The address of the Ipv6 Address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The ID of the IPv6 address.
	Ipv6AddressId pulumi.StringInput `pulumi:"ipv6AddressId"`
	// The name of the IPv6 address.
	Ipv6AddressName pulumi.StringInput `pulumi:"ipv6AddressName"`
	// The ID of the IPv6 gateway to which the IPv6 address belongs.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The type of communication supported by the IPv6 address. Valid values:`Private` or `Public`. `Private`: communication within the private network. `Public`: communication over the public network
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The status of the IPv6 address. Valid values:`Pending` or `Available`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VPC to which the IPv6 address belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of the vSwitch to which the IPv6 address belongs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetIpv6AddressesAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesAddress)(nil)).Elem()
}

func (i GetIpv6AddressesAddressArgs) ToGetIpv6AddressesAddressOutput() GetIpv6AddressesAddressOutput {
	return i.ToGetIpv6AddressesAddressOutputWithContext(context.Background())
}

func (i GetIpv6AddressesAddressArgs) ToGetIpv6AddressesAddressOutputWithContext(ctx context.Context) GetIpv6AddressesAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressesAddressOutput)
}

// GetIpv6AddressesAddressArrayInput is an input type that accepts GetIpv6AddressesAddressArray and GetIpv6AddressesAddressArrayOutput values.
// You can construct a concrete instance of `GetIpv6AddressesAddressArrayInput` via:
//
//	GetIpv6AddressesAddressArray{ GetIpv6AddressesAddressArgs{...} }
type GetIpv6AddressesAddressArrayInput interface {
	pulumi.Input

	ToGetIpv6AddressesAddressArrayOutput() GetIpv6AddressesAddressArrayOutput
	ToGetIpv6AddressesAddressArrayOutputWithContext(context.Context) GetIpv6AddressesAddressArrayOutput
}

type GetIpv6AddressesAddressArray []GetIpv6AddressesAddressInput

func (GetIpv6AddressesAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressesAddress)(nil)).Elem()
}

func (i GetIpv6AddressesAddressArray) ToGetIpv6AddressesAddressArrayOutput() GetIpv6AddressesAddressArrayOutput {
	return i.ToGetIpv6AddressesAddressArrayOutputWithContext(context.Background())
}

func (i GetIpv6AddressesAddressArray) ToGetIpv6AddressesAddressArrayOutputWithContext(ctx context.Context) GetIpv6AddressesAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressesAddressArrayOutput)
}

type GetIpv6AddressesAddressOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesAddress)(nil)).Elem()
}

func (o GetIpv6AddressesAddressOutput) ToGetIpv6AddressesAddressOutput() GetIpv6AddressesAddressOutput {
	return o
}

func (o GetIpv6AddressesAddressOutput) ToGetIpv6AddressesAddressOutputWithContext(ctx context.Context) GetIpv6AddressesAddressOutput {
	return o
}

// The ID of the instance that is assigned the IPv6 address.
func (o GetIpv6AddressesAddressOutput) AssociatedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.AssociatedInstanceId }).(pulumi.StringOutput)
}

// The type of the instance that is assigned the IPv6 address.
func (o GetIpv6AddressesAddressOutput) AssociatedInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.AssociatedInstanceType }).(pulumi.StringOutput)
}

// The time when the IPv6 address was created.
func (o GetIpv6AddressesAddressOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Ipv6 Address.
func (o GetIpv6AddressesAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Id }).(pulumi.StringOutput)
}

// The address of the Ipv6 Address.
func (o GetIpv6AddressesAddressOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The ID of the IPv6 address.
func (o GetIpv6AddressesAddressOutput) Ipv6AddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Ipv6AddressId }).(pulumi.StringOutput)
}

// The name of the IPv6 address.
func (o GetIpv6AddressesAddressOutput) Ipv6AddressName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Ipv6AddressName }).(pulumi.StringOutput)
}

// The ID of the IPv6 gateway to which the IPv6 address belongs.
func (o GetIpv6AddressesAddressOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The type of communication supported by the IPv6 address. Valid values:`Private` or `Public`. `Private`: communication within the private network. `Public`: communication over the public network
func (o GetIpv6AddressesAddressOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The status of the IPv6 address. Valid values:`Pending` or `Available`.
func (o GetIpv6AddressesAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC to which the IPv6 address belongs.
func (o GetIpv6AddressesAddressOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of the vSwitch to which the IPv6 address belongs.
func (o GetIpv6AddressesAddressOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesAddress) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetIpv6AddressesAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressesAddress)(nil)).Elem()
}

func (o GetIpv6AddressesAddressArrayOutput) ToGetIpv6AddressesAddressArrayOutput() GetIpv6AddressesAddressArrayOutput {
	return o
}

func (o GetIpv6AddressesAddressArrayOutput) ToGetIpv6AddressesAddressArrayOutputWithContext(ctx context.Context) GetIpv6AddressesAddressArrayOutput {
	return o
}

func (o GetIpv6AddressesAddressArrayOutput) Index(i pulumi.IntInput) GetIpv6AddressesAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6AddressesAddress {
		return vs[0].([]GetIpv6AddressesAddress)[vs[1].(int)]
	}).(GetIpv6AddressesAddressOutput)
}

type GetIpv6EgressRulesRule struct {
	// The description of the egress-only rule.
	Description string `pulumi:"description"`
	// The ID of the Ipv6 Egress Rule. The value formats as `<ipv6_gateway_id>:<ipv6_egress_rule_id>`.
	Id string `pulumi:"id"`
	// The ID of the instance to which the egress-only rule is applied.
	InstanceId string `pulumi:"instanceId"`
	// The type of the instance to which the egress-only rule is applied.
	InstanceType string `pulumi:"instanceType"`
	// The first ID of the resource.
	Ipv6EgressRuleId string `pulumi:"ipv6EgressRuleId"`
	// The name of the resource.
	Ipv6EgressRuleName string `pulumi:"ipv6EgressRuleName"`
	// The ID of the IPv6 gateway.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The status of the resource. Valid values: `Available`, `Pending` and `Deleting`.
	Status string `pulumi:"status"`
}

// GetIpv6EgressRulesRuleInput is an input type that accepts GetIpv6EgressRulesRuleArgs and GetIpv6EgressRulesRuleOutput values.
// You can construct a concrete instance of `GetIpv6EgressRulesRuleInput` via:
//
//	GetIpv6EgressRulesRuleArgs{...}
type GetIpv6EgressRulesRuleInput interface {
	pulumi.Input

	ToGetIpv6EgressRulesRuleOutput() GetIpv6EgressRulesRuleOutput
	ToGetIpv6EgressRulesRuleOutputWithContext(context.Context) GetIpv6EgressRulesRuleOutput
}

type GetIpv6EgressRulesRuleArgs struct {
	// The description of the egress-only rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Ipv6 Egress Rule. The value formats as `<ipv6_gateway_id>:<ipv6_egress_rule_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance to which the egress-only rule is applied.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the instance to which the egress-only rule is applied.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The first ID of the resource.
	Ipv6EgressRuleId pulumi.StringInput `pulumi:"ipv6EgressRuleId"`
	// The name of the resource.
	Ipv6EgressRuleName pulumi.StringInput `pulumi:"ipv6EgressRuleName"`
	// The ID of the IPv6 gateway.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The status of the resource. Valid values: `Available`, `Pending` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIpv6EgressRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6EgressRulesRule)(nil)).Elem()
}

func (i GetIpv6EgressRulesRuleArgs) ToGetIpv6EgressRulesRuleOutput() GetIpv6EgressRulesRuleOutput {
	return i.ToGetIpv6EgressRulesRuleOutputWithContext(context.Background())
}

func (i GetIpv6EgressRulesRuleArgs) ToGetIpv6EgressRulesRuleOutputWithContext(ctx context.Context) GetIpv6EgressRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6EgressRulesRuleOutput)
}

// GetIpv6EgressRulesRuleArrayInput is an input type that accepts GetIpv6EgressRulesRuleArray and GetIpv6EgressRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetIpv6EgressRulesRuleArrayInput` via:
//
//	GetIpv6EgressRulesRuleArray{ GetIpv6EgressRulesRuleArgs{...} }
type GetIpv6EgressRulesRuleArrayInput interface {
	pulumi.Input

	ToGetIpv6EgressRulesRuleArrayOutput() GetIpv6EgressRulesRuleArrayOutput
	ToGetIpv6EgressRulesRuleArrayOutputWithContext(context.Context) GetIpv6EgressRulesRuleArrayOutput
}

type GetIpv6EgressRulesRuleArray []GetIpv6EgressRulesRuleInput

func (GetIpv6EgressRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6EgressRulesRule)(nil)).Elem()
}

func (i GetIpv6EgressRulesRuleArray) ToGetIpv6EgressRulesRuleArrayOutput() GetIpv6EgressRulesRuleArrayOutput {
	return i.ToGetIpv6EgressRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetIpv6EgressRulesRuleArray) ToGetIpv6EgressRulesRuleArrayOutputWithContext(ctx context.Context) GetIpv6EgressRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6EgressRulesRuleArrayOutput)
}

type GetIpv6EgressRulesRuleOutput struct{ *pulumi.OutputState }

func (GetIpv6EgressRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6EgressRulesRule)(nil)).Elem()
}

func (o GetIpv6EgressRulesRuleOutput) ToGetIpv6EgressRulesRuleOutput() GetIpv6EgressRulesRuleOutput {
	return o
}

func (o GetIpv6EgressRulesRuleOutput) ToGetIpv6EgressRulesRuleOutputWithContext(ctx context.Context) GetIpv6EgressRulesRuleOutput {
	return o
}

// The description of the egress-only rule.
func (o GetIpv6EgressRulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Ipv6 Egress Rule. The value formats as `<ipv6_gateway_id>:<ipv6_egress_rule_id>`.
func (o GetIpv6EgressRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance to which the egress-only rule is applied.
func (o GetIpv6EgressRulesRuleOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the instance to which the egress-only rule is applied.
func (o GetIpv6EgressRulesRuleOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetIpv6EgressRulesRuleOutput) Ipv6EgressRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Ipv6EgressRuleId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetIpv6EgressRulesRuleOutput) Ipv6EgressRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Ipv6EgressRuleName }).(pulumi.StringOutput)
}

// The ID of the IPv6 gateway.
func (o GetIpv6EgressRulesRuleOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `Available`, `Pending` and `Deleting`.
func (o GetIpv6EgressRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6EgressRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

type GetIpv6EgressRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6EgressRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6EgressRulesRule)(nil)).Elem()
}

func (o GetIpv6EgressRulesRuleArrayOutput) ToGetIpv6EgressRulesRuleArrayOutput() GetIpv6EgressRulesRuleArrayOutput {
	return o
}

func (o GetIpv6EgressRulesRuleArrayOutput) ToGetIpv6EgressRulesRuleArrayOutputWithContext(ctx context.Context) GetIpv6EgressRulesRuleArrayOutput {
	return o
}

func (o GetIpv6EgressRulesRuleArrayOutput) Index(i pulumi.IntInput) GetIpv6EgressRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6EgressRulesRule {
		return vs[0].([]GetIpv6EgressRulesRule)[vs[1].(int)]
	}).(GetIpv6EgressRulesRuleOutput)
}

type GetIpv6GatewaysGateway struct {
	// The status of the IPv6 gateway. Valid values:`Normal`, `FinancialLocked` and `SecurityLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments. `SecurityLocked`: locked due to security reasons.
	BusinessStatus string `pulumi:"businessStatus"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The description of the IPv6 gateway.
	Description string `pulumi:"description"`
	// The time when the IPv6 gateway expires.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Ipv6 Gateway.
	Id string `pulumi:"id"`
	// The metering method of the IPv6 gateway. Valid values: `PayAsYouGo`.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The first ID of the resource.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The name of the IPv6 gateway.
	Ipv6GatewayName string `pulumi:"ipv6GatewayName"`
	// The specification of the IPv6 gateway. Valid values: `Large`, `Medium` and `Small`. `Small` (default): Free Edition. `Medium`: Enterprise Edition . `Large`: Enhanced Enterprise Edition. The throughput capacity of an IPv6 gateway varies based on the edition. For more information, see [Editions of IPv6 gateways](https://www.alibabacloud.com/help/doc-detail/98926.htm).
	Spec string `pulumi:"spec"`
	// The status of the IPv6 gateway. Valid values: `Available`, `Deleting`, `Pending`.
	Status string `pulumi:"status"`
	// The ID of the virtual private cloud (VPC) to which the IPv6 gateway belongs.
	VpcId string `pulumi:"vpcId"`
}

// GetIpv6GatewaysGatewayInput is an input type that accepts GetIpv6GatewaysGatewayArgs and GetIpv6GatewaysGatewayOutput values.
// You can construct a concrete instance of `GetIpv6GatewaysGatewayInput` via:
//
//	GetIpv6GatewaysGatewayArgs{...}
type GetIpv6GatewaysGatewayInput interface {
	pulumi.Input

	ToGetIpv6GatewaysGatewayOutput() GetIpv6GatewaysGatewayOutput
	ToGetIpv6GatewaysGatewayOutputWithContext(context.Context) GetIpv6GatewaysGatewayOutput
}

type GetIpv6GatewaysGatewayArgs struct {
	// The status of the IPv6 gateway. Valid values:`Normal`, `FinancialLocked` and `SecurityLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments. `SecurityLocked`: locked due to security reasons.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the IPv6 gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// The time when the IPv6 gateway expires.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Ipv6 Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The metering method of the IPv6 gateway. Valid values: `PayAsYouGo`.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The first ID of the resource.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The name of the IPv6 gateway.
	Ipv6GatewayName pulumi.StringInput `pulumi:"ipv6GatewayName"`
	// The specification of the IPv6 gateway. Valid values: `Large`, `Medium` and `Small`. `Small` (default): Free Edition. `Medium`: Enterprise Edition . `Large`: Enhanced Enterprise Edition. The throughput capacity of an IPv6 gateway varies based on the edition. For more information, see [Editions of IPv6 gateways](https://www.alibabacloud.com/help/doc-detail/98926.htm).
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the IPv6 gateway. Valid values: `Available`, `Deleting`, `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the virtual private cloud (VPC) to which the IPv6 gateway belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetIpv6GatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6GatewaysGateway)(nil)).Elem()
}

func (i GetIpv6GatewaysGatewayArgs) ToGetIpv6GatewaysGatewayOutput() GetIpv6GatewaysGatewayOutput {
	return i.ToGetIpv6GatewaysGatewayOutputWithContext(context.Background())
}

func (i GetIpv6GatewaysGatewayArgs) ToGetIpv6GatewaysGatewayOutputWithContext(ctx context.Context) GetIpv6GatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6GatewaysGatewayOutput)
}

// GetIpv6GatewaysGatewayArrayInput is an input type that accepts GetIpv6GatewaysGatewayArray and GetIpv6GatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetIpv6GatewaysGatewayArrayInput` via:
//
//	GetIpv6GatewaysGatewayArray{ GetIpv6GatewaysGatewayArgs{...} }
type GetIpv6GatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetIpv6GatewaysGatewayArrayOutput() GetIpv6GatewaysGatewayArrayOutput
	ToGetIpv6GatewaysGatewayArrayOutputWithContext(context.Context) GetIpv6GatewaysGatewayArrayOutput
}

type GetIpv6GatewaysGatewayArray []GetIpv6GatewaysGatewayInput

func (GetIpv6GatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6GatewaysGateway)(nil)).Elem()
}

func (i GetIpv6GatewaysGatewayArray) ToGetIpv6GatewaysGatewayArrayOutput() GetIpv6GatewaysGatewayArrayOutput {
	return i.ToGetIpv6GatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetIpv6GatewaysGatewayArray) ToGetIpv6GatewaysGatewayArrayOutputWithContext(ctx context.Context) GetIpv6GatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6GatewaysGatewayArrayOutput)
}

type GetIpv6GatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetIpv6GatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6GatewaysGateway)(nil)).Elem()
}

func (o GetIpv6GatewaysGatewayOutput) ToGetIpv6GatewaysGatewayOutput() GetIpv6GatewaysGatewayOutput {
	return o
}

func (o GetIpv6GatewaysGatewayOutput) ToGetIpv6GatewaysGatewayOutputWithContext(ctx context.Context) GetIpv6GatewaysGatewayOutput {
	return o
}

// The status of the IPv6 gateway. Valid values:`Normal`, `FinancialLocked` and `SecurityLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments. `SecurityLocked`: locked due to security reasons.
func (o GetIpv6GatewaysGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o GetIpv6GatewaysGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the IPv6 gateway.
func (o GetIpv6GatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// The time when the IPv6 gateway expires.
func (o GetIpv6GatewaysGatewayOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Ipv6 Gateway.
func (o GetIpv6GatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The metering method of the IPv6 gateway. Valid values: `PayAsYouGo`.
func (o GetIpv6GatewaysGatewayOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetIpv6GatewaysGatewayOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The name of the IPv6 gateway.
func (o GetIpv6GatewaysGatewayOutput) Ipv6GatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Ipv6GatewayName }).(pulumi.StringOutput)
}

// The specification of the IPv6 gateway. Valid values: `Large`, `Medium` and `Small`. `Small` (default): Free Edition. `Medium`: Enterprise Edition . `Large`: Enhanced Enterprise Edition. The throughput capacity of an IPv6 gateway varies based on the edition. For more information, see [Editions of IPv6 gateways](https://www.alibabacloud.com/help/doc-detail/98926.htm).
func (o GetIpv6GatewaysGatewayOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the IPv6 gateway. Valid values: `Available`, `Deleting`, `Pending`.
func (o GetIpv6GatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the virtual private cloud (VPC) to which the IPv6 gateway belongs.
func (o GetIpv6GatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetIpv6GatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6GatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6GatewaysGateway)(nil)).Elem()
}

func (o GetIpv6GatewaysGatewayArrayOutput) ToGetIpv6GatewaysGatewayArrayOutput() GetIpv6GatewaysGatewayArrayOutput {
	return o
}

func (o GetIpv6GatewaysGatewayArrayOutput) ToGetIpv6GatewaysGatewayArrayOutputWithContext(ctx context.Context) GetIpv6GatewaysGatewayArrayOutput {
	return o
}

func (o GetIpv6GatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetIpv6GatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6GatewaysGateway {
		return vs[0].([]GetIpv6GatewaysGateway)[vs[1].(int)]
	}).(GetIpv6GatewaysGatewayOutput)
}

type GetIpv6InternetBandwidthsBandwidth struct {
	// The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the Ipv6 Internet Bandwidth.
	Id string `pulumi:"id"`
	// The metering method of the Internet bandwidth resources of the IPv6 gateway.
	InternetChargeType string `pulumi:"internetChargeType"`
	// The ID of the IPv6 address.
	Ipv6AddressId string `pulumi:"ipv6AddressId"`
	// The ID of the IPv6 gateway.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The ID of the Ipv6 Internet Bandwidth.
	Ipv6InternetBandwidthId string `pulumi:"ipv6InternetBandwidthId"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// The status of the resource. Valid values: `Normal`, `FinancialLocked` and `SecurityLocked`.
	Status string `pulumi:"status"`
}

// GetIpv6InternetBandwidthsBandwidthInput is an input type that accepts GetIpv6InternetBandwidthsBandwidthArgs and GetIpv6InternetBandwidthsBandwidthOutput values.
// You can construct a concrete instance of `GetIpv6InternetBandwidthsBandwidthInput` via:
//
//	GetIpv6InternetBandwidthsBandwidthArgs{...}
type GetIpv6InternetBandwidthsBandwidthInput interface {
	pulumi.Input

	ToGetIpv6InternetBandwidthsBandwidthOutput() GetIpv6InternetBandwidthsBandwidthOutput
	ToGetIpv6InternetBandwidthsBandwidthOutputWithContext(context.Context) GetIpv6InternetBandwidthsBandwidthOutput
}

type GetIpv6InternetBandwidthsBandwidthArgs struct {
	// The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the Ipv6 Internet Bandwidth.
	Id pulumi.StringInput `pulumi:"id"`
	// The metering method of the Internet bandwidth resources of the IPv6 gateway.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// The ID of the IPv6 address.
	Ipv6AddressId pulumi.StringInput `pulumi:"ipv6AddressId"`
	// The ID of the IPv6 gateway.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The ID of the Ipv6 Internet Bandwidth.
	Ipv6InternetBandwidthId pulumi.StringInput `pulumi:"ipv6InternetBandwidthId"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The status of the resource. Valid values: `Normal`, `FinancialLocked` and `SecurityLocked`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIpv6InternetBandwidthsBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6InternetBandwidthsBandwidth)(nil)).Elem()
}

func (i GetIpv6InternetBandwidthsBandwidthArgs) ToGetIpv6InternetBandwidthsBandwidthOutput() GetIpv6InternetBandwidthsBandwidthOutput {
	return i.ToGetIpv6InternetBandwidthsBandwidthOutputWithContext(context.Background())
}

func (i GetIpv6InternetBandwidthsBandwidthArgs) ToGetIpv6InternetBandwidthsBandwidthOutputWithContext(ctx context.Context) GetIpv6InternetBandwidthsBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6InternetBandwidthsBandwidthOutput)
}

// GetIpv6InternetBandwidthsBandwidthArrayInput is an input type that accepts GetIpv6InternetBandwidthsBandwidthArray and GetIpv6InternetBandwidthsBandwidthArrayOutput values.
// You can construct a concrete instance of `GetIpv6InternetBandwidthsBandwidthArrayInput` via:
//
//	GetIpv6InternetBandwidthsBandwidthArray{ GetIpv6InternetBandwidthsBandwidthArgs{...} }
type GetIpv6InternetBandwidthsBandwidthArrayInput interface {
	pulumi.Input

	ToGetIpv6InternetBandwidthsBandwidthArrayOutput() GetIpv6InternetBandwidthsBandwidthArrayOutput
	ToGetIpv6InternetBandwidthsBandwidthArrayOutputWithContext(context.Context) GetIpv6InternetBandwidthsBandwidthArrayOutput
}

type GetIpv6InternetBandwidthsBandwidthArray []GetIpv6InternetBandwidthsBandwidthInput

func (GetIpv6InternetBandwidthsBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6InternetBandwidthsBandwidth)(nil)).Elem()
}

func (i GetIpv6InternetBandwidthsBandwidthArray) ToGetIpv6InternetBandwidthsBandwidthArrayOutput() GetIpv6InternetBandwidthsBandwidthArrayOutput {
	return i.ToGetIpv6InternetBandwidthsBandwidthArrayOutputWithContext(context.Background())
}

func (i GetIpv6InternetBandwidthsBandwidthArray) ToGetIpv6InternetBandwidthsBandwidthArrayOutputWithContext(ctx context.Context) GetIpv6InternetBandwidthsBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6InternetBandwidthsBandwidthArrayOutput)
}

type GetIpv6InternetBandwidthsBandwidthOutput struct{ *pulumi.OutputState }

func (GetIpv6InternetBandwidthsBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6InternetBandwidthsBandwidth)(nil)).Elem()
}

func (o GetIpv6InternetBandwidthsBandwidthOutput) ToGetIpv6InternetBandwidthsBandwidthOutput() GetIpv6InternetBandwidthsBandwidthOutput {
	return o
}

func (o GetIpv6InternetBandwidthsBandwidthOutput) ToGetIpv6InternetBandwidthsBandwidthOutputWithContext(ctx context.Context) GetIpv6InternetBandwidthsBandwidthOutput {
	return o
}

// The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the Ipv6 Internet Bandwidth.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.Id }).(pulumi.StringOutput)
}

// The metering method of the Internet bandwidth resources of the IPv6 gateway.
func (o GetIpv6InternetBandwidthsBandwidthOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The ID of the IPv6 address.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Ipv6AddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.Ipv6AddressId }).(pulumi.StringOutput)
}

// The ID of the IPv6 gateway.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The ID of the Ipv6 Internet Bandwidth.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Ipv6InternetBandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.Ipv6InternetBandwidthId }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetIpv6InternetBandwidthsBandwidthOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `Normal`, `FinancialLocked` and `SecurityLocked`.
func (o GetIpv6InternetBandwidthsBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6InternetBandwidthsBandwidth) string { return v.Status }).(pulumi.StringOutput)
}

type GetIpv6InternetBandwidthsBandwidthArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6InternetBandwidthsBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6InternetBandwidthsBandwidth)(nil)).Elem()
}

func (o GetIpv6InternetBandwidthsBandwidthArrayOutput) ToGetIpv6InternetBandwidthsBandwidthArrayOutput() GetIpv6InternetBandwidthsBandwidthArrayOutput {
	return o
}

func (o GetIpv6InternetBandwidthsBandwidthArrayOutput) ToGetIpv6InternetBandwidthsBandwidthArrayOutputWithContext(ctx context.Context) GetIpv6InternetBandwidthsBandwidthArrayOutput {
	return o
}

func (o GetIpv6InternetBandwidthsBandwidthArrayOutput) Index(i pulumi.IntInput) GetIpv6InternetBandwidthsBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6InternetBandwidthsBandwidth {
		return vs[0].([]GetIpv6InternetBandwidthsBandwidth)[vs[1].(int)]
	}).(GetIpv6InternetBandwidthsBandwidthOutput)
}

type GetNatGatewaysGateway struct {
	// The state of the NAT gateway.
	BusinessStatus string `pulumi:"businessStatus"`
	// Indicates whether deletion protection is enabled.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The description of the NAT gateway.
	Description string `pulumi:"description"`
	// Indicates whether the traffic monitoring feature is enabled.
	EcsMetricEnabled bool `pulumi:"ecsMetricEnabled"`
	// The time when the NAT gateway expires.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the DNAT table.
	ForwardTableIds []string `pulumi:"forwardTableIds"`
	// The ID of the NAT gateway.
	Id string `pulumi:"id"`
	// The metering method of the NAT gateway.
	InternetChargeType string `pulumi:"internetChargeType"`
	// The ip address of the bind eip.
	IpLists []string `pulumi:"ipLists"`
	// Name of the NAT gateway.
	Name string `pulumi:"name"`
	// The ID of the NAT gateway.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The name of NAT gateway.
	NatGatewayName string `pulumi:"natGatewayName"`
	// The nat type of NAT gateway. Valid values `Enhanced` and `Normal`.
	NatType string `pulumi:"natType"`
	// (Available in 1.137.0+) Indicates the type of the created NAT gateway. Valid values `internet` and `intranet`.
	NetworkType string `pulumi:"networkType"`
	// The payment type of NAT gateway. Valid values `PayAsYouGo` and `Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// The resource group id of NAT gateway.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The ID of the SNAT table that is associated with the NAT gateway.
	SnatTableIds []string `pulumi:"snatTableIds"`
	// The specification of the NAT gateway.
	Spec string `pulumi:"spec"`
	// The specification of NAT gateway. Valid values `Middle`, `Large`, `Small` and `XLarge.1`. Default value is `Small`.
	Specification string `pulumi:"specification"`
	// The status of NAT gateway. Valid values `Available`, `Converting`, `Creating`, `Deleting` and `Modifying`.
	Status string `pulumi:"status"`
	// The tags of NAT gateway.
	Tags map[string]interface{} `pulumi:"tags"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The ID of the vSwitch to which the NAT gateway belongs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetNatGatewaysGatewayInput is an input type that accepts GetNatGatewaysGatewayArgs and GetNatGatewaysGatewayOutput values.
// You can construct a concrete instance of `GetNatGatewaysGatewayInput` via:
//
//	GetNatGatewaysGatewayArgs{...}
type GetNatGatewaysGatewayInput interface {
	pulumi.Input

	ToGetNatGatewaysGatewayOutput() GetNatGatewaysGatewayOutput
	ToGetNatGatewaysGatewayOutputWithContext(context.Context) GetNatGatewaysGatewayOutput
}

type GetNatGatewaysGatewayArgs struct {
	// The state of the NAT gateway.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// Indicates whether deletion protection is enabled.
	DeletionProtection pulumi.BoolInput `pulumi:"deletionProtection"`
	// The description of the NAT gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates whether the traffic monitoring feature is enabled.
	EcsMetricEnabled pulumi.BoolInput `pulumi:"ecsMetricEnabled"`
	// The time when the NAT gateway expires.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the DNAT table.
	ForwardTableIds pulumi.StringArrayInput `pulumi:"forwardTableIds"`
	// The ID of the NAT gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The metering method of the NAT gateway.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// The ip address of the bind eip.
	IpLists pulumi.StringArrayInput `pulumi:"ipLists"`
	// Name of the NAT gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the NAT gateway.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The name of NAT gateway.
	NatGatewayName pulumi.StringInput `pulumi:"natGatewayName"`
	// The nat type of NAT gateway. Valid values `Enhanced` and `Normal`.
	NatType pulumi.StringInput `pulumi:"natType"`
	// (Available in 1.137.0+) Indicates the type of the created NAT gateway. Valid values `internet` and `intranet`.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The payment type of NAT gateway. Valid values `PayAsYouGo` and `Subscription`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The resource group id of NAT gateway.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The ID of the SNAT table that is associated with the NAT gateway.
	SnatTableIds pulumi.StringArrayInput `pulumi:"snatTableIds"`
	// The specification of the NAT gateway.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The specification of NAT gateway. Valid values `Middle`, `Large`, `Small` and `XLarge.1`. Default value is `Small`.
	Specification pulumi.StringInput `pulumi:"specification"`
	// The status of NAT gateway. Valid values `Available`, `Converting`, `Creating`, `Deleting` and `Modifying`.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags of NAT gateway.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of the vSwitch to which the NAT gateway belongs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetNatGatewaysGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewaysGateway)(nil)).Elem()
}

func (i GetNatGatewaysGatewayArgs) ToGetNatGatewaysGatewayOutput() GetNatGatewaysGatewayOutput {
	return i.ToGetNatGatewaysGatewayOutputWithContext(context.Background())
}

func (i GetNatGatewaysGatewayArgs) ToGetNatGatewaysGatewayOutputWithContext(ctx context.Context) GetNatGatewaysGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewaysGatewayOutput)
}

// GetNatGatewaysGatewayArrayInput is an input type that accepts GetNatGatewaysGatewayArray and GetNatGatewaysGatewayArrayOutput values.
// You can construct a concrete instance of `GetNatGatewaysGatewayArrayInput` via:
//
//	GetNatGatewaysGatewayArray{ GetNatGatewaysGatewayArgs{...} }
type GetNatGatewaysGatewayArrayInput interface {
	pulumi.Input

	ToGetNatGatewaysGatewayArrayOutput() GetNatGatewaysGatewayArrayOutput
	ToGetNatGatewaysGatewayArrayOutputWithContext(context.Context) GetNatGatewaysGatewayArrayOutput
}

type GetNatGatewaysGatewayArray []GetNatGatewaysGatewayInput

func (GetNatGatewaysGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewaysGateway)(nil)).Elem()
}

func (i GetNatGatewaysGatewayArray) ToGetNatGatewaysGatewayArrayOutput() GetNatGatewaysGatewayArrayOutput {
	return i.ToGetNatGatewaysGatewayArrayOutputWithContext(context.Background())
}

func (i GetNatGatewaysGatewayArray) ToGetNatGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetNatGatewaysGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewaysGatewayArrayOutput)
}

type GetNatGatewaysGatewayOutput struct{ *pulumi.OutputState }

func (GetNatGatewaysGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewaysGateway)(nil)).Elem()
}

func (o GetNatGatewaysGatewayOutput) ToGetNatGatewaysGatewayOutput() GetNatGatewaysGatewayOutput {
	return o
}

func (o GetNatGatewaysGatewayOutput) ToGetNatGatewaysGatewayOutputWithContext(ctx context.Context) GetNatGatewaysGatewayOutput {
	return o
}

// The state of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// Indicates whether deletion protection is enabled.
func (o GetNatGatewaysGatewayOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The description of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the traffic monitoring feature is enabled.
func (o GetNatGatewaysGatewayOutput) EcsMetricEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) bool { return v.EcsMetricEnabled }).(pulumi.BoolOutput)
}

// The time when the NAT gateway expires.
func (o GetNatGatewaysGatewayOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the DNAT table.
func (o GetNatGatewaysGatewayOutput) ForwardTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) []string { return v.ForwardTableIds }).(pulumi.StringArrayOutput)
}

// The ID of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The metering method of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The ip address of the bind eip.
func (o GetNatGatewaysGatewayOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

// Name of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The name of NAT gateway.
func (o GetNatGatewaysGatewayOutput) NatGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.NatGatewayName }).(pulumi.StringOutput)
}

// The nat type of NAT gateway. Valid values `Enhanced` and `Normal`.
func (o GetNatGatewaysGatewayOutput) NatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.NatType }).(pulumi.StringOutput)
}

// (Available in 1.137.0+) Indicates the type of the created NAT gateway. Valid values `internet` and `intranet`.
func (o GetNatGatewaysGatewayOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The payment type of NAT gateway. Valid values `PayAsYouGo` and `Subscription`.
func (o GetNatGatewaysGatewayOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The resource group id of NAT gateway.
func (o GetNatGatewaysGatewayOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of the SNAT table that is associated with the NAT gateway.
func (o GetNatGatewaysGatewayOutput) SnatTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) []string { return v.SnatTableIds }).(pulumi.StringArrayOutput)
}

// The specification of the NAT gateway.
func (o GetNatGatewaysGatewayOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Spec }).(pulumi.StringOutput)
}

// The specification of NAT gateway. Valid values `Middle`, `Large`, `Small` and `XLarge.1`. Default value is `Small`.
func (o GetNatGatewaysGatewayOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Specification }).(pulumi.StringOutput)
}

// The status of NAT gateway. Valid values `Available`, `Converting`, `Creating`, `Deleting` and `Modifying`.
func (o GetNatGatewaysGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The tags of NAT gateway.
func (o GetNatGatewaysGatewayOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The ID of the VPC.
func (o GetNatGatewaysGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of the vSwitch to which the NAT gateway belongs.
func (o GetNatGatewaysGatewayOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewaysGateway) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetNatGatewaysGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetNatGatewaysGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewaysGateway)(nil)).Elem()
}

func (o GetNatGatewaysGatewayArrayOutput) ToGetNatGatewaysGatewayArrayOutput() GetNatGatewaysGatewayArrayOutput {
	return o
}

func (o GetNatGatewaysGatewayArrayOutput) ToGetNatGatewaysGatewayArrayOutputWithContext(ctx context.Context) GetNatGatewaysGatewayArrayOutput {
	return o
}

func (o GetNatGatewaysGatewayArrayOutput) Index(i pulumi.IntInput) GetNatGatewaysGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatGatewaysGateway {
		return vs[0].([]GetNatGatewaysGateway)[vs[1].(int)]
	}).(GetNatGatewaysGatewayOutput)
}

type GetNatIpCidrsCidr struct {
	// The time when the CIDR block was created.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Nat Ip Cidr.
	Id string `pulumi:"id"`
	// Whether it is the default NAT IP ADDRESS. Valid values:`true` or `false`.`true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
	IsDefault bool `pulumi:"isDefault"`
	// The ID of the VPC NAT gateway.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
	NatIpCidr string `pulumi:"natIpCidr"`
	// NAT IP ADDRESS range to the description of. Length is from `2` to `256` characters, must start with a letter or the Chinese at the beginning, but not at the`  http:// ` Or `https://` at the beginning.
	NatIpCidrDescription string `pulumi:"natIpCidrDescription"`
	// NAT IP ADDRESS instance ID.
	NatIpCidrId string `pulumi:"natIpCidrId"`
	// NAT IP ADDRESS the name of the root directory. Length is from `2` to `128` characters, must start with a letter or the Chinese at the beginning can contain numbers, half a period (.), underscore (_) and dash (-). But do not start with `http://` or `https://` at the beginning.
	NatIpCidrName string `pulumi:"natIpCidrName"`
	// The status of the CIDR block of the NAT gateway. If the value is `Available`, the CIDR block is available.
	Status string `pulumi:"status"`
}

// GetNatIpCidrsCidrInput is an input type that accepts GetNatIpCidrsCidrArgs and GetNatIpCidrsCidrOutput values.
// You can construct a concrete instance of `GetNatIpCidrsCidrInput` via:
//
//	GetNatIpCidrsCidrArgs{...}
type GetNatIpCidrsCidrInput interface {
	pulumi.Input

	ToGetNatIpCidrsCidrOutput() GetNatIpCidrsCidrOutput
	ToGetNatIpCidrsCidrOutputWithContext(context.Context) GetNatIpCidrsCidrOutput
}

type GetNatIpCidrsCidrArgs struct {
	// The time when the CIDR block was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Nat Ip Cidr.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether it is the default NAT IP ADDRESS. Valid values:`true` or `false`.`true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The ID of the VPC NAT gateway.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
	NatIpCidr pulumi.StringInput `pulumi:"natIpCidr"`
	// NAT IP ADDRESS range to the description of. Length is from `2` to `256` characters, must start with a letter or the Chinese at the beginning, but not at the`  http:// ` Or `https://` at the beginning.
	NatIpCidrDescription pulumi.StringInput `pulumi:"natIpCidrDescription"`
	// NAT IP ADDRESS instance ID.
	NatIpCidrId pulumi.StringInput `pulumi:"natIpCidrId"`
	// NAT IP ADDRESS the name of the root directory. Length is from `2` to `128` characters, must start with a letter or the Chinese at the beginning can contain numbers, half a period (.), underscore (_) and dash (-). But do not start with `http://` or `https://` at the beginning.
	NatIpCidrName pulumi.StringInput `pulumi:"natIpCidrName"`
	// The status of the CIDR block of the NAT gateway. If the value is `Available`, the CIDR block is available.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNatIpCidrsCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatIpCidrsCidr)(nil)).Elem()
}

func (i GetNatIpCidrsCidrArgs) ToGetNatIpCidrsCidrOutput() GetNatIpCidrsCidrOutput {
	return i.ToGetNatIpCidrsCidrOutputWithContext(context.Background())
}

func (i GetNatIpCidrsCidrArgs) ToGetNatIpCidrsCidrOutputWithContext(ctx context.Context) GetNatIpCidrsCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatIpCidrsCidrOutput)
}

// GetNatIpCidrsCidrArrayInput is an input type that accepts GetNatIpCidrsCidrArray and GetNatIpCidrsCidrArrayOutput values.
// You can construct a concrete instance of `GetNatIpCidrsCidrArrayInput` via:
//
//	GetNatIpCidrsCidrArray{ GetNatIpCidrsCidrArgs{...} }
type GetNatIpCidrsCidrArrayInput interface {
	pulumi.Input

	ToGetNatIpCidrsCidrArrayOutput() GetNatIpCidrsCidrArrayOutput
	ToGetNatIpCidrsCidrArrayOutputWithContext(context.Context) GetNatIpCidrsCidrArrayOutput
}

type GetNatIpCidrsCidrArray []GetNatIpCidrsCidrInput

func (GetNatIpCidrsCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatIpCidrsCidr)(nil)).Elem()
}

func (i GetNatIpCidrsCidrArray) ToGetNatIpCidrsCidrArrayOutput() GetNatIpCidrsCidrArrayOutput {
	return i.ToGetNatIpCidrsCidrArrayOutputWithContext(context.Background())
}

func (i GetNatIpCidrsCidrArray) ToGetNatIpCidrsCidrArrayOutputWithContext(ctx context.Context) GetNatIpCidrsCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatIpCidrsCidrArrayOutput)
}

type GetNatIpCidrsCidrOutput struct{ *pulumi.OutputState }

func (GetNatIpCidrsCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatIpCidrsCidr)(nil)).Elem()
}

func (o GetNatIpCidrsCidrOutput) ToGetNatIpCidrsCidrOutput() GetNatIpCidrsCidrOutput {
	return o
}

func (o GetNatIpCidrsCidrOutput) ToGetNatIpCidrsCidrOutputWithContext(ctx context.Context) GetNatIpCidrsCidrOutput {
	return o
}

// The time when the CIDR block was created.
func (o GetNatIpCidrsCidrOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Nat Ip Cidr.
func (o GetNatIpCidrsCidrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.Id }).(pulumi.StringOutput)
}

// Whether it is the default NAT IP ADDRESS. Valid values:`true` or `false`.`true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
func (o GetNatIpCidrsCidrOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The ID of the VPC NAT gateway.
func (o GetNatIpCidrsCidrOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The NAT CIDR block to be created. The CIDR block must meet the following conditions: It must be `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`, or one of their subnets. The subnet mask must be `16` to `32` bits in lengths. To use a public CIDR block as the NAT CIDR block, the VPC to which the VPC NAT gateway belongs must be authorized to use public CIDR blocks. For more information, see [Create a VPC NAT gateway](https://www.alibabacloud.com/help/doc-detail/268230.htm).
func (o GetNatIpCidrsCidrOutput) NatIpCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.NatIpCidr }).(pulumi.StringOutput)
}

// NAT IP ADDRESS range to the description of. Length is from `2` to `256` characters, must start with a letter or the Chinese at the beginning, but not at the`  http:// ` Or `https://` at the beginning.
func (o GetNatIpCidrsCidrOutput) NatIpCidrDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.NatIpCidrDescription }).(pulumi.StringOutput)
}

// NAT IP ADDRESS instance ID.
func (o GetNatIpCidrsCidrOutput) NatIpCidrId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.NatIpCidrId }).(pulumi.StringOutput)
}

// NAT IP ADDRESS the name of the root directory. Length is from `2` to `128` characters, must start with a letter or the Chinese at the beginning can contain numbers, half a period (.), underscore (_) and dash (-). But do not start with `http://` or `https://` at the beginning.
func (o GetNatIpCidrsCidrOutput) NatIpCidrName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.NatIpCidrName }).(pulumi.StringOutput)
}

// The status of the CIDR block of the NAT gateway. If the value is `Available`, the CIDR block is available.
func (o GetNatIpCidrsCidrOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpCidrsCidr) string { return v.Status }).(pulumi.StringOutput)
}

type GetNatIpCidrsCidrArrayOutput struct{ *pulumi.OutputState }

func (GetNatIpCidrsCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatIpCidrsCidr)(nil)).Elem()
}

func (o GetNatIpCidrsCidrArrayOutput) ToGetNatIpCidrsCidrArrayOutput() GetNatIpCidrsCidrArrayOutput {
	return o
}

func (o GetNatIpCidrsCidrArrayOutput) ToGetNatIpCidrsCidrArrayOutputWithContext(ctx context.Context) GetNatIpCidrsCidrArrayOutput {
	return o
}

func (o GetNatIpCidrsCidrArrayOutput) Index(i pulumi.IntInput) GetNatIpCidrsCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatIpCidrsCidr {
		return vs[0].([]GetNatIpCidrsCidr)[vs[1].(int)]
	}).(GetNatIpCidrsCidrOutput)
}

type GetNatIpsIp struct {
	// The ID of the Nat Ip.
	Id string `pulumi:"id"`
	// Indicates whether the BGP Group is the default NAT IP ADDRESS. Valid values: `true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
	IsDefault bool `pulumi:"isDefault"`
	// The ID of the Virtual Private Cloud (VPC) NAT gateway to which the NAT IP address belongs.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The NAT IP address that is queried.
	NatIp string `pulumi:"natIp"`
	// The CIDR block to which the NAT IP address belongs.
	NatIpCidr string `pulumi:"natIpCidr"`
	// The description of the NAT IP address.
	NatIpDescription string `pulumi:"natIpDescription"`
	// The ID of the NAT IP address.
	NatIpId string `pulumi:"natIpId"`
	// The name of the NAT IP address.
	NatIpName string `pulumi:"natIpName"`
	// The status of the NAT IP address. Valid values: `Available`, `Deleting` and `Creating`.
	Status string `pulumi:"status"`
}

// GetNatIpsIpInput is an input type that accepts GetNatIpsIpArgs and GetNatIpsIpOutput values.
// You can construct a concrete instance of `GetNatIpsIpInput` via:
//
//	GetNatIpsIpArgs{...}
type GetNatIpsIpInput interface {
	pulumi.Input

	ToGetNatIpsIpOutput() GetNatIpsIpOutput
	ToGetNatIpsIpOutputWithContext(context.Context) GetNatIpsIpOutput
}

type GetNatIpsIpArgs struct {
	// The ID of the Nat Ip.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the BGP Group is the default NAT IP ADDRESS. Valid values: `true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The ID of the Virtual Private Cloud (VPC) NAT gateway to which the NAT IP address belongs.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The NAT IP address that is queried.
	NatIp pulumi.StringInput `pulumi:"natIp"`
	// The CIDR block to which the NAT IP address belongs.
	NatIpCidr pulumi.StringInput `pulumi:"natIpCidr"`
	// The description of the NAT IP address.
	NatIpDescription pulumi.StringInput `pulumi:"natIpDescription"`
	// The ID of the NAT IP address.
	NatIpId pulumi.StringInput `pulumi:"natIpId"`
	// The name of the NAT IP address.
	NatIpName pulumi.StringInput `pulumi:"natIpName"`
	// The status of the NAT IP address. Valid values: `Available`, `Deleting` and `Creating`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNatIpsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatIpsIp)(nil)).Elem()
}

func (i GetNatIpsIpArgs) ToGetNatIpsIpOutput() GetNatIpsIpOutput {
	return i.ToGetNatIpsIpOutputWithContext(context.Background())
}

func (i GetNatIpsIpArgs) ToGetNatIpsIpOutputWithContext(ctx context.Context) GetNatIpsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatIpsIpOutput)
}

// GetNatIpsIpArrayInput is an input type that accepts GetNatIpsIpArray and GetNatIpsIpArrayOutput values.
// You can construct a concrete instance of `GetNatIpsIpArrayInput` via:
//
//	GetNatIpsIpArray{ GetNatIpsIpArgs{...} }
type GetNatIpsIpArrayInput interface {
	pulumi.Input

	ToGetNatIpsIpArrayOutput() GetNatIpsIpArrayOutput
	ToGetNatIpsIpArrayOutputWithContext(context.Context) GetNatIpsIpArrayOutput
}

type GetNatIpsIpArray []GetNatIpsIpInput

func (GetNatIpsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatIpsIp)(nil)).Elem()
}

func (i GetNatIpsIpArray) ToGetNatIpsIpArrayOutput() GetNatIpsIpArrayOutput {
	return i.ToGetNatIpsIpArrayOutputWithContext(context.Background())
}

func (i GetNatIpsIpArray) ToGetNatIpsIpArrayOutputWithContext(ctx context.Context) GetNatIpsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatIpsIpArrayOutput)
}

type GetNatIpsIpOutput struct{ *pulumi.OutputState }

func (GetNatIpsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatIpsIp)(nil)).Elem()
}

func (o GetNatIpsIpOutput) ToGetNatIpsIpOutput() GetNatIpsIpOutput {
	return o
}

func (o GetNatIpsIpOutput) ToGetNatIpsIpOutputWithContext(ctx context.Context) GetNatIpsIpOutput {
	return o
}

// The ID of the Nat Ip.
func (o GetNatIpsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the BGP Group is the default NAT IP ADDRESS. Valid values: `true`: is the default NAT IP ADDRESS. `false`: it is not the default NAT IP ADDRESS.
func (o GetNatIpsIpOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNatIpsIp) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The ID of the Virtual Private Cloud (VPC) NAT gateway to which the NAT IP address belongs.
func (o GetNatIpsIpOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The NAT IP address that is queried.
func (o GetNatIpsIpOutput) NatIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatIp }).(pulumi.StringOutput)
}

// The CIDR block to which the NAT IP address belongs.
func (o GetNatIpsIpOutput) NatIpCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatIpCidr }).(pulumi.StringOutput)
}

// The description of the NAT IP address.
func (o GetNatIpsIpOutput) NatIpDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatIpDescription }).(pulumi.StringOutput)
}

// The ID of the NAT IP address.
func (o GetNatIpsIpOutput) NatIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatIpId }).(pulumi.StringOutput)
}

// The name of the NAT IP address.
func (o GetNatIpsIpOutput) NatIpName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.NatIpName }).(pulumi.StringOutput)
}

// The status of the NAT IP address. Valid values: `Available`, `Deleting` and `Creating`.
func (o GetNatIpsIpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatIpsIp) string { return v.Status }).(pulumi.StringOutput)
}

type GetNatIpsIpArrayOutput struct{ *pulumi.OutputState }

func (GetNatIpsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatIpsIp)(nil)).Elem()
}

func (o GetNatIpsIpArrayOutput) ToGetNatIpsIpArrayOutput() GetNatIpsIpArrayOutput {
	return o
}

func (o GetNatIpsIpArrayOutput) ToGetNatIpsIpArrayOutputWithContext(ctx context.Context) GetNatIpsIpArrayOutput {
	return o
}

func (o GetNatIpsIpArrayOutput) Index(i pulumi.IntInput) GetNatIpsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatIpsIp {
		return vs[0].([]GetNatIpsIp)[vs[1].(int)]
	}).(GetNatIpsIpOutput)
}

type GetNetworkAclsAcl struct {
	// Description of the entry direction rule.
	Description string `pulumi:"description"`
	// Output direction rule information.
	EgressAclEntries []GetNetworkAclsAclEgressAclEntry `pulumi:"egressAclEntries"`
	// The ID of the Network Acl.
	Id string `pulumi:"id"`
	// Entry direction rule information.
	IngressAclEntries []GetNetworkAclsAclIngressAclEntry `pulumi:"ingressAclEntries"`
	// The first ID of the resource.
	NetworkAclId string `pulumi:"networkAclId"`
	// The name of the network ACL.
	NetworkAclName string `pulumi:"networkAclName"`
	// The associated resource.
	Resources []GetNetworkAclsAclResource `pulumi:"resources"`
	// The state of the network ACL.
	Status string `pulumi:"status"`
	// The ID of the associated VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkAclsAclInput is an input type that accepts GetNetworkAclsAclArgs and GetNetworkAclsAclOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclInput` via:
//
//	GetNetworkAclsAclArgs{...}
type GetNetworkAclsAclInput interface {
	pulumi.Input

	ToGetNetworkAclsAclOutput() GetNetworkAclsAclOutput
	ToGetNetworkAclsAclOutputWithContext(context.Context) GetNetworkAclsAclOutput
}

type GetNetworkAclsAclArgs struct {
	// Description of the entry direction rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Output direction rule information.
	EgressAclEntries GetNetworkAclsAclEgressAclEntryArrayInput `pulumi:"egressAclEntries"`
	// The ID of the Network Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// Entry direction rule information.
	IngressAclEntries GetNetworkAclsAclIngressAclEntryArrayInput `pulumi:"ingressAclEntries"`
	// The first ID of the resource.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The name of the network ACL.
	NetworkAclName pulumi.StringInput `pulumi:"networkAclName"`
	// The associated resource.
	Resources GetNetworkAclsAclResourceArrayInput `pulumi:"resources"`
	// The state of the network ACL.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the associated VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAcl)(nil)).Elem()
}

func (i GetNetworkAclsAclArgs) ToGetNetworkAclsAclOutput() GetNetworkAclsAclOutput {
	return i.ToGetNetworkAclsAclOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclArgs) ToGetNetworkAclsAclOutputWithContext(ctx context.Context) GetNetworkAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclOutput)
}

// GetNetworkAclsAclArrayInput is an input type that accepts GetNetworkAclsAclArray and GetNetworkAclsAclArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclArrayInput` via:
//
//	GetNetworkAclsAclArray{ GetNetworkAclsAclArgs{...} }
type GetNetworkAclsAclArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsAclArrayOutput() GetNetworkAclsAclArrayOutput
	ToGetNetworkAclsAclArrayOutputWithContext(context.Context) GetNetworkAclsAclArrayOutput
}

type GetNetworkAclsAclArray []GetNetworkAclsAclInput

func (GetNetworkAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAcl)(nil)).Elem()
}

func (i GetNetworkAclsAclArray) ToGetNetworkAclsAclArrayOutput() GetNetworkAclsAclArrayOutput {
	return i.ToGetNetworkAclsAclArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclArray) ToGetNetworkAclsAclArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclArrayOutput)
}

type GetNetworkAclsAclOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAcl)(nil)).Elem()
}

func (o GetNetworkAclsAclOutput) ToGetNetworkAclsAclOutput() GetNetworkAclsAclOutput {
	return o
}

func (o GetNetworkAclsAclOutput) ToGetNetworkAclsAclOutputWithContext(ctx context.Context) GetNetworkAclsAclOutput {
	return o
}

// Description of the entry direction rule.
func (o GetNetworkAclsAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.Description }).(pulumi.StringOutput)
}

// Output direction rule information.
func (o GetNetworkAclsAclOutput) EgressAclEntries() GetNetworkAclsAclEgressAclEntryArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) []GetNetworkAclsAclEgressAclEntry { return v.EgressAclEntries }).(GetNetworkAclsAclEgressAclEntryArrayOutput)
}

// The ID of the Network Acl.
func (o GetNetworkAclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// Entry direction rule information.
func (o GetNetworkAclsAclOutput) IngressAclEntries() GetNetworkAclsAclIngressAclEntryArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) []GetNetworkAclsAclIngressAclEntry { return v.IngressAclEntries }).(GetNetworkAclsAclIngressAclEntryArrayOutput)
}

// The first ID of the resource.
func (o GetNetworkAclsAclOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The name of the network ACL.
func (o GetNetworkAclsAclOutput) NetworkAclName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.NetworkAclName }).(pulumi.StringOutput)
}

// The associated resource.
func (o GetNetworkAclsAclOutput) Resources() GetNetworkAclsAclResourceArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) []GetNetworkAclsAclResource { return v.Resources }).(GetNetworkAclsAclResourceArrayOutput)
}

// The state of the network ACL.
func (o GetNetworkAclsAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the associated VPC.
func (o GetNetworkAclsAclOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAcl) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAcl)(nil)).Elem()
}

func (o GetNetworkAclsAclArrayOutput) ToGetNetworkAclsAclArrayOutput() GetNetworkAclsAclArrayOutput {
	return o
}

func (o GetNetworkAclsAclArrayOutput) ToGetNetworkAclsAclArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclArrayOutput {
	return o
}

func (o GetNetworkAclsAclArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsAcl {
		return vs[0].([]GetNetworkAclsAcl)[vs[1].(int)]
	}).(GetNetworkAclsAclOutput)
}

type GetNetworkAclsAclEgressAclEntry struct {
	// Description of the entry direction rule.
	Description string `pulumi:"description"`
	// The destination address segment.
	DestinationCidrIp string `pulumi:"destinationCidrIp"`
	// The name of the entry direction rule entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The authorization policy.
	Policy string `pulumi:"policy"`
	// Source port range.
	Port string `pulumi:"port"`
	// Transport layer protocol.
	Protocol string `pulumi:"protocol"`
}

// GetNetworkAclsAclEgressAclEntryInput is an input type that accepts GetNetworkAclsAclEgressAclEntryArgs and GetNetworkAclsAclEgressAclEntryOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclEgressAclEntryInput` via:
//
//	GetNetworkAclsAclEgressAclEntryArgs{...}
type GetNetworkAclsAclEgressAclEntryInput interface {
	pulumi.Input

	ToGetNetworkAclsAclEgressAclEntryOutput() GetNetworkAclsAclEgressAclEntryOutput
	ToGetNetworkAclsAclEgressAclEntryOutputWithContext(context.Context) GetNetworkAclsAclEgressAclEntryOutput
}

type GetNetworkAclsAclEgressAclEntryArgs struct {
	// Description of the entry direction rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination address segment.
	DestinationCidrIp pulumi.StringInput `pulumi:"destinationCidrIp"`
	// The name of the entry direction rule entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The authorization policy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Source port range.
	Port pulumi.StringInput `pulumi:"port"`
	// Transport layer protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetNetworkAclsAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclEgressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsAclEgressAclEntryArgs) ToGetNetworkAclsAclEgressAclEntryOutput() GetNetworkAclsAclEgressAclEntryOutput {
	return i.ToGetNetworkAclsAclEgressAclEntryOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclEgressAclEntryArgs) ToGetNetworkAclsAclEgressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclEgressAclEntryOutput)
}

// GetNetworkAclsAclEgressAclEntryArrayInput is an input type that accepts GetNetworkAclsAclEgressAclEntryArray and GetNetworkAclsAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclEgressAclEntryArrayInput` via:
//
//	GetNetworkAclsAclEgressAclEntryArray{ GetNetworkAclsAclEgressAclEntryArgs{...} }
type GetNetworkAclsAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsAclEgressAclEntryArrayOutput() GetNetworkAclsAclEgressAclEntryArrayOutput
	ToGetNetworkAclsAclEgressAclEntryArrayOutputWithContext(context.Context) GetNetworkAclsAclEgressAclEntryArrayOutput
}

type GetNetworkAclsAclEgressAclEntryArray []GetNetworkAclsAclEgressAclEntryInput

func (GetNetworkAclsAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclEgressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsAclEgressAclEntryArray) ToGetNetworkAclsAclEgressAclEntryArrayOutput() GetNetworkAclsAclEgressAclEntryArrayOutput {
	return i.ToGetNetworkAclsAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclEgressAclEntryArray) ToGetNetworkAclsAclEgressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclEgressAclEntryArrayOutput)
}

type GetNetworkAclsAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclEgressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsAclEgressAclEntryOutput) ToGetNetworkAclsAclEgressAclEntryOutput() GetNetworkAclsAclEgressAclEntryOutput {
	return o
}

func (o GetNetworkAclsAclEgressAclEntryOutput) ToGetNetworkAclsAclEgressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsAclEgressAclEntryOutput {
	return o
}

// Description of the entry direction rule.
func (o GetNetworkAclsAclEgressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The destination address segment.
func (o GetNetworkAclsAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.DestinationCidrIp }).(pulumi.StringOutput)
}

// The name of the entry direction rule entry.
func (o GetNetworkAclsAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The authorization policy.
func (o GetNetworkAclsAclEgressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// Source port range.
func (o GetNetworkAclsAclEgressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// Transport layer protocol.
func (o GetNetworkAclsAclEgressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclEgressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetNetworkAclsAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclEgressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsAclEgressAclEntryArrayOutput) ToGetNetworkAclsAclEgressAclEntryArrayOutput() GetNetworkAclsAclEgressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsAclEgressAclEntryArrayOutput) ToGetNetworkAclsAclEgressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclEgressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsAclEgressAclEntry {
		return vs[0].([]GetNetworkAclsAclEgressAclEntry)[vs[1].(int)]
	}).(GetNetworkAclsAclEgressAclEntryOutput)
}

type GetNetworkAclsAclIngressAclEntry struct {
	// Description of the entry direction rule.
	Description string `pulumi:"description"`
	// The name of the entry direction rule entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The authorization policy.
	Policy string `pulumi:"policy"`
	// Source port range.
	Port string `pulumi:"port"`
	// Transport layer protocol.
	Protocol string `pulumi:"protocol"`
	// The source address field.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
}

// GetNetworkAclsAclIngressAclEntryInput is an input type that accepts GetNetworkAclsAclIngressAclEntryArgs and GetNetworkAclsAclIngressAclEntryOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclIngressAclEntryInput` via:
//
//	GetNetworkAclsAclIngressAclEntryArgs{...}
type GetNetworkAclsAclIngressAclEntryInput interface {
	pulumi.Input

	ToGetNetworkAclsAclIngressAclEntryOutput() GetNetworkAclsAclIngressAclEntryOutput
	ToGetNetworkAclsAclIngressAclEntryOutputWithContext(context.Context) GetNetworkAclsAclIngressAclEntryOutput
}

type GetNetworkAclsAclIngressAclEntryArgs struct {
	// Description of the entry direction rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the entry direction rule entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The authorization policy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Source port range.
	Port pulumi.StringInput `pulumi:"port"`
	// Transport layer protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source address field.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
}

func (GetNetworkAclsAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclIngressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsAclIngressAclEntryArgs) ToGetNetworkAclsAclIngressAclEntryOutput() GetNetworkAclsAclIngressAclEntryOutput {
	return i.ToGetNetworkAclsAclIngressAclEntryOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclIngressAclEntryArgs) ToGetNetworkAclsAclIngressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclIngressAclEntryOutput)
}

// GetNetworkAclsAclIngressAclEntryArrayInput is an input type that accepts GetNetworkAclsAclIngressAclEntryArray and GetNetworkAclsAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclIngressAclEntryArrayInput` via:
//
//	GetNetworkAclsAclIngressAclEntryArray{ GetNetworkAclsAclIngressAclEntryArgs{...} }
type GetNetworkAclsAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsAclIngressAclEntryArrayOutput() GetNetworkAclsAclIngressAclEntryArrayOutput
	ToGetNetworkAclsAclIngressAclEntryArrayOutputWithContext(context.Context) GetNetworkAclsAclIngressAclEntryArrayOutput
}

type GetNetworkAclsAclIngressAclEntryArray []GetNetworkAclsAclIngressAclEntryInput

func (GetNetworkAclsAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclIngressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsAclIngressAclEntryArray) ToGetNetworkAclsAclIngressAclEntryArrayOutput() GetNetworkAclsAclIngressAclEntryArrayOutput {
	return i.ToGetNetworkAclsAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclIngressAclEntryArray) ToGetNetworkAclsAclIngressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclIngressAclEntryArrayOutput)
}

type GetNetworkAclsAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclIngressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsAclIngressAclEntryOutput) ToGetNetworkAclsAclIngressAclEntryOutput() GetNetworkAclsAclIngressAclEntryOutput {
	return o
}

func (o GetNetworkAclsAclIngressAclEntryOutput) ToGetNetworkAclsAclIngressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsAclIngressAclEntryOutput {
	return o
}

// Description of the entry direction rule.
func (o GetNetworkAclsAclIngressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the entry direction rule entry.
func (o GetNetworkAclsAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The authorization policy.
func (o GetNetworkAclsAclIngressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// Source port range.
func (o GetNetworkAclsAclIngressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// Transport layer protocol.
func (o GetNetworkAclsAclIngressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source address field.
func (o GetNetworkAclsAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclIngressAclEntry) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

type GetNetworkAclsAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclIngressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsAclIngressAclEntryArrayOutput) ToGetNetworkAclsAclIngressAclEntryArrayOutput() GetNetworkAclsAclIngressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsAclIngressAclEntryArrayOutput) ToGetNetworkAclsAclIngressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclIngressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsAclIngressAclEntry {
		return vs[0].([]GetNetworkAclsAclIngressAclEntry)[vs[1].(int)]
	}).(GetNetworkAclsAclIngressAclEntryOutput)
}

type GetNetworkAclsAclResource struct {
	// The ID of the associated resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of the associated resource.
	ResourceType string `pulumi:"resourceType"`
	// The state of the network ACL.
	Status string `pulumi:"status"`
}

// GetNetworkAclsAclResourceInput is an input type that accepts GetNetworkAclsAclResourceArgs and GetNetworkAclsAclResourceOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclResourceInput` via:
//
//	GetNetworkAclsAclResourceArgs{...}
type GetNetworkAclsAclResourceInput interface {
	pulumi.Input

	ToGetNetworkAclsAclResourceOutput() GetNetworkAclsAclResourceOutput
	ToGetNetworkAclsAclResourceOutputWithContext(context.Context) GetNetworkAclsAclResourceOutput
}

type GetNetworkAclsAclResourceArgs struct {
	// The ID of the associated resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of the associated resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The state of the network ACL.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNetworkAclsAclResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclResource)(nil)).Elem()
}

func (i GetNetworkAclsAclResourceArgs) ToGetNetworkAclsAclResourceOutput() GetNetworkAclsAclResourceOutput {
	return i.ToGetNetworkAclsAclResourceOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclResourceArgs) ToGetNetworkAclsAclResourceOutputWithContext(ctx context.Context) GetNetworkAclsAclResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclResourceOutput)
}

// GetNetworkAclsAclResourceArrayInput is an input type that accepts GetNetworkAclsAclResourceArray and GetNetworkAclsAclResourceArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsAclResourceArrayInput` via:
//
//	GetNetworkAclsAclResourceArray{ GetNetworkAclsAclResourceArgs{...} }
type GetNetworkAclsAclResourceArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsAclResourceArrayOutput() GetNetworkAclsAclResourceArrayOutput
	ToGetNetworkAclsAclResourceArrayOutputWithContext(context.Context) GetNetworkAclsAclResourceArrayOutput
}

type GetNetworkAclsAclResourceArray []GetNetworkAclsAclResourceInput

func (GetNetworkAclsAclResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclResource)(nil)).Elem()
}

func (i GetNetworkAclsAclResourceArray) ToGetNetworkAclsAclResourceArrayOutput() GetNetworkAclsAclResourceArrayOutput {
	return i.ToGetNetworkAclsAclResourceArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsAclResourceArray) ToGetNetworkAclsAclResourceArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsAclResourceArrayOutput)
}

type GetNetworkAclsAclResourceOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsAclResource)(nil)).Elem()
}

func (o GetNetworkAclsAclResourceOutput) ToGetNetworkAclsAclResourceOutput() GetNetworkAclsAclResourceOutput {
	return o
}

func (o GetNetworkAclsAclResourceOutput) ToGetNetworkAclsAclResourceOutputWithContext(ctx context.Context) GetNetworkAclsAclResourceOutput {
	return o
}

// The ID of the associated resource.
func (o GetNetworkAclsAclResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of the associated resource.
func (o GetNetworkAclsAclResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The state of the network ACL.
func (o GetNetworkAclsAclResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsAclResource) string { return v.Status }).(pulumi.StringOutput)
}

type GetNetworkAclsAclResourceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsAclResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsAclResource)(nil)).Elem()
}

func (o GetNetworkAclsAclResourceArrayOutput) ToGetNetworkAclsAclResourceArrayOutput() GetNetworkAclsAclResourceArrayOutput {
	return o
}

func (o GetNetworkAclsAclResourceArrayOutput) ToGetNetworkAclsAclResourceArrayOutputWithContext(ctx context.Context) GetNetworkAclsAclResourceArrayOutput {
	return o
}

func (o GetNetworkAclsAclResourceArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsAclResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsAclResource {
		return vs[0].([]GetNetworkAclsAclResource)[vs[1].(int)]
	}).(GetNetworkAclsAclResourceOutput)
}

type GetNetworksVpc struct {
	// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
	CidrBlock string `pulumi:"cidrBlock"`
	// Time of creation.
	CreationTime string `pulumi:"creationTime"`
	// Description of the VPC
	Description string `pulumi:"description"`
	// ID of the VPC.
	Id string `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// Indicate whether the VPC is the default one in the specified region.
	IsDefault bool `pulumi:"isDefault"`
	// ID of the region where the VPC is located.
	RegionId string `pulumi:"regionId"`
	// The Id of resource group which VPC belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Route table ID of the VRouter.
	RouteTableId string `pulumi:"routeTableId"`
	// The ID of the VRouter.
	RouterId string `pulumi:"routerId"`
	// A list of secondary IPv4 CIDR blocks of the VPC.
	SecondaryCidrBlocks []string `pulumi:"secondaryCidrBlocks"`
	// Filter results by a specific status. Valid value are `Pending` and `Available`.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// A list of user CIDRs.
	UserCidrs []string `pulumi:"userCidrs"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The name of the VPC.
	VpcName string `pulumi:"vpcName"`
	// ID of the VRouter.
	VrouterId string `pulumi:"vrouterId"`
	// List of VSwitch IDs in the specified VPC
	VswitchIds []string `pulumi:"vswitchIds"`
}

// GetNetworksVpcInput is an input type that accepts GetNetworksVpcArgs and GetNetworksVpcOutput values.
// You can construct a concrete instance of `GetNetworksVpcInput` via:
//
//	GetNetworksVpcArgs{...}
type GetNetworksVpcInput interface {
	pulumi.Input

	ToGetNetworksVpcOutput() GetNetworksVpcOutput
	ToGetNetworksVpcOutputWithContext(context.Context) GetNetworksVpcOutput
}

type GetNetworksVpcArgs struct {
	// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Time of creation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the VPC
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the VPC.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// Indicate whether the VPC is the default one in the specified region.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// ID of the region where the VPC is located.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The Id of resource group which VPC belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Route table ID of the VRouter.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The ID of the VRouter.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// A list of secondary IPv4 CIDR blocks of the VPC.
	SecondaryCidrBlocks pulumi.StringArrayInput `pulumi:"secondaryCidrBlocks"`
	// Filter results by a specific status. Valid value are `Pending` and `Available`.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A list of user CIDRs.
	UserCidrs pulumi.StringArrayInput `pulumi:"userCidrs"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the VPC.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// ID of the VRouter.
	VrouterId pulumi.StringInput `pulumi:"vrouterId"`
	// List of VSwitch IDs in the specified VPC
	VswitchIds pulumi.StringArrayInput `pulumi:"vswitchIds"`
}

func (GetNetworksVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksVpc)(nil)).Elem()
}

func (i GetNetworksVpcArgs) ToGetNetworksVpcOutput() GetNetworksVpcOutput {
	return i.ToGetNetworksVpcOutputWithContext(context.Background())
}

func (i GetNetworksVpcArgs) ToGetNetworksVpcOutputWithContext(ctx context.Context) GetNetworksVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksVpcOutput)
}

// GetNetworksVpcArrayInput is an input type that accepts GetNetworksVpcArray and GetNetworksVpcArrayOutput values.
// You can construct a concrete instance of `GetNetworksVpcArrayInput` via:
//
//	GetNetworksVpcArray{ GetNetworksVpcArgs{...} }
type GetNetworksVpcArrayInput interface {
	pulumi.Input

	ToGetNetworksVpcArrayOutput() GetNetworksVpcArrayOutput
	ToGetNetworksVpcArrayOutputWithContext(context.Context) GetNetworksVpcArrayOutput
}

type GetNetworksVpcArray []GetNetworksVpcInput

func (GetNetworksVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksVpc)(nil)).Elem()
}

func (i GetNetworksVpcArray) ToGetNetworksVpcArrayOutput() GetNetworksVpcArrayOutput {
	return i.ToGetNetworksVpcArrayOutputWithContext(context.Background())
}

func (i GetNetworksVpcArray) ToGetNetworksVpcArrayOutputWithContext(ctx context.Context) GetNetworksVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksVpcArrayOutput)
}

type GetNetworksVpcOutput struct{ *pulumi.OutputState }

func (GetNetworksVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksVpc)(nil)).Elem()
}

func (o GetNetworksVpcOutput) ToGetNetworksVpcOutput() GetNetworksVpcOutput {
	return o
}

func (o GetNetworksVpcOutput) ToGetNetworksVpcOutputWithContext(ctx context.Context) GetNetworksVpcOutput {
	return o
}

// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
func (o GetNetworksVpcOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Time of creation.
func (o GetNetworksVpcOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the VPC
func (o GetNetworksVpcOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the VPC.
func (o GetNetworksVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the VPC.
func (o GetNetworksVpcOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// Indicate whether the VPC is the default one in the specified region.
func (o GetNetworksVpcOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworksVpc) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// ID of the region where the VPC is located.
func (o GetNetworksVpcOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.RegionId }).(pulumi.StringOutput)
}

// The Id of resource group which VPC belongs.
func (o GetNetworksVpcOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Route table ID of the VRouter.
func (o GetNetworksVpcOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The ID of the VRouter.
func (o GetNetworksVpcOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.RouterId }).(pulumi.StringOutput)
}

// A list of secondary IPv4 CIDR blocks of the VPC.
func (o GetNetworksVpcOutput) SecondaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksVpc) []string { return v.SecondaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// Filter results by a specific status. Valid value are `Pending` and `Available`.
func (o GetNetworksVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetNetworksVpcOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetNetworksVpc) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// A list of user CIDRs.
func (o GetNetworksVpcOutput) UserCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksVpc) []string { return v.UserCidrs }).(pulumi.StringArrayOutput)
}

// ID of the VPC.
func (o GetNetworksVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the VPC.
func (o GetNetworksVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

// ID of the VRouter.
func (o GetNetworksVpcOutput) VrouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksVpc) string { return v.VrouterId }).(pulumi.StringOutput)
}

// List of VSwitch IDs in the specified VPC
func (o GetNetworksVpcOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksVpc) []string { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

type GetNetworksVpcArrayOutput struct{ *pulumi.OutputState }

func (GetNetworksVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksVpc)(nil)).Elem()
}

func (o GetNetworksVpcArrayOutput) ToGetNetworksVpcArrayOutput() GetNetworksVpcArrayOutput {
	return o
}

func (o GetNetworksVpcArrayOutput) ToGetNetworksVpcArrayOutputWithContext(ctx context.Context) GetNetworksVpcArrayOutput {
	return o
}

func (o GetNetworksVpcArrayOutput) Index(i pulumi.IntInput) GetNetworksVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworksVpc {
		return vs[0].([]GetNetworksVpc)[vs[1].(int)]
	}).(GetNetworksVpcOutput)
}

type GetPbrRouteEntriesEntry struct {
	// The creation time of the VPN Pbr Route Entry.
	CreateTime string `pulumi:"createTime"`
	// The id of the vpn pbr route entry. The value formats as `<vpn_gateway_id>:<next_hop>:<route_source>:<route_dest>`.
	Id string `pulumi:"id"`
	// The next hop of the policy-based route.
	NextHop string `pulumi:"nextHop"`
	// The destination CIDR block of the policy-based route.
	RouteDest string `pulumi:"routeDest"`
	// The source CIDR block of the policy-based route.
	RouteSource string `pulumi:"routeSource"`
	// The status of the VPN Pbr Route Entry.
	Status string `pulumi:"status"`
	// The ID of the VPN gateway.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
	// The weight of the policy-based route. Valid values: 0 and 100.
	Weight int `pulumi:"weight"`
}

// GetPbrRouteEntriesEntryInput is an input type that accepts GetPbrRouteEntriesEntryArgs and GetPbrRouteEntriesEntryOutput values.
// You can construct a concrete instance of `GetPbrRouteEntriesEntryInput` via:
//
//	GetPbrRouteEntriesEntryArgs{...}
type GetPbrRouteEntriesEntryInput interface {
	pulumi.Input

	ToGetPbrRouteEntriesEntryOutput() GetPbrRouteEntriesEntryOutput
	ToGetPbrRouteEntriesEntryOutputWithContext(context.Context) GetPbrRouteEntriesEntryOutput
}

type GetPbrRouteEntriesEntryArgs struct {
	// The creation time of the VPN Pbr Route Entry.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The id of the vpn pbr route entry. The value formats as `<vpn_gateway_id>:<next_hop>:<route_source>:<route_dest>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The next hop of the policy-based route.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The destination CIDR block of the policy-based route.
	RouteDest pulumi.StringInput `pulumi:"routeDest"`
	// The source CIDR block of the policy-based route.
	RouteSource pulumi.StringInput `pulumi:"routeSource"`
	// The status of the VPN Pbr Route Entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VPN gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
	// The weight of the policy-based route. Valid values: 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetPbrRouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPbrRouteEntriesEntry)(nil)).Elem()
}

func (i GetPbrRouteEntriesEntryArgs) ToGetPbrRouteEntriesEntryOutput() GetPbrRouteEntriesEntryOutput {
	return i.ToGetPbrRouteEntriesEntryOutputWithContext(context.Background())
}

func (i GetPbrRouteEntriesEntryArgs) ToGetPbrRouteEntriesEntryOutputWithContext(ctx context.Context) GetPbrRouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPbrRouteEntriesEntryOutput)
}

// GetPbrRouteEntriesEntryArrayInput is an input type that accepts GetPbrRouteEntriesEntryArray and GetPbrRouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetPbrRouteEntriesEntryArrayInput` via:
//
//	GetPbrRouteEntriesEntryArray{ GetPbrRouteEntriesEntryArgs{...} }
type GetPbrRouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetPbrRouteEntriesEntryArrayOutput() GetPbrRouteEntriesEntryArrayOutput
	ToGetPbrRouteEntriesEntryArrayOutputWithContext(context.Context) GetPbrRouteEntriesEntryArrayOutput
}

type GetPbrRouteEntriesEntryArray []GetPbrRouteEntriesEntryInput

func (GetPbrRouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPbrRouteEntriesEntry)(nil)).Elem()
}

func (i GetPbrRouteEntriesEntryArray) ToGetPbrRouteEntriesEntryArrayOutput() GetPbrRouteEntriesEntryArrayOutput {
	return i.ToGetPbrRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetPbrRouteEntriesEntryArray) ToGetPbrRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetPbrRouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPbrRouteEntriesEntryArrayOutput)
}

type GetPbrRouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetPbrRouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPbrRouteEntriesEntry)(nil)).Elem()
}

func (o GetPbrRouteEntriesEntryOutput) ToGetPbrRouteEntriesEntryOutput() GetPbrRouteEntriesEntryOutput {
	return o
}

func (o GetPbrRouteEntriesEntryOutput) ToGetPbrRouteEntriesEntryOutputWithContext(ctx context.Context) GetPbrRouteEntriesEntryOutput {
	return o
}

// The creation time of the VPN Pbr Route Entry.
func (o GetPbrRouteEntriesEntryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The id of the vpn pbr route entry. The value formats as `<vpn_gateway_id>:<next_hop>:<route_source>:<route_dest>`.
func (o GetPbrRouteEntriesEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.Id }).(pulumi.StringOutput)
}

// The next hop of the policy-based route.
func (o GetPbrRouteEntriesEntryOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.NextHop }).(pulumi.StringOutput)
}

// The destination CIDR block of the policy-based route.
func (o GetPbrRouteEntriesEntryOutput) RouteDest() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.RouteDest }).(pulumi.StringOutput)
}

// The source CIDR block of the policy-based route.
func (o GetPbrRouteEntriesEntryOutput) RouteSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.RouteSource }).(pulumi.StringOutput)
}

// The status of the VPN Pbr Route Entry.
func (o GetPbrRouteEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPN gateway.
func (o GetPbrRouteEntriesEntryOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

// The weight of the policy-based route. Valid values: 0 and 100.
func (o GetPbrRouteEntriesEntryOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetPbrRouteEntriesEntry) int { return v.Weight }).(pulumi.IntOutput)
}

type GetPbrRouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetPbrRouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPbrRouteEntriesEntry)(nil)).Elem()
}

func (o GetPbrRouteEntriesEntryArrayOutput) ToGetPbrRouteEntriesEntryArrayOutput() GetPbrRouteEntriesEntryArrayOutput {
	return o
}

func (o GetPbrRouteEntriesEntryArrayOutput) ToGetPbrRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetPbrRouteEntriesEntryArrayOutput {
	return o
}

func (o GetPbrRouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetPbrRouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPbrRouteEntriesEntry {
		return vs[0].([]GetPbrRouteEntriesEntry)[vs[1].(int)]
	}).(GetPbrRouteEntriesEntryOutput)
}

type GetPeerConnectionsConnection struct {
	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.
	AcceptingAliUid int `pulumi:"acceptingAliUid"`
	// The region ID of the recipient of the VPC peering connection to be created.
	AcceptingRegionId string `pulumi:"acceptingRegionId"`
	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVpcId string `pulumi:"acceptingVpcId"`
	// The bandwidth of the VPC peering connection to be modified. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The description of the VPC peer connection to be created.
	Description string `pulumi:"description"`
	// The ID of the PeerConnection.
	Id string `pulumi:"id"`
	// The first ID of the resource.
	PeerConnectionId string `pulumi:"peerConnectionId"`
	// The name of the resource.
	PeerConnectionName string `pulumi:"peerConnectionName"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The ID of the requester VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetPeerConnectionsConnectionInput is an input type that accepts GetPeerConnectionsConnectionArgs and GetPeerConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetPeerConnectionsConnectionInput` via:
//
//	GetPeerConnectionsConnectionArgs{...}
type GetPeerConnectionsConnectionInput interface {
	pulumi.Input

	ToGetPeerConnectionsConnectionOutput() GetPeerConnectionsConnectionOutput
	ToGetPeerConnectionsConnectionOutputWithContext(context.Context) GetPeerConnectionsConnectionOutput
}

type GetPeerConnectionsConnectionArgs struct {
	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.
	AcceptingAliUid pulumi.IntInput `pulumi:"acceptingAliUid"`
	// The region ID of the recipient of the VPC peering connection to be created.
	AcceptingRegionId pulumi.StringInput `pulumi:"acceptingRegionId"`
	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVpcId pulumi.StringInput `pulumi:"acceptingVpcId"`
	// The bandwidth of the VPC peering connection to be modified. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the VPC peer connection to be created.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the PeerConnection.
	Id pulumi.StringInput `pulumi:"id"`
	// The first ID of the resource.
	PeerConnectionId pulumi.StringInput `pulumi:"peerConnectionId"`
	// The name of the resource.
	PeerConnectionName pulumi.StringInput `pulumi:"peerConnectionName"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the requester VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetPeerConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerConnectionsConnection)(nil)).Elem()
}

func (i GetPeerConnectionsConnectionArgs) ToGetPeerConnectionsConnectionOutput() GetPeerConnectionsConnectionOutput {
	return i.ToGetPeerConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetPeerConnectionsConnectionArgs) ToGetPeerConnectionsConnectionOutputWithContext(ctx context.Context) GetPeerConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeerConnectionsConnectionOutput)
}

// GetPeerConnectionsConnectionArrayInput is an input type that accepts GetPeerConnectionsConnectionArray and GetPeerConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetPeerConnectionsConnectionArrayInput` via:
//
//	GetPeerConnectionsConnectionArray{ GetPeerConnectionsConnectionArgs{...} }
type GetPeerConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetPeerConnectionsConnectionArrayOutput() GetPeerConnectionsConnectionArrayOutput
	ToGetPeerConnectionsConnectionArrayOutputWithContext(context.Context) GetPeerConnectionsConnectionArrayOutput
}

type GetPeerConnectionsConnectionArray []GetPeerConnectionsConnectionInput

func (GetPeerConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeerConnectionsConnection)(nil)).Elem()
}

func (i GetPeerConnectionsConnectionArray) ToGetPeerConnectionsConnectionArrayOutput() GetPeerConnectionsConnectionArrayOutput {
	return i.ToGetPeerConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetPeerConnectionsConnectionArray) ToGetPeerConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetPeerConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeerConnectionsConnectionArrayOutput)
}

type GetPeerConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetPeerConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerConnectionsConnection)(nil)).Elem()
}

func (o GetPeerConnectionsConnectionOutput) ToGetPeerConnectionsConnectionOutput() GetPeerConnectionsConnectionOutput {
	return o
}

func (o GetPeerConnectionsConnectionOutput) ToGetPeerConnectionsConnectionOutputWithContext(ctx context.Context) GetPeerConnectionsConnectionOutput {
	return o
}

// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.
func (o GetPeerConnectionsConnectionOutput) AcceptingAliUid() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) int { return v.AcceptingAliUid }).(pulumi.IntOutput)
}

// The region ID of the recipient of the VPC peering connection to be created.
func (o GetPeerConnectionsConnectionOutput) AcceptingRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.AcceptingRegionId }).(pulumi.StringOutput)
}

// The VPC ID of the receiving end of the VPC peer connection.
func (o GetPeerConnectionsConnectionOutput) AcceptingVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.AcceptingVpcId }).(pulumi.StringOutput)
}

// The bandwidth of the VPC peering connection to be modified. Unit: Mbps.
func (o GetPeerConnectionsConnectionOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The creation time of the resource.
func (o GetPeerConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the VPC peer connection to be created.
func (o GetPeerConnectionsConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the PeerConnection.
func (o GetPeerConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetPeerConnectionsConnectionOutput) PeerConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.PeerConnectionId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetPeerConnectionsConnectionOutput) PeerConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.PeerConnectionName }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetPeerConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the requester VPC.
func (o GetPeerConnectionsConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerConnectionsConnection) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetPeerConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetPeerConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeerConnectionsConnection)(nil)).Elem()
}

func (o GetPeerConnectionsConnectionArrayOutput) ToGetPeerConnectionsConnectionArrayOutput() GetPeerConnectionsConnectionArrayOutput {
	return o
}

func (o GetPeerConnectionsConnectionArrayOutput) ToGetPeerConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetPeerConnectionsConnectionArrayOutput {
	return o
}

func (o GetPeerConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetPeerConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeerConnectionsConnection {
		return vs[0].([]GetPeerConnectionsConnection)[vs[1].(int)]
	}).(GetPeerConnectionsConnectionOutput)
}

type GetPrefixListsList struct {
	// The time when the prefix list was created.
	CreateTime string `pulumi:"createTime"`
	// The CIDR address block list of the prefix list.
	Entrys []GetPrefixListsListEntry `pulumi:"entrys"`
	// The ID of the Prefix List.
	Id string `pulumi:"id"`
	// The IP version of the prefix list.
	IpVersion string `pulumi:"ipVersion"`
	// The maximum number of entries for CIDR address blocks in the prefix list.
	MaxEntries int `pulumi:"maxEntries"`
	// The description of the prefix list.
	PrefixListDescription string `pulumi:"prefixListDescription"`
	// The ID of the query Prefix List.
	PrefixListId string `pulumi:"prefixListId"`
	// The name of the prefix list.
	PrefixListName string `pulumi:"prefixListName"`
	// The share type of the prefix list.
	ShareType string `pulumi:"shareType"`
}

// GetPrefixListsListInput is an input type that accepts GetPrefixListsListArgs and GetPrefixListsListOutput values.
// You can construct a concrete instance of `GetPrefixListsListInput` via:
//
//	GetPrefixListsListArgs{...}
type GetPrefixListsListInput interface {
	pulumi.Input

	ToGetPrefixListsListOutput() GetPrefixListsListOutput
	ToGetPrefixListsListOutputWithContext(context.Context) GetPrefixListsListOutput
}

type GetPrefixListsListArgs struct {
	// The time when the prefix list was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The CIDR address block list of the prefix list.
	Entrys GetPrefixListsListEntryArrayInput `pulumi:"entrys"`
	// The ID of the Prefix List.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP version of the prefix list.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The maximum number of entries for CIDR address blocks in the prefix list.
	MaxEntries pulumi.IntInput `pulumi:"maxEntries"`
	// The description of the prefix list.
	PrefixListDescription pulumi.StringInput `pulumi:"prefixListDescription"`
	// The ID of the query Prefix List.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// The name of the prefix list.
	PrefixListName pulumi.StringInput `pulumi:"prefixListName"`
	// The share type of the prefix list.
	ShareType pulumi.StringInput `pulumi:"shareType"`
}

func (GetPrefixListsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsList)(nil)).Elem()
}

func (i GetPrefixListsListArgs) ToGetPrefixListsListOutput() GetPrefixListsListOutput {
	return i.ToGetPrefixListsListOutputWithContext(context.Background())
}

func (i GetPrefixListsListArgs) ToGetPrefixListsListOutputWithContext(ctx context.Context) GetPrefixListsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsListOutput)
}

// GetPrefixListsListArrayInput is an input type that accepts GetPrefixListsListArray and GetPrefixListsListArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsListArrayInput` via:
//
//	GetPrefixListsListArray{ GetPrefixListsListArgs{...} }
type GetPrefixListsListArrayInput interface {
	pulumi.Input

	ToGetPrefixListsListArrayOutput() GetPrefixListsListArrayOutput
	ToGetPrefixListsListArrayOutputWithContext(context.Context) GetPrefixListsListArrayOutput
}

type GetPrefixListsListArray []GetPrefixListsListInput

func (GetPrefixListsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsList)(nil)).Elem()
}

func (i GetPrefixListsListArray) ToGetPrefixListsListArrayOutput() GetPrefixListsListArrayOutput {
	return i.ToGetPrefixListsListArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsListArray) ToGetPrefixListsListArrayOutputWithContext(ctx context.Context) GetPrefixListsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsListArrayOutput)
}

type GetPrefixListsListOutput struct{ *pulumi.OutputState }

func (GetPrefixListsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsList)(nil)).Elem()
}

func (o GetPrefixListsListOutput) ToGetPrefixListsListOutput() GetPrefixListsListOutput {
	return o
}

func (o GetPrefixListsListOutput) ToGetPrefixListsListOutputWithContext(ctx context.Context) GetPrefixListsListOutput {
	return o
}

// The time when the prefix list was created.
func (o GetPrefixListsListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The CIDR address block list of the prefix list.
func (o GetPrefixListsListOutput) Entrys() GetPrefixListsListEntryArrayOutput {
	return o.ApplyT(func(v GetPrefixListsList) []GetPrefixListsListEntry { return v.Entrys }).(GetPrefixListsListEntryArrayOutput)
}

// The ID of the Prefix List.
func (o GetPrefixListsListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.Id }).(pulumi.StringOutput)
}

// The IP version of the prefix list.
func (o GetPrefixListsListOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The maximum number of entries for CIDR address blocks in the prefix list.
func (o GetPrefixListsListOutput) MaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixListsList) int { return v.MaxEntries }).(pulumi.IntOutput)
}

// The description of the prefix list.
func (o GetPrefixListsListOutput) PrefixListDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.PrefixListDescription }).(pulumi.StringOutput)
}

// The ID of the query Prefix List.
func (o GetPrefixListsListOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// The name of the prefix list.
func (o GetPrefixListsListOutput) PrefixListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.PrefixListName }).(pulumi.StringOutput)
}

// The share type of the prefix list.
func (o GetPrefixListsListOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsList) string { return v.ShareType }).(pulumi.StringOutput)
}

type GetPrefixListsListArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsList)(nil)).Elem()
}

func (o GetPrefixListsListArrayOutput) ToGetPrefixListsListArrayOutput() GetPrefixListsListArrayOutput {
	return o
}

func (o GetPrefixListsListArrayOutput) ToGetPrefixListsListArrayOutputWithContext(ctx context.Context) GetPrefixListsListArrayOutput {
	return o
}

func (o GetPrefixListsListArrayOutput) Index(i pulumi.IntInput) GetPrefixListsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsList {
		return vs[0].([]GetPrefixListsList)[vs[1].(int)]
	}).(GetPrefixListsListOutput)
}

type GetPrefixListsListEntry struct {
	// The CIDR address block of the prefix list.
	Cidr string `pulumi:"cidr"`
	// The description of the cidr entry.
	Description string `pulumi:"description"`
}

// GetPrefixListsListEntryInput is an input type that accepts GetPrefixListsListEntryArgs and GetPrefixListsListEntryOutput values.
// You can construct a concrete instance of `GetPrefixListsListEntryInput` via:
//
//	GetPrefixListsListEntryArgs{...}
type GetPrefixListsListEntryInput interface {
	pulumi.Input

	ToGetPrefixListsListEntryOutput() GetPrefixListsListEntryOutput
	ToGetPrefixListsListEntryOutputWithContext(context.Context) GetPrefixListsListEntryOutput
}

type GetPrefixListsListEntryArgs struct {
	// The CIDR address block of the prefix list.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The description of the cidr entry.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetPrefixListsListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsListEntry)(nil)).Elem()
}

func (i GetPrefixListsListEntryArgs) ToGetPrefixListsListEntryOutput() GetPrefixListsListEntryOutput {
	return i.ToGetPrefixListsListEntryOutputWithContext(context.Background())
}

func (i GetPrefixListsListEntryArgs) ToGetPrefixListsListEntryOutputWithContext(ctx context.Context) GetPrefixListsListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsListEntryOutput)
}

// GetPrefixListsListEntryArrayInput is an input type that accepts GetPrefixListsListEntryArray and GetPrefixListsListEntryArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsListEntryArrayInput` via:
//
//	GetPrefixListsListEntryArray{ GetPrefixListsListEntryArgs{...} }
type GetPrefixListsListEntryArrayInput interface {
	pulumi.Input

	ToGetPrefixListsListEntryArrayOutput() GetPrefixListsListEntryArrayOutput
	ToGetPrefixListsListEntryArrayOutputWithContext(context.Context) GetPrefixListsListEntryArrayOutput
}

type GetPrefixListsListEntryArray []GetPrefixListsListEntryInput

func (GetPrefixListsListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsListEntry)(nil)).Elem()
}

func (i GetPrefixListsListEntryArray) ToGetPrefixListsListEntryArrayOutput() GetPrefixListsListEntryArrayOutput {
	return i.ToGetPrefixListsListEntryArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsListEntryArray) ToGetPrefixListsListEntryArrayOutputWithContext(ctx context.Context) GetPrefixListsListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsListEntryArrayOutput)
}

type GetPrefixListsListEntryOutput struct{ *pulumi.OutputState }

func (GetPrefixListsListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsListEntry)(nil)).Elem()
}

func (o GetPrefixListsListEntryOutput) ToGetPrefixListsListEntryOutput() GetPrefixListsListEntryOutput {
	return o
}

func (o GetPrefixListsListEntryOutput) ToGetPrefixListsListEntryOutputWithContext(ctx context.Context) GetPrefixListsListEntryOutput {
	return o
}

// The CIDR address block of the prefix list.
func (o GetPrefixListsListEntryOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsListEntry) string { return v.Cidr }).(pulumi.StringOutput)
}

// The description of the cidr entry.
func (o GetPrefixListsListEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsListEntry) string { return v.Description }).(pulumi.StringOutput)
}

type GetPrefixListsListEntryArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsListEntry)(nil)).Elem()
}

func (o GetPrefixListsListEntryArrayOutput) ToGetPrefixListsListEntryArrayOutput() GetPrefixListsListEntryArrayOutput {
	return o
}

func (o GetPrefixListsListEntryArrayOutput) ToGetPrefixListsListEntryArrayOutputWithContext(ctx context.Context) GetPrefixListsListEntryArrayOutput {
	return o
}

func (o GetPrefixListsListEntryArrayOutput) Index(i pulumi.IntInput) GetPrefixListsListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsListEntry {
		return vs[0].([]GetPrefixListsListEntry)[vs[1].(int)]
	}).(GetPrefixListsListEntryOutput)
}

type GetPublicIpAddressPoolCidrBlocksBlock struct {
	// The CIDR block.
	CidrBlock string `pulumi:"cidrBlock"`
	// The time when the CIDR block was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Public Ip Address Pool Cidr Block.
	Id string `pulumi:"id"`
	// The ID of the Vpc Public IP address pool.
	PublicIpAddressPoolId string `pulumi:"publicIpAddressPoolId"`
	// The status of the CIDR block in the Vpc Public IP address pool. Valid values: `Created`, `Modifying`, `Deleting`.
	Status string `pulumi:"status"`
	// The number of occupied IP addresses in the CIDR block.
	TotalIpNum int `pulumi:"totalIpNum"`
	// The total number of available IP addresses in the CIDR block.
	UsedIpNum int `pulumi:"usedIpNum"`
}

// GetPublicIpAddressPoolCidrBlocksBlockInput is an input type that accepts GetPublicIpAddressPoolCidrBlocksBlockArgs and GetPublicIpAddressPoolCidrBlocksBlockOutput values.
// You can construct a concrete instance of `GetPublicIpAddressPoolCidrBlocksBlockInput` via:
//
//	GetPublicIpAddressPoolCidrBlocksBlockArgs{...}
type GetPublicIpAddressPoolCidrBlocksBlockInput interface {
	pulumi.Input

	ToGetPublicIpAddressPoolCidrBlocksBlockOutput() GetPublicIpAddressPoolCidrBlocksBlockOutput
	ToGetPublicIpAddressPoolCidrBlocksBlockOutputWithContext(context.Context) GetPublicIpAddressPoolCidrBlocksBlockOutput
}

type GetPublicIpAddressPoolCidrBlocksBlockArgs struct {
	// The CIDR block.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The time when the CIDR block was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Public Ip Address Pool Cidr Block.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Vpc Public IP address pool.
	PublicIpAddressPoolId pulumi.StringInput `pulumi:"publicIpAddressPoolId"`
	// The status of the CIDR block in the Vpc Public IP address pool. Valid values: `Created`, `Modifying`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The number of occupied IP addresses in the CIDR block.
	TotalIpNum pulumi.IntInput `pulumi:"totalIpNum"`
	// The total number of available IP addresses in the CIDR block.
	UsedIpNum pulumi.IntInput `pulumi:"usedIpNum"`
}

func (GetPublicIpAddressPoolCidrBlocksBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpAddressPoolCidrBlocksBlock)(nil)).Elem()
}

func (i GetPublicIpAddressPoolCidrBlocksBlockArgs) ToGetPublicIpAddressPoolCidrBlocksBlockOutput() GetPublicIpAddressPoolCidrBlocksBlockOutput {
	return i.ToGetPublicIpAddressPoolCidrBlocksBlockOutputWithContext(context.Background())
}

func (i GetPublicIpAddressPoolCidrBlocksBlockArgs) ToGetPublicIpAddressPoolCidrBlocksBlockOutputWithContext(ctx context.Context) GetPublicIpAddressPoolCidrBlocksBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpAddressPoolCidrBlocksBlockOutput)
}

// GetPublicIpAddressPoolCidrBlocksBlockArrayInput is an input type that accepts GetPublicIpAddressPoolCidrBlocksBlockArray and GetPublicIpAddressPoolCidrBlocksBlockArrayOutput values.
// You can construct a concrete instance of `GetPublicIpAddressPoolCidrBlocksBlockArrayInput` via:
//
//	GetPublicIpAddressPoolCidrBlocksBlockArray{ GetPublicIpAddressPoolCidrBlocksBlockArgs{...} }
type GetPublicIpAddressPoolCidrBlocksBlockArrayInput interface {
	pulumi.Input

	ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutput() GetPublicIpAddressPoolCidrBlocksBlockArrayOutput
	ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutputWithContext(context.Context) GetPublicIpAddressPoolCidrBlocksBlockArrayOutput
}

type GetPublicIpAddressPoolCidrBlocksBlockArray []GetPublicIpAddressPoolCidrBlocksBlockInput

func (GetPublicIpAddressPoolCidrBlocksBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpAddressPoolCidrBlocksBlock)(nil)).Elem()
}

func (i GetPublicIpAddressPoolCidrBlocksBlockArray) ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutput() GetPublicIpAddressPoolCidrBlocksBlockArrayOutput {
	return i.ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutputWithContext(context.Background())
}

func (i GetPublicIpAddressPoolCidrBlocksBlockArray) ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutputWithContext(ctx context.Context) GetPublicIpAddressPoolCidrBlocksBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpAddressPoolCidrBlocksBlockArrayOutput)
}

type GetPublicIpAddressPoolCidrBlocksBlockOutput struct{ *pulumi.OutputState }

func (GetPublicIpAddressPoolCidrBlocksBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpAddressPoolCidrBlocksBlock)(nil)).Elem()
}

func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) ToGetPublicIpAddressPoolCidrBlocksBlockOutput() GetPublicIpAddressPoolCidrBlocksBlockOutput {
	return o
}

func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) ToGetPublicIpAddressPoolCidrBlocksBlockOutputWithContext(ctx context.Context) GetPublicIpAddressPoolCidrBlocksBlockOutput {
	return o
}

// The CIDR block.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The time when the CIDR block was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Public Ip Address Pool Cidr Block.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Vpc Public IP address pool.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) PublicIpAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) string { return v.PublicIpAddressPoolId }).(pulumi.StringOutput)
}

// The status of the CIDR block in the Vpc Public IP address pool. Valid values: `Created`, `Modifying`, `Deleting`.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) string { return v.Status }).(pulumi.StringOutput)
}

// The number of occupied IP addresses in the CIDR block.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) TotalIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) int { return v.TotalIpNum }).(pulumi.IntOutput)
}

// The total number of available IP addresses in the CIDR block.
func (o GetPublicIpAddressPoolCidrBlocksBlockOutput) UsedIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolCidrBlocksBlock) int { return v.UsedIpNum }).(pulumi.IntOutput)
}

type GetPublicIpAddressPoolCidrBlocksBlockArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpAddressPoolCidrBlocksBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpAddressPoolCidrBlocksBlock)(nil)).Elem()
}

func (o GetPublicIpAddressPoolCidrBlocksBlockArrayOutput) ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutput() GetPublicIpAddressPoolCidrBlocksBlockArrayOutput {
	return o
}

func (o GetPublicIpAddressPoolCidrBlocksBlockArrayOutput) ToGetPublicIpAddressPoolCidrBlocksBlockArrayOutputWithContext(ctx context.Context) GetPublicIpAddressPoolCidrBlocksBlockArrayOutput {
	return o
}

func (o GetPublicIpAddressPoolCidrBlocksBlockArrayOutput) Index(i pulumi.IntInput) GetPublicIpAddressPoolCidrBlocksBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpAddressPoolCidrBlocksBlock {
		return vs[0].([]GetPublicIpAddressPoolCidrBlocksBlock)[vs[1].(int)]
	}).(GetPublicIpAddressPoolCidrBlocksBlockOutput)
}

type GetPublicIpAddressPoolsPool struct {
	// The time when the Vpc Public Ip Address Pool was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
	CreateTime string `pulumi:"createTime"`
	// The description of the Vpc Public Ip Address Pool.
	Description string `pulumi:"description"`
	// The ID of the Vpc Public Ip Address Pool.
	Id string `pulumi:"id"`
	// Indicates whether the Vpc Public Ip Address Pool has idle IP addresses.
	IpAddressRemaining bool `pulumi:"ipAddressRemaining"`
	// The Internet service provider.
	Isp string `pulumi:"isp"`
	// The ID of the Vpc Public Ip Address Pool.
	PublicIpAddressPoolId string `pulumi:"publicIpAddressPoolId"`
	// The name of the Vpc Public Ip Address Pool.
	PublicIpAddressPoolName string `pulumi:"publicIpAddressPoolName"`
	// The region ID of the Vpc Public Ip Address Pool.
	RegionId string `pulumi:"regionId"`
	// The status of the Vpc Public Ip Address Pool.
	Status string `pulumi:"status"`
	// The total number of IP addresses in the Vpc Public Ip Address Pool.
	TotalIpNum int `pulumi:"totalIpNum"`
	// The number of occupied IP addresses in the Vpc Public Ip Address Pool.
	UsedIpNum int `pulumi:"usedIpNum"`
	// The user type.
	UserType string `pulumi:"userType"`
}

// GetPublicIpAddressPoolsPoolInput is an input type that accepts GetPublicIpAddressPoolsPoolArgs and GetPublicIpAddressPoolsPoolOutput values.
// You can construct a concrete instance of `GetPublicIpAddressPoolsPoolInput` via:
//
//	GetPublicIpAddressPoolsPoolArgs{...}
type GetPublicIpAddressPoolsPoolInput interface {
	pulumi.Input

	ToGetPublicIpAddressPoolsPoolOutput() GetPublicIpAddressPoolsPoolOutput
	ToGetPublicIpAddressPoolsPoolOutputWithContext(context.Context) GetPublicIpAddressPoolsPoolOutput
}

type GetPublicIpAddressPoolsPoolArgs struct {
	// The time when the Vpc Public Ip Address Pool was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Vpc Public Ip Address Pool.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Vpc Public Ip Address Pool.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the Vpc Public Ip Address Pool has idle IP addresses.
	IpAddressRemaining pulumi.BoolInput `pulumi:"ipAddressRemaining"`
	// The Internet service provider.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The ID of the Vpc Public Ip Address Pool.
	PublicIpAddressPoolId pulumi.StringInput `pulumi:"publicIpAddressPoolId"`
	// The name of the Vpc Public Ip Address Pool.
	PublicIpAddressPoolName pulumi.StringInput `pulumi:"publicIpAddressPoolName"`
	// The region ID of the Vpc Public Ip Address Pool.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The status of the Vpc Public Ip Address Pool.
	Status pulumi.StringInput `pulumi:"status"`
	// The total number of IP addresses in the Vpc Public Ip Address Pool.
	TotalIpNum pulumi.IntInput `pulumi:"totalIpNum"`
	// The number of occupied IP addresses in the Vpc Public Ip Address Pool.
	UsedIpNum pulumi.IntInput `pulumi:"usedIpNum"`
	// The user type.
	UserType pulumi.StringInput `pulumi:"userType"`
}

func (GetPublicIpAddressPoolsPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpAddressPoolsPool)(nil)).Elem()
}

func (i GetPublicIpAddressPoolsPoolArgs) ToGetPublicIpAddressPoolsPoolOutput() GetPublicIpAddressPoolsPoolOutput {
	return i.ToGetPublicIpAddressPoolsPoolOutputWithContext(context.Background())
}

func (i GetPublicIpAddressPoolsPoolArgs) ToGetPublicIpAddressPoolsPoolOutputWithContext(ctx context.Context) GetPublicIpAddressPoolsPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpAddressPoolsPoolOutput)
}

// GetPublicIpAddressPoolsPoolArrayInput is an input type that accepts GetPublicIpAddressPoolsPoolArray and GetPublicIpAddressPoolsPoolArrayOutput values.
// You can construct a concrete instance of `GetPublicIpAddressPoolsPoolArrayInput` via:
//
//	GetPublicIpAddressPoolsPoolArray{ GetPublicIpAddressPoolsPoolArgs{...} }
type GetPublicIpAddressPoolsPoolArrayInput interface {
	pulumi.Input

	ToGetPublicIpAddressPoolsPoolArrayOutput() GetPublicIpAddressPoolsPoolArrayOutput
	ToGetPublicIpAddressPoolsPoolArrayOutputWithContext(context.Context) GetPublicIpAddressPoolsPoolArrayOutput
}

type GetPublicIpAddressPoolsPoolArray []GetPublicIpAddressPoolsPoolInput

func (GetPublicIpAddressPoolsPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpAddressPoolsPool)(nil)).Elem()
}

func (i GetPublicIpAddressPoolsPoolArray) ToGetPublicIpAddressPoolsPoolArrayOutput() GetPublicIpAddressPoolsPoolArrayOutput {
	return i.ToGetPublicIpAddressPoolsPoolArrayOutputWithContext(context.Background())
}

func (i GetPublicIpAddressPoolsPoolArray) ToGetPublicIpAddressPoolsPoolArrayOutputWithContext(ctx context.Context) GetPublicIpAddressPoolsPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpAddressPoolsPoolArrayOutput)
}

type GetPublicIpAddressPoolsPoolOutput struct{ *pulumi.OutputState }

func (GetPublicIpAddressPoolsPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpAddressPoolsPool)(nil)).Elem()
}

func (o GetPublicIpAddressPoolsPoolOutput) ToGetPublicIpAddressPoolsPoolOutput() GetPublicIpAddressPoolsPoolOutput {
	return o
}

func (o GetPublicIpAddressPoolsPoolOutput) ToGetPublicIpAddressPoolsPoolOutputWithContext(ctx context.Context) GetPublicIpAddressPoolsPoolOutput {
	return o
}

// The time when the Vpc Public Ip Address Pool was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
func (o GetPublicIpAddressPoolsPoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the Vpc Public Ip Address Pool has idle IP addresses.
func (o GetPublicIpAddressPoolsPoolOutput) IpAddressRemaining() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) bool { return v.IpAddressRemaining }).(pulumi.BoolOutput)
}

// The Internet service provider.
func (o GetPublicIpAddressPoolsPoolOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.Isp }).(pulumi.StringOutput)
}

// The ID of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) PublicIpAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.PublicIpAddressPoolId }).(pulumi.StringOutput)
}

// The name of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) PublicIpAddressPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.PublicIpAddressPoolName }).(pulumi.StringOutput)
}

// The region ID of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.RegionId }).(pulumi.StringOutput)
}

// The status of the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.Status }).(pulumi.StringOutput)
}

// The total number of IP addresses in the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) TotalIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) int { return v.TotalIpNum }).(pulumi.IntOutput)
}

// The number of occupied IP addresses in the Vpc Public Ip Address Pool.
func (o GetPublicIpAddressPoolsPoolOutput) UsedIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) int { return v.UsedIpNum }).(pulumi.IntOutput)
}

// The user type.
func (o GetPublicIpAddressPoolsPoolOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIpAddressPoolsPool) string { return v.UserType }).(pulumi.StringOutput)
}

type GetPublicIpAddressPoolsPoolArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIpAddressPoolsPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIpAddressPoolsPool)(nil)).Elem()
}

func (o GetPublicIpAddressPoolsPoolArrayOutput) ToGetPublicIpAddressPoolsPoolArrayOutput() GetPublicIpAddressPoolsPoolArrayOutput {
	return o
}

func (o GetPublicIpAddressPoolsPoolArrayOutput) ToGetPublicIpAddressPoolsPoolArrayOutputWithContext(ctx context.Context) GetPublicIpAddressPoolsPoolArrayOutput {
	return o
}

func (o GetPublicIpAddressPoolsPoolArrayOutput) Index(i pulumi.IntInput) GetPublicIpAddressPoolsPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIpAddressPoolsPool {
		return vs[0].([]GetPublicIpAddressPoolsPool)[vs[1].(int)]
	}).(GetPublicIpAddressPoolsPoolOutput)
}

type GetRouteEntriesEntry struct {
	// The destination CIDR block of the route entry.
	CidrBlock string `pulumi:"cidrBlock"`
	// The instance ID of the next hop.
	InstanceId string `pulumi:"instanceId"`
	// The type of the next hop.
	NextHopType string `pulumi:"nextHopType"`
	// The ID of the router table to which the route entry belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The type of the route entry.
	Type string `pulumi:"type"`
}

// GetRouteEntriesEntryInput is an input type that accepts GetRouteEntriesEntryArgs and GetRouteEntriesEntryOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryInput` via:
//
//	GetRouteEntriesEntryArgs{...}
type GetRouteEntriesEntryInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput
	ToGetRouteEntriesEntryOutputWithContext(context.Context) GetRouteEntriesEntryOutput
}

type GetRouteEntriesEntryArgs struct {
	// The destination CIDR block of the route entry.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The instance ID of the next hop.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the next hop.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The ID of the router table to which the route entry belongs.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the route entry.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntry)(nil)).Elem()
}

func (i GetRouteEntriesEntryArgs) ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput {
	return i.ToGetRouteEntriesEntryOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryArgs) ToGetRouteEntriesEntryOutputWithContext(ctx context.Context) GetRouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryOutput)
}

// GetRouteEntriesEntryArrayInput is an input type that accepts GetRouteEntriesEntryArray and GetRouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetRouteEntriesEntryArrayInput` via:
//
//	GetRouteEntriesEntryArray{ GetRouteEntriesEntryArgs{...} }
type GetRouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput
	ToGetRouteEntriesEntryArrayOutputWithContext(context.Context) GetRouteEntriesEntryArrayOutput
}

type GetRouteEntriesEntryArray []GetRouteEntriesEntryInput

func (GetRouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntry)(nil)).Elem()
}

func (i GetRouteEntriesEntryArray) ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput {
	return i.ToGetRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetRouteEntriesEntryArray) ToGetRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesEntryArrayOutput)
}

type GetRouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesEntry)(nil)).Elem()
}

func (o GetRouteEntriesEntryOutput) ToGetRouteEntriesEntryOutput() GetRouteEntriesEntryOutput {
	return o
}

func (o GetRouteEntriesEntryOutput) ToGetRouteEntriesEntryOutputWithContext(ctx context.Context) GetRouteEntriesEntryOutput {
	return o
}

// The destination CIDR block of the route entry.
func (o GetRouteEntriesEntryOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The instance ID of the next hop.
func (o GetRouteEntriesEntryOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the next hop.
func (o GetRouteEntriesEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The ID of the router table to which the route entry belongs.
func (o GetRouteEntriesEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o GetRouteEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o GetRouteEntriesEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesEntry) string { return v.Type }).(pulumi.StringOutput)
}

type GetRouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesEntry)(nil)).Elem()
}

func (o GetRouteEntriesEntryArrayOutput) ToGetRouteEntriesEntryArrayOutput() GetRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRouteEntriesEntryArrayOutput) ToGetRouteEntriesEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesEntryArrayOutput {
	return o
}

func (o GetRouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetRouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteEntriesEntry {
		return vs[0].([]GetRouteEntriesEntry)[vs[1].(int)]
	}).(GetRouteEntriesEntryOutput)
}

type GetRouteTablesTable struct {
	// The description of the route table instance.
	Description string `pulumi:"description"`
	// ID of the Route Table.
	Id string `pulumi:"id"`
	// Name of the route table.
	Name string `pulumi:"name"`
	// The Id of resource group which route tables belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The route table id.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table name.
	RouteTableName string `pulumi:"routeTableName"`
	// The type of route table.
	RouteTableType string `pulumi:"routeTableType"`
	// The router ID.
	RouterId string `pulumi:"routerId"`
	// The route type of route table. Valid values: `VRouter` and `VBR`.
	RouterType string `pulumi:"routerType"`
	// The status of resource. Valid values: `Available` and `Pending`.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Vpc id of the route table.
	VpcId string `pulumi:"vpcId"`
	// A list of vswitch id.
	VswitchIds []string `pulumi:"vswitchIds"`
}

// GetRouteTablesTableInput is an input type that accepts GetRouteTablesTableArgs and GetRouteTablesTableOutput values.
// You can construct a concrete instance of `GetRouteTablesTableInput` via:
//
//	GetRouteTablesTableArgs{...}
type GetRouteTablesTableInput interface {
	pulumi.Input

	ToGetRouteTablesTableOutput() GetRouteTablesTableOutput
	ToGetRouteTablesTableOutputWithContext(context.Context) GetRouteTablesTableOutput
}

type GetRouteTablesTableArgs struct {
	// The description of the route table instance.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the Route Table.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the route table.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of resource group which route tables belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The route table id.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table name.
	RouteTableName pulumi.StringInput `pulumi:"routeTableName"`
	// The type of route table.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The router ID.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The route type of route table. Valid values: `VRouter` and `VBR`.
	RouterType pulumi.StringInput `pulumi:"routerType"`
	// The status of resource. Valid values: `Available` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Vpc id of the route table.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// A list of vswitch id.
	VswitchIds pulumi.StringArrayInput `pulumi:"vswitchIds"`
}

func (GetRouteTablesTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesTable)(nil)).Elem()
}

func (i GetRouteTablesTableArgs) ToGetRouteTablesTableOutput() GetRouteTablesTableOutput {
	return i.ToGetRouteTablesTableOutputWithContext(context.Background())
}

func (i GetRouteTablesTableArgs) ToGetRouteTablesTableOutputWithContext(ctx context.Context) GetRouteTablesTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesTableOutput)
}

// GetRouteTablesTableArrayInput is an input type that accepts GetRouteTablesTableArray and GetRouteTablesTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesTableArrayInput` via:
//
//	GetRouteTablesTableArray{ GetRouteTablesTableArgs{...} }
type GetRouteTablesTableArrayInput interface {
	pulumi.Input

	ToGetRouteTablesTableArrayOutput() GetRouteTablesTableArrayOutput
	ToGetRouteTablesTableArrayOutputWithContext(context.Context) GetRouteTablesTableArrayOutput
}

type GetRouteTablesTableArray []GetRouteTablesTableInput

func (GetRouteTablesTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesTable)(nil)).Elem()
}

func (i GetRouteTablesTableArray) ToGetRouteTablesTableArrayOutput() GetRouteTablesTableArrayOutput {
	return i.ToGetRouteTablesTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesTableArray) ToGetRouteTablesTableArrayOutputWithContext(ctx context.Context) GetRouteTablesTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesTableArrayOutput)
}

type GetRouteTablesTableOutput struct{ *pulumi.OutputState }

func (GetRouteTablesTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesTable)(nil)).Elem()
}

func (o GetRouteTablesTableOutput) ToGetRouteTablesTableOutput() GetRouteTablesTableOutput {
	return o
}

func (o GetRouteTablesTableOutput) ToGetRouteTablesTableOutputWithContext(ctx context.Context) GetRouteTablesTableOutput {
	return o
}

// The description of the route table instance.
func (o GetRouteTablesTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the Route Table.
func (o GetRouteTablesTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the route table.
func (o GetRouteTablesTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of resource group which route tables belongs.
func (o GetRouteTablesTableOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The route table id.
func (o GetRouteTablesTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table name.
func (o GetRouteTablesTableOutput) RouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.RouteTableName }).(pulumi.StringOutput)
}

// The type of route table.
func (o GetRouteTablesTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The router ID.
func (o GetRouteTablesTableOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.RouterId }).(pulumi.StringOutput)
}

// The route type of route table. Valid values: `VRouter` and `VBR`.
func (o GetRouteTablesTableOutput) RouterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.RouterType }).(pulumi.StringOutput)
}

// The status of resource. Valid values: `Available` and `Pending`.
func (o GetRouteTablesTableOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetRouteTablesTableOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetRouteTablesTable) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Vpc id of the route table.
func (o GetRouteTablesTableOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTable) string { return v.VpcId }).(pulumi.StringOutput)
}

// A list of vswitch id.
func (o GetRouteTablesTableOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesTable) []string { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

type GetRouteTablesTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesTable)(nil)).Elem()
}

func (o GetRouteTablesTableArrayOutput) ToGetRouteTablesTableArrayOutput() GetRouteTablesTableArrayOutput {
	return o
}

func (o GetRouteTablesTableArrayOutput) ToGetRouteTablesTableArrayOutputWithContext(ctx context.Context) GetRouteTablesTableArrayOutput {
	return o
}

func (o GetRouteTablesTableArrayOutput) Index(i pulumi.IntInput) GetRouteTablesTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesTable {
		return vs[0].([]GetRouteTablesTable)[vs[1].(int)]
	}).(GetRouteTablesTableOutput)
}

type GetRouterInterfacesInterface struct {
	// ID of the access point used by the VBR.
	AccessPointId string `pulumi:"accessPointId"`
	// Router interface creation time.
	CreationTime string `pulumi:"creationTime"`
	// Router interface description.
	Description string `pulumi:"description"`
	// Source IP address used to perform health check on the physical connection.
	HealthCheckSourceIp string `pulumi:"healthCheckSourceIp"`
	// Destination IP address used to perform health check on the physical connection.
	HealthCheckTargetIp string `pulumi:"healthCheckTargetIp"`
	// Router interface ID.
	Id string `pulumi:"id"`
	// Router interface name.
	Name string `pulumi:"name"`
	// ID of the peer router interface.
	OppositeInterfaceId string `pulumi:"oppositeInterfaceId"`
	// Account ID of the owner of the peer router interface.
	OppositeInterfaceOwnerId string `pulumi:"oppositeInterfaceOwnerId"`
	// Peer router region ID.
	OppositeRegionId string `pulumi:"oppositeRegionId"`
	// Peer router ID.
	OppositeRouterId string `pulumi:"oppositeRouterId"`
	// Router type in the peer region. Possible values: `VRouter` and `VBR`.
	OppositeRouterType string `pulumi:"oppositeRouterType"`
	// Role of the router interface. Valid values are `InitiatingSide` (connection initiator) and
	// `AcceptingSide` (connection receiver). The value of this parameter must be `InitiatingSide` if the `routerType` is set to `VBR`.
	Role string `pulumi:"role"`
	// ID of the VRouter located in the local region.
	RouterId string `pulumi:"routerId"`
	// Router type in the local region. Valid values are `VRouter` and `VBR` (physical connection).
	RouterType string `pulumi:"routerType"`
	// Specification of the link, such as `Small.1` (10Mb), `Middle.1` (100Mb), `Large.2` (2Gb), ...etc.
	Specification string `pulumi:"specification"`
	// Expected status. Valid values are `Active`, `Inactive` and `Idle`.
	Status string `pulumi:"status"`
	// ID of the VPC that owns the router in the local region.
	VpcId string `pulumi:"vpcId"`
}

// GetRouterInterfacesInterfaceInput is an input type that accepts GetRouterInterfacesInterfaceArgs and GetRouterInterfacesInterfaceOutput values.
// You can construct a concrete instance of `GetRouterInterfacesInterfaceInput` via:
//
//	GetRouterInterfacesInterfaceArgs{...}
type GetRouterInterfacesInterfaceInput interface {
	pulumi.Input

	ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput
	ToGetRouterInterfacesInterfaceOutputWithContext(context.Context) GetRouterInterfacesInterfaceOutput
}

type GetRouterInterfacesInterfaceArgs struct {
	// ID of the access point used by the VBR.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// Router interface creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Router interface description.
	Description pulumi.StringInput `pulumi:"description"`
	// Source IP address used to perform health check on the physical connection.
	HealthCheckSourceIp pulumi.StringInput `pulumi:"healthCheckSourceIp"`
	// Destination IP address used to perform health check on the physical connection.
	HealthCheckTargetIp pulumi.StringInput `pulumi:"healthCheckTargetIp"`
	// Router interface ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Router interface name.
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the peer router interface.
	OppositeInterfaceId pulumi.StringInput `pulumi:"oppositeInterfaceId"`
	// Account ID of the owner of the peer router interface.
	OppositeInterfaceOwnerId pulumi.StringInput `pulumi:"oppositeInterfaceOwnerId"`
	// Peer router region ID.
	OppositeRegionId pulumi.StringInput `pulumi:"oppositeRegionId"`
	// Peer router ID.
	OppositeRouterId pulumi.StringInput `pulumi:"oppositeRouterId"`
	// Router type in the peer region. Possible values: `VRouter` and `VBR`.
	OppositeRouterType pulumi.StringInput `pulumi:"oppositeRouterType"`
	// Role of the router interface. Valid values are `InitiatingSide` (connection initiator) and
	// `AcceptingSide` (connection receiver). The value of this parameter must be `InitiatingSide` if the `routerType` is set to `VBR`.
	Role pulumi.StringInput `pulumi:"role"`
	// ID of the VRouter located in the local region.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// Router type in the local region. Valid values are `VRouter` and `VBR` (physical connection).
	RouterType pulumi.StringInput `pulumi:"routerType"`
	// Specification of the link, such as `Small.1` (10Mb), `Middle.1` (100Mb), `Large.2` (2Gb), ...etc.
	Specification pulumi.StringInput `pulumi:"specification"`
	// Expected status. Valid values are `Active`, `Inactive` and `Idle`.
	Status pulumi.StringInput `pulumi:"status"`
	// ID of the VPC that owns the router in the local region.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetRouterInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesInterface)(nil)).Elem()
}

func (i GetRouterInterfacesInterfaceArgs) ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput {
	return i.ToGetRouterInterfacesInterfaceOutputWithContext(context.Background())
}

func (i GetRouterInterfacesInterfaceArgs) ToGetRouterInterfacesInterfaceOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesInterfaceOutput)
}

// GetRouterInterfacesInterfaceArrayInput is an input type that accepts GetRouterInterfacesInterfaceArray and GetRouterInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterInterfacesInterfaceArrayInput` via:
//
//	GetRouterInterfacesInterfaceArray{ GetRouterInterfacesInterfaceArgs{...} }
type GetRouterInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput
	ToGetRouterInterfacesInterfaceArrayOutputWithContext(context.Context) GetRouterInterfacesInterfaceArrayOutput
}

type GetRouterInterfacesInterfaceArray []GetRouterInterfacesInterfaceInput

func (GetRouterInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesInterface)(nil)).Elem()
}

func (i GetRouterInterfacesInterfaceArray) ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput {
	return i.ToGetRouterInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterInterfacesInterfaceArray) ToGetRouterInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesInterfaceArrayOutput)
}

type GetRouterInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesInterface)(nil)).Elem()
}

func (o GetRouterInterfacesInterfaceOutput) ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput {
	return o
}

func (o GetRouterInterfacesInterfaceOutput) ToGetRouterInterfacesInterfaceOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceOutput {
	return o
}

// ID of the access point used by the VBR.
func (o GetRouterInterfacesInterfaceOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// Router interface creation time.
func (o GetRouterInterfacesInterfaceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Router interface description.
func (o GetRouterInterfacesInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Description }).(pulumi.StringOutput)
}

// Source IP address used to perform health check on the physical connection.
func (o GetRouterInterfacesInterfaceOutput) HealthCheckSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HealthCheckSourceIp }).(pulumi.StringOutput)
}

// Destination IP address used to perform health check on the physical connection.
func (o GetRouterInterfacesInterfaceOutput) HealthCheckTargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HealthCheckTargetIp }).(pulumi.StringOutput)
}

// Router interface ID.
func (o GetRouterInterfacesInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Id }).(pulumi.StringOutput)
}

// Router interface name.
func (o GetRouterInterfacesInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the peer router interface.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceId }).(pulumi.StringOutput)
}

// Account ID of the owner of the peer router interface.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceOwnerId }).(pulumi.StringOutput)
}

// Peer router region ID.
func (o GetRouterInterfacesInterfaceOutput) OppositeRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRegionId }).(pulumi.StringOutput)
}

// Peer router ID.
func (o GetRouterInterfacesInterfaceOutput) OppositeRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRouterId }).(pulumi.StringOutput)
}

// Router type in the peer region. Possible values: `VRouter` and `VBR`.
func (o GetRouterInterfacesInterfaceOutput) OppositeRouterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRouterType }).(pulumi.StringOutput)
}

// Role of the router interface. Valid values are `InitiatingSide` (connection initiator) and
// `AcceptingSide` (connection receiver). The value of this parameter must be `InitiatingSide` if the `routerType` is set to `VBR`.
func (o GetRouterInterfacesInterfaceOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Role }).(pulumi.StringOutput)
}

// ID of the VRouter located in the local region.
func (o GetRouterInterfacesInterfaceOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterId }).(pulumi.StringOutput)
}

// Router type in the local region. Valid values are `VRouter` and `VBR` (physical connection).
func (o GetRouterInterfacesInterfaceOutput) RouterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterType }).(pulumi.StringOutput)
}

// Specification of the link, such as `Small.1` (10Mb), `Middle.1` (100Mb), `Large.2` (2Gb), ...etc.
func (o GetRouterInterfacesInterfaceOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Specification }).(pulumi.StringOutput)
}

// Expected status. Valid values are `Active`, `Inactive` and `Idle`.
func (o GetRouterInterfacesInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Status }).(pulumi.StringOutput)
}

// ID of the VPC that owns the router in the local region.
func (o GetRouterInterfacesInterfaceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRouterInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesInterface)(nil)).Elem()
}

func (o GetRouterInterfacesInterfaceArrayOutput) ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput {
	return o
}

func (o GetRouterInterfacesInterfaceArrayOutput) ToGetRouterInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceArrayOutput {
	return o
}

func (o GetRouterInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterInterfacesInterface {
		return vs[0].([]GetRouterInterfacesInterface)[vs[1].(int)]
	}).(GetRouterInterfacesInterfaceOutput)
}

type GetSnatEntriesEntry struct {
	// The ID of the Snat Entry.
	Id string `pulumi:"id"`
	// The ID of snat entry.
	SnatEntryId string `pulumi:"snatEntryId"`
	// The name of snat entry.
	SnatEntryName string `pulumi:"snatEntryName"`
	// The public IP of the Snat Entry.
	SnatIp string `pulumi:"snatIp"`
	// The source CIDR block of the Snat Entry.
	SourceCidr string `pulumi:"sourceCidr"`
	// The source vswitch ID.
	SourceVswitchId string `pulumi:"sourceVswitchId"`
	// The status of the Snat Entry. Valid values: `Available`, `Deleting` and `Pending`.
	Status string `pulumi:"status"`
}

// GetSnatEntriesEntryInput is an input type that accepts GetSnatEntriesEntryArgs and GetSnatEntriesEntryOutput values.
// You can construct a concrete instance of `GetSnatEntriesEntryInput` via:
//
//	GetSnatEntriesEntryArgs{...}
type GetSnatEntriesEntryInput interface {
	pulumi.Input

	ToGetSnatEntriesEntryOutput() GetSnatEntriesEntryOutput
	ToGetSnatEntriesEntryOutputWithContext(context.Context) GetSnatEntriesEntryOutput
}

type GetSnatEntriesEntryArgs struct {
	// The ID of the Snat Entry.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of snat entry.
	SnatEntryId pulumi.StringInput `pulumi:"snatEntryId"`
	// The name of snat entry.
	SnatEntryName pulumi.StringInput `pulumi:"snatEntryName"`
	// The public IP of the Snat Entry.
	SnatIp pulumi.StringInput `pulumi:"snatIp"`
	// The source CIDR block of the Snat Entry.
	SourceCidr pulumi.StringInput `pulumi:"sourceCidr"`
	// The source vswitch ID.
	SourceVswitchId pulumi.StringInput `pulumi:"sourceVswitchId"`
	// The status of the Snat Entry. Valid values: `Available`, `Deleting` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSnatEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnatEntriesEntry)(nil)).Elem()
}

func (i GetSnatEntriesEntryArgs) ToGetSnatEntriesEntryOutput() GetSnatEntriesEntryOutput {
	return i.ToGetSnatEntriesEntryOutputWithContext(context.Background())
}

func (i GetSnatEntriesEntryArgs) ToGetSnatEntriesEntryOutputWithContext(ctx context.Context) GetSnatEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnatEntriesEntryOutput)
}

// GetSnatEntriesEntryArrayInput is an input type that accepts GetSnatEntriesEntryArray and GetSnatEntriesEntryArrayOutput values.
// You can construct a concrete instance of `GetSnatEntriesEntryArrayInput` via:
//
//	GetSnatEntriesEntryArray{ GetSnatEntriesEntryArgs{...} }
type GetSnatEntriesEntryArrayInput interface {
	pulumi.Input

	ToGetSnatEntriesEntryArrayOutput() GetSnatEntriesEntryArrayOutput
	ToGetSnatEntriesEntryArrayOutputWithContext(context.Context) GetSnatEntriesEntryArrayOutput
}

type GetSnatEntriesEntryArray []GetSnatEntriesEntryInput

func (GetSnatEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnatEntriesEntry)(nil)).Elem()
}

func (i GetSnatEntriesEntryArray) ToGetSnatEntriesEntryArrayOutput() GetSnatEntriesEntryArrayOutput {
	return i.ToGetSnatEntriesEntryArrayOutputWithContext(context.Background())
}

func (i GetSnatEntriesEntryArray) ToGetSnatEntriesEntryArrayOutputWithContext(ctx context.Context) GetSnatEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnatEntriesEntryArrayOutput)
}

type GetSnatEntriesEntryOutput struct{ *pulumi.OutputState }

func (GetSnatEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnatEntriesEntry)(nil)).Elem()
}

func (o GetSnatEntriesEntryOutput) ToGetSnatEntriesEntryOutput() GetSnatEntriesEntryOutput {
	return o
}

func (o GetSnatEntriesEntryOutput) ToGetSnatEntriesEntryOutputWithContext(ctx context.Context) GetSnatEntriesEntryOutput {
	return o
}

// The ID of the Snat Entry.
func (o GetSnatEntriesEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of snat entry.
func (o GetSnatEntriesEntryOutput) SnatEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.SnatEntryId }).(pulumi.StringOutput)
}

// The name of snat entry.
func (o GetSnatEntriesEntryOutput) SnatEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.SnatEntryName }).(pulumi.StringOutput)
}

// The public IP of the Snat Entry.
func (o GetSnatEntriesEntryOutput) SnatIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.SnatIp }).(pulumi.StringOutput)
}

// The source CIDR block of the Snat Entry.
func (o GetSnatEntriesEntryOutput) SourceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.SourceCidr }).(pulumi.StringOutput)
}

// The source vswitch ID.
func (o GetSnatEntriesEntryOutput) SourceVswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.SourceVswitchId }).(pulumi.StringOutput)
}

// The status of the Snat Entry. Valid values: `Available`, `Deleting` and `Pending`.
func (o GetSnatEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnatEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

type GetSnatEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (GetSnatEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnatEntriesEntry)(nil)).Elem()
}

func (o GetSnatEntriesEntryArrayOutput) ToGetSnatEntriesEntryArrayOutput() GetSnatEntriesEntryArrayOutput {
	return o
}

func (o GetSnatEntriesEntryArrayOutput) ToGetSnatEntriesEntryArrayOutputWithContext(ctx context.Context) GetSnatEntriesEntryArrayOutput {
	return o
}

func (o GetSnatEntriesEntryArrayOutput) Index(i pulumi.IntInput) GetSnatEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnatEntriesEntry {
		return vs[0].([]GetSnatEntriesEntry)[vs[1].(int)]
	}).(GetSnatEntriesEntryOutput)
}

type GetSslVpnClientCertsCert struct {
	// The time of creation.
	CreateTime string `pulumi:"createTime"`
	// The expiration time of the client certificate.
	EndTime int `pulumi:"endTime"`
	// ID of the SSL-VPN client certificate.
	Id string `pulumi:"id"`
	// The name of the SSL-VPN client certificate.
	Name string `pulumi:"name"`
	// Use the SSL-VPN server ID as the search key.
	SslVpnServerId string `pulumi:"sslVpnServerId"`
	// The status of the client certificate. valid value:expiring-soon, normal, expired.
	Status string `pulumi:"status"`
}

// GetSslVpnClientCertsCertInput is an input type that accepts GetSslVpnClientCertsCertArgs and GetSslVpnClientCertsCertOutput values.
// You can construct a concrete instance of `GetSslVpnClientCertsCertInput` via:
//
//	GetSslVpnClientCertsCertArgs{...}
type GetSslVpnClientCertsCertInput interface {
	pulumi.Input

	ToGetSslVpnClientCertsCertOutput() GetSslVpnClientCertsCertOutput
	ToGetSslVpnClientCertsCertOutputWithContext(context.Context) GetSslVpnClientCertsCertOutput
}

type GetSslVpnClientCertsCertArgs struct {
	// The time of creation.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expiration time of the client certificate.
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// ID of the SSL-VPN client certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the SSL-VPN client certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// Use the SSL-VPN server ID as the search key.
	SslVpnServerId pulumi.StringInput `pulumi:"sslVpnServerId"`
	// The status of the client certificate. valid value:expiring-soon, normal, expired.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSslVpnClientCertsCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSslVpnClientCertsCert)(nil)).Elem()
}

func (i GetSslVpnClientCertsCertArgs) ToGetSslVpnClientCertsCertOutput() GetSslVpnClientCertsCertOutput {
	return i.ToGetSslVpnClientCertsCertOutputWithContext(context.Background())
}

func (i GetSslVpnClientCertsCertArgs) ToGetSslVpnClientCertsCertOutputWithContext(ctx context.Context) GetSslVpnClientCertsCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSslVpnClientCertsCertOutput)
}

// GetSslVpnClientCertsCertArrayInput is an input type that accepts GetSslVpnClientCertsCertArray and GetSslVpnClientCertsCertArrayOutput values.
// You can construct a concrete instance of `GetSslVpnClientCertsCertArrayInput` via:
//
//	GetSslVpnClientCertsCertArray{ GetSslVpnClientCertsCertArgs{...} }
type GetSslVpnClientCertsCertArrayInput interface {
	pulumi.Input

	ToGetSslVpnClientCertsCertArrayOutput() GetSslVpnClientCertsCertArrayOutput
	ToGetSslVpnClientCertsCertArrayOutputWithContext(context.Context) GetSslVpnClientCertsCertArrayOutput
}

type GetSslVpnClientCertsCertArray []GetSslVpnClientCertsCertInput

func (GetSslVpnClientCertsCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSslVpnClientCertsCert)(nil)).Elem()
}

func (i GetSslVpnClientCertsCertArray) ToGetSslVpnClientCertsCertArrayOutput() GetSslVpnClientCertsCertArrayOutput {
	return i.ToGetSslVpnClientCertsCertArrayOutputWithContext(context.Background())
}

func (i GetSslVpnClientCertsCertArray) ToGetSslVpnClientCertsCertArrayOutputWithContext(ctx context.Context) GetSslVpnClientCertsCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSslVpnClientCertsCertArrayOutput)
}

type GetSslVpnClientCertsCertOutput struct{ *pulumi.OutputState }

func (GetSslVpnClientCertsCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSslVpnClientCertsCert)(nil)).Elem()
}

func (o GetSslVpnClientCertsCertOutput) ToGetSslVpnClientCertsCertOutput() GetSslVpnClientCertsCertOutput {
	return o
}

func (o GetSslVpnClientCertsCertOutput) ToGetSslVpnClientCertsCertOutputWithContext(ctx context.Context) GetSslVpnClientCertsCertOutput {
	return o
}

// The time of creation.
func (o GetSslVpnClientCertsCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expiration time of the client certificate.
func (o GetSslVpnClientCertsCertOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) int { return v.EndTime }).(pulumi.IntOutput)
}

// ID of the SSL-VPN client certificate.
func (o GetSslVpnClientCertsCertOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the SSL-VPN client certificate.
func (o GetSslVpnClientCertsCertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) string { return v.Name }).(pulumi.StringOutput)
}

// Use the SSL-VPN server ID as the search key.
func (o GetSslVpnClientCertsCertOutput) SslVpnServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) string { return v.SslVpnServerId }).(pulumi.StringOutput)
}

// The status of the client certificate. valid value:expiring-soon, normal, expired.
func (o GetSslVpnClientCertsCertOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnClientCertsCert) string { return v.Status }).(pulumi.StringOutput)
}

type GetSslVpnClientCertsCertArrayOutput struct{ *pulumi.OutputState }

func (GetSslVpnClientCertsCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSslVpnClientCertsCert)(nil)).Elem()
}

func (o GetSslVpnClientCertsCertArrayOutput) ToGetSslVpnClientCertsCertArrayOutput() GetSslVpnClientCertsCertArrayOutput {
	return o
}

func (o GetSslVpnClientCertsCertArrayOutput) ToGetSslVpnClientCertsCertArrayOutputWithContext(ctx context.Context) GetSslVpnClientCertsCertArrayOutput {
	return o
}

func (o GetSslVpnClientCertsCertArrayOutput) Index(i pulumi.IntInput) GetSslVpnClientCertsCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSslVpnClientCertsCert {
		return vs[0].([]GetSslVpnClientCertsCert)[vs[1].(int)]
	}).(GetSslVpnClientCertsCertOutput)
}

type GetSslVpnServersServer struct {
	// The encryption algorithm used.
	Cipher string `pulumi:"cipher"`
	// The IP address pool of the client.
	ClientIpPool string `pulumi:"clientIpPool"`
	// Whether to compress.
	Compress bool `pulumi:"compress"`
	// The number of current connections.
	Connections int `pulumi:"connections"`
	// The time of creation.
	CreateTime string `pulumi:"createTime"`
	// The ID of the SSL-VPN server.
	Id string `pulumi:"id"`
	// The public IP.
	InternetIp string `pulumi:"internetIp"`
	// The local subnet of the VPN connection.
	LocalSubnet string `pulumi:"localSubnet"`
	// The maximum number of connections.
	MaxConnections int `pulumi:"maxConnections"`
	// The name of the SSL-VPN server.
	Name string `pulumi:"name"`
	// The port used by the SSL-VPN server.
	Port int `pulumi:"port"`
	// The protocol used by the SSL-VPN server.
	Proto string `pulumi:"proto"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetSslVpnServersServerInput is an input type that accepts GetSslVpnServersServerArgs and GetSslVpnServersServerOutput values.
// You can construct a concrete instance of `GetSslVpnServersServerInput` via:
//
//	GetSslVpnServersServerArgs{...}
type GetSslVpnServersServerInput interface {
	pulumi.Input

	ToGetSslVpnServersServerOutput() GetSslVpnServersServerOutput
	ToGetSslVpnServersServerOutputWithContext(context.Context) GetSslVpnServersServerOutput
}

type GetSslVpnServersServerArgs struct {
	// The encryption algorithm used.
	Cipher pulumi.StringInput `pulumi:"cipher"`
	// The IP address pool of the client.
	ClientIpPool pulumi.StringInput `pulumi:"clientIpPool"`
	// Whether to compress.
	Compress pulumi.BoolInput `pulumi:"compress"`
	// The number of current connections.
	Connections pulumi.IntInput `pulumi:"connections"`
	// The time of creation.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the SSL-VPN server.
	Id pulumi.StringInput `pulumi:"id"`
	// The public IP.
	InternetIp pulumi.StringInput `pulumi:"internetIp"`
	// The local subnet of the VPN connection.
	LocalSubnet pulumi.StringInput `pulumi:"localSubnet"`
	// The maximum number of connections.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// The name of the SSL-VPN server.
	Name pulumi.StringInput `pulumi:"name"`
	// The port used by the SSL-VPN server.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used by the SSL-VPN server.
	Proto pulumi.StringInput `pulumi:"proto"`
	// Use the VPN gateway ID as the search key.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetSslVpnServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSslVpnServersServer)(nil)).Elem()
}

func (i GetSslVpnServersServerArgs) ToGetSslVpnServersServerOutput() GetSslVpnServersServerOutput {
	return i.ToGetSslVpnServersServerOutputWithContext(context.Background())
}

func (i GetSslVpnServersServerArgs) ToGetSslVpnServersServerOutputWithContext(ctx context.Context) GetSslVpnServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSslVpnServersServerOutput)
}

// GetSslVpnServersServerArrayInput is an input type that accepts GetSslVpnServersServerArray and GetSslVpnServersServerArrayOutput values.
// You can construct a concrete instance of `GetSslVpnServersServerArrayInput` via:
//
//	GetSslVpnServersServerArray{ GetSslVpnServersServerArgs{...} }
type GetSslVpnServersServerArrayInput interface {
	pulumi.Input

	ToGetSslVpnServersServerArrayOutput() GetSslVpnServersServerArrayOutput
	ToGetSslVpnServersServerArrayOutputWithContext(context.Context) GetSslVpnServersServerArrayOutput
}

type GetSslVpnServersServerArray []GetSslVpnServersServerInput

func (GetSslVpnServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSslVpnServersServer)(nil)).Elem()
}

func (i GetSslVpnServersServerArray) ToGetSslVpnServersServerArrayOutput() GetSslVpnServersServerArrayOutput {
	return i.ToGetSslVpnServersServerArrayOutputWithContext(context.Background())
}

func (i GetSslVpnServersServerArray) ToGetSslVpnServersServerArrayOutputWithContext(ctx context.Context) GetSslVpnServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSslVpnServersServerArrayOutput)
}

type GetSslVpnServersServerOutput struct{ *pulumi.OutputState }

func (GetSslVpnServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSslVpnServersServer)(nil)).Elem()
}

func (o GetSslVpnServersServerOutput) ToGetSslVpnServersServerOutput() GetSslVpnServersServerOutput {
	return o
}

func (o GetSslVpnServersServerOutput) ToGetSslVpnServersServerOutputWithContext(ctx context.Context) GetSslVpnServersServerOutput {
	return o
}

// The encryption algorithm used.
func (o GetSslVpnServersServerOutput) Cipher() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.Cipher }).(pulumi.StringOutput)
}

// The IP address pool of the client.
func (o GetSslVpnServersServerOutput) ClientIpPool() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.ClientIpPool }).(pulumi.StringOutput)
}

// Whether to compress.
func (o GetSslVpnServersServerOutput) Compress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) bool { return v.Compress }).(pulumi.BoolOutput)
}

// The number of current connections.
func (o GetSslVpnServersServerOutput) Connections() pulumi.IntOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) int { return v.Connections }).(pulumi.IntOutput)
}

// The time of creation.
func (o GetSslVpnServersServerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the SSL-VPN server.
func (o GetSslVpnServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The public IP.
func (o GetSslVpnServersServerOutput) InternetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.InternetIp }).(pulumi.StringOutput)
}

// The local subnet of the VPN connection.
func (o GetSslVpnServersServerOutput) LocalSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.LocalSubnet }).(pulumi.StringOutput)
}

// The maximum number of connections.
func (o GetSslVpnServersServerOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// The name of the SSL-VPN server.
func (o GetSslVpnServersServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.Name }).(pulumi.StringOutput)
}

// The port used by the SSL-VPN server.
func (o GetSslVpnServersServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used by the SSL-VPN server.
func (o GetSslVpnServersServerOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.Proto }).(pulumi.StringOutput)
}

// Use the VPN gateway ID as the search key.
func (o GetSslVpnServersServerOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSslVpnServersServer) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetSslVpnServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetSslVpnServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSslVpnServersServer)(nil)).Elem()
}

func (o GetSslVpnServersServerArrayOutput) ToGetSslVpnServersServerArrayOutput() GetSslVpnServersServerArrayOutput {
	return o
}

func (o GetSslVpnServersServerArrayOutput) ToGetSslVpnServersServerArrayOutputWithContext(ctx context.Context) GetSslVpnServersServerArrayOutput {
	return o
}

func (o GetSslVpnServersServerArrayOutput) Index(i pulumi.IntInput) GetSslVpnServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSslVpnServersServer {
		return vs[0].([]GetSslVpnServersServer)[vs[1].(int)]
	}).(GetSslVpnServersServerOutput)
}

type GetSwitchesVswitch struct {
	// The available ip address count of the VSwitch.
	AvailableIpAddressCount int `pulumi:"availableIpAddressCount"`
	// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
	CidrBlock string `pulumi:"cidrBlock"`
	// Time of creation.
	CreationTime string `pulumi:"creationTime"`
	// Description of the VSwitch.
	Description string `pulumi:"description"`
	// ID of the VSwitch.
	Id string `pulumi:"id"`
	// The IPv6 CIDR block of the switch.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// Indicate whether the VSwitch is created by the system.
	IsDefault bool `pulumi:"isDefault"`
	// Name of the VSwitch.
	Name string `pulumi:"name"`
	// The Id of resource group which VSWitch belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The route table ID of the VSwitch.
	RouteTableId string `pulumi:"routeTableId"`
	// The status of the VSwitch. Valid values: `Available` and `Pending`.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC that owns the VSwitch.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch.
	VswitchId string `pulumi:"vswitchId"`
	// The name of the VSwitch.
	VswitchName string `pulumi:"vswitchName"`
	// The availability zone of the VSwitch.
	ZoneId string `pulumi:"zoneId"`
}

// GetSwitchesVswitchInput is an input type that accepts GetSwitchesVswitchArgs and GetSwitchesVswitchOutput values.
// You can construct a concrete instance of `GetSwitchesVswitchInput` via:
//
//	GetSwitchesVswitchArgs{...}
type GetSwitchesVswitchInput interface {
	pulumi.Input

	ToGetSwitchesVswitchOutput() GetSwitchesVswitchOutput
	ToGetSwitchesVswitchOutputWithContext(context.Context) GetSwitchesVswitchOutput
}

type GetSwitchesVswitchArgs struct {
	// The available ip address count of the VSwitch.
	AvailableIpAddressCount pulumi.IntInput `pulumi:"availableIpAddressCount"`
	// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Time of creation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the VSwitch.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the VSwitch.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 CIDR block of the switch.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// Indicate whether the VSwitch is created by the system.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the VSwitch.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of resource group which VSWitch belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The route table ID of the VSwitch.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The status of the VSwitch. Valid values: `Available` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC that owns the VSwitch.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The name of the VSwitch.
	VswitchName pulumi.StringInput `pulumi:"vswitchName"`
	// The availability zone of the VSwitch.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetSwitchesVswitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchesVswitch)(nil)).Elem()
}

func (i GetSwitchesVswitchArgs) ToGetSwitchesVswitchOutput() GetSwitchesVswitchOutput {
	return i.ToGetSwitchesVswitchOutputWithContext(context.Background())
}

func (i GetSwitchesVswitchArgs) ToGetSwitchesVswitchOutputWithContext(ctx context.Context) GetSwitchesVswitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchesVswitchOutput)
}

// GetSwitchesVswitchArrayInput is an input type that accepts GetSwitchesVswitchArray and GetSwitchesVswitchArrayOutput values.
// You can construct a concrete instance of `GetSwitchesVswitchArrayInput` via:
//
//	GetSwitchesVswitchArray{ GetSwitchesVswitchArgs{...} }
type GetSwitchesVswitchArrayInput interface {
	pulumi.Input

	ToGetSwitchesVswitchArrayOutput() GetSwitchesVswitchArrayOutput
	ToGetSwitchesVswitchArrayOutputWithContext(context.Context) GetSwitchesVswitchArrayOutput
}

type GetSwitchesVswitchArray []GetSwitchesVswitchInput

func (GetSwitchesVswitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchesVswitch)(nil)).Elem()
}

func (i GetSwitchesVswitchArray) ToGetSwitchesVswitchArrayOutput() GetSwitchesVswitchArrayOutput {
	return i.ToGetSwitchesVswitchArrayOutputWithContext(context.Background())
}

func (i GetSwitchesVswitchArray) ToGetSwitchesVswitchArrayOutputWithContext(ctx context.Context) GetSwitchesVswitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchesVswitchArrayOutput)
}

type GetSwitchesVswitchOutput struct{ *pulumi.OutputState }

func (GetSwitchesVswitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchesVswitch)(nil)).Elem()
}

func (o GetSwitchesVswitchOutput) ToGetSwitchesVswitchOutput() GetSwitchesVswitchOutput {
	return o
}

func (o GetSwitchesVswitchOutput) ToGetSwitchesVswitchOutputWithContext(ctx context.Context) GetSwitchesVswitchOutput {
	return o
}

// The available ip address count of the VSwitch.
func (o GetSwitchesVswitchOutput) AvailableIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) int { return v.AvailableIpAddressCount }).(pulumi.IntOutput)
}

// Filter results by a specific CIDR block. For example: "172.16.0.0/12".
func (o GetSwitchesVswitchOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Time of creation.
func (o GetSwitchesVswitchOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the VSwitch.
func (o GetSwitchesVswitchOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the VSwitch.
func (o GetSwitchesVswitchOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the switch.
func (o GetSwitchesVswitchOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// Indicate whether the VSwitch is created by the system.
func (o GetSwitchesVswitchOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the VSwitch.
func (o GetSwitchesVswitchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of resource group which VSWitch belongs.
func (o GetSwitchesVswitchOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The route table ID of the VSwitch.
func (o GetSwitchesVswitchOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The status of the VSwitch. Valid values: `Available` and `Pending`.
func (o GetSwitchesVswitchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetSwitchesVswitchOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC that owns the VSwitch.
func (o GetSwitchesVswitchOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch.
func (o GetSwitchesVswitchOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The name of the VSwitch.
func (o GetSwitchesVswitchOutput) VswitchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.VswitchName }).(pulumi.StringOutput)
}

// The availability zone of the VSwitch.
func (o GetSwitchesVswitchOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSwitchesVswitch) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetSwitchesVswitchArrayOutput struct{ *pulumi.OutputState }

func (GetSwitchesVswitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchesVswitch)(nil)).Elem()
}

func (o GetSwitchesVswitchArrayOutput) ToGetSwitchesVswitchArrayOutput() GetSwitchesVswitchArrayOutput {
	return o
}

func (o GetSwitchesVswitchArrayOutput) ToGetSwitchesVswitchArrayOutputWithContext(ctx context.Context) GetSwitchesVswitchArrayOutput {
	return o
}

func (o GetSwitchesVswitchArrayOutput) Index(i pulumi.IntInput) GetSwitchesVswitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSwitchesVswitch {
		return vs[0].([]GetSwitchesVswitch)[vs[1].(int)]
	}).(GetSwitchesVswitchOutput)
}

type GetTrafficMirrorFilterEgressRulesRule struct {
	// The destination CIDR block of the outbound traffic.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of the outbound traffic.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The ID of the Traffic Mirror Filter Egress Rule.
	Id string `pulumi:"id"`
	// The priority of the outbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
	Priority int `pulumi:"priority"`
	// The transport protocol used by outbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
	Protocol string `pulumi:"protocol"`
	// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
	RuleAction string `pulumi:"ruleAction"`
	// The source CIDR block of the outbound traffic.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of the outbound traffic.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status string `pulumi:"status"`
	// The ID of the filter associated with the outbound rule.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The first ID of the resource.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
}

// GetTrafficMirrorFilterEgressRulesRuleInput is an input type that accepts GetTrafficMirrorFilterEgressRulesRuleArgs and GetTrafficMirrorFilterEgressRulesRuleOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterEgressRulesRuleInput` via:
//
//	GetTrafficMirrorFilterEgressRulesRuleArgs{...}
type GetTrafficMirrorFilterEgressRulesRuleInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterEgressRulesRuleOutput() GetTrafficMirrorFilterEgressRulesRuleOutput
	ToGetTrafficMirrorFilterEgressRulesRuleOutputWithContext(context.Context) GetTrafficMirrorFilterEgressRulesRuleOutput
}

type GetTrafficMirrorFilterEgressRulesRuleArgs struct {
	// The destination CIDR block of the outbound traffic.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of the outbound traffic.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The ID of the Traffic Mirror Filter Egress Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The priority of the outbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The transport protocol used by outbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
	RuleAction pulumi.StringInput `pulumi:"ruleAction"`
	// The source CIDR block of the outbound traffic.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of the outbound traffic.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the filter associated with the outbound rule.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The first ID of the resource.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
}

func (GetTrafficMirrorFilterEgressRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterEgressRulesRuleArgs) ToGetTrafficMirrorFilterEgressRulesRuleOutput() GetTrafficMirrorFilterEgressRulesRuleOutput {
	return i.ToGetTrafficMirrorFilterEgressRulesRuleOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterEgressRulesRuleArgs) ToGetTrafficMirrorFilterEgressRulesRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterEgressRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterEgressRulesRuleOutput)
}

// GetTrafficMirrorFilterEgressRulesRuleArrayInput is an input type that accepts GetTrafficMirrorFilterEgressRulesRuleArray and GetTrafficMirrorFilterEgressRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterEgressRulesRuleArrayInput` via:
//
//	GetTrafficMirrorFilterEgressRulesRuleArray{ GetTrafficMirrorFilterEgressRulesRuleArgs{...} }
type GetTrafficMirrorFilterEgressRulesRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterEgressRulesRuleArrayOutput() GetTrafficMirrorFilterEgressRulesRuleArrayOutput
	ToGetTrafficMirrorFilterEgressRulesRuleArrayOutputWithContext(context.Context) GetTrafficMirrorFilterEgressRulesRuleArrayOutput
}

type GetTrafficMirrorFilterEgressRulesRuleArray []GetTrafficMirrorFilterEgressRulesRuleInput

func (GetTrafficMirrorFilterEgressRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterEgressRulesRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterEgressRulesRuleArray) ToGetTrafficMirrorFilterEgressRulesRuleArrayOutput() GetTrafficMirrorFilterEgressRulesRuleArrayOutput {
	return i.ToGetTrafficMirrorFilterEgressRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterEgressRulesRuleArray) ToGetTrafficMirrorFilterEgressRulesRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterEgressRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterEgressRulesRuleArrayOutput)
}

type GetTrafficMirrorFilterEgressRulesRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterEgressRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterEgressRulesRuleOutput) ToGetTrafficMirrorFilterEgressRulesRuleOutput() GetTrafficMirrorFilterEgressRulesRuleOutput {
	return o
}

func (o GetTrafficMirrorFilterEgressRulesRuleOutput) ToGetTrafficMirrorFilterEgressRulesRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterEgressRulesRuleOutput {
	return o
}

// The destination CIDR block of the outbound traffic.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of the outbound traffic.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The ID of the Traffic Mirror Filter Egress Rule.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The priority of the outbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The transport protocol used by outbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.RuleAction }).(pulumi.StringOutput)
}

// The source CIDR block of the outbound traffic.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of the outbound traffic.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the filter associated with the outbound rule.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetTrafficMirrorFilterEgressRulesRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterEgressRulesRule) string { return v.TrafficMirrorFilterRuleId }).(pulumi.StringOutput)
}

type GetTrafficMirrorFilterEgressRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterEgressRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterEgressRulesRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterEgressRulesRuleArrayOutput) ToGetTrafficMirrorFilterEgressRulesRuleArrayOutput() GetTrafficMirrorFilterEgressRulesRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterEgressRulesRuleArrayOutput) ToGetTrafficMirrorFilterEgressRulesRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterEgressRulesRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterEgressRulesRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFilterEgressRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFilterEgressRulesRule {
		return vs[0].([]GetTrafficMirrorFilterEgressRulesRule)[vs[1].(int)]
	}).(GetTrafficMirrorFilterEgressRulesRuleOutput)
}

type GetTrafficMirrorFilterIngressRulesRule struct {
	// The destination CIDR block of the inbound traffic.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of the inbound traffic.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The ID of the Traffic Mirror Filter Egress Rule.
	Id string `pulumi:"id"`
	// The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
	Priority int `pulumi:"priority"`
	// The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
	Protocol string `pulumi:"protocol"`
	// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
	RuleAction string `pulumi:"ruleAction"`
	// The source CIDR block of the inbound traffic.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of the inbound traffic.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status string `pulumi:"status"`
	// The ID of the filter associated with the inbound rule.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The first ID of the resource.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
}

// GetTrafficMirrorFilterIngressRulesRuleInput is an input type that accepts GetTrafficMirrorFilterIngressRulesRuleArgs and GetTrafficMirrorFilterIngressRulesRuleOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterIngressRulesRuleInput` via:
//
//	GetTrafficMirrorFilterIngressRulesRuleArgs{...}
type GetTrafficMirrorFilterIngressRulesRuleInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterIngressRulesRuleOutput() GetTrafficMirrorFilterIngressRulesRuleOutput
	ToGetTrafficMirrorFilterIngressRulesRuleOutputWithContext(context.Context) GetTrafficMirrorFilterIngressRulesRuleOutput
}

type GetTrafficMirrorFilterIngressRulesRuleArgs struct {
	// The destination CIDR block of the inbound traffic.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of the inbound traffic.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The ID of the Traffic Mirror Filter Egress Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
	RuleAction pulumi.StringInput `pulumi:"ruleAction"`
	// The source CIDR block of the inbound traffic.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of the inbound traffic.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the filter associated with the inbound rule.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The first ID of the resource.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
}

func (GetTrafficMirrorFilterIngressRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterIngressRulesRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterIngressRulesRuleArgs) ToGetTrafficMirrorFilterIngressRulesRuleOutput() GetTrafficMirrorFilterIngressRulesRuleOutput {
	return i.ToGetTrafficMirrorFilterIngressRulesRuleOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterIngressRulesRuleArgs) ToGetTrafficMirrorFilterIngressRulesRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterIngressRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterIngressRulesRuleOutput)
}

// GetTrafficMirrorFilterIngressRulesRuleArrayInput is an input type that accepts GetTrafficMirrorFilterIngressRulesRuleArray and GetTrafficMirrorFilterIngressRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterIngressRulesRuleArrayInput` via:
//
//	GetTrafficMirrorFilterIngressRulesRuleArray{ GetTrafficMirrorFilterIngressRulesRuleArgs{...} }
type GetTrafficMirrorFilterIngressRulesRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterIngressRulesRuleArrayOutput() GetTrafficMirrorFilterIngressRulesRuleArrayOutput
	ToGetTrafficMirrorFilterIngressRulesRuleArrayOutputWithContext(context.Context) GetTrafficMirrorFilterIngressRulesRuleArrayOutput
}

type GetTrafficMirrorFilterIngressRulesRuleArray []GetTrafficMirrorFilterIngressRulesRuleInput

func (GetTrafficMirrorFilterIngressRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterIngressRulesRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterIngressRulesRuleArray) ToGetTrafficMirrorFilterIngressRulesRuleArrayOutput() GetTrafficMirrorFilterIngressRulesRuleArrayOutput {
	return i.ToGetTrafficMirrorFilterIngressRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterIngressRulesRuleArray) ToGetTrafficMirrorFilterIngressRulesRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterIngressRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterIngressRulesRuleArrayOutput)
}

type GetTrafficMirrorFilterIngressRulesRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterIngressRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterIngressRulesRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterIngressRulesRuleOutput) ToGetTrafficMirrorFilterIngressRulesRuleOutput() GetTrafficMirrorFilterIngressRulesRuleOutput {
	return o
}

func (o GetTrafficMirrorFilterIngressRulesRuleOutput) ToGetTrafficMirrorFilterIngressRulesRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterIngressRulesRuleOutput {
	return o
}

// The destination CIDR block of the inbound traffic.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of the inbound traffic.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The ID of the Traffic Mirror Filter Egress Rule.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.RuleAction }).(pulumi.StringOutput)
}

// The source CIDR block of the inbound traffic.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of the inbound traffic.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of the resource. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the filter associated with the inbound rule.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetTrafficMirrorFilterIngressRulesRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterIngressRulesRule) string { return v.TrafficMirrorFilterRuleId }).(pulumi.StringOutput)
}

type GetTrafficMirrorFilterIngressRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterIngressRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterIngressRulesRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterIngressRulesRuleArrayOutput) ToGetTrafficMirrorFilterIngressRulesRuleArrayOutput() GetTrafficMirrorFilterIngressRulesRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterIngressRulesRuleArrayOutput) ToGetTrafficMirrorFilterIngressRulesRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterIngressRulesRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterIngressRulesRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFilterIngressRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFilterIngressRulesRule {
		return vs[0].([]GetTrafficMirrorFilterIngressRulesRule)[vs[1].(int)]
	}).(GetTrafficMirrorFilterIngressRulesRuleOutput)
}

type GetTrafficMirrorFiltersFilter struct {
	// The ID of the Traffic Mirror Filter.
	Id string `pulumi:"id"`
	// The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
	Status string `pulumi:"status"`
	// The description of the filter.
	TrafficMirrorFilterDescription string `pulumi:"trafficMirrorFilterDescription"`
	// The ID of the filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The name of the filter.
	TrafficMirrorFilterName string `pulumi:"trafficMirrorFilterName"`
}

// GetTrafficMirrorFiltersFilterInput is an input type that accepts GetTrafficMirrorFiltersFilterArgs and GetTrafficMirrorFiltersFilterOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersFilterInput` via:
//
//	GetTrafficMirrorFiltersFilterArgs{...}
type GetTrafficMirrorFiltersFilterInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersFilterOutput() GetTrafficMirrorFiltersFilterOutput
	ToGetTrafficMirrorFiltersFilterOutputWithContext(context.Context) GetTrafficMirrorFiltersFilterOutput
}

type GetTrafficMirrorFiltersFilterArgs struct {
	// The ID of the Traffic Mirror Filter.
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
	Status pulumi.StringInput `pulumi:"status"`
	// The description of the filter.
	TrafficMirrorFilterDescription pulumi.StringInput `pulumi:"trafficMirrorFilterDescription"`
	// The ID of the filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The name of the filter.
	TrafficMirrorFilterName pulumi.StringInput `pulumi:"trafficMirrorFilterName"`
}

func (GetTrafficMirrorFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersFilter)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersFilterArgs) ToGetTrafficMirrorFiltersFilterOutput() GetTrafficMirrorFiltersFilterOutput {
	return i.ToGetTrafficMirrorFiltersFilterOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersFilterArgs) ToGetTrafficMirrorFiltersFilterOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersFilterOutput)
}

// GetTrafficMirrorFiltersFilterArrayInput is an input type that accepts GetTrafficMirrorFiltersFilterArray and GetTrafficMirrorFiltersFilterArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersFilterArrayInput` via:
//
//	GetTrafficMirrorFiltersFilterArray{ GetTrafficMirrorFiltersFilterArgs{...} }
type GetTrafficMirrorFiltersFilterArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersFilterArrayOutput() GetTrafficMirrorFiltersFilterArrayOutput
	ToGetTrafficMirrorFiltersFilterArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersFilterArrayOutput
}

type GetTrafficMirrorFiltersFilterArray []GetTrafficMirrorFiltersFilterInput

func (GetTrafficMirrorFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersFilter)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersFilterArray) ToGetTrafficMirrorFiltersFilterArrayOutput() GetTrafficMirrorFiltersFilterArrayOutput {
	return i.ToGetTrafficMirrorFiltersFilterArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersFilterArray) ToGetTrafficMirrorFiltersFilterArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersFilterArrayOutput)
}

type GetTrafficMirrorFiltersFilterOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersFilter)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersFilterOutput) ToGetTrafficMirrorFiltersFilterOutput() GetTrafficMirrorFiltersFilterOutput {
	return o
}

func (o GetTrafficMirrorFiltersFilterOutput) ToGetTrafficMirrorFiltersFilterOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersFilterOutput {
	return o
}

// The ID of the Traffic Mirror Filter.
func (o GetTrafficMirrorFiltersFilterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersFilter) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
func (o GetTrafficMirrorFiltersFilterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersFilter) string { return v.Status }).(pulumi.StringOutput)
}

// The description of the filter.
func (o GetTrafficMirrorFiltersFilterOutput) TrafficMirrorFilterDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersFilter) string { return v.TrafficMirrorFilterDescription }).(pulumi.StringOutput)
}

// The ID of the filter.
func (o GetTrafficMirrorFiltersFilterOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersFilter) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The name of the filter.
func (o GetTrafficMirrorFiltersFilterOutput) TrafficMirrorFilterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersFilter) string { return v.TrafficMirrorFilterName }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersFilter)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersFilterArrayOutput) ToGetTrafficMirrorFiltersFilterArrayOutput() GetTrafficMirrorFiltersFilterArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersFilterArrayOutput) ToGetTrafficMirrorFiltersFilterArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersFilterArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersFilterArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersFilter {
		return vs[0].([]GetTrafficMirrorFiltersFilter)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersFilterOutput)
}

type GetTrafficMirrorSessionsSession struct {
	// Indicates whether traffic mirror sessions are enabled. default to `false`.
	Enabled bool `pulumi:"enabled"`
	// The ID of the Traffic Mirror Session.
	Id string `pulumi:"id"`
	// The maximum transmission unit (MTU).
	PacketLength int `pulumi:"packetLength"`
	// The priority of the traffic mirror session. A smaller value indicates a higher priority.
	Priority int `pulumi:"priority"`
	// The state of the traffic mirror session. Valid values: `Creating`, `Created`, `Modifying` and `Deleting`.
	Status string `pulumi:"status"`
	// The ID of the filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The state of the traffic mirror session. Valid values: `Normal` or `FinancialLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments.
	TrafficMirrorSessionBusinessStatus string `pulumi:"trafficMirrorSessionBusinessStatus"`
	// The description of the traffic mirror session.
	TrafficMirrorSessionDescription string `pulumi:"trafficMirrorSessionDescription"`
	// The first ID of the resource.
	TrafficMirrorSessionId string `pulumi:"trafficMirrorSessionId"`
	// The name of the traffic mirror session.
	TrafficMirrorSessionName string `pulumi:"trafficMirrorSessionName"`
	// The ID of the mirror source.
	TrafficMirrorSourceIds []string `pulumi:"trafficMirrorSourceIds"`
	// The ID of the mirror destination. You can specify only an ENI or a Server Load Balancer (SLB) instance as a mirror destination.
	TrafficMirrorTargetId string `pulumi:"trafficMirrorTargetId"`
	// The type of the mirror destination. Valid values: `NetworkInterface` or `SLB`. `NetworkInterface`: an ENI. `SLB`: an internal-facing SLB instance
	TrafficMirrorTargetType string `pulumi:"trafficMirrorTargetType"`
	// You can specify VNIs to distinguish different mirrored traffic.
	VirtualNetworkId int `pulumi:"virtualNetworkId"`
}

// GetTrafficMirrorSessionsSessionInput is an input type that accepts GetTrafficMirrorSessionsSessionArgs and GetTrafficMirrorSessionsSessionOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsSessionInput` via:
//
//	GetTrafficMirrorSessionsSessionArgs{...}
type GetTrafficMirrorSessionsSessionInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsSessionOutput() GetTrafficMirrorSessionsSessionOutput
	ToGetTrafficMirrorSessionsSessionOutputWithContext(context.Context) GetTrafficMirrorSessionsSessionOutput
}

type GetTrafficMirrorSessionsSessionArgs struct {
	// Indicates whether traffic mirror sessions are enabled. default to `false`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the Traffic Mirror Session.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum transmission unit (MTU).
	PacketLength pulumi.IntInput `pulumi:"packetLength"`
	// The priority of the traffic mirror session. A smaller value indicates a higher priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The state of the traffic mirror session. Valid values: `Creating`, `Created`, `Modifying` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The state of the traffic mirror session. Valid values: `Normal` or `FinancialLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments.
	TrafficMirrorSessionBusinessStatus pulumi.StringInput `pulumi:"trafficMirrorSessionBusinessStatus"`
	// The description of the traffic mirror session.
	TrafficMirrorSessionDescription pulumi.StringInput `pulumi:"trafficMirrorSessionDescription"`
	// The first ID of the resource.
	TrafficMirrorSessionId pulumi.StringInput `pulumi:"trafficMirrorSessionId"`
	// The name of the traffic mirror session.
	TrafficMirrorSessionName pulumi.StringInput `pulumi:"trafficMirrorSessionName"`
	// The ID of the mirror source.
	TrafficMirrorSourceIds pulumi.StringArrayInput `pulumi:"trafficMirrorSourceIds"`
	// The ID of the mirror destination. You can specify only an ENI or a Server Load Balancer (SLB) instance as a mirror destination.
	TrafficMirrorTargetId pulumi.StringInput `pulumi:"trafficMirrorTargetId"`
	// The type of the mirror destination. Valid values: `NetworkInterface` or `SLB`. `NetworkInterface`: an ENI. `SLB`: an internal-facing SLB instance
	TrafficMirrorTargetType pulumi.StringInput `pulumi:"trafficMirrorTargetType"`
	// You can specify VNIs to distinguish different mirrored traffic.
	VirtualNetworkId pulumi.IntInput `pulumi:"virtualNetworkId"`
}

func (GetTrafficMirrorSessionsSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsSession)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsSessionArgs) ToGetTrafficMirrorSessionsSessionOutput() GetTrafficMirrorSessionsSessionOutput {
	return i.ToGetTrafficMirrorSessionsSessionOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsSessionArgs) ToGetTrafficMirrorSessionsSessionOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsSessionOutput)
}

// GetTrafficMirrorSessionsSessionArrayInput is an input type that accepts GetTrafficMirrorSessionsSessionArray and GetTrafficMirrorSessionsSessionArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsSessionArrayInput` via:
//
//	GetTrafficMirrorSessionsSessionArray{ GetTrafficMirrorSessionsSessionArgs{...} }
type GetTrafficMirrorSessionsSessionArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsSessionArrayOutput() GetTrafficMirrorSessionsSessionArrayOutput
	ToGetTrafficMirrorSessionsSessionArrayOutputWithContext(context.Context) GetTrafficMirrorSessionsSessionArrayOutput
}

type GetTrafficMirrorSessionsSessionArray []GetTrafficMirrorSessionsSessionInput

func (GetTrafficMirrorSessionsSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsSession)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsSessionArray) ToGetTrafficMirrorSessionsSessionArrayOutput() GetTrafficMirrorSessionsSessionArrayOutput {
	return i.ToGetTrafficMirrorSessionsSessionArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsSessionArray) ToGetTrafficMirrorSessionsSessionArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsSessionArrayOutput)
}

type GetTrafficMirrorSessionsSessionOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsSession)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsSessionOutput) ToGetTrafficMirrorSessionsSessionOutput() GetTrafficMirrorSessionsSessionOutput {
	return o
}

func (o GetTrafficMirrorSessionsSessionOutput) ToGetTrafficMirrorSessionsSessionOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsSessionOutput {
	return o
}

// Indicates whether traffic mirror sessions are enabled. default to `false`.
func (o GetTrafficMirrorSessionsSessionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the Traffic Mirror Session.
func (o GetTrafficMirrorSessionsSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum transmission unit (MTU).
func (o GetTrafficMirrorSessionsSessionOutput) PacketLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) int { return v.PacketLength }).(pulumi.IntOutput)
}

// The priority of the traffic mirror session. A smaller value indicates a higher priority.
func (o GetTrafficMirrorSessionsSessionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) int { return v.Priority }).(pulumi.IntOutput)
}

// The state of the traffic mirror session. Valid values: `Creating`, `Created`, `Modifying` and `Deleting`.
func (o GetTrafficMirrorSessionsSessionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the filter.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The state of the traffic mirror session. Valid values: `Normal` or `FinancialLocked`. `Normal`: working as expected. `FinancialLocked`: locked due to overdue payments.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorSessionBusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorSessionBusinessStatus }).(pulumi.StringOutput)
}

// The description of the traffic mirror session.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorSessionDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorSessionDescription }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorSessionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorSessionId }).(pulumi.StringOutput)
}

// The name of the traffic mirror session.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorSessionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorSessionName }).(pulumi.StringOutput)
}

// The ID of the mirror source.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) []string { return v.TrafficMirrorSourceIds }).(pulumi.StringArrayOutput)
}

// The ID of the mirror destination. You can specify only an ENI or a Server Load Balancer (SLB) instance as a mirror destination.
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorTargetId }).(pulumi.StringOutput)
}

// The type of the mirror destination. Valid values: `NetworkInterface` or `SLB`. `NetworkInterface`: an ENI. `SLB`: an internal-facing SLB instance
func (o GetTrafficMirrorSessionsSessionOutput) TrafficMirrorTargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) string { return v.TrafficMirrorTargetType }).(pulumi.StringOutput)
}

// You can specify VNIs to distinguish different mirrored traffic.
func (o GetTrafficMirrorSessionsSessionOutput) VirtualNetworkId() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsSession) int { return v.VirtualNetworkId }).(pulumi.IntOutput)
}

type GetTrafficMirrorSessionsSessionArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsSession)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsSessionArrayOutput) ToGetTrafficMirrorSessionsSessionArrayOutput() GetTrafficMirrorSessionsSessionArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsSessionArrayOutput) ToGetTrafficMirrorSessionsSessionArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsSessionArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsSessionArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorSessionsSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorSessionsSession {
		return vs[0].([]GetTrafficMirrorSessionsSession)[vs[1].(int)]
	}).(GetTrafficMirrorSessionsSessionOutput)
}

type GetVpcFlowLogsLog struct {
	// The Description of flow log.
	Description string `pulumi:"description"`
	// The flow log ID.
	FlowLogId string `pulumi:"flowLogId"`
	// The flow log name.
	FlowLogName string `pulumi:"flowLogName"`
	// The ID of the Flow Log.
	Id string `pulumi:"id"`
	// The log store name.
	LogStoreName string `pulumi:"logStoreName"`
	// The project name.
	ProjectName string `pulumi:"projectName"`
	// The resource id.
	ResourceId string `pulumi:"resourceId"`
	// The resource type.
	ResourceType string `pulumi:"resourceType"`
	// The status of flow log.
	Status string `pulumi:"status"`
	// The traffic type.
	TrafficType string `pulumi:"trafficType"`
}

// GetVpcFlowLogsLogInput is an input type that accepts GetVpcFlowLogsLogArgs and GetVpcFlowLogsLogOutput values.
// You can construct a concrete instance of `GetVpcFlowLogsLogInput` via:
//
//	GetVpcFlowLogsLogArgs{...}
type GetVpcFlowLogsLogInput interface {
	pulumi.Input

	ToGetVpcFlowLogsLogOutput() GetVpcFlowLogsLogOutput
	ToGetVpcFlowLogsLogOutputWithContext(context.Context) GetVpcFlowLogsLogOutput
}

type GetVpcFlowLogsLogArgs struct {
	// The Description of flow log.
	Description pulumi.StringInput `pulumi:"description"`
	// The flow log ID.
	FlowLogId pulumi.StringInput `pulumi:"flowLogId"`
	// The flow log name.
	FlowLogName pulumi.StringInput `pulumi:"flowLogName"`
	// The ID of the Flow Log.
	Id pulumi.StringInput `pulumi:"id"`
	// The log store name.
	LogStoreName pulumi.StringInput `pulumi:"logStoreName"`
	// The project name.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The resource id.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The resource type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of flow log.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic type.
	TrafficType pulumi.StringInput `pulumi:"trafficType"`
}

func (GetVpcFlowLogsLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFlowLogsLog)(nil)).Elem()
}

func (i GetVpcFlowLogsLogArgs) ToGetVpcFlowLogsLogOutput() GetVpcFlowLogsLogOutput {
	return i.ToGetVpcFlowLogsLogOutputWithContext(context.Background())
}

func (i GetVpcFlowLogsLogArgs) ToGetVpcFlowLogsLogOutputWithContext(ctx context.Context) GetVpcFlowLogsLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFlowLogsLogOutput)
}

// GetVpcFlowLogsLogArrayInput is an input type that accepts GetVpcFlowLogsLogArray and GetVpcFlowLogsLogArrayOutput values.
// You can construct a concrete instance of `GetVpcFlowLogsLogArrayInput` via:
//
//	GetVpcFlowLogsLogArray{ GetVpcFlowLogsLogArgs{...} }
type GetVpcFlowLogsLogArrayInput interface {
	pulumi.Input

	ToGetVpcFlowLogsLogArrayOutput() GetVpcFlowLogsLogArrayOutput
	ToGetVpcFlowLogsLogArrayOutputWithContext(context.Context) GetVpcFlowLogsLogArrayOutput
}

type GetVpcFlowLogsLogArray []GetVpcFlowLogsLogInput

func (GetVpcFlowLogsLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFlowLogsLog)(nil)).Elem()
}

func (i GetVpcFlowLogsLogArray) ToGetVpcFlowLogsLogArrayOutput() GetVpcFlowLogsLogArrayOutput {
	return i.ToGetVpcFlowLogsLogArrayOutputWithContext(context.Background())
}

func (i GetVpcFlowLogsLogArray) ToGetVpcFlowLogsLogArrayOutputWithContext(ctx context.Context) GetVpcFlowLogsLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFlowLogsLogArrayOutput)
}

type GetVpcFlowLogsLogOutput struct{ *pulumi.OutputState }

func (GetVpcFlowLogsLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFlowLogsLog)(nil)).Elem()
}

func (o GetVpcFlowLogsLogOutput) ToGetVpcFlowLogsLogOutput() GetVpcFlowLogsLogOutput {
	return o
}

func (o GetVpcFlowLogsLogOutput) ToGetVpcFlowLogsLogOutputWithContext(ctx context.Context) GetVpcFlowLogsLogOutput {
	return o
}

// The Description of flow log.
func (o GetVpcFlowLogsLogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.Description }).(pulumi.StringOutput)
}

// The flow log ID.
func (o GetVpcFlowLogsLogOutput) FlowLogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.FlowLogId }).(pulumi.StringOutput)
}

// The flow log name.
func (o GetVpcFlowLogsLogOutput) FlowLogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.FlowLogName }).(pulumi.StringOutput)
}

// The ID of the Flow Log.
func (o GetVpcFlowLogsLogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.Id }).(pulumi.StringOutput)
}

// The log store name.
func (o GetVpcFlowLogsLogOutput) LogStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.LogStoreName }).(pulumi.StringOutput)
}

// The project name.
func (o GetVpcFlowLogsLogOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The resource id.
func (o GetVpcFlowLogsLogOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource type.
func (o GetVpcFlowLogsLogOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of flow log.
func (o GetVpcFlowLogsLogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic type.
func (o GetVpcFlowLogsLogOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFlowLogsLog) string { return v.TrafficType }).(pulumi.StringOutput)
}

type GetVpcFlowLogsLogArrayOutput struct{ *pulumi.OutputState }

func (GetVpcFlowLogsLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFlowLogsLog)(nil)).Elem()
}

func (o GetVpcFlowLogsLogArrayOutput) ToGetVpcFlowLogsLogArrayOutput() GetVpcFlowLogsLogArrayOutput {
	return o
}

func (o GetVpcFlowLogsLogArrayOutput) ToGetVpcFlowLogsLogArrayOutputWithContext(ctx context.Context) GetVpcFlowLogsLogArrayOutput {
	return o
}

func (o GetVpcFlowLogsLogArrayOutput) Index(i pulumi.IntInput) GetVpcFlowLogsLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcFlowLogsLog {
		return vs[0].([]GetVpcFlowLogsLog)[vs[1].(int)]
	}).(GetVpcFlowLogsLogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionsSetAssociateVpcInput)(nil)).Elem(), DhcpOptionsSetAssociateVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DhcpOptionsSetAssociateVpcArrayInput)(nil)).Elem(), DhcpOptionsSetAssociateVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclAttachmentResourceInput)(nil)).Elem(), NetworkAclAttachmentResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclAttachmentResourceArrayInput)(nil)).Elem(), NetworkAclAttachmentResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryInput)(nil)).Elem(), NetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryArrayInput)(nil)).Elem(), NetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesEgressInput)(nil)).Elem(), NetworkAclEntriesEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesEgressArrayInput)(nil)).Elem(), NetworkAclEntriesEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesIngressInput)(nil)).Elem(), NetworkAclEntriesIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesIngressArrayInput)(nil)).Elem(), NetworkAclEntriesIngressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryInput)(nil)).Elem(), NetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryArrayInput)(nil)).Elem(), NetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclResourceInput)(nil)).Elem(), NetworkAclResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclResourceArrayInput)(nil)).Elem(), NetworkAclResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListEntryInput)(nil)).Elem(), PrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListEntryArrayInput)(nil)).Elem(), PrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpGroupsGroupInput)(nil)).Elem(), GetBgpGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpGroupsGroupArrayInput)(nil)).Elem(), GetBgpGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetworksNetworkInput)(nil)).Elem(), GetBgpNetworksNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpNetworksNetworkArrayInput)(nil)).Elem(), GetBgpNetworksNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpPeersPeerInput)(nil)).Elem(), GetBgpPeersPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBgpPeersPeerArrayInput)(nil)).Elem(), GetBgpPeersPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommonBandwidthPackagesPackageInput)(nil)).Elem(), GetCommonBandwidthPackagesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommonBandwidthPackagesPackageArrayInput)(nil)).Elem(), GetCommonBandwidthPackagesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommonBandwidthPackagesPackagePublicIpAddressInput)(nil)).Elem(), GetCommonBandwidthPackagesPackagePublicIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommonBandwidthPackagesPackagePublicIpAddressArrayInput)(nil)).Elem(), GetCommonBandwidthPackagesPackagePublicIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsSetsSetInput)(nil)).Elem(), GetDhcpOptionsSetsSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDhcpOptionsSetsSetArrayInput)(nil)).Elem(), GetDhcpOptionsSetsSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnhancedNatAvailableZonesZoneInput)(nil)).Elem(), GetEnhancedNatAvailableZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnhancedNatAvailableZonesZoneArrayInput)(nil)).Elem(), GetEnhancedNatAvailableZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardEntriesEntryInput)(nil)).Elem(), GetForwardEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardEntriesEntryArrayInput)(nil)).Elem(), GetForwardEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHavipsHavipInput)(nil)).Elem(), GetHavipsHavipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHavipsHavipArrayInput)(nil)).Elem(), GetHavipsHavipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerInput)(nil)).Elem(), GetIpsecServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerArrayInput)(nil)).Elem(), GetIpsecServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerIkeConfigInput)(nil)).Elem(), GetIpsecServersServerIkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerIkeConfigArrayInput)(nil)).Elem(), GetIpsecServersServerIkeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerIpsecConfigInput)(nil)).Elem(), GetIpsecServersServerIpsecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsecServersServerIpsecConfigArrayInput)(nil)).Elem(), GetIpsecServersServerIpsecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv4GatewaysGatewayInput)(nil)).Elem(), GetIpv4GatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv4GatewaysGatewayArrayInput)(nil)).Elem(), GetIpv4GatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressesAddressInput)(nil)).Elem(), GetIpv6AddressesAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressesAddressArrayInput)(nil)).Elem(), GetIpv6AddressesAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6EgressRulesRuleInput)(nil)).Elem(), GetIpv6EgressRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6EgressRulesRuleArrayInput)(nil)).Elem(), GetIpv6EgressRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6GatewaysGatewayInput)(nil)).Elem(), GetIpv6GatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6GatewaysGatewayArrayInput)(nil)).Elem(), GetIpv6GatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6InternetBandwidthsBandwidthInput)(nil)).Elem(), GetIpv6InternetBandwidthsBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6InternetBandwidthsBandwidthArrayInput)(nil)).Elem(), GetIpv6InternetBandwidthsBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatGatewaysGatewayInput)(nil)).Elem(), GetNatGatewaysGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatGatewaysGatewayArrayInput)(nil)).Elem(), GetNatGatewaysGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatIpCidrsCidrInput)(nil)).Elem(), GetNatIpCidrsCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatIpCidrsCidrArrayInput)(nil)).Elem(), GetNatIpCidrsCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatIpsIpInput)(nil)).Elem(), GetNatIpsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatIpsIpArrayInput)(nil)).Elem(), GetNatIpsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclInput)(nil)).Elem(), GetNetworkAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclArrayInput)(nil)).Elem(), GetNetworkAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclEgressAclEntryInput)(nil)).Elem(), GetNetworkAclsAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclEgressAclEntryArrayInput)(nil)).Elem(), GetNetworkAclsAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclIngressAclEntryInput)(nil)).Elem(), GetNetworkAclsAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclIngressAclEntryArrayInput)(nil)).Elem(), GetNetworkAclsAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclResourceInput)(nil)).Elem(), GetNetworkAclsAclResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsAclResourceArrayInput)(nil)).Elem(), GetNetworkAclsAclResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksVpcInput)(nil)).Elem(), GetNetworksVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksVpcArrayInput)(nil)).Elem(), GetNetworksVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPbrRouteEntriesEntryInput)(nil)).Elem(), GetPbrRouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPbrRouteEntriesEntryArrayInput)(nil)).Elem(), GetPbrRouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeerConnectionsConnectionInput)(nil)).Elem(), GetPeerConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeerConnectionsConnectionArrayInput)(nil)).Elem(), GetPeerConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsListInput)(nil)).Elem(), GetPrefixListsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsListArrayInput)(nil)).Elem(), GetPrefixListsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsListEntryInput)(nil)).Elem(), GetPrefixListsListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsListEntryArrayInput)(nil)).Elem(), GetPrefixListsListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpAddressPoolCidrBlocksBlockInput)(nil)).Elem(), GetPublicIpAddressPoolCidrBlocksBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpAddressPoolCidrBlocksBlockArrayInput)(nil)).Elem(), GetPublicIpAddressPoolCidrBlocksBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpAddressPoolsPoolInput)(nil)).Elem(), GetPublicIpAddressPoolsPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIpAddressPoolsPoolArrayInput)(nil)).Elem(), GetPublicIpAddressPoolsPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryInput)(nil)).Elem(), GetRouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesEntryArrayInput)(nil)).Elem(), GetRouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesTableInput)(nil)).Elem(), GetRouteTablesTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesTableArrayInput)(nil)).Elem(), GetRouteTablesTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesInterfaceInput)(nil)).Elem(), GetRouterInterfacesInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesInterfaceArrayInput)(nil)).Elem(), GetRouterInterfacesInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnatEntriesEntryInput)(nil)).Elem(), GetSnatEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnatEntriesEntryArrayInput)(nil)).Elem(), GetSnatEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSslVpnClientCertsCertInput)(nil)).Elem(), GetSslVpnClientCertsCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSslVpnClientCertsCertArrayInput)(nil)).Elem(), GetSslVpnClientCertsCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSslVpnServersServerInput)(nil)).Elem(), GetSslVpnServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSslVpnServersServerArrayInput)(nil)).Elem(), GetSslVpnServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchesVswitchInput)(nil)).Elem(), GetSwitchesVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSwitchesVswitchArrayInput)(nil)).Elem(), GetSwitchesVswitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesRuleInput)(nil)).Elem(), GetTrafficMirrorFilterEgressRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterEgressRulesRuleArrayInput)(nil)).Elem(), GetTrafficMirrorFilterEgressRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterIngressRulesRuleInput)(nil)).Elem(), GetTrafficMirrorFilterIngressRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterIngressRulesRuleArrayInput)(nil)).Elem(), GetTrafficMirrorFilterIngressRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersFilterInput)(nil)).Elem(), GetTrafficMirrorFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersFilterArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsSessionInput)(nil)).Elem(), GetTrafficMirrorSessionsSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsSessionArrayInput)(nil)).Elem(), GetTrafficMirrorSessionsSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcFlowLogsLogInput)(nil)).Elem(), GetVpcFlowLogsLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcFlowLogsLogArrayInput)(nil)).Elem(), GetVpcFlowLogsLogArray{})
	pulumi.RegisterOutputType(DhcpOptionsSetAssociateVpcOutput{})
	pulumi.RegisterOutputType(DhcpOptionsSetAssociateVpcArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclAttachmentResourceOutput{})
	pulumi.RegisterOutputType(NetworkAclAttachmentResourceArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesEgressOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesEgressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesIngressOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesIngressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclResourceOutput{})
	pulumi.RegisterOutputType(NetworkAclResourceArrayOutput{})
	pulumi.RegisterOutputType(PrefixListEntryOutput{})
	pulumi.RegisterOutputType(PrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(GetBgpGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetBgpGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetBgpNetworksNetworkOutput{})
	pulumi.RegisterOutputType(GetBgpNetworksNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetBgpPeersPeerOutput{})
	pulumi.RegisterOutputType(GetBgpPeersPeerArrayOutput{})
	pulumi.RegisterOutputType(GetCommonBandwidthPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetCommonBandwidthPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetCommonBandwidthPackagesPackagePublicIpAddressOutput{})
	pulumi.RegisterOutputType(GetCommonBandwidthPackagesPackagePublicIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsSetsSetOutput{})
	pulumi.RegisterOutputType(GetDhcpOptionsSetsSetArrayOutput{})
	pulumi.RegisterOutputType(GetEnhancedNatAvailableZonesZoneOutput{})
	pulumi.RegisterOutputType(GetEnhancedNatAvailableZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetForwardEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetForwardEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetHavipsHavipOutput{})
	pulumi.RegisterOutputType(GetHavipsHavipArrayOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerIkeConfigOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetIpsecServersServerIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIpv4GatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetIpv4GatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressesAddressOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressesAddressArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6EgressRulesRuleOutput{})
	pulumi.RegisterOutputType(GetIpv6EgressRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6GatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetIpv6GatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6InternetBandwidthsBandwidthOutput{})
	pulumi.RegisterOutputType(GetIpv6InternetBandwidthsBandwidthArrayOutput{})
	pulumi.RegisterOutputType(GetNatGatewaysGatewayOutput{})
	pulumi.RegisterOutputType(GetNatGatewaysGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetNatIpCidrsCidrOutput{})
	pulumi.RegisterOutputType(GetNatIpCidrsCidrArrayOutput{})
	pulumi.RegisterOutputType(GetNatIpsIpOutput{})
	pulumi.RegisterOutputType(GetNatIpsIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclResourceOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsAclResourceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworksVpcOutput{})
	pulumi.RegisterOutputType(GetNetworksVpcArrayOutput{})
	pulumi.RegisterOutputType(GetPbrRouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetPbrRouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetPeerConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetPeerConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsListOutput{})
	pulumi.RegisterOutputType(GetPrefixListsListArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsListEntryOutput{})
	pulumi.RegisterOutputType(GetPrefixListsListEntryArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpAddressPoolCidrBlocksBlockOutput{})
	pulumi.RegisterOutputType(GetPublicIpAddressPoolCidrBlocksBlockArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIpAddressPoolsPoolOutput{})
	pulumi.RegisterOutputType(GetPublicIpAddressPoolsPoolArrayOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesTableOutput{})
	pulumi.RegisterOutputType(GetRouteTablesTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetSnatEntriesEntryOutput{})
	pulumi.RegisterOutputType(GetSnatEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(GetSslVpnClientCertsCertOutput{})
	pulumi.RegisterOutputType(GetSslVpnClientCertsCertArrayOutput{})
	pulumi.RegisterOutputType(GetSslVpnServersServerOutput{})
	pulumi.RegisterOutputType(GetSslVpnServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchesVswitchOutput{})
	pulumi.RegisterOutputType(GetSwitchesVswitchArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterEgressRulesRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterEgressRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterIngressRulesRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterIngressRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersFilterOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsSessionOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsSessionArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFlowLogsLogOutput{})
	pulumi.RegisterOutputType(GetVpcFlowLogsLogArrayOutput{})
}
