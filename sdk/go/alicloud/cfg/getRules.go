// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Config Rules of the current Alibaba Cloud user.
//
// > **NOTE:**  Available in 1.99.0+.
//
// > **NOTE:** The Cloud Config region only support `cn-shanghai` and `ap-southeast-1`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cfg"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := cfg.GetRules(ctx, &cfg.GetRulesArgs{
// 			Ids: []string{
// 				"cr-ed4bad756057********",
// 			},
// 			NameRegex: pulumi.StringRef("tftest"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstConfigRuleId", example.Rules[0].Id)
// 		return nil
// 	})
// }
// ```
func GetRules(ctx *pulumi.Context, args *GetRulesArgs, opts ...pulumi.InvokeOption) (*GetRulesResult, error) {
	var rv GetRulesResult
	err := ctx.Invoke("alicloud:cfg/getRules:getRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRules.
type GetRulesArgs struct {
	// Field `configRuleState` has been deprecated from provider version 1.124.1. New field `status` instead.
	//
	// Deprecated: Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead.
	ConfigRuleState *string `pulumi:"configRuleState"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Config Rule IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by rule name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
	RiskLevel *int `pulumi:"riskLevel"`
	// The name of config rule.
	RuleName *string `pulumi:"ruleName"`
	// The status of the config rule, valid values: `ACTIVE`, `DELETING`, `EVALUATING` and `INACTIVE`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getRules.
type GetRulesResult struct {
	// Deprecated: Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead.
	ConfigRuleState *string `pulumi:"configRuleState"`
	EnableDetails   *bool   `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Config Rule IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Config Rule names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	RiskLevel  *int     `pulumi:"riskLevel"`
	RuleName   *string  `pulumi:"ruleName"`
	// A list of Config Rules. Each element contains the following attributes:
	Rules []GetRulesRule `pulumi:"rules"`
	// (Available in 1.124.1+) The status of config rule.
	Status *string `pulumi:"status"`
}

func GetRulesOutput(ctx *pulumi.Context, args GetRulesOutputArgs, opts ...pulumi.InvokeOption) GetRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRulesResult, error) {
			args := v.(GetRulesArgs)
			r, err := GetRules(ctx, &args, opts...)
			var s GetRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRulesResultOutput)
}

// A collection of arguments for invoking getRules.
type GetRulesOutputArgs struct {
	// Field `configRuleState` has been deprecated from provider version 1.124.1. New field `status` instead.
	//
	// Deprecated: Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead.
	ConfigRuleState pulumi.StringPtrInput `pulumi:"configRuleState"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Config Rule IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by rule name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
	RiskLevel pulumi.IntPtrInput `pulumi:"riskLevel"`
	// The name of config rule.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// The status of the config rule, valid values: `ACTIVE`, `DELETING`, `EVALUATING` and `INACTIVE`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesArgs)(nil)).Elem()
}

// A collection of values returned by getRules.
type GetRulesResultOutput struct{ *pulumi.OutputState }

func (GetRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesResult)(nil)).Elem()
}

func (o GetRulesResultOutput) ToGetRulesResultOutput() GetRulesResultOutput {
	return o
}

func (o GetRulesResultOutput) ToGetRulesResultOutputWithContext(ctx context.Context) GetRulesResultOutput {
	return o
}

// Deprecated: Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead.
func (o GetRulesResultOutput) ConfigRuleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.ConfigRuleState }).(pulumi.StringPtrOutput)
}

func (o GetRulesResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Config Rule IDs.
func (o GetRulesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Config Rule names.
func (o GetRulesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetRulesResultOutput) RiskLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *int { return v.RiskLevel }).(pulumi.IntPtrOutput)
}

func (o GetRulesResultOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// A list of Config Rules. Each element contains the following attributes:
func (o GetRulesResultOutput) Rules() GetRulesRuleArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []GetRulesRule { return v.Rules }).(GetRulesRuleArrayOutput)
}

// (Available in 1.124.1+) The status of config rule.
func (o GetRulesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRulesResultOutput{})
}
