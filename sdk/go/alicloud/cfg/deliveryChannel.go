// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Alicloud Config Delivery Channel can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cfg/deliveryChannel:DeliveryChannel example cdc-49a2ad756057********
// ```
type DeliveryChannel struct {
	pulumi.CustomResourceState

	// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
	DeliveryChannelAssumeRoleArn pulumi.StringOutput `pulumi:"deliveryChannelAssumeRoleArn"`
	// The rule attached to the delivery method. This parameter is applicable only to delivery methods of the MNS type. Please refer to api [PutDeliveryChannel](https://www.alibabacloud.com/help/en/doc-detail/174253.htm) for example format.
	DeliveryChannelCondition pulumi.StringOutput `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringOutput `pulumi:"deliveryChannelName"`
	// - The ARN of the delivery destination. This parameter is required when you create a delivery method. The value must be in one of the following formats:
	// - `acs:oss:{RegionId}:{Aliuid}:{bucketName}`: if your delivery destination is an Object Storage Service (OSS) bucket.
	// - `acs:mns:{RegionId}:{Aliuid}:/topics/{topicName}`: if your delivery destination is a Message Service (MNS) topic.
	// - `acs:log:{RegionId}:{Aliuid}:project/{projectName}/logstore/{logstoreName}`: if your delivery destination is a Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringOutput `pulumi:"deliveryChannelTargetArn"`
	// - The type of the delivery method. This parameter is required when you create a delivery method. Valid values: `OSS`: Object Storage, `MNS`: Message Service, `SLS`: Log Service.
	DeliveryChannelType pulumi.StringOutput `pulumi:"deliveryChannelType"`
	// The description of the delivery method.
	Description pulumi.StringOutput `pulumi:"description"`
	// The status of the delivery method. Valid values: `0`: The delivery method is disabled., `1`: The delivery destination is enabled. This is the default value.
	Status pulumi.IntOutput `pulumi:"status"`
}

// NewDeliveryChannel registers a new resource with the given unique name, arguments, and options.
func NewDeliveryChannel(ctx *pulumi.Context,
	name string, args *DeliveryChannelArgs, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeliveryChannelAssumeRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelAssumeRoleArn'")
	}
	if args.DeliveryChannelTargetArn == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelTargetArn'")
	}
	if args.DeliveryChannelType == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelType'")
	}
	var resource DeliveryChannel
	err := ctx.RegisterResource("alicloud:cfg/deliveryChannel:DeliveryChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryChannel gets an existing DeliveryChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryChannelState, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	var resource DeliveryChannel
	err := ctx.ReadResource("alicloud:cfg/deliveryChannel:DeliveryChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryChannel resources.
type deliveryChannelState struct {
	// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
	DeliveryChannelAssumeRoleArn *string `pulumi:"deliveryChannelAssumeRoleArn"`
	// The rule attached to the delivery method. This parameter is applicable only to delivery methods of the MNS type. Please refer to api [PutDeliveryChannel](https://www.alibabacloud.com/help/en/doc-detail/174253.htm) for example format.
	DeliveryChannelCondition *string `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName *string `pulumi:"deliveryChannelName"`
	// - The ARN of the delivery destination. This parameter is required when you create a delivery method. The value must be in one of the following formats:
	// - `acs:oss:{RegionId}:{Aliuid}:{bucketName}`: if your delivery destination is an Object Storage Service (OSS) bucket.
	// - `acs:mns:{RegionId}:{Aliuid}:/topics/{topicName}`: if your delivery destination is a Message Service (MNS) topic.
	// - `acs:log:{RegionId}:{Aliuid}:project/{projectName}/logstore/{logstoreName}`: if your delivery destination is a Log Service Logstore.
	DeliveryChannelTargetArn *string `pulumi:"deliveryChannelTargetArn"`
	// - The type of the delivery method. This parameter is required when you create a delivery method. Valid values: `OSS`: Object Storage, `MNS`: Message Service, `SLS`: Log Service.
	DeliveryChannelType *string `pulumi:"deliveryChannelType"`
	// The description of the delivery method.
	Description *string `pulumi:"description"`
	// The status of the delivery method. Valid values: `0`: The delivery method is disabled., `1`: The delivery destination is enabled. This is the default value.
	Status *int `pulumi:"status"`
}

type DeliveryChannelState struct {
	// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
	DeliveryChannelAssumeRoleArn pulumi.StringPtrInput
	// The rule attached to the delivery method. This parameter is applicable only to delivery methods of the MNS type. Please refer to api [PutDeliveryChannel](https://www.alibabacloud.com/help/en/doc-detail/174253.htm) for example format.
	DeliveryChannelCondition pulumi.StringPtrInput
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringPtrInput
	// - The ARN of the delivery destination. This parameter is required when you create a delivery method. The value must be in one of the following formats:
	// - `acs:oss:{RegionId}:{Aliuid}:{bucketName}`: if your delivery destination is an Object Storage Service (OSS) bucket.
	// - `acs:mns:{RegionId}:{Aliuid}:/topics/{topicName}`: if your delivery destination is a Message Service (MNS) topic.
	// - `acs:log:{RegionId}:{Aliuid}:project/{projectName}/logstore/{logstoreName}`: if your delivery destination is a Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringPtrInput
	// - The type of the delivery method. This parameter is required when you create a delivery method. Valid values: `OSS`: Object Storage, `MNS`: Message Service, `SLS`: Log Service.
	DeliveryChannelType pulumi.StringPtrInput
	// The description of the delivery method.
	Description pulumi.StringPtrInput
	// The status of the delivery method. Valid values: `0`: The delivery method is disabled., `1`: The delivery destination is enabled. This is the default value.
	Status pulumi.IntPtrInput
}

func (DeliveryChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelState)(nil)).Elem()
}

type deliveryChannelArgs struct {
	// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
	DeliveryChannelAssumeRoleArn string `pulumi:"deliveryChannelAssumeRoleArn"`
	// The rule attached to the delivery method. This parameter is applicable only to delivery methods of the MNS type. Please refer to api [PutDeliveryChannel](https://www.alibabacloud.com/help/en/doc-detail/174253.htm) for example format.
	DeliveryChannelCondition *string `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName *string `pulumi:"deliveryChannelName"`
	// - The ARN of the delivery destination. This parameter is required when you create a delivery method. The value must be in one of the following formats:
	// - `acs:oss:{RegionId}:{Aliuid}:{bucketName}`: if your delivery destination is an Object Storage Service (OSS) bucket.
	// - `acs:mns:{RegionId}:{Aliuid}:/topics/{topicName}`: if your delivery destination is a Message Service (MNS) topic.
	// - `acs:log:{RegionId}:{Aliuid}:project/{projectName}/logstore/{logstoreName}`: if your delivery destination is a Log Service Logstore.
	DeliveryChannelTargetArn string `pulumi:"deliveryChannelTargetArn"`
	// - The type of the delivery method. This parameter is required when you create a delivery method. Valid values: `OSS`: Object Storage, `MNS`: Message Service, `SLS`: Log Service.
	DeliveryChannelType string `pulumi:"deliveryChannelType"`
	// The description of the delivery method.
	Description *string `pulumi:"description"`
	// The status of the delivery method. Valid values: `0`: The delivery method is disabled., `1`: The delivery destination is enabled. This is the default value.
	Status *int `pulumi:"status"`
}

// The set of arguments for constructing a DeliveryChannel resource.
type DeliveryChannelArgs struct {
	// The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
	DeliveryChannelAssumeRoleArn pulumi.StringInput
	// The rule attached to the delivery method. This parameter is applicable only to delivery methods of the MNS type. Please refer to api [PutDeliveryChannel](https://www.alibabacloud.com/help/en/doc-detail/174253.htm) for example format.
	DeliveryChannelCondition pulumi.StringPtrInput
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringPtrInput
	// - The ARN of the delivery destination. This parameter is required when you create a delivery method. The value must be in one of the following formats:
	// - `acs:oss:{RegionId}:{Aliuid}:{bucketName}`: if your delivery destination is an Object Storage Service (OSS) bucket.
	// - `acs:mns:{RegionId}:{Aliuid}:/topics/{topicName}`: if your delivery destination is a Message Service (MNS) topic.
	// - `acs:log:{RegionId}:{Aliuid}:project/{projectName}/logstore/{logstoreName}`: if your delivery destination is a Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringInput
	// - The type of the delivery method. This parameter is required when you create a delivery method. Valid values: `OSS`: Object Storage, `MNS`: Message Service, `SLS`: Log Service.
	DeliveryChannelType pulumi.StringInput
	// The description of the delivery method.
	Description pulumi.StringPtrInput
	// The status of the delivery method. Valid values: `0`: The delivery method is disabled., `1`: The delivery destination is enabled. This is the default value.
	Status pulumi.IntPtrInput
}

func (DeliveryChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelArgs)(nil)).Elem()
}

type DeliveryChannelInput interface {
	pulumi.Input

	ToDeliveryChannelOutput() DeliveryChannelOutput
	ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput
}

func (*DeliveryChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannel)(nil)).Elem()
}

func (i *DeliveryChannel) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return i.ToDeliveryChannelOutputWithContext(context.Background())
}

func (i *DeliveryChannel) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelOutput)
}

// DeliveryChannelArrayInput is an input type that accepts DeliveryChannelArray and DeliveryChannelArrayOutput values.
// You can construct a concrete instance of `DeliveryChannelArrayInput` via:
//
//          DeliveryChannelArray{ DeliveryChannelArgs{...} }
type DeliveryChannelArrayInput interface {
	pulumi.Input

	ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput
	ToDeliveryChannelArrayOutputWithContext(context.Context) DeliveryChannelArrayOutput
}

type DeliveryChannelArray []DeliveryChannelInput

func (DeliveryChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryChannel)(nil)).Elem()
}

func (i DeliveryChannelArray) ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput {
	return i.ToDeliveryChannelArrayOutputWithContext(context.Background())
}

func (i DeliveryChannelArray) ToDeliveryChannelArrayOutputWithContext(ctx context.Context) DeliveryChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelArrayOutput)
}

// DeliveryChannelMapInput is an input type that accepts DeliveryChannelMap and DeliveryChannelMapOutput values.
// You can construct a concrete instance of `DeliveryChannelMapInput` via:
//
//          DeliveryChannelMap{ "key": DeliveryChannelArgs{...} }
type DeliveryChannelMapInput interface {
	pulumi.Input

	ToDeliveryChannelMapOutput() DeliveryChannelMapOutput
	ToDeliveryChannelMapOutputWithContext(context.Context) DeliveryChannelMapOutput
}

type DeliveryChannelMap map[string]DeliveryChannelInput

func (DeliveryChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryChannel)(nil)).Elem()
}

func (i DeliveryChannelMap) ToDeliveryChannelMapOutput() DeliveryChannelMapOutput {
	return i.ToDeliveryChannelMapOutputWithContext(context.Background())
}

func (i DeliveryChannelMap) ToDeliveryChannelMapOutputWithContext(ctx context.Context) DeliveryChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelMapOutput)
}

type DeliveryChannelOutput struct{ *pulumi.OutputState }

func (DeliveryChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return o
}

type DeliveryChannelArrayOutput struct{ *pulumi.OutputState }

func (DeliveryChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelArrayOutput) ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput {
	return o
}

func (o DeliveryChannelArrayOutput) ToDeliveryChannelArrayOutputWithContext(ctx context.Context) DeliveryChannelArrayOutput {
	return o
}

func (o DeliveryChannelArrayOutput) Index(i pulumi.IntInput) DeliveryChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeliveryChannel {
		return vs[0].([]*DeliveryChannel)[vs[1].(int)]
	}).(DeliveryChannelOutput)
}

type DeliveryChannelMapOutput struct{ *pulumi.OutputState }

func (DeliveryChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelMapOutput) ToDeliveryChannelMapOutput() DeliveryChannelMapOutput {
	return o
}

func (o DeliveryChannelMapOutput) ToDeliveryChannelMapOutputWithContext(ctx context.Context) DeliveryChannelMapOutput {
	return o
}

func (o DeliveryChannelMapOutput) MapIndex(k pulumi.StringInput) DeliveryChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeliveryChannel {
		return vs[0].(map[string]*DeliveryChannel)[vs[1].(string)]
	}).(DeliveryChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelInput)(nil)).Elem(), &DeliveryChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelArrayInput)(nil)).Elem(), DeliveryChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelMapInput)(nil)).Elem(), DeliveryChannelMap{})
	pulumi.RegisterOutputType(DeliveryChannelOutput{})
	pulumi.RegisterOutputType(DeliveryChannelArrayOutput{})
	pulumi.RegisterOutputType(DeliveryChannelMapOutput{})
}
