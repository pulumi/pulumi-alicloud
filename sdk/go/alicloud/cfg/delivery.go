// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Config Delivery resource.
//
// Delivery channel of current account.
//
// For information about Config Delivery and how to use it, see [What is Delivery](https://www.alibabacloud.com/help/en/cloud-config/latest/api-config-2020-09-07-createconfigdeliverychannel).
//
// > **NOTE:** Available since v1.171.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cfg"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example-sls"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			this, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			thisGetRegions, err := alicloud.GetRegions(ctx, &alicloud.GetRegionsArgs{
//				Current: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_default, err := log.NewProject(ctx, "default", &log.ProjectArgs{
//				ProjectName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultStore, err := log.NewStore(ctx, "default", &log.StoreArgs{
//				LogstoreName: pulumi.String(name),
//				ProjectName:  _default.ProjectName,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cfg.NewDelivery(ctx, "default", &cfg.DeliveryArgs{
//				ConfigurationItemChangeNotification: pulumi.Bool(true),
//				NonCompliantNotification:            pulumi.Bool(true),
//				DeliveryChannelName:                 pulumi.String(name),
//				DeliveryChannelTargetArn: pulumi.All(_default.ProjectName, defaultStore.LogstoreName).ApplyT(func(_args []interface{}) (string, error) {
//					projectName := _args[0].(string)
//					logstoreName := _args[1].(string)
//					return fmt.Sprintf("acs:log:%v:%v:project/%v/logstore/%v", thisGetRegions.Ids[0], this.Id, projectName, logstoreName), nil
//				}).(pulumi.StringOutput),
//				DeliveryChannelType: pulumi.String("SLS"),
//				Description:         pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Config Delivery can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cfg/delivery:Delivery example <id>
// ```
type Delivery struct {
	pulumi.CustomResourceState

	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	// - true: The specified destination receives resource change logs.
	// - false: The specified destination does not receive resource change logs.
	ConfigurationItemChangeNotification pulumi.BoolPtrOutput `pulumi:"configurationItemChangeNotification"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	// - true: The specified destination receives scheduled resource snapshots.
	// - false: The specified destination does not receive scheduled resource snapshots.
	ConfigurationSnapshot pulumi.BoolPtrOutput `pulumi:"configurationSnapshot"`
	// The rule that is attached to the delivery channel.
	//
	// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// If you specify the risk level or resource types for subscription events, this is as follows:
	//
	// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
	//
	// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
	DeliveryChannelCondition pulumi.StringPtrOutput `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringPtrOutput `pulumi:"deliveryChannelName"`
	// The ARN of the delivery destination.
	// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringOutput `pulumi:"deliveryChannelTargetArn"`
	// The type of the delivery channel. Valid values:
	// - OSS: Object Storage Service (OSS)
	// - MNS: Message Service (MNS)
	// - SLS: Log Service
	DeliveryChannelType pulumi.StringOutput `pulumi:"deliveryChannelType"`
	// The description of the delivery channel.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	// - true: The specified destination receives resource non-compliance events.
	// - false: The specified destination does not receive resource non-compliance events.
	NonCompliantNotification pulumi.BoolPtrOutput `pulumi:"nonCompliantNotification"`
	// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
	OversizedDataOssTargetArn pulumi.StringPtrOutput `pulumi:"oversizedDataOssTargetArn"`
	// The status of the delivery channel. Valid values:
	// - 0: The delivery channel is disabled.
	// - 1: The delivery channel is enabled.
	Status pulumi.IntOutput `pulumi:"status"`
}

// NewDelivery registers a new resource with the given unique name, arguments, and options.
func NewDelivery(ctx *pulumi.Context,
	name string, args *DeliveryArgs, opts ...pulumi.ResourceOption) (*Delivery, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeliveryChannelTargetArn == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelTargetArn'")
	}
	if args.DeliveryChannelType == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Delivery
	err := ctx.RegisterResource("alicloud:cfg/delivery:Delivery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDelivery gets an existing Delivery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDelivery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryState, opts ...pulumi.ResourceOption) (*Delivery, error) {
	var resource Delivery
	err := ctx.ReadResource("alicloud:cfg/delivery:Delivery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Delivery resources.
type deliveryState struct {
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	// - true: The specified destination receives resource change logs.
	// - false: The specified destination does not receive resource change logs.
	ConfigurationItemChangeNotification *bool `pulumi:"configurationItemChangeNotification"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	// - true: The specified destination receives scheduled resource snapshots.
	// - false: The specified destination does not receive scheduled resource snapshots.
	ConfigurationSnapshot *bool `pulumi:"configurationSnapshot"`
	// The rule that is attached to the delivery channel.
	//
	// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// If you specify the risk level or resource types for subscription events, this is as follows:
	//
	// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
	//
	// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
	DeliveryChannelCondition *string `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName *string `pulumi:"deliveryChannelName"`
	// The ARN of the delivery destination.
	// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	DeliveryChannelTargetArn *string `pulumi:"deliveryChannelTargetArn"`
	// The type of the delivery channel. Valid values:
	// - OSS: Object Storage Service (OSS)
	// - MNS: Message Service (MNS)
	// - SLS: Log Service
	DeliveryChannelType *string `pulumi:"deliveryChannelType"`
	// The description of the delivery channel.
	Description *string `pulumi:"description"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	// - true: The specified destination receives resource non-compliance events.
	// - false: The specified destination does not receive resource non-compliance events.
	NonCompliantNotification *bool `pulumi:"nonCompliantNotification"`
	// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
	OversizedDataOssTargetArn *string `pulumi:"oversizedDataOssTargetArn"`
	// The status of the delivery channel. Valid values:
	// - 0: The delivery channel is disabled.
	// - 1: The delivery channel is enabled.
	Status *int `pulumi:"status"`
}

type DeliveryState struct {
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	// - true: The specified destination receives resource change logs.
	// - false: The specified destination does not receive resource change logs.
	ConfigurationItemChangeNotification pulumi.BoolPtrInput
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	// - true: The specified destination receives scheduled resource snapshots.
	// - false: The specified destination does not receive scheduled resource snapshots.
	ConfigurationSnapshot pulumi.BoolPtrInput
	// The rule that is attached to the delivery channel.
	//
	// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// If you specify the risk level or resource types for subscription events, this is as follows:
	//
	// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
	//
	// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
	DeliveryChannelCondition pulumi.StringPtrInput
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringPtrInput
	// The ARN of the delivery destination.
	// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringPtrInput
	// The type of the delivery channel. Valid values:
	// - OSS: Object Storage Service (OSS)
	// - MNS: Message Service (MNS)
	// - SLS: Log Service
	DeliveryChannelType pulumi.StringPtrInput
	// The description of the delivery channel.
	Description pulumi.StringPtrInput
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	// - true: The specified destination receives resource non-compliance events.
	// - false: The specified destination does not receive resource non-compliance events.
	NonCompliantNotification pulumi.BoolPtrInput
	// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
	OversizedDataOssTargetArn pulumi.StringPtrInput
	// The status of the delivery channel. Valid values:
	// - 0: The delivery channel is disabled.
	// - 1: The delivery channel is enabled.
	Status pulumi.IntPtrInput
}

func (DeliveryState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryState)(nil)).Elem()
}

type deliveryArgs struct {
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	// - true: The specified destination receives resource change logs.
	// - false: The specified destination does not receive resource change logs.
	ConfigurationItemChangeNotification *bool `pulumi:"configurationItemChangeNotification"`
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	// - true: The specified destination receives scheduled resource snapshots.
	// - false: The specified destination does not receive scheduled resource snapshots.
	ConfigurationSnapshot *bool `pulumi:"configurationSnapshot"`
	// The rule that is attached to the delivery channel.
	//
	// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// If you specify the risk level or resource types for subscription events, this is as follows:
	//
	// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
	//
	// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
	DeliveryChannelCondition *string `pulumi:"deliveryChannelCondition"`
	// The name of the delivery channel.
	DeliveryChannelName *string `pulumi:"deliveryChannelName"`
	// The ARN of the delivery destination.
	// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	DeliveryChannelTargetArn string `pulumi:"deliveryChannelTargetArn"`
	// The type of the delivery channel. Valid values:
	// - OSS: Object Storage Service (OSS)
	// - MNS: Message Service (MNS)
	// - SLS: Log Service
	DeliveryChannelType string `pulumi:"deliveryChannelType"`
	// The description of the delivery channel.
	Description *string `pulumi:"description"`
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	// - true: The specified destination receives resource non-compliance events.
	// - false: The specified destination does not receive resource non-compliance events.
	NonCompliantNotification *bool `pulumi:"nonCompliantNotification"`
	// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
	OversizedDataOssTargetArn *string `pulumi:"oversizedDataOssTargetArn"`
	// The status of the delivery channel. Valid values:
	// - 0: The delivery channel is disabled.
	// - 1: The delivery channel is enabled.
	Status *int `pulumi:"status"`
}

// The set of arguments for constructing a Delivery resource.
type DeliveryArgs struct {
	// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
	// - true: The specified destination receives resource change logs.
	// - false: The specified destination does not receive resource change logs.
	ConfigurationItemChangeNotification pulumi.BoolPtrInput
	// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
	// - true: The specified destination receives scheduled resource snapshots.
	// - false: The specified destination does not receive scheduled resource snapshots.
	ConfigurationSnapshot pulumi.BoolPtrInput
	// The rule that is attached to the delivery channel.
	//
	// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
	//
	// If you specify the risk level or resource types for subscription events, this is as follows:
	//
	// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
	//
	// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
	//
	// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
	DeliveryChannelCondition pulumi.StringPtrInput
	// The name of the delivery channel.
	DeliveryChannelName pulumi.StringPtrInput
	// The ARN of the delivery destination.
	// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
	// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
	// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
	DeliveryChannelTargetArn pulumi.StringInput
	// The type of the delivery channel. Valid values:
	// - OSS: Object Storage Service (OSS)
	// - MNS: Message Service (MNS)
	// - SLS: Log Service
	DeliveryChannelType pulumi.StringInput
	// The description of the delivery channel.
	Description pulumi.StringPtrInput
	// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
	// - true: The specified destination receives resource non-compliance events.
	// - false: The specified destination does not receive resource non-compliance events.
	NonCompliantNotification pulumi.BoolPtrInput
	// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
	OversizedDataOssTargetArn pulumi.StringPtrInput
	// The status of the delivery channel. Valid values:
	// - 0: The delivery channel is disabled.
	// - 1: The delivery channel is enabled.
	Status pulumi.IntPtrInput
}

func (DeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryArgs)(nil)).Elem()
}

type DeliveryInput interface {
	pulumi.Input

	ToDeliveryOutput() DeliveryOutput
	ToDeliveryOutputWithContext(ctx context.Context) DeliveryOutput
}

func (*Delivery) ElementType() reflect.Type {
	return reflect.TypeOf((**Delivery)(nil)).Elem()
}

func (i *Delivery) ToDeliveryOutput() DeliveryOutput {
	return i.ToDeliveryOutputWithContext(context.Background())
}

func (i *Delivery) ToDeliveryOutputWithContext(ctx context.Context) DeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryOutput)
}

// DeliveryArrayInput is an input type that accepts DeliveryArray and DeliveryArrayOutput values.
// You can construct a concrete instance of `DeliveryArrayInput` via:
//
//	DeliveryArray{ DeliveryArgs{...} }
type DeliveryArrayInput interface {
	pulumi.Input

	ToDeliveryArrayOutput() DeliveryArrayOutput
	ToDeliveryArrayOutputWithContext(context.Context) DeliveryArrayOutput
}

type DeliveryArray []DeliveryInput

func (DeliveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Delivery)(nil)).Elem()
}

func (i DeliveryArray) ToDeliveryArrayOutput() DeliveryArrayOutput {
	return i.ToDeliveryArrayOutputWithContext(context.Background())
}

func (i DeliveryArray) ToDeliveryArrayOutputWithContext(ctx context.Context) DeliveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryArrayOutput)
}

// DeliveryMapInput is an input type that accepts DeliveryMap and DeliveryMapOutput values.
// You can construct a concrete instance of `DeliveryMapInput` via:
//
//	DeliveryMap{ "key": DeliveryArgs{...} }
type DeliveryMapInput interface {
	pulumi.Input

	ToDeliveryMapOutput() DeliveryMapOutput
	ToDeliveryMapOutputWithContext(context.Context) DeliveryMapOutput
}

type DeliveryMap map[string]DeliveryInput

func (DeliveryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Delivery)(nil)).Elem()
}

func (i DeliveryMap) ToDeliveryMapOutput() DeliveryMapOutput {
	return i.ToDeliveryMapOutputWithContext(context.Background())
}

func (i DeliveryMap) ToDeliveryMapOutputWithContext(ctx context.Context) DeliveryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryMapOutput)
}

type DeliveryOutput struct{ *pulumi.OutputState }

func (DeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Delivery)(nil)).Elem()
}

func (o DeliveryOutput) ToDeliveryOutput() DeliveryOutput {
	return o
}

func (o DeliveryOutput) ToDeliveryOutputWithContext(ctx context.Context) DeliveryOutput {
	return o
}

// Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
// - true: The specified destination receives resource change logs.
// - false: The specified destination does not receive resource change logs.
func (o DeliveryOutput) ConfigurationItemChangeNotification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.BoolPtrOutput { return v.ConfigurationItemChangeNotification }).(pulumi.BoolPtrOutput)
}

// Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
// - true: The specified destination receives scheduled resource snapshots.
// - false: The specified destination does not receive scheduled resource snapshots.
func (o DeliveryOutput) ConfigurationSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.BoolPtrOutput { return v.ConfigurationSnapshot }).(pulumi.BoolPtrOutput)
}

// The rule that is attached to the delivery channel.
//
// This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
//
// If you specify the risk level or resource types for subscription events, this is as follows:
//
// The lowest risk level of the events to which you want to subscribe is in the following format: {"filterType":"RuleRiskLevel","value":"1","multiple":false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
//
// The setting of the resource types of the events to which you want to subscribe is in the following format: {"filterType":"ResourceType","values":["ACS::ACK::Cluster","ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage"],"multiple":true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
//
// Examples:[{"filterType":"ResourceType","values":["ACS::ActionTrail::Trail","ACS::CBWP::CommonBandwidthPackage","ACS::CDN::Domain","ACS::CEN::CenBandwidthPackage","ACS::CEN::CenInstance","ACS::CEN::Flowlog","ACS::DdosCoo::Instance"],"multiple":true}].
func (o DeliveryOutput) DeliveryChannelCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringPtrOutput { return v.DeliveryChannelCondition }).(pulumi.StringPtrOutput)
}

// The name of the delivery channel.
func (o DeliveryOutput) DeliveryChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringPtrOutput { return v.DeliveryChannelName }).(pulumi.StringPtrOutput)
}

// The ARN of the delivery destination.
// - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
// - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
// - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
func (o DeliveryOutput) DeliveryChannelTargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringOutput { return v.DeliveryChannelTargetArn }).(pulumi.StringOutput)
}

// The type of the delivery channel. Valid values:
// - OSS: Object Storage Service (OSS)
// - MNS: Message Service (MNS)
// - SLS: Log Service
func (o DeliveryOutput) DeliveryChannelType() pulumi.StringOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringOutput { return v.DeliveryChannelType }).(pulumi.StringOutput)
}

// The description of the delivery channel.
func (o DeliveryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
// - true: The specified destination receives resource non-compliance events.
// - false: The specified destination does not receive resource non-compliance events.
func (o DeliveryOutput) NonCompliantNotification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.BoolPtrOutput { return v.NonCompliantNotification }).(pulumi.BoolPtrOutput)
}

// The oss ARN of the delivery channel when the value data oversized limit.  The value must be in one of the following formats:  acs:oss:{RegionId}:{Aliuid}:{bucketName} if your delivery destination is an Object Storage Service (OSS) bucket.
func (o DeliveryOutput) OversizedDataOssTargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delivery) pulumi.StringPtrOutput { return v.OversizedDataOssTargetArn }).(pulumi.StringPtrOutput)
}

// The status of the delivery channel. Valid values:
// - 0: The delivery channel is disabled.
// - 1: The delivery channel is enabled.
func (o DeliveryOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *Delivery) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

type DeliveryArrayOutput struct{ *pulumi.OutputState }

func (DeliveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Delivery)(nil)).Elem()
}

func (o DeliveryArrayOutput) ToDeliveryArrayOutput() DeliveryArrayOutput {
	return o
}

func (o DeliveryArrayOutput) ToDeliveryArrayOutputWithContext(ctx context.Context) DeliveryArrayOutput {
	return o
}

func (o DeliveryArrayOutput) Index(i pulumi.IntInput) DeliveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Delivery {
		return vs[0].([]*Delivery)[vs[1].(int)]
	}).(DeliveryOutput)
}

type DeliveryMapOutput struct{ *pulumi.OutputState }

func (DeliveryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Delivery)(nil)).Elem()
}

func (o DeliveryMapOutput) ToDeliveryMapOutput() DeliveryMapOutput {
	return o
}

func (o DeliveryMapOutput) ToDeliveryMapOutputWithContext(ctx context.Context) DeliveryMapOutput {
	return o
}

func (o DeliveryMapOutput) MapIndex(k pulumi.StringInput) DeliveryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Delivery {
		return vs[0].(map[string]*Delivery)[vs[1].(string)]
	}).(DeliveryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryInput)(nil)).Elem(), &Delivery{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryArrayInput)(nil)).Elem(), DeliveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryMapInput)(nil)).Elem(), DeliveryMap{})
	pulumi.RegisterOutputType(DeliveryOutput{})
	pulumi.RegisterOutputType(DeliveryArrayOutput{})
	pulumi.RegisterOutputType(DeliveryMapOutput{})
}
