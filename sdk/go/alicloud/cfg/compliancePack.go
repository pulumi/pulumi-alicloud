// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Config Compliance Pack resource.
//
// For information about Cloud Config Compliance Pack and how to use it, see [What is Compliance Pack](https://www.alibabacloud.com/help/en/doc-detail/194753.html).
//
// > **NOTE:** Available in v1.124.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cfg"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "example_name"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		defaultInstances, err := ecs.GetInstances(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		defaultResourceGroups, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{
// 			Status: pulumi.StringRef("OK"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		defaultRule, err := cfg.NewRule(ctx, "defaultRule", &cfg.RuleArgs{
// 			RuleName:         pulumi.String(name),
// 			Description:      pulumi.String(name),
// 			SourceIdentifier: pulumi.String("ecs-instances-in-vpc"),
// 			SourceOwner:      pulumi.String("ALIYUN"),
// 			ResourceTypesScopes: pulumi.StringArray{
// 				pulumi.String("ACS::ECS::Instance"),
// 			},
// 			RiskLevel:               pulumi.Int(1),
// 			ConfigRuleTriggerTypes:  pulumi.String("ConfigurationItemChangeNotification"),
// 			TagKeyScope:             pulumi.String("tfTest"),
// 			TagValueScope:           pulumi.String("tfTest 123"),
// 			ResourceGroupIdsScope:   pulumi.String(defaultResourceGroups.Ids[0]),
// 			ExcludeResourceIdsScope: pulumi.String(defaultInstances.Instances[0].Id),
// 			RegionIdsScope:          pulumi.String("cn-hangzhou"),
// 			InputParameters: pulumi.AnyMap{
// 				"vpcIds": pulumi.String(defaultInstances.Instances[0].VpcId),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cfg.NewCompliancePack(ctx, "defaultCompliancePack", &cfg.CompliancePackArgs{
// 			CompliancePackName: pulumi.String("tf-testaccConfig1234"),
// 			Description:        pulumi.String("tf-testaccConfig1234"),
// 			RiskLevel:          pulumi.Int(1),
// 			ConfigRuleIds: cfg.CompliancePackConfigRuleIdArray{
// 				&cfg.CompliancePackConfigRuleIdArgs{
// 					ConfigRuleId: defaultRule.ID(),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Cloud Config Compliance Pack can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cfg/compliancePack:CompliancePack example <id>
// ```
type CompliancePack struct {
	pulumi.CustomResourceState

	// The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
	CompliancePackName pulumi.StringOutput `pulumi:"compliancePackName"`
	// Compliance Package Template Id.
	CompliancePackTemplateId pulumi.StringPtrOutput `pulumi:"compliancePackTemplateId"`
	// A list of Config Rule IDs.
	ConfigRuleIds CompliancePackConfigRuleIdArrayOutput `pulumi:"configRuleIds"`
	// A list of Config Rules.
	//
	// Deprecated: Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
	ConfigRules CompliancePackConfigRuleArrayOutput `pulumi:"configRules"`
	// The Description of compliance pack.
	Description pulumi.StringOutput `pulumi:"description"`
	// The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
	RiskLevel pulumi.IntOutput `pulumi:"riskLevel"`
	// The status of the resource. The valid values: `CREATING`, `ACTIVE`.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCompliancePack registers a new resource with the given unique name, arguments, and options.
func NewCompliancePack(ctx *pulumi.Context,
	name string, args *CompliancePackArgs, opts ...pulumi.ResourceOption) (*CompliancePack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompliancePackName == nil {
		return nil, errors.New("invalid value for required argument 'CompliancePackName'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.RiskLevel == nil {
		return nil, errors.New("invalid value for required argument 'RiskLevel'")
	}
	var resource CompliancePack
	err := ctx.RegisterResource("alicloud:cfg/compliancePack:CompliancePack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCompliancePack gets an existing CompliancePack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCompliancePack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CompliancePackState, opts ...pulumi.ResourceOption) (*CompliancePack, error) {
	var resource CompliancePack
	err := ctx.ReadResource("alicloud:cfg/compliancePack:CompliancePack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CompliancePack resources.
type compliancePackState struct {
	// The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
	CompliancePackName *string `pulumi:"compliancePackName"`
	// Compliance Package Template Id.
	CompliancePackTemplateId *string `pulumi:"compliancePackTemplateId"`
	// A list of Config Rule IDs.
	ConfigRuleIds []CompliancePackConfigRuleId `pulumi:"configRuleIds"`
	// A list of Config Rules.
	//
	// Deprecated: Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
	ConfigRules []CompliancePackConfigRule `pulumi:"configRules"`
	// The Description of compliance pack.
	Description *string `pulumi:"description"`
	// The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
	RiskLevel *int `pulumi:"riskLevel"`
	// The status of the resource. The valid values: `CREATING`, `ACTIVE`.
	Status *string `pulumi:"status"`
}

type CompliancePackState struct {
	// The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
	CompliancePackName pulumi.StringPtrInput
	// Compliance Package Template Id.
	CompliancePackTemplateId pulumi.StringPtrInput
	// A list of Config Rule IDs.
	ConfigRuleIds CompliancePackConfigRuleIdArrayInput
	// A list of Config Rules.
	//
	// Deprecated: Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
	ConfigRules CompliancePackConfigRuleArrayInput
	// The Description of compliance pack.
	Description pulumi.StringPtrInput
	// The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
	RiskLevel pulumi.IntPtrInput
	// The status of the resource. The valid values: `CREATING`, `ACTIVE`.
	Status pulumi.StringPtrInput
}

func (CompliancePackState) ElementType() reflect.Type {
	return reflect.TypeOf((*compliancePackState)(nil)).Elem()
}

type compliancePackArgs struct {
	// The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
	CompliancePackName string `pulumi:"compliancePackName"`
	// Compliance Package Template Id.
	CompliancePackTemplateId *string `pulumi:"compliancePackTemplateId"`
	// A list of Config Rule IDs.
	ConfigRuleIds []CompliancePackConfigRuleId `pulumi:"configRuleIds"`
	// A list of Config Rules.
	//
	// Deprecated: Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
	ConfigRules []CompliancePackConfigRule `pulumi:"configRules"`
	// The Description of compliance pack.
	Description string `pulumi:"description"`
	// The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
	RiskLevel int `pulumi:"riskLevel"`
}

// The set of arguments for constructing a CompliancePack resource.
type CompliancePackArgs struct {
	// The Compliance Package Name. . **NOTE:** the `compliancePackName` supports modification since V1.146.0.
	CompliancePackName pulumi.StringInput
	// Compliance Package Template Id.
	CompliancePackTemplateId pulumi.StringPtrInput
	// A list of Config Rule IDs.
	ConfigRuleIds CompliancePackConfigRuleIdArrayInput
	// A list of Config Rules.
	//
	// Deprecated: Field 'config_rules' has been deprecated from provider version 1.141.0. New field 'config_rule_ids' instead.
	ConfigRules CompliancePackConfigRuleArrayInput
	// The Description of compliance pack.
	Description pulumi.StringInput
	// The Risk Level. Valid values:  `1`: critical, `2`: warning, `3`: info.
	RiskLevel pulumi.IntInput
}

func (CompliancePackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*compliancePackArgs)(nil)).Elem()
}

type CompliancePackInput interface {
	pulumi.Input

	ToCompliancePackOutput() CompliancePackOutput
	ToCompliancePackOutputWithContext(ctx context.Context) CompliancePackOutput
}

func (*CompliancePack) ElementType() reflect.Type {
	return reflect.TypeOf((**CompliancePack)(nil)).Elem()
}

func (i *CompliancePack) ToCompliancePackOutput() CompliancePackOutput {
	return i.ToCompliancePackOutputWithContext(context.Background())
}

func (i *CompliancePack) ToCompliancePackOutputWithContext(ctx context.Context) CompliancePackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePackOutput)
}

// CompliancePackArrayInput is an input type that accepts CompliancePackArray and CompliancePackArrayOutput values.
// You can construct a concrete instance of `CompliancePackArrayInput` via:
//
//          CompliancePackArray{ CompliancePackArgs{...} }
type CompliancePackArrayInput interface {
	pulumi.Input

	ToCompliancePackArrayOutput() CompliancePackArrayOutput
	ToCompliancePackArrayOutputWithContext(context.Context) CompliancePackArrayOutput
}

type CompliancePackArray []CompliancePackInput

func (CompliancePackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompliancePack)(nil)).Elem()
}

func (i CompliancePackArray) ToCompliancePackArrayOutput() CompliancePackArrayOutput {
	return i.ToCompliancePackArrayOutputWithContext(context.Background())
}

func (i CompliancePackArray) ToCompliancePackArrayOutputWithContext(ctx context.Context) CompliancePackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePackArrayOutput)
}

// CompliancePackMapInput is an input type that accepts CompliancePackMap and CompliancePackMapOutput values.
// You can construct a concrete instance of `CompliancePackMapInput` via:
//
//          CompliancePackMap{ "key": CompliancePackArgs{...} }
type CompliancePackMapInput interface {
	pulumi.Input

	ToCompliancePackMapOutput() CompliancePackMapOutput
	ToCompliancePackMapOutputWithContext(context.Context) CompliancePackMapOutput
}

type CompliancePackMap map[string]CompliancePackInput

func (CompliancePackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompliancePack)(nil)).Elem()
}

func (i CompliancePackMap) ToCompliancePackMapOutput() CompliancePackMapOutput {
	return i.ToCompliancePackMapOutputWithContext(context.Background())
}

func (i CompliancePackMap) ToCompliancePackMapOutputWithContext(ctx context.Context) CompliancePackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePackMapOutput)
}

type CompliancePackOutput struct{ *pulumi.OutputState }

func (CompliancePackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompliancePack)(nil)).Elem()
}

func (o CompliancePackOutput) ToCompliancePackOutput() CompliancePackOutput {
	return o
}

func (o CompliancePackOutput) ToCompliancePackOutputWithContext(ctx context.Context) CompliancePackOutput {
	return o
}

type CompliancePackArrayOutput struct{ *pulumi.OutputState }

func (CompliancePackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompliancePack)(nil)).Elem()
}

func (o CompliancePackArrayOutput) ToCompliancePackArrayOutput() CompliancePackArrayOutput {
	return o
}

func (o CompliancePackArrayOutput) ToCompliancePackArrayOutputWithContext(ctx context.Context) CompliancePackArrayOutput {
	return o
}

func (o CompliancePackArrayOutput) Index(i pulumi.IntInput) CompliancePackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CompliancePack {
		return vs[0].([]*CompliancePack)[vs[1].(int)]
	}).(CompliancePackOutput)
}

type CompliancePackMapOutput struct{ *pulumi.OutputState }

func (CompliancePackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompliancePack)(nil)).Elem()
}

func (o CompliancePackMapOutput) ToCompliancePackMapOutput() CompliancePackMapOutput {
	return o
}

func (o CompliancePackMapOutput) ToCompliancePackMapOutputWithContext(ctx context.Context) CompliancePackMapOutput {
	return o
}

func (o CompliancePackMapOutput) MapIndex(k pulumi.StringInput) CompliancePackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CompliancePack {
		return vs[0].(map[string]*CompliancePack)[vs[1].(string)]
	}).(CompliancePackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePackInput)(nil)).Elem(), &CompliancePack{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePackArrayInput)(nil)).Elem(), CompliancePackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePackMapInput)(nil)).Elem(), CompliancePackMap{})
	pulumi.RegisterOutputType(CompliancePackOutput{})
	pulumi.RegisterOutputType(CompliancePackArrayOutput{})
	pulumi.RegisterOutputType(CompliancePackMapOutput{})
}
