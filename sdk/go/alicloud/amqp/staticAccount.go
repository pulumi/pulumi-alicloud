// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Amqp Static Account resource.
//
// For information about Amqp Static Account and how to use it, see [What is Static Account](https://help.aliyun.com/document_detail/184399.html).
//
// > **NOTE:** Available in v1.195.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/amqp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := amqp.NewStaticAccount(ctx, "default", &amqp.StaticAccountArgs{
//				AccessKey:  pulumi.String("LTAI5t8beMmVM1eRZtEJ6vfo"),
//				InstanceId: pulumi.String("amqp-cn-0ju2y01zs001"),
//				SecretKey:  pulumi.String("sample-secret-key"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Amqp Static Account can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:amqp/staticAccount:StaticAccount example <instance_id>:<access_key>
//
// ```
type StaticAccount struct {
	pulumi.CustomResourceState

	// Access key.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// Create time stamp. Unix timestamp, to millisecond level.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// Amqp instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the user's primary account.
	MasterUid pulumi.StringOutput `pulumi:"masterUid"`
	// Static password.
	Password pulumi.StringOutput `pulumi:"password"`
	// Secret key.
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
	UserName  pulumi.StringOutput `pulumi:"userName"`
}

// NewStaticAccount registers a new resource with the given unique name, arguments, and options.
func NewStaticAccount(ctx *pulumi.Context,
	name string, args *StaticAccountArgs, opts ...pulumi.ResourceOption) (*StaticAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessKey == nil {
		return nil, errors.New("invalid value for required argument 'AccessKey'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.SecretKey == nil {
		return nil, errors.New("invalid value for required argument 'SecretKey'")
	}
	if args.SecretKey != nil {
		args.SecretKey = pulumi.ToSecret(args.SecretKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	var resource StaticAccount
	err := ctx.RegisterResource("alicloud:amqp/staticAccount:StaticAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStaticAccount gets an existing StaticAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStaticAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StaticAccountState, opts ...pulumi.ResourceOption) (*StaticAccount, error) {
	var resource StaticAccount
	err := ctx.ReadResource("alicloud:amqp/staticAccount:StaticAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StaticAccount resources.
type staticAccountState struct {
	// Access key.
	AccessKey *string `pulumi:"accessKey"`
	// Create time stamp. Unix timestamp, to millisecond level.
	CreateTime *int `pulumi:"createTime"`
	// Amqp instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the user's primary account.
	MasterUid *string `pulumi:"masterUid"`
	// Static password.
	Password *string `pulumi:"password"`
	// Secret key.
	SecretKey *string `pulumi:"secretKey"`
	UserName  *string `pulumi:"userName"`
}

type StaticAccountState struct {
	// Access key.
	AccessKey pulumi.StringPtrInput
	// Create time stamp. Unix timestamp, to millisecond level.
	CreateTime pulumi.IntPtrInput
	// Amqp instance ID.
	InstanceId pulumi.StringPtrInput
	// The ID of the user's primary account.
	MasterUid pulumi.StringPtrInput
	// Static password.
	Password pulumi.StringPtrInput
	// Secret key.
	SecretKey pulumi.StringPtrInput
	UserName  pulumi.StringPtrInput
}

func (StaticAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*staticAccountState)(nil)).Elem()
}

type staticAccountArgs struct {
	// Access key.
	AccessKey string `pulumi:"accessKey"`
	// Amqp instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Secret key.
	SecretKey string `pulumi:"secretKey"`
}

// The set of arguments for constructing a StaticAccount resource.
type StaticAccountArgs struct {
	// Access key.
	AccessKey pulumi.StringInput
	// Amqp instance ID.
	InstanceId pulumi.StringInput
	// Secret key.
	SecretKey pulumi.StringInput
}

func (StaticAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*staticAccountArgs)(nil)).Elem()
}

type StaticAccountInput interface {
	pulumi.Input

	ToStaticAccountOutput() StaticAccountOutput
	ToStaticAccountOutputWithContext(ctx context.Context) StaticAccountOutput
}

func (*StaticAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticAccount)(nil)).Elem()
}

func (i *StaticAccount) ToStaticAccountOutput() StaticAccountOutput {
	return i.ToStaticAccountOutputWithContext(context.Background())
}

func (i *StaticAccount) ToStaticAccountOutputWithContext(ctx context.Context) StaticAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticAccountOutput)
}

// StaticAccountArrayInput is an input type that accepts StaticAccountArray and StaticAccountArrayOutput values.
// You can construct a concrete instance of `StaticAccountArrayInput` via:
//
//	StaticAccountArray{ StaticAccountArgs{...} }
type StaticAccountArrayInput interface {
	pulumi.Input

	ToStaticAccountArrayOutput() StaticAccountArrayOutput
	ToStaticAccountArrayOutputWithContext(context.Context) StaticAccountArrayOutput
}

type StaticAccountArray []StaticAccountInput

func (StaticAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticAccount)(nil)).Elem()
}

func (i StaticAccountArray) ToStaticAccountArrayOutput() StaticAccountArrayOutput {
	return i.ToStaticAccountArrayOutputWithContext(context.Background())
}

func (i StaticAccountArray) ToStaticAccountArrayOutputWithContext(ctx context.Context) StaticAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticAccountArrayOutput)
}

// StaticAccountMapInput is an input type that accepts StaticAccountMap and StaticAccountMapOutput values.
// You can construct a concrete instance of `StaticAccountMapInput` via:
//
//	StaticAccountMap{ "key": StaticAccountArgs{...} }
type StaticAccountMapInput interface {
	pulumi.Input

	ToStaticAccountMapOutput() StaticAccountMapOutput
	ToStaticAccountMapOutputWithContext(context.Context) StaticAccountMapOutput
}

type StaticAccountMap map[string]StaticAccountInput

func (StaticAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticAccount)(nil)).Elem()
}

func (i StaticAccountMap) ToStaticAccountMapOutput() StaticAccountMapOutput {
	return i.ToStaticAccountMapOutputWithContext(context.Background())
}

func (i StaticAccountMap) ToStaticAccountMapOutputWithContext(ctx context.Context) StaticAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticAccountMapOutput)
}

type StaticAccountOutput struct{ *pulumi.OutputState }

func (StaticAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticAccount)(nil)).Elem()
}

func (o StaticAccountOutput) ToStaticAccountOutput() StaticAccountOutput {
	return o
}

func (o StaticAccountOutput) ToStaticAccountOutputWithContext(ctx context.Context) StaticAccountOutput {
	return o
}

// Access key.
func (o StaticAccountOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// Create time stamp. Unix timestamp, to millisecond level.
func (o StaticAccountOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// Amqp instance ID.
func (o StaticAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the user's primary account.
func (o StaticAccountOutput) MasterUid() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.MasterUid }).(pulumi.StringOutput)
}

// Static password.
func (o StaticAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Secret key.
func (o StaticAccountOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.SecretKey }).(pulumi.StringOutput)
}

func (o StaticAccountOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticAccount) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type StaticAccountArrayOutput struct{ *pulumi.OutputState }

func (StaticAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticAccount)(nil)).Elem()
}

func (o StaticAccountArrayOutput) ToStaticAccountArrayOutput() StaticAccountArrayOutput {
	return o
}

func (o StaticAccountArrayOutput) ToStaticAccountArrayOutputWithContext(ctx context.Context) StaticAccountArrayOutput {
	return o
}

func (o StaticAccountArrayOutput) Index(i pulumi.IntInput) StaticAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StaticAccount {
		return vs[0].([]*StaticAccount)[vs[1].(int)]
	}).(StaticAccountOutput)
}

type StaticAccountMapOutput struct{ *pulumi.OutputState }

func (StaticAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticAccount)(nil)).Elem()
}

func (o StaticAccountMapOutput) ToStaticAccountMapOutput() StaticAccountMapOutput {
	return o
}

func (o StaticAccountMapOutput) ToStaticAccountMapOutputWithContext(ctx context.Context) StaticAccountMapOutput {
	return o
}

func (o StaticAccountMapOutput) MapIndex(k pulumi.StringInput) StaticAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StaticAccount {
		return vs[0].(map[string]*StaticAccount)[vs[1].(string)]
	}).(StaticAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StaticAccountInput)(nil)).Elem(), &StaticAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticAccountArrayInput)(nil)).Elem(), StaticAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticAccountMapInput)(nil)).Elem(), StaticAccountMap{})
	pulumi.RegisterOutputType(StaticAccountOutput{})
	pulumi.RegisterOutputType(StaticAccountArrayOutput{})
	pulumi.RegisterOutputType(StaticAccountMapOutput{})
}
