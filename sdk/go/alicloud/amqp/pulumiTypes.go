// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetBindingsBinding struct {
	// X-match Attributes. Valid Values: All: Default Value, All the Message Header of Key-Value Pairs Stored in the Must Match. Any: at Least One Pair of the Message Header of Key-Value Pairs Stored in the Must Match. This Parameter Applies Only to Headers Exchange Other Types of Exchange Is Invalid. Other Types of Exchange Here Can Either Be an Arbitrary Value.
	Argument string `pulumi:"argument"`
	// The Binding Key. The Source of the Binding Exchange Non-Topic Type: Can Only Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). Length from 1 to 255 Characters. The Source of the Binding Exchange Topic Type: Can Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). If You Include the Hash (.
	BindingKey string `pulumi:"bindingKey"`
	// The Target Binding Types.
	BindingType string `pulumi:"bindingType"`
	// The Target Queue Or Exchange of the Name.
	DestinationName string `pulumi:"destinationName"`
	// The ID of the Binding. The value formats as `<instance_id>:<virtual_host_name>:<source_exchange>:<destination_name>`.
	Id string `pulumi:"id"`
	// Instance Id.
	InstanceId string `pulumi:"instanceId"`
	// The Source Exchange Name.
	SourceExchange string `pulumi:"sourceExchange"`
	// Virtualhost Name.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// GetBindingsBindingInput is an input type that accepts GetBindingsBindingArgs and GetBindingsBindingOutput values.
// You can construct a concrete instance of `GetBindingsBindingInput` via:
//
//          GetBindingsBindingArgs{...}
type GetBindingsBindingInput interface {
	pulumi.Input

	ToGetBindingsBindingOutput() GetBindingsBindingOutput
	ToGetBindingsBindingOutputWithContext(context.Context) GetBindingsBindingOutput
}

type GetBindingsBindingArgs struct {
	// X-match Attributes. Valid Values: All: Default Value, All the Message Header of Key-Value Pairs Stored in the Must Match. Any: at Least One Pair of the Message Header of Key-Value Pairs Stored in the Must Match. This Parameter Applies Only to Headers Exchange Other Types of Exchange Is Invalid. Other Types of Exchange Here Can Either Be an Arbitrary Value.
	Argument pulumi.StringInput `pulumi:"argument"`
	// The Binding Key. The Source of the Binding Exchange Non-Topic Type: Can Only Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). Length from 1 to 255 Characters. The Source of the Binding Exchange Topic Type: Can Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). If You Include the Hash (.
	BindingKey pulumi.StringInput `pulumi:"bindingKey"`
	// The Target Binding Types.
	BindingType pulumi.StringInput `pulumi:"bindingType"`
	// The Target Queue Or Exchange of the Name.
	DestinationName pulumi.StringInput `pulumi:"destinationName"`
	// The ID of the Binding. The value formats as `<instance_id>:<virtual_host_name>:<source_exchange>:<destination_name>`.
	Id pulumi.StringInput `pulumi:"id"`
	// Instance Id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The Source Exchange Name.
	SourceExchange pulumi.StringInput `pulumi:"sourceExchange"`
	// Virtualhost Name.
	VirtualHostName pulumi.StringInput `pulumi:"virtualHostName"`
}

func (GetBindingsBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBindingsBinding)(nil)).Elem()
}

func (i GetBindingsBindingArgs) ToGetBindingsBindingOutput() GetBindingsBindingOutput {
	return i.ToGetBindingsBindingOutputWithContext(context.Background())
}

func (i GetBindingsBindingArgs) ToGetBindingsBindingOutputWithContext(ctx context.Context) GetBindingsBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBindingsBindingOutput)
}

// GetBindingsBindingArrayInput is an input type that accepts GetBindingsBindingArray and GetBindingsBindingArrayOutput values.
// You can construct a concrete instance of `GetBindingsBindingArrayInput` via:
//
//          GetBindingsBindingArray{ GetBindingsBindingArgs{...} }
type GetBindingsBindingArrayInput interface {
	pulumi.Input

	ToGetBindingsBindingArrayOutput() GetBindingsBindingArrayOutput
	ToGetBindingsBindingArrayOutputWithContext(context.Context) GetBindingsBindingArrayOutput
}

type GetBindingsBindingArray []GetBindingsBindingInput

func (GetBindingsBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBindingsBinding)(nil)).Elem()
}

func (i GetBindingsBindingArray) ToGetBindingsBindingArrayOutput() GetBindingsBindingArrayOutput {
	return i.ToGetBindingsBindingArrayOutputWithContext(context.Background())
}

func (i GetBindingsBindingArray) ToGetBindingsBindingArrayOutputWithContext(ctx context.Context) GetBindingsBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBindingsBindingArrayOutput)
}

type GetBindingsBindingOutput struct{ *pulumi.OutputState }

func (GetBindingsBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBindingsBinding)(nil)).Elem()
}

func (o GetBindingsBindingOutput) ToGetBindingsBindingOutput() GetBindingsBindingOutput {
	return o
}

func (o GetBindingsBindingOutput) ToGetBindingsBindingOutputWithContext(ctx context.Context) GetBindingsBindingOutput {
	return o
}

// X-match Attributes. Valid Values: All: Default Value, All the Message Header of Key-Value Pairs Stored in the Must Match. Any: at Least One Pair of the Message Header of Key-Value Pairs Stored in the Must Match. This Parameter Applies Only to Headers Exchange Other Types of Exchange Is Invalid. Other Types of Exchange Here Can Either Be an Arbitrary Value.
func (o GetBindingsBindingOutput) Argument() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.Argument }).(pulumi.StringOutput)
}

// The Binding Key. The Source of the Binding Exchange Non-Topic Type: Can Only Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). Length from 1 to 255 Characters. The Source of the Binding Exchange Topic Type: Can Contain Letters, Lowercase Letters, Numbers, and the Dash (-), the Underscore Character (_), English Periods (.) and the at Sign (@). If You Include the Hash (.
func (o GetBindingsBindingOutput) BindingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.BindingKey }).(pulumi.StringOutput)
}

// The Target Binding Types.
func (o GetBindingsBindingOutput) BindingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.BindingType }).(pulumi.StringOutput)
}

// The Target Queue Or Exchange of the Name.
func (o GetBindingsBindingOutput) DestinationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.DestinationName }).(pulumi.StringOutput)
}

// The ID of the Binding. The value formats as `<instance_id>:<virtual_host_name>:<source_exchange>:<destination_name>`.
func (o GetBindingsBindingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.Id }).(pulumi.StringOutput)
}

// Instance Id.
func (o GetBindingsBindingOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The Source Exchange Name.
func (o GetBindingsBindingOutput) SourceExchange() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.SourceExchange }).(pulumi.StringOutput)
}

// Virtualhost Name.
func (o GetBindingsBindingOutput) VirtualHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBindingsBinding) string { return v.VirtualHostName }).(pulumi.StringOutput)
}

type GetBindingsBindingArrayOutput struct{ *pulumi.OutputState }

func (GetBindingsBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBindingsBinding)(nil)).Elem()
}

func (o GetBindingsBindingArrayOutput) ToGetBindingsBindingArrayOutput() GetBindingsBindingArrayOutput {
	return o
}

func (o GetBindingsBindingArrayOutput) ToGetBindingsBindingArrayOutputWithContext(ctx context.Context) GetBindingsBindingArrayOutput {
	return o
}

func (o GetBindingsBindingArrayOutput) Index(i pulumi.IntInput) GetBindingsBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBindingsBinding {
		return vs[0].([]GetBindingsBinding)[vs[1].(int)]
	}).(GetBindingsBindingOutput)
}

type GetExchangesExchange struct {
	// The attributes.
	Attributes map[string]interface{} `pulumi:"attributes"`
	// Indicates whether the Auto Delete attribute is configured.
	AutoDeleteState bool `pulumi:"autoDeleteState"`
	// The creation time.
	CreateTime string `pulumi:"createTime"`
	// The name of the exchange.
	ExchangeName string `pulumi:"exchangeName"`
	// The type of the exchange.
	ExchangeType string `pulumi:"exchangeType"`
	// The ID of the Exchange. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of virtual host where an exchange resides.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// GetExchangesExchangeInput is an input type that accepts GetExchangesExchangeArgs and GetExchangesExchangeOutput values.
// You can construct a concrete instance of `GetExchangesExchangeInput` via:
//
//          GetExchangesExchangeArgs{...}
type GetExchangesExchangeInput interface {
	pulumi.Input

	ToGetExchangesExchangeOutput() GetExchangesExchangeOutput
	ToGetExchangesExchangeOutputWithContext(context.Context) GetExchangesExchangeOutput
}

type GetExchangesExchangeArgs struct {
	// The attributes.
	Attributes pulumi.MapInput `pulumi:"attributes"`
	// Indicates whether the Auto Delete attribute is configured.
	AutoDeleteState pulumi.BoolInput `pulumi:"autoDeleteState"`
	// The creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The name of the exchange.
	ExchangeName pulumi.StringInput `pulumi:"exchangeName"`
	// The type of the exchange.
	ExchangeType pulumi.StringInput `pulumi:"exchangeType"`
	// The ID of the Exchange. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of virtual host where an exchange resides.
	VirtualHostName pulumi.StringInput `pulumi:"virtualHostName"`
}

func (GetExchangesExchangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExchangesExchange)(nil)).Elem()
}

func (i GetExchangesExchangeArgs) ToGetExchangesExchangeOutput() GetExchangesExchangeOutput {
	return i.ToGetExchangesExchangeOutputWithContext(context.Background())
}

func (i GetExchangesExchangeArgs) ToGetExchangesExchangeOutputWithContext(ctx context.Context) GetExchangesExchangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExchangesExchangeOutput)
}

// GetExchangesExchangeArrayInput is an input type that accepts GetExchangesExchangeArray and GetExchangesExchangeArrayOutput values.
// You can construct a concrete instance of `GetExchangesExchangeArrayInput` via:
//
//          GetExchangesExchangeArray{ GetExchangesExchangeArgs{...} }
type GetExchangesExchangeArrayInput interface {
	pulumi.Input

	ToGetExchangesExchangeArrayOutput() GetExchangesExchangeArrayOutput
	ToGetExchangesExchangeArrayOutputWithContext(context.Context) GetExchangesExchangeArrayOutput
}

type GetExchangesExchangeArray []GetExchangesExchangeInput

func (GetExchangesExchangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExchangesExchange)(nil)).Elem()
}

func (i GetExchangesExchangeArray) ToGetExchangesExchangeArrayOutput() GetExchangesExchangeArrayOutput {
	return i.ToGetExchangesExchangeArrayOutputWithContext(context.Background())
}

func (i GetExchangesExchangeArray) ToGetExchangesExchangeArrayOutputWithContext(ctx context.Context) GetExchangesExchangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExchangesExchangeArrayOutput)
}

type GetExchangesExchangeOutput struct{ *pulumi.OutputState }

func (GetExchangesExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExchangesExchange)(nil)).Elem()
}

func (o GetExchangesExchangeOutput) ToGetExchangesExchangeOutput() GetExchangesExchangeOutput {
	return o
}

func (o GetExchangesExchangeOutput) ToGetExchangesExchangeOutputWithContext(ctx context.Context) GetExchangesExchangeOutput {
	return o
}

// The attributes.
func (o GetExchangesExchangeOutput) Attributes() pulumi.MapOutput {
	return o.ApplyT(func(v GetExchangesExchange) map[string]interface{} { return v.Attributes }).(pulumi.MapOutput)
}

// Indicates whether the Auto Delete attribute is configured.
func (o GetExchangesExchangeOutput) AutoDeleteState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetExchangesExchange) bool { return v.AutoDeleteState }).(pulumi.BoolOutput)
}

// The creation time.
func (o GetExchangesExchangeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The name of the exchange.
func (o GetExchangesExchangeOutput) ExchangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.ExchangeName }).(pulumi.StringOutput)
}

// The type of the exchange.
func (o GetExchangesExchangeOutput) ExchangeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.ExchangeType }).(pulumi.StringOutput)
}

// The ID of the Exchange. Its value is same as Queue Name.
func (o GetExchangesExchangeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetExchangesExchangeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of virtual host where an exchange resides.
func (o GetExchangesExchangeOutput) VirtualHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExchangesExchange) string { return v.VirtualHostName }).(pulumi.StringOutput)
}

type GetExchangesExchangeArrayOutput struct{ *pulumi.OutputState }

func (GetExchangesExchangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExchangesExchange)(nil)).Elem()
}

func (o GetExchangesExchangeArrayOutput) ToGetExchangesExchangeArrayOutput() GetExchangesExchangeArrayOutput {
	return o
}

func (o GetExchangesExchangeArrayOutput) ToGetExchangesExchangeArrayOutputWithContext(ctx context.Context) GetExchangesExchangeArrayOutput {
	return o
}

func (o GetExchangesExchangeArrayOutput) Index(i pulumi.IntInput) GetExchangesExchangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExchangesExchange {
		return vs[0].([]GetExchangesExchange)[vs[1].(int)]
	}).(GetExchangesExchangeOutput)
}

type GetInstancesInstance struct {
	// OrderCreateTime.
	CreateTime string `pulumi:"createTime"`
	// ExpireTime.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of the Instance.
	Id string `pulumi:"id"`
	// THe instance Id.
	InstanceId string `pulumi:"instanceId"`
	// THe instance name.
	InstanceName string `pulumi:"instanceName"`
	// The instance type.
	InstanceType string `pulumi:"instanceType"`
	// The Pay-as-You-Type Values Include: the Subscription of a Pre-Paid.
	PaymentType string `pulumi:"paymentType"`
	// The private endPoint.
	PrivateEndPoint string `pulumi:"privateEndPoint"`
	// The public dndpoint.
	PublicEndpoint string `pulumi:"publicEndpoint"`
	// Renewal duration.
	RenewalDuration int `pulumi:"renewalDuration"`
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit string `pulumi:"renewalDurationUnit"`
	// Renew status.
	RenewalStatus string `pulumi:"renewalStatus"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// Whether to support eip.
	SupportEip bool `pulumi:"supportEip"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// OrderCreateTime.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// ExpireTime.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of the Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// THe instance Id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// THe instance name.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The Pay-as-You-Type Values Include: the Subscription of a Pre-Paid.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The private endPoint.
	PrivateEndPoint pulumi.StringInput `pulumi:"privateEndPoint"`
	// The public dndpoint.
	PublicEndpoint pulumi.StringInput `pulumi:"publicEndpoint"`
	// Renewal duration.
	RenewalDuration pulumi.IntInput `pulumi:"renewalDuration"`
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit pulumi.StringInput `pulumi:"renewalDurationUnit"`
	// Renew status.
	RenewalStatus pulumi.StringInput `pulumi:"renewalStatus"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// Whether to support eip.
	SupportEip pulumi.BoolInput `pulumi:"supportEip"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// OrderCreateTime.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// ExpireTime.
func (o GetInstancesInstanceOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of the Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// THe instance Id.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// THe instance name.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The instance type.
func (o GetInstancesInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Pay-as-You-Type Values Include: the Subscription of a Pre-Paid.
func (o GetInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The private endPoint.
func (o GetInstancesInstanceOutput) PrivateEndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateEndPoint }).(pulumi.StringOutput)
}

// The public dndpoint.
func (o GetInstancesInstanceOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

// Renewal duration.
func (o GetInstancesInstanceOutput) RenewalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.RenewalDuration }).(pulumi.IntOutput)
}

// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
func (o GetInstancesInstanceOutput) RenewalDurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RenewalDurationUnit }).(pulumi.StringOutput)
}

// Renew status.
func (o GetInstancesInstanceOutput) RenewalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RenewalStatus }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Whether to support eip.
func (o GetInstancesInstanceOutput) SupportEip() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.SupportEip }).(pulumi.BoolOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetQueuesQueue struct {
	// The attributes for the Queue.
	Attributes map[string]interface{} `pulumi:"attributes"`
	// Specifies whether the Auto Delete attribute is configured.
	AutoDeleteState bool `pulumi:"autoDeleteState"`
	// CreateTime.
	CreateTime string `pulumi:"createTime"`
	// Specifies whether the queue is an exclusive queue.
	ExclusiveState bool `pulumi:"exclusiveState"`
	// The ID of the Queue. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// The last consume time.
	LastConsumeTime string `pulumi:"lastConsumeTime"`
	// The queue name.
	QueueName string `pulumi:"queueName"`
	// The name of the virtual host.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// GetQueuesQueueInput is an input type that accepts GetQueuesQueueArgs and GetQueuesQueueOutput values.
// You can construct a concrete instance of `GetQueuesQueueInput` via:
//
//          GetQueuesQueueArgs{...}
type GetQueuesQueueInput interface {
	pulumi.Input

	ToGetQueuesQueueOutput() GetQueuesQueueOutput
	ToGetQueuesQueueOutputWithContext(context.Context) GetQueuesQueueOutput
}

type GetQueuesQueueArgs struct {
	// The attributes for the Queue.
	Attributes pulumi.MapInput `pulumi:"attributes"`
	// Specifies whether the Auto Delete attribute is configured.
	AutoDeleteState pulumi.BoolInput `pulumi:"autoDeleteState"`
	// CreateTime.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Specifies whether the queue is an exclusive queue.
	ExclusiveState pulumi.BoolInput `pulumi:"exclusiveState"`
	// The ID of the Queue. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The last consume time.
	LastConsumeTime pulumi.StringInput `pulumi:"lastConsumeTime"`
	// The queue name.
	QueueName pulumi.StringInput `pulumi:"queueName"`
	// The name of the virtual host.
	VirtualHostName pulumi.StringInput `pulumi:"virtualHostName"`
}

func (GetQueuesQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesQueue)(nil)).Elem()
}

func (i GetQueuesQueueArgs) ToGetQueuesQueueOutput() GetQueuesQueueOutput {
	return i.ToGetQueuesQueueOutputWithContext(context.Background())
}

func (i GetQueuesQueueArgs) ToGetQueuesQueueOutputWithContext(ctx context.Context) GetQueuesQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueuesQueueOutput)
}

// GetQueuesQueueArrayInput is an input type that accepts GetQueuesQueueArray and GetQueuesQueueArrayOutput values.
// You can construct a concrete instance of `GetQueuesQueueArrayInput` via:
//
//          GetQueuesQueueArray{ GetQueuesQueueArgs{...} }
type GetQueuesQueueArrayInput interface {
	pulumi.Input

	ToGetQueuesQueueArrayOutput() GetQueuesQueueArrayOutput
	ToGetQueuesQueueArrayOutputWithContext(context.Context) GetQueuesQueueArrayOutput
}

type GetQueuesQueueArray []GetQueuesQueueInput

func (GetQueuesQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueuesQueue)(nil)).Elem()
}

func (i GetQueuesQueueArray) ToGetQueuesQueueArrayOutput() GetQueuesQueueArrayOutput {
	return i.ToGetQueuesQueueArrayOutputWithContext(context.Background())
}

func (i GetQueuesQueueArray) ToGetQueuesQueueArrayOutputWithContext(ctx context.Context) GetQueuesQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueuesQueueArrayOutput)
}

type GetQueuesQueueOutput struct{ *pulumi.OutputState }

func (GetQueuesQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesQueue)(nil)).Elem()
}

func (o GetQueuesQueueOutput) ToGetQueuesQueueOutput() GetQueuesQueueOutput {
	return o
}

func (o GetQueuesQueueOutput) ToGetQueuesQueueOutputWithContext(ctx context.Context) GetQueuesQueueOutput {
	return o
}

// The attributes for the Queue.
func (o GetQueuesQueueOutput) Attributes() pulumi.MapOutput {
	return o.ApplyT(func(v GetQueuesQueue) map[string]interface{} { return v.Attributes }).(pulumi.MapOutput)
}

// Specifies whether the Auto Delete attribute is configured.
func (o GetQueuesQueueOutput) AutoDeleteState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueuesQueue) bool { return v.AutoDeleteState }).(pulumi.BoolOutput)
}

// CreateTime.
func (o GetQueuesQueueOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies whether the queue is an exclusive queue.
func (o GetQueuesQueueOutput) ExclusiveState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQueuesQueue) bool { return v.ExclusiveState }).(pulumi.BoolOutput)
}

// The ID of the Queue. Its value is same as Queue Name.
func (o GetQueuesQueueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetQueuesQueueOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The last consume time.
func (o GetQueuesQueueOutput) LastConsumeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.LastConsumeTime }).(pulumi.StringOutput)
}

// The queue name.
func (o GetQueuesQueueOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.QueueName }).(pulumi.StringOutput)
}

// The name of the virtual host.
func (o GetQueuesQueueOutput) VirtualHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesQueue) string { return v.VirtualHostName }).(pulumi.StringOutput)
}

type GetQueuesQueueArrayOutput struct{ *pulumi.OutputState }

func (GetQueuesQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueuesQueue)(nil)).Elem()
}

func (o GetQueuesQueueArrayOutput) ToGetQueuesQueueArrayOutput() GetQueuesQueueArrayOutput {
	return o
}

func (o GetQueuesQueueArrayOutput) ToGetQueuesQueueArrayOutputWithContext(ctx context.Context) GetQueuesQueueArrayOutput {
	return o
}

func (o GetQueuesQueueArrayOutput) Index(i pulumi.IntInput) GetQueuesQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueuesQueue {
		return vs[0].([]GetQueuesQueue)[vs[1].(int)]
	}).(GetQueuesQueueOutput)
}

type GetVirtualHostsHost struct {
	// The ID of the Virtual Host.
	Id string `pulumi:"id"`
	// InstanceId.
	InstanceId string `pulumi:"instanceId"`
	// VirtualHostName.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// GetVirtualHostsHostInput is an input type that accepts GetVirtualHostsHostArgs and GetVirtualHostsHostOutput values.
// You can construct a concrete instance of `GetVirtualHostsHostInput` via:
//
//          GetVirtualHostsHostArgs{...}
type GetVirtualHostsHostInput interface {
	pulumi.Input

	ToGetVirtualHostsHostOutput() GetVirtualHostsHostOutput
	ToGetVirtualHostsHostOutputWithContext(context.Context) GetVirtualHostsHostOutput
}

type GetVirtualHostsHostArgs struct {
	// The ID of the Virtual Host.
	Id pulumi.StringInput `pulumi:"id"`
	// InstanceId.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// VirtualHostName.
	VirtualHostName pulumi.StringInput `pulumi:"virtualHostName"`
}

func (GetVirtualHostsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHostsHost)(nil)).Elem()
}

func (i GetVirtualHostsHostArgs) ToGetVirtualHostsHostOutput() GetVirtualHostsHostOutput {
	return i.ToGetVirtualHostsHostOutputWithContext(context.Background())
}

func (i GetVirtualHostsHostArgs) ToGetVirtualHostsHostOutputWithContext(ctx context.Context) GetVirtualHostsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHostsHostOutput)
}

// GetVirtualHostsHostArrayInput is an input type that accepts GetVirtualHostsHostArray and GetVirtualHostsHostArrayOutput values.
// You can construct a concrete instance of `GetVirtualHostsHostArrayInput` via:
//
//          GetVirtualHostsHostArray{ GetVirtualHostsHostArgs{...} }
type GetVirtualHostsHostArrayInput interface {
	pulumi.Input

	ToGetVirtualHostsHostArrayOutput() GetVirtualHostsHostArrayOutput
	ToGetVirtualHostsHostArrayOutputWithContext(context.Context) GetVirtualHostsHostArrayOutput
}

type GetVirtualHostsHostArray []GetVirtualHostsHostInput

func (GetVirtualHostsHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHostsHost)(nil)).Elem()
}

func (i GetVirtualHostsHostArray) ToGetVirtualHostsHostArrayOutput() GetVirtualHostsHostArrayOutput {
	return i.ToGetVirtualHostsHostArrayOutputWithContext(context.Background())
}

func (i GetVirtualHostsHostArray) ToGetVirtualHostsHostArrayOutputWithContext(ctx context.Context) GetVirtualHostsHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHostsHostArrayOutput)
}

type GetVirtualHostsHostOutput struct{ *pulumi.OutputState }

func (GetVirtualHostsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHostsHost)(nil)).Elem()
}

func (o GetVirtualHostsHostOutput) ToGetVirtualHostsHostOutput() GetVirtualHostsHostOutput {
	return o
}

func (o GetVirtualHostsHostOutput) ToGetVirtualHostsHostOutputWithContext(ctx context.Context) GetVirtualHostsHostOutput {
	return o
}

// The ID of the Virtual Host.
func (o GetVirtualHostsHostOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHostsHost) string { return v.Id }).(pulumi.StringOutput)
}

// InstanceId.
func (o GetVirtualHostsHostOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHostsHost) string { return v.InstanceId }).(pulumi.StringOutput)
}

// VirtualHostName.
func (o GetVirtualHostsHostOutput) VirtualHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHostsHost) string { return v.VirtualHostName }).(pulumi.StringOutput)
}

type GetVirtualHostsHostArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualHostsHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHostsHost)(nil)).Elem()
}

func (o GetVirtualHostsHostArrayOutput) ToGetVirtualHostsHostArrayOutput() GetVirtualHostsHostArrayOutput {
	return o
}

func (o GetVirtualHostsHostArrayOutput) ToGetVirtualHostsHostArrayOutputWithContext(ctx context.Context) GetVirtualHostsHostArrayOutput {
	return o
}

func (o GetVirtualHostsHostArrayOutput) Index(i pulumi.IntInput) GetVirtualHostsHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualHostsHost {
		return vs[0].([]GetVirtualHostsHost)[vs[1].(int)]
	}).(GetVirtualHostsHostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetBindingsBindingInput)(nil)).Elem(), GetBindingsBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBindingsBindingArrayInput)(nil)).Elem(), GetBindingsBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExchangesExchangeInput)(nil)).Elem(), GetExchangesExchangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExchangesExchangeArrayInput)(nil)).Elem(), GetExchangesExchangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueuesQueueInput)(nil)).Elem(), GetQueuesQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueuesQueueArrayInput)(nil)).Elem(), GetQueuesQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHostsHostInput)(nil)).Elem(), GetVirtualHostsHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHostsHostArrayInput)(nil)).Elem(), GetVirtualHostsHostArray{})
	pulumi.RegisterOutputType(GetBindingsBindingOutput{})
	pulumi.RegisterOutputType(GetBindingsBindingArrayOutput{})
	pulumi.RegisterOutputType(GetExchangesExchangeOutput{})
	pulumi.RegisterOutputType(GetExchangesExchangeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetQueuesQueueOutput{})
	pulumi.RegisterOutputType(GetQueuesQueueArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualHostsHostOutput{})
	pulumi.RegisterOutputType(GetVirtualHostsHostArrayOutput{})
}
