// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Amqp Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:amqp/instance:Instance example <id>
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// OrderCreateTime.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// The instance name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
	MaxConnections pulumi.IntOutput `pulumi:"maxConnections"`
	// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
	MaxEipTps pulumi.StringOutput `pulumi:"maxEipTps"`
	// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
	MaxTps pulumi.StringOutput `pulumi:"maxTps"`
	// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
	// - Upgrade: Upgrade
	// - Downgrade: Downgrading.
	ModifyType pulumi.StringPtrOutput `pulumi:"modifyType"`
	// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Prepaid cycle units. Value: Month. Year: Year.
	PeriodCycle pulumi.StringPtrOutput `pulumi:"periodCycle"`
	// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
	QueueCapacity pulumi.StringOutput `pulumi:"queueCapacity"`
	// The number of automatic renewal cycles.
	RenewalDuration pulumi.IntOutput `pulumi:"renewalDuration"`
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit pulumi.StringOutput `pulumi:"renewalDurationUnit"`
	// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
	RenewalStatus pulumi.StringOutput `pulumi:"renewalStatus"`
	// The billing type of the serverless instance. Value: onDemand.
	ServerlessChargeType pulumi.StringPtrOutput `pulumi:"serverlessChargeType"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
	StorageSize pulumi.StringOutput `pulumi:"storageSize"`
	// Whether to support public network.
	SupportEip pulumi.BoolPtrOutput `pulumi:"supportEip"`
	// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
	SupportTracing pulumi.BoolOutput `pulumi:"supportTracing"`
	// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
	TracingStorageTime pulumi.IntOutput `pulumi:"tracingStorageTime"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("alicloud:amqp/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("alicloud:amqp/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
	AutoRenew *bool `pulumi:"autoRenew"`
	// OrderCreateTime.
	CreateTime *int `pulumi:"createTime"`
	// The instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
	InstanceType *string `pulumi:"instanceType"`
	// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
	MaxConnections *int `pulumi:"maxConnections"`
	// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
	MaxEipTps *string `pulumi:"maxEipTps"`
	// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
	MaxTps *string `pulumi:"maxTps"`
	// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
	// - Upgrade: Upgrade
	// - Downgrade: Downgrading.
	ModifyType *string `pulumi:"modifyType"`
	// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
	PaymentType *string `pulumi:"paymentType"`
	// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
	Period *int `pulumi:"period"`
	// Prepaid cycle units. Value: Month. Year: Year.
	PeriodCycle *string `pulumi:"periodCycle"`
	// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
	QueueCapacity *string `pulumi:"queueCapacity"`
	// The number of automatic renewal cycles.
	RenewalDuration *int `pulumi:"renewalDuration"`
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit *string `pulumi:"renewalDurationUnit"`
	// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The billing type of the serverless instance. Value: onDemand.
	ServerlessChargeType *string `pulumi:"serverlessChargeType"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
	StorageSize *string `pulumi:"storageSize"`
	// Whether to support public network.
	SupportEip *bool `pulumi:"supportEip"`
	// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
	SupportTracing *bool `pulumi:"supportTracing"`
	// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
	TracingStorageTime *int `pulumi:"tracingStorageTime"`
}

type InstanceState struct {
	// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
	AutoRenew pulumi.BoolPtrInput
	// OrderCreateTime.
	CreateTime pulumi.IntPtrInput
	// The instance name.
	InstanceName pulumi.StringPtrInput
	// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
	InstanceType pulumi.StringPtrInput
	// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
	MaxConnections pulumi.IntPtrInput
	// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
	MaxEipTps pulumi.StringPtrInput
	// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
	MaxTps pulumi.StringPtrInput
	// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
	// - Upgrade: Upgrade
	// - Downgrade: Downgrading.
	ModifyType pulumi.StringPtrInput
	// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
	PaymentType pulumi.StringPtrInput
	// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
	Period pulumi.IntPtrInput
	// Prepaid cycle units. Value: Month. Year: Year.
	PeriodCycle pulumi.StringPtrInput
	// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
	QueueCapacity pulumi.StringPtrInput
	// The number of automatic renewal cycles.
	RenewalDuration pulumi.IntPtrInput
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit pulumi.StringPtrInput
	// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
	RenewalStatus pulumi.StringPtrInput
	// The billing type of the serverless instance. Value: onDemand.
	ServerlessChargeType pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
	// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
	StorageSize pulumi.StringPtrInput
	// Whether to support public network.
	SupportEip pulumi.BoolPtrInput
	// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
	SupportTracing pulumi.BoolPtrInput
	// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
	TracingStorageTime pulumi.IntPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
	InstanceType *string `pulumi:"instanceType"`
	// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
	MaxConnections *int `pulumi:"maxConnections"`
	// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
	MaxEipTps *string `pulumi:"maxEipTps"`
	// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
	MaxTps *string `pulumi:"maxTps"`
	// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
	// - Upgrade: Upgrade
	// - Downgrade: Downgrading.
	ModifyType *string `pulumi:"modifyType"`
	// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
	PaymentType string `pulumi:"paymentType"`
	// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
	Period *int `pulumi:"period"`
	// Prepaid cycle units. Value: Month. Year: Year.
	PeriodCycle *string `pulumi:"periodCycle"`
	// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
	QueueCapacity *string `pulumi:"queueCapacity"`
	// The number of automatic renewal cycles.
	RenewalDuration *int `pulumi:"renewalDuration"`
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit *string `pulumi:"renewalDurationUnit"`
	// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// The billing type of the serverless instance. Value: onDemand.
	ServerlessChargeType *string `pulumi:"serverlessChargeType"`
	// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
	StorageSize *string `pulumi:"storageSize"`
	// Whether to support public network.
	SupportEip *bool `pulumi:"supportEip"`
	// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
	SupportTracing *bool `pulumi:"supportTracing"`
	// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
	TracingStorageTime *int `pulumi:"tracingStorageTime"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
	AutoRenew pulumi.BoolPtrInput
	// The instance name.
	InstanceName pulumi.StringPtrInput
	// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
	InstanceType pulumi.StringPtrInput
	// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
	MaxConnections pulumi.IntPtrInput
	// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
	MaxEipTps pulumi.StringPtrInput
	// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
	MaxTps pulumi.StringPtrInput
	// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
	// - Upgrade: Upgrade
	// - Downgrade: Downgrading.
	ModifyType pulumi.StringPtrInput
	// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
	PaymentType pulumi.StringInput
	// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
	Period pulumi.IntPtrInput
	// Prepaid cycle units. Value: Month. Year: Year.
	PeriodCycle pulumi.StringPtrInput
	// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
	QueueCapacity pulumi.StringPtrInput
	// The number of automatic renewal cycles.
	RenewalDuration pulumi.IntPtrInput
	// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
	RenewalDurationUnit pulumi.StringPtrInput
	// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
	RenewalStatus pulumi.StringPtrInput
	// The billing type of the serverless instance. Value: onDemand.
	ServerlessChargeType pulumi.StringPtrInput
	// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
	StorageSize pulumi.StringPtrInput
	// Whether to support public network.
	SupportEip pulumi.BoolPtrInput
	// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
	SupportTracing pulumi.BoolPtrInput
	// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
	TracingStorageTime pulumi.IntPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Renewal method. Automatic renewal: true; Manual renewal: false. When RenewalStatus has a value, the value of RenewalStatus shall prevail.
func (o InstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// OrderCreateTime.
func (o InstanceOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// The instance name.
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Instance type. Valid values are as follows:  professional: professional Edition enterprise: enterprise Edition vip: Platinum Edition.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The maximum number of connections, according to the value given on the purchase page of the cloud message queue RabbitMQ version console.
func (o InstanceOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.MaxConnections }).(pulumi.IntOutput)
}

// Peak TPS traffic of the public network, which must be a multiple of 128, unit: times per second.
func (o InstanceOutput) MaxEipTps() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaxEipTps }).(pulumi.StringOutput)
}

// Configure the private network TPS traffic peak, please set the value according to the cloud message queue RabbitMQ version of the console purchase page given.
func (o InstanceOutput) MaxTps() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaxTps }).(pulumi.StringOutput)
}

// This parameter must be provided while you change the instance specification. Type of instance lifting and lowering:
// - Upgrade: Upgrade
// - Downgrade: Downgrading.
func (o InstanceOutput) ModifyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ModifyType }).(pulumi.StringPtrOutput)
}

// The Payment type. Valid value: Subscription: prepaid. PayAsYouGo: Post-paid.
func (o InstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Prepayment cycle, unit: periodCycle.  This parameter is valid when PaymentType is set to Subscription.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Prepaid cycle units. Value: Month. Year: Year.
func (o InstanceOutput) PeriodCycle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PeriodCycle }).(pulumi.StringPtrOutput)
}

// Configure the maximum number of queues. The value range is as follows:  Professional version:[50,1000], minimum modification step size is 5  Enterprise Edition:[200,6000], minimum modification step size is 100  Platinum version:[10000,80000], minimum modification step size is 100.
func (o InstanceOutput) QueueCapacity() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.QueueCapacity }).(pulumi.StringOutput)
}

// The number of automatic renewal cycles.
func (o InstanceOutput) RenewalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.RenewalDuration }).(pulumi.IntOutput)
}

// Auto-Renewal Cycle Unit Values Include: Month: Month. Year: Years.
func (o InstanceOutput) RenewalDurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.RenewalDurationUnit }).(pulumi.StringOutput)
}

// The renewal status. Value: AutoRenewal: automatic renewal. ManualRenewal: manual renewal. NotRenewal: no renewal.
func (o InstanceOutput) RenewalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.RenewalStatus }).(pulumi.StringOutput)
}

// The billing type of the serverless instance. Value: onDemand.
func (o InstanceOutput) ServerlessChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ServerlessChargeType }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Configure the message storage space. Unit: GB. The value is as follows:  Professional Edition and Enterprise Edition: Fixed to 0. Description A value of 0 indicates that the Professional Edition and Enterprise Edition instances do not charge storage fees, but do not have storage space. Platinum version example: m × 100, where the value range of m is [7,28].
func (o InstanceOutput) StorageSize() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StorageSize }).(pulumi.StringOutput)
}

// Whether to support public network.
func (o InstanceOutput) SupportEip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.SupportEip }).(pulumi.BoolPtrOutput)
}

// Whether to activate the message trace function. The values are as follows:  true: Enable message trace function false: message trace function is not enabled Description The Platinum Edition instance provides the 15-day message trace function free of charge. The trace function can only be enabled and the trace storage duration can only be set to 15 days. For instances of other specifications, you can enable or disable the trace function.
func (o InstanceOutput) SupportTracing() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.SupportTracing }).(pulumi.BoolOutput)
}

// Configure the storage duration of message traces. Unit: Days. The value is as follows:  3:3 days 7:7 days 15:15 days This parameter is valid when SupportTracing is true.
func (o InstanceOutput) TracingStorageTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.TracingStorageTime }).(pulumi.IntOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
