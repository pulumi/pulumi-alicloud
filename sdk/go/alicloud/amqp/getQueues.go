// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Amqp Queues of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.127.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/amqp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := amqp.GetQueues(ctx, &amqp.GetQueuesArgs{
// 			InstanceId:      "amqp-abc12345",
// 			VirtualHostName: "my-VirtualHost",
// 			Ids: []string{
// 				"my-Queue-1",
// 				"my-Queue-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpQueueId1", ids.Queues[0].Id)
// 		nameRegex, err := amqp.GetQueues(ctx, &amqp.GetQueuesArgs{
// 			InstanceId:      "amqp-abc12345",
// 			VirtualHostName: "my-VirtualHost",
// 			NameRegex:       pulumi.StringRef("^my-Queue"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpQueueId2", nameRegex.Queues[0].Id)
// 		return nil
// 	})
// }
// ```
func GetQueues(ctx *pulumi.Context, args *GetQueuesArgs, opts ...pulumi.InvokeOption) (*GetQueuesResult, error) {
	var rv GetQueuesResult
	err := ctx.Invoke("alicloud:amqp/getQueues:getQueues", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueues.
type GetQueuesArgs struct {
	// A list of Queue IDs. Its element value is same as Queue Name.
	Ids []string `pulumi:"ids"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by Queue name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The name of the virtual host.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// A collection of values returned by getQueues.
type GetQueuesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string           `pulumi:"id"`
	Ids             []string         `pulumi:"ids"`
	InstanceId      string           `pulumi:"instanceId"`
	NameRegex       *string          `pulumi:"nameRegex"`
	Names           []string         `pulumi:"names"`
	OutputFile      *string          `pulumi:"outputFile"`
	Queues          []GetQueuesQueue `pulumi:"queues"`
	VirtualHostName string           `pulumi:"virtualHostName"`
}

func GetQueuesOutput(ctx *pulumi.Context, args GetQueuesOutputArgs, opts ...pulumi.InvokeOption) GetQueuesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQueuesResult, error) {
			args := v.(GetQueuesArgs)
			r, err := GetQueues(ctx, &args, opts...)
			var s GetQueuesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQueuesResultOutput)
}

// A collection of arguments for invoking getQueues.
type GetQueuesOutputArgs struct {
	// A list of Queue IDs. Its element value is same as Queue Name.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A regex string to filter results by Queue name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of the virtual host.
	VirtualHostName pulumi.StringInput `pulumi:"virtualHostName"`
}

func (GetQueuesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesArgs)(nil)).Elem()
}

// A collection of values returned by getQueues.
type GetQueuesResultOutput struct{ *pulumi.OutputState }

func (GetQueuesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesResult)(nil)).Elem()
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutput() GetQueuesResultOutput {
	return o
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutputWithContext(ctx context.Context) GetQueuesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetQueuesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQueuesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetQueuesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetQueuesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetQueuesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetQueuesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetQueuesResultOutput) Queues() GetQueuesQueueArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []GetQueuesQueue { return v.Queues }).(GetQueuesQueueArrayOutput)
}

func (o GetQueuesResultOutput) VirtualHostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesResult) string { return v.VirtualHostName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueuesResultOutput{})
}
