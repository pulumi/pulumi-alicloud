// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// Private Zone attachment can be imported using the id(same with `zone_id`), e.g.
//
// ```sh
//  $ pulumi import alicloud:pvtz/zoneAttachment:ZoneAttachment example abc123456
// ```
type ZoneAttachment struct {
	pulumi.CustomResourceState

	// The language of code.
	Lang pulumi.StringPtrOutput `pulumi:"lang"`
	// The user custom IP address.
	UserClientIp pulumi.StringPtrOutput `pulumi:"userClientIp"`
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"].
	VpcIds pulumi.StringArrayOutput `pulumi:"vpcIds"`
	// The List of the VPC:
	Vpcs ZoneAttachmentVpcArrayOutput `pulumi:"vpcs"`
	// The name of the Private Zone Record.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewZoneAttachment registers a new resource with the given unique name, arguments, and options.
func NewZoneAttachment(ctx *pulumi.Context,
	name string, args *ZoneAttachmentArgs, opts ...pulumi.ResourceOption) (*ZoneAttachment, error) {
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	if args == nil {
		args = &ZoneAttachmentArgs{}
	}
	var resource ZoneAttachment
	err := ctx.RegisterResource("alicloud:pvtz/zoneAttachment:ZoneAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZoneAttachment gets an existing ZoneAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneAttachmentState, opts ...pulumi.ResourceOption) (*ZoneAttachment, error) {
	var resource ZoneAttachment
	err := ctx.ReadResource("alicloud:pvtz/zoneAttachment:ZoneAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZoneAttachment resources.
type zoneAttachmentState struct {
	// The language of code.
	Lang *string `pulumi:"lang"`
	// The user custom IP address.
	UserClientIp *string `pulumi:"userClientIp"`
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"].
	VpcIds []string `pulumi:"vpcIds"`
	// The List of the VPC:
	Vpcs []ZoneAttachmentVpc `pulumi:"vpcs"`
	// The name of the Private Zone Record.
	ZoneId *string `pulumi:"zoneId"`
}

type ZoneAttachmentState struct {
	// The language of code.
	Lang pulumi.StringPtrInput
	// The user custom IP address.
	UserClientIp pulumi.StringPtrInput
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"].
	VpcIds pulumi.StringArrayInput
	// The List of the VPC:
	Vpcs ZoneAttachmentVpcArrayInput
	// The name of the Private Zone Record.
	ZoneId pulumi.StringPtrInput
}

func (ZoneAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneAttachmentState)(nil)).Elem()
}

type zoneAttachmentArgs struct {
	// The language of code.
	Lang *string `pulumi:"lang"`
	// The user custom IP address.
	UserClientIp *string `pulumi:"userClientIp"`
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"].
	VpcIds []string `pulumi:"vpcIds"`
	// The List of the VPC:
	Vpcs []ZoneAttachmentVpc `pulumi:"vpcs"`
	// The name of the Private Zone Record.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ZoneAttachment resource.
type ZoneAttachmentArgs struct {
	// The language of code.
	Lang pulumi.StringPtrInput
	// The user custom IP address.
	UserClientIp pulumi.StringPtrInput
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"].
	VpcIds pulumi.StringArrayInput
	// The List of the VPC:
	Vpcs ZoneAttachmentVpcArrayInput
	// The name of the Private Zone Record.
	ZoneId pulumi.StringInput
}

func (ZoneAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneAttachmentArgs)(nil)).Elem()
}

type ZoneAttachmentInput interface {
	pulumi.Input

	ToZoneAttachmentOutput() ZoneAttachmentOutput
	ToZoneAttachmentOutputWithContext(ctx context.Context) ZoneAttachmentOutput
}

func (ZoneAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAttachment)(nil)).Elem()
}

func (i ZoneAttachment) ToZoneAttachmentOutput() ZoneAttachmentOutput {
	return i.ToZoneAttachmentOutputWithContext(context.Background())
}

func (i ZoneAttachment) ToZoneAttachmentOutputWithContext(ctx context.Context) ZoneAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAttachmentOutput)
}

type ZoneAttachmentOutput struct {
	*pulumi.OutputState
}

func (ZoneAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAttachmentOutput)(nil)).Elem()
}

func (o ZoneAttachmentOutput) ToZoneAttachmentOutput() ZoneAttachmentOutput {
	return o
}

func (o ZoneAttachmentOutput) ToZoneAttachmentOutputWithContext(ctx context.Context) ZoneAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ZoneAttachmentOutput{})
}
