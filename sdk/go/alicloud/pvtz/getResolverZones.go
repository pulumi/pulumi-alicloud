// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the available zones with the Private Zone Resolver of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.143.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pvtz"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_default, err := pvtz.GetResolverZones(ctx, &pvtz.GetResolverZonesArgs{
// 			Status: pulumi.StringRef("NORMAL"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstZonesId", _default.Zones[0].ZoneId)
// 		return nil
// 	})
// }
// ```
func GetResolverZones(ctx *pulumi.Context, args *GetResolverZonesArgs, opts ...pulumi.InvokeOption) (*GetResolverZonesResult, error) {
	var rv GetResolverZonesResult
	err := ctx.Invoke("alicloud:pvtz/getResolverZones:getResolverZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverZones.
type GetResolverZonesArgs struct {
	OutputFile *string `pulumi:"outputFile"`
	// The status of the Zone.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getResolverZones.
type GetResolverZonesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                 `pulumi:"id"`
	OutputFile *string                `pulumi:"outputFile"`
	Status     *string                `pulumi:"status"`
	Zones      []GetResolverZonesZone `pulumi:"zones"`
}

func GetResolverZonesOutput(ctx *pulumi.Context, args GetResolverZonesOutputArgs, opts ...pulumi.InvokeOption) GetResolverZonesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetResolverZonesResult, error) {
			args := v.(GetResolverZonesArgs)
			r, err := GetResolverZones(ctx, &args, opts...)
			var s GetResolverZonesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetResolverZonesResultOutput)
}

// A collection of arguments for invoking getResolverZones.
type GetResolverZonesOutputArgs struct {
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the Zone.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetResolverZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverZonesArgs)(nil)).Elem()
}

// A collection of values returned by getResolverZones.
type GetResolverZonesResultOutput struct{ *pulumi.OutputState }

func (GetResolverZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverZonesResult)(nil)).Elem()
}

func (o GetResolverZonesResultOutput) ToGetResolverZonesResultOutput() GetResolverZonesResultOutput {
	return o
}

func (o GetResolverZonesResultOutput) ToGetResolverZonesResultOutputWithContext(ctx context.Context) GetResolverZonesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetResolverZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetResolverZonesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverZonesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetResolverZonesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverZonesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetResolverZonesResultOutput) Zones() GetResolverZonesZoneArrayOutput {
	return o.ApplyT(func(v GetResolverZonesResult) []GetResolverZonesZone { return v.Zones }).(GetResolverZonesZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResolverZonesResultOutput{})
}
