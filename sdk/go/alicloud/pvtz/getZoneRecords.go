// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Private Zone Records of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.13.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pvtz"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example.com"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := pvtz.NewZone(ctx, "default", &pvtz.ZoneArgs{
//				ZoneName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultZoneRecord, err := pvtz.NewZoneRecord(ctx, "default", &pvtz.ZoneRecordArgs{
//				ZoneId:   _default.ID(),
//				Rr:       pulumi.String("www"),
//				Type:     pulumi.String("MX"),
//				Value:    pulumi.String(name),
//				Ttl:      pulumi.Int(60),
//				Priority: pulumi.Int(2),
//				Remark:   pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			ids := pvtz.GetZoneRecordsOutput(ctx, pvtz.GetZoneRecordsOutputArgs{
//				ZoneId: defaultZoneRecord.ZoneId,
//				Ids: pulumi.StringArray{
//					defaultZoneRecord.RecordId,
//				},
//			}, nil)
//			ctx.Export("pvtzZoneRecordsId0", ids.ApplyT(func(ids pvtz.GetZoneRecordsResult) (*string, error) {
//				return &ids.Records[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetZoneRecords(ctx *pulumi.Context, args *GetZoneRecordsArgs, opts ...pulumi.InvokeOption) (*GetZoneRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetZoneRecordsResult
	err := ctx.Invoke("alicloud:pvtz/getZoneRecords:getZoneRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneRecords.
type GetZoneRecordsArgs struct {
	// A list of Private Zone Record IDs.
	Ids []string `pulumi:"ids"`
	// The keyword for record rr and value.
	Keyword *string `pulumi:"keyword"`
	// The language of the response. Default value: `en`. Valid values: `en`, `zh`.
	Lang *string `pulumi:"lang"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The search mode. Default value: `EXACT`. Valid values:
	// - `LIKE`: Fuzzy search.
	// - `EXACT`: Exact search.
	SearchMode *string `pulumi:"searchMode"`
	// The status of the Resolve record. Valid values:
	// - `ENABLE`: Enable resolution.
	// - `DISABLE`: Pause parsing.
	Status *string `pulumi:"status"`
	// The tag used to search for DNS records.
	Tag *string `pulumi:"tag"`
	// The IP address of the client.
	UserClientIp *string `pulumi:"userClientIp"`
	// The ID of the private zone.
	ZoneId string `pulumi:"zoneId"`
}

// A collection of values returned by getZoneRecords.
type GetZoneRecordsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	Keyword    *string  `pulumi:"keyword"`
	Lang       *string  `pulumi:"lang"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Zone Record. Each element contains the following attributes:
	Records    []GetZoneRecordsRecord `pulumi:"records"`
	SearchMode *string                `pulumi:"searchMode"`
	// The state of the Private Zone Record.
	Status       *string `pulumi:"status"`
	Tag          *string `pulumi:"tag"`
	UserClientIp *string `pulumi:"userClientIp"`
	ZoneId       string  `pulumi:"zoneId"`
}

func GetZoneRecordsOutput(ctx *pulumi.Context, args GetZoneRecordsOutputArgs, opts ...pulumi.InvokeOption) GetZoneRecordsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetZoneRecordsResultOutput, error) {
			args := v.(GetZoneRecordsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:pvtz/getZoneRecords:getZoneRecords", args, GetZoneRecordsResultOutput{}, options).(GetZoneRecordsResultOutput), nil
		}).(GetZoneRecordsResultOutput)
}

// A collection of arguments for invoking getZoneRecords.
type GetZoneRecordsOutputArgs struct {
	// A list of Private Zone Record IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The keyword for record rr and value.
	Keyword pulumi.StringPtrInput `pulumi:"keyword"`
	// The language of the response. Default value: `en`. Valid values: `en`, `zh`.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The search mode. Default value: `EXACT`. Valid values:
	// - `LIKE`: Fuzzy search.
	// - `EXACT`: Exact search.
	SearchMode pulumi.StringPtrInput `pulumi:"searchMode"`
	// The status of the Resolve record. Valid values:
	// - `ENABLE`: Enable resolution.
	// - `DISABLE`: Pause parsing.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The tag used to search for DNS records.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The IP address of the client.
	UserClientIp pulumi.StringPtrInput `pulumi:"userClientIp"`
	// The ID of the private zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetZoneRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneRecordsArgs)(nil)).Elem()
}

// A collection of values returned by getZoneRecords.
type GetZoneRecordsResultOutput struct{ *pulumi.OutputState }

func (GetZoneRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneRecordsResult)(nil)).Elem()
}

func (o GetZoneRecordsResultOutput) ToGetZoneRecordsResultOutput() GetZoneRecordsResultOutput {
	return o
}

func (o GetZoneRecordsResultOutput) ToGetZoneRecordsResultOutputWithContext(ctx context.Context) GetZoneRecordsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetZoneRecordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZoneRecordsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetZoneRecordsResultOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

func (o GetZoneRecordsResultOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

func (o GetZoneRecordsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Zone Record. Each element contains the following attributes:
func (o GetZoneRecordsResultOutput) Records() GetZoneRecordsRecordArrayOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) []GetZoneRecordsRecord { return v.Records }).(GetZoneRecordsRecordArrayOutput)
}

func (o GetZoneRecordsResultOutput) SearchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.SearchMode }).(pulumi.StringPtrOutput)
}

// The state of the Private Zone Record.
func (o GetZoneRecordsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetZoneRecordsResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o GetZoneRecordsResultOutput) UserClientIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) *string { return v.UserClientIp }).(pulumi.StringPtrOutput)
}

func (o GetZoneRecordsResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZoneRecordsResultOutput{})
}
