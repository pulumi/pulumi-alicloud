// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointIpConfig struct {
	// The Subnet mask.
	CidrBlock string `pulumi:"cidrBlock"`
	// The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
	Ip *string `pulumi:"ip"`
	// The Vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The Zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// EndpointIpConfigInput is an input type that accepts EndpointIpConfigArgs and EndpointIpConfigOutput values.
// You can construct a concrete instance of `EndpointIpConfigInput` via:
//
//          EndpointIpConfigArgs{...}
type EndpointIpConfigInput interface {
	pulumi.Input

	ToEndpointIpConfigOutput() EndpointIpConfigOutput
	ToEndpointIpConfigOutputWithContext(context.Context) EndpointIpConfigOutput
}

type EndpointIpConfigArgs struct {
	// The Subnet mask.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The Vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The Zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (EndpointIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointIpConfig)(nil)).Elem()
}

func (i EndpointIpConfigArgs) ToEndpointIpConfigOutput() EndpointIpConfigOutput {
	return i.ToEndpointIpConfigOutputWithContext(context.Background())
}

func (i EndpointIpConfigArgs) ToEndpointIpConfigOutputWithContext(ctx context.Context) EndpointIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointIpConfigOutput)
}

// EndpointIpConfigArrayInput is an input type that accepts EndpointIpConfigArray and EndpointIpConfigArrayOutput values.
// You can construct a concrete instance of `EndpointIpConfigArrayInput` via:
//
//          EndpointIpConfigArray{ EndpointIpConfigArgs{...} }
type EndpointIpConfigArrayInput interface {
	pulumi.Input

	ToEndpointIpConfigArrayOutput() EndpointIpConfigArrayOutput
	ToEndpointIpConfigArrayOutputWithContext(context.Context) EndpointIpConfigArrayOutput
}

type EndpointIpConfigArray []EndpointIpConfigInput

func (EndpointIpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointIpConfig)(nil)).Elem()
}

func (i EndpointIpConfigArray) ToEndpointIpConfigArrayOutput() EndpointIpConfigArrayOutput {
	return i.ToEndpointIpConfigArrayOutputWithContext(context.Background())
}

func (i EndpointIpConfigArray) ToEndpointIpConfigArrayOutputWithContext(ctx context.Context) EndpointIpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointIpConfigArrayOutput)
}

type EndpointIpConfigOutput struct{ *pulumi.OutputState }

func (EndpointIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointIpConfig)(nil)).Elem()
}

func (o EndpointIpConfigOutput) ToEndpointIpConfigOutput() EndpointIpConfigOutput {
	return o
}

func (o EndpointIpConfigOutput) ToEndpointIpConfigOutputWithContext(ctx context.Context) EndpointIpConfigOutput {
	return o
}

// The Subnet mask.
func (o EndpointIpConfigOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointIpConfig) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
func (o EndpointIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointIpConfig) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The Vswitch id.
func (o EndpointIpConfigOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointIpConfig) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The Zone ID.
func (o EndpointIpConfigOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointIpConfig) string { return v.ZoneId }).(pulumi.StringOutput)
}

type EndpointIpConfigArrayOutput struct{ *pulumi.OutputState }

func (EndpointIpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointIpConfig)(nil)).Elem()
}

func (o EndpointIpConfigArrayOutput) ToEndpointIpConfigArrayOutput() EndpointIpConfigArrayOutput {
	return o
}

func (o EndpointIpConfigArrayOutput) ToEndpointIpConfigArrayOutputWithContext(ctx context.Context) EndpointIpConfigArrayOutput {
	return o
}

func (o EndpointIpConfigArrayOutput) Index(i pulumi.IntInput) EndpointIpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointIpConfig {
		return vs[0].([]EndpointIpConfig)[vs[1].(int)]
	}).(EndpointIpConfigOutput)
}

type RuleAttachmentVpc struct {
	// The region of the vpc. If not set, the current region will instead of.
	RegionId string `pulumi:"regionId"`
	// The ID of the VPC.  **NOTE:** The VPC that can be associated with the forwarding rule must belong to the same region as the Endpoint.
	VpcId string `pulumi:"vpcId"`
}

// RuleAttachmentVpcInput is an input type that accepts RuleAttachmentVpcArgs and RuleAttachmentVpcOutput values.
// You can construct a concrete instance of `RuleAttachmentVpcInput` via:
//
//          RuleAttachmentVpcArgs{...}
type RuleAttachmentVpcInput interface {
	pulumi.Input

	ToRuleAttachmentVpcOutput() RuleAttachmentVpcOutput
	ToRuleAttachmentVpcOutputWithContext(context.Context) RuleAttachmentVpcOutput
}

type RuleAttachmentVpcArgs struct {
	// The region of the vpc. If not set, the current region will instead of.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The ID of the VPC.  **NOTE:** The VPC that can be associated with the forwarding rule must belong to the same region as the Endpoint.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (RuleAttachmentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAttachmentVpc)(nil)).Elem()
}

func (i RuleAttachmentVpcArgs) ToRuleAttachmentVpcOutput() RuleAttachmentVpcOutput {
	return i.ToRuleAttachmentVpcOutputWithContext(context.Background())
}

func (i RuleAttachmentVpcArgs) ToRuleAttachmentVpcOutputWithContext(ctx context.Context) RuleAttachmentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAttachmentVpcOutput)
}

// RuleAttachmentVpcArrayInput is an input type that accepts RuleAttachmentVpcArray and RuleAttachmentVpcArrayOutput values.
// You can construct a concrete instance of `RuleAttachmentVpcArrayInput` via:
//
//          RuleAttachmentVpcArray{ RuleAttachmentVpcArgs{...} }
type RuleAttachmentVpcArrayInput interface {
	pulumi.Input

	ToRuleAttachmentVpcArrayOutput() RuleAttachmentVpcArrayOutput
	ToRuleAttachmentVpcArrayOutputWithContext(context.Context) RuleAttachmentVpcArrayOutput
}

type RuleAttachmentVpcArray []RuleAttachmentVpcInput

func (RuleAttachmentVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAttachmentVpc)(nil)).Elem()
}

func (i RuleAttachmentVpcArray) ToRuleAttachmentVpcArrayOutput() RuleAttachmentVpcArrayOutput {
	return i.ToRuleAttachmentVpcArrayOutputWithContext(context.Background())
}

func (i RuleAttachmentVpcArray) ToRuleAttachmentVpcArrayOutputWithContext(ctx context.Context) RuleAttachmentVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAttachmentVpcArrayOutput)
}

type RuleAttachmentVpcOutput struct{ *pulumi.OutputState }

func (RuleAttachmentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAttachmentVpc)(nil)).Elem()
}

func (o RuleAttachmentVpcOutput) ToRuleAttachmentVpcOutput() RuleAttachmentVpcOutput {
	return o
}

func (o RuleAttachmentVpcOutput) ToRuleAttachmentVpcOutputWithContext(ctx context.Context) RuleAttachmentVpcOutput {
	return o
}

// The region of the vpc. If not set, the current region will instead of.
func (o RuleAttachmentVpcOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v RuleAttachmentVpc) string { return v.RegionId }).(pulumi.StringOutput)
}

// The ID of the VPC.  **NOTE:** The VPC that can be associated with the forwarding rule must belong to the same region as the Endpoint.
func (o RuleAttachmentVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RuleAttachmentVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type RuleAttachmentVpcArrayOutput struct{ *pulumi.OutputState }

func (RuleAttachmentVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAttachmentVpc)(nil)).Elem()
}

func (o RuleAttachmentVpcArrayOutput) ToRuleAttachmentVpcArrayOutput() RuleAttachmentVpcArrayOutput {
	return o
}

func (o RuleAttachmentVpcArrayOutput) ToRuleAttachmentVpcArrayOutputWithContext(ctx context.Context) RuleAttachmentVpcArrayOutput {
	return o
}

func (o RuleAttachmentVpcArrayOutput) Index(i pulumi.IntInput) RuleAttachmentVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleAttachmentVpc {
		return vs[0].([]RuleAttachmentVpc)[vs[1].(int)]
	}).(RuleAttachmentVpcOutput)
}

type RuleForwardIp struct {
	// The ip of the forwarding destination.
	Ip string `pulumi:"ip"`
	// The port of the forwarding destination.
	Port int `pulumi:"port"`
}

// RuleForwardIpInput is an input type that accepts RuleForwardIpArgs and RuleForwardIpOutput values.
// You can construct a concrete instance of `RuleForwardIpInput` via:
//
//          RuleForwardIpArgs{...}
type RuleForwardIpInput interface {
	pulumi.Input

	ToRuleForwardIpOutput() RuleForwardIpOutput
	ToRuleForwardIpOutputWithContext(context.Context) RuleForwardIpOutput
}

type RuleForwardIpArgs struct {
	// The ip of the forwarding destination.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The port of the forwarding destination.
	Port pulumi.IntInput `pulumi:"port"`
}

func (RuleForwardIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleForwardIp)(nil)).Elem()
}

func (i RuleForwardIpArgs) ToRuleForwardIpOutput() RuleForwardIpOutput {
	return i.ToRuleForwardIpOutputWithContext(context.Background())
}

func (i RuleForwardIpArgs) ToRuleForwardIpOutputWithContext(ctx context.Context) RuleForwardIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleForwardIpOutput)
}

// RuleForwardIpArrayInput is an input type that accepts RuleForwardIpArray and RuleForwardIpArrayOutput values.
// You can construct a concrete instance of `RuleForwardIpArrayInput` via:
//
//          RuleForwardIpArray{ RuleForwardIpArgs{...} }
type RuleForwardIpArrayInput interface {
	pulumi.Input

	ToRuleForwardIpArrayOutput() RuleForwardIpArrayOutput
	ToRuleForwardIpArrayOutputWithContext(context.Context) RuleForwardIpArrayOutput
}

type RuleForwardIpArray []RuleForwardIpInput

func (RuleForwardIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleForwardIp)(nil)).Elem()
}

func (i RuleForwardIpArray) ToRuleForwardIpArrayOutput() RuleForwardIpArrayOutput {
	return i.ToRuleForwardIpArrayOutputWithContext(context.Background())
}

func (i RuleForwardIpArray) ToRuleForwardIpArrayOutputWithContext(ctx context.Context) RuleForwardIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleForwardIpArrayOutput)
}

type RuleForwardIpOutput struct{ *pulumi.OutputState }

func (RuleForwardIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleForwardIp)(nil)).Elem()
}

func (o RuleForwardIpOutput) ToRuleForwardIpOutput() RuleForwardIpOutput {
	return o
}

func (o RuleForwardIpOutput) ToRuleForwardIpOutputWithContext(ctx context.Context) RuleForwardIpOutput {
	return o
}

// The ip of the forwarding destination.
func (o RuleForwardIpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v RuleForwardIp) string { return v.Ip }).(pulumi.StringOutput)
}

// The port of the forwarding destination.
func (o RuleForwardIpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v RuleForwardIp) int { return v.Port }).(pulumi.IntOutput)
}

type RuleForwardIpArrayOutput struct{ *pulumi.OutputState }

func (RuleForwardIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleForwardIp)(nil)).Elem()
}

func (o RuleForwardIpArrayOutput) ToRuleForwardIpArrayOutput() RuleForwardIpArrayOutput {
	return o
}

func (o RuleForwardIpArrayOutput) ToRuleForwardIpArrayOutputWithContext(ctx context.Context) RuleForwardIpArrayOutput {
	return o
}

func (o RuleForwardIpArrayOutput) Index(i pulumi.IntInput) RuleForwardIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleForwardIp {
		return vs[0].([]RuleForwardIp)[vs[1].(int)]
	}).(RuleForwardIpOutput)
}

type ZoneAttachmentVpc struct {
	// The region of the vpc. If not set, the current region will instead of.
	RegionId *string `pulumi:"regionId"`
	// The Id of the vpc.
	VpcId string `pulumi:"vpcId"`
}

// ZoneAttachmentVpcInput is an input type that accepts ZoneAttachmentVpcArgs and ZoneAttachmentVpcOutput values.
// You can construct a concrete instance of `ZoneAttachmentVpcInput` via:
//
//          ZoneAttachmentVpcArgs{...}
type ZoneAttachmentVpcInput interface {
	pulumi.Input

	ToZoneAttachmentVpcOutput() ZoneAttachmentVpcOutput
	ToZoneAttachmentVpcOutputWithContext(context.Context) ZoneAttachmentVpcOutput
}

type ZoneAttachmentVpcArgs struct {
	// The region of the vpc. If not set, the current region will instead of.
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
	// The Id of the vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (ZoneAttachmentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAttachmentVpc)(nil)).Elem()
}

func (i ZoneAttachmentVpcArgs) ToZoneAttachmentVpcOutput() ZoneAttachmentVpcOutput {
	return i.ToZoneAttachmentVpcOutputWithContext(context.Background())
}

func (i ZoneAttachmentVpcArgs) ToZoneAttachmentVpcOutputWithContext(ctx context.Context) ZoneAttachmentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAttachmentVpcOutput)
}

// ZoneAttachmentVpcArrayInput is an input type that accepts ZoneAttachmentVpcArray and ZoneAttachmentVpcArrayOutput values.
// You can construct a concrete instance of `ZoneAttachmentVpcArrayInput` via:
//
//          ZoneAttachmentVpcArray{ ZoneAttachmentVpcArgs{...} }
type ZoneAttachmentVpcArrayInput interface {
	pulumi.Input

	ToZoneAttachmentVpcArrayOutput() ZoneAttachmentVpcArrayOutput
	ToZoneAttachmentVpcArrayOutputWithContext(context.Context) ZoneAttachmentVpcArrayOutput
}

type ZoneAttachmentVpcArray []ZoneAttachmentVpcInput

func (ZoneAttachmentVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneAttachmentVpc)(nil)).Elem()
}

func (i ZoneAttachmentVpcArray) ToZoneAttachmentVpcArrayOutput() ZoneAttachmentVpcArrayOutput {
	return i.ToZoneAttachmentVpcArrayOutputWithContext(context.Background())
}

func (i ZoneAttachmentVpcArray) ToZoneAttachmentVpcArrayOutputWithContext(ctx context.Context) ZoneAttachmentVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneAttachmentVpcArrayOutput)
}

type ZoneAttachmentVpcOutput struct{ *pulumi.OutputState }

func (ZoneAttachmentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneAttachmentVpc)(nil)).Elem()
}

func (o ZoneAttachmentVpcOutput) ToZoneAttachmentVpcOutput() ZoneAttachmentVpcOutput {
	return o
}

func (o ZoneAttachmentVpcOutput) ToZoneAttachmentVpcOutputWithContext(ctx context.Context) ZoneAttachmentVpcOutput {
	return o
}

// The region of the vpc. If not set, the current region will instead of.
func (o ZoneAttachmentVpcOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneAttachmentVpc) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// The Id of the vpc.
func (o ZoneAttachmentVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneAttachmentVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type ZoneAttachmentVpcArrayOutput struct{ *pulumi.OutputState }

func (ZoneAttachmentVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneAttachmentVpc)(nil)).Elem()
}

func (o ZoneAttachmentVpcArrayOutput) ToZoneAttachmentVpcArrayOutput() ZoneAttachmentVpcArrayOutput {
	return o
}

func (o ZoneAttachmentVpcArrayOutput) ToZoneAttachmentVpcArrayOutputWithContext(ctx context.Context) ZoneAttachmentVpcArrayOutput {
	return o
}

func (o ZoneAttachmentVpcArrayOutput) Index(i pulumi.IntInput) ZoneAttachmentVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneAttachmentVpc {
		return vs[0].([]ZoneAttachmentVpc)[vs[1].(int)]
	}).(ZoneAttachmentVpcOutput)
}

type ZoneUserInfo struct {
	// The list of the region IDs.
	RegionIds []string `pulumi:"regionIds"`
	// The user ID belonging to the region is used for cross-account synchronization scenarios.
	UserId *string `pulumi:"userId"`
}

// ZoneUserInfoInput is an input type that accepts ZoneUserInfoArgs and ZoneUserInfoOutput values.
// You can construct a concrete instance of `ZoneUserInfoInput` via:
//
//          ZoneUserInfoArgs{...}
type ZoneUserInfoInput interface {
	pulumi.Input

	ToZoneUserInfoOutput() ZoneUserInfoOutput
	ToZoneUserInfoOutputWithContext(context.Context) ZoneUserInfoOutput
}

type ZoneUserInfoArgs struct {
	// The list of the region IDs.
	RegionIds pulumi.StringArrayInput `pulumi:"regionIds"`
	// The user ID belonging to the region is used for cross-account synchronization scenarios.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (ZoneUserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneUserInfo)(nil)).Elem()
}

func (i ZoneUserInfoArgs) ToZoneUserInfoOutput() ZoneUserInfoOutput {
	return i.ToZoneUserInfoOutputWithContext(context.Background())
}

func (i ZoneUserInfoArgs) ToZoneUserInfoOutputWithContext(ctx context.Context) ZoneUserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneUserInfoOutput)
}

// ZoneUserInfoArrayInput is an input type that accepts ZoneUserInfoArray and ZoneUserInfoArrayOutput values.
// You can construct a concrete instance of `ZoneUserInfoArrayInput` via:
//
//          ZoneUserInfoArray{ ZoneUserInfoArgs{...} }
type ZoneUserInfoArrayInput interface {
	pulumi.Input

	ToZoneUserInfoArrayOutput() ZoneUserInfoArrayOutput
	ToZoneUserInfoArrayOutputWithContext(context.Context) ZoneUserInfoArrayOutput
}

type ZoneUserInfoArray []ZoneUserInfoInput

func (ZoneUserInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneUserInfo)(nil)).Elem()
}

func (i ZoneUserInfoArray) ToZoneUserInfoArrayOutput() ZoneUserInfoArrayOutput {
	return i.ToZoneUserInfoArrayOutputWithContext(context.Background())
}

func (i ZoneUserInfoArray) ToZoneUserInfoArrayOutputWithContext(ctx context.Context) ZoneUserInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneUserInfoArrayOutput)
}

type ZoneUserInfoOutput struct{ *pulumi.OutputState }

func (ZoneUserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneUserInfo)(nil)).Elem()
}

func (o ZoneUserInfoOutput) ToZoneUserInfoOutput() ZoneUserInfoOutput {
	return o
}

func (o ZoneUserInfoOutput) ToZoneUserInfoOutputWithContext(ctx context.Context) ZoneUserInfoOutput {
	return o
}

// The list of the region IDs.
func (o ZoneUserInfoOutput) RegionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneUserInfo) []string { return v.RegionIds }).(pulumi.StringArrayOutput)
}

// The user ID belonging to the region is used for cross-account synchronization scenarios.
func (o ZoneUserInfoOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneUserInfo) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type ZoneUserInfoArrayOutput struct{ *pulumi.OutputState }

func (ZoneUserInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneUserInfo)(nil)).Elem()
}

func (o ZoneUserInfoArrayOutput) ToZoneUserInfoArrayOutput() ZoneUserInfoArrayOutput {
	return o
}

func (o ZoneUserInfoArrayOutput) ToZoneUserInfoArrayOutputWithContext(ctx context.Context) ZoneUserInfoArrayOutput {
	return o
}

func (o ZoneUserInfoArrayOutput) Index(i pulumi.IntInput) ZoneUserInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneUserInfo {
		return vs[0].([]ZoneUserInfo)[vs[1].(int)]
	}).(ZoneUserInfoOutput)
}

type GetEndpointsEndpoint struct {
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The name of the resource.
	EndpointName string `pulumi:"endpointName"`
	Id           string `pulumi:"id"`
	// The Ip Configs.
	IpConfigs []GetEndpointsEndpointIpConfig `pulumi:"ipConfigs"`
	// The ID of the Security Group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
	Status string `pulumi:"status"`
	// The VPC ID.
	VpcId string `pulumi:"vpcId"`
	// The name of the VPC.
	VpcName string `pulumi:"vpcName"`
	// The Region of the VPC.
	VpcRegionId string `pulumi:"vpcRegionId"`
}

// GetEndpointsEndpointInput is an input type that accepts GetEndpointsEndpointArgs and GetEndpointsEndpointOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointInput` via:
//
//          GetEndpointsEndpointArgs{...}
type GetEndpointsEndpointInput interface {
	pulumi.Input

	ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput
	ToGetEndpointsEndpointOutputWithContext(context.Context) GetEndpointsEndpointOutput
}

type GetEndpointsEndpointArgs struct {
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The name of the resource.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	Id           pulumi.StringInput `pulumi:"id"`
	// The Ip Configs.
	IpConfigs GetEndpointsEndpointIpConfigArrayInput `pulumi:"ipConfigs"`
	// The ID of the Security Group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the VPC.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// The Region of the VPC.
	VpcRegionId pulumi.StringInput `pulumi:"vpcRegionId"`
}

func (GetEndpointsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return i.ToGetEndpointsEndpointOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointOutput)
}

// GetEndpointsEndpointArrayInput is an input type that accepts GetEndpointsEndpointArray and GetEndpointsEndpointArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointArrayInput` via:
//
//          GetEndpointsEndpointArray{ GetEndpointsEndpointArgs{...} }
type GetEndpointsEndpointArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput
	ToGetEndpointsEndpointArrayOutputWithContext(context.Context) GetEndpointsEndpointArrayOutput
}

type GetEndpointsEndpointArray []GetEndpointsEndpointInput

func (GetEndpointsEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return i.ToGetEndpointsEndpointArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointArrayOutput)
}

type GetEndpointsEndpointOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return o
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return o
}

// The creation time of the resource.
func (o GetEndpointsEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetEndpointsEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointName }).(pulumi.StringOutput)
}

func (o GetEndpointsEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The Ip Configs.
func (o GetEndpointsEndpointOutput) IpConfigs() GetEndpointsEndpointIpConfigArrayOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) []GetEndpointsEndpointIpConfig { return v.IpConfigs }).(GetEndpointsEndpointIpConfigArrayOutput)
}

// The ID of the Security Group.
func (o GetEndpointsEndpointOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
func (o GetEndpointsEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC ID.
func (o GetEndpointsEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the VPC.
func (o GetEndpointsEndpointOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.VpcName }).(pulumi.StringOutput)
}

// The Region of the VPC.
func (o GetEndpointsEndpointOutput) VpcRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.VpcRegionId }).(pulumi.StringOutput)
}

type GetEndpointsEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpoint {
		return vs[0].([]GetEndpointsEndpoint)[vs[1].(int)]
	}).(GetEndpointsEndpointOutput)
}

type GetEndpointsEndpointIpConfig struct {
	// The Subnet mask.
	CidrBlock string `pulumi:"cidrBlock"`
	// The IP address within the parameter range of the subnet mask. **NOTE:** It is recommended to use the IP address assigned by the system.
	Ip string `pulumi:"ip"`
	// The Vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The Zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetEndpointsEndpointIpConfigInput is an input type that accepts GetEndpointsEndpointIpConfigArgs and GetEndpointsEndpointIpConfigOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointIpConfigInput` via:
//
//          GetEndpointsEndpointIpConfigArgs{...}
type GetEndpointsEndpointIpConfigInput interface {
	pulumi.Input

	ToGetEndpointsEndpointIpConfigOutput() GetEndpointsEndpointIpConfigOutput
	ToGetEndpointsEndpointIpConfigOutputWithContext(context.Context) GetEndpointsEndpointIpConfigOutput
}

type GetEndpointsEndpointIpConfigArgs struct {
	// The Subnet mask.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The IP address within the parameter range of the subnet mask. **NOTE:** It is recommended to use the IP address assigned by the system.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The Vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The Zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetEndpointsEndpointIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointIpConfig)(nil)).Elem()
}

func (i GetEndpointsEndpointIpConfigArgs) ToGetEndpointsEndpointIpConfigOutput() GetEndpointsEndpointIpConfigOutput {
	return i.ToGetEndpointsEndpointIpConfigOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointIpConfigArgs) ToGetEndpointsEndpointIpConfigOutputWithContext(ctx context.Context) GetEndpointsEndpointIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointIpConfigOutput)
}

// GetEndpointsEndpointIpConfigArrayInput is an input type that accepts GetEndpointsEndpointIpConfigArray and GetEndpointsEndpointIpConfigArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointIpConfigArrayInput` via:
//
//          GetEndpointsEndpointIpConfigArray{ GetEndpointsEndpointIpConfigArgs{...} }
type GetEndpointsEndpointIpConfigArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointIpConfigArrayOutput() GetEndpointsEndpointIpConfigArrayOutput
	ToGetEndpointsEndpointIpConfigArrayOutputWithContext(context.Context) GetEndpointsEndpointIpConfigArrayOutput
}

type GetEndpointsEndpointIpConfigArray []GetEndpointsEndpointIpConfigInput

func (GetEndpointsEndpointIpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointIpConfig)(nil)).Elem()
}

func (i GetEndpointsEndpointIpConfigArray) ToGetEndpointsEndpointIpConfigArrayOutput() GetEndpointsEndpointIpConfigArrayOutput {
	return i.ToGetEndpointsEndpointIpConfigArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointIpConfigArray) ToGetEndpointsEndpointIpConfigArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointIpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointIpConfigArrayOutput)
}

type GetEndpointsEndpointIpConfigOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointIpConfig)(nil)).Elem()
}

func (o GetEndpointsEndpointIpConfigOutput) ToGetEndpointsEndpointIpConfigOutput() GetEndpointsEndpointIpConfigOutput {
	return o
}

func (o GetEndpointsEndpointIpConfigOutput) ToGetEndpointsEndpointIpConfigOutputWithContext(ctx context.Context) GetEndpointsEndpointIpConfigOutput {
	return o
}

// The Subnet mask.
func (o GetEndpointsEndpointIpConfigOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointIpConfig) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The IP address within the parameter range of the subnet mask. **NOTE:** It is recommended to use the IP address assigned by the system.
func (o GetEndpointsEndpointIpConfigOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointIpConfig) string { return v.Ip }).(pulumi.StringOutput)
}

// The Vswitch id.
func (o GetEndpointsEndpointIpConfigOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointIpConfig) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The Zone ID.
func (o GetEndpointsEndpointIpConfigOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointIpConfig) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetEndpointsEndpointIpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointIpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointIpConfig)(nil)).Elem()
}

func (o GetEndpointsEndpointIpConfigArrayOutput) ToGetEndpointsEndpointIpConfigArrayOutput() GetEndpointsEndpointIpConfigArrayOutput {
	return o
}

func (o GetEndpointsEndpointIpConfigArrayOutput) ToGetEndpointsEndpointIpConfigArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointIpConfigArrayOutput {
	return o
}

func (o GetEndpointsEndpointIpConfigArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointIpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpointIpConfig {
		return vs[0].([]GetEndpointsEndpointIpConfig)[vs[1].(int)]
	}).(GetEndpointsEndpointIpConfigOutput)
}

type GetResolverZonesZone struct {
	// The status of the Zone.
	Status string `pulumi:"status"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetResolverZonesZoneInput is an input type that accepts GetResolverZonesZoneArgs and GetResolverZonesZoneOutput values.
// You can construct a concrete instance of `GetResolverZonesZoneInput` via:
//
//          GetResolverZonesZoneArgs{...}
type GetResolverZonesZoneInput interface {
	pulumi.Input

	ToGetResolverZonesZoneOutput() GetResolverZonesZoneOutput
	ToGetResolverZonesZoneOutputWithContext(context.Context) GetResolverZonesZoneOutput
}

type GetResolverZonesZoneArgs struct {
	// The status of the Zone.
	Status pulumi.StringInput `pulumi:"status"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetResolverZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverZonesZone)(nil)).Elem()
}

func (i GetResolverZonesZoneArgs) ToGetResolverZonesZoneOutput() GetResolverZonesZoneOutput {
	return i.ToGetResolverZonesZoneOutputWithContext(context.Background())
}

func (i GetResolverZonesZoneArgs) ToGetResolverZonesZoneOutputWithContext(ctx context.Context) GetResolverZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverZonesZoneOutput)
}

// GetResolverZonesZoneArrayInput is an input type that accepts GetResolverZonesZoneArray and GetResolverZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetResolverZonesZoneArrayInput` via:
//
//          GetResolverZonesZoneArray{ GetResolverZonesZoneArgs{...} }
type GetResolverZonesZoneArrayInput interface {
	pulumi.Input

	ToGetResolverZonesZoneArrayOutput() GetResolverZonesZoneArrayOutput
	ToGetResolverZonesZoneArrayOutputWithContext(context.Context) GetResolverZonesZoneArrayOutput
}

type GetResolverZonesZoneArray []GetResolverZonesZoneInput

func (GetResolverZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverZonesZone)(nil)).Elem()
}

func (i GetResolverZonesZoneArray) ToGetResolverZonesZoneArrayOutput() GetResolverZonesZoneArrayOutput {
	return i.ToGetResolverZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetResolverZonesZoneArray) ToGetResolverZonesZoneArrayOutputWithContext(ctx context.Context) GetResolverZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverZonesZoneArrayOutput)
}

type GetResolverZonesZoneOutput struct{ *pulumi.OutputState }

func (GetResolverZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverZonesZone)(nil)).Elem()
}

func (o GetResolverZonesZoneOutput) ToGetResolverZonesZoneOutput() GetResolverZonesZoneOutput {
	return o
}

func (o GetResolverZonesZoneOutput) ToGetResolverZonesZoneOutputWithContext(ctx context.Context) GetResolverZonesZoneOutput {
	return o
}

// The status of the Zone.
func (o GetResolverZonesZoneOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverZonesZone) string { return v.Status }).(pulumi.StringOutput)
}

// The zone ID.
func (o GetResolverZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetResolverZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetResolverZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverZonesZone)(nil)).Elem()
}

func (o GetResolverZonesZoneArrayOutput) ToGetResolverZonesZoneArrayOutput() GetResolverZonesZoneArrayOutput {
	return o
}

func (o GetResolverZonesZoneArrayOutput) ToGetResolverZonesZoneArrayOutputWithContext(ctx context.Context) GetResolverZonesZoneArrayOutput {
	return o
}

func (o GetResolverZonesZoneArrayOutput) Index(i pulumi.IntInput) GetResolverZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverZonesZone {
		return vs[0].([]GetResolverZonesZone)[vs[1].(int)]
	}).(GetResolverZonesZoneOutput)
}

type GetRulesRule struct {
	// The List of the VPC. See the following `Block bindVpcs`. **NOTE:** Available in v1.158.0+.
	BindVpcs []GetRulesRuleBindVpc `pulumi:"bindVpcs"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The Name of the Endpoint.
	EndpointName string                  `pulumi:"endpointName"`
	ForwardIps   []GetRulesRuleForwardIp `pulumi:"forwardIps"`
	// The ID of the Rule.
	Id string `pulumi:"id"`
	// The first ID of the resource.
	RuleId string `pulumi:"ruleId"`
	// The name of the resource.
	RuleName string `pulumi:"ruleName"`
	// The type of the rule.
	Type string `pulumi:"type"`
	// The name of the forwarding zone.
	ZoneName string `pulumi:"zoneName"`
}

// GetRulesRuleInput is an input type that accepts GetRulesRuleArgs and GetRulesRuleOutput values.
// You can construct a concrete instance of `GetRulesRuleInput` via:
//
//          GetRulesRuleArgs{...}
type GetRulesRuleInput interface {
	pulumi.Input

	ToGetRulesRuleOutput() GetRulesRuleOutput
	ToGetRulesRuleOutputWithContext(context.Context) GetRulesRuleOutput
}

type GetRulesRuleArgs struct {
	// The List of the VPC. See the following `Block bindVpcs`. **NOTE:** Available in v1.158.0+.
	BindVpcs GetRulesRuleBindVpcArrayInput `pulumi:"bindVpcs"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The Name of the Endpoint.
	EndpointName pulumi.StringInput              `pulumi:"endpointName"`
	ForwardIps   GetRulesRuleForwardIpArrayInput `pulumi:"forwardIps"`
	// The ID of the Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The first ID of the resource.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of the resource.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	// The type of the rule.
	Type pulumi.StringInput `pulumi:"type"`
	// The name of the forwarding zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return i.ToGetRulesRuleOutputWithContext(context.Background())
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleOutput)
}

// GetRulesRuleArrayInput is an input type that accepts GetRulesRuleArray and GetRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleArrayInput` via:
//
//          GetRulesRuleArray{ GetRulesRuleArgs{...} }
type GetRulesRuleArrayInput interface {
	pulumi.Input

	ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput
	ToGetRulesRuleArrayOutputWithContext(context.Context) GetRulesRuleArrayOutput
}

type GetRulesRuleArray []GetRulesRuleInput

func (GetRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return i.ToGetRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleArrayOutput)
}

type GetRulesRuleOutput struct{ *pulumi.OutputState }

func (GetRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return o
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return o
}

// The List of the VPC. See the following `Block bindVpcs`. **NOTE:** Available in v1.158.0+.
func (o GetRulesRuleOutput) BindVpcs() GetRulesRuleBindVpcArrayOutput {
	return o.ApplyT(func(v GetRulesRule) []GetRulesRuleBindVpc { return v.BindVpcs }).(GetRulesRuleBindVpcArrayOutput)
}

// The creation time of the resource.
func (o GetRulesRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Endpoint.
func (o GetRulesRuleOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The Name of the Endpoint.
func (o GetRulesRuleOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.EndpointName }).(pulumi.StringOutput)
}

func (o GetRulesRuleOutput) ForwardIps() GetRulesRuleForwardIpArrayOutput {
	return o.ApplyT(func(v GetRulesRule) []GetRulesRuleForwardIp { return v.ForwardIps }).(GetRulesRuleForwardIpArrayOutput)
}

// The ID of the Rule.
func (o GetRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetRulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetRulesRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.RuleName }).(pulumi.StringOutput)
}

// The type of the rule.
func (o GetRulesRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Type }).(pulumi.StringOutput)
}

// The name of the forwarding zone.
func (o GetRulesRuleOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) Index(i pulumi.IntInput) GetRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRule {
		return vs[0].([]GetRulesRule)[vs[1].(int)]
	}).(GetRulesRuleOutput)
}

type GetRulesRuleBindVpc struct {
	// The region ID of the vpc.
	RegionId string `pulumi:"regionId"`
	// The Region Name of the vpc.
	RegionName string `pulumi:"regionName"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The Name of the VPC.
	VpcName string `pulumi:"vpcName"`
}

// GetRulesRuleBindVpcInput is an input type that accepts GetRulesRuleBindVpcArgs and GetRulesRuleBindVpcOutput values.
// You can construct a concrete instance of `GetRulesRuleBindVpcInput` via:
//
//          GetRulesRuleBindVpcArgs{...}
type GetRulesRuleBindVpcInput interface {
	pulumi.Input

	ToGetRulesRuleBindVpcOutput() GetRulesRuleBindVpcOutput
	ToGetRulesRuleBindVpcOutputWithContext(context.Context) GetRulesRuleBindVpcOutput
}

type GetRulesRuleBindVpcArgs struct {
	// The region ID of the vpc.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The Region Name of the vpc.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The Name of the VPC.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetRulesRuleBindVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleBindVpc)(nil)).Elem()
}

func (i GetRulesRuleBindVpcArgs) ToGetRulesRuleBindVpcOutput() GetRulesRuleBindVpcOutput {
	return i.ToGetRulesRuleBindVpcOutputWithContext(context.Background())
}

func (i GetRulesRuleBindVpcArgs) ToGetRulesRuleBindVpcOutputWithContext(ctx context.Context) GetRulesRuleBindVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleBindVpcOutput)
}

// GetRulesRuleBindVpcArrayInput is an input type that accepts GetRulesRuleBindVpcArray and GetRulesRuleBindVpcArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleBindVpcArrayInput` via:
//
//          GetRulesRuleBindVpcArray{ GetRulesRuleBindVpcArgs{...} }
type GetRulesRuleBindVpcArrayInput interface {
	pulumi.Input

	ToGetRulesRuleBindVpcArrayOutput() GetRulesRuleBindVpcArrayOutput
	ToGetRulesRuleBindVpcArrayOutputWithContext(context.Context) GetRulesRuleBindVpcArrayOutput
}

type GetRulesRuleBindVpcArray []GetRulesRuleBindVpcInput

func (GetRulesRuleBindVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleBindVpc)(nil)).Elem()
}

func (i GetRulesRuleBindVpcArray) ToGetRulesRuleBindVpcArrayOutput() GetRulesRuleBindVpcArrayOutput {
	return i.ToGetRulesRuleBindVpcArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleBindVpcArray) ToGetRulesRuleBindVpcArrayOutputWithContext(ctx context.Context) GetRulesRuleBindVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleBindVpcArrayOutput)
}

type GetRulesRuleBindVpcOutput struct{ *pulumi.OutputState }

func (GetRulesRuleBindVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleBindVpc)(nil)).Elem()
}

func (o GetRulesRuleBindVpcOutput) ToGetRulesRuleBindVpcOutput() GetRulesRuleBindVpcOutput {
	return o
}

func (o GetRulesRuleBindVpcOutput) ToGetRulesRuleBindVpcOutputWithContext(ctx context.Context) GetRulesRuleBindVpcOutput {
	return o
}

// The region ID of the vpc.
func (o GetRulesRuleBindVpcOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleBindVpc) string { return v.RegionId }).(pulumi.StringOutput)
}

// The Region Name of the vpc.
func (o GetRulesRuleBindVpcOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleBindVpc) string { return v.RegionName }).(pulumi.StringOutput)
}

// The ID of the VPC.
func (o GetRulesRuleBindVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleBindVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The Name of the VPC.
func (o GetRulesRuleBindVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleBindVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetRulesRuleBindVpcArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleBindVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleBindVpc)(nil)).Elem()
}

func (o GetRulesRuleBindVpcArrayOutput) ToGetRulesRuleBindVpcArrayOutput() GetRulesRuleBindVpcArrayOutput {
	return o
}

func (o GetRulesRuleBindVpcArrayOutput) ToGetRulesRuleBindVpcArrayOutputWithContext(ctx context.Context) GetRulesRuleBindVpcArrayOutput {
	return o
}

func (o GetRulesRuleBindVpcArrayOutput) Index(i pulumi.IntInput) GetRulesRuleBindVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRuleBindVpc {
		return vs[0].([]GetRulesRuleBindVpc)[vs[1].(int)]
	}).(GetRulesRuleBindVpcOutput)
}

type GetRulesRuleForwardIp struct {
	Ip   string `pulumi:"ip"`
	Port int    `pulumi:"port"`
}

// GetRulesRuleForwardIpInput is an input type that accepts GetRulesRuleForwardIpArgs and GetRulesRuleForwardIpOutput values.
// You can construct a concrete instance of `GetRulesRuleForwardIpInput` via:
//
//          GetRulesRuleForwardIpArgs{...}
type GetRulesRuleForwardIpInput interface {
	pulumi.Input

	ToGetRulesRuleForwardIpOutput() GetRulesRuleForwardIpOutput
	ToGetRulesRuleForwardIpOutputWithContext(context.Context) GetRulesRuleForwardIpOutput
}

type GetRulesRuleForwardIpArgs struct {
	Ip   pulumi.StringInput `pulumi:"ip"`
	Port pulumi.IntInput    `pulumi:"port"`
}

func (GetRulesRuleForwardIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleForwardIp)(nil)).Elem()
}

func (i GetRulesRuleForwardIpArgs) ToGetRulesRuleForwardIpOutput() GetRulesRuleForwardIpOutput {
	return i.ToGetRulesRuleForwardIpOutputWithContext(context.Background())
}

func (i GetRulesRuleForwardIpArgs) ToGetRulesRuleForwardIpOutputWithContext(ctx context.Context) GetRulesRuleForwardIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleForwardIpOutput)
}

// GetRulesRuleForwardIpArrayInput is an input type that accepts GetRulesRuleForwardIpArray and GetRulesRuleForwardIpArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleForwardIpArrayInput` via:
//
//          GetRulesRuleForwardIpArray{ GetRulesRuleForwardIpArgs{...} }
type GetRulesRuleForwardIpArrayInput interface {
	pulumi.Input

	ToGetRulesRuleForwardIpArrayOutput() GetRulesRuleForwardIpArrayOutput
	ToGetRulesRuleForwardIpArrayOutputWithContext(context.Context) GetRulesRuleForwardIpArrayOutput
}

type GetRulesRuleForwardIpArray []GetRulesRuleForwardIpInput

func (GetRulesRuleForwardIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleForwardIp)(nil)).Elem()
}

func (i GetRulesRuleForwardIpArray) ToGetRulesRuleForwardIpArrayOutput() GetRulesRuleForwardIpArrayOutput {
	return i.ToGetRulesRuleForwardIpArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleForwardIpArray) ToGetRulesRuleForwardIpArrayOutputWithContext(ctx context.Context) GetRulesRuleForwardIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleForwardIpArrayOutput)
}

type GetRulesRuleForwardIpOutput struct{ *pulumi.OutputState }

func (GetRulesRuleForwardIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleForwardIp)(nil)).Elem()
}

func (o GetRulesRuleForwardIpOutput) ToGetRulesRuleForwardIpOutput() GetRulesRuleForwardIpOutput {
	return o
}

func (o GetRulesRuleForwardIpOutput) ToGetRulesRuleForwardIpOutputWithContext(ctx context.Context) GetRulesRuleForwardIpOutput {
	return o
}

func (o GetRulesRuleForwardIpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleForwardIp) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetRulesRuleForwardIpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRulesRuleForwardIp) int { return v.Port }).(pulumi.IntOutput)
}

type GetRulesRuleForwardIpArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleForwardIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleForwardIp)(nil)).Elem()
}

func (o GetRulesRuleForwardIpArrayOutput) ToGetRulesRuleForwardIpArrayOutput() GetRulesRuleForwardIpArrayOutput {
	return o
}

func (o GetRulesRuleForwardIpArrayOutput) ToGetRulesRuleForwardIpArrayOutputWithContext(ctx context.Context) GetRulesRuleForwardIpArrayOutput {
	return o
}

func (o GetRulesRuleForwardIpArrayOutput) Index(i pulumi.IntInput) GetRulesRuleForwardIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRuleForwardIp {
		return vs[0].([]GetRulesRuleForwardIp)[vs[1].(int)]
	}).(GetRulesRuleForwardIpOutput)
}

type GetZoneRecordsRecord struct {
	// ID of the Private Zone Record.
	Id string `pulumi:"id"`
	// Priority of the Private Zone Record.
	Priority int `pulumi:"priority"`
	// RecordId of the Private Zone Record.
	RecordId string `pulumi:"recordId"`
	// Remark of the Private Zone Record.
	Remark string `pulumi:"remark"`
	// Resource record of the Private Zone Record.
	ResourceRecord string `pulumi:"resourceRecord"`
	// Rr of the Private Zone Record.
	Rr string `pulumi:"rr"`
	// Resolve record status. Value:
	// - ENABLE: enable resolution.
	// - DISABLE: pause parsing.
	Status string `pulumi:"status"`
	// Ttl of the Private Zone Record.
	Ttl int `pulumi:"ttl"`
	// Type of the Private Zone Record.
	Type string `pulumi:"type"`
	// Value of the Private Zone Record.
	Value string `pulumi:"value"`
}

// GetZoneRecordsRecordInput is an input type that accepts GetZoneRecordsRecordArgs and GetZoneRecordsRecordOutput values.
// You can construct a concrete instance of `GetZoneRecordsRecordInput` via:
//
//          GetZoneRecordsRecordArgs{...}
type GetZoneRecordsRecordInput interface {
	pulumi.Input

	ToGetZoneRecordsRecordOutput() GetZoneRecordsRecordOutput
	ToGetZoneRecordsRecordOutputWithContext(context.Context) GetZoneRecordsRecordOutput
}

type GetZoneRecordsRecordArgs struct {
	// ID of the Private Zone Record.
	Id pulumi.StringInput `pulumi:"id"`
	// Priority of the Private Zone Record.
	Priority pulumi.IntInput `pulumi:"priority"`
	// RecordId of the Private Zone Record.
	RecordId pulumi.StringInput `pulumi:"recordId"`
	// Remark of the Private Zone Record.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Resource record of the Private Zone Record.
	ResourceRecord pulumi.StringInput `pulumi:"resourceRecord"`
	// Rr of the Private Zone Record.
	Rr pulumi.StringInput `pulumi:"rr"`
	// Resolve record status. Value:
	// - ENABLE: enable resolution.
	// - DISABLE: pause parsing.
	Status pulumi.StringInput `pulumi:"status"`
	// Ttl of the Private Zone Record.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// Type of the Private Zone Record.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the Private Zone Record.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetZoneRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneRecordsRecord)(nil)).Elem()
}

func (i GetZoneRecordsRecordArgs) ToGetZoneRecordsRecordOutput() GetZoneRecordsRecordOutput {
	return i.ToGetZoneRecordsRecordOutputWithContext(context.Background())
}

func (i GetZoneRecordsRecordArgs) ToGetZoneRecordsRecordOutputWithContext(ctx context.Context) GetZoneRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneRecordsRecordOutput)
}

// GetZoneRecordsRecordArrayInput is an input type that accepts GetZoneRecordsRecordArray and GetZoneRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetZoneRecordsRecordArrayInput` via:
//
//          GetZoneRecordsRecordArray{ GetZoneRecordsRecordArgs{...} }
type GetZoneRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetZoneRecordsRecordArrayOutput() GetZoneRecordsRecordArrayOutput
	ToGetZoneRecordsRecordArrayOutputWithContext(context.Context) GetZoneRecordsRecordArrayOutput
}

type GetZoneRecordsRecordArray []GetZoneRecordsRecordInput

func (GetZoneRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneRecordsRecord)(nil)).Elem()
}

func (i GetZoneRecordsRecordArray) ToGetZoneRecordsRecordArrayOutput() GetZoneRecordsRecordArrayOutput {
	return i.ToGetZoneRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetZoneRecordsRecordArray) ToGetZoneRecordsRecordArrayOutputWithContext(ctx context.Context) GetZoneRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneRecordsRecordArrayOutput)
}

type GetZoneRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetZoneRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneRecordsRecord)(nil)).Elem()
}

func (o GetZoneRecordsRecordOutput) ToGetZoneRecordsRecordOutput() GetZoneRecordsRecordOutput {
	return o
}

func (o GetZoneRecordsRecordOutput) ToGetZoneRecordsRecordOutputWithContext(ctx context.Context) GetZoneRecordsRecordOutput {
	return o
}

// ID of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Id }).(pulumi.StringOutput)
}

// Priority of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) int { return v.Priority }).(pulumi.IntOutput)
}

// RecordId of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) RecordId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.RecordId }).(pulumi.StringOutput)
}

// Remark of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Remark }).(pulumi.StringOutput)
}

// Resource record of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) ResourceRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.ResourceRecord }).(pulumi.StringOutput)
}

// Rr of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Rr() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Rr }).(pulumi.StringOutput)
}

// Resolve record status. Value:
// - ENABLE: enable resolution.
// - DISABLE: pause parsing.
func (o GetZoneRecordsRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Status }).(pulumi.StringOutput)
}

// Ttl of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

// Type of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the Private Zone Record.
func (o GetZoneRecordsRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneRecordsRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetZoneRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetZoneRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneRecordsRecord)(nil)).Elem()
}

func (o GetZoneRecordsRecordArrayOutput) ToGetZoneRecordsRecordArrayOutput() GetZoneRecordsRecordArrayOutput {
	return o
}

func (o GetZoneRecordsRecordArrayOutput) ToGetZoneRecordsRecordArrayOutputWithContext(ctx context.Context) GetZoneRecordsRecordArrayOutput {
	return o
}

func (o GetZoneRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetZoneRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneRecordsRecord {
		return vs[0].([]GetZoneRecordsRecord)[vs[1].(int)]
	}).(GetZoneRecordsRecordOutput)
}

type GetZonesZone struct {
	// List of the VPCs is bound to the Private Zone:
	BindVpcs []GetZonesZoneBindVpc `pulumi:"bindVpcs"`
	// Time of create of the Private Zone.
	CreateTimestamp int    `pulumi:"createTimestamp"`
	CreationTime    string `pulumi:"creationTime"`
	// ID of the Private Zone.
	Id string `pulumi:"id"`
	// Whether the Private Zone is ptr.
	IsPtr bool `pulumi:"isPtr"`
	// Name of the Private Zone.
	Name string `pulumi:"name"`
	// The recursive DNS proxy.
	ProxyPattern string `pulumi:"proxyPattern"`
	// Count of the Private Zone Record.
	RecordCount int `pulumi:"recordCount"`
	// Remark of the Private Zone.
	Remark string `pulumi:"remark"`
	// resource_group_id for zone resourceGroupId.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Whether to turn on secondary DNS.
	SlaveDns   bool   `pulumi:"slaveDns"`
	UpdateTime string `pulumi:"updateTime"`
	// Time of update of the Private Zone.
	UpdateTimestamp int `pulumi:"updateTimestamp"`
	// ZoneId of the Private Zone.
	ZoneId string `pulumi:"zoneId"`
	// ZoneName of the Private Zone.
	ZoneName string `pulumi:"zoneName"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// List of the VPCs is bound to the Private Zone:
	BindVpcs GetZonesZoneBindVpcArrayInput `pulumi:"bindVpcs"`
	// Time of create of the Private Zone.
	CreateTimestamp pulumi.IntInput    `pulumi:"createTimestamp"`
	CreationTime    pulumi.StringInput `pulumi:"creationTime"`
	// ID of the Private Zone.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the Private Zone is ptr.
	IsPtr pulumi.BoolInput `pulumi:"isPtr"`
	// Name of the Private Zone.
	Name pulumi.StringInput `pulumi:"name"`
	// The recursive DNS proxy.
	ProxyPattern pulumi.StringInput `pulumi:"proxyPattern"`
	// Count of the Private Zone Record.
	RecordCount pulumi.IntInput `pulumi:"recordCount"`
	// Remark of the Private Zone.
	Remark pulumi.StringInput `pulumi:"remark"`
	// resource_group_id for zone resourceGroupId.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Whether to turn on secondary DNS.
	SlaveDns   pulumi.BoolInput   `pulumi:"slaveDns"`
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// Time of update of the Private Zone.
	UpdateTimestamp pulumi.IntInput `pulumi:"updateTimestamp"`
	// ZoneId of the Private Zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// ZoneName of the Private Zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// List of the VPCs is bound to the Private Zone:
func (o GetZonesZoneOutput) BindVpcs() GetZonesZoneBindVpcArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneBindVpc { return v.BindVpcs }).(GetZonesZoneBindVpcArrayOutput)
}

// Time of create of the Private Zone.
func (o GetZonesZoneOutput) CreateTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.CreateTimestamp }).(pulumi.IntOutput)
}

func (o GetZonesZoneOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.CreationTime }).(pulumi.StringOutput)
}

// ID of the Private Zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the Private Zone is ptr.
func (o GetZonesZoneOutput) IsPtr() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.IsPtr }).(pulumi.BoolOutput)
}

// Name of the Private Zone.
func (o GetZonesZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Name }).(pulumi.StringOutput)
}

// The recursive DNS proxy.
func (o GetZonesZoneOutput) ProxyPattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ProxyPattern }).(pulumi.StringOutput)
}

// Count of the Private Zone Record.
func (o GetZonesZoneOutput) RecordCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.RecordCount }).(pulumi.IntOutput)
}

// Remark of the Private Zone.
func (o GetZonesZoneOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Remark }).(pulumi.StringOutput)
}

// resource_group_id for zone resourceGroupId.
func (o GetZonesZoneOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Whether to turn on secondary DNS.
func (o GetZonesZoneOutput) SlaveDns() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.SlaveDns }).(pulumi.BoolOutput)
}

func (o GetZonesZoneOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Time of update of the Private Zone.
func (o GetZonesZoneOutput) UpdateTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.UpdateTimestamp }).(pulumi.IntOutput)
}

// ZoneId of the Private Zone.
func (o GetZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// ZoneName of the Private Zone.
func (o GetZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

type GetZonesZoneBindVpc struct {
	// Binding the regionId of VPC.
	RegionId string `pulumi:"regionId"`
	// Binding the regionName of VPC.
	RegionName string `pulumi:"regionName"`
	// Binding the vpcId of VPC.
	VpcId   string `pulumi:"vpcId"`
	VpcName string `pulumi:"vpcName"`
}

// GetZonesZoneBindVpcInput is an input type that accepts GetZonesZoneBindVpcArgs and GetZonesZoneBindVpcOutput values.
// You can construct a concrete instance of `GetZonesZoneBindVpcInput` via:
//
//          GetZonesZoneBindVpcArgs{...}
type GetZonesZoneBindVpcInput interface {
	pulumi.Input

	ToGetZonesZoneBindVpcOutput() GetZonesZoneBindVpcOutput
	ToGetZonesZoneBindVpcOutputWithContext(context.Context) GetZonesZoneBindVpcOutput
}

type GetZonesZoneBindVpcArgs struct {
	// Binding the regionId of VPC.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Binding the regionName of VPC.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Binding the vpcId of VPC.
	VpcId   pulumi.StringInput `pulumi:"vpcId"`
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetZonesZoneBindVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneBindVpc)(nil)).Elem()
}

func (i GetZonesZoneBindVpcArgs) ToGetZonesZoneBindVpcOutput() GetZonesZoneBindVpcOutput {
	return i.ToGetZonesZoneBindVpcOutputWithContext(context.Background())
}

func (i GetZonesZoneBindVpcArgs) ToGetZonesZoneBindVpcOutputWithContext(ctx context.Context) GetZonesZoneBindVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneBindVpcOutput)
}

// GetZonesZoneBindVpcArrayInput is an input type that accepts GetZonesZoneBindVpcArray and GetZonesZoneBindVpcArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneBindVpcArrayInput` via:
//
//          GetZonesZoneBindVpcArray{ GetZonesZoneBindVpcArgs{...} }
type GetZonesZoneBindVpcArrayInput interface {
	pulumi.Input

	ToGetZonesZoneBindVpcArrayOutput() GetZonesZoneBindVpcArrayOutput
	ToGetZonesZoneBindVpcArrayOutputWithContext(context.Context) GetZonesZoneBindVpcArrayOutput
}

type GetZonesZoneBindVpcArray []GetZonesZoneBindVpcInput

func (GetZonesZoneBindVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneBindVpc)(nil)).Elem()
}

func (i GetZonesZoneBindVpcArray) ToGetZonesZoneBindVpcArrayOutput() GetZonesZoneBindVpcArrayOutput {
	return i.ToGetZonesZoneBindVpcArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneBindVpcArray) ToGetZonesZoneBindVpcArrayOutputWithContext(ctx context.Context) GetZonesZoneBindVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneBindVpcArrayOutput)
}

type GetZonesZoneBindVpcOutput struct{ *pulumi.OutputState }

func (GetZonesZoneBindVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneBindVpc)(nil)).Elem()
}

func (o GetZonesZoneBindVpcOutput) ToGetZonesZoneBindVpcOutput() GetZonesZoneBindVpcOutput {
	return o
}

func (o GetZonesZoneBindVpcOutput) ToGetZonesZoneBindVpcOutputWithContext(ctx context.Context) GetZonesZoneBindVpcOutput {
	return o
}

// Binding the regionId of VPC.
func (o GetZonesZoneBindVpcOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneBindVpc) string { return v.RegionId }).(pulumi.StringOutput)
}

// Binding the regionName of VPC.
func (o GetZonesZoneBindVpcOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneBindVpc) string { return v.RegionName }).(pulumi.StringOutput)
}

// Binding the vpcId of VPC.
func (o GetZonesZoneBindVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneBindVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o GetZonesZoneBindVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneBindVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetZonesZoneBindVpcArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneBindVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneBindVpc)(nil)).Elem()
}

func (o GetZonesZoneBindVpcArrayOutput) ToGetZonesZoneBindVpcArrayOutput() GetZonesZoneBindVpcArrayOutput {
	return o
}

func (o GetZonesZoneBindVpcArrayOutput) ToGetZonesZoneBindVpcArrayOutputWithContext(ctx context.Context) GetZonesZoneBindVpcArrayOutput {
	return o
}

func (o GetZonesZoneBindVpcArrayOutput) Index(i pulumi.IntInput) GetZonesZoneBindVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneBindVpc {
		return vs[0].([]GetZonesZoneBindVpc)[vs[1].(int)]
	}).(GetZonesZoneBindVpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointIpConfigInput)(nil)).Elem(), EndpointIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointIpConfigArrayInput)(nil)).Elem(), EndpointIpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAttachmentVpcInput)(nil)).Elem(), RuleAttachmentVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAttachmentVpcArrayInput)(nil)).Elem(), RuleAttachmentVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleForwardIpInput)(nil)).Elem(), RuleForwardIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleForwardIpArrayInput)(nil)).Elem(), RuleForwardIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneAttachmentVpcInput)(nil)).Elem(), ZoneAttachmentVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneAttachmentVpcArrayInput)(nil)).Elem(), ZoneAttachmentVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneUserInfoInput)(nil)).Elem(), ZoneUserInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneUserInfoArrayInput)(nil)).Elem(), ZoneUserInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointInput)(nil)).Elem(), GetEndpointsEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointArrayInput)(nil)).Elem(), GetEndpointsEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointIpConfigInput)(nil)).Elem(), GetEndpointsEndpointIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointIpConfigArrayInput)(nil)).Elem(), GetEndpointsEndpointIpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverZonesZoneInput)(nil)).Elem(), GetResolverZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverZonesZoneArrayInput)(nil)).Elem(), GetResolverZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleInput)(nil)).Elem(), GetRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleArrayInput)(nil)).Elem(), GetRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleBindVpcInput)(nil)).Elem(), GetRulesRuleBindVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleBindVpcArrayInput)(nil)).Elem(), GetRulesRuleBindVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleForwardIpInput)(nil)).Elem(), GetRulesRuleForwardIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleForwardIpArrayInput)(nil)).Elem(), GetRulesRuleForwardIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneRecordsRecordInput)(nil)).Elem(), GetZoneRecordsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneRecordsRecordArrayInput)(nil)).Elem(), GetZoneRecordsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneBindVpcInput)(nil)).Elem(), GetZonesZoneBindVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneBindVpcArrayInput)(nil)).Elem(), GetZonesZoneBindVpcArray{})
	pulumi.RegisterOutputType(EndpointIpConfigOutput{})
	pulumi.RegisterOutputType(EndpointIpConfigArrayOutput{})
	pulumi.RegisterOutputType(RuleAttachmentVpcOutput{})
	pulumi.RegisterOutputType(RuleAttachmentVpcArrayOutput{})
	pulumi.RegisterOutputType(RuleForwardIpOutput{})
	pulumi.RegisterOutputType(RuleForwardIpArrayOutput{})
	pulumi.RegisterOutputType(ZoneAttachmentVpcOutput{})
	pulumi.RegisterOutputType(ZoneAttachmentVpcArrayOutput{})
	pulumi.RegisterOutputType(ZoneUserInfoOutput{})
	pulumi.RegisterOutputType(ZoneUserInfoArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointIpConfigOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointIpConfigArrayOutput{})
	pulumi.RegisterOutputType(GetResolverZonesZoneOutput{})
	pulumi.RegisterOutputType(GetResolverZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleOutput{})
	pulumi.RegisterOutputType(GetRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleBindVpcOutput{})
	pulumi.RegisterOutputType(GetRulesRuleBindVpcArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleForwardIpOutput{})
	pulumi.RegisterOutputType(GetRulesRuleForwardIpArrayOutput{})
	pulumi.RegisterOutputType(GetZoneRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetZoneRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneBindVpcOutput{})
	pulumi.RegisterOutputType(GetZonesZoneBindVpcArrayOutput{})
}
