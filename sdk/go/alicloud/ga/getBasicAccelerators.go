// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Global Accelerator (GA) Basic Accelerators of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.194.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ga"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := ga.GetBasicAccelerators(ctx, &ga.GetBasicAcceleratorsArgs{
//				Status: pulumi.StringRef("active"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("gaBasicAcceleratorId1", _default.Accelerators[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetBasicAccelerators(ctx *pulumi.Context, args *GetBasicAcceleratorsArgs, opts ...pulumi.InvokeOption) (*GetBasicAcceleratorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBasicAcceleratorsResult
	err := ctx.Invoke("alicloud:ga/getBasicAccelerators:getBasicAccelerators", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBasicAccelerators.
type GetBasicAcceleratorsArgs struct {
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId *string `pulumi:"acceleratorId"`
	// The bandwidth billing method. Valid values:
	// - `BandwidthPackage`: billed based on bandwidth plans.
	// - `CDT`: billed through Cloud Data Transfer (CDT) and based on data transfer.
	// - `CDT95`: billed through CDT and based on the 95th percentile bandwidth. This bandwidth billing method is available only for users that are included in the whitelist.
	BandwidthBillingType *string `pulumi:"bandwidthBillingType"`
	// A list of Global Accelerator Basic Accelerator IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Global Accelerator Basic Accelerator name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getBasicAccelerators.
type GetBasicAcceleratorsResult struct {
	AcceleratorId *string `pulumi:"acceleratorId"`
	// A list of Global Accelerator Basic Accelerators. Each element contains the following attributes:
	Accelerators []GetBasicAcceleratorsAccelerator `pulumi:"accelerators"`
	// The bandwidth billing method.
	BandwidthBillingType *string `pulumi:"bandwidthBillingType"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Global Accelerator Basic Accelerator names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	PageNumber *int     `pulumi:"pageNumber"`
	PageSize   *int     `pulumi:"pageSize"`
	// The status of the Global Accelerator Basic Accelerator instance.
	Status *string `pulumi:"status"`
}

func GetBasicAcceleratorsOutput(ctx *pulumi.Context, args GetBasicAcceleratorsOutputArgs, opts ...pulumi.InvokeOption) GetBasicAcceleratorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBasicAcceleratorsResultOutput, error) {
			args := v.(GetBasicAcceleratorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:ga/getBasicAccelerators:getBasicAccelerators", args, GetBasicAcceleratorsResultOutput{}, options).(GetBasicAcceleratorsResultOutput), nil
		}).(GetBasicAcceleratorsResultOutput)
}

// A collection of arguments for invoking getBasicAccelerators.
type GetBasicAcceleratorsOutputArgs struct {
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId pulumi.StringPtrInput `pulumi:"acceleratorId"`
	// The bandwidth billing method. Valid values:
	// - `BandwidthPackage`: billed based on bandwidth plans.
	// - `CDT`: billed through Cloud Data Transfer (CDT) and based on data transfer.
	// - `CDT95`: billed through CDT and based on the 95th percentile bandwidth. This bandwidth billing method is available only for users that are included in the whitelist.
	BandwidthBillingType pulumi.StringPtrInput `pulumi:"bandwidthBillingType"`
	// A list of Global Accelerator Basic Accelerator IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Global Accelerator Basic Accelerator name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetBasicAcceleratorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsArgs)(nil)).Elem()
}

// A collection of values returned by getBasicAccelerators.
type GetBasicAcceleratorsResultOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsResult)(nil)).Elem()
}

func (o GetBasicAcceleratorsResultOutput) ToGetBasicAcceleratorsResultOutput() GetBasicAcceleratorsResultOutput {
	return o
}

func (o GetBasicAcceleratorsResultOutput) ToGetBasicAcceleratorsResultOutputWithContext(ctx context.Context) GetBasicAcceleratorsResultOutput {
	return o
}

func (o GetBasicAcceleratorsResultOutput) AcceleratorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *string { return v.AcceleratorId }).(pulumi.StringPtrOutput)
}

// A list of Global Accelerator Basic Accelerators. Each element contains the following attributes:
func (o GetBasicAcceleratorsResultOutput) Accelerators() GetBasicAcceleratorsAcceleratorArrayOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) []GetBasicAcceleratorsAccelerator { return v.Accelerators }).(GetBasicAcceleratorsAcceleratorArrayOutput)
}

// The bandwidth billing method.
func (o GetBasicAcceleratorsResultOutput) BandwidthBillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *string { return v.BandwidthBillingType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBasicAcceleratorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBasicAcceleratorsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetBasicAcceleratorsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Global Accelerator Basic Accelerator names.
func (o GetBasicAcceleratorsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetBasicAcceleratorsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetBasicAcceleratorsResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetBasicAcceleratorsResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The status of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBasicAcceleratorsResultOutput{})
}
