// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Global Accelerator (GA) Custom Routing Endpoint resource.
//
// For information about Global Accelerator (GA) Custom Routing Endpoint and how to use it, see [What is Custom Routing Endpoint](https://www.alibabacloud.com/help/en/global-accelerator/latest/createcustomroutingendpoints).
//
// > **NOTE:** Available in v1.197.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ga"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ga.NewCustomRoutingEndpoint(ctx, "default", &ga.CustomRoutingEndpointArgs{
//				Endpoint:                pulumi.String("your_vswitch_id"),
//				EndpointGroupId:         pulumi.String("your_custom_routing_endpoint_group_id"),
//				TrafficToEndpointPolicy: pulumi.String("DenyAll"),
//				Type:                    pulumi.String("PrivateSubNet"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Global Accelerator (GA) Custom Routing Endpoint can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:ga/customRoutingEndpoint:CustomRoutingEndpoint example <endpoint_group_id>:<custom_routing_endpoint_id>
//
// ```
type CustomRoutingEndpoint struct {
	pulumi.CustomResourceState

	// The ID of the GA instance with which the endpoint is associated.
	AcceleratorId pulumi.StringOutput `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint.
	CustomRoutingEndpointId pulumi.StringOutput `pulumi:"customRoutingEndpointId"`
	// The ID of the endpoint (vSwitch).
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The ID of the endpoint group in which to create endpoints.
	EndpointGroupId pulumi.StringOutput `pulumi:"endpointGroupId"`
	// The ID of the listener with which the endpoint is associated.
	ListenerId pulumi.StringOutput `pulumi:"listenerId"`
	// The status of the Custom Routing Endpoint.
	Status pulumi.StringOutput `pulumi:"status"`
	// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
	TrafficToEndpointPolicy pulumi.StringOutput `pulumi:"trafficToEndpointPolicy"`
	// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCustomRoutingEndpoint registers a new resource with the given unique name, arguments, and options.
func NewCustomRoutingEndpoint(ctx *pulumi.Context,
	name string, args *CustomRoutingEndpointArgs, opts ...pulumi.ResourceOption) (*CustomRoutingEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.EndpointGroupId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointGroupId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource CustomRoutingEndpoint
	err := ctx.RegisterResource("alicloud:ga/customRoutingEndpoint:CustomRoutingEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomRoutingEndpoint gets an existing CustomRoutingEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomRoutingEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomRoutingEndpointState, opts ...pulumi.ResourceOption) (*CustomRoutingEndpoint, error) {
	var resource CustomRoutingEndpoint
	err := ctx.ReadResource("alicloud:ga/customRoutingEndpoint:CustomRoutingEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomRoutingEndpoint resources.
type customRoutingEndpointState struct {
	// The ID of the GA instance with which the endpoint is associated.
	AcceleratorId *string `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint.
	CustomRoutingEndpointId *string `pulumi:"customRoutingEndpointId"`
	// The ID of the endpoint (vSwitch).
	Endpoint *string `pulumi:"endpoint"`
	// The ID of the endpoint group in which to create endpoints.
	EndpointGroupId *string `pulumi:"endpointGroupId"`
	// The ID of the listener with which the endpoint is associated.
	ListenerId *string `pulumi:"listenerId"`
	// The status of the Custom Routing Endpoint.
	Status *string `pulumi:"status"`
	// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
	TrafficToEndpointPolicy *string `pulumi:"trafficToEndpointPolicy"`
	// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
	Type *string `pulumi:"type"`
}

type CustomRoutingEndpointState struct {
	// The ID of the GA instance with which the endpoint is associated.
	AcceleratorId pulumi.StringPtrInput
	// The ID of the Custom Routing Endpoint.
	CustomRoutingEndpointId pulumi.StringPtrInput
	// The ID of the endpoint (vSwitch).
	Endpoint pulumi.StringPtrInput
	// The ID of the endpoint group in which to create endpoints.
	EndpointGroupId pulumi.StringPtrInput
	// The ID of the listener with which the endpoint is associated.
	ListenerId pulumi.StringPtrInput
	// The status of the Custom Routing Endpoint.
	Status pulumi.StringPtrInput
	// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
	TrafficToEndpointPolicy pulumi.StringPtrInput
	// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
	Type pulumi.StringPtrInput
}

func (CustomRoutingEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingEndpointState)(nil)).Elem()
}

type customRoutingEndpointArgs struct {
	// The ID of the endpoint (vSwitch).
	Endpoint string `pulumi:"endpoint"`
	// The ID of the endpoint group in which to create endpoints.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
	TrafficToEndpointPolicy *string `pulumi:"trafficToEndpointPolicy"`
	// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a CustomRoutingEndpoint resource.
type CustomRoutingEndpointArgs struct {
	// The ID of the endpoint (vSwitch).
	Endpoint pulumi.StringInput
	// The ID of the endpoint group in which to create endpoints.
	EndpointGroupId pulumi.StringInput
	// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
	TrafficToEndpointPolicy pulumi.StringPtrInput
	// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
	Type pulumi.StringInput
}

func (CustomRoutingEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingEndpointArgs)(nil)).Elem()
}

type CustomRoutingEndpointInput interface {
	pulumi.Input

	ToCustomRoutingEndpointOutput() CustomRoutingEndpointOutput
	ToCustomRoutingEndpointOutputWithContext(ctx context.Context) CustomRoutingEndpointOutput
}

func (*CustomRoutingEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoutingEndpoint)(nil)).Elem()
}

func (i *CustomRoutingEndpoint) ToCustomRoutingEndpointOutput() CustomRoutingEndpointOutput {
	return i.ToCustomRoutingEndpointOutputWithContext(context.Background())
}

func (i *CustomRoutingEndpoint) ToCustomRoutingEndpointOutputWithContext(ctx context.Context) CustomRoutingEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingEndpointOutput)
}

// CustomRoutingEndpointArrayInput is an input type that accepts CustomRoutingEndpointArray and CustomRoutingEndpointArrayOutput values.
// You can construct a concrete instance of `CustomRoutingEndpointArrayInput` via:
//
//	CustomRoutingEndpointArray{ CustomRoutingEndpointArgs{...} }
type CustomRoutingEndpointArrayInput interface {
	pulumi.Input

	ToCustomRoutingEndpointArrayOutput() CustomRoutingEndpointArrayOutput
	ToCustomRoutingEndpointArrayOutputWithContext(context.Context) CustomRoutingEndpointArrayOutput
}

type CustomRoutingEndpointArray []CustomRoutingEndpointInput

func (CustomRoutingEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRoutingEndpoint)(nil)).Elem()
}

func (i CustomRoutingEndpointArray) ToCustomRoutingEndpointArrayOutput() CustomRoutingEndpointArrayOutput {
	return i.ToCustomRoutingEndpointArrayOutputWithContext(context.Background())
}

func (i CustomRoutingEndpointArray) ToCustomRoutingEndpointArrayOutputWithContext(ctx context.Context) CustomRoutingEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingEndpointArrayOutput)
}

// CustomRoutingEndpointMapInput is an input type that accepts CustomRoutingEndpointMap and CustomRoutingEndpointMapOutput values.
// You can construct a concrete instance of `CustomRoutingEndpointMapInput` via:
//
//	CustomRoutingEndpointMap{ "key": CustomRoutingEndpointArgs{...} }
type CustomRoutingEndpointMapInput interface {
	pulumi.Input

	ToCustomRoutingEndpointMapOutput() CustomRoutingEndpointMapOutput
	ToCustomRoutingEndpointMapOutputWithContext(context.Context) CustomRoutingEndpointMapOutput
}

type CustomRoutingEndpointMap map[string]CustomRoutingEndpointInput

func (CustomRoutingEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRoutingEndpoint)(nil)).Elem()
}

func (i CustomRoutingEndpointMap) ToCustomRoutingEndpointMapOutput() CustomRoutingEndpointMapOutput {
	return i.ToCustomRoutingEndpointMapOutputWithContext(context.Background())
}

func (i CustomRoutingEndpointMap) ToCustomRoutingEndpointMapOutputWithContext(ctx context.Context) CustomRoutingEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingEndpointMapOutput)
}

type CustomRoutingEndpointOutput struct{ *pulumi.OutputState }

func (CustomRoutingEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoutingEndpoint)(nil)).Elem()
}

func (o CustomRoutingEndpointOutput) ToCustomRoutingEndpointOutput() CustomRoutingEndpointOutput {
	return o
}

func (o CustomRoutingEndpointOutput) ToCustomRoutingEndpointOutputWithContext(ctx context.Context) CustomRoutingEndpointOutput {
	return o
}

// The ID of the GA instance with which the endpoint is associated.
func (o CustomRoutingEndpointOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The ID of the Custom Routing Endpoint.
func (o CustomRoutingEndpointOutput) CustomRoutingEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.CustomRoutingEndpointId }).(pulumi.StringOutput)
}

// The ID of the endpoint (vSwitch).
func (o CustomRoutingEndpointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The ID of the endpoint group in which to create endpoints.
func (o CustomRoutingEndpointOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the listener with which the endpoint is associated.
func (o CustomRoutingEndpointOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

// The status of the Custom Routing Endpoint.
func (o CustomRoutingEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
func (o CustomRoutingEndpointOutput) TrafficToEndpointPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.TrafficToEndpointPolicy }).(pulumi.StringOutput)
}

// The backend service type of the endpoint. Valid values: `PrivateSubNet`.
func (o CustomRoutingEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingEndpoint) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type CustomRoutingEndpointArrayOutput struct{ *pulumi.OutputState }

func (CustomRoutingEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRoutingEndpoint)(nil)).Elem()
}

func (o CustomRoutingEndpointArrayOutput) ToCustomRoutingEndpointArrayOutput() CustomRoutingEndpointArrayOutput {
	return o
}

func (o CustomRoutingEndpointArrayOutput) ToCustomRoutingEndpointArrayOutputWithContext(ctx context.Context) CustomRoutingEndpointArrayOutput {
	return o
}

func (o CustomRoutingEndpointArrayOutput) Index(i pulumi.IntInput) CustomRoutingEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomRoutingEndpoint {
		return vs[0].([]*CustomRoutingEndpoint)[vs[1].(int)]
	}).(CustomRoutingEndpointOutput)
}

type CustomRoutingEndpointMapOutput struct{ *pulumi.OutputState }

func (CustomRoutingEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRoutingEndpoint)(nil)).Elem()
}

func (o CustomRoutingEndpointMapOutput) ToCustomRoutingEndpointMapOutput() CustomRoutingEndpointMapOutput {
	return o
}

func (o CustomRoutingEndpointMapOutput) ToCustomRoutingEndpointMapOutputWithContext(ctx context.Context) CustomRoutingEndpointMapOutput {
	return o
}

func (o CustomRoutingEndpointMapOutput) MapIndex(k pulumi.StringInput) CustomRoutingEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomRoutingEndpoint {
		return vs[0].(map[string]*CustomRoutingEndpoint)[vs[1].(string)]
	}).(CustomRoutingEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingEndpointInput)(nil)).Elem(), &CustomRoutingEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingEndpointArrayInput)(nil)).Elem(), CustomRoutingEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingEndpointMapInput)(nil)).Elem(), CustomRoutingEndpointMap{})
	pulumi.RegisterOutputType(CustomRoutingEndpointOutput{})
	pulumi.RegisterOutputType(CustomRoutingEndpointArrayOutput{})
	pulumi.RegisterOutputType(CustomRoutingEndpointMapOutput{})
}
