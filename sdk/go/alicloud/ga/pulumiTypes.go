// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EndpointGroupEndpointConfiguration struct {
	// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
	EnableClientipPreservation *bool `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint string `pulumi:"endpoint"`
	// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
	Type string `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
	Weight int `pulumi:"weight"`
}

// EndpointGroupEndpointConfigurationInput is an input type that accepts EndpointGroupEndpointConfigurationArgs and EndpointGroupEndpointConfigurationOutput values.
// You can construct a concrete instance of `EndpointGroupEndpointConfigurationInput` via:
//
//          EndpointGroupEndpointConfigurationArgs{...}
type EndpointGroupEndpointConfigurationInput interface {
	pulumi.Input

	ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput
	ToEndpointGroupEndpointConfigurationOutputWithContext(context.Context) EndpointGroupEndpointConfigurationOutput
}

type EndpointGroupEndpointConfigurationArgs struct {
	// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
	EnableClientipPreservation pulumi.BoolPtrInput `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (EndpointGroupEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (i EndpointGroupEndpointConfigurationArgs) ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput {
	return i.ToEndpointGroupEndpointConfigurationOutputWithContext(context.Background())
}

func (i EndpointGroupEndpointConfigurationArgs) ToEndpointGroupEndpointConfigurationOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupEndpointConfigurationOutput)
}

// EndpointGroupEndpointConfigurationArrayInput is an input type that accepts EndpointGroupEndpointConfigurationArray and EndpointGroupEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `EndpointGroupEndpointConfigurationArrayInput` via:
//
//          EndpointGroupEndpointConfigurationArray{ EndpointGroupEndpointConfigurationArgs{...} }
type EndpointGroupEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput
	ToEndpointGroupEndpointConfigurationArrayOutputWithContext(context.Context) EndpointGroupEndpointConfigurationArrayOutput
}

type EndpointGroupEndpointConfigurationArray []EndpointGroupEndpointConfigurationInput

func (EndpointGroupEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (i EndpointGroupEndpointConfigurationArray) ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput {
	return i.ToEndpointGroupEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i EndpointGroupEndpointConfigurationArray) ToEndpointGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupEndpointConfigurationArrayOutput)
}

type EndpointGroupEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointGroupEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (o EndpointGroupEndpointConfigurationOutput) ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationOutput) ToEndpointGroupEndpointConfigurationOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationOutput {
	return o
}

// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
func (o EndpointGroupEndpointConfigurationOutput) EnableClientipPreservation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) *bool { return v.EnableClientipPreservation }).(pulumi.BoolPtrOutput)
}

// The IP address or domain name of Endpoint N in the endpoint group.
func (o EndpointGroupEndpointConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
func (o EndpointGroupEndpointConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
func (o EndpointGroupEndpointConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type EndpointGroupEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EndpointGroupEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (o EndpointGroupEndpointConfigurationArrayOutput) ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationArrayOutput) ToEndpointGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationArrayOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) EndpointGroupEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointGroupEndpointConfiguration {
		return vs[0].([]EndpointGroupEndpointConfiguration)[vs[1].(int)]
	}).(EndpointGroupEndpointConfigurationOutput)
}

type EndpointGroupPortOverrides struct {
	// Forwarding port.
	EndpointPort *int `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort *int `pulumi:"listenerPort"`
}

// EndpointGroupPortOverridesInput is an input type that accepts EndpointGroupPortOverridesArgs and EndpointGroupPortOverridesOutput values.
// You can construct a concrete instance of `EndpointGroupPortOverridesInput` via:
//
//          EndpointGroupPortOverridesArgs{...}
type EndpointGroupPortOverridesInput interface {
	pulumi.Input

	ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput
	ToEndpointGroupPortOverridesOutputWithContext(context.Context) EndpointGroupPortOverridesOutput
}

type EndpointGroupPortOverridesArgs struct {
	// Forwarding port.
	EndpointPort pulumi.IntPtrInput `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort pulumi.IntPtrInput `pulumi:"listenerPort"`
}

func (EndpointGroupPortOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupPortOverrides)(nil)).Elem()
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput {
	return i.ToEndpointGroupPortOverridesOutputWithContext(context.Background())
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesOutputWithContext(ctx context.Context) EndpointGroupPortOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesOutput)
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return i.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesOutput).ToEndpointGroupPortOverridesPtrOutputWithContext(ctx)
}

// EndpointGroupPortOverridesPtrInput is an input type that accepts EndpointGroupPortOverridesArgs, EndpointGroupPortOverridesPtr and EndpointGroupPortOverridesPtrOutput values.
// You can construct a concrete instance of `EndpointGroupPortOverridesPtrInput` via:
//
//          EndpointGroupPortOverridesArgs{...}
//
//  or:
//
//          nil
type EndpointGroupPortOverridesPtrInput interface {
	pulumi.Input

	ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput
	ToEndpointGroupPortOverridesPtrOutputWithContext(context.Context) EndpointGroupPortOverridesPtrOutput
}

type endpointGroupPortOverridesPtrType EndpointGroupPortOverridesArgs

func EndpointGroupPortOverridesPtr(v *EndpointGroupPortOverridesArgs) EndpointGroupPortOverridesPtrInput {
	return (*endpointGroupPortOverridesPtrType)(v)
}

func (*endpointGroupPortOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointGroupPortOverrides)(nil)).Elem()
}

func (i *endpointGroupPortOverridesPtrType) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return i.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (i *endpointGroupPortOverridesPtrType) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesPtrOutput)
}

type EndpointGroupPortOverridesOutput struct{ *pulumi.OutputState }

func (EndpointGroupPortOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupPortOverrides)(nil)).Elem()
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput {
	return o
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesOutputWithContext(ctx context.Context) EndpointGroupPortOverridesOutput {
	return o
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return o.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return o.ApplyT(func(v EndpointGroupPortOverrides) *EndpointGroupPortOverrides {
		return &v
	}).(EndpointGroupPortOverridesPtrOutput)
}

// Forwarding port.
func (o EndpointGroupPortOverridesOutput) EndpointPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointGroupPortOverrides) *int { return v.EndpointPort }).(pulumi.IntPtrOutput)
}

// Listener port.
func (o EndpointGroupPortOverridesOutput) ListenerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointGroupPortOverrides) *int { return v.ListenerPort }).(pulumi.IntPtrOutput)
}

type EndpointGroupPortOverridesPtrOutput struct{ *pulumi.OutputState }

func (EndpointGroupPortOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointGroupPortOverrides)(nil)).Elem()
}

func (o EndpointGroupPortOverridesPtrOutput) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return o
}

func (o EndpointGroupPortOverridesPtrOutput) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return o
}

func (o EndpointGroupPortOverridesPtrOutput) Elem() EndpointGroupPortOverridesOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) EndpointGroupPortOverrides { return *v }).(EndpointGroupPortOverridesOutput)
}

// Forwarding port.
func (o EndpointGroupPortOverridesPtrOutput) EndpointPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) *int {
		if v == nil {
			return nil
		}
		return v.EndpointPort
	}).(pulumi.IntPtrOutput)
}

// Listener port.
func (o EndpointGroupPortOverridesPtrOutput) ListenerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) *int {
		if v == nil {
			return nil
		}
		return v.ListenerPort
	}).(pulumi.IntPtrOutput)
}

type ForwardingRuleRuleAction struct {
	// Forwarding configuration.
	ForwardGroupConfig ForwardingRuleRuleActionForwardGroupConfig `pulumi:"forwardGroupConfig"`
	// Forwarding priority.
	Order int `pulumi:"order"`
	// Forward action type. Default: forwardgroup.
	RuleActionType string `pulumi:"ruleActionType"`
}

// ForwardingRuleRuleActionInput is an input type that accepts ForwardingRuleRuleActionArgs and ForwardingRuleRuleActionOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionInput` via:
//
//          ForwardingRuleRuleActionArgs{...}
type ForwardingRuleRuleActionInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput
	ToForwardingRuleRuleActionOutputWithContext(context.Context) ForwardingRuleRuleActionOutput
}

type ForwardingRuleRuleActionArgs struct {
	// Forwarding configuration.
	ForwardGroupConfig ForwardingRuleRuleActionForwardGroupConfigInput `pulumi:"forwardGroupConfig"`
	// Forwarding priority.
	Order pulumi.IntInput `pulumi:"order"`
	// Forward action type. Default: forwardgroup.
	RuleActionType pulumi.StringInput `pulumi:"ruleActionType"`
}

func (ForwardingRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleAction)(nil)).Elem()
}

func (i ForwardingRuleRuleActionArgs) ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput {
	return i.ToForwardingRuleRuleActionOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionArgs) ToForwardingRuleRuleActionOutputWithContext(ctx context.Context) ForwardingRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionOutput)
}

// ForwardingRuleRuleActionArrayInput is an input type that accepts ForwardingRuleRuleActionArray and ForwardingRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionArrayInput` via:
//
//          ForwardingRuleRuleActionArray{ ForwardingRuleRuleActionArgs{...} }
type ForwardingRuleRuleActionArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput
	ToForwardingRuleRuleActionArrayOutputWithContext(context.Context) ForwardingRuleRuleActionArrayOutput
}

type ForwardingRuleRuleActionArray []ForwardingRuleRuleActionInput

func (ForwardingRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleAction)(nil)).Elem()
}

func (i ForwardingRuleRuleActionArray) ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput {
	return i.ToForwardingRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionArray) ToForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionArrayOutput)
}

type ForwardingRuleRuleActionOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleAction)(nil)).Elem()
}

func (o ForwardingRuleRuleActionOutput) ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput {
	return o
}

func (o ForwardingRuleRuleActionOutput) ToForwardingRuleRuleActionOutputWithContext(ctx context.Context) ForwardingRuleRuleActionOutput {
	return o
}

// Forwarding configuration.
func (o ForwardingRuleRuleActionOutput) ForwardGroupConfig() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) ForwardingRuleRuleActionForwardGroupConfig {
		return v.ForwardGroupConfig
	}).(ForwardingRuleRuleActionForwardGroupConfigOutput)
}

// Forwarding priority.
func (o ForwardingRuleRuleActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) int { return v.Order }).(pulumi.IntOutput)
}

// Forward action type. Default: forwardgroup.
func (o ForwardingRuleRuleActionOutput) RuleActionType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) string { return v.RuleActionType }).(pulumi.StringOutput)
}

type ForwardingRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleAction)(nil)).Elem()
}

func (o ForwardingRuleRuleActionArrayOutput) ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionArrayOutput) ToForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleAction {
		return vs[0].([]ForwardingRuleRuleAction)[vs[1].(int)]
	}).(ForwardingRuleRuleActionOutput)
}

type ForwardingRuleRuleActionForwardGroupConfig struct {
	// Terminal node group configuration.
	ServerGroupTuples []ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple `pulumi:"serverGroupTuples"`
}

// ForwardingRuleRuleActionForwardGroupConfigInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigArgs and ForwardingRuleRuleActionForwardGroupConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigInput` via:
//
//          ForwardingRuleRuleActionForwardGroupConfigArgs{...}
type ForwardingRuleRuleActionForwardGroupConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput
	ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput
}

type ForwardingRuleRuleActionForwardGroupConfigArgs struct {
	// Terminal node group configuration.
	ServerGroupTuples ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput `pulumi:"serverGroupTuples"`
}

func (ForwardingRuleRuleActionForwardGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigArgs) ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigArgs) ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

// Terminal node group configuration.
func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ServerGroupTuples() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleActionForwardGroupConfig) []ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return v.ServerGroupTuples
	}).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple struct {
	// Terminal node group ID.
	EndpointGroupId string `pulumi:"endpointGroupId"`
}

// ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs and ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput` via:
//
//          ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...}
type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs struct {
	// Terminal node group ID.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
}

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

// ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray and ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput` via:
//
//          ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{ ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...} }
type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray []ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

// Terminal node group ID.
func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return vs[0].([]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)[vs[1].(int)]
	}).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

type ForwardingRuleRuleCondition struct {
	// Domain name configuration information.
	HostConfigs []ForwardingRuleRuleConditionHostConfig `pulumi:"hostConfigs"`
	// Path configuration information.
	PathConfig *ForwardingRuleRuleConditionPathConfig `pulumi:"pathConfig"`
	// Forwarding condition type. Valid value: `Host`, `Path`.
	RuleConditionType string `pulumi:"ruleConditionType"`
}

// ForwardingRuleRuleConditionInput is an input type that accepts ForwardingRuleRuleConditionArgs and ForwardingRuleRuleConditionOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionInput` via:
//
//          ForwardingRuleRuleConditionArgs{...}
type ForwardingRuleRuleConditionInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput
	ToForwardingRuleRuleConditionOutputWithContext(context.Context) ForwardingRuleRuleConditionOutput
}

type ForwardingRuleRuleConditionArgs struct {
	// Domain name configuration information.
	HostConfigs ForwardingRuleRuleConditionHostConfigArrayInput `pulumi:"hostConfigs"`
	// Path configuration information.
	PathConfig ForwardingRuleRuleConditionPathConfigPtrInput `pulumi:"pathConfig"`
	// Forwarding condition type. Valid value: `Host`, `Path`.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
}

func (ForwardingRuleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleCondition)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionArgs) ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput {
	return i.ToForwardingRuleRuleConditionOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionArgs) ToForwardingRuleRuleConditionOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionOutput)
}

// ForwardingRuleRuleConditionArrayInput is an input type that accepts ForwardingRuleRuleConditionArray and ForwardingRuleRuleConditionArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionArrayInput` via:
//
//          ForwardingRuleRuleConditionArray{ ForwardingRuleRuleConditionArgs{...} }
type ForwardingRuleRuleConditionArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput
	ToForwardingRuleRuleConditionArrayOutputWithContext(context.Context) ForwardingRuleRuleConditionArrayOutput
}

type ForwardingRuleRuleConditionArray []ForwardingRuleRuleConditionInput

func (ForwardingRuleRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleCondition)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionArray) ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput {
	return i.ToForwardingRuleRuleConditionArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionArray) ToForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionArrayOutput)
}

type ForwardingRuleRuleConditionOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleCondition)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionOutput) ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput {
	return o
}

func (o ForwardingRuleRuleConditionOutput) ToForwardingRuleRuleConditionOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionOutput {
	return o
}

// Domain name configuration information.
func (o ForwardingRuleRuleConditionOutput) HostConfigs() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) []ForwardingRuleRuleConditionHostConfig { return v.HostConfigs }).(ForwardingRuleRuleConditionHostConfigArrayOutput)
}

// Path configuration information.
func (o ForwardingRuleRuleConditionOutput) PathConfig() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) *ForwardingRuleRuleConditionPathConfig { return v.PathConfig }).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

// Forwarding condition type. Valid value: `Host`, `Path`.
func (o ForwardingRuleRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

type ForwardingRuleRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleCondition)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionArrayOutput) ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionArrayOutput) ToForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleCondition {
		return vs[0].([]ForwardingRuleRuleCondition)[vs[1].(int)]
	}).(ForwardingRuleRuleConditionOutput)
}

type ForwardingRuleRuleConditionHostConfig struct {
	// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
	Values []string `pulumi:"values"`
}

// ForwardingRuleRuleConditionHostConfigInput is an input type that accepts ForwardingRuleRuleConditionHostConfigArgs and ForwardingRuleRuleConditionHostConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionHostConfigInput` via:
//
//          ForwardingRuleRuleConditionHostConfigArgs{...}
type ForwardingRuleRuleConditionHostConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput
	ToForwardingRuleRuleConditionHostConfigOutputWithContext(context.Context) ForwardingRuleRuleConditionHostConfigOutput
}

type ForwardingRuleRuleConditionHostConfigArgs struct {
	// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ForwardingRuleRuleConditionHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionHostConfigArgs) ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput {
	return i.ToForwardingRuleRuleConditionHostConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionHostConfigArgs) ToForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionHostConfigOutput)
}

// ForwardingRuleRuleConditionHostConfigArrayInput is an input type that accepts ForwardingRuleRuleConditionHostConfigArray and ForwardingRuleRuleConditionHostConfigArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionHostConfigArrayInput` via:
//
//          ForwardingRuleRuleConditionHostConfigArray{ ForwardingRuleRuleConditionHostConfigArgs{...} }
type ForwardingRuleRuleConditionHostConfigArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput
	ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput
}

type ForwardingRuleRuleConditionHostConfigArray []ForwardingRuleRuleConditionHostConfigInput

func (ForwardingRuleRuleConditionHostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionHostConfigArray) ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return i.ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionHostConfigArray) ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionHostConfigArrayOutput)
}

type ForwardingRuleRuleConditionHostConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionHostConfigOutput) ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigOutput) ToForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigOutput {
	return o
}

// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
func (o ForwardingRuleRuleConditionHostConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleConditionHostConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ForwardingRuleRuleConditionHostConfigArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionHostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleConditionHostConfig {
		return vs[0].([]ForwardingRuleRuleConditionHostConfig)[vs[1].(int)]
	}).(ForwardingRuleRuleConditionHostConfigOutput)
}

type ForwardingRuleRuleConditionPathConfig struct {
	// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
	Values []string `pulumi:"values"`
}

// ForwardingRuleRuleConditionPathConfigInput is an input type that accepts ForwardingRuleRuleConditionPathConfigArgs and ForwardingRuleRuleConditionPathConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionPathConfigInput` via:
//
//          ForwardingRuleRuleConditionPathConfigArgs{...}
type ForwardingRuleRuleConditionPathConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput
	ToForwardingRuleRuleConditionPathConfigOutputWithContext(context.Context) ForwardingRuleRuleConditionPathConfigOutput
}

type ForwardingRuleRuleConditionPathConfigArgs struct {
	// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ForwardingRuleRuleConditionPathConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput {
	return i.ToForwardingRuleRuleConditionPathConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigOutput)
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return i.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigOutput).ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx)
}

// ForwardingRuleRuleConditionPathConfigPtrInput is an input type that accepts ForwardingRuleRuleConditionPathConfigArgs, ForwardingRuleRuleConditionPathConfigPtr and ForwardingRuleRuleConditionPathConfigPtrOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionPathConfigPtrInput` via:
//
//          ForwardingRuleRuleConditionPathConfigArgs{...}
//
//  or:
//
//          nil
type ForwardingRuleRuleConditionPathConfigPtrInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput
	ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput
}

type forwardingRuleRuleConditionPathConfigPtrType ForwardingRuleRuleConditionPathConfigArgs

func ForwardingRuleRuleConditionPathConfigPtr(v *ForwardingRuleRuleConditionPathConfigArgs) ForwardingRuleRuleConditionPathConfigPtrInput {
	return (*forwardingRuleRuleConditionPathConfigPtrType)(v)
}

func (*forwardingRuleRuleConditionPathConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i *forwardingRuleRuleConditionPathConfigPtrType) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return i.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (i *forwardingRuleRuleConditionPathConfigPtrType) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

type ForwardingRuleRuleConditionPathConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionPathConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ApplyT(func(v ForwardingRuleRuleConditionPathConfig) *ForwardingRuleRuleConditionPathConfig {
		return &v
	}).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
func (o ForwardingRuleRuleConditionPathConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleConditionPathConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ForwardingRuleRuleConditionPathConfigPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionPathConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) Elem() ForwardingRuleRuleConditionPathConfigOutput {
	return o.ApplyT(func(v *ForwardingRuleRuleConditionPathConfig) ForwardingRuleRuleConditionPathConfig { return *v }).(ForwardingRuleRuleConditionPathConfigOutput)
}

// The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.
func (o ForwardingRuleRuleConditionPathConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingRuleRuleConditionPathConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerCertificate struct {
	// The id of the certificate.
	Id *string `pulumi:"id"`
}

// ListenerCertificateInput is an input type that accepts ListenerCertificateArgs and ListenerCertificateOutput values.
// You can construct a concrete instance of `ListenerCertificateInput` via:
//
//          ListenerCertificateArgs{...}
type ListenerCertificateInput interface {
	pulumi.Input

	ToListenerCertificateOutput() ListenerCertificateOutput
	ToListenerCertificateOutputWithContext(context.Context) ListenerCertificateOutput
}

type ListenerCertificateArgs struct {
	// The id of the certificate.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArgs) ToListenerCertificateOutput() ListenerCertificateOutput {
	return i.ToListenerCertificateOutputWithContext(context.Background())
}

func (i ListenerCertificateArgs) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateOutput)
}

// ListenerCertificateArrayInput is an input type that accepts ListenerCertificateArray and ListenerCertificateArrayOutput values.
// You can construct a concrete instance of `ListenerCertificateArrayInput` via:
//
//          ListenerCertificateArray{ ListenerCertificateArgs{...} }
type ListenerCertificateArrayInput interface {
	pulumi.Input

	ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput
	ToListenerCertificateArrayOutputWithContext(context.Context) ListenerCertificateArrayOutput
}

type ListenerCertificateArray []ListenerCertificateInput

func (ListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return i.ToListenerCertificateArrayOutputWithContext(context.Background())
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateArrayOutput)
}

type ListenerCertificateOutput struct{ *pulumi.OutputState }

func (ListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateOutput) ToListenerCertificateOutput() ListenerCertificateOutput {
	return o
}

func (o ListenerCertificateOutput) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return o
}

// The id of the certificate.
func (o ListenerCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (ListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) Index(i pulumi.IntInput) ListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerCertificate {
		return vs[0].([]ListenerCertificate)[vs[1].(int)]
	}).(ListenerCertificateOutput)
}

type ListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// ListenerPortRangeInput is an input type that accepts ListenerPortRangeArgs and ListenerPortRangeOutput values.
// You can construct a concrete instance of `ListenerPortRangeInput` via:
//
//          ListenerPortRangeArgs{...}
type ListenerPortRangeInput interface {
	pulumi.Input

	ToListenerPortRangeOutput() ListenerPortRangeOutput
	ToListenerPortRangeOutputWithContext(context.Context) ListenerPortRangeOutput
}

type ListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (ListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return i.ToListenerPortRangeOutputWithContext(context.Background())
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeOutput)
}

// ListenerPortRangeArrayInput is an input type that accepts ListenerPortRangeArray and ListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `ListenerPortRangeArrayInput` via:
//
//          ListenerPortRangeArray{ ListenerPortRangeArgs{...} }
type ListenerPortRangeArrayInput interface {
	pulumi.Input

	ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput
	ToListenerPortRangeArrayOutputWithContext(context.Context) ListenerPortRangeArrayOutput
}

type ListenerPortRangeArray []ListenerPortRangeInput

func (ListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return i.ToListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeArrayOutput)
}

type ListenerPortRangeOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return o
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type ListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) Index(i pulumi.IntInput) ListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerPortRange {
		return vs[0].([]ListenerPortRange)[vs[1].(int)]
	}).(ListenerPortRangeOutput)
}

type GetAcceleratorsAccelerator struct {
	// The ID of the GA instance to query.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName string `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages []GetAcceleratorsAcceleratorBasicBandwidthPackage `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId string `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId string `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description string `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName string `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime int `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id string `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType string `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName string `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec string `pulumi:"spec"`
	// The status of the GA instance.
	Status string `pulumi:"status"`
}

// GetAcceleratorsAcceleratorInput is an input type that accepts GetAcceleratorsAcceleratorArgs and GetAcceleratorsAcceleratorOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorInput` via:
//
//          GetAcceleratorsAcceleratorArgs{...}
type GetAcceleratorsAcceleratorInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput
	ToGetAcceleratorsAcceleratorOutputWithContext(context.Context) GetAcceleratorsAcceleratorOutput
}

type GetAcceleratorsAcceleratorArgs struct {
	// The ID of the GA instance to query.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName pulumi.StringInput `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId pulumi.StringInput `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description pulumi.StringInput `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id pulumi.StringInput `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName pulumi.StringInput `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the GA instance.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAcceleratorsAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return i.ToGetAcceleratorsAcceleratorOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorOutput)
}

// GetAcceleratorsAcceleratorArrayInput is an input type that accepts GetAcceleratorsAcceleratorArray and GetAcceleratorsAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorArrayInput` via:
//
//          GetAcceleratorsAcceleratorArray{ GetAcceleratorsAcceleratorArgs{...} }
type GetAcceleratorsAcceleratorArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput
	ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorArrayOutput
}

type GetAcceleratorsAcceleratorArray []GetAcceleratorsAcceleratorInput

func (GetAcceleratorsAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return i.ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorArrayOutput)
}

type GetAcceleratorsAcceleratorOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return o
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return o
}

// The ID of the GA instance to query.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The Name of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorName }).(pulumi.StringOutput)
}

// Details of the basic bandwidth package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) BasicBandwidthPackages() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return v.BasicBandwidthPackages
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

// The cloud enterprise network instance ID bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.CenId }).(pulumi.StringOutput)
}

// Details of the cross-domain acceleration package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CrossDomainBandwidthPackages() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return v.CrossDomainBandwidthPackages
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

// DDoS high-defense instance ID that is unbound from the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DdosId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DdosId }).(pulumi.StringOutput)
}

// Descriptive information of the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Description }).(pulumi.StringOutput)
}

// CNAME address assigned by Global Acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DnsName }).(pulumi.StringOutput)
}

// Time when the global acceleration instance expires.
func (o GetAcceleratorsAcceleratorOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// The ID of the Accelerator.
func (o GetAcceleratorsAcceleratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Id }).(pulumi.StringOutput)
}

// The Payment Typethe GA instance.
func (o GetAcceleratorsAcceleratorOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.PaymentType }).(pulumi.StringOutput)
}

// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
func (o GetAcceleratorsAcceleratorOutput) SecondDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.SecondDnsName }).(pulumi.StringOutput)
}

// The instance type of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Status }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAccelerator {
		return vs[0].([]GetAcceleratorsAccelerator)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType string `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArgs and GetAcceleratorsAcceleratorBasicBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageInput` via:
//
//          GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorBasicBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArray and GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput` via:
//
//          GetAcceleratorsAcceleratorBasicBandwidthPackageArray{ GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArray []GetAcceleratorsAcceleratorBasicBandwidthPackageInput

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The bandwidth type of the basic bandwidth package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorBasicBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput` via:
//
//          GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput` via:
//
//          GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{ GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray []GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

type GetBandwidthPackagesPackage struct {
	// The bandwidth value of bandwidth packet.
	Bandwidth int `pulumi:"bandwidth"`
	// The Resource ID of the bandwidth.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The name of the bandwidth packet.
	BandwidthPackageName string `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth.
	BandwidthType string `pulumi:"bandwidthType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIda string `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIdb string `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description string `pulumi:"description"`
	// Bandwidth package expiration time.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Bandwidth Package.
	Id string `pulumi:"id"`
	// The payment type of the bandwidth.
	PaymentType string `pulumi:"paymentType"`
	// The status of the bandwidth plan.
	Status string `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic.
	Type string `pulumi:"type"`
}

// GetBandwidthPackagesPackageInput is an input type that accepts GetBandwidthPackagesPackageArgs and GetBandwidthPackagesPackageOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageInput` via:
//
//          GetBandwidthPackagesPackageArgs{...}
type GetBandwidthPackagesPackageInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput
	ToGetBandwidthPackagesPackageOutputWithContext(context.Context) GetBandwidthPackagesPackageOutput
}

type GetBandwidthPackagesPackageArgs struct {
	// The bandwidth value of bandwidth packet.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The Resource ID of the bandwidth.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The name of the bandwidth packet.
	BandwidthPackageName pulumi.StringInput `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIda pulumi.StringInput `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIdb pulumi.StringInput `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description pulumi.StringInput `pulumi:"description"`
	// Bandwidth package expiration time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Bandwidth Package.
	Id pulumi.StringInput `pulumi:"id"`
	// The payment type of the bandwidth.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The status of the bandwidth plan.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBandwidthPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return i.ToGetBandwidthPackagesPackageOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageOutput)
}

// GetBandwidthPackagesPackageArrayInput is an input type that accepts GetBandwidthPackagesPackageArray and GetBandwidthPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageArrayInput` via:
//
//          GetBandwidthPackagesPackageArray{ GetBandwidthPackagesPackageArgs{...} }
type GetBandwidthPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput
	ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Context) GetBandwidthPackagesPackageArrayOutput
}

type GetBandwidthPackagesPackageArray []GetBandwidthPackagesPackageInput

func (GetBandwidthPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return i.ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageArrayOutput)
}

type GetBandwidthPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return o
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return o
}

// The bandwidth value of bandwidth packet.
func (o GetBandwidthPackagesPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The Resource ID of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the bandwidth packet.
func (o GetBandwidthPackagesPackageOutput) BandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthPackageName }).(pulumi.StringOutput)
}

// The bandwidth type of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
func (o GetBandwidthPackagesPackageOutput) CbnGeographicRegionIda() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CbnGeographicRegionIda }).(pulumi.StringOutput)
}

// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
func (o GetBandwidthPackagesPackageOutput) CbnGeographicRegionIdb() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CbnGeographicRegionIdb }).(pulumi.StringOutput)
}

// The description of bandwidth package.
func (o GetBandwidthPackagesPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Description }).(pulumi.StringOutput)
}

// Bandwidth package expiration time.
func (o GetBandwidthPackagesPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Bandwidth Package.
func (o GetBandwidthPackagesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The payment type of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The status of the bandwidth plan.
func (o GetBandwidthPackagesPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the bandwidth packet. China station only supports return to basic.
func (o GetBandwidthPackagesPackageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Type }).(pulumi.StringOutput)
}

type GetBandwidthPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetBandwidthPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBandwidthPackagesPackage {
		return vs[0].([]GetBandwidthPackagesPackage)[vs[1].(int)]
	}).(GetBandwidthPackagesPackageOutput)
}

type GetEndpointGroupsGroup struct {
	// The description of the endpoint group.
	Description string `pulumi:"description"`
	// The endpointConfigurations of the endpoint group.
	EndpointConfigurations []GetEndpointGroupsGroupEndpointConfiguration `pulumi:"endpointConfigurations"`
	// The endpointGroupId of the Endpoint Group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The ID of the region where the endpoint group is deployed.
	EndpointGroupRegion string `pulumi:"endpointGroupRegion"`
	// The interval between two consecutive health checks. Unit: seconds.
	HealthCheckIntervalSeconds int `pulumi:"healthCheckIntervalSeconds"`
	// The path specified as the destination of the targets for health checks.
	HealthCheckPath string `pulumi:"healthCheckPath"`
	// The port that is used for health checks.
	HealthCheckPort int `pulumi:"healthCheckPort"`
	// The protocol that is used to connect to the targets for health checks.
	HealthCheckProtocol string `pulumi:"healthCheckProtocol"`
	// The ID of the Endpoint Group.
	Id string `pulumi:"id"`
	// The ID of the listener that is associated with the endpoint group.
	ListenerId string `pulumi:"listenerId"`
	// The name of the endpoint group.
	Name string `pulumi:"name"`
	// Mapping between listening port and forwarding port of boarding point.
	PortOverrides []GetEndpointGroupsGroupPortOverride `pulumi:"portOverrides"`
	// The status of the endpoint group.
	Status string `pulumi:"status"`
	// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
	ThresholdCount int `pulumi:"thresholdCount"`
	// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
	TrafficPercentage int `pulumi:"trafficPercentage"`
}

// GetEndpointGroupsGroupInput is an input type that accepts GetEndpointGroupsGroupArgs and GetEndpointGroupsGroupOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupInput` via:
//
//          GetEndpointGroupsGroupArgs{...}
type GetEndpointGroupsGroupInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput
	ToGetEndpointGroupsGroupOutputWithContext(context.Context) GetEndpointGroupsGroupOutput
}

type GetEndpointGroupsGroupArgs struct {
	// The description of the endpoint group.
	Description pulumi.StringInput `pulumi:"description"`
	// The endpointConfigurations of the endpoint group.
	EndpointConfigurations GetEndpointGroupsGroupEndpointConfigurationArrayInput `pulumi:"endpointConfigurations"`
	// The endpointGroupId of the Endpoint Group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The ID of the region where the endpoint group is deployed.
	EndpointGroupRegion pulumi.StringInput `pulumi:"endpointGroupRegion"`
	// The interval between two consecutive health checks. Unit: seconds.
	HealthCheckIntervalSeconds pulumi.IntInput `pulumi:"healthCheckIntervalSeconds"`
	// The path specified as the destination of the targets for health checks.
	HealthCheckPath pulumi.StringInput `pulumi:"healthCheckPath"`
	// The port that is used for health checks.
	HealthCheckPort pulumi.IntInput `pulumi:"healthCheckPort"`
	// The protocol that is used to connect to the targets for health checks.
	HealthCheckProtocol pulumi.StringInput `pulumi:"healthCheckProtocol"`
	// The ID of the Endpoint Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the listener that is associated with the endpoint group.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the endpoint group.
	Name pulumi.StringInput `pulumi:"name"`
	// Mapping between listening port and forwarding port of boarding point.
	PortOverrides GetEndpointGroupsGroupPortOverrideArrayInput `pulumi:"portOverrides"`
	// The status of the endpoint group.
	Status pulumi.StringInput `pulumi:"status"`
	// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
	ThresholdCount pulumi.IntInput `pulumi:"thresholdCount"`
	// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
	TrafficPercentage pulumi.IntInput `pulumi:"trafficPercentage"`
}

func (GetEndpointGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroup)(nil)).Elem()
}

func (i GetEndpointGroupsGroupArgs) ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput {
	return i.ToGetEndpointGroupsGroupOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupArgs) ToGetEndpointGroupsGroupOutputWithContext(ctx context.Context) GetEndpointGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupOutput)
}

// GetEndpointGroupsGroupArrayInput is an input type that accepts GetEndpointGroupsGroupArray and GetEndpointGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupArrayInput` via:
//
//          GetEndpointGroupsGroupArray{ GetEndpointGroupsGroupArgs{...} }
type GetEndpointGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput
	ToGetEndpointGroupsGroupArrayOutputWithContext(context.Context) GetEndpointGroupsGroupArrayOutput
}

type GetEndpointGroupsGroupArray []GetEndpointGroupsGroupInput

func (GetEndpointGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroup)(nil)).Elem()
}

func (i GetEndpointGroupsGroupArray) ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput {
	return i.ToGetEndpointGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupArray) ToGetEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupArrayOutput)
}

type GetEndpointGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroup)(nil)).Elem()
}

func (o GetEndpointGroupsGroupOutput) ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput {
	return o
}

func (o GetEndpointGroupsGroupOutput) ToGetEndpointGroupsGroupOutputWithContext(ctx context.Context) GetEndpointGroupsGroupOutput {
	return o
}

// The description of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The endpointConfigurations of the endpoint group.
func (o GetEndpointGroupsGroupOutput) EndpointConfigurations() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) []GetEndpointGroupsGroupEndpointConfiguration {
		return v.EndpointConfigurations
	}).(GetEndpointGroupsGroupEndpointConfigurationArrayOutput)
}

// The endpointGroupId of the Endpoint Group.
func (o GetEndpointGroupsGroupOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the region where the endpoint group is deployed.
func (o GetEndpointGroupsGroupOutput) EndpointGroupRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.EndpointGroupRegion }).(pulumi.StringOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o GetEndpointGroupsGroupOutput) HealthCheckIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.HealthCheckIntervalSeconds }).(pulumi.IntOutput)
}

// The path specified as the destination of the targets for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// The port that is used for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.HealthCheckPort }).(pulumi.IntOutput)
}

// The protocol that is used to connect to the targets for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.HealthCheckProtocol }).(pulumi.StringOutput)
}

// The ID of the Endpoint Group.
func (o GetEndpointGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener that is associated with the endpoint group.
func (o GetEndpointGroupsGroupOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Mapping between listening port and forwarding port of boarding point.
func (o GetEndpointGroupsGroupOutput) PortOverrides() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) []GetEndpointGroupsGroupPortOverride { return v.PortOverrides }).(GetEndpointGroupsGroupPortOverrideArrayOutput)
}

// The status of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
func (o GetEndpointGroupsGroupOutput) ThresholdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.ThresholdCount }).(pulumi.IntOutput)
}

// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
func (o GetEndpointGroupsGroupOutput) TrafficPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.TrafficPercentage }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroup)(nil)).Elem()
}

func (o GetEndpointGroupsGroupArrayOutput) ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupArrayOutput) ToGetEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroup {
		return vs[0].([]GetEndpointGroupsGroup)[vs[1].(int)]
	}).(GetEndpointGroupsGroupOutput)
}

type GetEndpointGroupsGroupEndpointConfiguration struct {
	// Indicates whether client IP addresses are reserved.
	EnableClientipPreservation bool `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint string `pulumi:"endpoint"`
	// Probe Port.
	ProbePort int `pulumi:"probePort"`
	// Probe Protocol.
	ProbeProtocol string `pulumi:"probeProtocol"`
	// The type of Endpoint N in the endpoint group.
	Type string `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group.
	Weight int `pulumi:"weight"`
}

// GetEndpointGroupsGroupEndpointConfigurationInput is an input type that accepts GetEndpointGroupsGroupEndpointConfigurationArgs and GetEndpointGroupsGroupEndpointConfigurationOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupEndpointConfigurationInput` via:
//
//          GetEndpointGroupsGroupEndpointConfigurationArgs{...}
type GetEndpointGroupsGroupEndpointConfigurationInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput
	ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput
}

type GetEndpointGroupsGroupEndpointConfigurationArgs struct {
	// Indicates whether client IP addresses are reserved.
	EnableClientipPreservation pulumi.BoolInput `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Probe Port.
	ProbePort pulumi.IntInput `pulumi:"probePort"`
	// Probe Protocol.
	ProbeProtocol pulumi.StringInput `pulumi:"probeProtocol"`
	// The type of Endpoint N in the endpoint group.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetEndpointGroupsGroupEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (i GetEndpointGroupsGroupEndpointConfigurationArgs) ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput {
	return i.ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupEndpointConfigurationArgs) ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupEndpointConfigurationOutput)
}

// GetEndpointGroupsGroupEndpointConfigurationArrayInput is an input type that accepts GetEndpointGroupsGroupEndpointConfigurationArray and GetEndpointGroupsGroupEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupEndpointConfigurationArrayInput` via:
//
//          GetEndpointGroupsGroupEndpointConfigurationArray{ GetEndpointGroupsGroupEndpointConfigurationArgs{...} }
type GetEndpointGroupsGroupEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput
	ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput
}

type GetEndpointGroupsGroupEndpointConfigurationArray []GetEndpointGroupsGroupEndpointConfigurationInput

func (GetEndpointGroupsGroupEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (i GetEndpointGroupsGroupEndpointConfigurationArray) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return i.ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupEndpointConfigurationArray) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupEndpointConfigurationArrayOutput)
}

type GetEndpointGroupsGroupEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return o
}

// Indicates whether client IP addresses are reserved.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) EnableClientipPreservation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) bool { return v.EnableClientipPreservation }).(pulumi.BoolOutput)
}

// The IP address or domain name of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Probe Port.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ProbePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) int { return v.ProbePort }).(pulumi.IntOutput)
}

// Probe Protocol.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ProbeProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.ProbeProtocol }).(pulumi.StringOutput)
}

// The type of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroupEndpointConfiguration {
		return vs[0].([]GetEndpointGroupsGroupEndpointConfiguration)[vs[1].(int)]
	}).(GetEndpointGroupsGroupEndpointConfigurationOutput)
}

type GetEndpointGroupsGroupPortOverride struct {
	// Forwarding port.
	EndpointPort int `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort int `pulumi:"listenerPort"`
}

// GetEndpointGroupsGroupPortOverrideInput is an input type that accepts GetEndpointGroupsGroupPortOverrideArgs and GetEndpointGroupsGroupPortOverrideOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupPortOverrideInput` via:
//
//          GetEndpointGroupsGroupPortOverrideArgs{...}
type GetEndpointGroupsGroupPortOverrideInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput
	ToGetEndpointGroupsGroupPortOverrideOutputWithContext(context.Context) GetEndpointGroupsGroupPortOverrideOutput
}

type GetEndpointGroupsGroupPortOverrideArgs struct {
	// Forwarding port.
	EndpointPort pulumi.IntInput `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort pulumi.IntInput `pulumi:"listenerPort"`
}

func (GetEndpointGroupsGroupPortOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (i GetEndpointGroupsGroupPortOverrideArgs) ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput {
	return i.ToGetEndpointGroupsGroupPortOverrideOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupPortOverrideArgs) ToGetEndpointGroupsGroupPortOverrideOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupPortOverrideOutput)
}

// GetEndpointGroupsGroupPortOverrideArrayInput is an input type that accepts GetEndpointGroupsGroupPortOverrideArray and GetEndpointGroupsGroupPortOverrideArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupPortOverrideArrayInput` via:
//
//          GetEndpointGroupsGroupPortOverrideArray{ GetEndpointGroupsGroupPortOverrideArgs{...} }
type GetEndpointGroupsGroupPortOverrideArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput
	ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput
}

type GetEndpointGroupsGroupPortOverrideArray []GetEndpointGroupsGroupPortOverrideInput

func (GetEndpointGroupsGroupPortOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (i GetEndpointGroupsGroupPortOverrideArray) ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return i.ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupPortOverrideArray) ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupPortOverrideArrayOutput)
}

type GetEndpointGroupsGroupPortOverrideOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupPortOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (o GetEndpointGroupsGroupPortOverrideOutput) ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideOutput) ToGetEndpointGroupsGroupPortOverrideOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideOutput {
	return o
}

// Forwarding port.
func (o GetEndpointGroupsGroupPortOverrideOutput) EndpointPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupPortOverride) int { return v.EndpointPort }).(pulumi.IntOutput)
}

// Listener port.
func (o GetEndpointGroupsGroupPortOverrideOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupPortOverride) int { return v.ListenerPort }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupPortOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupPortOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupPortOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroupPortOverride {
		return vs[0].([]GetEndpointGroupsGroupPortOverride)[vs[1].(int)]
	}).(GetEndpointGroupsGroupPortOverrideOutput)
}

type GetForwardingRulesForwardingRule struct {
	// Forwarding Policy ID.
	ForwardingRuleId string `pulumi:"forwardingRuleId"`
	// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
	ForwardingRuleName string `pulumi:"forwardingRuleName"`
	// Forwarding Policy Status.
	ForwardingRuleStatus string `pulumi:"forwardingRuleStatus"`
	Id                   string `pulumi:"id"`
	// The ID of the listener.
	ListenerId string `pulumi:"listenerId"`
	// Forwarding policy priority.
	Priority int `pulumi:"priority"`
	// The IP protocol used by the GA instance.
	// `order` - Forwarding priority.
	// `ruleActionType` - Forward action type.
	// `forwardGroupConfig` - Forwarding configuration.
	// `serverGroupTuples` - Terminal node group configuration.
	// `endpointGroupId` - Terminal node group ID.
	RuleActions []GetForwardingRulesForwardingRuleRuleAction `pulumi:"ruleActions"`
	// Forward action.
	// `ruleConditionType` - Forwarding condition type.
	// `pathConfig` - Path configuration information.
	// `values` - The length of the path is 1-128 characters.
	// `hostConfig` - Domain name configuration information.
	// `values` - The domain name is 3-128 characters long.
	RuleConditions []GetForwardingRulesForwardingRuleRuleCondition `pulumi:"ruleConditions"`
}

// GetForwardingRulesForwardingRuleInput is an input type that accepts GetForwardingRulesForwardingRuleArgs and GetForwardingRulesForwardingRuleOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleInput` via:
//
//          GetForwardingRulesForwardingRuleArgs{...}
type GetForwardingRulesForwardingRuleInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput
	ToGetForwardingRulesForwardingRuleOutputWithContext(context.Context) GetForwardingRulesForwardingRuleOutput
}

type GetForwardingRulesForwardingRuleArgs struct {
	// Forwarding Policy ID.
	ForwardingRuleId pulumi.StringInput `pulumi:"forwardingRuleId"`
	// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
	ForwardingRuleName pulumi.StringInput `pulumi:"forwardingRuleName"`
	// Forwarding Policy Status.
	ForwardingRuleStatus pulumi.StringInput `pulumi:"forwardingRuleStatus"`
	Id                   pulumi.StringInput `pulumi:"id"`
	// The ID of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// Forwarding policy priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The IP protocol used by the GA instance.
	// `order` - Forwarding priority.
	// `ruleActionType` - Forward action type.
	// `forwardGroupConfig` - Forwarding configuration.
	// `serverGroupTuples` - Terminal node group configuration.
	// `endpointGroupId` - Terminal node group ID.
	RuleActions GetForwardingRulesForwardingRuleRuleActionArrayInput `pulumi:"ruleActions"`
	// Forward action.
	// `ruleConditionType` - Forwarding condition type.
	// `pathConfig` - Path configuration information.
	// `values` - The length of the path is 1-128 characters.
	// `hostConfig` - Domain name configuration information.
	// `values` - The domain name is 3-128 characters long.
	RuleConditions GetForwardingRulesForwardingRuleRuleConditionArrayInput `pulumi:"ruleConditions"`
}

func (GetForwardingRulesForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleArgs) ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput {
	return i.ToGetForwardingRulesForwardingRuleOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleArgs) ToGetForwardingRulesForwardingRuleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleOutput)
}

// GetForwardingRulesForwardingRuleArrayInput is an input type that accepts GetForwardingRulesForwardingRuleArray and GetForwardingRulesForwardingRuleArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleArrayInput` via:
//
//          GetForwardingRulesForwardingRuleArray{ GetForwardingRulesForwardingRuleArgs{...} }
type GetForwardingRulesForwardingRuleArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput
	ToGetForwardingRulesForwardingRuleArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleArrayOutput
}

type GetForwardingRulesForwardingRuleArray []GetForwardingRulesForwardingRuleInput

func (GetForwardingRulesForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleArray) ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleArray) ToGetForwardingRulesForwardingRuleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleArrayOutput)
}

type GetForwardingRulesForwardingRuleOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleOutput) ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleOutput) ToGetForwardingRulesForwardingRuleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleOutput {
	return o
}

// Forwarding Policy ID.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleId }).(pulumi.StringOutput)
}

// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleName }).(pulumi.StringOutput)
}

// Forwarding Policy Status.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleStatus }).(pulumi.StringOutput)
}

func (o GetForwardingRulesForwardingRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener.
func (o GetForwardingRulesForwardingRuleOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ListenerId }).(pulumi.StringOutput)
}

// Forwarding policy priority.
func (o GetForwardingRulesForwardingRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The IP protocol used by the GA instance.
// `order` - Forwarding priority.
// `ruleActionType` - Forward action type.
// `forwardGroupConfig` - Forwarding configuration.
// `serverGroupTuples` - Terminal node group configuration.
// `endpointGroupId` - Terminal node group ID.
func (o GetForwardingRulesForwardingRuleOutput) RuleActions() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) []GetForwardingRulesForwardingRuleRuleAction {
		return v.RuleActions
	}).(GetForwardingRulesForwardingRuleRuleActionArrayOutput)
}

// Forward action.
// `ruleConditionType` - Forwarding condition type.
// `pathConfig` - Path configuration information.
// `values` - The length of the path is 1-128 characters.
// `hostConfig` - Domain name configuration information.
// `values` - The domain name is 3-128 characters long.
func (o GetForwardingRulesForwardingRuleOutput) RuleConditions() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) []GetForwardingRulesForwardingRuleRuleCondition {
		return v.RuleConditions
	}).(GetForwardingRulesForwardingRuleRuleConditionArrayOutput)
}

type GetForwardingRulesForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleArrayOutput) ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleArrayOutput) ToGetForwardingRulesForwardingRuleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRule {
		return vs[0].([]GetForwardingRulesForwardingRule)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleOutput)
}

type GetForwardingRulesForwardingRuleRuleAction struct {
	ForwardGroupConfigs []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig `pulumi:"forwardGroupConfigs"`
	Order               int                                                            `pulumi:"order"`
	RuleActionType      string                                                         `pulumi:"ruleActionType"`
}

// GetForwardingRulesForwardingRuleRuleActionInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionArgs and GetForwardingRulesForwardingRuleRuleActionOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionArgs{...}
type GetForwardingRulesForwardingRuleRuleActionInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput
	ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionOutput
}

type GetForwardingRulesForwardingRuleRuleActionArgs struct {
	ForwardGroupConfigs GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput `pulumi:"forwardGroupConfigs"`
	Order               pulumi.IntInput                                                        `pulumi:"order"`
	RuleActionType      pulumi.StringInput                                                     `pulumi:"ruleActionType"`
}

func (GetForwardingRulesForwardingRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionArgs) ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionArgs) ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionOutput)
}

// GetForwardingRulesForwardingRuleRuleActionArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionArray and GetForwardingRulesForwardingRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionArray{ GetForwardingRulesForwardingRuleRuleActionArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionArray []GetForwardingRulesForwardingRuleRuleActionInput

func (GetForwardingRulesForwardingRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionArray) ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionArray) ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ForwardGroupConfigs() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig {
		return v.ForwardGroupConfigs
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) int { return v.Order }).(pulumi.IntOutput)
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) RuleActionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) string { return v.RuleActionType }).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleAction {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleAction)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig struct {
	ServerGroupTuples []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple `pulumi:"serverGroupTuples"`
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs struct {
	ServerGroupTuples GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput `pulumi:"serverGroupTuples"`
}

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray{ GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ServerGroupTuples() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig) []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return v.ServerGroupTuples
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple struct {
	EndpointGroupId string `pulumi:"endpointGroupId"`
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...}
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs struct {
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
}

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{ GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple) string {
		return v.EndpointGroupId
	}).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

type GetForwardingRulesForwardingRuleRuleCondition struct {
	HostConfigs       []GetForwardingRulesForwardingRuleRuleConditionHostConfig `pulumi:"hostConfigs"`
	PathConfigs       []GetForwardingRulesForwardingRuleRuleConditionPathConfig `pulumi:"pathConfigs"`
	RuleConditionType string                                                    `pulumi:"ruleConditionType"`
}

// GetForwardingRulesForwardingRuleRuleConditionInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionArgs and GetForwardingRulesForwardingRuleRuleConditionOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput
	ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput
}

type GetForwardingRulesForwardingRuleRuleConditionArgs struct {
	HostConfigs       GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput `pulumi:"hostConfigs"`
	PathConfigs       GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput `pulumi:"pathConfigs"`
	RuleConditionType pulumi.StringInput                                                `pulumi:"ruleConditionType"`
}

func (GetForwardingRulesForwardingRuleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionArgs) ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionArgs) ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionArray and GetForwardingRulesForwardingRuleRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionArray{ GetForwardingRulesForwardingRuleRuleConditionArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionArray []GetForwardingRulesForwardingRuleRuleConditionInput

func (GetForwardingRulesForwardingRuleRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionArray) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionArray) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) HostConfigs() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) []GetForwardingRulesForwardingRuleRuleConditionHostConfig {
		return v.HostConfigs
	}).(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) PathConfigs() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) []GetForwardingRulesForwardingRuleRuleConditionPathConfig {
		return v.PathConfigs
	}).(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleCondition {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleCondition)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfig struct {
	Values []string `pulumi:"values"`
}

// GetForwardingRulesForwardingRuleRuleConditionHostConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs and GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionHostConfigInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionHostConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput
	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionHostConfigArray and GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionHostConfigArray{ GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArray []GetForwardingRulesForwardingRuleRuleConditionHostConfigInput

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleConditionHostConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleConditionHostConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleConditionHostConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfig struct {
	Values []string `pulumi:"values"`
}

// GetForwardingRulesForwardingRuleRuleConditionPathConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs and GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionPathConfigInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionPathConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput
	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionPathConfigArray and GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput` via:
//
//          GetForwardingRulesForwardingRuleRuleConditionPathConfigArray{ GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArray []GetForwardingRulesForwardingRuleRuleConditionPathConfigInput

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleConditionPathConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleConditionPathConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleConditionPathConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput)
}

type GetIpSetsSet struct {
	// The ID of an acceleration region.
	AccelerateRegionId string `pulumi:"accelerateRegionId"`
	// The bandwidth allocated to the acceleration region.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the Ip Set.
	Id string `pulumi:"id"`
	// The list of accelerated IP addresses in the acceleration region.
	IpAddressLists []string `pulumi:"ipAddressLists"`
	// Accelerated area ID.
	IpSetId string `pulumi:"ipSetId"`
	// The IP protocol used by the GA instance.
	IpVersion string `pulumi:"ipVersion"`
	// The status of the acceleration region.
	Status string `pulumi:"status"`
}

// GetIpSetsSetInput is an input type that accepts GetIpSetsSetArgs and GetIpSetsSetOutput values.
// You can construct a concrete instance of `GetIpSetsSetInput` via:
//
//          GetIpSetsSetArgs{...}
type GetIpSetsSetInput interface {
	pulumi.Input

	ToGetIpSetsSetOutput() GetIpSetsSetOutput
	ToGetIpSetsSetOutputWithContext(context.Context) GetIpSetsSetOutput
}

type GetIpSetsSetArgs struct {
	// The ID of an acceleration region.
	AccelerateRegionId pulumi.StringInput `pulumi:"accelerateRegionId"`
	// The bandwidth allocated to the acceleration region.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the Ip Set.
	Id pulumi.StringInput `pulumi:"id"`
	// The list of accelerated IP addresses in the acceleration region.
	IpAddressLists pulumi.StringArrayInput `pulumi:"ipAddressLists"`
	// Accelerated area ID.
	IpSetId pulumi.StringInput `pulumi:"ipSetId"`
	// The IP protocol used by the GA instance.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The status of the acceleration region.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIpSetsSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSetsSet)(nil)).Elem()
}

func (i GetIpSetsSetArgs) ToGetIpSetsSetOutput() GetIpSetsSetOutput {
	return i.ToGetIpSetsSetOutputWithContext(context.Background())
}

func (i GetIpSetsSetArgs) ToGetIpSetsSetOutputWithContext(ctx context.Context) GetIpSetsSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSetsSetOutput)
}

// GetIpSetsSetArrayInput is an input type that accepts GetIpSetsSetArray and GetIpSetsSetArrayOutput values.
// You can construct a concrete instance of `GetIpSetsSetArrayInput` via:
//
//          GetIpSetsSetArray{ GetIpSetsSetArgs{...} }
type GetIpSetsSetArrayInput interface {
	pulumi.Input

	ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput
	ToGetIpSetsSetArrayOutputWithContext(context.Context) GetIpSetsSetArrayOutput
}

type GetIpSetsSetArray []GetIpSetsSetInput

func (GetIpSetsSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSetsSet)(nil)).Elem()
}

func (i GetIpSetsSetArray) ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput {
	return i.ToGetIpSetsSetArrayOutputWithContext(context.Background())
}

func (i GetIpSetsSetArray) ToGetIpSetsSetArrayOutputWithContext(ctx context.Context) GetIpSetsSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSetsSetArrayOutput)
}

type GetIpSetsSetOutput struct{ *pulumi.OutputState }

func (GetIpSetsSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSetsSet)(nil)).Elem()
}

func (o GetIpSetsSetOutput) ToGetIpSetsSetOutput() GetIpSetsSetOutput {
	return o
}

func (o GetIpSetsSetOutput) ToGetIpSetsSetOutputWithContext(ctx context.Context) GetIpSetsSetOutput {
	return o
}

// The ID of an acceleration region.
func (o GetIpSetsSetOutput) AccelerateRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.AccelerateRegionId }).(pulumi.StringOutput)
}

// The bandwidth allocated to the acceleration region.
func (o GetIpSetsSetOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpSetsSet) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the Ip Set.
func (o GetIpSetsSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.Id }).(pulumi.StringOutput)
}

// The list of accelerated IP addresses in the acceleration region.
func (o GetIpSetsSetOutput) IpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpSetsSet) []string { return v.IpAddressLists }).(pulumi.StringArrayOutput)
}

// Accelerated area ID.
func (o GetIpSetsSetOutput) IpSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.IpSetId }).(pulumi.StringOutput)
}

// The IP protocol used by the GA instance.
func (o GetIpSetsSetOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The status of the acceleration region.
func (o GetIpSetsSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.Status }).(pulumi.StringOutput)
}

type GetIpSetsSetArrayOutput struct{ *pulumi.OutputState }

func (GetIpSetsSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSetsSet)(nil)).Elem()
}

func (o GetIpSetsSetArrayOutput) ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput {
	return o
}

func (o GetIpSetsSetArrayOutput) ToGetIpSetsSetArrayOutputWithContext(ctx context.Context) GetIpSetsSetArrayOutput {
	return o
}

func (o GetIpSetsSetArrayOutput) Index(i pulumi.IntInput) GetIpSetsSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSetsSet {
		return vs[0].([]GetIpSetsSet)[vs[1].(int)]
	}).(GetIpSetsSetOutput)
}

type GetListenersListener struct {
	// The certificates of the listener.
	Certificates []GetListenersListenerCertificate `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity string `pulumi:"clientAffinity"`
	// The description of the listener.
	Description string `pulumi:"description"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name string `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges []GetListenersListenerPortRange `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol string `pulumi:"protocol"`
	// The status of the listener.
	Status string `pulumi:"status"`
}

// GetListenersListenerInput is an input type that accepts GetListenersListenerArgs and GetListenersListenerOutput values.
// You can construct a concrete instance of `GetListenersListenerInput` via:
//
//          GetListenersListenerArgs{...}
type GetListenersListenerInput interface {
	pulumi.Input

	ToGetListenersListenerOutput() GetListenersListenerOutput
	ToGetListenersListenerOutputWithContext(context.Context) GetListenersListenerOutput
}

type GetListenersListenerArgs struct {
	// The certificates of the listener.
	Certificates GetListenersListenerCertificateArrayInput `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity pulumi.StringInput `pulumi:"clientAffinity"`
	// The description of the listener.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name pulumi.StringInput `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges GetListenersListenerPortRangeArrayInput `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The status of the listener.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return i.ToGetListenersListenerOutputWithContext(context.Background())
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerOutput)
}

// GetListenersListenerArrayInput is an input type that accepts GetListenersListenerArray and GetListenersListenerArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerArrayInput` via:
//
//          GetListenersListenerArray{ GetListenersListenerArgs{...} }
type GetListenersListenerArrayInput interface {
	pulumi.Input

	ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput
	ToGetListenersListenerArrayOutputWithContext(context.Context) GetListenersListenerArrayOutput
}

type GetListenersListenerArray []GetListenersListenerInput

func (GetListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return i.ToGetListenersListenerArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerArrayOutput)
}

type GetListenersListenerOutput struct{ *pulumi.OutputState }

func (GetListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return o
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return o
}

// The certificates of the listener.
func (o GetListenersListenerOutput) Certificates() GetListenersListenerCertificateArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerCertificate { return v.Certificates }).(GetListenersListenerCertificateArrayOutput)
}

// The clientAffinity of the listener.
func (o GetListenersListenerOutput) ClientAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ClientAffinity }).(pulumi.StringOutput)
}

// The description of the listener.
func (o GetListenersListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o GetListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The listenerId of the listener.
func (o GetListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
func (o GetListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

// The portRanges of the listener.
func (o GetListenersListenerOutput) PortRanges() GetListenersListenerPortRangeArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerPortRange { return v.PortRanges }).(GetListenersListenerPortRangeArrayOutput)
}

// Type of network transport protocol monitored.
func (o GetListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// The status of the listener.
func (o GetListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

type GetListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) Index(i pulumi.IntInput) GetListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListener {
		return vs[0].([]GetListenersListener)[vs[1].(int)]
	}).(GetListenersListenerOutput)
}

type GetListenersListenerCertificate struct {
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The type of the certificate.
	Type string `pulumi:"type"`
}

// GetListenersListenerCertificateInput is an input type that accepts GetListenersListenerCertificateArgs and GetListenersListenerCertificateOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateInput` via:
//
//          GetListenersListenerCertificateArgs{...}
type GetListenersListenerCertificateInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput
	ToGetListenersListenerCertificateOutputWithContext(context.Context) GetListenersListenerCertificateOutput
}

type GetListenersListenerCertificateArgs struct {
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the certificate.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListenersListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return i.ToGetListenersListenerCertificateOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateOutput)
}

// GetListenersListenerCertificateArrayInput is an input type that accepts GetListenersListenerCertificateArray and GetListenersListenerCertificateArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateArrayInput` via:
//
//          GetListenersListenerCertificateArray{ GetListenersListenerCertificateArgs{...} }
type GetListenersListenerCertificateArrayInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput
	ToGetListenersListenerCertificateArrayOutputWithContext(context.Context) GetListenersListenerCertificateArrayOutput
}

type GetListenersListenerCertificateArray []GetListenersListenerCertificateInput

func (GetListenersListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return i.ToGetListenersListenerCertificateArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateArrayOutput)
}

type GetListenersListenerCertificateOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return o
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return o
}

// The ID of the Listener.
func (o GetListenersListenerCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the certificate.
func (o GetListenersListenerCertificateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenersListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) Index(i pulumi.IntInput) GetListenersListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerCertificate {
		return vs[0].([]GetListenersListenerCertificate)[vs[1].(int)]
	}).(GetListenersListenerCertificateOutput)
}

type GetListenersListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// GetListenersListenerPortRangeInput is an input type that accepts GetListenersListenerPortRangeArgs and GetListenersListenerPortRangeOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeInput` via:
//
//          GetListenersListenerPortRangeArgs{...}
type GetListenersListenerPortRangeInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput
	ToGetListenersListenerPortRangeOutputWithContext(context.Context) GetListenersListenerPortRangeOutput
}

type GetListenersListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (GetListenersListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return i.ToGetListenersListenerPortRangeOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeOutput)
}

// GetListenersListenerPortRangeArrayInput is an input type that accepts GetListenersListenerPortRangeArray and GetListenersListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeArrayInput` via:
//
//          GetListenersListenerPortRangeArray{ GetListenersListenerPortRangeArgs{...} }
type GetListenersListenerPortRangeArrayInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput
	ToGetListenersListenerPortRangeArrayOutputWithContext(context.Context) GetListenersListenerPortRangeArrayOutput
}

type GetListenersListenerPortRangeArray []GetListenersListenerPortRangeInput

func (GetListenersListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return i.ToGetListenersListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeArrayOutput)
}

type GetListenersListenerPortRangeOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return o
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type GetListenersListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) Index(i pulumi.IntInput) GetListenersListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerPortRange {
		return vs[0].([]GetListenersListenerPortRange)[vs[1].(int)]
	}).(GetListenersListenerPortRangeOutput)
}

func init() {
	pulumi.RegisterOutputType(EndpointGroupEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(EndpointGroupEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EndpointGroupPortOverridesOutput{})
	pulumi.RegisterOutputType(EndpointGroupPortOverridesPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionHostConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionHostConfigArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionPathConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionPathConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerCertificateOutput{})
	pulumi.RegisterOutputType(ListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupPortOverrideOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupPortOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIpSetsSetOutput{})
	pulumi.RegisterOutputType(GetIpSetsSetArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerOutput{})
	pulumi.RegisterOutputType(GetListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeArrayOutput{})
}
