// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AclAclEntry struct {
	// The IP entry that you want to add to the ACL.
	Entry *string `pulumi:"entry"`
	// The description of the IP entry. The description must be `1` to `256` characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.),and underscores (_).
	EntryDescription *string `pulumi:"entryDescription"`
}

// AclAclEntryInput is an input type that accepts AclAclEntryArgs and AclAclEntryOutput values.
// You can construct a concrete instance of `AclAclEntryInput` via:
//
//	AclAclEntryArgs{...}
type AclAclEntryInput interface {
	pulumi.Input

	ToAclAclEntryOutput() AclAclEntryOutput
	ToAclAclEntryOutputWithContext(context.Context) AclAclEntryOutput
}

type AclAclEntryArgs struct {
	// The IP entry that you want to add to the ACL.
	Entry pulumi.StringPtrInput `pulumi:"entry"`
	// The description of the IP entry. The description must be `1` to `256` characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.),and underscores (_).
	EntryDescription pulumi.StringPtrInput `pulumi:"entryDescription"`
}

func (AclAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArgs) ToAclAclEntryOutput() AclAclEntryOutput {
	return i.ToAclAclEntryOutputWithContext(context.Background())
}

func (i AclAclEntryArgs) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryOutput)
}

// AclAclEntryArrayInput is an input type that accepts AclAclEntryArray and AclAclEntryArrayOutput values.
// You can construct a concrete instance of `AclAclEntryArrayInput` via:
//
//	AclAclEntryArray{ AclAclEntryArgs{...} }
type AclAclEntryArrayInput interface {
	pulumi.Input

	ToAclAclEntryArrayOutput() AclAclEntryArrayOutput
	ToAclAclEntryArrayOutputWithContext(context.Context) AclAclEntryArrayOutput
}

type AclAclEntryArray []AclAclEntryInput

func (AclAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return i.ToAclAclEntryArrayOutputWithContext(context.Background())
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryArrayOutput)
}

type AclAclEntryOutput struct{ *pulumi.OutputState }

func (AclAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryOutput) ToAclAclEntryOutput() AclAclEntryOutput {
	return o
}

func (o AclAclEntryOutput) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return o
}

// The IP entry that you want to add to the ACL.
func (o AclAclEntryOutput) Entry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclEntry) *string { return v.Entry }).(pulumi.StringPtrOutput)
}

// The description of the IP entry. The description must be `1` to `256` characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.),and underscores (_).
func (o AclAclEntryOutput) EntryDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclEntry) *string { return v.EntryDescription }).(pulumi.StringPtrOutput)
}

type AclAclEntryArrayOutput struct{ *pulumi.OutputState }

func (AclAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) Index(i pulumi.IntInput) AclAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclAclEntry {
		return vs[0].([]AclAclEntry)[vs[1].(int)]
	}).(AclAclEntryOutput)
}

type CustomRoutingEndpointTrafficPolicyPortRange struct {
	// The start port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
	FromPort *int `pulumi:"fromPort"`
	// The end port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
	ToPort *int `pulumi:"toPort"`
}

// CustomRoutingEndpointTrafficPolicyPortRangeInput is an input type that accepts CustomRoutingEndpointTrafficPolicyPortRangeArgs and CustomRoutingEndpointTrafficPolicyPortRangeOutput values.
// You can construct a concrete instance of `CustomRoutingEndpointTrafficPolicyPortRangeInput` via:
//
//	CustomRoutingEndpointTrafficPolicyPortRangeArgs{...}
type CustomRoutingEndpointTrafficPolicyPortRangeInput interface {
	pulumi.Input

	ToCustomRoutingEndpointTrafficPolicyPortRangeOutput() CustomRoutingEndpointTrafficPolicyPortRangeOutput
	ToCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(context.Context) CustomRoutingEndpointTrafficPolicyPortRangeOutput
}

type CustomRoutingEndpointTrafficPolicyPortRangeArgs struct {
	// The start port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// The end port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (CustomRoutingEndpointTrafficPolicyPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (i CustomRoutingEndpointTrafficPolicyPortRangeArgs) ToCustomRoutingEndpointTrafficPolicyPortRangeOutput() CustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return i.ToCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(context.Background())
}

func (i CustomRoutingEndpointTrafficPolicyPortRangeArgs) ToCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(ctx context.Context) CustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingEndpointTrafficPolicyPortRangeOutput)
}

// CustomRoutingEndpointTrafficPolicyPortRangeArrayInput is an input type that accepts CustomRoutingEndpointTrafficPolicyPortRangeArray and CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput values.
// You can construct a concrete instance of `CustomRoutingEndpointTrafficPolicyPortRangeArrayInput` via:
//
//	CustomRoutingEndpointTrafficPolicyPortRangeArray{ CustomRoutingEndpointTrafficPolicyPortRangeArgs{...} }
type CustomRoutingEndpointTrafficPolicyPortRangeArrayInput interface {
	pulumi.Input

	ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput
	ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(context.Context) CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput
}

type CustomRoutingEndpointTrafficPolicyPortRangeArray []CustomRoutingEndpointTrafficPolicyPortRangeInput

func (CustomRoutingEndpointTrafficPolicyPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (i CustomRoutingEndpointTrafficPolicyPortRangeArray) ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return i.ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(context.Background())
}

func (i CustomRoutingEndpointTrafficPolicyPortRangeArray) ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(ctx context.Context) CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput)
}

type CustomRoutingEndpointTrafficPolicyPortRangeOutput struct{ *pulumi.OutputState }

func (CustomRoutingEndpointTrafficPolicyPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (o CustomRoutingEndpointTrafficPolicyPortRangeOutput) ToCustomRoutingEndpointTrafficPolicyPortRangeOutput() CustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return o
}

func (o CustomRoutingEndpointTrafficPolicyPortRangeOutput) ToCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(ctx context.Context) CustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return o
}

// The start port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
func (o CustomRoutingEndpointTrafficPolicyPortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRoutingEndpointTrafficPolicyPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// The end port of the port range of the traffic destination. The specified port must fall within the port range of the specified endpoint group.
func (o CustomRoutingEndpointTrafficPolicyPortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRoutingEndpointTrafficPolicyPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput struct{ *pulumi.OutputState }

func (CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (o CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return o
}

func (o CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ToCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(ctx context.Context) CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return o
}

func (o CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) Index(i pulumi.IntInput) CustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRoutingEndpointTrafficPolicyPortRange {
		return vs[0].([]CustomRoutingEndpointTrafficPolicyPortRange)[vs[1].(int)]
	}).(CustomRoutingEndpointTrafficPolicyPortRangeOutput)
}

type EndpointGroupEndpointConfiguration struct {
	// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
	EnableClientipPreservation *bool `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint string `pulumi:"endpoint"`
	// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
	Type string `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
	Weight int `pulumi:"weight"`
}

// EndpointGroupEndpointConfigurationInput is an input type that accepts EndpointGroupEndpointConfigurationArgs and EndpointGroupEndpointConfigurationOutput values.
// You can construct a concrete instance of `EndpointGroupEndpointConfigurationInput` via:
//
//	EndpointGroupEndpointConfigurationArgs{...}
type EndpointGroupEndpointConfigurationInput interface {
	pulumi.Input

	ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput
	ToEndpointGroupEndpointConfigurationOutputWithContext(context.Context) EndpointGroupEndpointConfigurationOutput
}

type EndpointGroupEndpointConfigurationArgs struct {
	// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
	EnableClientipPreservation pulumi.BoolPtrInput `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (EndpointGroupEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (i EndpointGroupEndpointConfigurationArgs) ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput {
	return i.ToEndpointGroupEndpointConfigurationOutputWithContext(context.Background())
}

func (i EndpointGroupEndpointConfigurationArgs) ToEndpointGroupEndpointConfigurationOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupEndpointConfigurationOutput)
}

// EndpointGroupEndpointConfigurationArrayInput is an input type that accepts EndpointGroupEndpointConfigurationArray and EndpointGroupEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `EndpointGroupEndpointConfigurationArrayInput` via:
//
//	EndpointGroupEndpointConfigurationArray{ EndpointGroupEndpointConfigurationArgs{...} }
type EndpointGroupEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput
	ToEndpointGroupEndpointConfigurationArrayOutputWithContext(context.Context) EndpointGroupEndpointConfigurationArrayOutput
}

type EndpointGroupEndpointConfigurationArray []EndpointGroupEndpointConfigurationInput

func (EndpointGroupEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (i EndpointGroupEndpointConfigurationArray) ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput {
	return i.ToEndpointGroupEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i EndpointGroupEndpointConfigurationArray) ToEndpointGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupEndpointConfigurationArrayOutput)
}

type EndpointGroupEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointGroupEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (o EndpointGroupEndpointConfigurationOutput) ToEndpointGroupEndpointConfigurationOutput() EndpointGroupEndpointConfigurationOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationOutput) ToEndpointGroupEndpointConfigurationOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationOutput {
	return o
}

// Indicates whether client IP addresses are reserved. Valid values: `true`: Client IP addresses are reserved, `false`: Client IP addresses are not reserved. Default value is `false`.
func (o EndpointGroupEndpointConfigurationOutput) EnableClientipPreservation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) *bool { return v.EnableClientipPreservation }).(pulumi.BoolPtrOutput)
}

// The IP address or domain name of Endpoint N in the endpoint group.
func (o EndpointGroupEndpointConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The type of Endpoint N in the endpoint group. Valid values: `Domain`: a custom domain name, `Ip`: a custom IP address, `PublicIp`: an Alibaba Cloud public IP address, `ECS`: an Alibaba Cloud Elastic Compute Service (ECS) instance, `SLB`: an Alibaba Cloud Server Load Balancer (SLB) instance.
func (o EndpointGroupEndpointConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of Endpoint N in the endpoint group. Valid value is 0 to 255.
func (o EndpointGroupEndpointConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointGroupEndpointConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type EndpointGroupEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EndpointGroupEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGroupEndpointConfiguration)(nil)).Elem()
}

func (o EndpointGroupEndpointConfigurationArrayOutput) ToEndpointGroupEndpointConfigurationArrayOutput() EndpointGroupEndpointConfigurationArrayOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationArrayOutput) ToEndpointGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointGroupEndpointConfigurationArrayOutput {
	return o
}

func (o EndpointGroupEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) EndpointGroupEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointGroupEndpointConfiguration {
		return vs[0].([]EndpointGroupEndpointConfiguration)[vs[1].(int)]
	}).(EndpointGroupEndpointConfigurationOutput)
}

type EndpointGroupPortOverrides struct {
	// Forwarding port.
	EndpointPort *int `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort *int `pulumi:"listenerPort"`
}

// EndpointGroupPortOverridesInput is an input type that accepts EndpointGroupPortOverridesArgs and EndpointGroupPortOverridesOutput values.
// You can construct a concrete instance of `EndpointGroupPortOverridesInput` via:
//
//	EndpointGroupPortOverridesArgs{...}
type EndpointGroupPortOverridesInput interface {
	pulumi.Input

	ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput
	ToEndpointGroupPortOverridesOutputWithContext(context.Context) EndpointGroupPortOverridesOutput
}

type EndpointGroupPortOverridesArgs struct {
	// Forwarding port.
	EndpointPort pulumi.IntPtrInput `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort pulumi.IntPtrInput `pulumi:"listenerPort"`
}

func (EndpointGroupPortOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupPortOverrides)(nil)).Elem()
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput {
	return i.ToEndpointGroupPortOverridesOutputWithContext(context.Background())
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesOutputWithContext(ctx context.Context) EndpointGroupPortOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesOutput)
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return i.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (i EndpointGroupPortOverridesArgs) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesOutput).ToEndpointGroupPortOverridesPtrOutputWithContext(ctx)
}

// EndpointGroupPortOverridesPtrInput is an input type that accepts EndpointGroupPortOverridesArgs, EndpointGroupPortOverridesPtr and EndpointGroupPortOverridesPtrOutput values.
// You can construct a concrete instance of `EndpointGroupPortOverridesPtrInput` via:
//
//	        EndpointGroupPortOverridesArgs{...}
//
//	or:
//
//	        nil
type EndpointGroupPortOverridesPtrInput interface {
	pulumi.Input

	ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput
	ToEndpointGroupPortOverridesPtrOutputWithContext(context.Context) EndpointGroupPortOverridesPtrOutput
}

type endpointGroupPortOverridesPtrType EndpointGroupPortOverridesArgs

func EndpointGroupPortOverridesPtr(v *EndpointGroupPortOverridesArgs) EndpointGroupPortOverridesPtrInput {
	return (*endpointGroupPortOverridesPtrType)(v)
}

func (*endpointGroupPortOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointGroupPortOverrides)(nil)).Elem()
}

func (i *endpointGroupPortOverridesPtrType) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return i.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (i *endpointGroupPortOverridesPtrType) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGroupPortOverridesPtrOutput)
}

type EndpointGroupPortOverridesOutput struct{ *pulumi.OutputState }

func (EndpointGroupPortOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupPortOverrides)(nil)).Elem()
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesOutput() EndpointGroupPortOverridesOutput {
	return o
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesOutputWithContext(ctx context.Context) EndpointGroupPortOverridesOutput {
	return o
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return o.ToEndpointGroupPortOverridesPtrOutputWithContext(context.Background())
}

func (o EndpointGroupPortOverridesOutput) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointGroupPortOverrides) *EndpointGroupPortOverrides {
		return &v
	}).(EndpointGroupPortOverridesPtrOutput)
}

// Forwarding port.
func (o EndpointGroupPortOverridesOutput) EndpointPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointGroupPortOverrides) *int { return v.EndpointPort }).(pulumi.IntPtrOutput)
}

// Listener port.
func (o EndpointGroupPortOverridesOutput) ListenerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointGroupPortOverrides) *int { return v.ListenerPort }).(pulumi.IntPtrOutput)
}

type EndpointGroupPortOverridesPtrOutput struct{ *pulumi.OutputState }

func (EndpointGroupPortOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointGroupPortOverrides)(nil)).Elem()
}

func (o EndpointGroupPortOverridesPtrOutput) ToEndpointGroupPortOverridesPtrOutput() EndpointGroupPortOverridesPtrOutput {
	return o
}

func (o EndpointGroupPortOverridesPtrOutput) ToEndpointGroupPortOverridesPtrOutputWithContext(ctx context.Context) EndpointGroupPortOverridesPtrOutput {
	return o
}

func (o EndpointGroupPortOverridesPtrOutput) Elem() EndpointGroupPortOverridesOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) EndpointGroupPortOverrides {
		if v != nil {
			return *v
		}
		var ret EndpointGroupPortOverrides
		return ret
	}).(EndpointGroupPortOverridesOutput)
}

// Forwarding port.
func (o EndpointGroupPortOverridesPtrOutput) EndpointPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) *int {
		if v == nil {
			return nil
		}
		return v.EndpointPort
	}).(pulumi.IntPtrOutput)
}

// Listener port.
func (o EndpointGroupPortOverridesPtrOutput) ListenerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointGroupPortOverrides) *int {
		if v == nil {
			return nil
		}
		return v.ListenerPort
	}).(pulumi.IntPtrOutput)
}

type ForwardingRuleRuleAction struct {
	// Forwarding configuration.
	ForwardGroupConfig ForwardingRuleRuleActionForwardGroupConfig `pulumi:"forwardGroupConfig"`
	// Forwarding priority.
	Order int `pulumi:"order"`
	// Forward action type. Default: forwardgroup.
	RuleActionType string `pulumi:"ruleActionType"`
}

// ForwardingRuleRuleActionInput is an input type that accepts ForwardingRuleRuleActionArgs and ForwardingRuleRuleActionOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionInput` via:
//
//	ForwardingRuleRuleActionArgs{...}
type ForwardingRuleRuleActionInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput
	ToForwardingRuleRuleActionOutputWithContext(context.Context) ForwardingRuleRuleActionOutput
}

type ForwardingRuleRuleActionArgs struct {
	// Forwarding configuration.
	ForwardGroupConfig ForwardingRuleRuleActionForwardGroupConfigInput `pulumi:"forwardGroupConfig"`
	// Forwarding priority.
	Order pulumi.IntInput `pulumi:"order"`
	// Forward action type. Default: forwardgroup.
	RuleActionType pulumi.StringInput `pulumi:"ruleActionType"`
}

func (ForwardingRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleAction)(nil)).Elem()
}

func (i ForwardingRuleRuleActionArgs) ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput {
	return i.ToForwardingRuleRuleActionOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionArgs) ToForwardingRuleRuleActionOutputWithContext(ctx context.Context) ForwardingRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionOutput)
}

// ForwardingRuleRuleActionArrayInput is an input type that accepts ForwardingRuleRuleActionArray and ForwardingRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionArrayInput` via:
//
//	ForwardingRuleRuleActionArray{ ForwardingRuleRuleActionArgs{...} }
type ForwardingRuleRuleActionArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput
	ToForwardingRuleRuleActionArrayOutputWithContext(context.Context) ForwardingRuleRuleActionArrayOutput
}

type ForwardingRuleRuleActionArray []ForwardingRuleRuleActionInput

func (ForwardingRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleAction)(nil)).Elem()
}

func (i ForwardingRuleRuleActionArray) ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput {
	return i.ToForwardingRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionArray) ToForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionArrayOutput)
}

type ForwardingRuleRuleActionOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleAction)(nil)).Elem()
}

func (o ForwardingRuleRuleActionOutput) ToForwardingRuleRuleActionOutput() ForwardingRuleRuleActionOutput {
	return o
}

func (o ForwardingRuleRuleActionOutput) ToForwardingRuleRuleActionOutputWithContext(ctx context.Context) ForwardingRuleRuleActionOutput {
	return o
}

// Forwarding configuration.
func (o ForwardingRuleRuleActionOutput) ForwardGroupConfig() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) ForwardingRuleRuleActionForwardGroupConfig {
		return v.ForwardGroupConfig
	}).(ForwardingRuleRuleActionForwardGroupConfigOutput)
}

// Forwarding priority.
func (o ForwardingRuleRuleActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) int { return v.Order }).(pulumi.IntOutput)
}

// Forward action type. Default: forwardgroup.
func (o ForwardingRuleRuleActionOutput) RuleActionType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleAction) string { return v.RuleActionType }).(pulumi.StringOutput)
}

type ForwardingRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleAction)(nil)).Elem()
}

func (o ForwardingRuleRuleActionArrayOutput) ToForwardingRuleRuleActionArrayOutput() ForwardingRuleRuleActionArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionArrayOutput) ToForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleAction {
		return vs[0].([]ForwardingRuleRuleAction)[vs[1].(int)]
	}).(ForwardingRuleRuleActionOutput)
}

type ForwardingRuleRuleActionForwardGroupConfig struct {
	// Terminal node group configuration.
	ServerGroupTuples []ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple `pulumi:"serverGroupTuples"`
}

// ForwardingRuleRuleActionForwardGroupConfigInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigArgs and ForwardingRuleRuleActionForwardGroupConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigInput` via:
//
//	ForwardingRuleRuleActionForwardGroupConfigArgs{...}
type ForwardingRuleRuleActionForwardGroupConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput
	ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput
}

type ForwardingRuleRuleActionForwardGroupConfigArgs struct {
	// Terminal node group configuration.
	ServerGroupTuples ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput `pulumi:"serverGroupTuples"`
}

func (ForwardingRuleRuleActionForwardGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigArgs) ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigArgs) ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ToForwardingRuleRuleActionForwardGroupConfigOutput() ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ToForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

// Terminal node group configuration.
func (o ForwardingRuleRuleActionForwardGroupConfigOutput) ServerGroupTuples() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleActionForwardGroupConfig) []ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return v.ServerGroupTuples
	}).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple struct {
	// Terminal node group ID.
	EndpointGroupId string `pulumi:"endpointGroupId"`
}

// ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs and ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput` via:
//
//	ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...}
type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs struct {
	// Terminal node group ID.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
}

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

// ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput is an input type that accepts ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray and ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput` via:
//
//	ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{ ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...} }
type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
	ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray []ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return i.ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

// Terminal node group ID.
func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

type ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return vs[0].([]ForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)[vs[1].(int)]
	}).(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

type ForwardingRuleRuleCondition struct {
	// Domain name configuration information.
	HostConfigs []ForwardingRuleRuleConditionHostConfig `pulumi:"hostConfigs"`
	// Path configuration information.
	PathConfig *ForwardingRuleRuleConditionPathConfig `pulumi:"pathConfig"`
	// Forwarding condition type. Valid value: `Host`, `Path`.
	RuleConditionType string `pulumi:"ruleConditionType"`
}

// ForwardingRuleRuleConditionInput is an input type that accepts ForwardingRuleRuleConditionArgs and ForwardingRuleRuleConditionOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionInput` via:
//
//	ForwardingRuleRuleConditionArgs{...}
type ForwardingRuleRuleConditionInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput
	ToForwardingRuleRuleConditionOutputWithContext(context.Context) ForwardingRuleRuleConditionOutput
}

type ForwardingRuleRuleConditionArgs struct {
	// Domain name configuration information.
	HostConfigs ForwardingRuleRuleConditionHostConfigArrayInput `pulumi:"hostConfigs"`
	// Path configuration information.
	PathConfig ForwardingRuleRuleConditionPathConfigPtrInput `pulumi:"pathConfig"`
	// Forwarding condition type. Valid value: `Host`, `Path`.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
}

func (ForwardingRuleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleCondition)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionArgs) ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput {
	return i.ToForwardingRuleRuleConditionOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionArgs) ToForwardingRuleRuleConditionOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionOutput)
}

// ForwardingRuleRuleConditionArrayInput is an input type that accepts ForwardingRuleRuleConditionArray and ForwardingRuleRuleConditionArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionArrayInput` via:
//
//	ForwardingRuleRuleConditionArray{ ForwardingRuleRuleConditionArgs{...} }
type ForwardingRuleRuleConditionArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput
	ToForwardingRuleRuleConditionArrayOutputWithContext(context.Context) ForwardingRuleRuleConditionArrayOutput
}

type ForwardingRuleRuleConditionArray []ForwardingRuleRuleConditionInput

func (ForwardingRuleRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleCondition)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionArray) ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput {
	return i.ToForwardingRuleRuleConditionArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionArray) ToForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionArrayOutput)
}

type ForwardingRuleRuleConditionOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleCondition)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionOutput) ToForwardingRuleRuleConditionOutput() ForwardingRuleRuleConditionOutput {
	return o
}

func (o ForwardingRuleRuleConditionOutput) ToForwardingRuleRuleConditionOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionOutput {
	return o
}

// Domain name configuration information.
func (o ForwardingRuleRuleConditionOutput) HostConfigs() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) []ForwardingRuleRuleConditionHostConfig { return v.HostConfigs }).(ForwardingRuleRuleConditionHostConfigArrayOutput)
}

// Path configuration information.
func (o ForwardingRuleRuleConditionOutput) PathConfig() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) *ForwardingRuleRuleConditionPathConfig { return v.PathConfig }).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

// Forwarding condition type. Valid value: `Host`, `Path`.
func (o ForwardingRuleRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

type ForwardingRuleRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleCondition)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionArrayOutput) ToForwardingRuleRuleConditionArrayOutput() ForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionArrayOutput) ToForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleCondition {
		return vs[0].([]ForwardingRuleRuleCondition)[vs[1].(int)]
	}).(ForwardingRuleRuleConditionOutput)
}

type ForwardingRuleRuleConditionHostConfig struct {
	// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
	Values []string `pulumi:"values"`
}

// ForwardingRuleRuleConditionHostConfigInput is an input type that accepts ForwardingRuleRuleConditionHostConfigArgs and ForwardingRuleRuleConditionHostConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionHostConfigInput` via:
//
//	ForwardingRuleRuleConditionHostConfigArgs{...}
type ForwardingRuleRuleConditionHostConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput
	ToForwardingRuleRuleConditionHostConfigOutputWithContext(context.Context) ForwardingRuleRuleConditionHostConfigOutput
}

type ForwardingRuleRuleConditionHostConfigArgs struct {
	// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ForwardingRuleRuleConditionHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionHostConfigArgs) ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput {
	return i.ToForwardingRuleRuleConditionHostConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionHostConfigArgs) ToForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionHostConfigOutput)
}

// ForwardingRuleRuleConditionHostConfigArrayInput is an input type that accepts ForwardingRuleRuleConditionHostConfigArray and ForwardingRuleRuleConditionHostConfigArrayOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionHostConfigArrayInput` via:
//
//	ForwardingRuleRuleConditionHostConfigArray{ ForwardingRuleRuleConditionHostConfigArgs{...} }
type ForwardingRuleRuleConditionHostConfigArrayInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput
	ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput
}

type ForwardingRuleRuleConditionHostConfigArray []ForwardingRuleRuleConditionHostConfigInput

func (ForwardingRuleRuleConditionHostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionHostConfigArray) ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return i.ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionHostConfigArray) ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionHostConfigArrayOutput)
}

type ForwardingRuleRuleConditionHostConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionHostConfigOutput) ToForwardingRuleRuleConditionHostConfigOutput() ForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigOutput) ToForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigOutput {
	return o
}

// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
func (o ForwardingRuleRuleConditionHostConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleConditionHostConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ForwardingRuleRuleConditionHostConfigArrayOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionHostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) ToForwardingRuleRuleConditionHostConfigArrayOutput() ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) ToForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o ForwardingRuleRuleConditionHostConfigArrayOutput) Index(i pulumi.IntInput) ForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ForwardingRuleRuleConditionHostConfig {
		return vs[0].([]ForwardingRuleRuleConditionHostConfig)[vs[1].(int)]
	}).(ForwardingRuleRuleConditionHostConfigOutput)
}

type ForwardingRuleRuleConditionPathConfig struct {
	// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
	Values []string `pulumi:"values"`
}

// ForwardingRuleRuleConditionPathConfigInput is an input type that accepts ForwardingRuleRuleConditionPathConfigArgs and ForwardingRuleRuleConditionPathConfigOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionPathConfigInput` via:
//
//	ForwardingRuleRuleConditionPathConfigArgs{...}
type ForwardingRuleRuleConditionPathConfigInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput
	ToForwardingRuleRuleConditionPathConfigOutputWithContext(context.Context) ForwardingRuleRuleConditionPathConfigOutput
}

type ForwardingRuleRuleConditionPathConfigArgs struct {
	// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ForwardingRuleRuleConditionPathConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput {
	return i.ToForwardingRuleRuleConditionPathConfigOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigOutput)
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return i.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (i ForwardingRuleRuleConditionPathConfigArgs) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigOutput).ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx)
}

// ForwardingRuleRuleConditionPathConfigPtrInput is an input type that accepts ForwardingRuleRuleConditionPathConfigArgs, ForwardingRuleRuleConditionPathConfigPtr and ForwardingRuleRuleConditionPathConfigPtrOutput values.
// You can construct a concrete instance of `ForwardingRuleRuleConditionPathConfigPtrInput` via:
//
//	        ForwardingRuleRuleConditionPathConfigArgs{...}
//
//	or:
//
//	        nil
type ForwardingRuleRuleConditionPathConfigPtrInput interface {
	pulumi.Input

	ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput
	ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput
}

type forwardingRuleRuleConditionPathConfigPtrType ForwardingRuleRuleConditionPathConfigArgs

func ForwardingRuleRuleConditionPathConfigPtr(v *ForwardingRuleRuleConditionPathConfigArgs) ForwardingRuleRuleConditionPathConfigPtrInput {
	return (*forwardingRuleRuleConditionPathConfigPtrType)(v)
}

func (*forwardingRuleRuleConditionPathConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i *forwardingRuleRuleConditionPathConfigPtrType) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return i.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (i *forwardingRuleRuleConditionPathConfigPtrType) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

type ForwardingRuleRuleConditionPathConfigOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionPathConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigOutput() ForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleRuleConditionPathConfigOutput) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleRuleConditionPathConfig) *ForwardingRuleRuleConditionPathConfig {
		return &v
	}).(ForwardingRuleRuleConditionPathConfigPtrOutput)
}

// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
func (o ForwardingRuleRuleConditionPathConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ForwardingRuleRuleConditionPathConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ForwardingRuleRuleConditionPathConfigPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleRuleConditionPathConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) ToForwardingRuleRuleConditionPathConfigPtrOutput() ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) ToForwardingRuleRuleConditionPathConfigPtrOutputWithContext(ctx context.Context) ForwardingRuleRuleConditionPathConfigPtrOutput {
	return o
}

func (o ForwardingRuleRuleConditionPathConfigPtrOutput) Elem() ForwardingRuleRuleConditionPathConfigOutput {
	return o.ApplyT(func(v *ForwardingRuleRuleConditionPathConfig) ForwardingRuleRuleConditionPathConfig {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleRuleConditionPathConfig
		return ret
	}).(ForwardingRuleRuleConditionPathConfigOutput)
}

// The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.
func (o ForwardingRuleRuleConditionPathConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ForwardingRuleRuleConditionPathConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerCertificate struct {
	// The id of the certificate.
	Id *string `pulumi:"id"`
}

// ListenerCertificateInput is an input type that accepts ListenerCertificateArgs and ListenerCertificateOutput values.
// You can construct a concrete instance of `ListenerCertificateInput` via:
//
//	ListenerCertificateArgs{...}
type ListenerCertificateInput interface {
	pulumi.Input

	ToListenerCertificateOutput() ListenerCertificateOutput
	ToListenerCertificateOutputWithContext(context.Context) ListenerCertificateOutput
}

type ListenerCertificateArgs struct {
	// The id of the certificate.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArgs) ToListenerCertificateOutput() ListenerCertificateOutput {
	return i.ToListenerCertificateOutputWithContext(context.Background())
}

func (i ListenerCertificateArgs) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateOutput)
}

// ListenerCertificateArrayInput is an input type that accepts ListenerCertificateArray and ListenerCertificateArrayOutput values.
// You can construct a concrete instance of `ListenerCertificateArrayInput` via:
//
//	ListenerCertificateArray{ ListenerCertificateArgs{...} }
type ListenerCertificateArrayInput interface {
	pulumi.Input

	ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput
	ToListenerCertificateArrayOutputWithContext(context.Context) ListenerCertificateArrayOutput
}

type ListenerCertificateArray []ListenerCertificateInput

func (ListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return i.ToListenerCertificateArrayOutputWithContext(context.Background())
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateArrayOutput)
}

type ListenerCertificateOutput struct{ *pulumi.OutputState }

func (ListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateOutput) ToListenerCertificateOutput() ListenerCertificateOutput {
	return o
}

func (o ListenerCertificateOutput) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return o
}

// The id of the certificate.
func (o ListenerCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (ListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) Index(i pulumi.IntInput) ListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerCertificate {
		return vs[0].([]ListenerCertificate)[vs[1].(int)]
	}).(ListenerCertificateOutput)
}

type ListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// ListenerPortRangeInput is an input type that accepts ListenerPortRangeArgs and ListenerPortRangeOutput values.
// You can construct a concrete instance of `ListenerPortRangeInput` via:
//
//	ListenerPortRangeArgs{...}
type ListenerPortRangeInput interface {
	pulumi.Input

	ToListenerPortRangeOutput() ListenerPortRangeOutput
	ToListenerPortRangeOutputWithContext(context.Context) ListenerPortRangeOutput
}

type ListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (ListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return i.ToListenerPortRangeOutputWithContext(context.Background())
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeOutput)
}

// ListenerPortRangeArrayInput is an input type that accepts ListenerPortRangeArray and ListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `ListenerPortRangeArrayInput` via:
//
//	ListenerPortRangeArray{ ListenerPortRangeArgs{...} }
type ListenerPortRangeArrayInput interface {
	pulumi.Input

	ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput
	ToListenerPortRangeArrayOutputWithContext(context.Context) ListenerPortRangeArrayOutput
}

type ListenerPortRangeArray []ListenerPortRangeInput

func (ListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return i.ToListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeArrayOutput)
}

type ListenerPortRangeOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return o
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type ListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) Index(i pulumi.IntInput) ListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerPortRange {
		return vs[0].([]ListenerPortRange)[vs[1].(int)]
	}).(ListenerPortRangeOutput)
}

type GetAcceleratorSpareIpAttachmentsAttachment struct {
	// The ID of the global acceleration instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The ID of the Accelerator Spare Ip Attachment.
	Id string `pulumi:"id"`
	// The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
	SpareIp string `pulumi:"spareIp"`
	// The status of the standby CNAME IP address. Valid values: `active`, `inuse`.
	Status string `pulumi:"status"`
}

// GetAcceleratorSpareIpAttachmentsAttachmentInput is an input type that accepts GetAcceleratorSpareIpAttachmentsAttachmentArgs and GetAcceleratorSpareIpAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetAcceleratorSpareIpAttachmentsAttachmentInput` via:
//
//	GetAcceleratorSpareIpAttachmentsAttachmentArgs{...}
type GetAcceleratorSpareIpAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetAcceleratorSpareIpAttachmentsAttachmentOutput() GetAcceleratorSpareIpAttachmentsAttachmentOutput
	ToGetAcceleratorSpareIpAttachmentsAttachmentOutputWithContext(context.Context) GetAcceleratorSpareIpAttachmentsAttachmentOutput
}

type GetAcceleratorSpareIpAttachmentsAttachmentArgs struct {
	// The ID of the global acceleration instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The ID of the Accelerator Spare Ip Attachment.
	Id pulumi.StringInput `pulumi:"id"`
	// The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
	SpareIp pulumi.StringInput `pulumi:"spareIp"`
	// The status of the standby CNAME IP address. Valid values: `active`, `inuse`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAcceleratorSpareIpAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsAttachment)(nil)).Elem()
}

func (i GetAcceleratorSpareIpAttachmentsAttachmentArgs) ToGetAcceleratorSpareIpAttachmentsAttachmentOutput() GetAcceleratorSpareIpAttachmentsAttachmentOutput {
	return i.ToGetAcceleratorSpareIpAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetAcceleratorSpareIpAttachmentsAttachmentArgs) ToGetAcceleratorSpareIpAttachmentsAttachmentOutputWithContext(ctx context.Context) GetAcceleratorSpareIpAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorSpareIpAttachmentsAttachmentOutput)
}

// GetAcceleratorSpareIpAttachmentsAttachmentArrayInput is an input type that accepts GetAcceleratorSpareIpAttachmentsAttachmentArray and GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorSpareIpAttachmentsAttachmentArrayInput` via:
//
//	GetAcceleratorSpareIpAttachmentsAttachmentArray{ GetAcceleratorSpareIpAttachmentsAttachmentArgs{...} }
type GetAcceleratorSpareIpAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutput() GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput
	ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutputWithContext(context.Context) GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput
}

type GetAcceleratorSpareIpAttachmentsAttachmentArray []GetAcceleratorSpareIpAttachmentsAttachmentInput

func (GetAcceleratorSpareIpAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorSpareIpAttachmentsAttachment)(nil)).Elem()
}

func (i GetAcceleratorSpareIpAttachmentsAttachmentArray) ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutput() GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput {
	return i.ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorSpareIpAttachmentsAttachmentArray) ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput)
}

type GetAcceleratorSpareIpAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetAcceleratorSpareIpAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsAttachment)(nil)).Elem()
}

func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) ToGetAcceleratorSpareIpAttachmentsAttachmentOutput() GetAcceleratorSpareIpAttachmentsAttachmentOutput {
	return o
}

func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) ToGetAcceleratorSpareIpAttachmentsAttachmentOutputWithContext(ctx context.Context) GetAcceleratorSpareIpAttachmentsAttachmentOutput {
	return o
}

// The ID of the global acceleration instance.
func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsAttachment) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The ID of the Accelerator Spare Ip Attachment.
func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The standby IP address of CNAME. When the acceleration area is abnormal, the traffic is switched to the standby IP address.
func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) SpareIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsAttachment) string { return v.SpareIp }).(pulumi.StringOutput)
}

// The status of the standby CNAME IP address. Valid values: `active`, `inuse`.
func (o GetAcceleratorSpareIpAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

type GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorSpareIpAttachmentsAttachment)(nil)).Elem()
}

func (o GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput) ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutput() GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput) ToGetAcceleratorSpareIpAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetAcceleratorSpareIpAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorSpareIpAttachmentsAttachment {
		return vs[0].([]GetAcceleratorSpareIpAttachmentsAttachment)[vs[1].(int)]
	}).(GetAcceleratorSpareIpAttachmentsAttachmentOutput)
}

type GetAcceleratorsAccelerator struct {
	// The ID of the GA instance to query.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName string `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages []GetAcceleratorsAcceleratorBasicBandwidthPackage `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId string `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId string `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description string `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName string `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime int `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id string `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType string `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName string `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec string `pulumi:"spec"`
	// The status of the GA instance.
	Status string `pulumi:"status"`
}

// GetAcceleratorsAcceleratorInput is an input type that accepts GetAcceleratorsAcceleratorArgs and GetAcceleratorsAcceleratorOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorInput` via:
//
//	GetAcceleratorsAcceleratorArgs{...}
type GetAcceleratorsAcceleratorInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput
	ToGetAcceleratorsAcceleratorOutputWithContext(context.Context) GetAcceleratorsAcceleratorOutput
}

type GetAcceleratorsAcceleratorArgs struct {
	// The ID of the GA instance to query.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName pulumi.StringInput `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId pulumi.StringInput `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description pulumi.StringInput `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id pulumi.StringInput `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName pulumi.StringInput `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the GA instance.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAcceleratorsAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return i.ToGetAcceleratorsAcceleratorOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorOutput)
}

// GetAcceleratorsAcceleratorArrayInput is an input type that accepts GetAcceleratorsAcceleratorArray and GetAcceleratorsAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorArrayInput` via:
//
//	GetAcceleratorsAcceleratorArray{ GetAcceleratorsAcceleratorArgs{...} }
type GetAcceleratorsAcceleratorArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput
	ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorArrayOutput
}

type GetAcceleratorsAcceleratorArray []GetAcceleratorsAcceleratorInput

func (GetAcceleratorsAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return i.ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorArrayOutput)
}

type GetAcceleratorsAcceleratorOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return o
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return o
}

// The ID of the GA instance to query.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The Name of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorName }).(pulumi.StringOutput)
}

// Details of the basic bandwidth package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) BasicBandwidthPackages() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return v.BasicBandwidthPackages
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

// The cloud enterprise network instance ID bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.CenId }).(pulumi.StringOutput)
}

// Details of the cross-domain acceleration package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CrossDomainBandwidthPackages() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return v.CrossDomainBandwidthPackages
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

// DDoS high-defense instance ID that is unbound from the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DdosId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DdosId }).(pulumi.StringOutput)
}

// Descriptive information of the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Description }).(pulumi.StringOutput)
}

// CNAME address assigned by Global Acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DnsName }).(pulumi.StringOutput)
}

// Time when the global acceleration instance expires.
func (o GetAcceleratorsAcceleratorOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// The ID of the Accelerator.
func (o GetAcceleratorsAcceleratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Id }).(pulumi.StringOutput)
}

// The Payment Typethe GA instance.
func (o GetAcceleratorsAcceleratorOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.PaymentType }).(pulumi.StringOutput)
}

// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
func (o GetAcceleratorsAcceleratorOutput) SecondDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.SecondDnsName }).(pulumi.StringOutput)
}

// The instance type of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Status }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAccelerator {
		return vs[0].([]GetAcceleratorsAccelerator)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType string `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArgs and GetAcceleratorsAcceleratorBasicBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageInput` via:
//
//	GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorBasicBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArray and GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput` via:
//
//	GetAcceleratorsAcceleratorBasicBandwidthPackageArray{ GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArray []GetAcceleratorsAcceleratorBasicBandwidthPackageInput

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The bandwidth type of the basic bandwidth package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorBasicBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput` via:
//
//	GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput` via:
//
//	GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{ GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray []GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

type GetAclsAcl struct {
	// The entries of the Acl.
	AclEntries []GetAclsAclAclEntry `pulumi:"aclEntries"`
	// The  ID of the Acl.
	AclId string `pulumi:"aclId"`
	// The name of the acl.
	AclName string `pulumi:"aclName"`
	// The address ip version.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The ID of the Acl. Its value is same as `aclId`.
	Id string `pulumi:"id"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetAclsAclInput is an input type that accepts GetAclsAclArgs and GetAclsAclOutput values.
// You can construct a concrete instance of `GetAclsAclInput` via:
//
//	GetAclsAclArgs{...}
type GetAclsAclInput interface {
	pulumi.Input

	ToGetAclsAclOutput() GetAclsAclOutput
	ToGetAclsAclOutputWithContext(context.Context) GetAclsAclOutput
}

type GetAclsAclArgs struct {
	// The entries of the Acl.
	AclEntries GetAclsAclAclEntryArrayInput `pulumi:"aclEntries"`
	// The  ID of the Acl.
	AclId pulumi.StringInput `pulumi:"aclId"`
	// The name of the acl.
	AclName pulumi.StringInput `pulumi:"aclName"`
	// The address ip version.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The ID of the Acl. Its value is same as `aclId`.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArgs) ToGetAclsAclOutput() GetAclsAclOutput {
	return i.ToGetAclsAclOutputWithContext(context.Background())
}

func (i GetAclsAclArgs) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclOutput)
}

// GetAclsAclArrayInput is an input type that accepts GetAclsAclArray and GetAclsAclArrayOutput values.
// You can construct a concrete instance of `GetAclsAclArrayInput` via:
//
//	GetAclsAclArray{ GetAclsAclArgs{...} }
type GetAclsAclArrayInput interface {
	pulumi.Input

	ToGetAclsAclArrayOutput() GetAclsAclArrayOutput
	ToGetAclsAclArrayOutputWithContext(context.Context) GetAclsAclArrayOutput
}

type GetAclsAclArray []GetAclsAclInput

func (GetAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return i.ToGetAclsAclArrayOutputWithContext(context.Background())
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclArrayOutput)
}

type GetAclsAclOutput struct{ *pulumi.OutputState }

func (GetAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclOutput) ToGetAclsAclOutput() GetAclsAclOutput {
	return o
}

func (o GetAclsAclOutput) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return o
}

// The entries of the Acl.
func (o GetAclsAclOutput) AclEntries() GetAclsAclAclEntryArrayOutput {
	return o.ApplyT(func(v GetAclsAcl) []GetAclsAclAclEntry { return v.AclEntries }).(GetAclsAclAclEntryArrayOutput)
}

// The  ID of the Acl.
func (o GetAclsAclOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.AclId }).(pulumi.StringOutput)
}

// The name of the acl.
func (o GetAclsAclOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.AclName }).(pulumi.StringOutput)
}

// The address ip version.
func (o GetAclsAclOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The ID of the Acl. Its value is same as `aclId`.
func (o GetAclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetAclsAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Status }).(pulumi.StringOutput)
}

type GetAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) Index(i pulumi.IntInput) GetAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAcl {
		return vs[0].([]GetAclsAcl)[vs[1].(int)]
	}).(GetAclsAclOutput)
}

type GetAclsAclAclEntry struct {
	// The IP entry that you want to add to the ACL.
	Entry string `pulumi:"entry"`
	// The description of the IP entry.
	EntryDescription string `pulumi:"entryDescription"`
}

// GetAclsAclAclEntryInput is an input type that accepts GetAclsAclAclEntryArgs and GetAclsAclAclEntryOutput values.
// You can construct a concrete instance of `GetAclsAclAclEntryInput` via:
//
//	GetAclsAclAclEntryArgs{...}
type GetAclsAclAclEntryInput interface {
	pulumi.Input

	ToGetAclsAclAclEntryOutput() GetAclsAclAclEntryOutput
	ToGetAclsAclAclEntryOutputWithContext(context.Context) GetAclsAclAclEntryOutput
}

type GetAclsAclAclEntryArgs struct {
	// The IP entry that you want to add to the ACL.
	Entry pulumi.StringInput `pulumi:"entry"`
	// The description of the IP entry.
	EntryDescription pulumi.StringInput `pulumi:"entryDescription"`
}

func (GetAclsAclAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclAclEntry)(nil)).Elem()
}

func (i GetAclsAclAclEntryArgs) ToGetAclsAclAclEntryOutput() GetAclsAclAclEntryOutput {
	return i.ToGetAclsAclAclEntryOutputWithContext(context.Background())
}

func (i GetAclsAclAclEntryArgs) ToGetAclsAclAclEntryOutputWithContext(ctx context.Context) GetAclsAclAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclAclEntryOutput)
}

// GetAclsAclAclEntryArrayInput is an input type that accepts GetAclsAclAclEntryArray and GetAclsAclAclEntryArrayOutput values.
// You can construct a concrete instance of `GetAclsAclAclEntryArrayInput` via:
//
//	GetAclsAclAclEntryArray{ GetAclsAclAclEntryArgs{...} }
type GetAclsAclAclEntryArrayInput interface {
	pulumi.Input

	ToGetAclsAclAclEntryArrayOutput() GetAclsAclAclEntryArrayOutput
	ToGetAclsAclAclEntryArrayOutputWithContext(context.Context) GetAclsAclAclEntryArrayOutput
}

type GetAclsAclAclEntryArray []GetAclsAclAclEntryInput

func (GetAclsAclAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclAclEntry)(nil)).Elem()
}

func (i GetAclsAclAclEntryArray) ToGetAclsAclAclEntryArrayOutput() GetAclsAclAclEntryArrayOutput {
	return i.ToGetAclsAclAclEntryArrayOutputWithContext(context.Background())
}

func (i GetAclsAclAclEntryArray) ToGetAclsAclAclEntryArrayOutputWithContext(ctx context.Context) GetAclsAclAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclAclEntryArrayOutput)
}

type GetAclsAclAclEntryOutput struct{ *pulumi.OutputState }

func (GetAclsAclAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclAclEntry)(nil)).Elem()
}

func (o GetAclsAclAclEntryOutput) ToGetAclsAclAclEntryOutput() GetAclsAclAclEntryOutput {
	return o
}

func (o GetAclsAclAclEntryOutput) ToGetAclsAclAclEntryOutputWithContext(ctx context.Context) GetAclsAclAclEntryOutput {
	return o
}

// The IP entry that you want to add to the ACL.
func (o GetAclsAclAclEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclAclEntry) string { return v.Entry }).(pulumi.StringOutput)
}

// The description of the IP entry.
func (o GetAclsAclAclEntryOutput) EntryDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclAclEntry) string { return v.EntryDescription }).(pulumi.StringOutput)
}

type GetAclsAclAclEntryArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclAclEntry)(nil)).Elem()
}

func (o GetAclsAclAclEntryArrayOutput) ToGetAclsAclAclEntryArrayOutput() GetAclsAclAclEntryArrayOutput {
	return o
}

func (o GetAclsAclAclEntryArrayOutput) ToGetAclsAclAclEntryArrayOutputWithContext(ctx context.Context) GetAclsAclAclEntryArrayOutput {
	return o
}

func (o GetAclsAclAclEntryArrayOutput) Index(i pulumi.IntInput) GetAclsAclAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclAclEntry {
		return vs[0].([]GetAclsAclAclEntry)[vs[1].(int)]
	}).(GetAclsAclAclEntryOutput)
}

type GetAdditionalCertificatesCertificate struct {
	// The ID of the GA instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The Certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// The domain name specified by the certificate.
	Domain string `pulumi:"domain"`
	// The ID of the Additional Certificate. The value formats as `<accelerator_id>:<listener_id>:<domain>`.
	Id string `pulumi:"id"`
	// The ID of the listener. Only HTTPS listeners support this parameter.
	ListenerId string `pulumi:"listenerId"`
}

// GetAdditionalCertificatesCertificateInput is an input type that accepts GetAdditionalCertificatesCertificateArgs and GetAdditionalCertificatesCertificateOutput values.
// You can construct a concrete instance of `GetAdditionalCertificatesCertificateInput` via:
//
//	GetAdditionalCertificatesCertificateArgs{...}
type GetAdditionalCertificatesCertificateInput interface {
	pulumi.Input

	ToGetAdditionalCertificatesCertificateOutput() GetAdditionalCertificatesCertificateOutput
	ToGetAdditionalCertificatesCertificateOutputWithContext(context.Context) GetAdditionalCertificatesCertificateOutput
}

type GetAdditionalCertificatesCertificateArgs struct {
	// The ID of the GA instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The Certificate ID.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The domain name specified by the certificate.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The ID of the Additional Certificate. The value formats as `<accelerator_id>:<listener_id>:<domain>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the listener. Only HTTPS listeners support this parameter.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
}

func (GetAdditionalCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdditionalCertificatesCertificate)(nil)).Elem()
}

func (i GetAdditionalCertificatesCertificateArgs) ToGetAdditionalCertificatesCertificateOutput() GetAdditionalCertificatesCertificateOutput {
	return i.ToGetAdditionalCertificatesCertificateOutputWithContext(context.Background())
}

func (i GetAdditionalCertificatesCertificateArgs) ToGetAdditionalCertificatesCertificateOutputWithContext(ctx context.Context) GetAdditionalCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdditionalCertificatesCertificateOutput)
}

// GetAdditionalCertificatesCertificateArrayInput is an input type that accepts GetAdditionalCertificatesCertificateArray and GetAdditionalCertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `GetAdditionalCertificatesCertificateArrayInput` via:
//
//	GetAdditionalCertificatesCertificateArray{ GetAdditionalCertificatesCertificateArgs{...} }
type GetAdditionalCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToGetAdditionalCertificatesCertificateArrayOutput() GetAdditionalCertificatesCertificateArrayOutput
	ToGetAdditionalCertificatesCertificateArrayOutputWithContext(context.Context) GetAdditionalCertificatesCertificateArrayOutput
}

type GetAdditionalCertificatesCertificateArray []GetAdditionalCertificatesCertificateInput

func (GetAdditionalCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdditionalCertificatesCertificate)(nil)).Elem()
}

func (i GetAdditionalCertificatesCertificateArray) ToGetAdditionalCertificatesCertificateArrayOutput() GetAdditionalCertificatesCertificateArrayOutput {
	return i.ToGetAdditionalCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i GetAdditionalCertificatesCertificateArray) ToGetAdditionalCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetAdditionalCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdditionalCertificatesCertificateArrayOutput)
}

type GetAdditionalCertificatesCertificateOutput struct{ *pulumi.OutputState }

func (GetAdditionalCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdditionalCertificatesCertificate)(nil)).Elem()
}

func (o GetAdditionalCertificatesCertificateOutput) ToGetAdditionalCertificatesCertificateOutput() GetAdditionalCertificatesCertificateOutput {
	return o
}

func (o GetAdditionalCertificatesCertificateOutput) ToGetAdditionalCertificatesCertificateOutputWithContext(ctx context.Context) GetAdditionalCertificatesCertificateOutput {
	return o
}

// The ID of the GA instance.
func (o GetAdditionalCertificatesCertificateOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdditionalCertificatesCertificate) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The Certificate ID.
func (o GetAdditionalCertificatesCertificateOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdditionalCertificatesCertificate) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The domain name specified by the certificate.
func (o GetAdditionalCertificatesCertificateOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdditionalCertificatesCertificate) string { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the Additional Certificate. The value formats as `<accelerator_id>:<listener_id>:<domain>`.
func (o GetAdditionalCertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdditionalCertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener. Only HTTPS listeners support this parameter.
func (o GetAdditionalCertificatesCertificateOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdditionalCertificatesCertificate) string { return v.ListenerId }).(pulumi.StringOutput)
}

type GetAdditionalCertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetAdditionalCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdditionalCertificatesCertificate)(nil)).Elem()
}

func (o GetAdditionalCertificatesCertificateArrayOutput) ToGetAdditionalCertificatesCertificateArrayOutput() GetAdditionalCertificatesCertificateArrayOutput {
	return o
}

func (o GetAdditionalCertificatesCertificateArrayOutput) ToGetAdditionalCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetAdditionalCertificatesCertificateArrayOutput {
	return o
}

func (o GetAdditionalCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) GetAdditionalCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdditionalCertificatesCertificate {
		return vs[0].([]GetAdditionalCertificatesCertificate)[vs[1].(int)]
	}).(GetAdditionalCertificatesCertificateOutput)
}

type GetBandwidthPackagesPackage struct {
	// The bandwidth value of bandwidth packet.
	Bandwidth int `pulumi:"bandwidth"`
	// The Resource ID of the bandwidth.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The name of the bandwidth packet.
	BandwidthPackageName string `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth.
	BandwidthType string `pulumi:"bandwidthType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIda string `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIdb string `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description string `pulumi:"description"`
	// Bandwidth package expiration time.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Bandwidth Package.
	Id string `pulumi:"id"`
	// The payment type of the bandwidth.
	PaymentType string `pulumi:"paymentType"`
	// The status of the bandwidth plan.
	Status string `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic.
	Type string `pulumi:"type"`
}

// GetBandwidthPackagesPackageInput is an input type that accepts GetBandwidthPackagesPackageArgs and GetBandwidthPackagesPackageOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageInput` via:
//
//	GetBandwidthPackagesPackageArgs{...}
type GetBandwidthPackagesPackageInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput
	ToGetBandwidthPackagesPackageOutputWithContext(context.Context) GetBandwidthPackagesPackageOutput
}

type GetBandwidthPackagesPackageArgs struct {
	// The bandwidth value of bandwidth packet.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The Resource ID of the bandwidth.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The name of the bandwidth packet.
	BandwidthPackageName pulumi.StringInput `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIda pulumi.StringInput `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
	CbnGeographicRegionIdb pulumi.StringInput `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description pulumi.StringInput `pulumi:"description"`
	// Bandwidth package expiration time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Bandwidth Package.
	Id pulumi.StringInput `pulumi:"id"`
	// The payment type of the bandwidth.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The status of the bandwidth plan.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBandwidthPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return i.ToGetBandwidthPackagesPackageOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArgs) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageOutput)
}

// GetBandwidthPackagesPackageArrayInput is an input type that accepts GetBandwidthPackagesPackageArray and GetBandwidthPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetBandwidthPackagesPackageArrayInput` via:
//
//	GetBandwidthPackagesPackageArray{ GetBandwidthPackagesPackageArgs{...} }
type GetBandwidthPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput
	ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Context) GetBandwidthPackagesPackageArrayOutput
}

type GetBandwidthPackagesPackageArray []GetBandwidthPackagesPackageInput

func (GetBandwidthPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return i.ToGetBandwidthPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetBandwidthPackagesPackageArray) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBandwidthPackagesPackageArrayOutput)
}

type GetBandwidthPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutput() GetBandwidthPackagesPackageOutput {
	return o
}

func (o GetBandwidthPackagesPackageOutput) ToGetBandwidthPackagesPackageOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageOutput {
	return o
}

// The bandwidth value of bandwidth packet.
func (o GetBandwidthPackagesPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The Resource ID of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the bandwidth packet.
func (o GetBandwidthPackagesPackageOutput) BandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthPackageName }).(pulumi.StringOutput)
}

// The bandwidth type of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter.
func (o GetBandwidthPackagesPackageOutput) CbnGeographicRegionIda() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CbnGeographicRegionIda }).(pulumi.StringOutput)
}

// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter.
func (o GetBandwidthPackagesPackageOutput) CbnGeographicRegionIdb() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.CbnGeographicRegionIdb }).(pulumi.StringOutput)
}

// The description of bandwidth package.
func (o GetBandwidthPackagesPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Description }).(pulumi.StringOutput)
}

// Bandwidth package expiration time.
func (o GetBandwidthPackagesPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Bandwidth Package.
func (o GetBandwidthPackagesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The payment type of the bandwidth.
func (o GetBandwidthPackagesPackageOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The status of the bandwidth plan.
func (o GetBandwidthPackagesPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the bandwidth packet. China station only supports return to basic.
func (o GetBandwidthPackagesPackageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesPackage) string { return v.Type }).(pulumi.StringOutput)
}

type GetBandwidthPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBandwidthPackagesPackage)(nil)).Elem()
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutput() GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) ToGetBandwidthPackagesPackageArrayOutputWithContext(ctx context.Context) GetBandwidthPackagesPackageArrayOutput {
	return o
}

func (o GetBandwidthPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetBandwidthPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBandwidthPackagesPackage {
		return vs[0].([]GetBandwidthPackagesPackage)[vs[1].(int)]
	}).(GetBandwidthPackagesPackageOutput)
}

type GetBasicAccelerateIpEndpointRelationsRelation struct {
	// The ID of the Basic Accelerate IP.
	AccelerateIpId string `pulumi:"accelerateIpId"`
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The name of the Basic Endpoint.
	BasicEndpointName string `pulumi:"basicEndpointName"`
	// The address of the Basic Endpoint.
	EndpointAddress string `pulumi:"endpointAddress"`
	// The ID of the Basic Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The sub address of the Basic Endpoint.
	EndpointSubAddress string `pulumi:"endpointSubAddress"`
	// The sub address type of the Basic Endpoint.
	EndpointSubAddressType string `pulumi:"endpointSubAddressType"`
	// The type of the Basic Endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The zone id of the Basic Endpoint.
	EndpointZoneId string `pulumi:"endpointZoneId"`
	// The id of the Global Accelerator Basic Accelerate Ip Endpoint Relation. It formats as `<accelerator_id>:<accelerate_ip_id>:<endpoint_id>`.
	Id string `pulumi:"id"`
	// The address of the Basic Accelerate IP.
	IpAddress string `pulumi:"ipAddress"`
	// The status of the Global Accelerator Basic Accelerate Ip Endpoint Relation. Valid Value: `active`.
	Status string `pulumi:"status"`
}

// GetBasicAccelerateIpEndpointRelationsRelationInput is an input type that accepts GetBasicAccelerateIpEndpointRelationsRelationArgs and GetBasicAccelerateIpEndpointRelationsRelationOutput values.
// You can construct a concrete instance of `GetBasicAccelerateIpEndpointRelationsRelationInput` via:
//
//	GetBasicAccelerateIpEndpointRelationsRelationArgs{...}
type GetBasicAccelerateIpEndpointRelationsRelationInput interface {
	pulumi.Input

	ToGetBasicAccelerateIpEndpointRelationsRelationOutput() GetBasicAccelerateIpEndpointRelationsRelationOutput
	ToGetBasicAccelerateIpEndpointRelationsRelationOutputWithContext(context.Context) GetBasicAccelerateIpEndpointRelationsRelationOutput
}

type GetBasicAccelerateIpEndpointRelationsRelationArgs struct {
	// The ID of the Basic Accelerate IP.
	AccelerateIpId pulumi.StringInput `pulumi:"accelerateIpId"`
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The name of the Basic Endpoint.
	BasicEndpointName pulumi.StringInput `pulumi:"basicEndpointName"`
	// The address of the Basic Endpoint.
	EndpointAddress pulumi.StringInput `pulumi:"endpointAddress"`
	// The ID of the Basic Endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The sub address of the Basic Endpoint.
	EndpointSubAddress pulumi.StringInput `pulumi:"endpointSubAddress"`
	// The sub address type of the Basic Endpoint.
	EndpointSubAddressType pulumi.StringInput `pulumi:"endpointSubAddressType"`
	// The type of the Basic Endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The zone id of the Basic Endpoint.
	EndpointZoneId pulumi.StringInput `pulumi:"endpointZoneId"`
	// The id of the Global Accelerator Basic Accelerate Ip Endpoint Relation. It formats as `<accelerator_id>:<accelerate_ip_id>:<endpoint_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The address of the Basic Accelerate IP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The status of the Global Accelerator Basic Accelerate Ip Endpoint Relation. Valid Value: `active`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBasicAccelerateIpEndpointRelationsRelationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAccelerateIpEndpointRelationsRelation)(nil)).Elem()
}

func (i GetBasicAccelerateIpEndpointRelationsRelationArgs) ToGetBasicAccelerateIpEndpointRelationsRelationOutput() GetBasicAccelerateIpEndpointRelationsRelationOutput {
	return i.ToGetBasicAccelerateIpEndpointRelationsRelationOutputWithContext(context.Background())
}

func (i GetBasicAccelerateIpEndpointRelationsRelationArgs) ToGetBasicAccelerateIpEndpointRelationsRelationOutputWithContext(ctx context.Context) GetBasicAccelerateIpEndpointRelationsRelationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAccelerateIpEndpointRelationsRelationOutput)
}

// GetBasicAccelerateIpEndpointRelationsRelationArrayInput is an input type that accepts GetBasicAccelerateIpEndpointRelationsRelationArray and GetBasicAccelerateIpEndpointRelationsRelationArrayOutput values.
// You can construct a concrete instance of `GetBasicAccelerateIpEndpointRelationsRelationArrayInput` via:
//
//	GetBasicAccelerateIpEndpointRelationsRelationArray{ GetBasicAccelerateIpEndpointRelationsRelationArgs{...} }
type GetBasicAccelerateIpEndpointRelationsRelationArrayInput interface {
	pulumi.Input

	ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutput() GetBasicAccelerateIpEndpointRelationsRelationArrayOutput
	ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutputWithContext(context.Context) GetBasicAccelerateIpEndpointRelationsRelationArrayOutput
}

type GetBasicAccelerateIpEndpointRelationsRelationArray []GetBasicAccelerateIpEndpointRelationsRelationInput

func (GetBasicAccelerateIpEndpointRelationsRelationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAccelerateIpEndpointRelationsRelation)(nil)).Elem()
}

func (i GetBasicAccelerateIpEndpointRelationsRelationArray) ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutput() GetBasicAccelerateIpEndpointRelationsRelationArrayOutput {
	return i.ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutputWithContext(context.Background())
}

func (i GetBasicAccelerateIpEndpointRelationsRelationArray) ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutputWithContext(ctx context.Context) GetBasicAccelerateIpEndpointRelationsRelationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAccelerateIpEndpointRelationsRelationArrayOutput)
}

type GetBasicAccelerateIpEndpointRelationsRelationOutput struct{ *pulumi.OutputState }

func (GetBasicAccelerateIpEndpointRelationsRelationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAccelerateIpEndpointRelationsRelation)(nil)).Elem()
}

func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) ToGetBasicAccelerateIpEndpointRelationsRelationOutput() GetBasicAccelerateIpEndpointRelationsRelationOutput {
	return o
}

func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) ToGetBasicAccelerateIpEndpointRelationsRelationOutputWithContext(ctx context.Context) GetBasicAccelerateIpEndpointRelationsRelationOutput {
	return o
}

// The ID of the Basic Accelerate IP.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) AccelerateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.AccelerateIpId }).(pulumi.StringOutput)
}

// The ID of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The name of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) BasicEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.BasicEndpointName }).(pulumi.StringOutput)
}

// The address of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointAddress }).(pulumi.StringOutput)
}

// The ID of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The sub address of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointSubAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointSubAddress }).(pulumi.StringOutput)
}

// The sub address type of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointSubAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointSubAddressType }).(pulumi.StringOutput)
}

// The type of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The zone id of the Basic Endpoint.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) EndpointZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.EndpointZoneId }).(pulumi.StringOutput)
}

// The id of the Global Accelerator Basic Accelerate Ip Endpoint Relation. It formats as `<accelerator_id>:<accelerate_ip_id>:<endpoint_id>`.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.Id }).(pulumi.StringOutput)
}

// The address of the Basic Accelerate IP.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The status of the Global Accelerator Basic Accelerate Ip Endpoint Relation. Valid Value: `active`.
func (o GetBasicAccelerateIpEndpointRelationsRelationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpEndpointRelationsRelation) string { return v.Status }).(pulumi.StringOutput)
}

type GetBasicAccelerateIpEndpointRelationsRelationArrayOutput struct{ *pulumi.OutputState }

func (GetBasicAccelerateIpEndpointRelationsRelationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAccelerateIpEndpointRelationsRelation)(nil)).Elem()
}

func (o GetBasicAccelerateIpEndpointRelationsRelationArrayOutput) ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutput() GetBasicAccelerateIpEndpointRelationsRelationArrayOutput {
	return o
}

func (o GetBasicAccelerateIpEndpointRelationsRelationArrayOutput) ToGetBasicAccelerateIpEndpointRelationsRelationArrayOutputWithContext(ctx context.Context) GetBasicAccelerateIpEndpointRelationsRelationArrayOutput {
	return o
}

func (o GetBasicAccelerateIpEndpointRelationsRelationArrayOutput) Index(i pulumi.IntInput) GetBasicAccelerateIpEndpointRelationsRelationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicAccelerateIpEndpointRelationsRelation {
		return vs[0].([]GetBasicAccelerateIpEndpointRelationsRelation)[vs[1].(int)]
	}).(GetBasicAccelerateIpEndpointRelationsRelationOutput)
}

type GetBasicAccelerateIpsIp struct {
	// The address of the Basic Accelerate IP.
	AccelerateIpAddress string `pulumi:"accelerateIpAddress"`
	// The id of the Basic Accelerate IP.
	AccelerateIpId string `pulumi:"accelerateIpId"`
	// The id of the Global Accelerator Basic Accelerator instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The id of the Basic Accelerate IP.
	Id string `pulumi:"id"`
	// The ID of the Basic Ip Set.
	IpSetId string `pulumi:"ipSetId"`
	// The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
	Status string `pulumi:"status"`
}

// GetBasicAccelerateIpsIpInput is an input type that accepts GetBasicAccelerateIpsIpArgs and GetBasicAccelerateIpsIpOutput values.
// You can construct a concrete instance of `GetBasicAccelerateIpsIpInput` via:
//
//	GetBasicAccelerateIpsIpArgs{...}
type GetBasicAccelerateIpsIpInput interface {
	pulumi.Input

	ToGetBasicAccelerateIpsIpOutput() GetBasicAccelerateIpsIpOutput
	ToGetBasicAccelerateIpsIpOutputWithContext(context.Context) GetBasicAccelerateIpsIpOutput
}

type GetBasicAccelerateIpsIpArgs struct {
	// The address of the Basic Accelerate IP.
	AccelerateIpAddress pulumi.StringInput `pulumi:"accelerateIpAddress"`
	// The id of the Basic Accelerate IP.
	AccelerateIpId pulumi.StringInput `pulumi:"accelerateIpId"`
	// The id of the Global Accelerator Basic Accelerator instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The id of the Basic Accelerate IP.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Basic Ip Set.
	IpSetId pulumi.StringInput `pulumi:"ipSetId"`
	// The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBasicAccelerateIpsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAccelerateIpsIp)(nil)).Elem()
}

func (i GetBasicAccelerateIpsIpArgs) ToGetBasicAccelerateIpsIpOutput() GetBasicAccelerateIpsIpOutput {
	return i.ToGetBasicAccelerateIpsIpOutputWithContext(context.Background())
}

func (i GetBasicAccelerateIpsIpArgs) ToGetBasicAccelerateIpsIpOutputWithContext(ctx context.Context) GetBasicAccelerateIpsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAccelerateIpsIpOutput)
}

// GetBasicAccelerateIpsIpArrayInput is an input type that accepts GetBasicAccelerateIpsIpArray and GetBasicAccelerateIpsIpArrayOutput values.
// You can construct a concrete instance of `GetBasicAccelerateIpsIpArrayInput` via:
//
//	GetBasicAccelerateIpsIpArray{ GetBasicAccelerateIpsIpArgs{...} }
type GetBasicAccelerateIpsIpArrayInput interface {
	pulumi.Input

	ToGetBasicAccelerateIpsIpArrayOutput() GetBasicAccelerateIpsIpArrayOutput
	ToGetBasicAccelerateIpsIpArrayOutputWithContext(context.Context) GetBasicAccelerateIpsIpArrayOutput
}

type GetBasicAccelerateIpsIpArray []GetBasicAccelerateIpsIpInput

func (GetBasicAccelerateIpsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAccelerateIpsIp)(nil)).Elem()
}

func (i GetBasicAccelerateIpsIpArray) ToGetBasicAccelerateIpsIpArrayOutput() GetBasicAccelerateIpsIpArrayOutput {
	return i.ToGetBasicAccelerateIpsIpArrayOutputWithContext(context.Background())
}

func (i GetBasicAccelerateIpsIpArray) ToGetBasicAccelerateIpsIpArrayOutputWithContext(ctx context.Context) GetBasicAccelerateIpsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAccelerateIpsIpArrayOutput)
}

type GetBasicAccelerateIpsIpOutput struct{ *pulumi.OutputState }

func (GetBasicAccelerateIpsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAccelerateIpsIp)(nil)).Elem()
}

func (o GetBasicAccelerateIpsIpOutput) ToGetBasicAccelerateIpsIpOutput() GetBasicAccelerateIpsIpOutput {
	return o
}

func (o GetBasicAccelerateIpsIpOutput) ToGetBasicAccelerateIpsIpOutputWithContext(ctx context.Context) GetBasicAccelerateIpsIpOutput {
	return o
}

// The address of the Basic Accelerate IP.
func (o GetBasicAccelerateIpsIpOutput) AccelerateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.AccelerateIpAddress }).(pulumi.StringOutput)
}

// The id of the Basic Accelerate IP.
func (o GetBasicAccelerateIpsIpOutput) AccelerateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.AccelerateIpId }).(pulumi.StringOutput)
}

// The id of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAccelerateIpsIpOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The id of the Basic Accelerate IP.
func (o GetBasicAccelerateIpsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Basic Ip Set.
func (o GetBasicAccelerateIpsIpOutput) IpSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.IpSetId }).(pulumi.StringOutput)
}

// The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
func (o GetBasicAccelerateIpsIpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAccelerateIpsIp) string { return v.Status }).(pulumi.StringOutput)
}

type GetBasicAccelerateIpsIpArrayOutput struct{ *pulumi.OutputState }

func (GetBasicAccelerateIpsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAccelerateIpsIp)(nil)).Elem()
}

func (o GetBasicAccelerateIpsIpArrayOutput) ToGetBasicAccelerateIpsIpArrayOutput() GetBasicAccelerateIpsIpArrayOutput {
	return o
}

func (o GetBasicAccelerateIpsIpArrayOutput) ToGetBasicAccelerateIpsIpArrayOutputWithContext(ctx context.Context) GetBasicAccelerateIpsIpArrayOutput {
	return o
}

func (o GetBasicAccelerateIpsIpArrayOutput) Index(i pulumi.IntInput) GetBasicAccelerateIpsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicAccelerateIpsIp {
		return vs[0].([]GetBasicAccelerateIpsIp)[vs[1].(int)]
	}).(GetBasicAccelerateIpsIpOutput)
}

type GetBasicAcceleratorsAccelerator struct {
	// The bandwidth billing method.
	BandwidthBillingType string `pulumi:"bandwidthBillingType"`
	// The id of the Global Accelerator Basic Accelerator instance.
	BasicAcceleratorId string `pulumi:"basicAcceleratorId"`
	// The name of the Global Accelerator Basic Accelerator instance.
	BasicAcceleratorName string `pulumi:"basicAcceleratorName"`
	// The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
	BasicBandwidthPackages []GetBasicAcceleratorsAcceleratorBasicBandwidthPackage `pulumi:"basicBandwidthPackages"`
	// The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
	BasicEndpointGroupId string `pulumi:"basicEndpointGroupId"`
	// The ID of the acceleration region.
	BasicIpSetId string `pulumi:"basicIpSetId"`
	// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
	CreateTime int `pulumi:"createTime"`
	// The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
	CrossDomainBandwidthPackages []GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage `pulumi:"crossDomainBandwidthPackages"`
	// The description of the Global Accelerator Basic Accelerator instance.
	Description string `pulumi:"description"`
	// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
	ExpiredTime int `pulumi:"expiredTime"`
	// The id of the Global Accelerator Basic Accelerator.
	Id string `pulumi:"id"`
	// The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
	InstanceChargeType string `pulumi:"instanceChargeType"`
	// The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
	RegionId string `pulumi:"regionId"`
	// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
	Status string `pulumi:"status"`
}

// GetBasicAcceleratorsAcceleratorInput is an input type that accepts GetBasicAcceleratorsAcceleratorArgs and GetBasicAcceleratorsAcceleratorOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorInput` via:
//
//	GetBasicAcceleratorsAcceleratorArgs{...}
type GetBasicAcceleratorsAcceleratorInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorOutput() GetBasicAcceleratorsAcceleratorOutput
	ToGetBasicAcceleratorsAcceleratorOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorOutput
}

type GetBasicAcceleratorsAcceleratorArgs struct {
	// The bandwidth billing method.
	BandwidthBillingType pulumi.StringInput `pulumi:"bandwidthBillingType"`
	// The id of the Global Accelerator Basic Accelerator instance.
	BasicAcceleratorId pulumi.StringInput `pulumi:"basicAcceleratorId"`
	// The name of the Global Accelerator Basic Accelerator instance.
	BasicAcceleratorName pulumi.StringInput `pulumi:"basicAcceleratorName"`
	// The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
	BasicBandwidthPackages GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayInput `pulumi:"basicBandwidthPackages"`
	// The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
	BasicEndpointGroupId pulumi.StringInput `pulumi:"basicEndpointGroupId"`
	// The ID of the acceleration region.
	BasicIpSetId pulumi.StringInput `pulumi:"basicIpSetId"`
	// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
	CrossDomainBandwidthPackages GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput `pulumi:"crossDomainBandwidthPackages"`
	// The description of the Global Accelerator Basic Accelerator instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// The id of the Global Accelerator Basic Accelerator.
	Id pulumi.StringInput `pulumi:"id"`
	// The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
	InstanceChargeType pulumi.StringInput `pulumi:"instanceChargeType"`
	// The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBasicAcceleratorsAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorArgs) ToGetBasicAcceleratorsAcceleratorOutput() GetBasicAcceleratorsAcceleratorOutput {
	return i.ToGetBasicAcceleratorsAcceleratorOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorArgs) ToGetBasicAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorOutput)
}

// GetBasicAcceleratorsAcceleratorArrayInput is an input type that accepts GetBasicAcceleratorsAcceleratorArray and GetBasicAcceleratorsAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorArrayInput` via:
//
//	GetBasicAcceleratorsAcceleratorArray{ GetBasicAcceleratorsAcceleratorArgs{...} }
type GetBasicAcceleratorsAcceleratorArrayInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorArrayOutput() GetBasicAcceleratorsAcceleratorArrayOutput
	ToGetBasicAcceleratorsAcceleratorArrayOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorArrayOutput
}

type GetBasicAcceleratorsAcceleratorArray []GetBasicAcceleratorsAcceleratorInput

func (GetBasicAcceleratorsAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorArray) ToGetBasicAcceleratorsAcceleratorArrayOutput() GetBasicAcceleratorsAcceleratorArrayOutput {
	return i.ToGetBasicAcceleratorsAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorArray) ToGetBasicAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorArrayOutput)
}

type GetBasicAcceleratorsAcceleratorOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorOutput) ToGetBasicAcceleratorsAcceleratorOutput() GetBasicAcceleratorsAcceleratorOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorOutput) ToGetBasicAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorOutput {
	return o
}

// The bandwidth billing method.
func (o GetBasicAcceleratorsAcceleratorOutput) BandwidthBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.BandwidthBillingType }).(pulumi.StringOutput)
}

// The id of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsAcceleratorOutput) BasicAcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.BasicAcceleratorId }).(pulumi.StringOutput)
}

// The name of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsAcceleratorOutput) BasicAcceleratorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.BasicAcceleratorName }).(pulumi.StringOutput)
}

// The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsAcceleratorOutput) BasicBandwidthPackages() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) []GetBasicAcceleratorsAcceleratorBasicBandwidthPackage {
		return v.BasicBandwidthPackages
	}).(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

// The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsAcceleratorOutput) BasicEndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.BasicEndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the acceleration region.
func (o GetBasicAcceleratorsAcceleratorOutput) BasicIpSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.BasicIpSetId }).(pulumi.StringOutput)
}

// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
func (o GetBasicAcceleratorsAcceleratorOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
func (o GetBasicAcceleratorsAcceleratorOutput) CrossDomainBandwidthPackages() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) []GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return v.CrossDomainBandwidthPackages
	}).(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

// The description of the Global Accelerator Basic Accelerator instance.
func (o GetBasicAcceleratorsAcceleratorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.Description }).(pulumi.StringOutput)
}

// The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
func (o GetBasicAcceleratorsAcceleratorOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// The id of the Global Accelerator Basic Accelerator.
func (o GetBasicAcceleratorsAcceleratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.Id }).(pulumi.StringOutput)
}

// The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
func (o GetBasicAcceleratorsAcceleratorOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
func (o GetBasicAcceleratorsAcceleratorOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.RegionId }).(pulumi.StringOutput)
}

// The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
func (o GetBasicAcceleratorsAcceleratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAccelerator) string { return v.Status }).(pulumi.StringOutput)
}

type GetBasicAcceleratorsAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorArrayOutput) ToGetBasicAcceleratorsAcceleratorArrayOutput() GetBasicAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorArrayOutput) ToGetBasicAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorArrayOutput) Index(i pulumi.IntInput) GetBasicAcceleratorsAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicAcceleratorsAccelerator {
		return vs[0].([]GetBasicAcceleratorsAccelerator)[vs[1].(int)]
	}).(GetBasicAcceleratorsAcceleratorOutput)
}

type GetBasicAcceleratorsAcceleratorBasicBandwidthPackage struct {
	// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
	Bandwidth int `pulumi:"bandwidth"`
	// The type of the bandwidth that is provided by the basic bandwidth plan.
	BandwidthType string `pulumi:"bandwidthType"`
	// The ID of the cross-region acceleration bandwidth plan.
	InstanceId string `pulumi:"instanceId"`
}

// GetBasicAcceleratorsAcceleratorBasicBandwidthPackageInput is an input type that accepts GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs and GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorBasicBandwidthPackageInput` via:
//
//	GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs{...}
type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput
	ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput
}

type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs struct {
	// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The type of the bandwidth that is provided by the basic bandwidth plan.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// The ID of the cross-region acceleration bandwidth plan.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return i.ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

// GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayInput is an input type that accepts GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray and GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayInput` via:
//
//	GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray{ GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs{...} }
type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
	ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
}

type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray []GetBasicAcceleratorsAcceleratorBasicBandwidthPackageInput

func (GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return i.ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAcceleratorBasicBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The type of the bandwidth that is provided by the basic bandwidth plan.
func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// The ID of the cross-region acceleration bandwidth plan.
func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicAcceleratorsAcceleratorBasicBandwidthPackage {
		return vs[0].([]GetBasicAcceleratorsAcceleratorBasicBandwidthPackage)[vs[1].(int)]
	}).(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage struct {
	// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the cross-region acceleration bandwidth plan.
	InstanceId string `pulumi:"instanceId"`
}

// GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageInput is an input type that accepts GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs and GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageInput` via:
//
//	GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...}
type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
	ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
}

type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs struct {
	// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the cross-region acceleration bandwidth plan.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return i.ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

// GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput is an input type that accepts GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray and GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput` via:
//
//	GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{ GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...} }
type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
	ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
}

type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray []GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageInput

func (GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return i.ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

// The bandwidth value of the cross-region acceleration bandwidth plan. Unit: Mbit/s.
func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the cross-region acceleration bandwidth plan.
func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return vs[0].([]GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage)[vs[1].(int)]
	}).(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

type GetBasicEndpointsEndpoint struct {
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The name of the Basic Endpoint.
	BasicEndpointName string `pulumi:"basicEndpointName"`
	// The address of the Basic Endpoint.
	EndpointAddress string `pulumi:"endpointAddress"`
	// The ID of the Basic Endpoint Group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The ID of the Basic Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The sub address of the Basic Endpoint.
	EndpointSubAddress string `pulumi:"endpointSubAddress"`
	// The sub address type of the Basic Endpoint.
	EndpointSubAddressType string `pulumi:"endpointSubAddressType"`
	// The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
	EndpointType string `pulumi:"endpointType"`
	// The zone id of the Basic Endpoint.
	EndpointZoneId string `pulumi:"endpointZoneId"`
	// The id of the Global Accelerator Basic Endpoint. It formats as `<endpoint_group_id>:<endpoint_id>`.
	Id string `pulumi:"id"`
	// The status of the Global Accelerator Basic Endpoint. Valid Value: `init`, `active`, `updating`, `binding`, `unbinding`, `deleting`, `bound`.
	Status string `pulumi:"status"`
}

// GetBasicEndpointsEndpointInput is an input type that accepts GetBasicEndpointsEndpointArgs and GetBasicEndpointsEndpointOutput values.
// You can construct a concrete instance of `GetBasicEndpointsEndpointInput` via:
//
//	GetBasicEndpointsEndpointArgs{...}
type GetBasicEndpointsEndpointInput interface {
	pulumi.Input

	ToGetBasicEndpointsEndpointOutput() GetBasicEndpointsEndpointOutput
	ToGetBasicEndpointsEndpointOutputWithContext(context.Context) GetBasicEndpointsEndpointOutput
}

type GetBasicEndpointsEndpointArgs struct {
	// The ID of the Global Accelerator Basic Accelerator instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The name of the Basic Endpoint.
	BasicEndpointName pulumi.StringInput `pulumi:"basicEndpointName"`
	// The address of the Basic Endpoint.
	EndpointAddress pulumi.StringInput `pulumi:"endpointAddress"`
	// The ID of the Basic Endpoint Group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The ID of the Basic Endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The sub address of the Basic Endpoint.
	EndpointSubAddress pulumi.StringInput `pulumi:"endpointSubAddress"`
	// The sub address type of the Basic Endpoint.
	EndpointSubAddressType pulumi.StringInput `pulumi:"endpointSubAddressType"`
	// The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The zone id of the Basic Endpoint.
	EndpointZoneId pulumi.StringInput `pulumi:"endpointZoneId"`
	// The id of the Global Accelerator Basic Endpoint. It formats as `<endpoint_group_id>:<endpoint_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the Global Accelerator Basic Endpoint. Valid Value: `init`, `active`, `updating`, `binding`, `unbinding`, `deleting`, `bound`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBasicEndpointsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicEndpointsEndpoint)(nil)).Elem()
}

func (i GetBasicEndpointsEndpointArgs) ToGetBasicEndpointsEndpointOutput() GetBasicEndpointsEndpointOutput {
	return i.ToGetBasicEndpointsEndpointOutputWithContext(context.Background())
}

func (i GetBasicEndpointsEndpointArgs) ToGetBasicEndpointsEndpointOutputWithContext(ctx context.Context) GetBasicEndpointsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicEndpointsEndpointOutput)
}

// GetBasicEndpointsEndpointArrayInput is an input type that accepts GetBasicEndpointsEndpointArray and GetBasicEndpointsEndpointArrayOutput values.
// You can construct a concrete instance of `GetBasicEndpointsEndpointArrayInput` via:
//
//	GetBasicEndpointsEndpointArray{ GetBasicEndpointsEndpointArgs{...} }
type GetBasicEndpointsEndpointArrayInput interface {
	pulumi.Input

	ToGetBasicEndpointsEndpointArrayOutput() GetBasicEndpointsEndpointArrayOutput
	ToGetBasicEndpointsEndpointArrayOutputWithContext(context.Context) GetBasicEndpointsEndpointArrayOutput
}

type GetBasicEndpointsEndpointArray []GetBasicEndpointsEndpointInput

func (GetBasicEndpointsEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicEndpointsEndpoint)(nil)).Elem()
}

func (i GetBasicEndpointsEndpointArray) ToGetBasicEndpointsEndpointArrayOutput() GetBasicEndpointsEndpointArrayOutput {
	return i.ToGetBasicEndpointsEndpointArrayOutputWithContext(context.Background())
}

func (i GetBasicEndpointsEndpointArray) ToGetBasicEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetBasicEndpointsEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBasicEndpointsEndpointArrayOutput)
}

type GetBasicEndpointsEndpointOutput struct{ *pulumi.OutputState }

func (GetBasicEndpointsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBasicEndpointsEndpoint)(nil)).Elem()
}

func (o GetBasicEndpointsEndpointOutput) ToGetBasicEndpointsEndpointOutput() GetBasicEndpointsEndpointOutput {
	return o
}

func (o GetBasicEndpointsEndpointOutput) ToGetBasicEndpointsEndpointOutputWithContext(ctx context.Context) GetBasicEndpointsEndpointOutput {
	return o
}

// The ID of the Global Accelerator Basic Accelerator instance.
func (o GetBasicEndpointsEndpointOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The name of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) BasicEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.BasicEndpointName }).(pulumi.StringOutput)
}

// The address of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) EndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointAddress }).(pulumi.StringOutput)
}

// The ID of the Basic Endpoint Group.
func (o GetBasicEndpointsEndpointOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The sub address of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) EndpointSubAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointSubAddress }).(pulumi.StringOutput)
}

// The sub address type of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) EndpointSubAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointSubAddressType }).(pulumi.StringOutput)
}

// The type of the Basic Endpoint. Valid values: `ENI`, `SLB`, `ECS` and `NLB`.
func (o GetBasicEndpointsEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The zone id of the Basic Endpoint.
func (o GetBasicEndpointsEndpointOutput) EndpointZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.EndpointZoneId }).(pulumi.StringOutput)
}

// The id of the Global Accelerator Basic Endpoint. It formats as `<endpoint_group_id>:<endpoint_id>`.
func (o GetBasicEndpointsEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the Global Accelerator Basic Endpoint. Valid Value: `init`, `active`, `updating`, `binding`, `unbinding`, `deleting`, `bound`.
func (o GetBasicEndpointsEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBasicEndpointsEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

type GetBasicEndpointsEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetBasicEndpointsEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBasicEndpointsEndpoint)(nil)).Elem()
}

func (o GetBasicEndpointsEndpointArrayOutput) ToGetBasicEndpointsEndpointArrayOutput() GetBasicEndpointsEndpointArrayOutput {
	return o
}

func (o GetBasicEndpointsEndpointArrayOutput) ToGetBasicEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetBasicEndpointsEndpointArrayOutput {
	return o
}

func (o GetBasicEndpointsEndpointArrayOutput) Index(i pulumi.IntInput) GetBasicEndpointsEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBasicEndpointsEndpoint {
		return vs[0].([]GetBasicEndpointsEndpoint)[vs[1].(int)]
	}).(GetBasicEndpointsEndpointOutput)
}

type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination struct {
	// The ID of the GA instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint Group Destination.
	CustomRoutingEndpointGroupDestinationId string `pulumi:"customRoutingEndpointGroupDestinationId"`
	// The ID of the endpoint group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The start port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
	FromPort int `pulumi:"fromPort"`
	// The id of the Global Accelerator Custom Routing Endpoint Group Destination. It formats as `<endpoint_group_id>:<custom_routing_endpoint_group_destination_id>`.
	Id string `pulumi:"id"`
	// The ID of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The backend service protocol of the endpoint group. Valid values: `TCP`, `UDP`, `TCP, UDP`.
	Protocols []string `pulumi:"protocols"`
	// The end port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
	ToPort int `pulumi:"toPort"`
}

// GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationInput is an input type that accepts GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs and GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationInput` via:
//
//	GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs{...}
type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput
	ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutputWithContext(context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput
}

type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs struct {
	// The ID of the GA instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint Group Destination.
	CustomRoutingEndpointGroupDestinationId pulumi.StringInput `pulumi:"customRoutingEndpointGroupDestinationId"`
	// The ID of the endpoint group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The start port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The id of the Global Accelerator Custom Routing Endpoint Group Destination. It formats as `<endpoint_group_id>:<custom_routing_endpoint_group_destination_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The backend service protocol of the endpoint group. Valid values: `TCP`, `UDP`, `TCP, UDP`.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// The end port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination)(nil)).Elem()
}

func (i GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput {
	return i.ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput)
}

// GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayInput is an input type that accepts GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray and GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayInput` via:
//
//	GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray{ GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs{...} }
type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput
	ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutputWithContext(context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput
}

type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray []GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationInput

func (GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination)(nil)).Elem()
}

func (i GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput {
	return i.ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput)
}

type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination)(nil)).Elem()
}

func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput {
	return o
}

// The ID of the GA instance.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) string {
		return v.AcceleratorId
	}).(pulumi.StringOutput)
}

// The ID of the Custom Routing Endpoint Group Destination.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) CustomRoutingEndpointGroupDestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) string {
		return v.CustomRoutingEndpointGroupDestinationId
	}).(pulumi.StringOutput)
}

// The ID of the endpoint group.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) string {
		return v.EndpointGroupId
	}).(pulumi.StringOutput)
}

// The start port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) int {
		return v.FromPort
	}).(pulumi.IntOutput)
}

// The id of the Global Accelerator Custom Routing Endpoint Group Destination. It formats as `<endpoint_group_id>:<custom_routing_endpoint_group_destination_id>`.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// The ID of the listener.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) string {
		return v.ListenerId
	}).(pulumi.StringOutput)
}

// The backend service protocol of the endpoint group. Valid values: `TCP`, `UDP`, `TCP, UDP`.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) []string {
		return v.Protocols
	}).(pulumi.StringArrayOutput)
}

// The end port of the backend service port range of the endpoint group. The `fromPort` value must be smaller than or equal to the `toPort` value. Valid values: `1` to `65499`.
func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination) int {
		return v.ToPort
	}).(pulumi.IntOutput)
}

type GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination)(nil)).Elem()
}

func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput() GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput) ToGetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination {
		return vs[0].([]GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestination)[vs[1].(int)]
	}).(GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput)
}

type GetCustomRoutingEndpointGroupsGroup struct {
	// The ID of the GA instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The name of the endpoint group.
	CustomRoutingEndpointGroupName string `pulumi:"customRoutingEndpointGroupName"`
	// The description of the endpoint group.
	Description string `pulumi:"description"`
	// The ID of the endpoint group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The list of endpoint group IP addresses.
	EndpointGroupIpLists []string `pulumi:"endpointGroupIpLists"`
	// The ID of the region where the endpoint group is created.
	EndpointGroupRegion string `pulumi:"endpointGroupRegion"`
	// The endpoint group IP addresses to be confirmed after the GA instance is upgraded.
	EndpointGroupUnconfirmedIpLists []string `pulumi:"endpointGroupUnconfirmedIpLists"`
	// The id of the Custom Routing Endpoint Group.
	Id string `pulumi:"id"`
	// The ID of the custom routing listener.
	ListenerId string `pulumi:"listenerId"`
	// The status of the endpoint group. Valid Values: `init`, `active`, `updating`, `deleting`.
	Status string `pulumi:"status"`
}

// GetCustomRoutingEndpointGroupsGroupInput is an input type that accepts GetCustomRoutingEndpointGroupsGroupArgs and GetCustomRoutingEndpointGroupsGroupOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointGroupsGroupInput` via:
//
//	GetCustomRoutingEndpointGroupsGroupArgs{...}
type GetCustomRoutingEndpointGroupsGroupInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointGroupsGroupOutput() GetCustomRoutingEndpointGroupsGroupOutput
	ToGetCustomRoutingEndpointGroupsGroupOutputWithContext(context.Context) GetCustomRoutingEndpointGroupsGroupOutput
}

type GetCustomRoutingEndpointGroupsGroupArgs struct {
	// The ID of the GA instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The name of the endpoint group.
	CustomRoutingEndpointGroupName pulumi.StringInput `pulumi:"customRoutingEndpointGroupName"`
	// The description of the endpoint group.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the endpoint group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The list of endpoint group IP addresses.
	EndpointGroupIpLists pulumi.StringArrayInput `pulumi:"endpointGroupIpLists"`
	// The ID of the region where the endpoint group is created.
	EndpointGroupRegion pulumi.StringInput `pulumi:"endpointGroupRegion"`
	// The endpoint group IP addresses to be confirmed after the GA instance is upgraded.
	EndpointGroupUnconfirmedIpLists pulumi.StringArrayInput `pulumi:"endpointGroupUnconfirmedIpLists"`
	// The id of the Custom Routing Endpoint Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the custom routing listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The status of the endpoint group. Valid Values: `init`, `active`, `updating`, `deleting`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetCustomRoutingEndpointGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointGroupsGroup)(nil)).Elem()
}

func (i GetCustomRoutingEndpointGroupsGroupArgs) ToGetCustomRoutingEndpointGroupsGroupOutput() GetCustomRoutingEndpointGroupsGroupOutput {
	return i.ToGetCustomRoutingEndpointGroupsGroupOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointGroupsGroupArgs) ToGetCustomRoutingEndpointGroupsGroupOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointGroupsGroupOutput)
}

// GetCustomRoutingEndpointGroupsGroupArrayInput is an input type that accepts GetCustomRoutingEndpointGroupsGroupArray and GetCustomRoutingEndpointGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointGroupsGroupArrayInput` via:
//
//	GetCustomRoutingEndpointGroupsGroupArray{ GetCustomRoutingEndpointGroupsGroupArgs{...} }
type GetCustomRoutingEndpointGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointGroupsGroupArrayOutput() GetCustomRoutingEndpointGroupsGroupArrayOutput
	ToGetCustomRoutingEndpointGroupsGroupArrayOutputWithContext(context.Context) GetCustomRoutingEndpointGroupsGroupArrayOutput
}

type GetCustomRoutingEndpointGroupsGroupArray []GetCustomRoutingEndpointGroupsGroupInput

func (GetCustomRoutingEndpointGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointGroupsGroup)(nil)).Elem()
}

func (i GetCustomRoutingEndpointGroupsGroupArray) ToGetCustomRoutingEndpointGroupsGroupArrayOutput() GetCustomRoutingEndpointGroupsGroupArrayOutput {
	return i.ToGetCustomRoutingEndpointGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointGroupsGroupArray) ToGetCustomRoutingEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointGroupsGroupArrayOutput)
}

type GetCustomRoutingEndpointGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointGroupsGroup)(nil)).Elem()
}

func (o GetCustomRoutingEndpointGroupsGroupOutput) ToGetCustomRoutingEndpointGroupsGroupOutput() GetCustomRoutingEndpointGroupsGroupOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupsGroupOutput) ToGetCustomRoutingEndpointGroupsGroupOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupsGroupOutput {
	return o
}

// The ID of the GA instance.
func (o GetCustomRoutingEndpointGroupsGroupOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The name of the endpoint group.
func (o GetCustomRoutingEndpointGroupsGroupOutput) CustomRoutingEndpointGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.CustomRoutingEndpointGroupName }).(pulumi.StringOutput)
}

// The description of the endpoint group.
func (o GetCustomRoutingEndpointGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the endpoint group.
func (o GetCustomRoutingEndpointGroupsGroupOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The list of endpoint group IP addresses.
func (o GetCustomRoutingEndpointGroupsGroupOutput) EndpointGroupIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) []string { return v.EndpointGroupIpLists }).(pulumi.StringArrayOutput)
}

// The ID of the region where the endpoint group is created.
func (o GetCustomRoutingEndpointGroupsGroupOutput) EndpointGroupRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.EndpointGroupRegion }).(pulumi.StringOutput)
}

// The endpoint group IP addresses to be confirmed after the GA instance is upgraded.
func (o GetCustomRoutingEndpointGroupsGroupOutput) EndpointGroupUnconfirmedIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) []string { return v.EndpointGroupUnconfirmedIpLists }).(pulumi.StringArrayOutput)
}

// The id of the Custom Routing Endpoint Group.
func (o GetCustomRoutingEndpointGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the custom routing listener.
func (o GetCustomRoutingEndpointGroupsGroupOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The status of the endpoint group. Valid Values: `init`, `active`, `updating`, `deleting`.
func (o GetCustomRoutingEndpointGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

type GetCustomRoutingEndpointGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointGroupsGroup)(nil)).Elem()
}

func (o GetCustomRoutingEndpointGroupsGroupArrayOutput) ToGetCustomRoutingEndpointGroupsGroupArrayOutput() GetCustomRoutingEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupsGroupArrayOutput) ToGetCustomRoutingEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingEndpointGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingEndpointGroupsGroup {
		return vs[0].([]GetCustomRoutingEndpointGroupsGroup)[vs[1].(int)]
	}).(GetCustomRoutingEndpointGroupsGroupOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy struct {
	// The ID of the GA instance to which the traffic policies belong.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The IP addresses of the traffic policies.
	Address string `pulumi:"address"`
	// The ID of the Custom Routing Endpoint Traffic Policy.
	CustomRoutingEndpointTrafficPolicyId string `pulumi:"customRoutingEndpointTrafficPolicyId"`
	// The ID of the endpoint group to which the traffic policies belong.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The ID of the endpoint to which the traffic policies belong.
	EndpointId string `pulumi:"endpointId"`
	// The id of the Global Accelerator Custom Routing Endpoint Traffic Policy. It formats as `<endpoint_id>:<custom_routing_endpoint_traffic_policy_id>`.
	Id string `pulumi:"id"`
	// The ID of the listener to which the traffic policies belong.
	ListenerId string `pulumi:"listenerId"`
	// The port range of the traffic policy.
	PortRanges []GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange `pulumi:"portRanges"`
}

// GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyInput is an input type that accepts GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs and GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyInput` via:
//
//	GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs{...}
type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput
	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutputWithContext(context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs struct {
	// The ID of the GA instance to which the traffic policies belong.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The IP addresses of the traffic policies.
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the Custom Routing Endpoint Traffic Policy.
	CustomRoutingEndpointTrafficPolicyId pulumi.StringInput `pulumi:"customRoutingEndpointTrafficPolicyId"`
	// The ID of the endpoint group to which the traffic policies belong.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The ID of the endpoint to which the traffic policies belong.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The id of the Global Accelerator Custom Routing Endpoint Traffic Policy. It formats as `<endpoint_id>:<custom_routing_endpoint_traffic_policy_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the listener to which the traffic policies belong.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The port range of the traffic policy.
	PortRanges GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayInput `pulumi:"portRanges"`
}

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy)(nil)).Elem()
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput {
	return i.ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput)
}

// GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayInput is an input type that accepts GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray and GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayInput` via:
//
//	GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray{ GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs{...} }
type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput
	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutputWithContext(context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray []GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyInput

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy)(nil)).Elem()
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput {
	return i.ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy)(nil)).Elem()
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput {
	return o
}

// The ID of the GA instance to which the traffic policies belong.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.AcceleratorId
	}).(pulumi.StringOutput)
}

// The IP addresses of the traffic policies.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.Address
	}).(pulumi.StringOutput)
}

// The ID of the Custom Routing Endpoint Traffic Policy.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) CustomRoutingEndpointTrafficPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.CustomRoutingEndpointTrafficPolicyId
	}).(pulumi.StringOutput)
}

// The ID of the endpoint group to which the traffic policies belong.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.EndpointGroupId
	}).(pulumi.StringOutput)
}

// The ID of the endpoint to which the traffic policies belong.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.EndpointId
	}).(pulumi.StringOutput)
}

// The id of the Global Accelerator Custom Routing Endpoint Traffic Policy. It formats as `<endpoint_id>:<custom_routing_endpoint_traffic_policy_id>`.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener to which the traffic policies belong.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) string {
		return v.ListenerId
	}).(pulumi.StringOutput)
}

// The port range of the traffic policy.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput) PortRanges() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy) []GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange {
		return v.PortRanges
	}).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy)(nil)).Elem()
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy {
		return vs[0].([]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicy)[vs[1].(int)]
	}).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange struct {
	// The first port of the port range.
	FromPort int `pulumi:"fromPort"`
	// The last port of the port range.
	ToPort int `pulumi:"toPort"`
}

// GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeInput is an input type that accepts GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs and GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeInput` via:
//
//	GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs{...}
type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput
	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs struct {
	// The first port of the port range.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The last port of the port range.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return i.ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput)
}

// GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayInput is an input type that accepts GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray and GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayInput` via:
//
//	GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray{ GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs{...} }
type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput
	ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray []GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeInput

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return i.ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return o
}

// The first port of the port range.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange) int {
		return v.FromPort
	}).(pulumi.IntOutput)
}

// The last port of the port range.
func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange) int {
		return v.ToPort
	}).(pulumi.IntOutput)
}

type GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange)(nil)).Elem()
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput() GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) ToGetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange {
		return vs[0].([]GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRange)[vs[1].(int)]
	}).(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput)
}

type GetCustomRoutingEndpointsCustomRoutingEndpoint struct {
	// The ID of the GA instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint.
	CustomRoutingEndpointId string `pulumi:"customRoutingEndpointId"`
	// The ID of the endpoint (vSwitch).
	Endpoint string `pulumi:"endpoint"`
	// The ID of the endpoint group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The id of the Global Accelerator Custom Routing Endpoint. It formats as `<endpoint_group_id>:<custom_routing_endpoint_id>`.
	Id string `pulumi:"id"`
	// The ID of the custom routing listener.
	ListenerId string `pulumi:"listenerId"`
	// The access policy of traffic for the specified endpoint.
	TrafficToEndpointPolicy string `pulumi:"trafficToEndpointPolicy"`
	// The backend service type of the endpoint.
	Type string `pulumi:"type"`
}

// GetCustomRoutingEndpointsCustomRoutingEndpointInput is an input type that accepts GetCustomRoutingEndpointsCustomRoutingEndpointArgs and GetCustomRoutingEndpointsCustomRoutingEndpointOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointsCustomRoutingEndpointInput` via:
//
//	GetCustomRoutingEndpointsCustomRoutingEndpointArgs{...}
type GetCustomRoutingEndpointsCustomRoutingEndpointInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointsCustomRoutingEndpointOutput() GetCustomRoutingEndpointsCustomRoutingEndpointOutput
	ToGetCustomRoutingEndpointsCustomRoutingEndpointOutputWithContext(context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointOutput
}

type GetCustomRoutingEndpointsCustomRoutingEndpointArgs struct {
	// The ID of the GA instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The ID of the Custom Routing Endpoint.
	CustomRoutingEndpointId pulumi.StringInput `pulumi:"customRoutingEndpointId"`
	// The ID of the endpoint (vSwitch).
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The ID of the endpoint group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The id of the Global Accelerator Custom Routing Endpoint. It formats as `<endpoint_group_id>:<custom_routing_endpoint_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the custom routing listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The access policy of traffic for the specified endpoint.
	TrafficToEndpointPolicy pulumi.StringInput `pulumi:"trafficToEndpointPolicy"`
	// The backend service type of the endpoint.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCustomRoutingEndpointsCustomRoutingEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointsCustomRoutingEndpoint)(nil)).Elem()
}

func (i GetCustomRoutingEndpointsCustomRoutingEndpointArgs) ToGetCustomRoutingEndpointsCustomRoutingEndpointOutput() GetCustomRoutingEndpointsCustomRoutingEndpointOutput {
	return i.ToGetCustomRoutingEndpointsCustomRoutingEndpointOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointsCustomRoutingEndpointArgs) ToGetCustomRoutingEndpointsCustomRoutingEndpointOutputWithContext(ctx context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointsCustomRoutingEndpointOutput)
}

// GetCustomRoutingEndpointsCustomRoutingEndpointArrayInput is an input type that accepts GetCustomRoutingEndpointsCustomRoutingEndpointArray and GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingEndpointsCustomRoutingEndpointArrayInput` via:
//
//	GetCustomRoutingEndpointsCustomRoutingEndpointArray{ GetCustomRoutingEndpointsCustomRoutingEndpointArgs{...} }
type GetCustomRoutingEndpointsCustomRoutingEndpointArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput() GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput
	ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutputWithContext(context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput
}

type GetCustomRoutingEndpointsCustomRoutingEndpointArray []GetCustomRoutingEndpointsCustomRoutingEndpointInput

func (GetCustomRoutingEndpointsCustomRoutingEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointsCustomRoutingEndpoint)(nil)).Elem()
}

func (i GetCustomRoutingEndpointsCustomRoutingEndpointArray) ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput() GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput {
	return i.ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingEndpointsCustomRoutingEndpointArray) ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput)
}

type GetCustomRoutingEndpointsCustomRoutingEndpointOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointsCustomRoutingEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingEndpointsCustomRoutingEndpoint)(nil)).Elem()
}

func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) ToGetCustomRoutingEndpointsCustomRoutingEndpointOutput() GetCustomRoutingEndpointsCustomRoutingEndpointOutput {
	return o
}

func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) ToGetCustomRoutingEndpointsCustomRoutingEndpointOutputWithContext(ctx context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointOutput {
	return o
}

// The ID of the GA instance.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The ID of the Custom Routing Endpoint.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) CustomRoutingEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.CustomRoutingEndpointId }).(pulumi.StringOutput)
}

// The ID of the endpoint (vSwitch).
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The ID of the endpoint group.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The id of the Global Accelerator Custom Routing Endpoint. It formats as `<endpoint_group_id>:<custom_routing_endpoint_id>`.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the custom routing listener.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The access policy of traffic for the specified endpoint.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) TrafficToEndpointPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.TrafficToEndpointPolicy }).(pulumi.StringOutput)
}

// The backend service type of the endpoint.
func (o GetCustomRoutingEndpointsCustomRoutingEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingEndpointsCustomRoutingEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingEndpointsCustomRoutingEndpoint)(nil)).Elem()
}

func (o GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput) ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput() GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput) ToGetCustomRoutingEndpointsCustomRoutingEndpointArrayOutputWithContext(ctx context.Context) GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput {
	return o
}

func (o GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingEndpointsCustomRoutingEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingEndpointsCustomRoutingEndpoint {
		return vs[0].([]GetCustomRoutingEndpointsCustomRoutingEndpoint)[vs[1].(int)]
	}).(GetCustomRoutingEndpointsCustomRoutingEndpointOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMapping struct {
	// The ID of the GA instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The acceleration port.
	AcceleratorPort int `pulumi:"acceleratorPort"`
	// The service IP address and port of the backend instance.
	DestinationSocketAddresses []GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress `pulumi:"destinationSocketAddresses"`
	// The ID of the endpoint group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The ID of the region in which the endpoint group resides.
	EndpointGroupRegion string `pulumi:"endpointGroupRegion"`
	// The ID of the endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The ID of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The protocol of the backend service.
	Protocols []string `pulumi:"protocols"`
	// The access policy of traffic for the backend instance. Valid Values: `allow`, `deny`.
	Status string `pulumi:"status"`
	// The ID of the endpoint (vSwitch).
	Vswitch string `pulumi:"vswitch"`
}

// GetCustomRoutingPortMappingsCustomRoutingPortMappingInput is an input type that accepts GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs and GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput values.
// You can construct a concrete instance of `GetCustomRoutingPortMappingsCustomRoutingPortMappingInput` via:
//
//	GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs{...}
type GetCustomRoutingPortMappingsCustomRoutingPortMappingInput interface {
	pulumi.Input

	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput
	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutputWithContext(context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs struct {
	// The ID of the GA instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The acceleration port.
	AcceleratorPort pulumi.IntInput `pulumi:"acceleratorPort"`
	// The service IP address and port of the backend instance.
	DestinationSocketAddresses GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayInput `pulumi:"destinationSocketAddresses"`
	// The ID of the endpoint group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The ID of the region in which the endpoint group resides.
	EndpointGroupRegion pulumi.StringInput `pulumi:"endpointGroupRegion"`
	// The ID of the endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The ID of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The protocol of the backend service.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// The access policy of traffic for the backend instance. Valid Values: `allow`, `deny`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the endpoint (vSwitch).
	Vswitch pulumi.StringInput `pulumi:"vswitch"`
}

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMapping)(nil)).Elem()
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput {
	return i.ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutputWithContext(context.Background())
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput)
}

// GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayInput is an input type that accepts GetCustomRoutingPortMappingsCustomRoutingPortMappingArray and GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayInput` via:
//
//	GetCustomRoutingPortMappingsCustomRoutingPortMappingArray{ GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs{...} }
type GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput
	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutputWithContext(context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingArray []GetCustomRoutingPortMappingsCustomRoutingPortMappingInput

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingPortMappingsCustomRoutingPortMapping)(nil)).Elem()
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingArray) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput {
	return i.ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingArray) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMapping)(nil)).Elem()
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput {
	return o
}

// The ID of the GA instance.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The acceleration port.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) AcceleratorPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) int { return v.AcceleratorPort }).(pulumi.IntOutput)
}

// The service IP address and port of the backend instance.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) DestinationSocketAddresses() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) []GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress {
		return v.DestinationSocketAddresses
	}).(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput)
}

// The ID of the endpoint group.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the region in which the endpoint group resides.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) EndpointGroupRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.EndpointGroupRegion }).(pulumi.StringOutput)
}

// The ID of the endpoint.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The ID of the listener.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The protocol of the backend service.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// The access policy of traffic for the backend instance. Valid Values: `allow`, `deny`.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the endpoint (vSwitch).
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput) Vswitch() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMapping) string { return v.Vswitch }).(pulumi.StringOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingPortMappingsCustomRoutingPortMapping)(nil)).Elem()
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingPortMappingsCustomRoutingPortMapping {
		return vs[0].([]GetCustomRoutingPortMappingsCustomRoutingPortMapping)[vs[1].(int)]
	}).(GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress struct {
	// The service IP address of the backend instance.
	IpAddress string `pulumi:"ipAddress"`
	// The service port of the backend instance.
	Port int `pulumi:"port"`
}

// GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressInput is an input type that accepts GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs and GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput values.
// You can construct a concrete instance of `GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressInput` via:
//
//	GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs{...}
type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressInput interface {
	pulumi.Input

	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput
	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutputWithContext(context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs struct {
	// The service IP address of the backend instance.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The service port of the backend instance.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress)(nil)).Elem()
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput {
	return i.ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutputWithContext(context.Background())
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput)
}

// GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayInput is an input type that accepts GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray and GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput values.
// You can construct a concrete instance of `GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayInput` via:
//
//	GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray{ GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs{...} }
type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayInput interface {
	pulumi.Input

	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput
	ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutputWithContext(context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray []GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressInput

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress)(nil)).Elem()
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput {
	return i.ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutputWithContext(context.Background())
}

func (i GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress)(nil)).Elem()
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput {
	return o
}

// The service IP address of the backend instance.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress) string {
		return v.IpAddress
	}).(pulumi.StringOutput)
}

// The service port of the backend instance.
func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress) int {
		return v.Port
	}).(pulumi.IntOutput)
}

type GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput struct{ *pulumi.OutputState }

func (GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress)(nil)).Elem()
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput() GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput) ToGetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutputWithContext(ctx context.Context) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput {
	return o
}

func (o GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput) Index(i pulumi.IntInput) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress {
		return vs[0].([]GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress)[vs[1].(int)]
	}).(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput)
}

type GetDomainsDomain struct {
	// The ID of the global acceleration instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The accelerated domain name to be added. only top-level domain names are supported, such as 'example.com'.
	Domain string `pulumi:"domain"`
	// The ID of the Ga Domain.
	Id string `pulumi:"id"`
	// The status of the resource. Valid values: `illegal`, `inactive`, `active`, `unknown`.
	Status string `pulumi:"status"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//	GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	// The ID of the global acceleration instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The accelerated domain name to be added. only top-level domain names are supported, such as 'example.com'.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The ID of the Ga Domain.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the resource. Valid values: `illegal`, `inactive`, `active`, `unknown`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//	GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

// The ID of the global acceleration instance.
func (o GetDomainsDomainOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The accelerated domain name to be added. only top-level domain names are supported, such as 'example.com'.
func (o GetDomainsDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the Ga Domain.
func (o GetDomainsDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `illegal`, `inactive`, `active`, `unknown`.
func (o GetDomainsDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Status }).(pulumi.StringOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetEndpointGroupsGroup struct {
	// The description of the endpoint group.
	Description string `pulumi:"description"`
	// The endpointConfigurations of the endpoint group.
	EndpointConfigurations []GetEndpointGroupsGroupEndpointConfiguration `pulumi:"endpointConfigurations"`
	// The endpointGroupId of the Endpoint Group.
	EndpointGroupId string `pulumi:"endpointGroupId"`
	// The ID of the region where the endpoint group is deployed.
	EndpointGroupRegion string `pulumi:"endpointGroupRegion"`
	// The interval between two consecutive health checks. Unit: seconds.
	HealthCheckIntervalSeconds int `pulumi:"healthCheckIntervalSeconds"`
	// The path specified as the destination of the targets for health checks.
	HealthCheckPath string `pulumi:"healthCheckPath"`
	// The port that is used for health checks.
	HealthCheckPort int `pulumi:"healthCheckPort"`
	// The protocol that is used to connect to the targets for health checks.
	HealthCheckProtocol string `pulumi:"healthCheckProtocol"`
	// The ID of the Endpoint Group.
	Id string `pulumi:"id"`
	// The ID of the listener that is associated with the endpoint group.
	ListenerId string `pulumi:"listenerId"`
	// The name of the endpoint group.
	Name string `pulumi:"name"`
	// Mapping between listening port and forwarding port of boarding point.
	PortOverrides []GetEndpointGroupsGroupPortOverride `pulumi:"portOverrides"`
	// The status of the endpoint group.
	Status string `pulumi:"status"`
	// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
	ThresholdCount int `pulumi:"thresholdCount"`
	// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
	TrafficPercentage int `pulumi:"trafficPercentage"`
}

// GetEndpointGroupsGroupInput is an input type that accepts GetEndpointGroupsGroupArgs and GetEndpointGroupsGroupOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupInput` via:
//
//	GetEndpointGroupsGroupArgs{...}
type GetEndpointGroupsGroupInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput
	ToGetEndpointGroupsGroupOutputWithContext(context.Context) GetEndpointGroupsGroupOutput
}

type GetEndpointGroupsGroupArgs struct {
	// The description of the endpoint group.
	Description pulumi.StringInput `pulumi:"description"`
	// The endpointConfigurations of the endpoint group.
	EndpointConfigurations GetEndpointGroupsGroupEndpointConfigurationArrayInput `pulumi:"endpointConfigurations"`
	// The endpointGroupId of the Endpoint Group.
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
	// The ID of the region where the endpoint group is deployed.
	EndpointGroupRegion pulumi.StringInput `pulumi:"endpointGroupRegion"`
	// The interval between two consecutive health checks. Unit: seconds.
	HealthCheckIntervalSeconds pulumi.IntInput `pulumi:"healthCheckIntervalSeconds"`
	// The path specified as the destination of the targets for health checks.
	HealthCheckPath pulumi.StringInput `pulumi:"healthCheckPath"`
	// The port that is used for health checks.
	HealthCheckPort pulumi.IntInput `pulumi:"healthCheckPort"`
	// The protocol that is used to connect to the targets for health checks.
	HealthCheckProtocol pulumi.StringInput `pulumi:"healthCheckProtocol"`
	// The ID of the Endpoint Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the listener that is associated with the endpoint group.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the endpoint group.
	Name pulumi.StringInput `pulumi:"name"`
	// Mapping between listening port and forwarding port of boarding point.
	PortOverrides GetEndpointGroupsGroupPortOverrideArrayInput `pulumi:"portOverrides"`
	// The status of the endpoint group.
	Status pulumi.StringInput `pulumi:"status"`
	// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
	ThresholdCount pulumi.IntInput `pulumi:"thresholdCount"`
	// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
	TrafficPercentage pulumi.IntInput `pulumi:"trafficPercentage"`
}

func (GetEndpointGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroup)(nil)).Elem()
}

func (i GetEndpointGroupsGroupArgs) ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput {
	return i.ToGetEndpointGroupsGroupOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupArgs) ToGetEndpointGroupsGroupOutputWithContext(ctx context.Context) GetEndpointGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupOutput)
}

// GetEndpointGroupsGroupArrayInput is an input type that accepts GetEndpointGroupsGroupArray and GetEndpointGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupArrayInput` via:
//
//	GetEndpointGroupsGroupArray{ GetEndpointGroupsGroupArgs{...} }
type GetEndpointGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput
	ToGetEndpointGroupsGroupArrayOutputWithContext(context.Context) GetEndpointGroupsGroupArrayOutput
}

type GetEndpointGroupsGroupArray []GetEndpointGroupsGroupInput

func (GetEndpointGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroup)(nil)).Elem()
}

func (i GetEndpointGroupsGroupArray) ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput {
	return i.ToGetEndpointGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupArray) ToGetEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupArrayOutput)
}

type GetEndpointGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroup)(nil)).Elem()
}

func (o GetEndpointGroupsGroupOutput) ToGetEndpointGroupsGroupOutput() GetEndpointGroupsGroupOutput {
	return o
}

func (o GetEndpointGroupsGroupOutput) ToGetEndpointGroupsGroupOutputWithContext(ctx context.Context) GetEndpointGroupsGroupOutput {
	return o
}

// The description of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The endpointConfigurations of the endpoint group.
func (o GetEndpointGroupsGroupOutput) EndpointConfigurations() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) []GetEndpointGroupsGroupEndpointConfiguration {
		return v.EndpointConfigurations
	}).(GetEndpointGroupsGroupEndpointConfigurationArrayOutput)
}

// The endpointGroupId of the Endpoint Group.
func (o GetEndpointGroupsGroupOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.EndpointGroupId }).(pulumi.StringOutput)
}

// The ID of the region where the endpoint group is deployed.
func (o GetEndpointGroupsGroupOutput) EndpointGroupRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.EndpointGroupRegion }).(pulumi.StringOutput)
}

// The interval between two consecutive health checks. Unit: seconds.
func (o GetEndpointGroupsGroupOutput) HealthCheckIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.HealthCheckIntervalSeconds }).(pulumi.IntOutput)
}

// The path specified as the destination of the targets for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// The port that is used for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.HealthCheckPort }).(pulumi.IntOutput)
}

// The protocol that is used to connect to the targets for health checks.
func (o GetEndpointGroupsGroupOutput) HealthCheckProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.HealthCheckProtocol }).(pulumi.StringOutput)
}

// The ID of the Endpoint Group.
func (o GetEndpointGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener that is associated with the endpoint group.
func (o GetEndpointGroupsGroupOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Mapping between listening port and forwarding port of boarding point.
func (o GetEndpointGroupsGroupOutput) PortOverrides() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) []GetEndpointGroupsGroupPortOverride { return v.PortOverrides }).(GetEndpointGroupsGroupPortOverrideArrayOutput)
}

// The status of the endpoint group.
func (o GetEndpointGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The number of consecutive failed heath checks that must occur before the endpoint is deemed unhealthy.
func (o GetEndpointGroupsGroupOutput) ThresholdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.ThresholdCount }).(pulumi.IntOutput)
}

// The weight of the endpoint group when the corresponding listener is associated with multiple endpoint groups.
func (o GetEndpointGroupsGroupOutput) TrafficPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroup) int { return v.TrafficPercentage }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroup)(nil)).Elem()
}

func (o GetEndpointGroupsGroupArrayOutput) ToGetEndpointGroupsGroupArrayOutput() GetEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupArrayOutput) ToGetEndpointGroupsGroupArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroup {
		return vs[0].([]GetEndpointGroupsGroup)[vs[1].(int)]
	}).(GetEndpointGroupsGroupOutput)
}

type GetEndpointGroupsGroupEndpointConfiguration struct {
	// Indicates whether client IP addresses are reserved.
	EnableClientipPreservation bool `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint string `pulumi:"endpoint"`
	// Probe Port.
	ProbePort int `pulumi:"probePort"`
	// Probe Protocol.
	ProbeProtocol string `pulumi:"probeProtocol"`
	// The type of Endpoint N in the endpoint group.
	Type string `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group.
	Weight int `pulumi:"weight"`
}

// GetEndpointGroupsGroupEndpointConfigurationInput is an input type that accepts GetEndpointGroupsGroupEndpointConfigurationArgs and GetEndpointGroupsGroupEndpointConfigurationOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupEndpointConfigurationInput` via:
//
//	GetEndpointGroupsGroupEndpointConfigurationArgs{...}
type GetEndpointGroupsGroupEndpointConfigurationInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput
	ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput
}

type GetEndpointGroupsGroupEndpointConfigurationArgs struct {
	// Indicates whether client IP addresses are reserved.
	EnableClientipPreservation pulumi.BoolInput `pulumi:"enableClientipPreservation"`
	// The IP address or domain name of Endpoint N in the endpoint group.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Probe Port.
	ProbePort pulumi.IntInput `pulumi:"probePort"`
	// Probe Protocol.
	ProbeProtocol pulumi.StringInput `pulumi:"probeProtocol"`
	// The type of Endpoint N in the endpoint group.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of Endpoint N in the endpoint group.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetEndpointGroupsGroupEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (i GetEndpointGroupsGroupEndpointConfigurationArgs) ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput {
	return i.ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupEndpointConfigurationArgs) ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupEndpointConfigurationOutput)
}

// GetEndpointGroupsGroupEndpointConfigurationArrayInput is an input type that accepts GetEndpointGroupsGroupEndpointConfigurationArray and GetEndpointGroupsGroupEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupEndpointConfigurationArrayInput` via:
//
//	GetEndpointGroupsGroupEndpointConfigurationArray{ GetEndpointGroupsGroupEndpointConfigurationArgs{...} }
type GetEndpointGroupsGroupEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput
	ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput
}

type GetEndpointGroupsGroupEndpointConfigurationArray []GetEndpointGroupsGroupEndpointConfigurationInput

func (GetEndpointGroupsGroupEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (i GetEndpointGroupsGroupEndpointConfigurationArray) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return i.ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupEndpointConfigurationArray) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupEndpointConfigurationArrayOutput)
}

type GetEndpointGroupsGroupEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ToGetEndpointGroupsGroupEndpointConfigurationOutput() GetEndpointGroupsGroupEndpointConfigurationOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ToGetEndpointGroupsGroupEndpointConfigurationOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return o
}

// Indicates whether client IP addresses are reserved.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) EnableClientipPreservation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) bool { return v.EnableClientipPreservation }).(pulumi.BoolOutput)
}

// The IP address or domain name of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Probe Port.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ProbePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) int { return v.ProbePort }).(pulumi.IntOutput)
}

// Probe Protocol.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) ProbeProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.ProbeProtocol }).(pulumi.StringOutput)
}

// The type of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of Endpoint N in the endpoint group.
func (o GetEndpointGroupsGroupEndpointConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupEndpointConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupEndpointConfiguration)(nil)).Elem()
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutput() GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) ToGetEndpointGroupsGroupEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupEndpointConfigurationArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroupEndpointConfiguration {
		return vs[0].([]GetEndpointGroupsGroupEndpointConfiguration)[vs[1].(int)]
	}).(GetEndpointGroupsGroupEndpointConfigurationOutput)
}

type GetEndpointGroupsGroupPortOverride struct {
	// Forwarding port.
	EndpointPort int `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort int `pulumi:"listenerPort"`
}

// GetEndpointGroupsGroupPortOverrideInput is an input type that accepts GetEndpointGroupsGroupPortOverrideArgs and GetEndpointGroupsGroupPortOverrideOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupPortOverrideInput` via:
//
//	GetEndpointGroupsGroupPortOverrideArgs{...}
type GetEndpointGroupsGroupPortOverrideInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput
	ToGetEndpointGroupsGroupPortOverrideOutputWithContext(context.Context) GetEndpointGroupsGroupPortOverrideOutput
}

type GetEndpointGroupsGroupPortOverrideArgs struct {
	// Forwarding port.
	EndpointPort pulumi.IntInput `pulumi:"endpointPort"`
	// Listener port.
	ListenerPort pulumi.IntInput `pulumi:"listenerPort"`
}

func (GetEndpointGroupsGroupPortOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (i GetEndpointGroupsGroupPortOverrideArgs) ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput {
	return i.ToGetEndpointGroupsGroupPortOverrideOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupPortOverrideArgs) ToGetEndpointGroupsGroupPortOverrideOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupPortOverrideOutput)
}

// GetEndpointGroupsGroupPortOverrideArrayInput is an input type that accepts GetEndpointGroupsGroupPortOverrideArray and GetEndpointGroupsGroupPortOverrideArrayOutput values.
// You can construct a concrete instance of `GetEndpointGroupsGroupPortOverrideArrayInput` via:
//
//	GetEndpointGroupsGroupPortOverrideArray{ GetEndpointGroupsGroupPortOverrideArgs{...} }
type GetEndpointGroupsGroupPortOverrideArrayInput interface {
	pulumi.Input

	ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput
	ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput
}

type GetEndpointGroupsGroupPortOverrideArray []GetEndpointGroupsGroupPortOverrideInput

func (GetEndpointGroupsGroupPortOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (i GetEndpointGroupsGroupPortOverrideArray) ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return i.ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(context.Background())
}

func (i GetEndpointGroupsGroupPortOverrideArray) ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointGroupsGroupPortOverrideArrayOutput)
}

type GetEndpointGroupsGroupPortOverrideOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupPortOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (o GetEndpointGroupsGroupPortOverrideOutput) ToGetEndpointGroupsGroupPortOverrideOutput() GetEndpointGroupsGroupPortOverrideOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideOutput) ToGetEndpointGroupsGroupPortOverrideOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideOutput {
	return o
}

// Forwarding port.
func (o GetEndpointGroupsGroupPortOverrideOutput) EndpointPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupPortOverride) int { return v.EndpointPort }).(pulumi.IntOutput)
}

// Listener port.
func (o GetEndpointGroupsGroupPortOverrideOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointGroupsGroupPortOverride) int { return v.ListenerPort }).(pulumi.IntOutput)
}

type GetEndpointGroupsGroupPortOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointGroupsGroupPortOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointGroupsGroupPortOverride)(nil)).Elem()
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) ToGetEndpointGroupsGroupPortOverrideArrayOutput() GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) ToGetEndpointGroupsGroupPortOverrideArrayOutputWithContext(ctx context.Context) GetEndpointGroupsGroupPortOverrideArrayOutput {
	return o
}

func (o GetEndpointGroupsGroupPortOverrideArrayOutput) Index(i pulumi.IntInput) GetEndpointGroupsGroupPortOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointGroupsGroupPortOverride {
		return vs[0].([]GetEndpointGroupsGroupPortOverride)[vs[1].(int)]
	}).(GetEndpointGroupsGroupPortOverrideOutput)
}

type GetForwardingRulesForwardingRule struct {
	// Forwarding Policy ID.
	ForwardingRuleId string `pulumi:"forwardingRuleId"`
	// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
	ForwardingRuleName string `pulumi:"forwardingRuleName"`
	// Forwarding Policy Status.
	ForwardingRuleStatus string `pulumi:"forwardingRuleStatus"`
	Id                   string `pulumi:"id"`
	// The ID of the listener.
	ListenerId string `pulumi:"listenerId"`
	// Forwarding policy priority.
	Priority int `pulumi:"priority"`
	// The IP protocol used by the GA instance.
	// `order` - Forwarding priority.
	// `ruleActionType` - Forward action type.
	// `forwardGroupConfig` - Forwarding configuration.
	// `serverGroupTuples` - Terminal node group configuration.
	// `endpointGroupId` - Terminal node group ID.
	RuleActions []GetForwardingRulesForwardingRuleRuleAction `pulumi:"ruleActions"`
	// Forward action.
	// `ruleConditionType` - Forwarding condition type.
	// `pathConfig` - Path configuration information.
	// `values` - The length of the path is 1-128 characters.
	// `hostConfig` - Domain name configuration information.
	// `values` - The domain name is 3-128 characters long.
	RuleConditions []GetForwardingRulesForwardingRuleRuleCondition `pulumi:"ruleConditions"`
}

// GetForwardingRulesForwardingRuleInput is an input type that accepts GetForwardingRulesForwardingRuleArgs and GetForwardingRulesForwardingRuleOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleInput` via:
//
//	GetForwardingRulesForwardingRuleArgs{...}
type GetForwardingRulesForwardingRuleInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput
	ToGetForwardingRulesForwardingRuleOutputWithContext(context.Context) GetForwardingRulesForwardingRuleOutput
}

type GetForwardingRulesForwardingRuleArgs struct {
	// Forwarding Policy ID.
	ForwardingRuleId pulumi.StringInput `pulumi:"forwardingRuleId"`
	// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
	ForwardingRuleName pulumi.StringInput `pulumi:"forwardingRuleName"`
	// Forwarding Policy Status.
	ForwardingRuleStatus pulumi.StringInput `pulumi:"forwardingRuleStatus"`
	Id                   pulumi.StringInput `pulumi:"id"`
	// The ID of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// Forwarding policy priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The IP protocol used by the GA instance.
	// `order` - Forwarding priority.
	// `ruleActionType` - Forward action type.
	// `forwardGroupConfig` - Forwarding configuration.
	// `serverGroupTuples` - Terminal node group configuration.
	// `endpointGroupId` - Terminal node group ID.
	RuleActions GetForwardingRulesForwardingRuleRuleActionArrayInput `pulumi:"ruleActions"`
	// Forward action.
	// `ruleConditionType` - Forwarding condition type.
	// `pathConfig` - Path configuration information.
	// `values` - The length of the path is 1-128 characters.
	// `hostConfig` - Domain name configuration information.
	// `values` - The domain name is 3-128 characters long.
	RuleConditions GetForwardingRulesForwardingRuleRuleConditionArrayInput `pulumi:"ruleConditions"`
}

func (GetForwardingRulesForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleArgs) ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput {
	return i.ToGetForwardingRulesForwardingRuleOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleArgs) ToGetForwardingRulesForwardingRuleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleOutput)
}

// GetForwardingRulesForwardingRuleArrayInput is an input type that accepts GetForwardingRulesForwardingRuleArray and GetForwardingRulesForwardingRuleArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleArrayInput` via:
//
//	GetForwardingRulesForwardingRuleArray{ GetForwardingRulesForwardingRuleArgs{...} }
type GetForwardingRulesForwardingRuleArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput
	ToGetForwardingRulesForwardingRuleArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleArrayOutput
}

type GetForwardingRulesForwardingRuleArray []GetForwardingRulesForwardingRuleInput

func (GetForwardingRulesForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleArray) ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleArray) ToGetForwardingRulesForwardingRuleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleArrayOutput)
}

type GetForwardingRulesForwardingRuleOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleOutput) ToGetForwardingRulesForwardingRuleOutput() GetForwardingRulesForwardingRuleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleOutput) ToGetForwardingRulesForwardingRuleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleOutput {
	return o
}

// Forwarding Policy ID.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleId }).(pulumi.StringOutput)
}

// Forwarding policy name. The length of the name is 2-128 English or Chinese characters.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleName }).(pulumi.StringOutput)
}

// Forwarding Policy Status.
func (o GetForwardingRulesForwardingRuleOutput) ForwardingRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ForwardingRuleStatus }).(pulumi.StringOutput)
}

func (o GetForwardingRulesForwardingRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the listener.
func (o GetForwardingRulesForwardingRuleOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) string { return v.ListenerId }).(pulumi.StringOutput)
}

// Forwarding policy priority.
func (o GetForwardingRulesForwardingRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The IP protocol used by the GA instance.
// `order` - Forwarding priority.
// `ruleActionType` - Forward action type.
// `forwardGroupConfig` - Forwarding configuration.
// `serverGroupTuples` - Terminal node group configuration.
// `endpointGroupId` - Terminal node group ID.
func (o GetForwardingRulesForwardingRuleOutput) RuleActions() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) []GetForwardingRulesForwardingRuleRuleAction {
		return v.RuleActions
	}).(GetForwardingRulesForwardingRuleRuleActionArrayOutput)
}

// Forward action.
// `ruleConditionType` - Forwarding condition type.
// `pathConfig` - Path configuration information.
// `values` - The length of the path is 1-128 characters.
// `hostConfig` - Domain name configuration information.
// `values` - The domain name is 3-128 characters long.
func (o GetForwardingRulesForwardingRuleOutput) RuleConditions() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRule) []GetForwardingRulesForwardingRuleRuleCondition {
		return v.RuleConditions
	}).(GetForwardingRulesForwardingRuleRuleConditionArrayOutput)
}

type GetForwardingRulesForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRule)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleArrayOutput) ToGetForwardingRulesForwardingRuleArrayOutput() GetForwardingRulesForwardingRuleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleArrayOutput) ToGetForwardingRulesForwardingRuleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRule {
		return vs[0].([]GetForwardingRulesForwardingRule)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleOutput)
}

type GetForwardingRulesForwardingRuleRuleAction struct {
	ForwardGroupConfigs []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig `pulumi:"forwardGroupConfigs"`
	Order               int                                                            `pulumi:"order"`
	RuleActionType      string                                                         `pulumi:"ruleActionType"`
}

// GetForwardingRulesForwardingRuleRuleActionInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionArgs and GetForwardingRulesForwardingRuleRuleActionOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionArgs{...}
type GetForwardingRulesForwardingRuleRuleActionInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput
	ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionOutput
}

type GetForwardingRulesForwardingRuleRuleActionArgs struct {
	ForwardGroupConfigs GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput `pulumi:"forwardGroupConfigs"`
	Order               pulumi.IntInput                                                        `pulumi:"order"`
	RuleActionType      pulumi.StringInput                                                     `pulumi:"ruleActionType"`
}

func (GetForwardingRulesForwardingRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionArgs) ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionArgs) ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionOutput)
}

// GetForwardingRulesForwardingRuleRuleActionArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionArray and GetForwardingRulesForwardingRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionArray{ GetForwardingRulesForwardingRuleRuleActionArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionArray []GetForwardingRulesForwardingRuleRuleActionInput

func (GetForwardingRulesForwardingRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionArray) ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionArray) ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ToGetForwardingRulesForwardingRuleRuleActionOutput() GetForwardingRulesForwardingRuleRuleActionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ToGetForwardingRulesForwardingRuleRuleActionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) ForwardGroupConfigs() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig {
		return v.ForwardGroupConfigs
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) int { return v.Order }).(pulumi.IntOutput)
}

func (o GetForwardingRulesForwardingRuleRuleActionOutput) RuleActionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleAction) string { return v.RuleActionType }).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleAction)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionArrayOutput() GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleAction {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleAction)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig struct {
	ServerGroupTuples []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple `pulumi:"serverGroupTuples"`
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs struct {
	ServerGroupTuples GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput `pulumi:"serverGroupTuples"`
}

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray{ GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput) ServerGroupTuples() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig) []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return v.ServerGroupTuples
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple struct {
	EndpointGroupId string `pulumi:"endpointGroupId"`
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...}
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs struct {
	EndpointGroupId pulumi.StringInput `pulumi:"endpointGroupId"`
}

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

// GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray and GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{ GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{...} }
type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
	ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray []GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput) EndpointGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple) string {
		return v.EndpointGroupId
	}).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput() GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) ToGetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTuple)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput)
}

type GetForwardingRulesForwardingRuleRuleCondition struct {
	HostConfigs       []GetForwardingRulesForwardingRuleRuleConditionHostConfig `pulumi:"hostConfigs"`
	PathConfigs       []GetForwardingRulesForwardingRuleRuleConditionPathConfig `pulumi:"pathConfigs"`
	RuleConditionType string                                                    `pulumi:"ruleConditionType"`
}

// GetForwardingRulesForwardingRuleRuleConditionInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionArgs and GetForwardingRulesForwardingRuleRuleConditionOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput
	ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput
}

type GetForwardingRulesForwardingRuleRuleConditionArgs struct {
	HostConfigs       GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput `pulumi:"hostConfigs"`
	PathConfigs       GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput `pulumi:"pathConfigs"`
	RuleConditionType pulumi.StringInput                                                `pulumi:"ruleConditionType"`
}

func (GetForwardingRulesForwardingRuleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionArgs) ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionArgs) ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionArray and GetForwardingRulesForwardingRuleRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionArray{ GetForwardingRulesForwardingRuleRuleConditionArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionArray []GetForwardingRulesForwardingRuleRuleConditionInput

func (GetForwardingRulesForwardingRuleRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionArray) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionArray) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) ToGetForwardingRulesForwardingRuleRuleConditionOutput() GetForwardingRulesForwardingRuleRuleConditionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) ToGetForwardingRulesForwardingRuleRuleConditionOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) HostConfigs() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) []GetForwardingRulesForwardingRuleRuleConditionHostConfig {
		return v.HostConfigs
	}).(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) PathConfigs() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) []GetForwardingRulesForwardingRuleRuleConditionPathConfig {
		return v.PathConfigs
	}).(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput)
}

func (o GetForwardingRulesForwardingRuleRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleCondition)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutput() GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleCondition {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleCondition)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfig struct {
	Values []string `pulumi:"values"`
}

// GetForwardingRulesForwardingRuleRuleConditionHostConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs and GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionHostConfigInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionHostConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput
	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionHostConfigArray and GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionHostConfigArray{ GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArray []GetForwardingRulesForwardingRuleRuleConditionHostConfigInput

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionHostConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleConditionHostConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionHostConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleConditionHostConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleConditionHostConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfig struct {
	Values []string `pulumi:"values"`
}

// GetForwardingRulesForwardingRuleRuleConditionPathConfigInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs and GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionPathConfigInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs{...}
type GetForwardingRulesForwardingRuleRuleConditionPathConfigInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput
	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput)
}

// GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput is an input type that accepts GetForwardingRulesForwardingRuleRuleConditionPathConfigArray and GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput values.
// You can construct a concrete instance of `GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput` via:
//
//	GetForwardingRulesForwardingRuleRuleConditionPathConfigArray{ GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs{...} }
type GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput interface {
	pulumi.Input

	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput
	ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArray []GetForwardingRulesForwardingRuleRuleConditionPathConfigInput

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return i.ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(context.Background())
}

func (i GetForwardingRulesForwardingRuleRuleConditionPathConfigArray) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetForwardingRulesForwardingRuleRuleConditionPathConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput struct{ *pulumi.OutputState }

func (GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetForwardingRulesForwardingRuleRuleConditionPathConfig)(nil)).Elem()
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput() GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) ToGetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutputWithContext(ctx context.Context) GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput {
	return o
}

func (o GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput) Index(i pulumi.IntInput) GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetForwardingRulesForwardingRuleRuleConditionPathConfig {
		return vs[0].([]GetForwardingRulesForwardingRuleRuleConditionPathConfig)[vs[1].(int)]
	}).(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput)
}

type GetIpSetsSet struct {
	// The ID of an acceleration region.
	AccelerateRegionId string `pulumi:"accelerateRegionId"`
	// The bandwidth allocated to the acceleration region.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the Ip Set.
	Id string `pulumi:"id"`
	// The list of accelerated IP addresses in the acceleration region.
	IpAddressLists []string `pulumi:"ipAddressLists"`
	// Accelerated area ID.
	IpSetId string `pulumi:"ipSetId"`
	// The IP protocol used by the GA instance.
	IpVersion string `pulumi:"ipVersion"`
	// The status of the acceleration region.
	Status string `pulumi:"status"`
}

// GetIpSetsSetInput is an input type that accepts GetIpSetsSetArgs and GetIpSetsSetOutput values.
// You can construct a concrete instance of `GetIpSetsSetInput` via:
//
//	GetIpSetsSetArgs{...}
type GetIpSetsSetInput interface {
	pulumi.Input

	ToGetIpSetsSetOutput() GetIpSetsSetOutput
	ToGetIpSetsSetOutputWithContext(context.Context) GetIpSetsSetOutput
}

type GetIpSetsSetArgs struct {
	// The ID of an acceleration region.
	AccelerateRegionId pulumi.StringInput `pulumi:"accelerateRegionId"`
	// The bandwidth allocated to the acceleration region.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the Ip Set.
	Id pulumi.StringInput `pulumi:"id"`
	// The list of accelerated IP addresses in the acceleration region.
	IpAddressLists pulumi.StringArrayInput `pulumi:"ipAddressLists"`
	// Accelerated area ID.
	IpSetId pulumi.StringInput `pulumi:"ipSetId"`
	// The IP protocol used by the GA instance.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The status of the acceleration region.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIpSetsSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSetsSet)(nil)).Elem()
}

func (i GetIpSetsSetArgs) ToGetIpSetsSetOutput() GetIpSetsSetOutput {
	return i.ToGetIpSetsSetOutputWithContext(context.Background())
}

func (i GetIpSetsSetArgs) ToGetIpSetsSetOutputWithContext(ctx context.Context) GetIpSetsSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSetsSetOutput)
}

// GetIpSetsSetArrayInput is an input type that accepts GetIpSetsSetArray and GetIpSetsSetArrayOutput values.
// You can construct a concrete instance of `GetIpSetsSetArrayInput` via:
//
//	GetIpSetsSetArray{ GetIpSetsSetArgs{...} }
type GetIpSetsSetArrayInput interface {
	pulumi.Input

	ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput
	ToGetIpSetsSetArrayOutputWithContext(context.Context) GetIpSetsSetArrayOutput
}

type GetIpSetsSetArray []GetIpSetsSetInput

func (GetIpSetsSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSetsSet)(nil)).Elem()
}

func (i GetIpSetsSetArray) ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput {
	return i.ToGetIpSetsSetArrayOutputWithContext(context.Background())
}

func (i GetIpSetsSetArray) ToGetIpSetsSetArrayOutputWithContext(ctx context.Context) GetIpSetsSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpSetsSetArrayOutput)
}

type GetIpSetsSetOutput struct{ *pulumi.OutputState }

func (GetIpSetsSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpSetsSet)(nil)).Elem()
}

func (o GetIpSetsSetOutput) ToGetIpSetsSetOutput() GetIpSetsSetOutput {
	return o
}

func (o GetIpSetsSetOutput) ToGetIpSetsSetOutputWithContext(ctx context.Context) GetIpSetsSetOutput {
	return o
}

// The ID of an acceleration region.
func (o GetIpSetsSetOutput) AccelerateRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.AccelerateRegionId }).(pulumi.StringOutput)
}

// The bandwidth allocated to the acceleration region.
func (o GetIpSetsSetOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpSetsSet) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the Ip Set.
func (o GetIpSetsSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.Id }).(pulumi.StringOutput)
}

// The list of accelerated IP addresses in the acceleration region.
func (o GetIpSetsSetOutput) IpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpSetsSet) []string { return v.IpAddressLists }).(pulumi.StringArrayOutput)
}

// Accelerated area ID.
func (o GetIpSetsSetOutput) IpSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.IpSetId }).(pulumi.StringOutput)
}

// The IP protocol used by the GA instance.
func (o GetIpSetsSetOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The status of the acceleration region.
func (o GetIpSetsSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpSetsSet) string { return v.Status }).(pulumi.StringOutput)
}

type GetIpSetsSetArrayOutput struct{ *pulumi.OutputState }

func (GetIpSetsSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpSetsSet)(nil)).Elem()
}

func (o GetIpSetsSetArrayOutput) ToGetIpSetsSetArrayOutput() GetIpSetsSetArrayOutput {
	return o
}

func (o GetIpSetsSetArrayOutput) ToGetIpSetsSetArrayOutputWithContext(ctx context.Context) GetIpSetsSetArrayOutput {
	return o
}

func (o GetIpSetsSetArrayOutput) Index(i pulumi.IntInput) GetIpSetsSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpSetsSet {
		return vs[0].([]GetIpSetsSet)[vs[1].(int)]
	}).(GetIpSetsSetOutput)
}

type GetListenersListener struct {
	// The certificates of the listener.
	Certificates []GetListenersListenerCertificate `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity string `pulumi:"clientAffinity"`
	// The description of the listener.
	Description string `pulumi:"description"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name string `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges []GetListenersListenerPortRange `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol string `pulumi:"protocol"`
	// The status of the listener.
	Status string `pulumi:"status"`
}

// GetListenersListenerInput is an input type that accepts GetListenersListenerArgs and GetListenersListenerOutput values.
// You can construct a concrete instance of `GetListenersListenerInput` via:
//
//	GetListenersListenerArgs{...}
type GetListenersListenerInput interface {
	pulumi.Input

	ToGetListenersListenerOutput() GetListenersListenerOutput
	ToGetListenersListenerOutputWithContext(context.Context) GetListenersListenerOutput
}

type GetListenersListenerArgs struct {
	// The certificates of the listener.
	Certificates GetListenersListenerCertificateArrayInput `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity pulumi.StringInput `pulumi:"clientAffinity"`
	// The description of the listener.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name pulumi.StringInput `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges GetListenersListenerPortRangeArrayInput `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The status of the listener.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return i.ToGetListenersListenerOutputWithContext(context.Background())
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerOutput)
}

// GetListenersListenerArrayInput is an input type that accepts GetListenersListenerArray and GetListenersListenerArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerArrayInput` via:
//
//	GetListenersListenerArray{ GetListenersListenerArgs{...} }
type GetListenersListenerArrayInput interface {
	pulumi.Input

	ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput
	ToGetListenersListenerArrayOutputWithContext(context.Context) GetListenersListenerArrayOutput
}

type GetListenersListenerArray []GetListenersListenerInput

func (GetListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return i.ToGetListenersListenerArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerArrayOutput)
}

type GetListenersListenerOutput struct{ *pulumi.OutputState }

func (GetListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return o
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return o
}

// The certificates of the listener.
func (o GetListenersListenerOutput) Certificates() GetListenersListenerCertificateArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerCertificate { return v.Certificates }).(GetListenersListenerCertificateArrayOutput)
}

// The clientAffinity of the listener.
func (o GetListenersListenerOutput) ClientAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ClientAffinity }).(pulumi.StringOutput)
}

// The description of the listener.
func (o GetListenersListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o GetListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The listenerId of the listener.
func (o GetListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
func (o GetListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

// The portRanges of the listener.
func (o GetListenersListenerOutput) PortRanges() GetListenersListenerPortRangeArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerPortRange { return v.PortRanges }).(GetListenersListenerPortRangeArrayOutput)
}

// Type of network transport protocol monitored.
func (o GetListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// The status of the listener.
func (o GetListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

type GetListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) Index(i pulumi.IntInput) GetListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListener {
		return vs[0].([]GetListenersListener)[vs[1].(int)]
	}).(GetListenersListenerOutput)
}

type GetListenersListenerCertificate struct {
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The type of the certificate.
	Type string `pulumi:"type"`
}

// GetListenersListenerCertificateInput is an input type that accepts GetListenersListenerCertificateArgs and GetListenersListenerCertificateOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateInput` via:
//
//	GetListenersListenerCertificateArgs{...}
type GetListenersListenerCertificateInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput
	ToGetListenersListenerCertificateOutputWithContext(context.Context) GetListenersListenerCertificateOutput
}

type GetListenersListenerCertificateArgs struct {
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the certificate.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListenersListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return i.ToGetListenersListenerCertificateOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateOutput)
}

// GetListenersListenerCertificateArrayInput is an input type that accepts GetListenersListenerCertificateArray and GetListenersListenerCertificateArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateArrayInput` via:
//
//	GetListenersListenerCertificateArray{ GetListenersListenerCertificateArgs{...} }
type GetListenersListenerCertificateArrayInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput
	ToGetListenersListenerCertificateArrayOutputWithContext(context.Context) GetListenersListenerCertificateArrayOutput
}

type GetListenersListenerCertificateArray []GetListenersListenerCertificateInput

func (GetListenersListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return i.ToGetListenersListenerCertificateArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateArrayOutput)
}

type GetListenersListenerCertificateOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return o
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return o
}

// The ID of the Listener.
func (o GetListenersListenerCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the certificate.
func (o GetListenersListenerCertificateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenersListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) Index(i pulumi.IntInput) GetListenersListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerCertificate {
		return vs[0].([]GetListenersListenerCertificate)[vs[1].(int)]
	}).(GetListenersListenerCertificateOutput)
}

type GetListenersListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// GetListenersListenerPortRangeInput is an input type that accepts GetListenersListenerPortRangeArgs and GetListenersListenerPortRangeOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeInput` via:
//
//	GetListenersListenerPortRangeArgs{...}
type GetListenersListenerPortRangeInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput
	ToGetListenersListenerPortRangeOutputWithContext(context.Context) GetListenersListenerPortRangeOutput
}

type GetListenersListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (GetListenersListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return i.ToGetListenersListenerPortRangeOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeOutput)
}

// GetListenersListenerPortRangeArrayInput is an input type that accepts GetListenersListenerPortRangeArray and GetListenersListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeArrayInput` via:
//
//	GetListenersListenerPortRangeArray{ GetListenersListenerPortRangeArgs{...} }
type GetListenersListenerPortRangeArrayInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput
	ToGetListenersListenerPortRangeArrayOutputWithContext(context.Context) GetListenersListenerPortRangeArrayOutput
}

type GetListenersListenerPortRangeArray []GetListenersListenerPortRangeInput

func (GetListenersListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return i.ToGetListenersListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeArrayOutput)
}

type GetListenersListenerPortRangeOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return o
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type GetListenersListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) Index(i pulumi.IntInput) GetListenersListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerPortRange {
		return vs[0].([]GetListenersListenerPortRange)[vs[1].(int)]
	}).(GetListenersListenerPortRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryInput)(nil)).Elem(), AclAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryArrayInput)(nil)).Elem(), AclAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingEndpointTrafficPolicyPortRangeInput)(nil)).Elem(), CustomRoutingEndpointTrafficPolicyPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingEndpointTrafficPolicyPortRangeArrayInput)(nil)).Elem(), CustomRoutingEndpointTrafficPolicyPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointGroupEndpointConfigurationInput)(nil)).Elem(), EndpointGroupEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointGroupEndpointConfigurationArrayInput)(nil)).Elem(), EndpointGroupEndpointConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointGroupPortOverridesInput)(nil)).Elem(), EndpointGroupPortOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointGroupPortOverridesPtrInput)(nil)).Elem(), EndpointGroupPortOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleActionInput)(nil)).Elem(), ForwardingRuleRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleActionArrayInput)(nil)).Elem(), ForwardingRuleRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigInput)(nil)).Elem(), ForwardingRuleRuleActionForwardGroupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput)(nil)).Elem(), ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput)(nil)).Elem(), ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionInput)(nil)).Elem(), ForwardingRuleRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionArrayInput)(nil)).Elem(), ForwardingRuleRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionHostConfigInput)(nil)).Elem(), ForwardingRuleRuleConditionHostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionHostConfigArrayInput)(nil)).Elem(), ForwardingRuleRuleConditionHostConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionPathConfigInput)(nil)).Elem(), ForwardingRuleRuleConditionPathConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleRuleConditionPathConfigPtrInput)(nil)).Elem(), ForwardingRuleRuleConditionPathConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateInput)(nil)).Elem(), ListenerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateArrayInput)(nil)).Elem(), ListenerCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerPortRangeInput)(nil)).Elem(), ListenerPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerPortRangeArrayInput)(nil)).Elem(), ListenerPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsAttachmentInput)(nil)).Elem(), GetAcceleratorSpareIpAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsAttachmentArrayInput)(nil)).Elem(), GetAcceleratorSpareIpAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorInput)(nil)).Elem(), GetAcceleratorsAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorArrayInput)(nil)).Elem(), GetAcceleratorsAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackageInput)(nil)).Elem(), GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput)(nil)).Elem(), GetAcceleratorsAcceleratorBasicBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput)(nil)).Elem(), GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput)(nil)).Elem(), GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclInput)(nil)).Elem(), GetAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclArrayInput)(nil)).Elem(), GetAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclAclEntryInput)(nil)).Elem(), GetAclsAclAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclAclEntryArrayInput)(nil)).Elem(), GetAclsAclAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdditionalCertificatesCertificateInput)(nil)).Elem(), GetAdditionalCertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdditionalCertificatesCertificateArrayInput)(nil)).Elem(), GetAdditionalCertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthPackagesPackageInput)(nil)).Elem(), GetBandwidthPackagesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBandwidthPackagesPackageArrayInput)(nil)).Elem(), GetBandwidthPackagesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAccelerateIpEndpointRelationsRelationInput)(nil)).Elem(), GetBasicAccelerateIpEndpointRelationsRelationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAccelerateIpEndpointRelationsRelationArrayInput)(nil)).Elem(), GetBasicAccelerateIpEndpointRelationsRelationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAccelerateIpsIpInput)(nil)).Elem(), GetBasicAccelerateIpsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAccelerateIpsIpArrayInput)(nil)).Elem(), GetBasicAccelerateIpsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorArrayInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorBasicBandwidthPackageInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput)(nil)).Elem(), GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicEndpointsEndpointInput)(nil)).Elem(), GetBasicEndpointsEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBasicEndpointsEndpointArrayInput)(nil)).Elem(), GetBasicEndpointsEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationInput)(nil)).Elem(), GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayInput)(nil)).Elem(), GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointGroupsGroupInput)(nil)).Elem(), GetCustomRoutingEndpointGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointGroupsGroupArrayInput)(nil)).Elem(), GetCustomRoutingEndpointGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyInput)(nil)).Elem(), GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayInput)(nil)).Elem(), GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeInput)(nil)).Elem(), GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayInput)(nil)).Elem(), GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointsCustomRoutingEndpointInput)(nil)).Elem(), GetCustomRoutingEndpointsCustomRoutingEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingEndpointsCustomRoutingEndpointArrayInput)(nil)).Elem(), GetCustomRoutingEndpointsCustomRoutingEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingInput)(nil)).Elem(), GetCustomRoutingPortMappingsCustomRoutingPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayInput)(nil)).Elem(), GetCustomRoutingPortMappingsCustomRoutingPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressInput)(nil)).Elem(), GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayInput)(nil)).Elem(), GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainInput)(nil)).Elem(), GetDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainArrayInput)(nil)).Elem(), GetDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupInput)(nil)).Elem(), GetEndpointGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupArrayInput)(nil)).Elem(), GetEndpointGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfigurationInput)(nil)).Elem(), GetEndpointGroupsGroupEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupEndpointConfigurationArrayInput)(nil)).Elem(), GetEndpointGroupsGroupEndpointConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupPortOverrideInput)(nil)).Elem(), GetEndpointGroupsGroupPortOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointGroupsGroupPortOverrideArrayInput)(nil)).Elem(), GetEndpointGroupsGroupPortOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleInput)(nil)).Elem(), GetForwardingRulesForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfigInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionHostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionHostConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfigInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionPathConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayInput)(nil)).Elem(), GetForwardingRulesForwardingRuleRuleConditionPathConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSetsSetInput)(nil)).Elem(), GetIpSetsSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpSetsSetArrayInput)(nil)).Elem(), GetIpSetsSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerInput)(nil)).Elem(), GetListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerArrayInput)(nil)).Elem(), GetListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCertificateInput)(nil)).Elem(), GetListenersListenerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerCertificateArrayInput)(nil)).Elem(), GetListenersListenerCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerPortRangeInput)(nil)).Elem(), GetListenersListenerPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerPortRangeArrayInput)(nil)).Elem(), GetListenersListenerPortRangeArray{})
	pulumi.RegisterOutputType(AclAclEntryOutput{})
	pulumi.RegisterOutputType(AclAclEntryArrayOutput{})
	pulumi.RegisterOutputType(CustomRoutingEndpointTrafficPolicyPortRangeOutput{})
	pulumi.RegisterOutputType(CustomRoutingEndpointTrafficPolicyPortRangeArrayOutput{})
	pulumi.RegisterOutputType(EndpointGroupEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(EndpointGroupEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EndpointGroupPortOverridesOutput{})
	pulumi.RegisterOutputType(EndpointGroupPortOverridesPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionHostConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionHostConfigArrayOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionPathConfigOutput{})
	pulumi.RegisterOutputType(ForwardingRuleRuleConditionPathConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerCertificateOutput{})
	pulumi.RegisterOutputType(ListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorSpareIpAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclOutput{})
	pulumi.RegisterOutputType(GetAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclAclEntryOutput{})
	pulumi.RegisterOutputType(GetAclsAclAclEntryArrayOutput{})
	pulumi.RegisterOutputType(GetAdditionalCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(GetAdditionalCertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetBandwidthPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetBasicAccelerateIpEndpointRelationsRelationOutput{})
	pulumi.RegisterOutputType(GetBasicAccelerateIpEndpointRelationsRelationArrayOutput{})
	pulumi.RegisterOutputType(GetBasicAccelerateIpsIpOutput{})
	pulumi.RegisterOutputType(GetBasicAccelerateIpsIpArrayOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetBasicEndpointsEndpointOutput{})
	pulumi.RegisterOutputType(GetBasicEndpointsEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointGroupDestinationsCustomRoutingEndpointGroupDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointTrafficPoliciesCustomRoutingEndpointTrafficPolicyPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointsCustomRoutingEndpointOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingEndpointsCustomRoutingEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingPortMappingsCustomRoutingPortMappingOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingPortMappingsCustomRoutingPortMappingArrayOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressOutput{})
	pulumi.RegisterOutputType(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddressArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupPortOverrideOutput{})
	pulumi.RegisterOutputType(GetEndpointGroupsGroupPortOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleActionForwardGroupConfigServerGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionHostConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionHostConfigArrayOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionPathConfigOutput{})
	pulumi.RegisterOutputType(GetForwardingRulesForwardingRuleRuleConditionPathConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIpSetsSetOutput{})
	pulumi.RegisterOutputType(GetIpSetsSetArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerOutput{})
	pulumi.RegisterOutputType(GetListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeArrayOutput{})
}
