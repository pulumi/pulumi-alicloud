// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ga Accelerator Spare Ip Attachments of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.167.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ga"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := ga.GetAcceleratorSpareIpAttachments(ctx, &ga.GetAcceleratorSpareIpAttachmentsArgs{
//				AcceleratorId: "example_value",
//				Ids: []string{
//					"example_value-1",
//					"example_value-2",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("gaAcceleratorSpareIpAttachmentId1", ids.Attachments[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetAcceleratorSpareIpAttachments(ctx *pulumi.Context, args *GetAcceleratorSpareIpAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetAcceleratorSpareIpAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAcceleratorSpareIpAttachmentsResult
	err := ctx.Invoke("alicloud:ga/getAcceleratorSpareIpAttachments:getAcceleratorSpareIpAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcceleratorSpareIpAttachments.
type GetAcceleratorSpareIpAttachmentsArgs struct {
	// The ID of the global acceleration instance.
	AcceleratorId string `pulumi:"acceleratorId"`
	// A list of Accelerator Spare Ip Attachment IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the standby CNAME IP address. Valid values: `active`, `inuse`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getAcceleratorSpareIpAttachments.
type GetAcceleratorSpareIpAttachmentsResult struct {
	AcceleratorId string                                       `pulumi:"acceleratorId"`
	Attachments   []GetAcceleratorSpareIpAttachmentsAttachment `pulumi:"attachments"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	Status     *string  `pulumi:"status"`
}

func GetAcceleratorSpareIpAttachmentsOutput(ctx *pulumi.Context, args GetAcceleratorSpareIpAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetAcceleratorSpareIpAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAcceleratorSpareIpAttachmentsResult, error) {
			args := v.(GetAcceleratorSpareIpAttachmentsArgs)
			r, err := GetAcceleratorSpareIpAttachments(ctx, &args, opts...)
			var s GetAcceleratorSpareIpAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAcceleratorSpareIpAttachmentsResultOutput)
}

// A collection of arguments for invoking getAcceleratorSpareIpAttachments.
type GetAcceleratorSpareIpAttachmentsOutputArgs struct {
	// The ID of the global acceleration instance.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// A list of Accelerator Spare Ip Attachment IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the standby CNAME IP address. Valid values: `active`, `inuse`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetAcceleratorSpareIpAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getAcceleratorSpareIpAttachments.
type GetAcceleratorSpareIpAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetAcceleratorSpareIpAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorSpareIpAttachmentsResult)(nil)).Elem()
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) ToGetAcceleratorSpareIpAttachmentsResultOutput() GetAcceleratorSpareIpAttachmentsResultOutput {
	return o
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) ToGetAcceleratorSpareIpAttachmentsResultOutputWithContext(ctx context.Context) GetAcceleratorSpareIpAttachmentsResultOutput {
	return o
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) Attachments() GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) []GetAcceleratorSpareIpAttachmentsAttachment {
		return v.Attachments
	}).(GetAcceleratorSpareIpAttachmentsAttachmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAcceleratorSpareIpAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAcceleratorSpareIpAttachmentsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAcceleratorSpareIpAttachmentsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAcceleratorSpareIpAttachmentsResultOutput{})
}
