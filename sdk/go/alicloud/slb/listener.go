// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Classic Load Balancer (SLB) Load Balancer Listener resource.
//
// For information about Classic Load Balancer (SLB) and how to use it, see [What is Classic Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).
//
// For information about listener and how to use it, please see the following:
//
// * [Configure a HTTP Classic Load Balancer (SLB) Listener](https://www.alibabacloud.com/help/doc-detail/27592.htm).
// * [Configure a HTTPS Classic Load Balancer (SLB) Listener](https://www.alibabacloud.com/help/doc-detail/27593.htm).
// * [Configure a TCP Classic Load Balancer (SLB) Listener](https://www.alibabacloud.com/help/doc-detail/27594.htm).
// * [Configure a UDP Classic Load Balancer (SLB) Listener](https://www.alibabacloud.com/help/doc-detail/27595.htm).
//
// > **NOTE:** Available since v1.0.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			listener, err := slb.NewApplicationLoadBalancer(ctx, "listener", &slb.ApplicationLoadBalancerArgs{
//				LoadBalancerName:   pulumi.Sprintf("%v-%v", name, _default.Result),
//				InternetChargeType: pulumi.String("PayByTraffic"),
//				AddressType:        pulumi.String("internet"),
//				InstanceChargeType: pulumi.String("PayByCLCU"),
//			})
//			if err != nil {
//				return err
//			}
//			listenerAcl, err := slb.NewAcl(ctx, "listener", &slb.AclArgs{
//				Name:      pulumi.Sprintf("%v-%v", name, _default.Result),
//				IpVersion: pulumi.String("ipv4"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = slb.NewListener(ctx, "listener", &slb.ListenerArgs{
//				LoadBalancerId:         listener.ID(),
//				BackendPort:            pulumi.Int(80),
//				FrontendPort:           pulumi.Int(80),
//				Protocol:               pulumi.String("http"),
//				Bandwidth:              pulumi.Int(10),
//				StickySession:          pulumi.String("on"),
//				StickySessionType:      pulumi.String("insert"),
//				CookieTimeout:          pulumi.Int(86400),
//				Cookie:                 pulumi.String("tfslblistenercookie"),
//				HealthCheck:            pulumi.String("on"),
//				HealthCheckDomain:      pulumi.String("ali.com"),
//				HealthCheckUri:         pulumi.String("/cons"),
//				HealthCheckConnectPort: pulumi.Int(20),
//				HealthyThreshold:       pulumi.Int(8),
//				UnhealthyThreshold:     pulumi.Int(8),
//				HealthCheckTimeout:     pulumi.Int(8),
//				HealthCheckInterval:    pulumi.Int(5),
//				HealthCheckHttpCode:    pulumi.String("http_2xx,http_3xx"),
//				XForwardedFor: &slb.ListenerXForwardedForArgs{
//					RetriveSlbIp: pulumi.Bool(true),
//					RetriveSlbId: pulumi.Bool(true),
//				},
//				AclStatus: pulumi.String("on"),
//				AclType:   pulumi.String("white"),
//				AclIds: pulumi.StringArray{
//					listenerAcl.ID(),
//				},
//				RequestTimeout: pulumi.Int(80),
//				IdleTimeout:    pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = slb.NewAclEntryAttachment(ctx, "first", &slb.AclEntryAttachmentArgs{
//				AclId:   listenerAcl.ID(),
//				Entry:   pulumi.String("10.10.10.0/24"),
//				Comment: pulumi.String("first"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = slb.NewAclEntryAttachment(ctx, "second", &slb.AclEntryAttachmentArgs{
//				AclId:   listenerAcl.ID(),
//				Entry:   pulumi.String("168.10.10.0/24"),
//				Comment: pulumi.String("second"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Classic Load Balancer (SLB) Load Balancer Listener can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:slb/listener:Listener example <load_balancer_id>:<protocol>:<frontend_port>
// ```
//
// ```sh
// $ pulumi import alicloud:slb/listener:Listener example <load_balancer_id>:<frontend_port>
// ```
type Listener struct {
	pulumi.CustomResourceState

	// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
	AclId                      pulumi.StringOutput      `pulumi:"aclId"`
	AclIds                     pulumi.StringArrayOutput `pulumi:"aclIds"`
	AclStatus                  pulumi.StringPtrOutput   `pulumi:"aclStatus"`
	AclType                    pulumi.StringPtrOutput   `pulumi:"aclType"`
	BackendPort                pulumi.IntPtrOutput      `pulumi:"backendPort"`
	Bandwidth                  pulumi.IntOutput         `pulumi:"bandwidth"`
	CaCertificateId            pulumi.StringPtrOutput   `pulumi:"caCertificateId"`
	Cookie                     pulumi.StringPtrOutput   `pulumi:"cookie"`
	CookieTimeout              pulumi.IntPtrOutput      `pulumi:"cookieTimeout"`
	DeleteProtectionValidation pulumi.BoolPtrOutput     `pulumi:"deleteProtectionValidation"`
	Description                pulumi.StringPtrOutput   `pulumi:"description"`
	EnableHttp2                pulumi.StringPtrOutput   `pulumi:"enableHttp2"`
	EstablishedTimeout         pulumi.IntPtrOutput      `pulumi:"establishedTimeout"`
	ForwardPort                pulumi.IntPtrOutput      `pulumi:"forwardPort"`
	FrontendPort               pulumi.IntOutput         `pulumi:"frontendPort"`
	Gzip                       pulumi.BoolPtrOutput     `pulumi:"gzip"`
	HealthCheck                pulumi.StringPtrOutput   `pulumi:"healthCheck"`
	HealthCheckConnectPort     pulumi.IntOutput         `pulumi:"healthCheckConnectPort"`
	HealthCheckDomain          pulumi.StringPtrOutput   `pulumi:"healthCheckDomain"`
	HealthCheckHttpCode        pulumi.StringOutput      `pulumi:"healthCheckHttpCode"`
	HealthCheckInterval        pulumi.IntPtrOutput      `pulumi:"healthCheckInterval"`
	HealthCheckMethod          pulumi.StringOutput      `pulumi:"healthCheckMethod"`
	HealthCheckTimeout         pulumi.IntPtrOutput      `pulumi:"healthCheckTimeout"`
	HealthCheckType            pulumi.StringPtrOutput   `pulumi:"healthCheckType"`
	HealthCheckUri             pulumi.StringPtrOutput   `pulumi:"healthCheckUri"`
	HealthyThreshold           pulumi.IntPtrOutput      `pulumi:"healthyThreshold"`
	IdleTimeout                pulumi.IntPtrOutput      `pulumi:"idleTimeout"`
	ListenerForward            pulumi.StringOutput      `pulumi:"listenerForward"`
	LoadBalancerId             pulumi.StringOutput      `pulumi:"loadBalancerId"`
	MasterSlaveServerGroupId   pulumi.StringPtrOutput   `pulumi:"masterSlaveServerGroupId"`
	PersistenceTimeout         pulumi.IntPtrOutput      `pulumi:"persistenceTimeout"`
	Protocol                   pulumi.StringOutput      `pulumi:"protocol"`
	ProxyProtocolV2Enabled     pulumi.BoolOutput        `pulumi:"proxyProtocolV2Enabled"`
	RequestTimeout             pulumi.IntPtrOutput      `pulumi:"requestTimeout"`
	Scheduler                  pulumi.StringPtrOutput   `pulumi:"scheduler"`
	ServerCertificateId        pulumi.StringOutput      `pulumi:"serverCertificateId"`
	ServerGroupId              pulumi.StringPtrOutput   `pulumi:"serverGroupId"`
	// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
	SslCertificateId   pulumi.StringOutput    `pulumi:"sslCertificateId"`
	StickySession      pulumi.StringPtrOutput `pulumi:"stickySession"`
	StickySessionType  pulumi.StringPtrOutput `pulumi:"stickySessionType"`
	TlsCipherPolicy    pulumi.StringPtrOutput `pulumi:"tlsCipherPolicy"`
	UnhealthyThreshold pulumi.IntPtrOutput    `pulumi:"unhealthyThreshold"`
	// Whether to set additional HTTP Header field "X-Forwarded-For".
	XForwardedFor ListenerXForwardedForOutput `pulumi:"xForwardedFor"`
}

// NewListener registers a new resource with the given unique name, arguments, and options.
func NewListener(ctx *pulumi.Context,
	name string, args *ListenerArgs, opts ...pulumi.ResourceOption) (*Listener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FrontendPort == nil {
		return nil, errors.New("invalid value for required argument 'FrontendPort'")
	}
	if args.LoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Listener
	err := ctx.RegisterResource("alicloud:slb/listener:Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetListener gets an existing Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ListenerState, opts ...pulumi.ResourceOption) (*Listener, error) {
	var resource Listener
	err := ctx.ReadResource("alicloud:slb/listener:Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Listener resources.
type listenerState struct {
	// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
	AclId                      *string  `pulumi:"aclId"`
	AclIds                     []string `pulumi:"aclIds"`
	AclStatus                  *string  `pulumi:"aclStatus"`
	AclType                    *string  `pulumi:"aclType"`
	BackendPort                *int     `pulumi:"backendPort"`
	Bandwidth                  *int     `pulumi:"bandwidth"`
	CaCertificateId            *string  `pulumi:"caCertificateId"`
	Cookie                     *string  `pulumi:"cookie"`
	CookieTimeout              *int     `pulumi:"cookieTimeout"`
	DeleteProtectionValidation *bool    `pulumi:"deleteProtectionValidation"`
	Description                *string  `pulumi:"description"`
	EnableHttp2                *string  `pulumi:"enableHttp2"`
	EstablishedTimeout         *int     `pulumi:"establishedTimeout"`
	ForwardPort                *int     `pulumi:"forwardPort"`
	FrontendPort               *int     `pulumi:"frontendPort"`
	Gzip                       *bool    `pulumi:"gzip"`
	HealthCheck                *string  `pulumi:"healthCheck"`
	HealthCheckConnectPort     *int     `pulumi:"healthCheckConnectPort"`
	HealthCheckDomain          *string  `pulumi:"healthCheckDomain"`
	HealthCheckHttpCode        *string  `pulumi:"healthCheckHttpCode"`
	HealthCheckInterval        *int     `pulumi:"healthCheckInterval"`
	HealthCheckMethod          *string  `pulumi:"healthCheckMethod"`
	HealthCheckTimeout         *int     `pulumi:"healthCheckTimeout"`
	HealthCheckType            *string  `pulumi:"healthCheckType"`
	HealthCheckUri             *string  `pulumi:"healthCheckUri"`
	HealthyThreshold           *int     `pulumi:"healthyThreshold"`
	IdleTimeout                *int     `pulumi:"idleTimeout"`
	ListenerForward            *string  `pulumi:"listenerForward"`
	LoadBalancerId             *string  `pulumi:"loadBalancerId"`
	MasterSlaveServerGroupId   *string  `pulumi:"masterSlaveServerGroupId"`
	PersistenceTimeout         *int     `pulumi:"persistenceTimeout"`
	Protocol                   *string  `pulumi:"protocol"`
	ProxyProtocolV2Enabled     *bool    `pulumi:"proxyProtocolV2Enabled"`
	RequestTimeout             *int     `pulumi:"requestTimeout"`
	Scheduler                  *string  `pulumi:"scheduler"`
	ServerCertificateId        *string  `pulumi:"serverCertificateId"`
	ServerGroupId              *string  `pulumi:"serverGroupId"`
	// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
	SslCertificateId   *string `pulumi:"sslCertificateId"`
	StickySession      *string `pulumi:"stickySession"`
	StickySessionType  *string `pulumi:"stickySessionType"`
	TlsCipherPolicy    *string `pulumi:"tlsCipherPolicy"`
	UnhealthyThreshold *int    `pulumi:"unhealthyThreshold"`
	// Whether to set additional HTTP Header field "X-Forwarded-For".
	XForwardedFor *ListenerXForwardedFor `pulumi:"xForwardedFor"`
}

type ListenerState struct {
	// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
	AclId                      pulumi.StringPtrInput
	AclIds                     pulumi.StringArrayInput
	AclStatus                  pulumi.StringPtrInput
	AclType                    pulumi.StringPtrInput
	BackendPort                pulumi.IntPtrInput
	Bandwidth                  pulumi.IntPtrInput
	CaCertificateId            pulumi.StringPtrInput
	Cookie                     pulumi.StringPtrInput
	CookieTimeout              pulumi.IntPtrInput
	DeleteProtectionValidation pulumi.BoolPtrInput
	Description                pulumi.StringPtrInput
	EnableHttp2                pulumi.StringPtrInput
	EstablishedTimeout         pulumi.IntPtrInput
	ForwardPort                pulumi.IntPtrInput
	FrontendPort               pulumi.IntPtrInput
	Gzip                       pulumi.BoolPtrInput
	HealthCheck                pulumi.StringPtrInput
	HealthCheckConnectPort     pulumi.IntPtrInput
	HealthCheckDomain          pulumi.StringPtrInput
	HealthCheckHttpCode        pulumi.StringPtrInput
	HealthCheckInterval        pulumi.IntPtrInput
	HealthCheckMethod          pulumi.StringPtrInput
	HealthCheckTimeout         pulumi.IntPtrInput
	HealthCheckType            pulumi.StringPtrInput
	HealthCheckUri             pulumi.StringPtrInput
	HealthyThreshold           pulumi.IntPtrInput
	IdleTimeout                pulumi.IntPtrInput
	ListenerForward            pulumi.StringPtrInput
	LoadBalancerId             pulumi.StringPtrInput
	MasterSlaveServerGroupId   pulumi.StringPtrInput
	PersistenceTimeout         pulumi.IntPtrInput
	Protocol                   pulumi.StringPtrInput
	ProxyProtocolV2Enabled     pulumi.BoolPtrInput
	RequestTimeout             pulumi.IntPtrInput
	Scheduler                  pulumi.StringPtrInput
	ServerCertificateId        pulumi.StringPtrInput
	ServerGroupId              pulumi.StringPtrInput
	// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
	SslCertificateId   pulumi.StringPtrInput
	StickySession      pulumi.StringPtrInput
	StickySessionType  pulumi.StringPtrInput
	TlsCipherPolicy    pulumi.StringPtrInput
	UnhealthyThreshold pulumi.IntPtrInput
	// Whether to set additional HTTP Header field "X-Forwarded-For".
	XForwardedFor ListenerXForwardedForPtrInput
}

func (ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerState)(nil)).Elem()
}

type listenerArgs struct {
	// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
	AclId                      *string  `pulumi:"aclId"`
	AclIds                     []string `pulumi:"aclIds"`
	AclStatus                  *string  `pulumi:"aclStatus"`
	AclType                    *string  `pulumi:"aclType"`
	BackendPort                *int     `pulumi:"backendPort"`
	Bandwidth                  *int     `pulumi:"bandwidth"`
	CaCertificateId            *string  `pulumi:"caCertificateId"`
	Cookie                     *string  `pulumi:"cookie"`
	CookieTimeout              *int     `pulumi:"cookieTimeout"`
	DeleteProtectionValidation *bool    `pulumi:"deleteProtectionValidation"`
	Description                *string  `pulumi:"description"`
	EnableHttp2                *string  `pulumi:"enableHttp2"`
	EstablishedTimeout         *int     `pulumi:"establishedTimeout"`
	ForwardPort                *int     `pulumi:"forwardPort"`
	FrontendPort               int      `pulumi:"frontendPort"`
	Gzip                       *bool    `pulumi:"gzip"`
	HealthCheck                *string  `pulumi:"healthCheck"`
	HealthCheckConnectPort     *int     `pulumi:"healthCheckConnectPort"`
	HealthCheckDomain          *string  `pulumi:"healthCheckDomain"`
	HealthCheckHttpCode        *string  `pulumi:"healthCheckHttpCode"`
	HealthCheckInterval        *int     `pulumi:"healthCheckInterval"`
	HealthCheckMethod          *string  `pulumi:"healthCheckMethod"`
	HealthCheckTimeout         *int     `pulumi:"healthCheckTimeout"`
	HealthCheckType            *string  `pulumi:"healthCheckType"`
	HealthCheckUri             *string  `pulumi:"healthCheckUri"`
	HealthyThreshold           *int     `pulumi:"healthyThreshold"`
	IdleTimeout                *int     `pulumi:"idleTimeout"`
	ListenerForward            *string  `pulumi:"listenerForward"`
	LoadBalancerId             string   `pulumi:"loadBalancerId"`
	MasterSlaveServerGroupId   *string  `pulumi:"masterSlaveServerGroupId"`
	PersistenceTimeout         *int     `pulumi:"persistenceTimeout"`
	Protocol                   string   `pulumi:"protocol"`
	ProxyProtocolV2Enabled     *bool    `pulumi:"proxyProtocolV2Enabled"`
	RequestTimeout             *int     `pulumi:"requestTimeout"`
	Scheduler                  *string  `pulumi:"scheduler"`
	ServerCertificateId        *string  `pulumi:"serverCertificateId"`
	ServerGroupId              *string  `pulumi:"serverGroupId"`
	// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
	SslCertificateId   *string `pulumi:"sslCertificateId"`
	StickySession      *string `pulumi:"stickySession"`
	StickySessionType  *string `pulumi:"stickySessionType"`
	TlsCipherPolicy    *string `pulumi:"tlsCipherPolicy"`
	UnhealthyThreshold *int    `pulumi:"unhealthyThreshold"`
	// Whether to set additional HTTP Header field "X-Forwarded-For".
	XForwardedFor *ListenerXForwardedFor `pulumi:"xForwardedFor"`
}

// The set of arguments for constructing a Listener resource.
type ListenerArgs struct {
	// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
	AclId                      pulumi.StringPtrInput
	AclIds                     pulumi.StringArrayInput
	AclStatus                  pulumi.StringPtrInput
	AclType                    pulumi.StringPtrInput
	BackendPort                pulumi.IntPtrInput
	Bandwidth                  pulumi.IntPtrInput
	CaCertificateId            pulumi.StringPtrInput
	Cookie                     pulumi.StringPtrInput
	CookieTimeout              pulumi.IntPtrInput
	DeleteProtectionValidation pulumi.BoolPtrInput
	Description                pulumi.StringPtrInput
	EnableHttp2                pulumi.StringPtrInput
	EstablishedTimeout         pulumi.IntPtrInput
	ForwardPort                pulumi.IntPtrInput
	FrontendPort               pulumi.IntInput
	Gzip                       pulumi.BoolPtrInput
	HealthCheck                pulumi.StringPtrInput
	HealthCheckConnectPort     pulumi.IntPtrInput
	HealthCheckDomain          pulumi.StringPtrInput
	HealthCheckHttpCode        pulumi.StringPtrInput
	HealthCheckInterval        pulumi.IntPtrInput
	HealthCheckMethod          pulumi.StringPtrInput
	HealthCheckTimeout         pulumi.IntPtrInput
	HealthCheckType            pulumi.StringPtrInput
	HealthCheckUri             pulumi.StringPtrInput
	HealthyThreshold           pulumi.IntPtrInput
	IdleTimeout                pulumi.IntPtrInput
	ListenerForward            pulumi.StringPtrInput
	LoadBalancerId             pulumi.StringInput
	MasterSlaveServerGroupId   pulumi.StringPtrInput
	PersistenceTimeout         pulumi.IntPtrInput
	Protocol                   pulumi.StringInput
	ProxyProtocolV2Enabled     pulumi.BoolPtrInput
	RequestTimeout             pulumi.IntPtrInput
	Scheduler                  pulumi.StringPtrInput
	ServerCertificateId        pulumi.StringPtrInput
	ServerGroupId              pulumi.StringPtrInput
	// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
	SslCertificateId   pulumi.StringPtrInput
	StickySession      pulumi.StringPtrInput
	StickySessionType  pulumi.StringPtrInput
	TlsCipherPolicy    pulumi.StringPtrInput
	UnhealthyThreshold pulumi.IntPtrInput
	// Whether to set additional HTTP Header field "X-Forwarded-For".
	XForwardedFor ListenerXForwardedForPtrInput
}

func (ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerArgs)(nil)).Elem()
}

type ListenerInput interface {
	pulumi.Input

	ToListenerOutput() ListenerOutput
	ToListenerOutputWithContext(ctx context.Context) ListenerOutput
}

func (*Listener) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (i *Listener) ToListenerOutput() ListenerOutput {
	return i.ToListenerOutputWithContext(context.Background())
}

func (i *Listener) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerOutput)
}

// ListenerArrayInput is an input type that accepts ListenerArray and ListenerArrayOutput values.
// You can construct a concrete instance of `ListenerArrayInput` via:
//
//	ListenerArray{ ListenerArgs{...} }
type ListenerArrayInput interface {
	pulumi.Input

	ToListenerArrayOutput() ListenerArrayOutput
	ToListenerArrayOutputWithContext(context.Context) ListenerArrayOutput
}

type ListenerArray []ListenerInput

func (ListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (i ListenerArray) ToListenerArrayOutput() ListenerArrayOutput {
	return i.ToListenerArrayOutputWithContext(context.Background())
}

func (i ListenerArray) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerArrayOutput)
}

// ListenerMapInput is an input type that accepts ListenerMap and ListenerMapOutput values.
// You can construct a concrete instance of `ListenerMapInput` via:
//
//	ListenerMap{ "key": ListenerArgs{...} }
type ListenerMapInput interface {
	pulumi.Input

	ToListenerMapOutput() ListenerMapOutput
	ToListenerMapOutputWithContext(context.Context) ListenerMapOutput
}

type ListenerMap map[string]ListenerInput

func (ListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (i ListenerMap) ToListenerMapOutput() ListenerMapOutput {
	return i.ToListenerMapOutputWithContext(context.Background())
}

func (i ListenerMap) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMapOutput)
}

type ListenerOutput struct{ *pulumi.OutputState }

func (ListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (o ListenerOutput) ToListenerOutput() ListenerOutput {
	return o
}

func (o ListenerOutput) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return o
}

// Deprecated: Field `aclId` has been deprecated from provider version 1.249.0. New field `aclIds` instead.
func (o ListenerOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.AclId }).(pulumi.StringOutput)
}

func (o ListenerOutput) AclIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringArrayOutput { return v.AclIds }).(pulumi.StringArrayOutput)
}

func (o ListenerOutput) AclStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.AclStatus }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) AclType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.AclType }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.BackendPort }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o ListenerOutput) CaCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.CaCertificateId }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.Cookie }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) CookieTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.CookieTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) DeleteProtectionValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolPtrOutput { return v.DeleteProtectionValidation }).(pulumi.BoolPtrOutput)
}

func (o ListenerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) EnableHttp2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.EnableHttp2 }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) EstablishedTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.EstablishedTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) ForwardPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.ForwardPort }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntOutput { return v.FrontendPort }).(pulumi.IntOutput)
}

func (o ListenerOutput) Gzip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolPtrOutput { return v.Gzip }).(pulumi.BoolPtrOutput)
}

func (o ListenerOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) HealthCheckConnectPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntOutput { return v.HealthCheckConnectPort }).(pulumi.IntOutput)
}

func (o ListenerOutput) HealthCheckDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.HealthCheckDomain }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) HealthCheckHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.HealthCheckHttpCode }).(pulumi.StringOutput)
}

func (o ListenerOutput) HealthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.HealthCheckInterval }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

func (o ListenerOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.HealthCheckTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) HealthCheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.HealthCheckType }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) HealthCheckUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.HealthCheckUri }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.IdleTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) ListenerForward() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.ListenerForward }).(pulumi.StringOutput)
}

func (o ListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o ListenerOutput) MasterSlaveServerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.MasterSlaveServerGroupId }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) PersistenceTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.PersistenceTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o ListenerOutput) ProxyProtocolV2Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolOutput { return v.ProxyProtocolV2Enabled }).(pulumi.BoolOutput)
}

func (o ListenerOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerOutput) Scheduler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.Scheduler }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) ServerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.ServerCertificateId }).(pulumi.StringOutput)
}

func (o ListenerOutput) ServerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.ServerGroupId }).(pulumi.StringPtrOutput)
}

// Deprecated: Field 'ssl_certificate_id' has been deprecated from 1.59.0 and using 'server_certificate_id' instead.
func (o ListenerOutput) SslCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.SslCertificateId }).(pulumi.StringOutput)
}

func (o ListenerOutput) StickySession() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.StickySession }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) StickySessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.StickySessionType }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) TlsCipherPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.TlsCipherPolicy }).(pulumi.StringPtrOutput)
}

func (o ListenerOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

// Whether to set additional HTTP Header field "X-Forwarded-For".
func (o ListenerOutput) XForwardedFor() ListenerXForwardedForOutput {
	return o.ApplyT(func(v *Listener) ListenerXForwardedForOutput { return v.XForwardedFor }).(ListenerXForwardedForOutput)
}

type ListenerArrayOutput struct{ *pulumi.OutputState }

func (ListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (o ListenerArrayOutput) ToListenerArrayOutput() ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) Index(i pulumi.IntInput) ListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].([]*Listener)[vs[1].(int)]
	}).(ListenerOutput)
}

type ListenerMapOutput struct{ *pulumi.OutputState }

func (ListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (o ListenerMapOutput) ToListenerMapOutput() ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) MapIndex(k pulumi.StringInput) ListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].(map[string]*Listener)[vs[1].(string)]
	}).(ListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerInput)(nil)).Elem(), &Listener{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerArrayInput)(nil)).Elem(), ListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMapInput)(nil)).Elem(), ListenerMap{})
	pulumi.RegisterOutputType(ListenerOutput{})
	pulumi.RegisterOutputType(ListenerArrayOutput{})
	pulumi.RegisterOutputType(ListenerMapOutput{})
}
