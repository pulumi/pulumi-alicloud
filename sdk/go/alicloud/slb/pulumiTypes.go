// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AclEntryList struct {
	Comment *string `pulumi:"comment"`
	Entry   string  `pulumi:"entry"`
}

// AclEntryListInput is an input type that accepts AclEntryListArgs and AclEntryListOutput values.
// You can construct a concrete instance of `AclEntryListInput` via:
//
//          AclEntryListArgs{...}
type AclEntryListInput interface {
	pulumi.Input

	ToAclEntryListOutput() AclEntryListOutput
	ToAclEntryListOutputWithContext(context.Context) AclEntryListOutput
}

type AclEntryListArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Entry   pulumi.StringInput    `pulumi:"entry"`
}

func (AclEntryListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclEntryList)(nil)).Elem()
}

func (i AclEntryListArgs) ToAclEntryListOutput() AclEntryListOutput {
	return i.ToAclEntryListOutputWithContext(context.Background())
}

func (i AclEntryListArgs) ToAclEntryListOutputWithContext(ctx context.Context) AclEntryListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclEntryListOutput)
}

// AclEntryListArrayInput is an input type that accepts AclEntryListArray and AclEntryListArrayOutput values.
// You can construct a concrete instance of `AclEntryListArrayInput` via:
//
//          AclEntryListArray{ AclEntryListArgs{...} }
type AclEntryListArrayInput interface {
	pulumi.Input

	ToAclEntryListArrayOutput() AclEntryListArrayOutput
	ToAclEntryListArrayOutputWithContext(context.Context) AclEntryListArrayOutput
}

type AclEntryListArray []AclEntryListInput

func (AclEntryListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclEntryList)(nil)).Elem()
}

func (i AclEntryListArray) ToAclEntryListArrayOutput() AclEntryListArrayOutput {
	return i.ToAclEntryListArrayOutputWithContext(context.Background())
}

func (i AclEntryListArray) ToAclEntryListArrayOutputWithContext(ctx context.Context) AclEntryListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclEntryListArrayOutput)
}

type AclEntryListOutput struct{ *pulumi.OutputState }

func (AclEntryListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclEntryList)(nil)).Elem()
}

func (o AclEntryListOutput) ToAclEntryListOutput() AclEntryListOutput {
	return o
}

func (o AclEntryListOutput) ToAclEntryListOutputWithContext(ctx context.Context) AclEntryListOutput {
	return o
}

func (o AclEntryListOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclEntryList) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o AclEntryListOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v AclEntryList) string { return v.Entry }).(pulumi.StringOutput)
}

type AclEntryListArrayOutput struct{ *pulumi.OutputState }

func (AclEntryListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclEntryList)(nil)).Elem()
}

func (o AclEntryListArrayOutput) ToAclEntryListArrayOutput() AclEntryListArrayOutput {
	return o
}

func (o AclEntryListArrayOutput) ToAclEntryListArrayOutputWithContext(ctx context.Context) AclEntryListArrayOutput {
	return o
}

func (o AclEntryListArrayOutput) Index(i pulumi.IntInput) AclEntryListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclEntryList {
		return vs[0].([]AclEntryList)[vs[1].(int)]
	}).(AclEntryListOutput)
}

type BackendServerBackendServer struct {
	ServerId string  `pulumi:"serverId"`
	ServerIp *string `pulumi:"serverIp"`
	Type     *string `pulumi:"type"`
	Weight   int     `pulumi:"weight"`
}

// BackendServerBackendServerInput is an input type that accepts BackendServerBackendServerArgs and BackendServerBackendServerOutput values.
// You can construct a concrete instance of `BackendServerBackendServerInput` via:
//
//          BackendServerBackendServerArgs{...}
type BackendServerBackendServerInput interface {
	pulumi.Input

	ToBackendServerBackendServerOutput() BackendServerBackendServerOutput
	ToBackendServerBackendServerOutputWithContext(context.Context) BackendServerBackendServerOutput
}

type BackendServerBackendServerArgs struct {
	ServerId pulumi.StringInput    `pulumi:"serverId"`
	ServerIp pulumi.StringPtrInput `pulumi:"serverIp"`
	Type     pulumi.StringPtrInput `pulumi:"type"`
	Weight   pulumi.IntInput       `pulumi:"weight"`
}

func (BackendServerBackendServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServerBackendServer)(nil)).Elem()
}

func (i BackendServerBackendServerArgs) ToBackendServerBackendServerOutput() BackendServerBackendServerOutput {
	return i.ToBackendServerBackendServerOutputWithContext(context.Background())
}

func (i BackendServerBackendServerArgs) ToBackendServerBackendServerOutputWithContext(ctx context.Context) BackendServerBackendServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServerBackendServerOutput)
}

// BackendServerBackendServerArrayInput is an input type that accepts BackendServerBackendServerArray and BackendServerBackendServerArrayOutput values.
// You can construct a concrete instance of `BackendServerBackendServerArrayInput` via:
//
//          BackendServerBackendServerArray{ BackendServerBackendServerArgs{...} }
type BackendServerBackendServerArrayInput interface {
	pulumi.Input

	ToBackendServerBackendServerArrayOutput() BackendServerBackendServerArrayOutput
	ToBackendServerBackendServerArrayOutputWithContext(context.Context) BackendServerBackendServerArrayOutput
}

type BackendServerBackendServerArray []BackendServerBackendServerInput

func (BackendServerBackendServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServerBackendServer)(nil)).Elem()
}

func (i BackendServerBackendServerArray) ToBackendServerBackendServerArrayOutput() BackendServerBackendServerArrayOutput {
	return i.ToBackendServerBackendServerArrayOutputWithContext(context.Background())
}

func (i BackendServerBackendServerArray) ToBackendServerBackendServerArrayOutputWithContext(ctx context.Context) BackendServerBackendServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServerBackendServerArrayOutput)
}

type BackendServerBackendServerOutput struct{ *pulumi.OutputState }

func (BackendServerBackendServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServerBackendServer)(nil)).Elem()
}

func (o BackendServerBackendServerOutput) ToBackendServerBackendServerOutput() BackendServerBackendServerOutput {
	return o
}

func (o BackendServerBackendServerOutput) ToBackendServerBackendServerOutputWithContext(ctx context.Context) BackendServerBackendServerOutput {
	return o
}

func (o BackendServerBackendServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServerBackendServer) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o BackendServerBackendServerOutput) ServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendServerBackendServer) *string { return v.ServerIp }).(pulumi.StringPtrOutput)
}

func (o BackendServerBackendServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendServerBackendServer) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o BackendServerBackendServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BackendServerBackendServer) int { return v.Weight }).(pulumi.IntOutput)
}

type BackendServerBackendServerArrayOutput struct{ *pulumi.OutputState }

func (BackendServerBackendServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServerBackendServer)(nil)).Elem()
}

func (o BackendServerBackendServerArrayOutput) ToBackendServerBackendServerArrayOutput() BackendServerBackendServerArrayOutput {
	return o
}

func (o BackendServerBackendServerArrayOutput) ToBackendServerBackendServerArrayOutputWithContext(ctx context.Context) BackendServerBackendServerArrayOutput {
	return o
}

func (o BackendServerBackendServerArrayOutput) Index(i pulumi.IntInput) BackendServerBackendServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendServerBackendServer {
		return vs[0].([]BackendServerBackendServer)[vs[1].(int)]
	}).(BackendServerBackendServerOutput)
}

type ListenerXForwardedFor struct {
	RetriveClientIp *bool `pulumi:"retriveClientIp"`
	// Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
	RetriveSlbId *bool `pulumi:"retriveSlbId"`
	// Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
	RetriveSlbIp *bool `pulumi:"retriveSlbIp"`
	// Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
	RetriveSlbProto *bool `pulumi:"retriveSlbProto"`
}

// ListenerXForwardedForInput is an input type that accepts ListenerXForwardedForArgs and ListenerXForwardedForOutput values.
// You can construct a concrete instance of `ListenerXForwardedForInput` via:
//
//          ListenerXForwardedForArgs{...}
type ListenerXForwardedForInput interface {
	pulumi.Input

	ToListenerXForwardedForOutput() ListenerXForwardedForOutput
	ToListenerXForwardedForOutputWithContext(context.Context) ListenerXForwardedForOutput
}

type ListenerXForwardedForArgs struct {
	RetriveClientIp pulumi.BoolPtrInput `pulumi:"retriveClientIp"`
	// Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
	RetriveSlbId pulumi.BoolPtrInput `pulumi:"retriveSlbId"`
	// Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
	RetriveSlbIp pulumi.BoolPtrInput `pulumi:"retriveSlbIp"`
	// Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
	RetriveSlbProto pulumi.BoolPtrInput `pulumi:"retriveSlbProto"`
}

func (ListenerXForwardedForArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerXForwardedFor)(nil)).Elem()
}

func (i ListenerXForwardedForArgs) ToListenerXForwardedForOutput() ListenerXForwardedForOutput {
	return i.ToListenerXForwardedForOutputWithContext(context.Background())
}

func (i ListenerXForwardedForArgs) ToListenerXForwardedForOutputWithContext(ctx context.Context) ListenerXForwardedForOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerXForwardedForOutput)
}

func (i ListenerXForwardedForArgs) ToListenerXForwardedForPtrOutput() ListenerXForwardedForPtrOutput {
	return i.ToListenerXForwardedForPtrOutputWithContext(context.Background())
}

func (i ListenerXForwardedForArgs) ToListenerXForwardedForPtrOutputWithContext(ctx context.Context) ListenerXForwardedForPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerXForwardedForOutput).ToListenerXForwardedForPtrOutputWithContext(ctx)
}

// ListenerXForwardedForPtrInput is an input type that accepts ListenerXForwardedForArgs, ListenerXForwardedForPtr and ListenerXForwardedForPtrOutput values.
// You can construct a concrete instance of `ListenerXForwardedForPtrInput` via:
//
//          ListenerXForwardedForArgs{...}
//
//  or:
//
//          nil
type ListenerXForwardedForPtrInput interface {
	pulumi.Input

	ToListenerXForwardedForPtrOutput() ListenerXForwardedForPtrOutput
	ToListenerXForwardedForPtrOutputWithContext(context.Context) ListenerXForwardedForPtrOutput
}

type listenerXForwardedForPtrType ListenerXForwardedForArgs

func ListenerXForwardedForPtr(v *ListenerXForwardedForArgs) ListenerXForwardedForPtrInput {
	return (*listenerXForwardedForPtrType)(v)
}

func (*listenerXForwardedForPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerXForwardedFor)(nil)).Elem()
}

func (i *listenerXForwardedForPtrType) ToListenerXForwardedForPtrOutput() ListenerXForwardedForPtrOutput {
	return i.ToListenerXForwardedForPtrOutputWithContext(context.Background())
}

func (i *listenerXForwardedForPtrType) ToListenerXForwardedForPtrOutputWithContext(ctx context.Context) ListenerXForwardedForPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerXForwardedForPtrOutput)
}

type ListenerXForwardedForOutput struct{ *pulumi.OutputState }

func (ListenerXForwardedForOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerXForwardedFor)(nil)).Elem()
}

func (o ListenerXForwardedForOutput) ToListenerXForwardedForOutput() ListenerXForwardedForOutput {
	return o
}

func (o ListenerXForwardedForOutput) ToListenerXForwardedForOutputWithContext(ctx context.Context) ListenerXForwardedForOutput {
	return o
}

func (o ListenerXForwardedForOutput) ToListenerXForwardedForPtrOutput() ListenerXForwardedForPtrOutput {
	return o.ToListenerXForwardedForPtrOutputWithContext(context.Background())
}

func (o ListenerXForwardedForOutput) ToListenerXForwardedForPtrOutputWithContext(ctx context.Context) ListenerXForwardedForPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerXForwardedFor) *ListenerXForwardedFor {
		return &v
	}).(ListenerXForwardedForPtrOutput)
}

func (o ListenerXForwardedForOutput) RetriveClientIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerXForwardedFor) *bool { return v.RetriveClientIp }).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
func (o ListenerXForwardedForOutput) RetriveSlbId() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerXForwardedFor) *bool { return v.RetriveSlbId }).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
func (o ListenerXForwardedForOutput) RetriveSlbIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerXForwardedFor) *bool { return v.RetriveSlbIp }).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
func (o ListenerXForwardedForOutput) RetriveSlbProto() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerXForwardedFor) *bool { return v.RetriveSlbProto }).(pulumi.BoolPtrOutput)
}

type ListenerXForwardedForPtrOutput struct{ *pulumi.OutputState }

func (ListenerXForwardedForPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerXForwardedFor)(nil)).Elem()
}

func (o ListenerXForwardedForPtrOutput) ToListenerXForwardedForPtrOutput() ListenerXForwardedForPtrOutput {
	return o
}

func (o ListenerXForwardedForPtrOutput) ToListenerXForwardedForPtrOutputWithContext(ctx context.Context) ListenerXForwardedForPtrOutput {
	return o
}

func (o ListenerXForwardedForPtrOutput) Elem() ListenerXForwardedForOutput {
	return o.ApplyT(func(v *ListenerXForwardedFor) ListenerXForwardedFor {
		if v != nil {
			return *v
		}
		var ret ListenerXForwardedFor
		return ret
	}).(ListenerXForwardedForOutput)
}

func (o ListenerXForwardedForPtrOutput) RetriveClientIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerXForwardedFor) *bool {
		if v == nil {
			return nil
		}
		return v.RetriveClientIp
	}).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
func (o ListenerXForwardedForPtrOutput) RetriveSlbId() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerXForwardedFor) *bool {
		if v == nil {
			return nil
		}
		return v.RetriveSlbId
	}).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
func (o ListenerXForwardedForPtrOutput) RetriveSlbIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerXForwardedFor) *bool {
		if v == nil {
			return nil
		}
		return v.RetriveSlbIp
	}).(pulumi.BoolPtrOutput)
}

// Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.
func (o ListenerXForwardedForPtrOutput) RetriveSlbProto() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerXForwardedFor) *bool {
		if v == nil {
			return nil
		}
		return v.RetriveSlbProto
	}).(pulumi.BoolPtrOutput)
}

type MasterSlaveServerGroupServer struct {
	IsBackup   *int    `pulumi:"isBackup"`
	Port       int     `pulumi:"port"`
	ServerId   string  `pulumi:"serverId"`
	ServerType *string `pulumi:"serverType"`
	Type       *string `pulumi:"type"`
	Weight     *int    `pulumi:"weight"`
}

// MasterSlaveServerGroupServerInput is an input type that accepts MasterSlaveServerGroupServerArgs and MasterSlaveServerGroupServerOutput values.
// You can construct a concrete instance of `MasterSlaveServerGroupServerInput` via:
//
//          MasterSlaveServerGroupServerArgs{...}
type MasterSlaveServerGroupServerInput interface {
	pulumi.Input

	ToMasterSlaveServerGroupServerOutput() MasterSlaveServerGroupServerOutput
	ToMasterSlaveServerGroupServerOutputWithContext(context.Context) MasterSlaveServerGroupServerOutput
}

type MasterSlaveServerGroupServerArgs struct {
	IsBackup   pulumi.IntPtrInput    `pulumi:"isBackup"`
	Port       pulumi.IntInput       `pulumi:"port"`
	ServerId   pulumi.StringInput    `pulumi:"serverId"`
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
	Weight     pulumi.IntPtrInput    `pulumi:"weight"`
}

func (MasterSlaveServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterSlaveServerGroupServer)(nil)).Elem()
}

func (i MasterSlaveServerGroupServerArgs) ToMasterSlaveServerGroupServerOutput() MasterSlaveServerGroupServerOutput {
	return i.ToMasterSlaveServerGroupServerOutputWithContext(context.Background())
}

func (i MasterSlaveServerGroupServerArgs) ToMasterSlaveServerGroupServerOutputWithContext(ctx context.Context) MasterSlaveServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterSlaveServerGroupServerOutput)
}

// MasterSlaveServerGroupServerArrayInput is an input type that accepts MasterSlaveServerGroupServerArray and MasterSlaveServerGroupServerArrayOutput values.
// You can construct a concrete instance of `MasterSlaveServerGroupServerArrayInput` via:
//
//          MasterSlaveServerGroupServerArray{ MasterSlaveServerGroupServerArgs{...} }
type MasterSlaveServerGroupServerArrayInput interface {
	pulumi.Input

	ToMasterSlaveServerGroupServerArrayOutput() MasterSlaveServerGroupServerArrayOutput
	ToMasterSlaveServerGroupServerArrayOutputWithContext(context.Context) MasterSlaveServerGroupServerArrayOutput
}

type MasterSlaveServerGroupServerArray []MasterSlaveServerGroupServerInput

func (MasterSlaveServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MasterSlaveServerGroupServer)(nil)).Elem()
}

func (i MasterSlaveServerGroupServerArray) ToMasterSlaveServerGroupServerArrayOutput() MasterSlaveServerGroupServerArrayOutput {
	return i.ToMasterSlaveServerGroupServerArrayOutputWithContext(context.Background())
}

func (i MasterSlaveServerGroupServerArray) ToMasterSlaveServerGroupServerArrayOutputWithContext(ctx context.Context) MasterSlaveServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterSlaveServerGroupServerArrayOutput)
}

type MasterSlaveServerGroupServerOutput struct{ *pulumi.OutputState }

func (MasterSlaveServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterSlaveServerGroupServer)(nil)).Elem()
}

func (o MasterSlaveServerGroupServerOutput) ToMasterSlaveServerGroupServerOutput() MasterSlaveServerGroupServerOutput {
	return o
}

func (o MasterSlaveServerGroupServerOutput) ToMasterSlaveServerGroupServerOutputWithContext(ctx context.Context) MasterSlaveServerGroupServerOutput {
	return o
}

func (o MasterSlaveServerGroupServerOutput) IsBackup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) *int { return v.IsBackup }).(pulumi.IntPtrOutput)
}

func (o MasterSlaveServerGroupServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) int { return v.Port }).(pulumi.IntOutput)
}

func (o MasterSlaveServerGroupServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o MasterSlaveServerGroupServerOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

func (o MasterSlaveServerGroupServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o MasterSlaveServerGroupServerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MasterSlaveServerGroupServer) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type MasterSlaveServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (MasterSlaveServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MasterSlaveServerGroupServer)(nil)).Elem()
}

func (o MasterSlaveServerGroupServerArrayOutput) ToMasterSlaveServerGroupServerArrayOutput() MasterSlaveServerGroupServerArrayOutput {
	return o
}

func (o MasterSlaveServerGroupServerArrayOutput) ToMasterSlaveServerGroupServerArrayOutputWithContext(ctx context.Context) MasterSlaveServerGroupServerArrayOutput {
	return o
}

func (o MasterSlaveServerGroupServerArrayOutput) Index(i pulumi.IntInput) MasterSlaveServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MasterSlaveServerGroupServer {
		return vs[0].([]MasterSlaveServerGroupServer)[vs[1].(int)]
	}).(MasterSlaveServerGroupServerOutput)
}

type ServerGroupServer struct {
	Port      int      `pulumi:"port"`
	ServerIds []string `pulumi:"serverIds"`
	Type      *string  `pulumi:"type"`
	Weight    *int     `pulumi:"weight"`
}

// ServerGroupServerInput is an input type that accepts ServerGroupServerArgs and ServerGroupServerOutput values.
// You can construct a concrete instance of `ServerGroupServerInput` via:
//
//          ServerGroupServerArgs{...}
type ServerGroupServerInput interface {
	pulumi.Input

	ToServerGroupServerOutput() ServerGroupServerOutput
	ToServerGroupServerOutputWithContext(context.Context) ServerGroupServerOutput
}

type ServerGroupServerArgs struct {
	Port      pulumi.IntInput         `pulumi:"port"`
	ServerIds pulumi.StringArrayInput `pulumi:"serverIds"`
	Type      pulumi.StringPtrInput   `pulumi:"type"`
	Weight    pulumi.IntPtrInput      `pulumi:"weight"`
}

func (ServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServer)(nil)).Elem()
}

func (i ServerGroupServerArgs) ToServerGroupServerOutput() ServerGroupServerOutput {
	return i.ToServerGroupServerOutputWithContext(context.Background())
}

func (i ServerGroupServerArgs) ToServerGroupServerOutputWithContext(ctx context.Context) ServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServerOutput)
}

// ServerGroupServerArrayInput is an input type that accepts ServerGroupServerArray and ServerGroupServerArrayOutput values.
// You can construct a concrete instance of `ServerGroupServerArrayInput` via:
//
//          ServerGroupServerArray{ ServerGroupServerArgs{...} }
type ServerGroupServerArrayInput interface {
	pulumi.Input

	ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput
	ToServerGroupServerArrayOutputWithContext(context.Context) ServerGroupServerArrayOutput
}

type ServerGroupServerArray []ServerGroupServerInput

func (ServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServer)(nil)).Elem()
}

func (i ServerGroupServerArray) ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput {
	return i.ToServerGroupServerArrayOutputWithContext(context.Background())
}

func (i ServerGroupServerArray) ToServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServerArrayOutput)
}

type ServerGroupServerOutput struct{ *pulumi.OutputState }

func (ServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServer)(nil)).Elem()
}

func (o ServerGroupServerOutput) ToServerGroupServerOutput() ServerGroupServerOutput {
	return o
}

func (o ServerGroupServerOutput) ToServerGroupServerOutputWithContext(ctx context.Context) ServerGroupServerOutput {
	return o
}

func (o ServerGroupServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupServer) int { return v.Port }).(pulumi.IntOutput)
}

func (o ServerGroupServerOutput) ServerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerGroupServer) []string { return v.ServerIds }).(pulumi.StringArrayOutput)
}

func (o ServerGroupServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ServerGroupServerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServer)(nil)).Elem()
}

func (o ServerGroupServerArrayOutput) ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupServerArrayOutput) ToServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupServerArrayOutput) Index(i pulumi.IntInput) ServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupServer {
		return vs[0].([]ServerGroupServer)[vs[1].(int)]
	}).(ServerGroupServerOutput)
}

type GetAclsAcl struct {
	// A list of entry (IP addresses or CIDR blocks).  Each entry contains two sub-fields as `Entry Block` follows.
	EntryLists []GetAclsAclEntryList `pulumi:"entryLists"`
	// Acl ID.
	Id        string `pulumi:"id"`
	IpVersion string `pulumi:"ipVersion"`
	// Acl name.
	Name string `pulumi:"name"`
	// A list of listener are attached by the acl.  Each listener contains four sub-fields as `Listener Block` follows.
	RelatedListeners []GetAclsAclRelatedListener `pulumi:"relatedListeners"`
	// The Id of resource group which acl belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetAclsAclInput is an input type that accepts GetAclsAclArgs and GetAclsAclOutput values.
// You can construct a concrete instance of `GetAclsAclInput` via:
//
//          GetAclsAclArgs{...}
type GetAclsAclInput interface {
	pulumi.Input

	ToGetAclsAclOutput() GetAclsAclOutput
	ToGetAclsAclOutputWithContext(context.Context) GetAclsAclOutput
}

type GetAclsAclArgs struct {
	// A list of entry (IP addresses or CIDR blocks).  Each entry contains two sub-fields as `Entry Block` follows.
	EntryLists GetAclsAclEntryListArrayInput `pulumi:"entryLists"`
	// Acl ID.
	Id        pulumi.StringInput `pulumi:"id"`
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Acl name.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of listener are attached by the acl.  Each listener contains four sub-fields as `Listener Block` follows.
	RelatedListeners GetAclsAclRelatedListenerArrayInput `pulumi:"relatedListeners"`
	// The Id of resource group which acl belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArgs) ToGetAclsAclOutput() GetAclsAclOutput {
	return i.ToGetAclsAclOutputWithContext(context.Background())
}

func (i GetAclsAclArgs) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclOutput)
}

// GetAclsAclArrayInput is an input type that accepts GetAclsAclArray and GetAclsAclArrayOutput values.
// You can construct a concrete instance of `GetAclsAclArrayInput` via:
//
//          GetAclsAclArray{ GetAclsAclArgs{...} }
type GetAclsAclArrayInput interface {
	pulumi.Input

	ToGetAclsAclArrayOutput() GetAclsAclArrayOutput
	ToGetAclsAclArrayOutputWithContext(context.Context) GetAclsAclArrayOutput
}

type GetAclsAclArray []GetAclsAclInput

func (GetAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return i.ToGetAclsAclArrayOutputWithContext(context.Background())
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclArrayOutput)
}

type GetAclsAclOutput struct{ *pulumi.OutputState }

func (GetAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclOutput) ToGetAclsAclOutput() GetAclsAclOutput {
	return o
}

func (o GetAclsAclOutput) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return o
}

// A list of entry (IP addresses or CIDR blocks).  Each entry contains two sub-fields as `Entry Block` follows.
func (o GetAclsAclOutput) EntryLists() GetAclsAclEntryListArrayOutput {
	return o.ApplyT(func(v GetAclsAcl) []GetAclsAclEntryList { return v.EntryLists }).(GetAclsAclEntryListArrayOutput)
}

// Acl ID.
func (o GetAclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclsAclOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Acl name.
func (o GetAclsAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Name }).(pulumi.StringOutput)
}

// A list of listener are attached by the acl.  Each listener contains four sub-fields as `Listener Block` follows.
func (o GetAclsAclOutput) RelatedListeners() GetAclsAclRelatedListenerArrayOutput {
	return o.ApplyT(func(v GetAclsAcl) []GetAclsAclRelatedListener { return v.RelatedListeners }).(GetAclsAclRelatedListenerArrayOutput)
}

// The Id of resource group which acl belongs.
func (o GetAclsAclOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetAclsAclOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAclsAcl) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) Index(i pulumi.IntInput) GetAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAcl {
		return vs[0].([]GetAclsAcl)[vs[1].(int)]
	}).(GetAclsAclOutput)
}

type GetAclsAclEntryList struct {
	Comment string `pulumi:"comment"`
	Entry   string `pulumi:"entry"`
}

// GetAclsAclEntryListInput is an input type that accepts GetAclsAclEntryListArgs and GetAclsAclEntryListOutput values.
// You can construct a concrete instance of `GetAclsAclEntryListInput` via:
//
//          GetAclsAclEntryListArgs{...}
type GetAclsAclEntryListInput interface {
	pulumi.Input

	ToGetAclsAclEntryListOutput() GetAclsAclEntryListOutput
	ToGetAclsAclEntryListOutputWithContext(context.Context) GetAclsAclEntryListOutput
}

type GetAclsAclEntryListArgs struct {
	Comment pulumi.StringInput `pulumi:"comment"`
	Entry   pulumi.StringInput `pulumi:"entry"`
}

func (GetAclsAclEntryListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclEntryList)(nil)).Elem()
}

func (i GetAclsAclEntryListArgs) ToGetAclsAclEntryListOutput() GetAclsAclEntryListOutput {
	return i.ToGetAclsAclEntryListOutputWithContext(context.Background())
}

func (i GetAclsAclEntryListArgs) ToGetAclsAclEntryListOutputWithContext(ctx context.Context) GetAclsAclEntryListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclEntryListOutput)
}

// GetAclsAclEntryListArrayInput is an input type that accepts GetAclsAclEntryListArray and GetAclsAclEntryListArrayOutput values.
// You can construct a concrete instance of `GetAclsAclEntryListArrayInput` via:
//
//          GetAclsAclEntryListArray{ GetAclsAclEntryListArgs{...} }
type GetAclsAclEntryListArrayInput interface {
	pulumi.Input

	ToGetAclsAclEntryListArrayOutput() GetAclsAclEntryListArrayOutput
	ToGetAclsAclEntryListArrayOutputWithContext(context.Context) GetAclsAclEntryListArrayOutput
}

type GetAclsAclEntryListArray []GetAclsAclEntryListInput

func (GetAclsAclEntryListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclEntryList)(nil)).Elem()
}

func (i GetAclsAclEntryListArray) ToGetAclsAclEntryListArrayOutput() GetAclsAclEntryListArrayOutput {
	return i.ToGetAclsAclEntryListArrayOutputWithContext(context.Background())
}

func (i GetAclsAclEntryListArray) ToGetAclsAclEntryListArrayOutputWithContext(ctx context.Context) GetAclsAclEntryListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclEntryListArrayOutput)
}

type GetAclsAclEntryListOutput struct{ *pulumi.OutputState }

func (GetAclsAclEntryListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclEntryList)(nil)).Elem()
}

func (o GetAclsAclEntryListOutput) ToGetAclsAclEntryListOutput() GetAclsAclEntryListOutput {
	return o
}

func (o GetAclsAclEntryListOutput) ToGetAclsAclEntryListOutputWithContext(ctx context.Context) GetAclsAclEntryListOutput {
	return o
}

func (o GetAclsAclEntryListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclEntryList) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetAclsAclEntryListOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclEntryList) string { return v.Entry }).(pulumi.StringOutput)
}

type GetAclsAclEntryListArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclEntryListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclEntryList)(nil)).Elem()
}

func (o GetAclsAclEntryListArrayOutput) ToGetAclsAclEntryListArrayOutput() GetAclsAclEntryListArrayOutput {
	return o
}

func (o GetAclsAclEntryListArrayOutput) ToGetAclsAclEntryListArrayOutputWithContext(ctx context.Context) GetAclsAclEntryListArrayOutput {
	return o
}

func (o GetAclsAclEntryListArrayOutput) Index(i pulumi.IntInput) GetAclsAclEntryListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclEntryList {
		return vs[0].([]GetAclsAclEntryList)[vs[1].(int)]
	}).(GetAclsAclEntryListOutput)
}

type GetAclsAclRelatedListener struct {
	AclType        string `pulumi:"aclType"`
	FrontendPort   int    `pulumi:"frontendPort"`
	LoadBalancerId string `pulumi:"loadBalancerId"`
	Protocol       string `pulumi:"protocol"`
}

// GetAclsAclRelatedListenerInput is an input type that accepts GetAclsAclRelatedListenerArgs and GetAclsAclRelatedListenerOutput values.
// You can construct a concrete instance of `GetAclsAclRelatedListenerInput` via:
//
//          GetAclsAclRelatedListenerArgs{...}
type GetAclsAclRelatedListenerInput interface {
	pulumi.Input

	ToGetAclsAclRelatedListenerOutput() GetAclsAclRelatedListenerOutput
	ToGetAclsAclRelatedListenerOutputWithContext(context.Context) GetAclsAclRelatedListenerOutput
}

type GetAclsAclRelatedListenerArgs struct {
	AclType        pulumi.StringInput `pulumi:"aclType"`
	FrontendPort   pulumi.IntInput    `pulumi:"frontendPort"`
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	Protocol       pulumi.StringInput `pulumi:"protocol"`
}

func (GetAclsAclRelatedListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclRelatedListener)(nil)).Elem()
}

func (i GetAclsAclRelatedListenerArgs) ToGetAclsAclRelatedListenerOutput() GetAclsAclRelatedListenerOutput {
	return i.ToGetAclsAclRelatedListenerOutputWithContext(context.Background())
}

func (i GetAclsAclRelatedListenerArgs) ToGetAclsAclRelatedListenerOutputWithContext(ctx context.Context) GetAclsAclRelatedListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclRelatedListenerOutput)
}

// GetAclsAclRelatedListenerArrayInput is an input type that accepts GetAclsAclRelatedListenerArray and GetAclsAclRelatedListenerArrayOutput values.
// You can construct a concrete instance of `GetAclsAclRelatedListenerArrayInput` via:
//
//          GetAclsAclRelatedListenerArray{ GetAclsAclRelatedListenerArgs{...} }
type GetAclsAclRelatedListenerArrayInput interface {
	pulumi.Input

	ToGetAclsAclRelatedListenerArrayOutput() GetAclsAclRelatedListenerArrayOutput
	ToGetAclsAclRelatedListenerArrayOutputWithContext(context.Context) GetAclsAclRelatedListenerArrayOutput
}

type GetAclsAclRelatedListenerArray []GetAclsAclRelatedListenerInput

func (GetAclsAclRelatedListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclRelatedListener)(nil)).Elem()
}

func (i GetAclsAclRelatedListenerArray) ToGetAclsAclRelatedListenerArrayOutput() GetAclsAclRelatedListenerArrayOutput {
	return i.ToGetAclsAclRelatedListenerArrayOutputWithContext(context.Background())
}

func (i GetAclsAclRelatedListenerArray) ToGetAclsAclRelatedListenerArrayOutputWithContext(ctx context.Context) GetAclsAclRelatedListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclRelatedListenerArrayOutput)
}

type GetAclsAclRelatedListenerOutput struct{ *pulumi.OutputState }

func (GetAclsAclRelatedListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAclRelatedListener)(nil)).Elem()
}

func (o GetAclsAclRelatedListenerOutput) ToGetAclsAclRelatedListenerOutput() GetAclsAclRelatedListenerOutput {
	return o
}

func (o GetAclsAclRelatedListenerOutput) ToGetAclsAclRelatedListenerOutputWithContext(ctx context.Context) GetAclsAclRelatedListenerOutput {
	return o
}

func (o GetAclsAclRelatedListenerOutput) AclType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclRelatedListener) string { return v.AclType }).(pulumi.StringOutput)
}

func (o GetAclsAclRelatedListenerOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAclsAclRelatedListener) int { return v.FrontendPort }).(pulumi.IntOutput)
}

func (o GetAclsAclRelatedListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclRelatedListener) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o GetAclsAclRelatedListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAclRelatedListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetAclsAclRelatedListenerArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclRelatedListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAclRelatedListener)(nil)).Elem()
}

func (o GetAclsAclRelatedListenerArrayOutput) ToGetAclsAclRelatedListenerArrayOutput() GetAclsAclRelatedListenerArrayOutput {
	return o
}

func (o GetAclsAclRelatedListenerArrayOutput) ToGetAclsAclRelatedListenerArrayOutputWithContext(ctx context.Context) GetAclsAclRelatedListenerArrayOutput {
	return o
}

func (o GetAclsAclRelatedListenerArrayOutput) Index(i pulumi.IntInput) GetAclsAclRelatedListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAclRelatedListener {
		return vs[0].([]GetAclsAclRelatedListener)[vs[1].(int)]
	}).(GetAclsAclRelatedListenerOutput)
}

type GetApplicationLoadBalancersBalancer struct {
	// Service address of the SLBs.
	Address string `pulumi:"address"`
	// The address ip version. Valid values `ipv4` and `ipv6`.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The address type of the SLB. Valid values `internet` and `intranet`.
	AddressType string `pulumi:"addressType"`
	// The auto release time.
	AutoReleaseTime int `pulumi:"autoReleaseTime"`
	// The backend servers of the SLB.
	BackendServers []GetApplicationLoadBalancersBalancerBackendServer `pulumi:"backendServers"`
	// The bandwidth of the SLB.
	Bandwidth int `pulumi:"bandwidth"`
	// The create time stamp of the SLB.
	CreateTimeStamp int `pulumi:"createTimeStamp"`
	// Whether the SLB should delete protection.
	DeleteProtection string `pulumi:"deleteProtection"`
	// The end time of the SLB.
	EndTime string `pulumi:"endTime"`
	// The end time stamp of the SLB.
	EndTimeStamp int `pulumi:"endTimeStamp"`
	// ID of the SLB.
	Id string `pulumi:"id"`
	// The internet charge type. Valid values `PayByBandwidth` and `PayByTraffic`.
	InternetChargeType string `pulumi:"internetChargeType"`
	// The listener ports and protocal of the SLB.
	ListenerPortsAndProtocals []GetApplicationLoadBalancersBalancerListenerPortsAndProtocal `pulumi:"listenerPortsAndProtocals"`
	// The listener ports and protocol of the SLB.
	ListenerPortsAndProtocols []GetApplicationLoadBalancersBalancerListenerPortsAndProtocol `pulumi:"listenerPortsAndProtocols"`
	// Thd ID of the SLB.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The name of the SLB.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The specification of the SLB.
	LoadBalancerSpec string `pulumi:"loadBalancerSpec"`
	// The master zone id of the SLB.
	MasterZoneId string `pulumi:"masterZoneId"`
	// The reason of modification protection.
	ModificationProtectionReason string `pulumi:"modificationProtectionReason"`
	// The status of modification protection.
	ModificationProtectionStatus string `pulumi:"modificationProtectionStatus"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType string `pulumi:"networkType"`
	// The payment type of SLB. Valid values `PayAsYouGo` and `Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// Region ID the SLB belongs to.
	RegionIdAlias string `pulumi:"regionIdAlias"`
	// The renewal cyc unit of the SLB.
	RenewalCycUnit string `pulumi:"renewalCycUnit"`
	// The renewal duration of the SLB.
	RenewalDuration int `pulumi:"renewalDuration"`
	// The renewal status of the SLB.
	RenewalStatus string `pulumi:"renewalStatus"`
	// The Id of resource group which SLB belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The slave zone id of the SLB.
	SlaveZoneId string `pulumi:"slaveZoneId"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetApplicationLoadBalancersBalancerInput is an input type that accepts GetApplicationLoadBalancersBalancerArgs and GetApplicationLoadBalancersBalancerOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerInput` via:
//
//          GetApplicationLoadBalancersBalancerArgs{...}
type GetApplicationLoadBalancersBalancerInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerOutput() GetApplicationLoadBalancersBalancerOutput
	ToGetApplicationLoadBalancersBalancerOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerOutput
}

type GetApplicationLoadBalancersBalancerArgs struct {
	// Service address of the SLBs.
	Address pulumi.StringInput `pulumi:"address"`
	// The address ip version. Valid values `ipv4` and `ipv6`.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The address type of the SLB. Valid values `internet` and `intranet`.
	AddressType pulumi.StringInput `pulumi:"addressType"`
	// The auto release time.
	AutoReleaseTime pulumi.IntInput `pulumi:"autoReleaseTime"`
	// The backend servers of the SLB.
	BackendServers GetApplicationLoadBalancersBalancerBackendServerArrayInput `pulumi:"backendServers"`
	// The bandwidth of the SLB.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The create time stamp of the SLB.
	CreateTimeStamp pulumi.IntInput `pulumi:"createTimeStamp"`
	// Whether the SLB should delete protection.
	DeleteProtection pulumi.StringInput `pulumi:"deleteProtection"`
	// The end time of the SLB.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The end time stamp of the SLB.
	EndTimeStamp pulumi.IntInput `pulumi:"endTimeStamp"`
	// ID of the SLB.
	Id pulumi.StringInput `pulumi:"id"`
	// The internet charge type. Valid values `PayByBandwidth` and `PayByTraffic`.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// The listener ports and protocal of the SLB.
	ListenerPortsAndProtocals GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayInput `pulumi:"listenerPortsAndProtocals"`
	// The listener ports and protocol of the SLB.
	ListenerPortsAndProtocols GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayInput `pulumi:"listenerPortsAndProtocols"`
	// Thd ID of the SLB.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The name of the SLB.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The specification of the SLB.
	LoadBalancerSpec pulumi.StringInput `pulumi:"loadBalancerSpec"`
	// The master zone id of the SLB.
	MasterZoneId pulumi.StringInput `pulumi:"masterZoneId"`
	// The reason of modification protection.
	ModificationProtectionReason pulumi.StringInput `pulumi:"modificationProtectionReason"`
	// The status of modification protection.
	ModificationProtectionStatus pulumi.StringInput `pulumi:"modificationProtectionStatus"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The payment type of SLB. Valid values `PayAsYouGo` and `Subscription`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// Region ID the SLB belongs to.
	RegionIdAlias pulumi.StringInput `pulumi:"regionIdAlias"`
	// The renewal cyc unit of the SLB.
	RenewalCycUnit pulumi.StringInput `pulumi:"renewalCycUnit"`
	// The renewal duration of the SLB.
	RenewalDuration pulumi.IntInput `pulumi:"renewalDuration"`
	// The renewal status of the SLB.
	RenewalStatus pulumi.StringInput `pulumi:"renewalStatus"`
	// The Id of resource group which SLB belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The slave zone id of the SLB.
	SlaveZoneId pulumi.StringInput `pulumi:"slaveZoneId"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetApplicationLoadBalancersBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancer)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerArgs) ToGetApplicationLoadBalancersBalancerOutput() GetApplicationLoadBalancersBalancerOutput {
	return i.ToGetApplicationLoadBalancersBalancerOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerArgs) ToGetApplicationLoadBalancersBalancerOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerOutput)
}

// GetApplicationLoadBalancersBalancerArrayInput is an input type that accepts GetApplicationLoadBalancersBalancerArray and GetApplicationLoadBalancersBalancerArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerArrayInput` via:
//
//          GetApplicationLoadBalancersBalancerArray{ GetApplicationLoadBalancersBalancerArgs{...} }
type GetApplicationLoadBalancersBalancerArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerArrayOutput() GetApplicationLoadBalancersBalancerArrayOutput
	ToGetApplicationLoadBalancersBalancerArrayOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerArrayOutput
}

type GetApplicationLoadBalancersBalancerArray []GetApplicationLoadBalancersBalancerInput

func (GetApplicationLoadBalancersBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancer)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerArray) ToGetApplicationLoadBalancersBalancerArrayOutput() GetApplicationLoadBalancersBalancerArrayOutput {
	return i.ToGetApplicationLoadBalancersBalancerArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerArray) ToGetApplicationLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerArrayOutput)
}

type GetApplicationLoadBalancersBalancerOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancer)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerOutput) ToGetApplicationLoadBalancersBalancerOutput() GetApplicationLoadBalancersBalancerOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerOutput) ToGetApplicationLoadBalancersBalancerOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerOutput {
	return o
}

// Service address of the SLBs.
func (o GetApplicationLoadBalancersBalancerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.Address }).(pulumi.StringOutput)
}

// The address ip version. Valid values `ipv4` and `ipv6`.
func (o GetApplicationLoadBalancersBalancerOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The address type of the SLB. Valid values `internet` and `intranet`.
func (o GetApplicationLoadBalancersBalancerOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.AddressType }).(pulumi.StringOutput)
}

// The auto release time.
func (o GetApplicationLoadBalancersBalancerOutput) AutoReleaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) int { return v.AutoReleaseTime }).(pulumi.IntOutput)
}

// The backend servers of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) BackendServers() GetApplicationLoadBalancersBalancerBackendServerArrayOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) []GetApplicationLoadBalancersBalancerBackendServer {
		return v.BackendServers
	}).(GetApplicationLoadBalancersBalancerBackendServerArrayOutput)
}

// The bandwidth of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The create time stamp of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) CreateTimeStamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) int { return v.CreateTimeStamp }).(pulumi.IntOutput)
}

// Whether the SLB should delete protection.
func (o GetApplicationLoadBalancersBalancerOutput) DeleteProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.DeleteProtection }).(pulumi.StringOutput)
}

// The end time of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.EndTime }).(pulumi.StringOutput)
}

// The end time stamp of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) EndTimeStamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) int { return v.EndTimeStamp }).(pulumi.IntOutput)
}

// ID of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.Id }).(pulumi.StringOutput)
}

// The internet charge type. Valid values `PayByBandwidth` and `PayByTraffic`.
func (o GetApplicationLoadBalancersBalancerOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The listener ports and protocal of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) ListenerPortsAndProtocals() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) []GetApplicationLoadBalancersBalancerListenerPortsAndProtocal {
		return v.ListenerPortsAndProtocals
	}).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput)
}

// The listener ports and protocol of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) ListenerPortsAndProtocols() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) []GetApplicationLoadBalancersBalancerListenerPortsAndProtocol {
		return v.ListenerPortsAndProtocols
	}).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput)
}

// Thd ID of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The name of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The specification of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) LoadBalancerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.LoadBalancerSpec }).(pulumi.StringOutput)
}

// The master zone id of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) MasterZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.MasterZoneId }).(pulumi.StringOutput)
}

// The reason of modification protection.
func (o GetApplicationLoadBalancersBalancerOutput) ModificationProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.ModificationProtectionReason }).(pulumi.StringOutput)
}

// The status of modification protection.
func (o GetApplicationLoadBalancersBalancerOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// Network type of the SLBs. Valid values: `vpc` and `classic`.
func (o GetApplicationLoadBalancersBalancerOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The payment type of SLB. Valid values `PayAsYouGo` and `Subscription`.
func (o GetApplicationLoadBalancersBalancerOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.PaymentType }).(pulumi.StringOutput)
}

// Region ID the SLB belongs to.
func (o GetApplicationLoadBalancersBalancerOutput) RegionIdAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.RegionIdAlias }).(pulumi.StringOutput)
}

// The renewal cyc unit of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) RenewalCycUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.RenewalCycUnit }).(pulumi.StringOutput)
}

// The renewal duration of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) RenewalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) int { return v.RenewalDuration }).(pulumi.IntOutput)
}

// The renewal status of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) RenewalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.RenewalStatus }).(pulumi.StringOutput)
}

// The Id of resource group which SLB belongs.
func (o GetApplicationLoadBalancersBalancerOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The slave zone id of the SLB.
func (o GetApplicationLoadBalancersBalancerOutput) SlaveZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.SlaveZoneId }).(pulumi.StringOutput)
}

// SLB current status. Possible values: `inactive`, `active` and `locked`.
func (o GetApplicationLoadBalancersBalancerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
func (o GetApplicationLoadBalancersBalancerOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC linked to the SLBs.
func (o GetApplicationLoadBalancersBalancerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch linked to the SLBs.
func (o GetApplicationLoadBalancersBalancerOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancer) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetApplicationLoadBalancersBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancer)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerArrayOutput) ToGetApplicationLoadBalancersBalancerArrayOutput() GetApplicationLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerArrayOutput) ToGetApplicationLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadBalancersBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadBalancersBalancer {
		return vs[0].([]GetApplicationLoadBalancersBalancer)[vs[1].(int)]
	}).(GetApplicationLoadBalancersBalancerOutput)
}

type GetApplicationLoadBalancersBalancerBackendServer struct {
	// The description of protocol.
	Description string `pulumi:"description"`
	// The server ID.
	ServerId string `pulumi:"serverId"`
	// The type of servers.
	Type string `pulumi:"type"`
	// The weight of servers.
	Weight int `pulumi:"weight"`
}

// GetApplicationLoadBalancersBalancerBackendServerInput is an input type that accepts GetApplicationLoadBalancersBalancerBackendServerArgs and GetApplicationLoadBalancersBalancerBackendServerOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerBackendServerInput` via:
//
//          GetApplicationLoadBalancersBalancerBackendServerArgs{...}
type GetApplicationLoadBalancersBalancerBackendServerInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerBackendServerOutput() GetApplicationLoadBalancersBalancerBackendServerOutput
	ToGetApplicationLoadBalancersBalancerBackendServerOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerBackendServerOutput
}

type GetApplicationLoadBalancersBalancerBackendServerArgs struct {
	// The description of protocol.
	Description pulumi.StringInput `pulumi:"description"`
	// The server ID.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The type of servers.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of servers.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetApplicationLoadBalancersBalancerBackendServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerBackendServerArgs) ToGetApplicationLoadBalancersBalancerBackendServerOutput() GetApplicationLoadBalancersBalancerBackendServerOutput {
	return i.ToGetApplicationLoadBalancersBalancerBackendServerOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerBackendServerArgs) ToGetApplicationLoadBalancersBalancerBackendServerOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerBackendServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerBackendServerOutput)
}

// GetApplicationLoadBalancersBalancerBackendServerArrayInput is an input type that accepts GetApplicationLoadBalancersBalancerBackendServerArray and GetApplicationLoadBalancersBalancerBackendServerArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerBackendServerArrayInput` via:
//
//          GetApplicationLoadBalancersBalancerBackendServerArray{ GetApplicationLoadBalancersBalancerBackendServerArgs{...} }
type GetApplicationLoadBalancersBalancerBackendServerArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerBackendServerArrayOutput() GetApplicationLoadBalancersBalancerBackendServerArrayOutput
	ToGetApplicationLoadBalancersBalancerBackendServerArrayOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerBackendServerArrayOutput
}

type GetApplicationLoadBalancersBalancerBackendServerArray []GetApplicationLoadBalancersBalancerBackendServerInput

func (GetApplicationLoadBalancersBalancerBackendServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerBackendServerArray) ToGetApplicationLoadBalancersBalancerBackendServerArrayOutput() GetApplicationLoadBalancersBalancerBackendServerArrayOutput {
	return i.ToGetApplicationLoadBalancersBalancerBackendServerArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerBackendServerArray) ToGetApplicationLoadBalancersBalancerBackendServerArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerBackendServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerBackendServerArrayOutput)
}

type GetApplicationLoadBalancersBalancerBackendServerOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerBackendServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerBackendServerOutput) ToGetApplicationLoadBalancersBalancerBackendServerOutput() GetApplicationLoadBalancersBalancerBackendServerOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerBackendServerOutput) ToGetApplicationLoadBalancersBalancerBackendServerOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerBackendServerOutput {
	return o
}

// The description of protocol.
func (o GetApplicationLoadBalancersBalancerBackendServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerBackendServer) string { return v.Description }).(pulumi.StringOutput)
}

// The server ID.
func (o GetApplicationLoadBalancersBalancerBackendServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerBackendServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The type of servers.
func (o GetApplicationLoadBalancersBalancerBackendServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerBackendServer) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of servers.
func (o GetApplicationLoadBalancersBalancerBackendServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerBackendServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetApplicationLoadBalancersBalancerBackendServerArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerBackendServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerBackendServerArrayOutput) ToGetApplicationLoadBalancersBalancerBackendServerArrayOutput() GetApplicationLoadBalancersBalancerBackendServerArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerBackendServerArrayOutput) ToGetApplicationLoadBalancersBalancerBackendServerArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerBackendServerArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerBackendServerArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadBalancersBalancerBackendServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadBalancersBalancerBackendServer {
		return vs[0].([]GetApplicationLoadBalancersBalancerBackendServer)[vs[1].(int)]
	}).(GetApplicationLoadBalancersBalancerBackendServerOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocal struct {
	// The listener port.
	ListenerPort int `pulumi:"listenerPort"`
	// The listener protoal.
	ListenerProtocal string `pulumi:"listenerProtocal"`
}

// GetApplicationLoadBalancersBalancerListenerPortsAndProtocalInput is an input type that accepts GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs and GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerListenerPortsAndProtocalInput` via:
//
//          GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs{...}
type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput
	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs struct {
	// The listener port.
	ListenerPort pulumi.IntInput `pulumi:"listenerPort"`
	// The listener protoal.
	ListenerProtocal pulumi.StringInput `pulumi:"listenerProtocal"`
}

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return i.ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput)
}

// GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayInput is an input type that accepts GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray and GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayInput` via:
//
//          GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray{ GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs{...} }
type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput
	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray []GetApplicationLoadBalancersBalancerListenerPortsAndProtocalInput

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return i.ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return o
}

// The listener port.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocal) int { return v.ListenerPort }).(pulumi.IntOutput)
}

// The listener protoal.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput) ListenerProtocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocal) string { return v.ListenerProtocal }).(pulumi.StringOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadBalancersBalancerListenerPortsAndProtocal {
		return vs[0].([]GetApplicationLoadBalancersBalancerListenerPortsAndProtocal)[vs[1].(int)]
	}).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocol struct {
	// The description of protocol.
	Description string `pulumi:"description"`
	// The forward port.
	ForwardPort int `pulumi:"forwardPort"`
	// The listener forward.
	ListenerForward string `pulumi:"listenerForward"`
	// The listener port.
	ListenerPort int `pulumi:"listenerPort"`
	// The listener protocol.
	ListenerProtocol string `pulumi:"listenerProtocol"`
}

// GetApplicationLoadBalancersBalancerListenerPortsAndProtocolInput is an input type that accepts GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs and GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerListenerPortsAndProtocolInput` via:
//
//          GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs{...}
type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput
	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs struct {
	// The description of protocol.
	Description pulumi.StringInput `pulumi:"description"`
	// The forward port.
	ForwardPort pulumi.IntInput `pulumi:"forwardPort"`
	// The listener forward.
	ListenerForward pulumi.StringInput `pulumi:"listenerForward"`
	// The listener port.
	ListenerPort pulumi.IntInput `pulumi:"listenerPort"`
	// The listener protocol.
	ListenerProtocol pulumi.StringInput `pulumi:"listenerProtocol"`
}

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return i.ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput)
}

// GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayInput is an input type that accepts GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray and GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayInput` via:
//
//          GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray{ GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs{...} }
type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput
	ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray []GetApplicationLoadBalancersBalancerListenerPortsAndProtocolInput

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return i.ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return o
}

// The description of protocol.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocol) string { return v.Description }).(pulumi.StringOutput)
}

// The forward port.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ForwardPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocol) int { return v.ForwardPort }).(pulumi.IntOutput)
}

// The listener forward.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerForward() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocol) string { return v.ListenerForward }).(pulumi.StringOutput)
}

// The listener port.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocol) int { return v.ListenerPort }).(pulumi.IntOutput)
}

// The listener protocol.
func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersBalancerListenerPortsAndProtocol) string { return v.ListenerProtocol }).(pulumi.StringOutput)
}

type GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ToGetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadBalancersBalancerListenerPortsAndProtocol {
		return vs[0].([]GetApplicationLoadBalancersBalancerListenerPortsAndProtocol)[vs[1].(int)]
	}).(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput)
}

type GetApplicationLoadBalancersSlb struct {
	// Service address of the SLBs.
	Address      string `pulumi:"address"`
	CreationTime string `pulumi:"creationTime"`
	// ID of the SLB.
	Id                     string `pulumi:"id"`
	Internet               bool   `pulumi:"internet"`
	MasterAvailabilityZone string `pulumi:"masterAvailabilityZone"`
	Name                   string `pulumi:"name"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType           string `pulumi:"networkType"`
	RegionId              string `pulumi:"regionId"`
	SlaveAvailabilityZone string `pulumi:"slaveAvailabilityZone"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetApplicationLoadBalancersSlbInput is an input type that accepts GetApplicationLoadBalancersSlbArgs and GetApplicationLoadBalancersSlbOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersSlbInput` via:
//
//          GetApplicationLoadBalancersSlbArgs{...}
type GetApplicationLoadBalancersSlbInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersSlbOutput() GetApplicationLoadBalancersSlbOutput
	ToGetApplicationLoadBalancersSlbOutputWithContext(context.Context) GetApplicationLoadBalancersSlbOutput
}

type GetApplicationLoadBalancersSlbArgs struct {
	// Service address of the SLBs.
	Address      pulumi.StringInput `pulumi:"address"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// ID of the SLB.
	Id                     pulumi.StringInput `pulumi:"id"`
	Internet               pulumi.BoolInput   `pulumi:"internet"`
	MasterAvailabilityZone pulumi.StringInput `pulumi:"masterAvailabilityZone"`
	Name                   pulumi.StringInput `pulumi:"name"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType           pulumi.StringInput `pulumi:"networkType"`
	RegionId              pulumi.StringInput `pulumi:"regionId"`
	SlaveAvailabilityZone pulumi.StringInput `pulumi:"slaveAvailabilityZone"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetApplicationLoadBalancersSlbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersSlb)(nil)).Elem()
}

func (i GetApplicationLoadBalancersSlbArgs) ToGetApplicationLoadBalancersSlbOutput() GetApplicationLoadBalancersSlbOutput {
	return i.ToGetApplicationLoadBalancersSlbOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersSlbArgs) ToGetApplicationLoadBalancersSlbOutputWithContext(ctx context.Context) GetApplicationLoadBalancersSlbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersSlbOutput)
}

// GetApplicationLoadBalancersSlbArrayInput is an input type that accepts GetApplicationLoadBalancersSlbArray and GetApplicationLoadBalancersSlbArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadBalancersSlbArrayInput` via:
//
//          GetApplicationLoadBalancersSlbArray{ GetApplicationLoadBalancersSlbArgs{...} }
type GetApplicationLoadBalancersSlbArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadBalancersSlbArrayOutput() GetApplicationLoadBalancersSlbArrayOutput
	ToGetApplicationLoadBalancersSlbArrayOutputWithContext(context.Context) GetApplicationLoadBalancersSlbArrayOutput
}

type GetApplicationLoadBalancersSlbArray []GetApplicationLoadBalancersSlbInput

func (GetApplicationLoadBalancersSlbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersSlb)(nil)).Elem()
}

func (i GetApplicationLoadBalancersSlbArray) ToGetApplicationLoadBalancersSlbArrayOutput() GetApplicationLoadBalancersSlbArrayOutput {
	return i.ToGetApplicationLoadBalancersSlbArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadBalancersSlbArray) ToGetApplicationLoadBalancersSlbArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersSlbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadBalancersSlbArrayOutput)
}

type GetApplicationLoadBalancersSlbOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersSlbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadBalancersSlb)(nil)).Elem()
}

func (o GetApplicationLoadBalancersSlbOutput) ToGetApplicationLoadBalancersSlbOutput() GetApplicationLoadBalancersSlbOutput {
	return o
}

func (o GetApplicationLoadBalancersSlbOutput) ToGetApplicationLoadBalancersSlbOutputWithContext(ctx context.Context) GetApplicationLoadBalancersSlbOutput {
	return o
}

// Service address of the SLBs.
func (o GetApplicationLoadBalancersSlbOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.CreationTime }).(pulumi.StringOutput)
}

// ID of the SLB.
func (o GetApplicationLoadBalancersSlbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) Internet() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) bool { return v.Internet }).(pulumi.BoolOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) MasterAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.MasterAvailabilityZone }).(pulumi.StringOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.Name }).(pulumi.StringOutput)
}

// Network type of the SLBs. Valid values: `vpc` and `classic`.
func (o GetApplicationLoadBalancersSlbOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.RegionId }).(pulumi.StringOutput)
}

func (o GetApplicationLoadBalancersSlbOutput) SlaveAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.SlaveAvailabilityZone }).(pulumi.StringOutput)
}

// SLB current status. Possible values: `inactive`, `active` and `locked`.
func (o GetApplicationLoadBalancersSlbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
func (o GetApplicationLoadBalancersSlbOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC linked to the SLBs.
func (o GetApplicationLoadBalancersSlbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch linked to the SLBs.
func (o GetApplicationLoadBalancersSlbOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadBalancersSlb) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetApplicationLoadBalancersSlbArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadBalancersSlbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadBalancersSlb)(nil)).Elem()
}

func (o GetApplicationLoadBalancersSlbArrayOutput) ToGetApplicationLoadBalancersSlbArrayOutput() GetApplicationLoadBalancersSlbArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersSlbArrayOutput) ToGetApplicationLoadBalancersSlbArrayOutputWithContext(ctx context.Context) GetApplicationLoadBalancersSlbArrayOutput {
	return o
}

func (o GetApplicationLoadBalancersSlbArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadBalancersSlbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadBalancersSlb {
		return vs[0].([]GetApplicationLoadBalancersSlb)[vs[1].(int)]
	}).(GetApplicationLoadBalancersSlbOutput)
}

type GetAttachmentsSlbAttachment struct {
	// ID of the attached ECS instance.
	InstanceId string `pulumi:"instanceId"`
	// Weight associated to the ECS instance.
	Weight int `pulumi:"weight"`
}

// GetAttachmentsSlbAttachmentInput is an input type that accepts GetAttachmentsSlbAttachmentArgs and GetAttachmentsSlbAttachmentOutput values.
// You can construct a concrete instance of `GetAttachmentsSlbAttachmentInput` via:
//
//          GetAttachmentsSlbAttachmentArgs{...}
type GetAttachmentsSlbAttachmentInput interface {
	pulumi.Input

	ToGetAttachmentsSlbAttachmentOutput() GetAttachmentsSlbAttachmentOutput
	ToGetAttachmentsSlbAttachmentOutputWithContext(context.Context) GetAttachmentsSlbAttachmentOutput
}

type GetAttachmentsSlbAttachmentArgs struct {
	// ID of the attached ECS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Weight associated to the ECS instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetAttachmentsSlbAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsSlbAttachment)(nil)).Elem()
}

func (i GetAttachmentsSlbAttachmentArgs) ToGetAttachmentsSlbAttachmentOutput() GetAttachmentsSlbAttachmentOutput {
	return i.ToGetAttachmentsSlbAttachmentOutputWithContext(context.Background())
}

func (i GetAttachmentsSlbAttachmentArgs) ToGetAttachmentsSlbAttachmentOutputWithContext(ctx context.Context) GetAttachmentsSlbAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsSlbAttachmentOutput)
}

// GetAttachmentsSlbAttachmentArrayInput is an input type that accepts GetAttachmentsSlbAttachmentArray and GetAttachmentsSlbAttachmentArrayOutput values.
// You can construct a concrete instance of `GetAttachmentsSlbAttachmentArrayInput` via:
//
//          GetAttachmentsSlbAttachmentArray{ GetAttachmentsSlbAttachmentArgs{...} }
type GetAttachmentsSlbAttachmentArrayInput interface {
	pulumi.Input

	ToGetAttachmentsSlbAttachmentArrayOutput() GetAttachmentsSlbAttachmentArrayOutput
	ToGetAttachmentsSlbAttachmentArrayOutputWithContext(context.Context) GetAttachmentsSlbAttachmentArrayOutput
}

type GetAttachmentsSlbAttachmentArray []GetAttachmentsSlbAttachmentInput

func (GetAttachmentsSlbAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsSlbAttachment)(nil)).Elem()
}

func (i GetAttachmentsSlbAttachmentArray) ToGetAttachmentsSlbAttachmentArrayOutput() GetAttachmentsSlbAttachmentArrayOutput {
	return i.ToGetAttachmentsSlbAttachmentArrayOutputWithContext(context.Background())
}

func (i GetAttachmentsSlbAttachmentArray) ToGetAttachmentsSlbAttachmentArrayOutputWithContext(ctx context.Context) GetAttachmentsSlbAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsSlbAttachmentArrayOutput)
}

type GetAttachmentsSlbAttachmentOutput struct{ *pulumi.OutputState }

func (GetAttachmentsSlbAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsSlbAttachment)(nil)).Elem()
}

func (o GetAttachmentsSlbAttachmentOutput) ToGetAttachmentsSlbAttachmentOutput() GetAttachmentsSlbAttachmentOutput {
	return o
}

func (o GetAttachmentsSlbAttachmentOutput) ToGetAttachmentsSlbAttachmentOutputWithContext(ctx context.Context) GetAttachmentsSlbAttachmentOutput {
	return o
}

// ID of the attached ECS instance.
func (o GetAttachmentsSlbAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsSlbAttachment) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Weight associated to the ECS instance.
func (o GetAttachmentsSlbAttachmentOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttachmentsSlbAttachment) int { return v.Weight }).(pulumi.IntOutput)
}

type GetAttachmentsSlbAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetAttachmentsSlbAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsSlbAttachment)(nil)).Elem()
}

func (o GetAttachmentsSlbAttachmentArrayOutput) ToGetAttachmentsSlbAttachmentArrayOutput() GetAttachmentsSlbAttachmentArrayOutput {
	return o
}

func (o GetAttachmentsSlbAttachmentArrayOutput) ToGetAttachmentsSlbAttachmentArrayOutputWithContext(ctx context.Context) GetAttachmentsSlbAttachmentArrayOutput {
	return o
}

func (o GetAttachmentsSlbAttachmentArrayOutput) Index(i pulumi.IntInput) GetAttachmentsSlbAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttachmentsSlbAttachment {
		return vs[0].([]GetAttachmentsSlbAttachment)[vs[1].(int)]
	}).(GetAttachmentsSlbAttachmentOutput)
}

type GetBackendServersBackendServer struct {
	// backend server ID.
	Id string `pulumi:"id"`
	// Type of the backend server.
	ServerType string `pulumi:"serverType"`
	// Weight associated to the ECS instance.
	Weight int `pulumi:"weight"`
}

// GetBackendServersBackendServerInput is an input type that accepts GetBackendServersBackendServerArgs and GetBackendServersBackendServerOutput values.
// You can construct a concrete instance of `GetBackendServersBackendServerInput` via:
//
//          GetBackendServersBackendServerArgs{...}
type GetBackendServersBackendServerInput interface {
	pulumi.Input

	ToGetBackendServersBackendServerOutput() GetBackendServersBackendServerOutput
	ToGetBackendServersBackendServerOutputWithContext(context.Context) GetBackendServersBackendServerOutput
}

type GetBackendServersBackendServerArgs struct {
	// backend server ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Type of the backend server.
	ServerType pulumi.StringInput `pulumi:"serverType"`
	// Weight associated to the ECS instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetBackendServersBackendServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServersBackendServer)(nil)).Elem()
}

func (i GetBackendServersBackendServerArgs) ToGetBackendServersBackendServerOutput() GetBackendServersBackendServerOutput {
	return i.ToGetBackendServersBackendServerOutputWithContext(context.Background())
}

func (i GetBackendServersBackendServerArgs) ToGetBackendServersBackendServerOutputWithContext(ctx context.Context) GetBackendServersBackendServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServersBackendServerOutput)
}

// GetBackendServersBackendServerArrayInput is an input type that accepts GetBackendServersBackendServerArray and GetBackendServersBackendServerArrayOutput values.
// You can construct a concrete instance of `GetBackendServersBackendServerArrayInput` via:
//
//          GetBackendServersBackendServerArray{ GetBackendServersBackendServerArgs{...} }
type GetBackendServersBackendServerArrayInput interface {
	pulumi.Input

	ToGetBackendServersBackendServerArrayOutput() GetBackendServersBackendServerArrayOutput
	ToGetBackendServersBackendServerArrayOutputWithContext(context.Context) GetBackendServersBackendServerArrayOutput
}

type GetBackendServersBackendServerArray []GetBackendServersBackendServerInput

func (GetBackendServersBackendServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServersBackendServer)(nil)).Elem()
}

func (i GetBackendServersBackendServerArray) ToGetBackendServersBackendServerArrayOutput() GetBackendServersBackendServerArrayOutput {
	return i.ToGetBackendServersBackendServerArrayOutputWithContext(context.Background())
}

func (i GetBackendServersBackendServerArray) ToGetBackendServersBackendServerArrayOutputWithContext(ctx context.Context) GetBackendServersBackendServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServersBackendServerArrayOutput)
}

type GetBackendServersBackendServerOutput struct{ *pulumi.OutputState }

func (GetBackendServersBackendServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServersBackendServer)(nil)).Elem()
}

func (o GetBackendServersBackendServerOutput) ToGetBackendServersBackendServerOutput() GetBackendServersBackendServerOutput {
	return o
}

func (o GetBackendServersBackendServerOutput) ToGetBackendServersBackendServerOutputWithContext(ctx context.Context) GetBackendServersBackendServerOutput {
	return o
}

// backend server ID.
func (o GetBackendServersBackendServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendServersBackendServer) string { return v.Id }).(pulumi.StringOutput)
}

// Type of the backend server.
func (o GetBackendServersBackendServerOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackendServersBackendServer) string { return v.ServerType }).(pulumi.StringOutput)
}

// Weight associated to the ECS instance.
func (o GetBackendServersBackendServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackendServersBackendServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetBackendServersBackendServerArrayOutput struct{ *pulumi.OutputState }

func (GetBackendServersBackendServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServersBackendServer)(nil)).Elem()
}

func (o GetBackendServersBackendServerArrayOutput) ToGetBackendServersBackendServerArrayOutput() GetBackendServersBackendServerArrayOutput {
	return o
}

func (o GetBackendServersBackendServerArrayOutput) ToGetBackendServersBackendServerArrayOutputWithContext(ctx context.Context) GetBackendServersBackendServerArrayOutput {
	return o
}

func (o GetBackendServersBackendServerArrayOutput) Index(i pulumi.IntInput) GetBackendServersBackendServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackendServersBackendServer {
		return vs[0].([]GetBackendServersBackendServer)[vs[1].(int)]
	}).(GetBackendServersBackendServerOutput)
}

type GetCaCertificatesCertificate struct {
	// (Available in v1.123.1+) CA certificate ID.
	CaCertificateId string `pulumi:"caCertificateId"`
	// (Available in v1.123.1+) CA certificate name.
	CaCertificateName string `pulumi:"caCertificateName"`
	// CA certificate common name.
	CommonName string `pulumi:"commonName"`
	// CA certificate created timestamp.
	CreatedTimestamp int `pulumi:"createdTimestamp"`
	// CA certificate expired time.
	ExpiredTime string `pulumi:"expiredTime"`
	// CA certificate expired timestamp.
	ExpiredTimestamp int `pulumi:"expiredTimestamp"`
	// CA certificate fingerprint.
	Fingerprint string `pulumi:"fingerprint"`
	// CA certificate ID.
	Id string `pulumi:"id"`
	// (Deprecated from v1.123.1) Deprecated and replace by `caCertificateName`.
	Name string `pulumi:"name"`
	// The Id of resource group which ca certificates belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetCaCertificatesCertificateInput is an input type that accepts GetCaCertificatesCertificateArgs and GetCaCertificatesCertificateOutput values.
// You can construct a concrete instance of `GetCaCertificatesCertificateInput` via:
//
//          GetCaCertificatesCertificateArgs{...}
type GetCaCertificatesCertificateInput interface {
	pulumi.Input

	ToGetCaCertificatesCertificateOutput() GetCaCertificatesCertificateOutput
	ToGetCaCertificatesCertificateOutputWithContext(context.Context) GetCaCertificatesCertificateOutput
}

type GetCaCertificatesCertificateArgs struct {
	// (Available in v1.123.1+) CA certificate ID.
	CaCertificateId pulumi.StringInput `pulumi:"caCertificateId"`
	// (Available in v1.123.1+) CA certificate name.
	CaCertificateName pulumi.StringInput `pulumi:"caCertificateName"`
	// CA certificate common name.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// CA certificate created timestamp.
	CreatedTimestamp pulumi.IntInput `pulumi:"createdTimestamp"`
	// CA certificate expired time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// CA certificate expired timestamp.
	ExpiredTimestamp pulumi.IntInput `pulumi:"expiredTimestamp"`
	// CA certificate fingerprint.
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// CA certificate ID.
	Id pulumi.StringInput `pulumi:"id"`
	// (Deprecated from v1.123.1) Deprecated and replace by `caCertificateName`.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of resource group which ca certificates belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetCaCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertificatesCertificate)(nil)).Elem()
}

func (i GetCaCertificatesCertificateArgs) ToGetCaCertificatesCertificateOutput() GetCaCertificatesCertificateOutput {
	return i.ToGetCaCertificatesCertificateOutputWithContext(context.Background())
}

func (i GetCaCertificatesCertificateArgs) ToGetCaCertificatesCertificateOutputWithContext(ctx context.Context) GetCaCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertificatesCertificateOutput)
}

// GetCaCertificatesCertificateArrayInput is an input type that accepts GetCaCertificatesCertificateArray and GetCaCertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `GetCaCertificatesCertificateArrayInput` via:
//
//          GetCaCertificatesCertificateArray{ GetCaCertificatesCertificateArgs{...} }
type GetCaCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToGetCaCertificatesCertificateArrayOutput() GetCaCertificatesCertificateArrayOutput
	ToGetCaCertificatesCertificateArrayOutputWithContext(context.Context) GetCaCertificatesCertificateArrayOutput
}

type GetCaCertificatesCertificateArray []GetCaCertificatesCertificateInput

func (GetCaCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertificatesCertificate)(nil)).Elem()
}

func (i GetCaCertificatesCertificateArray) ToGetCaCertificatesCertificateArrayOutput() GetCaCertificatesCertificateArrayOutput {
	return i.ToGetCaCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i GetCaCertificatesCertificateArray) ToGetCaCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCaCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertificatesCertificateArrayOutput)
}

type GetCaCertificatesCertificateOutput struct{ *pulumi.OutputState }

func (GetCaCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertificatesCertificate)(nil)).Elem()
}

func (o GetCaCertificatesCertificateOutput) ToGetCaCertificatesCertificateOutput() GetCaCertificatesCertificateOutput {
	return o
}

func (o GetCaCertificatesCertificateOutput) ToGetCaCertificatesCertificateOutputWithContext(ctx context.Context) GetCaCertificatesCertificateOutput {
	return o
}

// (Available in v1.123.1+) CA certificate ID.
func (o GetCaCertificatesCertificateOutput) CaCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.CaCertificateId }).(pulumi.StringOutput)
}

// (Available in v1.123.1+) CA certificate name.
func (o GetCaCertificatesCertificateOutput) CaCertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.CaCertificateName }).(pulumi.StringOutput)
}

// CA certificate common name.
func (o GetCaCertificatesCertificateOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.CommonName }).(pulumi.StringOutput)
}

// CA certificate created timestamp.
func (o GetCaCertificatesCertificateOutput) CreatedTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) int { return v.CreatedTimestamp }).(pulumi.IntOutput)
}

// CA certificate expired time.
func (o GetCaCertificatesCertificateOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// CA certificate expired timestamp.
func (o GetCaCertificatesCertificateOutput) ExpiredTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) int { return v.ExpiredTimestamp }).(pulumi.IntOutput)
}

// CA certificate fingerprint.
func (o GetCaCertificatesCertificateOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// CA certificate ID.
func (o GetCaCertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// (Deprecated from v1.123.1) Deprecated and replace by `caCertificateName`.
func (o GetCaCertificatesCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of resource group which ca certificates belongs.
func (o GetCaCertificatesCertificateOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetCaCertificatesCertificateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCaCertificatesCertificate) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetCaCertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetCaCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertificatesCertificate)(nil)).Elem()
}

func (o GetCaCertificatesCertificateArrayOutput) ToGetCaCertificatesCertificateArrayOutput() GetCaCertificatesCertificateArrayOutput {
	return o
}

func (o GetCaCertificatesCertificateArrayOutput) ToGetCaCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCaCertificatesCertificateArrayOutput {
	return o
}

func (o GetCaCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) GetCaCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaCertificatesCertificate {
		return vs[0].([]GetCaCertificatesCertificate)[vs[1].(int)]
	}).(GetCaCertificatesCertificateOutput)
}

type GetDomainExtensionsExtension struct {
	// The domain name.
	Domain string `pulumi:"domain"`
	// The ID of the domain extension.
	Id string `pulumi:"id"`
	// The ID of the certificate used by the domain name.
	ServerCertificateId string `pulumi:"serverCertificateId"`
}

// GetDomainExtensionsExtensionInput is an input type that accepts GetDomainExtensionsExtensionArgs and GetDomainExtensionsExtensionOutput values.
// You can construct a concrete instance of `GetDomainExtensionsExtensionInput` via:
//
//          GetDomainExtensionsExtensionArgs{...}
type GetDomainExtensionsExtensionInput interface {
	pulumi.Input

	ToGetDomainExtensionsExtensionOutput() GetDomainExtensionsExtensionOutput
	ToGetDomainExtensionsExtensionOutputWithContext(context.Context) GetDomainExtensionsExtensionOutput
}

type GetDomainExtensionsExtensionArgs struct {
	// The domain name.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The ID of the domain extension.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the certificate used by the domain name.
	ServerCertificateId pulumi.StringInput `pulumi:"serverCertificateId"`
}

func (GetDomainExtensionsExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainExtensionsExtension)(nil)).Elem()
}

func (i GetDomainExtensionsExtensionArgs) ToGetDomainExtensionsExtensionOutput() GetDomainExtensionsExtensionOutput {
	return i.ToGetDomainExtensionsExtensionOutputWithContext(context.Background())
}

func (i GetDomainExtensionsExtensionArgs) ToGetDomainExtensionsExtensionOutputWithContext(ctx context.Context) GetDomainExtensionsExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainExtensionsExtensionOutput)
}

// GetDomainExtensionsExtensionArrayInput is an input type that accepts GetDomainExtensionsExtensionArray and GetDomainExtensionsExtensionArrayOutput values.
// You can construct a concrete instance of `GetDomainExtensionsExtensionArrayInput` via:
//
//          GetDomainExtensionsExtensionArray{ GetDomainExtensionsExtensionArgs{...} }
type GetDomainExtensionsExtensionArrayInput interface {
	pulumi.Input

	ToGetDomainExtensionsExtensionArrayOutput() GetDomainExtensionsExtensionArrayOutput
	ToGetDomainExtensionsExtensionArrayOutputWithContext(context.Context) GetDomainExtensionsExtensionArrayOutput
}

type GetDomainExtensionsExtensionArray []GetDomainExtensionsExtensionInput

func (GetDomainExtensionsExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainExtensionsExtension)(nil)).Elem()
}

func (i GetDomainExtensionsExtensionArray) ToGetDomainExtensionsExtensionArrayOutput() GetDomainExtensionsExtensionArrayOutput {
	return i.ToGetDomainExtensionsExtensionArrayOutputWithContext(context.Background())
}

func (i GetDomainExtensionsExtensionArray) ToGetDomainExtensionsExtensionArrayOutputWithContext(ctx context.Context) GetDomainExtensionsExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainExtensionsExtensionArrayOutput)
}

type GetDomainExtensionsExtensionOutput struct{ *pulumi.OutputState }

func (GetDomainExtensionsExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainExtensionsExtension)(nil)).Elem()
}

func (o GetDomainExtensionsExtensionOutput) ToGetDomainExtensionsExtensionOutput() GetDomainExtensionsExtensionOutput {
	return o
}

func (o GetDomainExtensionsExtensionOutput) ToGetDomainExtensionsExtensionOutputWithContext(ctx context.Context) GetDomainExtensionsExtensionOutput {
	return o
}

// The domain name.
func (o GetDomainExtensionsExtensionOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainExtensionsExtension) string { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the domain extension.
func (o GetDomainExtensionsExtensionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainExtensionsExtension) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the certificate used by the domain name.
func (o GetDomainExtensionsExtensionOutput) ServerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainExtensionsExtension) string { return v.ServerCertificateId }).(pulumi.StringOutput)
}

type GetDomainExtensionsExtensionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainExtensionsExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainExtensionsExtension)(nil)).Elem()
}

func (o GetDomainExtensionsExtensionArrayOutput) ToGetDomainExtensionsExtensionArrayOutput() GetDomainExtensionsExtensionArrayOutput {
	return o
}

func (o GetDomainExtensionsExtensionArrayOutput) ToGetDomainExtensionsExtensionArrayOutputWithContext(ctx context.Context) GetDomainExtensionsExtensionArrayOutput {
	return o
}

func (o GetDomainExtensionsExtensionArrayOutput) Index(i pulumi.IntInput) GetDomainExtensionsExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainExtensionsExtension {
		return vs[0].([]GetDomainExtensionsExtension)[vs[1].(int)]
	}).(GetDomainExtensionsExtensionOutput)
}

type GetListenersSlbListener struct {
	// Port opened on the backend server to receive requests.
	BackendPort int `pulumi:"backendPort"`
	// Peak bandwidth. If the value is set to -1, the listener is not limited by bandwidth.
	Bandwidth int `pulumi:"bandwidth"`
	// ID of the CA certificate (only required when two-way authentication is used). Only available when the protocol is `https`.
	CaCertificateId string `pulumi:"caCertificateId"`
	// Cookie configured by the backend server. Only available when the stickySessionType is `server`.
	Cookie string `pulumi:"cookie"`
	// Cookie timeout in seconds. Only available when the stickySessionType is `insert`.
	CookieTimeout int `pulumi:"cookieTimeout"`
	// The description of slb listener.
	Description string `pulumi:"description"`
	// Whether to enable https listener support http2 or not. Valid values are `on` and `off`. Default to `on`.
	EnableHttp2 string `pulumi:"enableHttp2"`
	// Connection timeout in seconds for the Layer 4 TCP listener. Only available when the protocol is `tcp`.
	EstablishedTimeout int `pulumi:"establishedTimeout"`
	// Filter listeners by the specified frontend port.
	FrontendPort int `pulumi:"frontendPort"`
	// Indicate whether Gzip compression is enabled or not. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	Gzip string `pulumi:"gzip"`
	// Indicate whether health check is enabled of not. Possible values are `on` and `off`.
	HealthCheck string `pulumi:"healthCheck"`
	// Port used for health check.
	HealthCheckConnectPort int `pulumi:"healthCheckConnectPort"`
	// Amount of time in seconds to wait for the response for a health check.
	HealthCheckConnectTimeout int `pulumi:"healthCheckConnectTimeout"`
	// Domain name used for health check. The SLB sends HTTP head requests to the backend server, the domain is useful when the backend server verifies the host field in the requests. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckDomain string `pulumi:"healthCheckDomain"`
	// HTTP status codes indicating that the health check is normal. It can contain several comma-separated values such as "http_2xx,http_3xx". Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckHttpCode string `pulumi:"healthCheckHttpCode"`
	// Time interval between two consecutive health checks.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// Amount of time in seconds to wait for the response from a health check. If an ECS instance sends no response within the specified timeout period, the health check fails. Only available when the protocol is `http` or `https`.
	HealthCheckTimeout int `pulumi:"healthCheckTimeout"`
	// Health check method. Possible values are `tcp` and `http`. Only available when the protocol is `tcp`.
	HealthCheckType string `pulumi:"healthCheckType"`
	// URI used for health check. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckUri string `pulumi:"healthCheckUri"`
	// Number of consecutive successes of health check performed on the same ECS instance (from failure to success).
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// Timeout of http or https listener established connection idle timeout. Valid value range: [1-60] in seconds. Default to 15.
	IdleTimeout int `pulumi:"idleTimeout"`
	// ID of the active/standby server group.
	MasterSlaveServerGroupId string `pulumi:"masterSlaveServerGroupId"`
	// Timeout value of the TCP connection in seconds. If the value is 0, the session persistence function is disabled. Only available when the protocol is `tcp`.
	PersistenceTimeout int `pulumi:"persistenceTimeout"`
	// Filter listeners by the specified protocol. Valid values: `http`, `https`, `tcp` and `udp`.
	Protocol string `pulumi:"protocol"`
	// Timeout of http or https listener request (which does not get response from backend) timeout. Valid value range: [1-180] in seconds. Default to 60.
	RequestTimeout int `pulumi:"requestTimeout"`
	// Algorithm used to distribute traffic. Possible values: `wrr` (weighted round robin), `wlc` (weighted least connection) and `rr` (round robin).
	Scheduler string `pulumi:"scheduler"`
	// Security status. Only available when the protocol is `https`.
	SecurityStatus      string `pulumi:"securityStatus"`
	ServerCertificateId string `pulumi:"serverCertificateId"`
	// ID of the linked VServer group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// ID of the server certificate. Only available when the protocol is `https`.
	SslCertificateId string `pulumi:"sslCertificateId"`
	// Listener status.
	Status string `pulumi:"status"`
	// Indicate whether session persistence is enabled or not. If enabled, all session requests from the same client are sent to the same backend server. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	StickySession string `pulumi:"stickySession"`
	// Method used to handle the cookie. Possible values are `insert` (cookie added to the response) and `server` (cookie set by the backend server). Only available when the protocol is `http` or `https` and stickySession is `on`.
	StickySessionType string `pulumi:"stickySessionType"`
	// Https listener TLS cipher policy. Valid values are `tlsCipherPolicy10`, `tlsCipherPolicy11`, `tlsCipherPolicy12`, `tlsCipherPolicy12Strict`. Default to `tlsCipherPolicy10`.
	TlsCipherPolicy string `pulumi:"tlsCipherPolicy"`
	// Number of consecutive failures of health check performed on the same ECS instance (from success to failure).
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
	// Indicate whether the HTTP header field "X-Forwarded-For" is added or not; it allows the backend server to know about the user's IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedFor string `pulumi:"xForwardedFor"`
	// Indicate whether the HTTP header field "X-Forwarded-For_SLBID" is added or not; it allows the backend server to know about the SLB ID. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbId string `pulumi:"xForwardedForSlbId"`
	// Indicate whether the HTTP header field "X-Forwarded-For_SLBIP" is added or not; it allows the backend server to know about the SLB IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbIp string `pulumi:"xForwardedForSlbIp"`
	// Indicate whether the HTTP header field "X-Forwarded-For_proto" is added or not; it allows the backend server to know about the user's protocol. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbProto string `pulumi:"xForwardedForSlbProto"`
}

// GetListenersSlbListenerInput is an input type that accepts GetListenersSlbListenerArgs and GetListenersSlbListenerOutput values.
// You can construct a concrete instance of `GetListenersSlbListenerInput` via:
//
//          GetListenersSlbListenerArgs{...}
type GetListenersSlbListenerInput interface {
	pulumi.Input

	ToGetListenersSlbListenerOutput() GetListenersSlbListenerOutput
	ToGetListenersSlbListenerOutputWithContext(context.Context) GetListenersSlbListenerOutput
}

type GetListenersSlbListenerArgs struct {
	// Port opened on the backend server to receive requests.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Peak bandwidth. If the value is set to -1, the listener is not limited by bandwidth.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// ID of the CA certificate (only required when two-way authentication is used). Only available when the protocol is `https`.
	CaCertificateId pulumi.StringInput `pulumi:"caCertificateId"`
	// Cookie configured by the backend server. Only available when the stickySessionType is `server`.
	Cookie pulumi.StringInput `pulumi:"cookie"`
	// Cookie timeout in seconds. Only available when the stickySessionType is `insert`.
	CookieTimeout pulumi.IntInput `pulumi:"cookieTimeout"`
	// The description of slb listener.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to enable https listener support http2 or not. Valid values are `on` and `off`. Default to `on`.
	EnableHttp2 pulumi.StringInput `pulumi:"enableHttp2"`
	// Connection timeout in seconds for the Layer 4 TCP listener. Only available when the protocol is `tcp`.
	EstablishedTimeout pulumi.IntInput `pulumi:"establishedTimeout"`
	// Filter listeners by the specified frontend port.
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Indicate whether Gzip compression is enabled or not. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	Gzip pulumi.StringInput `pulumi:"gzip"`
	// Indicate whether health check is enabled of not. Possible values are `on` and `off`.
	HealthCheck pulumi.StringInput `pulumi:"healthCheck"`
	// Port used for health check.
	HealthCheckConnectPort pulumi.IntInput `pulumi:"healthCheckConnectPort"`
	// Amount of time in seconds to wait for the response for a health check.
	HealthCheckConnectTimeout pulumi.IntInput `pulumi:"healthCheckConnectTimeout"`
	// Domain name used for health check. The SLB sends HTTP head requests to the backend server, the domain is useful when the backend server verifies the host field in the requests. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckDomain pulumi.StringInput `pulumi:"healthCheckDomain"`
	// HTTP status codes indicating that the health check is normal. It can contain several comma-separated values such as "http_2xx,http_3xx". Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckHttpCode pulumi.StringInput `pulumi:"healthCheckHttpCode"`
	// Time interval between two consecutive health checks.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// Amount of time in seconds to wait for the response from a health check. If an ECS instance sends no response within the specified timeout period, the health check fails. Only available when the protocol is `http` or `https`.
	HealthCheckTimeout pulumi.IntInput `pulumi:"healthCheckTimeout"`
	// Health check method. Possible values are `tcp` and `http`. Only available when the protocol is `tcp`.
	HealthCheckType pulumi.StringInput `pulumi:"healthCheckType"`
	// URI used for health check. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
	HealthCheckUri pulumi.StringInput `pulumi:"healthCheckUri"`
	// Number of consecutive successes of health check performed on the same ECS instance (from failure to success).
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// Timeout of http or https listener established connection idle timeout. Valid value range: [1-60] in seconds. Default to 15.
	IdleTimeout pulumi.IntInput `pulumi:"idleTimeout"`
	// ID of the active/standby server group.
	MasterSlaveServerGroupId pulumi.StringInput `pulumi:"masterSlaveServerGroupId"`
	// Timeout value of the TCP connection in seconds. If the value is 0, the session persistence function is disabled. Only available when the protocol is `tcp`.
	PersistenceTimeout pulumi.IntInput `pulumi:"persistenceTimeout"`
	// Filter listeners by the specified protocol. Valid values: `http`, `https`, `tcp` and `udp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Timeout of http or https listener request (which does not get response from backend) timeout. Valid value range: [1-180] in seconds. Default to 60.
	RequestTimeout pulumi.IntInput `pulumi:"requestTimeout"`
	// Algorithm used to distribute traffic. Possible values: `wrr` (weighted round robin), `wlc` (weighted least connection) and `rr` (round robin).
	Scheduler pulumi.StringInput `pulumi:"scheduler"`
	// Security status. Only available when the protocol is `https`.
	SecurityStatus      pulumi.StringInput `pulumi:"securityStatus"`
	ServerCertificateId pulumi.StringInput `pulumi:"serverCertificateId"`
	// ID of the linked VServer group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// ID of the server certificate. Only available when the protocol is `https`.
	SslCertificateId pulumi.StringInput `pulumi:"sslCertificateId"`
	// Listener status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicate whether session persistence is enabled or not. If enabled, all session requests from the same client are sent to the same backend server. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	StickySession pulumi.StringInput `pulumi:"stickySession"`
	// Method used to handle the cookie. Possible values are `insert` (cookie added to the response) and `server` (cookie set by the backend server). Only available when the protocol is `http` or `https` and stickySession is `on`.
	StickySessionType pulumi.StringInput `pulumi:"stickySessionType"`
	// Https listener TLS cipher policy. Valid values are `tlsCipherPolicy10`, `tlsCipherPolicy11`, `tlsCipherPolicy12`, `tlsCipherPolicy12Strict`. Default to `tlsCipherPolicy10`.
	TlsCipherPolicy pulumi.StringInput `pulumi:"tlsCipherPolicy"`
	// Number of consecutive failures of health check performed on the same ECS instance (from success to failure).
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
	// Indicate whether the HTTP header field "X-Forwarded-For" is added or not; it allows the backend server to know about the user's IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedFor pulumi.StringInput `pulumi:"xForwardedFor"`
	// Indicate whether the HTTP header field "X-Forwarded-For_SLBID" is added or not; it allows the backend server to know about the SLB ID. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbId pulumi.StringInput `pulumi:"xForwardedForSlbId"`
	// Indicate whether the HTTP header field "X-Forwarded-For_SLBIP" is added or not; it allows the backend server to know about the SLB IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbIp pulumi.StringInput `pulumi:"xForwardedForSlbIp"`
	// Indicate whether the HTTP header field "X-Forwarded-For_proto" is added or not; it allows the backend server to know about the user's protocol. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
	XForwardedForSlbProto pulumi.StringInput `pulumi:"xForwardedForSlbProto"`
}

func (GetListenersSlbListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersSlbListener)(nil)).Elem()
}

func (i GetListenersSlbListenerArgs) ToGetListenersSlbListenerOutput() GetListenersSlbListenerOutput {
	return i.ToGetListenersSlbListenerOutputWithContext(context.Background())
}

func (i GetListenersSlbListenerArgs) ToGetListenersSlbListenerOutputWithContext(ctx context.Context) GetListenersSlbListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersSlbListenerOutput)
}

// GetListenersSlbListenerArrayInput is an input type that accepts GetListenersSlbListenerArray and GetListenersSlbListenerArrayOutput values.
// You can construct a concrete instance of `GetListenersSlbListenerArrayInput` via:
//
//          GetListenersSlbListenerArray{ GetListenersSlbListenerArgs{...} }
type GetListenersSlbListenerArrayInput interface {
	pulumi.Input

	ToGetListenersSlbListenerArrayOutput() GetListenersSlbListenerArrayOutput
	ToGetListenersSlbListenerArrayOutputWithContext(context.Context) GetListenersSlbListenerArrayOutput
}

type GetListenersSlbListenerArray []GetListenersSlbListenerInput

func (GetListenersSlbListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersSlbListener)(nil)).Elem()
}

func (i GetListenersSlbListenerArray) ToGetListenersSlbListenerArrayOutput() GetListenersSlbListenerArrayOutput {
	return i.ToGetListenersSlbListenerArrayOutputWithContext(context.Background())
}

func (i GetListenersSlbListenerArray) ToGetListenersSlbListenerArrayOutputWithContext(ctx context.Context) GetListenersSlbListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersSlbListenerArrayOutput)
}

type GetListenersSlbListenerOutput struct{ *pulumi.OutputState }

func (GetListenersSlbListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersSlbListener)(nil)).Elem()
}

func (o GetListenersSlbListenerOutput) ToGetListenersSlbListenerOutput() GetListenersSlbListenerOutput {
	return o
}

func (o GetListenersSlbListenerOutput) ToGetListenersSlbListenerOutputWithContext(ctx context.Context) GetListenersSlbListenerOutput {
	return o
}

// Port opened on the backend server to receive requests.
func (o GetListenersSlbListenerOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Peak bandwidth. If the value is set to -1, the listener is not limited by bandwidth.
func (o GetListenersSlbListenerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// ID of the CA certificate (only required when two-way authentication is used). Only available when the protocol is `https`.
func (o GetListenersSlbListenerOutput) CaCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.CaCertificateId }).(pulumi.StringOutput)
}

// Cookie configured by the backend server. Only available when the stickySessionType is `server`.
func (o GetListenersSlbListenerOutput) Cookie() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Cookie }).(pulumi.StringOutput)
}

// Cookie timeout in seconds. Only available when the stickySessionType is `insert`.
func (o GetListenersSlbListenerOutput) CookieTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.CookieTimeout }).(pulumi.IntOutput)
}

// The description of slb listener.
func (o GetListenersSlbListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable https listener support http2 or not. Valid values are `on` and `off`. Default to `on`.
func (o GetListenersSlbListenerOutput) EnableHttp2() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.EnableHttp2 }).(pulumi.StringOutput)
}

// Connection timeout in seconds for the Layer 4 TCP listener. Only available when the protocol is `tcp`.
func (o GetListenersSlbListenerOutput) EstablishedTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.EstablishedTimeout }).(pulumi.IntOutput)
}

// Filter listeners by the specified frontend port.
func (o GetListenersSlbListenerOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Indicate whether Gzip compression is enabled or not. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) Gzip() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Gzip }).(pulumi.StringOutput)
}

// Indicate whether health check is enabled of not. Possible values are `on` and `off`.
func (o GetListenersSlbListenerOutput) HealthCheck() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.HealthCheck }).(pulumi.StringOutput)
}

// Port used for health check.
func (o GetListenersSlbListenerOutput) HealthCheckConnectPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.HealthCheckConnectPort }).(pulumi.IntOutput)
}

// Amount of time in seconds to wait for the response for a health check.
func (o GetListenersSlbListenerOutput) HealthCheckConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.HealthCheckConnectTimeout }).(pulumi.IntOutput)
}

// Domain name used for health check. The SLB sends HTTP head requests to the backend server, the domain is useful when the backend server verifies the host field in the requests. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
func (o GetListenersSlbListenerOutput) HealthCheckDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.HealthCheckDomain }).(pulumi.StringOutput)
}

// HTTP status codes indicating that the health check is normal. It can contain several comma-separated values such as "http_2xx,http_3xx". Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
func (o GetListenersSlbListenerOutput) HealthCheckHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.HealthCheckHttpCode }).(pulumi.StringOutput)
}

// Time interval between two consecutive health checks.
func (o GetListenersSlbListenerOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// Amount of time in seconds to wait for the response from a health check. If an ECS instance sends no response within the specified timeout period, the health check fails. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

// Health check method. Possible values are `tcp` and `http`. Only available when the protocol is `tcp`.
func (o GetListenersSlbListenerOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.HealthCheckType }).(pulumi.StringOutput)
}

// URI used for health check. Only available when the protocol is `http`, `https` or `tcp` (in this case healthCheckType must be `http`).
func (o GetListenersSlbListenerOutput) HealthCheckUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.HealthCheckUri }).(pulumi.StringOutput)
}

// Number of consecutive successes of health check performed on the same ECS instance (from failure to success).
func (o GetListenersSlbListenerOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// Timeout of http or https listener established connection idle timeout. Valid value range: [1-60] in seconds. Default to 15.
func (o GetListenersSlbListenerOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

// ID of the active/standby server group.
func (o GetListenersSlbListenerOutput) MasterSlaveServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.MasterSlaveServerGroupId }).(pulumi.StringOutput)
}

// Timeout value of the TCP connection in seconds. If the value is 0, the session persistence function is disabled. Only available when the protocol is `tcp`.
func (o GetListenersSlbListenerOutput) PersistenceTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.PersistenceTimeout }).(pulumi.IntOutput)
}

// Filter listeners by the specified protocol. Valid values: `http`, `https`, `tcp` and `udp`.
func (o GetListenersSlbListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Timeout of http or https listener request (which does not get response from backend) timeout. Valid value range: [1-180] in seconds. Default to 60.
func (o GetListenersSlbListenerOutput) RequestTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.RequestTimeout }).(pulumi.IntOutput)
}

// Algorithm used to distribute traffic. Possible values: `wrr` (weighted round robin), `wlc` (weighted least connection) and `rr` (round robin).
func (o GetListenersSlbListenerOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Scheduler }).(pulumi.StringOutput)
}

// Security status. Only available when the protocol is `https`.
func (o GetListenersSlbListenerOutput) SecurityStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.SecurityStatus }).(pulumi.StringOutput)
}

func (o GetListenersSlbListenerOutput) ServerCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.ServerCertificateId }).(pulumi.StringOutput)
}

// ID of the linked VServer group.
func (o GetListenersSlbListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// ID of the server certificate. Only available when the protocol is `https`.
func (o GetListenersSlbListenerOutput) SslCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.SslCertificateId }).(pulumi.StringOutput)
}

// Listener status.
func (o GetListenersSlbListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.Status }).(pulumi.StringOutput)
}

// Indicate whether session persistence is enabled or not. If enabled, all session requests from the same client are sent to the same backend server. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) StickySession() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.StickySession }).(pulumi.StringOutput)
}

// Method used to handle the cookie. Possible values are `insert` (cookie added to the response) and `server` (cookie set by the backend server). Only available when the protocol is `http` or `https` and stickySession is `on`.
func (o GetListenersSlbListenerOutput) StickySessionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.StickySessionType }).(pulumi.StringOutput)
}

// Https listener TLS cipher policy. Valid values are `tlsCipherPolicy10`, `tlsCipherPolicy11`, `tlsCipherPolicy12`, `tlsCipherPolicy12Strict`. Default to `tlsCipherPolicy10`.
func (o GetListenersSlbListenerOutput) TlsCipherPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.TlsCipherPolicy }).(pulumi.StringOutput)
}

// Number of consecutive failures of health check performed on the same ECS instance (from success to failure).
func (o GetListenersSlbListenerOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersSlbListener) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

// Indicate whether the HTTP header field "X-Forwarded-For" is added or not; it allows the backend server to know about the user's IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) XForwardedFor() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.XForwardedFor }).(pulumi.StringOutput)
}

// Indicate whether the HTTP header field "X-Forwarded-For_SLBID" is added or not; it allows the backend server to know about the SLB ID. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) XForwardedForSlbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.XForwardedForSlbId }).(pulumi.StringOutput)
}

// Indicate whether the HTTP header field "X-Forwarded-For_SLBIP" is added or not; it allows the backend server to know about the SLB IP address. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) XForwardedForSlbIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.XForwardedForSlbIp }).(pulumi.StringOutput)
}

// Indicate whether the HTTP header field "X-Forwarded-For_proto" is added or not; it allows the backend server to know about the user's protocol. Possible values are `on` and `off`. Only available when the protocol is `http` or `https`.
func (o GetListenersSlbListenerOutput) XForwardedForSlbProto() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersSlbListener) string { return v.XForwardedForSlbProto }).(pulumi.StringOutput)
}

type GetListenersSlbListenerArrayOutput struct{ *pulumi.OutputState }

func (GetListenersSlbListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersSlbListener)(nil)).Elem()
}

func (o GetListenersSlbListenerArrayOutput) ToGetListenersSlbListenerArrayOutput() GetListenersSlbListenerArrayOutput {
	return o
}

func (o GetListenersSlbListenerArrayOutput) ToGetListenersSlbListenerArrayOutputWithContext(ctx context.Context) GetListenersSlbListenerArrayOutput {
	return o
}

func (o GetListenersSlbListenerArrayOutput) Index(i pulumi.IntInput) GetListenersSlbListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersSlbListener {
		return vs[0].([]GetListenersSlbListener)[vs[1].(int)]
	}).(GetListenersSlbListenerOutput)
}

type GetLoadBalancersBalancer struct {
	// Service address of the SLBs.
	Address          string                                  `pulumi:"address"`
	AddressIpVersion string                                  `pulumi:"addressIpVersion"`
	AddressType      string                                  `pulumi:"addressType"`
	AutoReleaseTime  int                                     `pulumi:"autoReleaseTime"`
	BackendServers   []GetLoadBalancersBalancerBackendServer `pulumi:"backendServers"`
	Bandwidth        int                                     `pulumi:"bandwidth"`
	CreateTimeStamp  int                                     `pulumi:"createTimeStamp"`
	DeleteProtection string                                  `pulumi:"deleteProtection"`
	EndTime          string                                  `pulumi:"endTime"`
	EndTimeStamp     int                                     `pulumi:"endTimeStamp"`
	// ID of the SLB.
	Id                           string                                             `pulumi:"id"`
	InternetChargeType           string                                             `pulumi:"internetChargeType"`
	ListenerPortsAndProtocals    []GetLoadBalancersBalancerListenerPortsAndProtocal `pulumi:"listenerPortsAndProtocals"`
	ListenerPortsAndProtocols    []GetLoadBalancersBalancerListenerPortsAndProtocol `pulumi:"listenerPortsAndProtocols"`
	LoadBalancerId               string                                             `pulumi:"loadBalancerId"`
	LoadBalancerName             string                                             `pulumi:"loadBalancerName"`
	LoadBalancerSpec             string                                             `pulumi:"loadBalancerSpec"`
	MasterZoneId                 string                                             `pulumi:"masterZoneId"`
	ModificationProtectionReason string                                             `pulumi:"modificationProtectionReason"`
	ModificationProtectionStatus string                                             `pulumi:"modificationProtectionStatus"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType     string `pulumi:"networkType"`
	PaymentType     string `pulumi:"paymentType"`
	RegionIdAlias   string `pulumi:"regionIdAlias"`
	RenewalCycUnit  string `pulumi:"renewalCycUnit"`
	RenewalDuration int    `pulumi:"renewalDuration"`
	RenewalStatus   string `pulumi:"renewalStatus"`
	// The Id of resource group which SLB belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	SlaveZoneId     string `pulumi:"slaveZoneId"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetLoadBalancersBalancerInput is an input type that accepts GetLoadBalancersBalancerArgs and GetLoadBalancersBalancerOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerInput` via:
//
//          GetLoadBalancersBalancerArgs{...}
type GetLoadBalancersBalancerInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput
	ToGetLoadBalancersBalancerOutputWithContext(context.Context) GetLoadBalancersBalancerOutput
}

type GetLoadBalancersBalancerArgs struct {
	// Service address of the SLBs.
	Address          pulumi.StringInput                              `pulumi:"address"`
	AddressIpVersion pulumi.StringInput                              `pulumi:"addressIpVersion"`
	AddressType      pulumi.StringInput                              `pulumi:"addressType"`
	AutoReleaseTime  pulumi.IntInput                                 `pulumi:"autoReleaseTime"`
	BackendServers   GetLoadBalancersBalancerBackendServerArrayInput `pulumi:"backendServers"`
	Bandwidth        pulumi.IntInput                                 `pulumi:"bandwidth"`
	CreateTimeStamp  pulumi.IntInput                                 `pulumi:"createTimeStamp"`
	DeleteProtection pulumi.StringInput                              `pulumi:"deleteProtection"`
	EndTime          pulumi.StringInput                              `pulumi:"endTime"`
	EndTimeStamp     pulumi.IntInput                                 `pulumi:"endTimeStamp"`
	// ID of the SLB.
	Id                           pulumi.StringInput                                         `pulumi:"id"`
	InternetChargeType           pulumi.StringInput                                         `pulumi:"internetChargeType"`
	ListenerPortsAndProtocals    GetLoadBalancersBalancerListenerPortsAndProtocalArrayInput `pulumi:"listenerPortsAndProtocals"`
	ListenerPortsAndProtocols    GetLoadBalancersBalancerListenerPortsAndProtocolArrayInput `pulumi:"listenerPortsAndProtocols"`
	LoadBalancerId               pulumi.StringInput                                         `pulumi:"loadBalancerId"`
	LoadBalancerName             pulumi.StringInput                                         `pulumi:"loadBalancerName"`
	LoadBalancerSpec             pulumi.StringInput                                         `pulumi:"loadBalancerSpec"`
	MasterZoneId                 pulumi.StringInput                                         `pulumi:"masterZoneId"`
	ModificationProtectionReason pulumi.StringInput                                         `pulumi:"modificationProtectionReason"`
	ModificationProtectionStatus pulumi.StringInput                                         `pulumi:"modificationProtectionStatus"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType     pulumi.StringInput `pulumi:"networkType"`
	PaymentType     pulumi.StringInput `pulumi:"paymentType"`
	RegionIdAlias   pulumi.StringInput `pulumi:"regionIdAlias"`
	RenewalCycUnit  pulumi.StringInput `pulumi:"renewalCycUnit"`
	RenewalDuration pulumi.IntInput    `pulumi:"renewalDuration"`
	RenewalStatus   pulumi.StringInput `pulumi:"renewalStatus"`
	// The Id of resource group which SLB belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	SlaveZoneId     pulumi.StringInput `pulumi:"slaveZoneId"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetLoadBalancersBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerArgs) ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput {
	return i.ToGetLoadBalancersBalancerOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerArgs) ToGetLoadBalancersBalancerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerOutput)
}

// GetLoadBalancersBalancerArrayInput is an input type that accepts GetLoadBalancersBalancerArray and GetLoadBalancersBalancerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerArrayInput` via:
//
//          GetLoadBalancersBalancerArray{ GetLoadBalancersBalancerArgs{...} }
type GetLoadBalancersBalancerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput
	ToGetLoadBalancersBalancerArrayOutputWithContext(context.Context) GetLoadBalancersBalancerArrayOutput
}

type GetLoadBalancersBalancerArray []GetLoadBalancersBalancerInput

func (GetLoadBalancersBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerArray) ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput {
	return i.ToGetLoadBalancersBalancerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerArray) ToGetLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerArrayOutput)
}

type GetLoadBalancersBalancerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerOutput) ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput {
	return o
}

func (o GetLoadBalancersBalancerOutput) ToGetLoadBalancersBalancerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerOutput {
	return o
}

// Service address of the SLBs.
func (o GetLoadBalancersBalancerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.AddressType }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) AutoReleaseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) int { return v.AutoReleaseTime }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerOutput) BackendServers() GetLoadBalancersBalancerBackendServerArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerBackendServer { return v.BackendServers }).(GetLoadBalancersBalancerBackendServerArrayOutput)
}

func (o GetLoadBalancersBalancerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerOutput) CreateTimeStamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) int { return v.CreateTimeStamp }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerOutput) DeleteProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.DeleteProtection }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) EndTimeStamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) int { return v.EndTimeStamp }).(pulumi.IntOutput)
}

// ID of the SLB.
func (o GetLoadBalancersBalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) ListenerPortsAndProtocals() GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerListenerPortsAndProtocal {
		return v.ListenerPortsAndProtocals
	}).(GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput)
}

func (o GetLoadBalancersBalancerOutput) ListenerPortsAndProtocols() GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerListenerPortsAndProtocol {
		return v.ListenerPortsAndProtocols
	}).(GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput)
}

func (o GetLoadBalancersBalancerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) LoadBalancerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerSpec }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) MasterZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.MasterZoneId }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) ModificationProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.ModificationProtectionReason }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// Network type of the SLBs. Valid values: `vpc` and `classic`.
func (o GetLoadBalancersBalancerOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.NetworkType }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.PaymentType }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) RegionIdAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.RegionIdAlias }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) RenewalCycUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.RenewalCycUnit }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) RenewalDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) int { return v.RenewalDuration }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerOutput) RenewalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.RenewalStatus }).(pulumi.StringOutput)
}

// The Id of resource group which SLB belongs.
func (o GetLoadBalancersBalancerOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerOutput) SlaveZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.SlaveZoneId }).(pulumi.StringOutput)
}

// SLB current status. Possible values: `inactive`, `active` and `locked`.
func (o GetLoadBalancersBalancerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 				"tagKey2": "tagValue2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetLoadBalancersBalancerOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC linked to the SLBs.
func (o GetLoadBalancersBalancerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch linked to the SLBs.
func (o GetLoadBalancersBalancerOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerArrayOutput) ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerArrayOutput) ToGetLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancer {
		return vs[0].([]GetLoadBalancersBalancer)[vs[1].(int)]
	}).(GetLoadBalancersBalancerOutput)
}

type GetLoadBalancersBalancerBackendServer struct {
	Description string `pulumi:"description"`
	ServerId    string `pulumi:"serverId"`
	Type        string `pulumi:"type"`
	Weight      int    `pulumi:"weight"`
}

// GetLoadBalancersBalancerBackendServerInput is an input type that accepts GetLoadBalancersBalancerBackendServerArgs and GetLoadBalancersBalancerBackendServerOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerBackendServerInput` via:
//
//          GetLoadBalancersBalancerBackendServerArgs{...}
type GetLoadBalancersBalancerBackendServerInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerBackendServerOutput() GetLoadBalancersBalancerBackendServerOutput
	ToGetLoadBalancersBalancerBackendServerOutputWithContext(context.Context) GetLoadBalancersBalancerBackendServerOutput
}

type GetLoadBalancersBalancerBackendServerArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	ServerId    pulumi.StringInput `pulumi:"serverId"`
	Type        pulumi.StringInput `pulumi:"type"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (GetLoadBalancersBalancerBackendServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerBackendServerArgs) ToGetLoadBalancersBalancerBackendServerOutput() GetLoadBalancersBalancerBackendServerOutput {
	return i.ToGetLoadBalancersBalancerBackendServerOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerBackendServerArgs) ToGetLoadBalancersBalancerBackendServerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerBackendServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerBackendServerOutput)
}

// GetLoadBalancersBalancerBackendServerArrayInput is an input type that accepts GetLoadBalancersBalancerBackendServerArray and GetLoadBalancersBalancerBackendServerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerBackendServerArrayInput` via:
//
//          GetLoadBalancersBalancerBackendServerArray{ GetLoadBalancersBalancerBackendServerArgs{...} }
type GetLoadBalancersBalancerBackendServerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerBackendServerArrayOutput() GetLoadBalancersBalancerBackendServerArrayOutput
	ToGetLoadBalancersBalancerBackendServerArrayOutputWithContext(context.Context) GetLoadBalancersBalancerBackendServerArrayOutput
}

type GetLoadBalancersBalancerBackendServerArray []GetLoadBalancersBalancerBackendServerInput

func (GetLoadBalancersBalancerBackendServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerBackendServerArray) ToGetLoadBalancersBalancerBackendServerArrayOutput() GetLoadBalancersBalancerBackendServerArrayOutput {
	return i.ToGetLoadBalancersBalancerBackendServerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerBackendServerArray) ToGetLoadBalancersBalancerBackendServerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerBackendServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerBackendServerArrayOutput)
}

type GetLoadBalancersBalancerBackendServerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerBackendServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerBackendServerOutput) ToGetLoadBalancersBalancerBackendServerOutput() GetLoadBalancersBalancerBackendServerOutput {
	return o
}

func (o GetLoadBalancersBalancerBackendServerOutput) ToGetLoadBalancersBalancerBackendServerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerBackendServerOutput {
	return o
}

func (o GetLoadBalancersBalancerBackendServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerBackendServer) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerBackendServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerBackendServer) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerBackendServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerBackendServer) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerBackendServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerBackendServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetLoadBalancersBalancerBackendServerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerBackendServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerBackendServer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerBackendServerArrayOutput) ToGetLoadBalancersBalancerBackendServerArrayOutput() GetLoadBalancersBalancerBackendServerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerBackendServerArrayOutput) ToGetLoadBalancersBalancerBackendServerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerBackendServerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerBackendServerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerBackendServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerBackendServer {
		return vs[0].([]GetLoadBalancersBalancerBackendServer)[vs[1].(int)]
	}).(GetLoadBalancersBalancerBackendServerOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocal struct {
	ListenerPort     int    `pulumi:"listenerPort"`
	ListenerProtocal string `pulumi:"listenerProtocal"`
}

// GetLoadBalancersBalancerListenerPortsAndProtocalInput is an input type that accepts GetLoadBalancersBalancerListenerPortsAndProtocalArgs and GetLoadBalancersBalancerListenerPortsAndProtocalOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerListenerPortsAndProtocalInput` via:
//
//          GetLoadBalancersBalancerListenerPortsAndProtocalArgs{...}
type GetLoadBalancersBalancerListenerPortsAndProtocalInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerListenerPortsAndProtocalOutput() GetLoadBalancersBalancerListenerPortsAndProtocalOutput
	ToGetLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalOutput
}

type GetLoadBalancersBalancerListenerPortsAndProtocalArgs struct {
	ListenerPort     pulumi.IntInput    `pulumi:"listenerPort"`
	ListenerProtocal pulumi.StringInput `pulumi:"listenerProtocal"`
}

func (GetLoadBalancersBalancerListenerPortsAndProtocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocalArgs) ToGetLoadBalancersBalancerListenerPortsAndProtocalOutput() GetLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return i.ToGetLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocalArgs) ToGetLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerListenerPortsAndProtocalOutput)
}

// GetLoadBalancersBalancerListenerPortsAndProtocalArrayInput is an input type that accepts GetLoadBalancersBalancerListenerPortsAndProtocalArray and GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerListenerPortsAndProtocalArrayInput` via:
//
//          GetLoadBalancersBalancerListenerPortsAndProtocalArray{ GetLoadBalancersBalancerListenerPortsAndProtocalArgs{...} }
type GetLoadBalancersBalancerListenerPortsAndProtocalArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput
	ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput
}

type GetLoadBalancersBalancerListenerPortsAndProtocalArray []GetLoadBalancersBalancerListenerPortsAndProtocalInput

func (GetLoadBalancersBalancerListenerPortsAndProtocalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocalArray) ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return i.ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocalArray) ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocalOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerListenerPortsAndProtocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocalOutput() GetLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocalOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocal) int { return v.ListenerPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalOutput) ListenerProtocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocal) string { return v.ListenerProtocal }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerListenerPortsAndProtocal)(nil)).Elem()
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocalArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerListenerPortsAndProtocalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerListenerPortsAndProtocal {
		return vs[0].([]GetLoadBalancersBalancerListenerPortsAndProtocal)[vs[1].(int)]
	}).(GetLoadBalancersBalancerListenerPortsAndProtocalOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocol struct {
	Description      string `pulumi:"description"`
	ForwardPort      int    `pulumi:"forwardPort"`
	ListenerForward  string `pulumi:"listenerForward"`
	ListenerPort     int    `pulumi:"listenerPort"`
	ListenerProtocol string `pulumi:"listenerProtocol"`
}

// GetLoadBalancersBalancerListenerPortsAndProtocolInput is an input type that accepts GetLoadBalancersBalancerListenerPortsAndProtocolArgs and GetLoadBalancersBalancerListenerPortsAndProtocolOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerListenerPortsAndProtocolInput` via:
//
//          GetLoadBalancersBalancerListenerPortsAndProtocolArgs{...}
type GetLoadBalancersBalancerListenerPortsAndProtocolInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerListenerPortsAndProtocolOutput() GetLoadBalancersBalancerListenerPortsAndProtocolOutput
	ToGetLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolOutput
}

type GetLoadBalancersBalancerListenerPortsAndProtocolArgs struct {
	Description      pulumi.StringInput `pulumi:"description"`
	ForwardPort      pulumi.IntInput    `pulumi:"forwardPort"`
	ListenerForward  pulumi.StringInput `pulumi:"listenerForward"`
	ListenerPort     pulumi.IntInput    `pulumi:"listenerPort"`
	ListenerProtocol pulumi.StringInput `pulumi:"listenerProtocol"`
}

func (GetLoadBalancersBalancerListenerPortsAndProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocolArgs) ToGetLoadBalancersBalancerListenerPortsAndProtocolOutput() GetLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return i.ToGetLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocolArgs) ToGetLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerListenerPortsAndProtocolOutput)
}

// GetLoadBalancersBalancerListenerPortsAndProtocolArrayInput is an input type that accepts GetLoadBalancersBalancerListenerPortsAndProtocolArray and GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerListenerPortsAndProtocolArrayInput` via:
//
//          GetLoadBalancersBalancerListenerPortsAndProtocolArray{ GetLoadBalancersBalancerListenerPortsAndProtocolArgs{...} }
type GetLoadBalancersBalancerListenerPortsAndProtocolArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput
	ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput
}

type GetLoadBalancersBalancerListenerPortsAndProtocolArray []GetLoadBalancersBalancerListenerPortsAndProtocolInput

func (GetLoadBalancersBalancerListenerPortsAndProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocolArray) ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return i.ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerListenerPortsAndProtocolArray) ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocolOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocolOutput() GetLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocolOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocol) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ForwardPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocol) int { return v.ForwardPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerForward() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocol) string { return v.ListenerForward }).(pulumi.StringOutput)
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocol) int { return v.ListenerPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolOutput) ListenerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerListenerPortsAndProtocol) string { return v.ListenerProtocol }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerListenerPortsAndProtocol)(nil)).Elem()
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput() GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) ToGetLoadBalancersBalancerListenerPortsAndProtocolArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerListenerPortsAndProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerListenerPortsAndProtocol {
		return vs[0].([]GetLoadBalancersBalancerListenerPortsAndProtocol)[vs[1].(int)]
	}).(GetLoadBalancersBalancerListenerPortsAndProtocolOutput)
}

type GetLoadBalancersSlb struct {
	// Service address of the SLBs.
	Address string `pulumi:"address"`
	// SLB creation time.
	CreationTime string `pulumi:"creationTime"`
	// ID of the SLB.
	Id string `pulumi:"id"`
	// SLB addressType: internet if `true`, intranet if `false`. Must be `false` when `networkType` is `vpc`.
	Internet bool `pulumi:"internet"`
	// Master availability zone of the SLBs.
	MasterAvailabilityZone string `pulumi:"masterAvailabilityZone"`
	// SLB name.
	Name string `pulumi:"name"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType string `pulumi:"networkType"`
	// Region ID the SLB belongs to.
	RegionId string `pulumi:"regionId"`
	// Slave availability zone of the SLBs.
	SlaveAvailabilityZone string `pulumi:"slaveAvailabilityZone"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId string `pulumi:"vswitchId"`
}

// GetLoadBalancersSlbInput is an input type that accepts GetLoadBalancersSlbArgs and GetLoadBalancersSlbOutput values.
// You can construct a concrete instance of `GetLoadBalancersSlbInput` via:
//
//          GetLoadBalancersSlbArgs{...}
type GetLoadBalancersSlbInput interface {
	pulumi.Input

	ToGetLoadBalancersSlbOutput() GetLoadBalancersSlbOutput
	ToGetLoadBalancersSlbOutputWithContext(context.Context) GetLoadBalancersSlbOutput
}

type GetLoadBalancersSlbArgs struct {
	// Service address of the SLBs.
	Address pulumi.StringInput `pulumi:"address"`
	// SLB creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// ID of the SLB.
	Id pulumi.StringInput `pulumi:"id"`
	// SLB addressType: internet if `true`, intranet if `false`. Must be `false` when `networkType` is `vpc`.
	Internet pulumi.BoolInput `pulumi:"internet"`
	// Master availability zone of the SLBs.
	MasterAvailabilityZone pulumi.StringInput `pulumi:"masterAvailabilityZone"`
	// SLB name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network type of the SLBs. Valid values: `vpc` and `classic`.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Region ID the SLB belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Slave availability zone of the SLBs.
	SlaveAvailabilityZone pulumi.StringInput `pulumi:"slaveAvailabilityZone"`
	// SLB current status. Possible values: `inactive`, `active` and `locked`.
	Status pulumi.StringInput `pulumi:"status"`
	// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 				"tagKey2": "tagValue2",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// ID of the VPC linked to the SLBs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch linked to the SLBs.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetLoadBalancersSlbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersSlb)(nil)).Elem()
}

func (i GetLoadBalancersSlbArgs) ToGetLoadBalancersSlbOutput() GetLoadBalancersSlbOutput {
	return i.ToGetLoadBalancersSlbOutputWithContext(context.Background())
}

func (i GetLoadBalancersSlbArgs) ToGetLoadBalancersSlbOutputWithContext(ctx context.Context) GetLoadBalancersSlbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersSlbOutput)
}

// GetLoadBalancersSlbArrayInput is an input type that accepts GetLoadBalancersSlbArray and GetLoadBalancersSlbArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersSlbArrayInput` via:
//
//          GetLoadBalancersSlbArray{ GetLoadBalancersSlbArgs{...} }
type GetLoadBalancersSlbArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersSlbArrayOutput() GetLoadBalancersSlbArrayOutput
	ToGetLoadBalancersSlbArrayOutputWithContext(context.Context) GetLoadBalancersSlbArrayOutput
}

type GetLoadBalancersSlbArray []GetLoadBalancersSlbInput

func (GetLoadBalancersSlbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersSlb)(nil)).Elem()
}

func (i GetLoadBalancersSlbArray) ToGetLoadBalancersSlbArrayOutput() GetLoadBalancersSlbArrayOutput {
	return i.ToGetLoadBalancersSlbArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersSlbArray) ToGetLoadBalancersSlbArrayOutputWithContext(ctx context.Context) GetLoadBalancersSlbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersSlbArrayOutput)
}

type GetLoadBalancersSlbOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersSlbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersSlb)(nil)).Elem()
}

func (o GetLoadBalancersSlbOutput) ToGetLoadBalancersSlbOutput() GetLoadBalancersSlbOutput {
	return o
}

func (o GetLoadBalancersSlbOutput) ToGetLoadBalancersSlbOutputWithContext(ctx context.Context) GetLoadBalancersSlbOutput {
	return o
}

// Service address of the SLBs.
func (o GetLoadBalancersSlbOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.Address }).(pulumi.StringOutput)
}

// SLB creation time.
func (o GetLoadBalancersSlbOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.CreationTime }).(pulumi.StringOutput)
}

// ID of the SLB.
func (o GetLoadBalancersSlbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.Id }).(pulumi.StringOutput)
}

// SLB addressType: internet if `true`, intranet if `false`. Must be `false` when `networkType` is `vpc`.
func (o GetLoadBalancersSlbOutput) Internet() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) bool { return v.Internet }).(pulumi.BoolOutput)
}

// Master availability zone of the SLBs.
func (o GetLoadBalancersSlbOutput) MasterAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.MasterAvailabilityZone }).(pulumi.StringOutput)
}

// SLB name.
func (o GetLoadBalancersSlbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.Name }).(pulumi.StringOutput)
}

// Network type of the SLBs. Valid values: `vpc` and `classic`.
func (o GetLoadBalancersSlbOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Region ID the SLB belongs to.
func (o GetLoadBalancersSlbOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.RegionId }).(pulumi.StringOutput)
}

// Slave availability zone of the SLBs.
func (o GetLoadBalancersSlbOutput) SlaveAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.SlaveAvailabilityZone }).(pulumi.StringOutput)
}

// SLB current status. Possible values: `inactive`, `active` and `locked`.
func (o GetLoadBalancersSlbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/slb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := slb.GetLoadBalancers(ctx, &slb.GetLoadBalancersArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 				"tagKey2": "tagValue2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetLoadBalancersSlbOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// ID of the VPC linked to the SLBs.
func (o GetLoadBalancersSlbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch linked to the SLBs.
func (o GetLoadBalancersSlbOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersSlb) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetLoadBalancersSlbArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersSlbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersSlb)(nil)).Elem()
}

func (o GetLoadBalancersSlbArrayOutput) ToGetLoadBalancersSlbArrayOutput() GetLoadBalancersSlbArrayOutput {
	return o
}

func (o GetLoadBalancersSlbArrayOutput) ToGetLoadBalancersSlbArrayOutputWithContext(ctx context.Context) GetLoadBalancersSlbArrayOutput {
	return o
}

func (o GetLoadBalancersSlbArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersSlbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersSlb {
		return vs[0].([]GetLoadBalancersSlb)[vs[1].(int)]
	}).(GetLoadBalancersSlbOutput)
}

type GetMasterSlaveServerGroupsGroup struct {
	// master slave server group ID.
	Id string `pulumi:"id"`
	// master slave server group name.
	Name string `pulumi:"name"`
	// ECS instances associated to the group. Each element contains the following attributes:
	Servers []GetMasterSlaveServerGroupsGroupServer `pulumi:"servers"`
}

// GetMasterSlaveServerGroupsGroupInput is an input type that accepts GetMasterSlaveServerGroupsGroupArgs and GetMasterSlaveServerGroupsGroupOutput values.
// You can construct a concrete instance of `GetMasterSlaveServerGroupsGroupInput` via:
//
//          GetMasterSlaveServerGroupsGroupArgs{...}
type GetMasterSlaveServerGroupsGroupInput interface {
	pulumi.Input

	ToGetMasterSlaveServerGroupsGroupOutput() GetMasterSlaveServerGroupsGroupOutput
	ToGetMasterSlaveServerGroupsGroupOutputWithContext(context.Context) GetMasterSlaveServerGroupsGroupOutput
}

type GetMasterSlaveServerGroupsGroupArgs struct {
	// master slave server group ID.
	Id pulumi.StringInput `pulumi:"id"`
	// master slave server group name.
	Name pulumi.StringInput `pulumi:"name"`
	// ECS instances associated to the group. Each element contains the following attributes:
	Servers GetMasterSlaveServerGroupsGroupServerArrayInput `pulumi:"servers"`
}

func (GetMasterSlaveServerGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMasterSlaveServerGroupsGroup)(nil)).Elem()
}

func (i GetMasterSlaveServerGroupsGroupArgs) ToGetMasterSlaveServerGroupsGroupOutput() GetMasterSlaveServerGroupsGroupOutput {
	return i.ToGetMasterSlaveServerGroupsGroupOutputWithContext(context.Background())
}

func (i GetMasterSlaveServerGroupsGroupArgs) ToGetMasterSlaveServerGroupsGroupOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMasterSlaveServerGroupsGroupOutput)
}

// GetMasterSlaveServerGroupsGroupArrayInput is an input type that accepts GetMasterSlaveServerGroupsGroupArray and GetMasterSlaveServerGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetMasterSlaveServerGroupsGroupArrayInput` via:
//
//          GetMasterSlaveServerGroupsGroupArray{ GetMasterSlaveServerGroupsGroupArgs{...} }
type GetMasterSlaveServerGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetMasterSlaveServerGroupsGroupArrayOutput() GetMasterSlaveServerGroupsGroupArrayOutput
	ToGetMasterSlaveServerGroupsGroupArrayOutputWithContext(context.Context) GetMasterSlaveServerGroupsGroupArrayOutput
}

type GetMasterSlaveServerGroupsGroupArray []GetMasterSlaveServerGroupsGroupInput

func (GetMasterSlaveServerGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMasterSlaveServerGroupsGroup)(nil)).Elem()
}

func (i GetMasterSlaveServerGroupsGroupArray) ToGetMasterSlaveServerGroupsGroupArrayOutput() GetMasterSlaveServerGroupsGroupArrayOutput {
	return i.ToGetMasterSlaveServerGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetMasterSlaveServerGroupsGroupArray) ToGetMasterSlaveServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMasterSlaveServerGroupsGroupArrayOutput)
}

type GetMasterSlaveServerGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetMasterSlaveServerGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMasterSlaveServerGroupsGroup)(nil)).Elem()
}

func (o GetMasterSlaveServerGroupsGroupOutput) ToGetMasterSlaveServerGroupsGroupOutput() GetMasterSlaveServerGroupsGroupOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupOutput) ToGetMasterSlaveServerGroupsGroupOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupOutput {
	return o
}

// master slave server group ID.
func (o GetMasterSlaveServerGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// master slave server group name.
func (o GetMasterSlaveServerGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// ECS instances associated to the group. Each element contains the following attributes:
func (o GetMasterSlaveServerGroupsGroupOutput) Servers() GetMasterSlaveServerGroupsGroupServerArrayOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroup) []GetMasterSlaveServerGroupsGroupServer { return v.Servers }).(GetMasterSlaveServerGroupsGroupServerArrayOutput)
}

type GetMasterSlaveServerGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMasterSlaveServerGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMasterSlaveServerGroupsGroup)(nil)).Elem()
}

func (o GetMasterSlaveServerGroupsGroupArrayOutput) ToGetMasterSlaveServerGroupsGroupArrayOutput() GetMasterSlaveServerGroupsGroupArrayOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupArrayOutput) ToGetMasterSlaveServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupArrayOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetMasterSlaveServerGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMasterSlaveServerGroupsGroup {
		return vs[0].([]GetMasterSlaveServerGroupsGroup)[vs[1].(int)]
	}).(GetMasterSlaveServerGroupsGroupOutput)
}

type GetMasterSlaveServerGroupsGroupServer struct {
	// ID of the attached ECS instance.
	InstanceId string `pulumi:"instanceId"`
	// (Removed from v1.63.0) Determine if the server is executing.
	IsBackup int `pulumi:"isBackup"`
	// The port used by the master slave server group.
	Port int `pulumi:"port"`
	// The server type of the attached ECS instance.
	ServerType string `pulumi:"serverType"`
	// Weight associated to the ECS instance.
	Weight int `pulumi:"weight"`
}

// GetMasterSlaveServerGroupsGroupServerInput is an input type that accepts GetMasterSlaveServerGroupsGroupServerArgs and GetMasterSlaveServerGroupsGroupServerOutput values.
// You can construct a concrete instance of `GetMasterSlaveServerGroupsGroupServerInput` via:
//
//          GetMasterSlaveServerGroupsGroupServerArgs{...}
type GetMasterSlaveServerGroupsGroupServerInput interface {
	pulumi.Input

	ToGetMasterSlaveServerGroupsGroupServerOutput() GetMasterSlaveServerGroupsGroupServerOutput
	ToGetMasterSlaveServerGroupsGroupServerOutputWithContext(context.Context) GetMasterSlaveServerGroupsGroupServerOutput
}

type GetMasterSlaveServerGroupsGroupServerArgs struct {
	// ID of the attached ECS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// (Removed from v1.63.0) Determine if the server is executing.
	IsBackup pulumi.IntInput `pulumi:"isBackup"`
	// The port used by the master slave server group.
	Port pulumi.IntInput `pulumi:"port"`
	// The server type of the attached ECS instance.
	ServerType pulumi.StringInput `pulumi:"serverType"`
	// Weight associated to the ECS instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetMasterSlaveServerGroupsGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMasterSlaveServerGroupsGroupServer)(nil)).Elem()
}

func (i GetMasterSlaveServerGroupsGroupServerArgs) ToGetMasterSlaveServerGroupsGroupServerOutput() GetMasterSlaveServerGroupsGroupServerOutput {
	return i.ToGetMasterSlaveServerGroupsGroupServerOutputWithContext(context.Background())
}

func (i GetMasterSlaveServerGroupsGroupServerArgs) ToGetMasterSlaveServerGroupsGroupServerOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMasterSlaveServerGroupsGroupServerOutput)
}

// GetMasterSlaveServerGroupsGroupServerArrayInput is an input type that accepts GetMasterSlaveServerGroupsGroupServerArray and GetMasterSlaveServerGroupsGroupServerArrayOutput values.
// You can construct a concrete instance of `GetMasterSlaveServerGroupsGroupServerArrayInput` via:
//
//          GetMasterSlaveServerGroupsGroupServerArray{ GetMasterSlaveServerGroupsGroupServerArgs{...} }
type GetMasterSlaveServerGroupsGroupServerArrayInput interface {
	pulumi.Input

	ToGetMasterSlaveServerGroupsGroupServerArrayOutput() GetMasterSlaveServerGroupsGroupServerArrayOutput
	ToGetMasterSlaveServerGroupsGroupServerArrayOutputWithContext(context.Context) GetMasterSlaveServerGroupsGroupServerArrayOutput
}

type GetMasterSlaveServerGroupsGroupServerArray []GetMasterSlaveServerGroupsGroupServerInput

func (GetMasterSlaveServerGroupsGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMasterSlaveServerGroupsGroupServer)(nil)).Elem()
}

func (i GetMasterSlaveServerGroupsGroupServerArray) ToGetMasterSlaveServerGroupsGroupServerArrayOutput() GetMasterSlaveServerGroupsGroupServerArrayOutput {
	return i.ToGetMasterSlaveServerGroupsGroupServerArrayOutputWithContext(context.Background())
}

func (i GetMasterSlaveServerGroupsGroupServerArray) ToGetMasterSlaveServerGroupsGroupServerArrayOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMasterSlaveServerGroupsGroupServerArrayOutput)
}

type GetMasterSlaveServerGroupsGroupServerOutput struct{ *pulumi.OutputState }

func (GetMasterSlaveServerGroupsGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMasterSlaveServerGroupsGroupServer)(nil)).Elem()
}

func (o GetMasterSlaveServerGroupsGroupServerOutput) ToGetMasterSlaveServerGroupsGroupServerOutput() GetMasterSlaveServerGroupsGroupServerOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupServerOutput) ToGetMasterSlaveServerGroupsGroupServerOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupServerOutput {
	return o
}

// ID of the attached ECS instance.
func (o GetMasterSlaveServerGroupsGroupServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroupServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// (Removed from v1.63.0) Determine if the server is executing.
func (o GetMasterSlaveServerGroupsGroupServerOutput) IsBackup() pulumi.IntOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroupServer) int { return v.IsBackup }).(pulumi.IntOutput)
}

// The port used by the master slave server group.
func (o GetMasterSlaveServerGroupsGroupServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroupServer) int { return v.Port }).(pulumi.IntOutput)
}

// The server type of the attached ECS instance.
func (o GetMasterSlaveServerGroupsGroupServerOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroupServer) string { return v.ServerType }).(pulumi.StringOutput)
}

// Weight associated to the ECS instance.
func (o GetMasterSlaveServerGroupsGroupServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetMasterSlaveServerGroupsGroupServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetMasterSlaveServerGroupsGroupServerArrayOutput struct{ *pulumi.OutputState }

func (GetMasterSlaveServerGroupsGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMasterSlaveServerGroupsGroupServer)(nil)).Elem()
}

func (o GetMasterSlaveServerGroupsGroupServerArrayOutput) ToGetMasterSlaveServerGroupsGroupServerArrayOutput() GetMasterSlaveServerGroupsGroupServerArrayOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupServerArrayOutput) ToGetMasterSlaveServerGroupsGroupServerArrayOutputWithContext(ctx context.Context) GetMasterSlaveServerGroupsGroupServerArrayOutput {
	return o
}

func (o GetMasterSlaveServerGroupsGroupServerArrayOutput) Index(i pulumi.IntInput) GetMasterSlaveServerGroupsGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMasterSlaveServerGroupsGroupServer {
		return vs[0].([]GetMasterSlaveServerGroupsGroupServer)[vs[1].(int)]
	}).(GetMasterSlaveServerGroupsGroupServerOutput)
}

type GetRulesSlbRule struct {
	// Domain name in the HTTP request where the rule applies (e.g. "*.aliyun.com").
	Domain string `pulumi:"domain"`
	// Rule ID.
	Id string `pulumi:"id"`
	// Rule name.
	Name string `pulumi:"name"`
	// ID of the linked VServer group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// Path in the HTTP request where the rule applies (e.g. "/image").
	Url string `pulumi:"url"`
}

// GetRulesSlbRuleInput is an input type that accepts GetRulesSlbRuleArgs and GetRulesSlbRuleOutput values.
// You can construct a concrete instance of `GetRulesSlbRuleInput` via:
//
//          GetRulesSlbRuleArgs{...}
type GetRulesSlbRuleInput interface {
	pulumi.Input

	ToGetRulesSlbRuleOutput() GetRulesSlbRuleOutput
	ToGetRulesSlbRuleOutputWithContext(context.Context) GetRulesSlbRuleOutput
}

type GetRulesSlbRuleArgs struct {
	// Domain name in the HTTP request where the rule applies (e.g. "*.aliyun.com").
	Domain pulumi.StringInput `pulumi:"domain"`
	// Rule ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Rule name.
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the linked VServer group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// Path in the HTTP request where the rule applies (e.g. "/image").
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetRulesSlbRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesSlbRule)(nil)).Elem()
}

func (i GetRulesSlbRuleArgs) ToGetRulesSlbRuleOutput() GetRulesSlbRuleOutput {
	return i.ToGetRulesSlbRuleOutputWithContext(context.Background())
}

func (i GetRulesSlbRuleArgs) ToGetRulesSlbRuleOutputWithContext(ctx context.Context) GetRulesSlbRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesSlbRuleOutput)
}

// GetRulesSlbRuleArrayInput is an input type that accepts GetRulesSlbRuleArray and GetRulesSlbRuleArrayOutput values.
// You can construct a concrete instance of `GetRulesSlbRuleArrayInput` via:
//
//          GetRulesSlbRuleArray{ GetRulesSlbRuleArgs{...} }
type GetRulesSlbRuleArrayInput interface {
	pulumi.Input

	ToGetRulesSlbRuleArrayOutput() GetRulesSlbRuleArrayOutput
	ToGetRulesSlbRuleArrayOutputWithContext(context.Context) GetRulesSlbRuleArrayOutput
}

type GetRulesSlbRuleArray []GetRulesSlbRuleInput

func (GetRulesSlbRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesSlbRule)(nil)).Elem()
}

func (i GetRulesSlbRuleArray) ToGetRulesSlbRuleArrayOutput() GetRulesSlbRuleArrayOutput {
	return i.ToGetRulesSlbRuleArrayOutputWithContext(context.Background())
}

func (i GetRulesSlbRuleArray) ToGetRulesSlbRuleArrayOutputWithContext(ctx context.Context) GetRulesSlbRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesSlbRuleArrayOutput)
}

type GetRulesSlbRuleOutput struct{ *pulumi.OutputState }

func (GetRulesSlbRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesSlbRule)(nil)).Elem()
}

func (o GetRulesSlbRuleOutput) ToGetRulesSlbRuleOutput() GetRulesSlbRuleOutput {
	return o
}

func (o GetRulesSlbRuleOutput) ToGetRulesSlbRuleOutputWithContext(ctx context.Context) GetRulesSlbRuleOutput {
	return o
}

// Domain name in the HTTP request where the rule applies (e.g. "*.aliyun.com").
func (o GetRulesSlbRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSlbRule) string { return v.Domain }).(pulumi.StringOutput)
}

// Rule ID.
func (o GetRulesSlbRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSlbRule) string { return v.Id }).(pulumi.StringOutput)
}

// Rule name.
func (o GetRulesSlbRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSlbRule) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the linked VServer group.
func (o GetRulesSlbRuleOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSlbRule) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// Path in the HTTP request where the rule applies (e.g. "/image").
func (o GetRulesSlbRuleOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesSlbRule) string { return v.Url }).(pulumi.StringOutput)
}

type GetRulesSlbRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRulesSlbRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesSlbRule)(nil)).Elem()
}

func (o GetRulesSlbRuleArrayOutput) ToGetRulesSlbRuleArrayOutput() GetRulesSlbRuleArrayOutput {
	return o
}

func (o GetRulesSlbRuleArrayOutput) ToGetRulesSlbRuleArrayOutputWithContext(ctx context.Context) GetRulesSlbRuleArrayOutput {
	return o
}

func (o GetRulesSlbRuleArrayOutput) Index(i pulumi.IntInput) GetRulesSlbRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesSlbRule {
		return vs[0].([]GetRulesSlbRule)[vs[1].(int)]
	}).(GetRulesSlbRuleOutput)
}

type GetServerCertificatesCertificate struct {
	// Id of server certificate issued by alibaba cloud.
	// * `alicloudCertificateName`- Name of server certificate issued by alibaba cloud.
	// * `isAlicloudCertificate`- Is server certificate issued by alibaba cloud or not.
	AlicloudCertificateId   string `pulumi:"alicloudCertificateId"`
	AlicloudCertificateName string `pulumi:"alicloudCertificateName"`
	// Server certificate common name.
	CommonName string `pulumi:"commonName"`
	// Server certificate created time.
	CreatedTime string `pulumi:"createdTime"`
	// Server certificate created timestamp.
	CreatedTimestamp int `pulumi:"createdTimestamp"`
	// Server certificate expired time.
	ExpiredTime string `pulumi:"expiredTime"`
	// Server certificate expired timestamp.
	ExpiredTimestamp int `pulumi:"expiredTimestamp"`
	// Server certificate fingerprint.
	Fingerprint string `pulumi:"fingerprint"`
	// Server certificate ID.
	Id                    string `pulumi:"id"`
	IsAlicloudCertificate bool   `pulumi:"isAlicloudCertificate"`
	// Server certificate name.
	Name string `pulumi:"name"`
	// The Id of resource group which the slb server certificates belongs.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Server certificate subject alternative name list.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetServerCertificatesCertificateInput is an input type that accepts GetServerCertificatesCertificateArgs and GetServerCertificatesCertificateOutput values.
// You can construct a concrete instance of `GetServerCertificatesCertificateInput` via:
//
//          GetServerCertificatesCertificateArgs{...}
type GetServerCertificatesCertificateInput interface {
	pulumi.Input

	ToGetServerCertificatesCertificateOutput() GetServerCertificatesCertificateOutput
	ToGetServerCertificatesCertificateOutputWithContext(context.Context) GetServerCertificatesCertificateOutput
}

type GetServerCertificatesCertificateArgs struct {
	// Id of server certificate issued by alibaba cloud.
	// * `alicloudCertificateName`- Name of server certificate issued by alibaba cloud.
	// * `isAlicloudCertificate`- Is server certificate issued by alibaba cloud or not.
	AlicloudCertificateId   pulumi.StringInput `pulumi:"alicloudCertificateId"`
	AlicloudCertificateName pulumi.StringInput `pulumi:"alicloudCertificateName"`
	// Server certificate common name.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Server certificate created time.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Server certificate created timestamp.
	CreatedTimestamp pulumi.IntInput `pulumi:"createdTimestamp"`
	// Server certificate expired time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Server certificate expired timestamp.
	ExpiredTimestamp pulumi.IntInput `pulumi:"expiredTimestamp"`
	// Server certificate fingerprint.
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// Server certificate ID.
	Id                    pulumi.StringInput `pulumi:"id"`
	IsAlicloudCertificate pulumi.BoolInput   `pulumi:"isAlicloudCertificate"`
	// Server certificate name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of resource group which the slb server certificates belongs.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// Server certificate subject alternative name list.
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetServerCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesCertificate)(nil)).Elem()
}

func (i GetServerCertificatesCertificateArgs) ToGetServerCertificatesCertificateOutput() GetServerCertificatesCertificateOutput {
	return i.ToGetServerCertificatesCertificateOutputWithContext(context.Background())
}

func (i GetServerCertificatesCertificateArgs) ToGetServerCertificatesCertificateOutputWithContext(ctx context.Context) GetServerCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesCertificateOutput)
}

// GetServerCertificatesCertificateArrayInput is an input type that accepts GetServerCertificatesCertificateArray and GetServerCertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `GetServerCertificatesCertificateArrayInput` via:
//
//          GetServerCertificatesCertificateArray{ GetServerCertificatesCertificateArgs{...} }
type GetServerCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToGetServerCertificatesCertificateArrayOutput() GetServerCertificatesCertificateArrayOutput
	ToGetServerCertificatesCertificateArrayOutputWithContext(context.Context) GetServerCertificatesCertificateArrayOutput
}

type GetServerCertificatesCertificateArray []GetServerCertificatesCertificateInput

func (GetServerCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesCertificate)(nil)).Elem()
}

func (i GetServerCertificatesCertificateArray) ToGetServerCertificatesCertificateArrayOutput() GetServerCertificatesCertificateArrayOutput {
	return i.ToGetServerCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i GetServerCertificatesCertificateArray) ToGetServerCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetServerCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCertificatesCertificateArrayOutput)
}

type GetServerCertificatesCertificateOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesCertificate)(nil)).Elem()
}

func (o GetServerCertificatesCertificateOutput) ToGetServerCertificatesCertificateOutput() GetServerCertificatesCertificateOutput {
	return o
}

func (o GetServerCertificatesCertificateOutput) ToGetServerCertificatesCertificateOutputWithContext(ctx context.Context) GetServerCertificatesCertificateOutput {
	return o
}

// Id of server certificate issued by alibaba cloud.
// * `alicloudCertificateName`- Name of server certificate issued by alibaba cloud.
// * `isAlicloudCertificate`- Is server certificate issued by alibaba cloud or not.
func (o GetServerCertificatesCertificateOutput) AlicloudCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.AlicloudCertificateId }).(pulumi.StringOutput)
}

func (o GetServerCertificatesCertificateOutput) AlicloudCertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.AlicloudCertificateName }).(pulumi.StringOutput)
}

// Server certificate common name.
func (o GetServerCertificatesCertificateOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.CommonName }).(pulumi.StringOutput)
}

// Server certificate created time.
func (o GetServerCertificatesCertificateOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Server certificate created timestamp.
func (o GetServerCertificatesCertificateOutput) CreatedTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) int { return v.CreatedTimestamp }).(pulumi.IntOutput)
}

// Server certificate expired time.
func (o GetServerCertificatesCertificateOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Server certificate expired timestamp.
func (o GetServerCertificatesCertificateOutput) ExpiredTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) int { return v.ExpiredTimestamp }).(pulumi.IntOutput)
}

// Server certificate fingerprint.
func (o GetServerCertificatesCertificateOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// Server certificate ID.
func (o GetServerCertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerCertificatesCertificateOutput) IsAlicloudCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) bool { return v.IsAlicloudCertificate }).(pulumi.BoolOutput)
}

// Server certificate name.
func (o GetServerCertificatesCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Id of resource group which the slb server certificates belongs.
func (o GetServerCertificatesCertificateOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// Server certificate subject alternative name list.
func (o GetServerCertificatesCertificateOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

// A mapping of tags to assign to the resource.
func (o GetServerCertificatesCertificateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetServerCertificatesCertificate) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetServerCertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCertificatesCertificate)(nil)).Elem()
}

func (o GetServerCertificatesCertificateArrayOutput) ToGetServerCertificatesCertificateArrayOutput() GetServerCertificatesCertificateArrayOutput {
	return o
}

func (o GetServerCertificatesCertificateArrayOutput) ToGetServerCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetServerCertificatesCertificateArrayOutput {
	return o
}

func (o GetServerCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) GetServerCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerCertificatesCertificate {
		return vs[0].([]GetServerCertificatesCertificate)[vs[1].(int)]
	}).(GetServerCertificatesCertificateOutput)
}

type GetServerGroupsSlbServerGroup struct {
	// VServer group ID.
	Id string `pulumi:"id"`
	// VServer group name.
	Name string `pulumi:"name"`
	// ECS instances associated to the group. Each element contains the following attributes:
	Servers []GetServerGroupsSlbServerGroupServer `pulumi:"servers"`
}

// GetServerGroupsSlbServerGroupInput is an input type that accepts GetServerGroupsSlbServerGroupArgs and GetServerGroupsSlbServerGroupOutput values.
// You can construct a concrete instance of `GetServerGroupsSlbServerGroupInput` via:
//
//          GetServerGroupsSlbServerGroupArgs{...}
type GetServerGroupsSlbServerGroupInput interface {
	pulumi.Input

	ToGetServerGroupsSlbServerGroupOutput() GetServerGroupsSlbServerGroupOutput
	ToGetServerGroupsSlbServerGroupOutputWithContext(context.Context) GetServerGroupsSlbServerGroupOutput
}

type GetServerGroupsSlbServerGroupArgs struct {
	// VServer group ID.
	Id pulumi.StringInput `pulumi:"id"`
	// VServer group name.
	Name pulumi.StringInput `pulumi:"name"`
	// ECS instances associated to the group. Each element contains the following attributes:
	Servers GetServerGroupsSlbServerGroupServerArrayInput `pulumi:"servers"`
}

func (GetServerGroupsSlbServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsSlbServerGroup)(nil)).Elem()
}

func (i GetServerGroupsSlbServerGroupArgs) ToGetServerGroupsSlbServerGroupOutput() GetServerGroupsSlbServerGroupOutput {
	return i.ToGetServerGroupsSlbServerGroupOutputWithContext(context.Background())
}

func (i GetServerGroupsSlbServerGroupArgs) ToGetServerGroupsSlbServerGroupOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsSlbServerGroupOutput)
}

// GetServerGroupsSlbServerGroupArrayInput is an input type that accepts GetServerGroupsSlbServerGroupArray and GetServerGroupsSlbServerGroupArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsSlbServerGroupArrayInput` via:
//
//          GetServerGroupsSlbServerGroupArray{ GetServerGroupsSlbServerGroupArgs{...} }
type GetServerGroupsSlbServerGroupArrayInput interface {
	pulumi.Input

	ToGetServerGroupsSlbServerGroupArrayOutput() GetServerGroupsSlbServerGroupArrayOutput
	ToGetServerGroupsSlbServerGroupArrayOutputWithContext(context.Context) GetServerGroupsSlbServerGroupArrayOutput
}

type GetServerGroupsSlbServerGroupArray []GetServerGroupsSlbServerGroupInput

func (GetServerGroupsSlbServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsSlbServerGroup)(nil)).Elem()
}

func (i GetServerGroupsSlbServerGroupArray) ToGetServerGroupsSlbServerGroupArrayOutput() GetServerGroupsSlbServerGroupArrayOutput {
	return i.ToGetServerGroupsSlbServerGroupArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsSlbServerGroupArray) ToGetServerGroupsSlbServerGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsSlbServerGroupArrayOutput)
}

type GetServerGroupsSlbServerGroupOutput struct{ *pulumi.OutputState }

func (GetServerGroupsSlbServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsSlbServerGroup)(nil)).Elem()
}

func (o GetServerGroupsSlbServerGroupOutput) ToGetServerGroupsSlbServerGroupOutput() GetServerGroupsSlbServerGroupOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupOutput) ToGetServerGroupsSlbServerGroupOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupOutput {
	return o
}

// VServer group ID.
func (o GetServerGroupsSlbServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsSlbServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

// VServer group name.
func (o GetServerGroupsSlbServerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsSlbServerGroup) string { return v.Name }).(pulumi.StringOutput)
}

// ECS instances associated to the group. Each element contains the following attributes:
func (o GetServerGroupsSlbServerGroupOutput) Servers() GetServerGroupsSlbServerGroupServerArrayOutput {
	return o.ApplyT(func(v GetServerGroupsSlbServerGroup) []GetServerGroupsSlbServerGroupServer { return v.Servers }).(GetServerGroupsSlbServerGroupServerArrayOutput)
}

type GetServerGroupsSlbServerGroupArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsSlbServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsSlbServerGroup)(nil)).Elem()
}

func (o GetServerGroupsSlbServerGroupArrayOutput) ToGetServerGroupsSlbServerGroupArrayOutput() GetServerGroupsSlbServerGroupArrayOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupArrayOutput) ToGetServerGroupsSlbServerGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupArrayOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupArrayOutput) Index(i pulumi.IntInput) GetServerGroupsSlbServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsSlbServerGroup {
		return vs[0].([]GetServerGroupsSlbServerGroup)[vs[1].(int)]
	}).(GetServerGroupsSlbServerGroupOutput)
}

type GetServerGroupsSlbServerGroupServer struct {
	// ID of the attached ECS instance.
	InstanceId string `pulumi:"instanceId"`
	// Weight associated to the ECS instance.
	Weight int `pulumi:"weight"`
}

// GetServerGroupsSlbServerGroupServerInput is an input type that accepts GetServerGroupsSlbServerGroupServerArgs and GetServerGroupsSlbServerGroupServerOutput values.
// You can construct a concrete instance of `GetServerGroupsSlbServerGroupServerInput` via:
//
//          GetServerGroupsSlbServerGroupServerArgs{...}
type GetServerGroupsSlbServerGroupServerInput interface {
	pulumi.Input

	ToGetServerGroupsSlbServerGroupServerOutput() GetServerGroupsSlbServerGroupServerOutput
	ToGetServerGroupsSlbServerGroupServerOutputWithContext(context.Context) GetServerGroupsSlbServerGroupServerOutput
}

type GetServerGroupsSlbServerGroupServerArgs struct {
	// ID of the attached ECS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Weight associated to the ECS instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetServerGroupsSlbServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsSlbServerGroupServer)(nil)).Elem()
}

func (i GetServerGroupsSlbServerGroupServerArgs) ToGetServerGroupsSlbServerGroupServerOutput() GetServerGroupsSlbServerGroupServerOutput {
	return i.ToGetServerGroupsSlbServerGroupServerOutputWithContext(context.Background())
}

func (i GetServerGroupsSlbServerGroupServerArgs) ToGetServerGroupsSlbServerGroupServerOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsSlbServerGroupServerOutput)
}

// GetServerGroupsSlbServerGroupServerArrayInput is an input type that accepts GetServerGroupsSlbServerGroupServerArray and GetServerGroupsSlbServerGroupServerArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsSlbServerGroupServerArrayInput` via:
//
//          GetServerGroupsSlbServerGroupServerArray{ GetServerGroupsSlbServerGroupServerArgs{...} }
type GetServerGroupsSlbServerGroupServerArrayInput interface {
	pulumi.Input

	ToGetServerGroupsSlbServerGroupServerArrayOutput() GetServerGroupsSlbServerGroupServerArrayOutput
	ToGetServerGroupsSlbServerGroupServerArrayOutputWithContext(context.Context) GetServerGroupsSlbServerGroupServerArrayOutput
}

type GetServerGroupsSlbServerGroupServerArray []GetServerGroupsSlbServerGroupServerInput

func (GetServerGroupsSlbServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsSlbServerGroupServer)(nil)).Elem()
}

func (i GetServerGroupsSlbServerGroupServerArray) ToGetServerGroupsSlbServerGroupServerArrayOutput() GetServerGroupsSlbServerGroupServerArrayOutput {
	return i.ToGetServerGroupsSlbServerGroupServerArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsSlbServerGroupServerArray) ToGetServerGroupsSlbServerGroupServerArrayOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsSlbServerGroupServerArrayOutput)
}

type GetServerGroupsSlbServerGroupServerOutput struct{ *pulumi.OutputState }

func (GetServerGroupsSlbServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsSlbServerGroupServer)(nil)).Elem()
}

func (o GetServerGroupsSlbServerGroupServerOutput) ToGetServerGroupsSlbServerGroupServerOutput() GetServerGroupsSlbServerGroupServerOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupServerOutput) ToGetServerGroupsSlbServerGroupServerOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupServerOutput {
	return o
}

// ID of the attached ECS instance.
func (o GetServerGroupsSlbServerGroupServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsSlbServerGroupServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Weight associated to the ECS instance.
func (o GetServerGroupsSlbServerGroupServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsSlbServerGroupServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetServerGroupsSlbServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsSlbServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsSlbServerGroupServer)(nil)).Elem()
}

func (o GetServerGroupsSlbServerGroupServerArrayOutput) ToGetServerGroupsSlbServerGroupServerArrayOutput() GetServerGroupsSlbServerGroupServerArrayOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupServerArrayOutput) ToGetServerGroupsSlbServerGroupServerArrayOutputWithContext(ctx context.Context) GetServerGroupsSlbServerGroupServerArrayOutput {
	return o
}

func (o GetServerGroupsSlbServerGroupServerArrayOutput) Index(i pulumi.IntInput) GetServerGroupsSlbServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsSlbServerGroupServer {
		return vs[0].([]GetServerGroupsSlbServerGroupServer)[vs[1].(int)]
	}).(GetServerGroupsSlbServerGroupServerOutput)
}

type GetTlsCipherPoliciesPolicy struct {
	// The encryption algorithms supported. It depends on the value of `tlsVersions`.
	Ciphers []string `pulumi:"ciphers"`
	// The creation time timestamp.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Tls Cipher Policy.
	Id string `pulumi:"id"`
	// Array of Relate Listeners.
	RelateListeners []GetTlsCipherPoliciesPolicyRelateListener `pulumi:"relateListeners"`
	// TLS policy instance state.
	Status string `pulumi:"status"`
	// The ID of TLS cipher policy.
	TlsCipherPolicyId string `pulumi:"tlsCipherPolicyId"`
	// TLS policy name. Length is from 2 to 128, or in both the English and Chinese characters must be with an uppercase/lowercase letter or a Chinese character and the beginning, may contain numbers, in dot `.`, underscore `_` or dash `-`.
	TlsCipherPolicyName string `pulumi:"tlsCipherPolicyName"`
	// The version of TLS protocol.
	TlsVersions []string `pulumi:"tlsVersions"`
}

// GetTlsCipherPoliciesPolicyInput is an input type that accepts GetTlsCipherPoliciesPolicyArgs and GetTlsCipherPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetTlsCipherPoliciesPolicyInput` via:
//
//          GetTlsCipherPoliciesPolicyArgs{...}
type GetTlsCipherPoliciesPolicyInput interface {
	pulumi.Input

	ToGetTlsCipherPoliciesPolicyOutput() GetTlsCipherPoliciesPolicyOutput
	ToGetTlsCipherPoliciesPolicyOutputWithContext(context.Context) GetTlsCipherPoliciesPolicyOutput
}

type GetTlsCipherPoliciesPolicyArgs struct {
	// The encryption algorithms supported. It depends on the value of `tlsVersions`.
	Ciphers pulumi.StringArrayInput `pulumi:"ciphers"`
	// The creation time timestamp.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Tls Cipher Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// Array of Relate Listeners.
	RelateListeners GetTlsCipherPoliciesPolicyRelateListenerArrayInput `pulumi:"relateListeners"`
	// TLS policy instance state.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of TLS cipher policy.
	TlsCipherPolicyId pulumi.StringInput `pulumi:"tlsCipherPolicyId"`
	// TLS policy name. Length is from 2 to 128, or in both the English and Chinese characters must be with an uppercase/lowercase letter or a Chinese character and the beginning, may contain numbers, in dot `.`, underscore `_` or dash `-`.
	TlsCipherPolicyName pulumi.StringInput `pulumi:"tlsCipherPolicyName"`
	// The version of TLS protocol.
	TlsVersions pulumi.StringArrayInput `pulumi:"tlsVersions"`
}

func (GetTlsCipherPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsCipherPoliciesPolicy)(nil)).Elem()
}

func (i GetTlsCipherPoliciesPolicyArgs) ToGetTlsCipherPoliciesPolicyOutput() GetTlsCipherPoliciesPolicyOutput {
	return i.ToGetTlsCipherPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetTlsCipherPoliciesPolicyArgs) ToGetTlsCipherPoliciesPolicyOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsCipherPoliciesPolicyOutput)
}

// GetTlsCipherPoliciesPolicyArrayInput is an input type that accepts GetTlsCipherPoliciesPolicyArray and GetTlsCipherPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetTlsCipherPoliciesPolicyArrayInput` via:
//
//          GetTlsCipherPoliciesPolicyArray{ GetTlsCipherPoliciesPolicyArgs{...} }
type GetTlsCipherPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetTlsCipherPoliciesPolicyArrayOutput() GetTlsCipherPoliciesPolicyArrayOutput
	ToGetTlsCipherPoliciesPolicyArrayOutputWithContext(context.Context) GetTlsCipherPoliciesPolicyArrayOutput
}

type GetTlsCipherPoliciesPolicyArray []GetTlsCipherPoliciesPolicyInput

func (GetTlsCipherPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsCipherPoliciesPolicy)(nil)).Elem()
}

func (i GetTlsCipherPoliciesPolicyArray) ToGetTlsCipherPoliciesPolicyArrayOutput() GetTlsCipherPoliciesPolicyArrayOutput {
	return i.ToGetTlsCipherPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetTlsCipherPoliciesPolicyArray) ToGetTlsCipherPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsCipherPoliciesPolicyArrayOutput)
}

type GetTlsCipherPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetTlsCipherPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsCipherPoliciesPolicy)(nil)).Elem()
}

func (o GetTlsCipherPoliciesPolicyOutput) ToGetTlsCipherPoliciesPolicyOutput() GetTlsCipherPoliciesPolicyOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyOutput) ToGetTlsCipherPoliciesPolicyOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyOutput {
	return o
}

// The encryption algorithms supported. It depends on the value of `tlsVersions`.
func (o GetTlsCipherPoliciesPolicyOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) []string { return v.Ciphers }).(pulumi.StringArrayOutput)
}

// The creation time timestamp.
func (o GetTlsCipherPoliciesPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Tls Cipher Policy.
func (o GetTlsCipherPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Array of Relate Listeners.
func (o GetTlsCipherPoliciesPolicyOutput) RelateListeners() GetTlsCipherPoliciesPolicyRelateListenerArrayOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) []GetTlsCipherPoliciesPolicyRelateListener {
		return v.RelateListeners
	}).(GetTlsCipherPoliciesPolicyRelateListenerArrayOutput)
}

// TLS policy instance state.
func (o GetTlsCipherPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of TLS cipher policy.
func (o GetTlsCipherPoliciesPolicyOutput) TlsCipherPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) string { return v.TlsCipherPolicyId }).(pulumi.StringOutput)
}

// TLS policy name. Length is from 2 to 128, or in both the English and Chinese characters must be with an uppercase/lowercase letter or a Chinese character and the beginning, may contain numbers, in dot `.`, underscore `_` or dash `-`.
func (o GetTlsCipherPoliciesPolicyOutput) TlsCipherPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) string { return v.TlsCipherPolicyName }).(pulumi.StringOutput)
}

// The version of TLS protocol.
func (o GetTlsCipherPoliciesPolicyOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicy) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

type GetTlsCipherPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetTlsCipherPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsCipherPoliciesPolicy)(nil)).Elem()
}

func (o GetTlsCipherPoliciesPolicyArrayOutput) ToGetTlsCipherPoliciesPolicyArrayOutput() GetTlsCipherPoliciesPolicyArrayOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyArrayOutput) ToGetTlsCipherPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyArrayOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetTlsCipherPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTlsCipherPoliciesPolicy {
		return vs[0].([]GetTlsCipherPoliciesPolicy)[vs[1].(int)]
	}).(GetTlsCipherPoliciesPolicyOutput)
}

type GetTlsCipherPoliciesPolicyRelateListener struct {
	// The ID of SLB instance.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// Listening port. Valid value: 1 to 65535.
	Port int `pulumi:"port"`
	// Snooping protocols. Valid values: `TCP`, `UDP`, `HTTP`, or `HTTPS`.
	Protocol string `pulumi:"protocol"`
}

// GetTlsCipherPoliciesPolicyRelateListenerInput is an input type that accepts GetTlsCipherPoliciesPolicyRelateListenerArgs and GetTlsCipherPoliciesPolicyRelateListenerOutput values.
// You can construct a concrete instance of `GetTlsCipherPoliciesPolicyRelateListenerInput` via:
//
//          GetTlsCipherPoliciesPolicyRelateListenerArgs{...}
type GetTlsCipherPoliciesPolicyRelateListenerInput interface {
	pulumi.Input

	ToGetTlsCipherPoliciesPolicyRelateListenerOutput() GetTlsCipherPoliciesPolicyRelateListenerOutput
	ToGetTlsCipherPoliciesPolicyRelateListenerOutputWithContext(context.Context) GetTlsCipherPoliciesPolicyRelateListenerOutput
}

type GetTlsCipherPoliciesPolicyRelateListenerArgs struct {
	// The ID of SLB instance.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// Listening port. Valid value: 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// Snooping protocols. Valid values: `TCP`, `UDP`, `HTTP`, or `HTTPS`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetTlsCipherPoliciesPolicyRelateListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsCipherPoliciesPolicyRelateListener)(nil)).Elem()
}

func (i GetTlsCipherPoliciesPolicyRelateListenerArgs) ToGetTlsCipherPoliciesPolicyRelateListenerOutput() GetTlsCipherPoliciesPolicyRelateListenerOutput {
	return i.ToGetTlsCipherPoliciesPolicyRelateListenerOutputWithContext(context.Background())
}

func (i GetTlsCipherPoliciesPolicyRelateListenerArgs) ToGetTlsCipherPoliciesPolicyRelateListenerOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyRelateListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsCipherPoliciesPolicyRelateListenerOutput)
}

// GetTlsCipherPoliciesPolicyRelateListenerArrayInput is an input type that accepts GetTlsCipherPoliciesPolicyRelateListenerArray and GetTlsCipherPoliciesPolicyRelateListenerArrayOutput values.
// You can construct a concrete instance of `GetTlsCipherPoliciesPolicyRelateListenerArrayInput` via:
//
//          GetTlsCipherPoliciesPolicyRelateListenerArray{ GetTlsCipherPoliciesPolicyRelateListenerArgs{...} }
type GetTlsCipherPoliciesPolicyRelateListenerArrayInput interface {
	pulumi.Input

	ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutput() GetTlsCipherPoliciesPolicyRelateListenerArrayOutput
	ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutputWithContext(context.Context) GetTlsCipherPoliciesPolicyRelateListenerArrayOutput
}

type GetTlsCipherPoliciesPolicyRelateListenerArray []GetTlsCipherPoliciesPolicyRelateListenerInput

func (GetTlsCipherPoliciesPolicyRelateListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsCipherPoliciesPolicyRelateListener)(nil)).Elem()
}

func (i GetTlsCipherPoliciesPolicyRelateListenerArray) ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutput() GetTlsCipherPoliciesPolicyRelateListenerArrayOutput {
	return i.ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutputWithContext(context.Background())
}

func (i GetTlsCipherPoliciesPolicyRelateListenerArray) ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyRelateListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsCipherPoliciesPolicyRelateListenerArrayOutput)
}

type GetTlsCipherPoliciesPolicyRelateListenerOutput struct{ *pulumi.OutputState }

func (GetTlsCipherPoliciesPolicyRelateListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsCipherPoliciesPolicyRelateListener)(nil)).Elem()
}

func (o GetTlsCipherPoliciesPolicyRelateListenerOutput) ToGetTlsCipherPoliciesPolicyRelateListenerOutput() GetTlsCipherPoliciesPolicyRelateListenerOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyRelateListenerOutput) ToGetTlsCipherPoliciesPolicyRelateListenerOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyRelateListenerOutput {
	return o
}

// The ID of SLB instance.
func (o GetTlsCipherPoliciesPolicyRelateListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicyRelateListener) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// Listening port. Valid value: 1 to 65535.
func (o GetTlsCipherPoliciesPolicyRelateListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicyRelateListener) int { return v.Port }).(pulumi.IntOutput)
}

// Snooping protocols. Valid values: `TCP`, `UDP`, `HTTP`, or `HTTPS`.
func (o GetTlsCipherPoliciesPolicyRelateListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsCipherPoliciesPolicyRelateListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetTlsCipherPoliciesPolicyRelateListenerArrayOutput struct{ *pulumi.OutputState }

func (GetTlsCipherPoliciesPolicyRelateListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsCipherPoliciesPolicyRelateListener)(nil)).Elem()
}

func (o GetTlsCipherPoliciesPolicyRelateListenerArrayOutput) ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutput() GetTlsCipherPoliciesPolicyRelateListenerArrayOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyRelateListenerArrayOutput) ToGetTlsCipherPoliciesPolicyRelateListenerArrayOutputWithContext(ctx context.Context) GetTlsCipherPoliciesPolicyRelateListenerArrayOutput {
	return o
}

func (o GetTlsCipherPoliciesPolicyRelateListenerArrayOutput) Index(i pulumi.IntInput) GetTlsCipherPoliciesPolicyRelateListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTlsCipherPoliciesPolicyRelateListener {
		return vs[0].([]GetTlsCipherPoliciesPolicyRelateListener)[vs[1].(int)]
	}).(GetTlsCipherPoliciesPolicyRelateListenerOutput)
}

type GetZonesZone struct {
	// ID of the zone. It is same as `masterZoneId`.
	Id string `pulumi:"id"`
	// The primary zone.
	MasterZoneId string `pulumi:"masterZoneId"`
	// The secondary zone.
	SlaveZoneId string `pulumi:"slaveZoneId"`
	// (Deprecated from 1.157.0) A list of slb slave zone ids in which the slb master zone.
	// It has been deprecated from v1.157.0 and use `slaveZoneId` instead.
	//
	// Deprecated: the attribute slb_slave_zone_ids has been deprecated from version 1.157.0 and use slave_zone_id instead.
	SlbSlaveZoneIds []string `pulumi:"slbSlaveZoneIds"`
	// (Available in 1.154.0+)A list of available resource which the slb master zone supported.
	SupportedResources []GetZonesZoneSupportedResource `pulumi:"supportedResources"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// ID of the zone. It is same as `masterZoneId`.
	Id pulumi.StringInput `pulumi:"id"`
	// The primary zone.
	MasterZoneId pulumi.StringInput `pulumi:"masterZoneId"`
	// The secondary zone.
	SlaveZoneId pulumi.StringInput `pulumi:"slaveZoneId"`
	// (Deprecated from 1.157.0) A list of slb slave zone ids in which the slb master zone.
	// It has been deprecated from v1.157.0 and use `slaveZoneId` instead.
	//
	// Deprecated: the attribute slb_slave_zone_ids has been deprecated from version 1.157.0 and use slave_zone_id instead.
	SlbSlaveZoneIds pulumi.StringArrayInput `pulumi:"slbSlaveZoneIds"`
	// (Available in 1.154.0+)A list of available resource which the slb master zone supported.
	SupportedResources GetZonesZoneSupportedResourceArrayInput `pulumi:"supportedResources"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// ID of the zone. It is same as `masterZoneId`.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The primary zone.
func (o GetZonesZoneOutput) MasterZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.MasterZoneId }).(pulumi.StringOutput)
}

// The secondary zone.
func (o GetZonesZoneOutput) SlaveZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.SlaveZoneId }).(pulumi.StringOutput)
}

// (Deprecated from 1.157.0) A list of slb slave zone ids in which the slb master zone.
// It has been deprecated from v1.157.0 and use `slaveZoneId` instead.
//
// Deprecated: the attribute slb_slave_zone_ids has been deprecated from version 1.157.0 and use slave_zone_id instead.
func (o GetZonesZoneOutput) SlbSlaveZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.SlbSlaveZoneIds }).(pulumi.StringArrayOutput)
}

// (Available in 1.154.0+)A list of available resource which the slb master zone supported.
func (o GetZonesZoneOutput) SupportedResources() GetZonesZoneSupportedResourceArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneSupportedResource { return v.SupportedResources }).(GetZonesZoneSupportedResourceArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

type GetZonesZoneSupportedResource struct {
	// The type of IP address.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The type of network.
	AddressType string `pulumi:"addressType"`
}

// GetZonesZoneSupportedResourceInput is an input type that accepts GetZonesZoneSupportedResourceArgs and GetZonesZoneSupportedResourceOutput values.
// You can construct a concrete instance of `GetZonesZoneSupportedResourceInput` via:
//
//          GetZonesZoneSupportedResourceArgs{...}
type GetZonesZoneSupportedResourceInput interface {
	pulumi.Input

	ToGetZonesZoneSupportedResourceOutput() GetZonesZoneSupportedResourceOutput
	ToGetZonesZoneSupportedResourceOutputWithContext(context.Context) GetZonesZoneSupportedResourceOutput
}

type GetZonesZoneSupportedResourceArgs struct {
	// The type of IP address.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The type of network.
	AddressType pulumi.StringInput `pulumi:"addressType"`
}

func (GetZonesZoneSupportedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneSupportedResource)(nil)).Elem()
}

func (i GetZonesZoneSupportedResourceArgs) ToGetZonesZoneSupportedResourceOutput() GetZonesZoneSupportedResourceOutput {
	return i.ToGetZonesZoneSupportedResourceOutputWithContext(context.Background())
}

func (i GetZonesZoneSupportedResourceArgs) ToGetZonesZoneSupportedResourceOutputWithContext(ctx context.Context) GetZonesZoneSupportedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneSupportedResourceOutput)
}

// GetZonesZoneSupportedResourceArrayInput is an input type that accepts GetZonesZoneSupportedResourceArray and GetZonesZoneSupportedResourceArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneSupportedResourceArrayInput` via:
//
//          GetZonesZoneSupportedResourceArray{ GetZonesZoneSupportedResourceArgs{...} }
type GetZonesZoneSupportedResourceArrayInput interface {
	pulumi.Input

	ToGetZonesZoneSupportedResourceArrayOutput() GetZonesZoneSupportedResourceArrayOutput
	ToGetZonesZoneSupportedResourceArrayOutputWithContext(context.Context) GetZonesZoneSupportedResourceArrayOutput
}

type GetZonesZoneSupportedResourceArray []GetZonesZoneSupportedResourceInput

func (GetZonesZoneSupportedResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneSupportedResource)(nil)).Elem()
}

func (i GetZonesZoneSupportedResourceArray) ToGetZonesZoneSupportedResourceArrayOutput() GetZonesZoneSupportedResourceArrayOutput {
	return i.ToGetZonesZoneSupportedResourceArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneSupportedResourceArray) ToGetZonesZoneSupportedResourceArrayOutputWithContext(ctx context.Context) GetZonesZoneSupportedResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneSupportedResourceArrayOutput)
}

type GetZonesZoneSupportedResourceOutput struct{ *pulumi.OutputState }

func (GetZonesZoneSupportedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneSupportedResource)(nil)).Elem()
}

func (o GetZonesZoneSupportedResourceOutput) ToGetZonesZoneSupportedResourceOutput() GetZonesZoneSupportedResourceOutput {
	return o
}

func (o GetZonesZoneSupportedResourceOutput) ToGetZonesZoneSupportedResourceOutputWithContext(ctx context.Context) GetZonesZoneSupportedResourceOutput {
	return o
}

// The type of IP address.
func (o GetZonesZoneSupportedResourceOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneSupportedResource) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The type of network.
func (o GetZonesZoneSupportedResourceOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneSupportedResource) string { return v.AddressType }).(pulumi.StringOutput)
}

type GetZonesZoneSupportedResourceArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneSupportedResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneSupportedResource)(nil)).Elem()
}

func (o GetZonesZoneSupportedResourceArrayOutput) ToGetZonesZoneSupportedResourceArrayOutput() GetZonesZoneSupportedResourceArrayOutput {
	return o
}

func (o GetZonesZoneSupportedResourceArrayOutput) ToGetZonesZoneSupportedResourceArrayOutputWithContext(ctx context.Context) GetZonesZoneSupportedResourceArrayOutput {
	return o
}

func (o GetZonesZoneSupportedResourceArrayOutput) Index(i pulumi.IntInput) GetZonesZoneSupportedResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneSupportedResource {
		return vs[0].([]GetZonesZoneSupportedResource)[vs[1].(int)]
	}).(GetZonesZoneSupportedResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclEntryListInput)(nil)).Elem(), AclEntryListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclEntryListArrayInput)(nil)).Elem(), AclEntryListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServerBackendServerInput)(nil)).Elem(), BackendServerBackendServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServerBackendServerArrayInput)(nil)).Elem(), BackendServerBackendServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerXForwardedForInput)(nil)).Elem(), ListenerXForwardedForArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerXForwardedForPtrInput)(nil)).Elem(), ListenerXForwardedForArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MasterSlaveServerGroupServerInput)(nil)).Elem(), MasterSlaveServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MasterSlaveServerGroupServerArrayInput)(nil)).Elem(), MasterSlaveServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServerInput)(nil)).Elem(), ServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServerArrayInput)(nil)).Elem(), ServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclInput)(nil)).Elem(), GetAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclArrayInput)(nil)).Elem(), GetAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclEntryListInput)(nil)).Elem(), GetAclsAclEntryListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclEntryListArrayInput)(nil)).Elem(), GetAclsAclEntryListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclRelatedListenerInput)(nil)).Elem(), GetAclsAclRelatedListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclRelatedListenerArrayInput)(nil)).Elem(), GetAclsAclRelatedListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerArrayInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerBackendServerInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerBackendServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerBackendServerArrayInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerBackendServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocalInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocolInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayInput)(nil)).Elem(), GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersSlbInput)(nil)).Elem(), GetApplicationLoadBalancersSlbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadBalancersSlbArrayInput)(nil)).Elem(), GetApplicationLoadBalancersSlbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsSlbAttachmentInput)(nil)).Elem(), GetAttachmentsSlbAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsSlbAttachmentArrayInput)(nil)).Elem(), GetAttachmentsSlbAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendServersBackendServerInput)(nil)).Elem(), GetBackendServersBackendServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackendServersBackendServerArrayInput)(nil)).Elem(), GetBackendServersBackendServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaCertificatesCertificateInput)(nil)).Elem(), GetCaCertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaCertificatesCertificateArrayInput)(nil)).Elem(), GetCaCertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainExtensionsExtensionInput)(nil)).Elem(), GetDomainExtensionsExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainExtensionsExtensionArrayInput)(nil)).Elem(), GetDomainExtensionsExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersSlbListenerInput)(nil)).Elem(), GetListenersSlbListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersSlbListenerArrayInput)(nil)).Elem(), GetListenersSlbListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerInput)(nil)).Elem(), GetLoadBalancersBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerArrayInput)(nil)).Elem(), GetLoadBalancersBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerBackendServerInput)(nil)).Elem(), GetLoadBalancersBalancerBackendServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerBackendServerArrayInput)(nil)).Elem(), GetLoadBalancersBalancerBackendServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocalInput)(nil)).Elem(), GetLoadBalancersBalancerListenerPortsAndProtocalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocalArrayInput)(nil)).Elem(), GetLoadBalancersBalancerListenerPortsAndProtocalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocolInput)(nil)).Elem(), GetLoadBalancersBalancerListenerPortsAndProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersBalancerListenerPortsAndProtocolArrayInput)(nil)).Elem(), GetLoadBalancersBalancerListenerPortsAndProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersSlbInput)(nil)).Elem(), GetLoadBalancersSlbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancersSlbArrayInput)(nil)).Elem(), GetLoadBalancersSlbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMasterSlaveServerGroupsGroupInput)(nil)).Elem(), GetMasterSlaveServerGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMasterSlaveServerGroupsGroupArrayInput)(nil)).Elem(), GetMasterSlaveServerGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMasterSlaveServerGroupsGroupServerInput)(nil)).Elem(), GetMasterSlaveServerGroupsGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMasterSlaveServerGroupsGroupServerArrayInput)(nil)).Elem(), GetMasterSlaveServerGroupsGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesSlbRuleInput)(nil)).Elem(), GetRulesSlbRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesSlbRuleArrayInput)(nil)).Elem(), GetRulesSlbRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesCertificateInput)(nil)).Elem(), GetServerCertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCertificatesCertificateArrayInput)(nil)).Elem(), GetServerCertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsSlbServerGroupInput)(nil)).Elem(), GetServerGroupsSlbServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsSlbServerGroupArrayInput)(nil)).Elem(), GetServerGroupsSlbServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsSlbServerGroupServerInput)(nil)).Elem(), GetServerGroupsSlbServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsSlbServerGroupServerArrayInput)(nil)).Elem(), GetServerGroupsSlbServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsCipherPoliciesPolicyInput)(nil)).Elem(), GetTlsCipherPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsCipherPoliciesPolicyArrayInput)(nil)).Elem(), GetTlsCipherPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsCipherPoliciesPolicyRelateListenerInput)(nil)).Elem(), GetTlsCipherPoliciesPolicyRelateListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsCipherPoliciesPolicyRelateListenerArrayInput)(nil)).Elem(), GetTlsCipherPoliciesPolicyRelateListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneSupportedResourceInput)(nil)).Elem(), GetZonesZoneSupportedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneSupportedResourceArrayInput)(nil)).Elem(), GetZonesZoneSupportedResourceArray{})
	pulumi.RegisterOutputType(AclEntryListOutput{})
	pulumi.RegisterOutputType(AclEntryListArrayOutput{})
	pulumi.RegisterOutputType(BackendServerBackendServerOutput{})
	pulumi.RegisterOutputType(BackendServerBackendServerArrayOutput{})
	pulumi.RegisterOutputType(ListenerXForwardedForOutput{})
	pulumi.RegisterOutputType(ListenerXForwardedForPtrOutput{})
	pulumi.RegisterOutputType(MasterSlaveServerGroupServerOutput{})
	pulumi.RegisterOutputType(MasterSlaveServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupServerOutput{})
	pulumi.RegisterOutputType(ServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclOutput{})
	pulumi.RegisterOutputType(GetAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclEntryListOutput{})
	pulumi.RegisterOutputType(GetAclsAclEntryListArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclRelatedListenerOutput{})
	pulumi.RegisterOutputType(GetAclsAclRelatedListenerArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerBackendServerOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerBackendServerArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerListenerPortsAndProtocalArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersBalancerListenerPortsAndProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersSlbOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadBalancersSlbArrayOutput{})
	pulumi.RegisterOutputType(GetAttachmentsSlbAttachmentOutput{})
	pulumi.RegisterOutputType(GetAttachmentsSlbAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetBackendServersBackendServerOutput{})
	pulumi.RegisterOutputType(GetBackendServersBackendServerArrayOutput{})
	pulumi.RegisterOutputType(GetCaCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(GetCaCertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetDomainExtensionsExtensionOutput{})
	pulumi.RegisterOutputType(GetDomainExtensionsExtensionArrayOutput{})
	pulumi.RegisterOutputType(GetListenersSlbListenerOutput{})
	pulumi.RegisterOutputType(GetListenersSlbListenerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerBackendServerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerBackendServerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerListenerPortsAndProtocalOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerListenerPortsAndProtocalArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerListenerPortsAndProtocolOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerListenerPortsAndProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersSlbOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersSlbArrayOutput{})
	pulumi.RegisterOutputType(GetMasterSlaveServerGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetMasterSlaveServerGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetMasterSlaveServerGroupsGroupServerOutput{})
	pulumi.RegisterOutputType(GetMasterSlaveServerGroupsGroupServerArrayOutput{})
	pulumi.RegisterOutputType(GetRulesSlbRuleOutput{})
	pulumi.RegisterOutputType(GetRulesSlbRuleArrayOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(GetServerCertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsSlbServerGroupOutput{})
	pulumi.RegisterOutputType(GetServerGroupsSlbServerGroupArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsSlbServerGroupServerOutput{})
	pulumi.RegisterOutputType(GetServerGroupsSlbServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(GetTlsCipherPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetTlsCipherPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetTlsCipherPoliciesPolicyRelateListenerOutput{})
	pulumi.RegisterOutputType(GetTlsCipherPoliciesPolicyRelateListenerArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneSupportedResourceOutput{})
	pulumi.RegisterOutputType(GetZonesZoneSupportedResourceArrayOutput{})
}
