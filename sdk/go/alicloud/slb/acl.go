// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An access control list contains multiple IP addresses or CIDR blocks.
// The access control list can help you to define multiple instance listening dimension,
// and to meet the multiple usage for single access control list.
//
// Server Load Balancer allows you to configure access control for listeners.
// You can configure different whitelists or blacklists for different listeners.
//
// You can configure access control
// when you create a listener or change access control configuration after a listener is created.
//
// > **NOTE:** One access control list can be attached to many Listeners in different load balancer as whitelists or blacklists.
//
// > **NOTE:** The maximum number of access control lists per region  is 50.
//
// > **NOTE:** The maximum number of IP addresses added each time is 50.
//
// > **NOTE:** The maximum number of entries per access control list is 300.
//
// > **NOTE:** The maximum number of listeners that an access control list can be added to is 50.
//
// For information about slb and how to use it, see [What is Server Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).
//
// For information about acl and how to use it, see [Configure an access control list](https://www.alibabacloud.com/help/doc-detail/85978.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/slb"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "terraformslbaclconfig"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		ipVersion := "ipv4"
// 		if param := cfg.Get("ipVersion"); param != "" {
// 			ipVersion = param
// 		}
// 		_, err := slb.NewAcl(ctx, "_default", &slb.AclArgs{
// 			IpVersion: pulumi.String(ipVersion),
// 			EntryLists: slb.AclEntryListArray{
// 				&slb.AclEntryListArgs{
// 					Entry:   pulumi.String("10.10.10.0/24"),
// 					Comment: pulumi.String("first"),
// 				},
// 				&slb.AclEntryListArgs{
// 					Entry:   pulumi.String("168.10.10.0/24"),
// 					Comment: pulumi.String("second"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Entry Block
//
// The entry mapping supports the following:
//
// * `entry` - (Required) An IP addresses or CIDR blocks.
// * `comment` - (Optional) the comment of the entry.
type Acl struct {
	pulumi.CustomResourceState

	// A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
	EntryLists AclEntryListArrayOutput `pulumi:"entryLists"`
	// The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
	IpVersion pulumi.StringPtrOutput `pulumi:"ipVersion"`
	// Name of the access control list.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource group ID.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewAcl registers a new resource with the given unique name, arguments, and options.
func NewAcl(ctx *pulumi.Context,
	name string, args *AclArgs, opts ...pulumi.ResourceOption) (*Acl, error) {
	if args == nil {
		args = &AclArgs{}
	}
	var resource Acl
	err := ctx.RegisterResource("alicloud:slb/acl:Acl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAcl gets an existing Acl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AclState, opts ...pulumi.ResourceOption) (*Acl, error) {
	var resource Acl
	err := ctx.ReadResource("alicloud:slb/acl:Acl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Acl resources.
type aclState struct {
	// A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
	EntryLists []AclEntryList `pulumi:"entryLists"`
	// The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
	IpVersion *string `pulumi:"ipVersion"`
	// Name of the access control list.
	Name *string `pulumi:"name"`
	// Resource group ID.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

type AclState struct {
	// A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
	EntryLists AclEntryListArrayInput
	// The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
	IpVersion pulumi.StringPtrInput
	// Name of the access control list.
	Name pulumi.StringPtrInput
	// Resource group ID.
	ResourceGroupId pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput
}

func (AclState) ElementType() reflect.Type {
	return reflect.TypeOf((*aclState)(nil)).Elem()
}

type aclArgs struct {
	// A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
	EntryLists []AclEntryList `pulumi:"entryLists"`
	// The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
	IpVersion *string `pulumi:"ipVersion"`
	// Name of the access control list.
	Name *string `pulumi:"name"`
	// Resource group ID.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a Acl resource.
type AclArgs struct {
	// A list of entry (IP addresses or CIDR blocks) to be added. At most 50 etnry can be supported in one resource. It contains two sub-fields as `Entry Block` follows.
	EntryLists AclEntryListArrayInput
	// The IP Version of access control list is the type of its entry (IP addresses or CIDR blocks). It values ipv4/ipv6. Our plugin provides a default ip_version: "ipv4".
	IpVersion pulumi.StringPtrInput
	// Name of the access control list.
	Name pulumi.StringPtrInput
	// Resource group ID.
	ResourceGroupId pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput
}

func (AclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aclArgs)(nil)).Elem()
}
