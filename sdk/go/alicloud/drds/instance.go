// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package drds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Distributed Relational Database Service (DRDS) is a lightweight (stateless), flexible, stable, and efficient middleware product independently developed by Alibaba Group to resolve scalability issues with single-host relational databases.
// With its compatibility with MySQL protocols and syntaxes, DRDS enables database/table sharding, smooth scaling, configuration upgrade/downgrade,
// transparent read/write splitting, and distributed transactions, providing O&M capabilities for distributed databases throughout their entire lifecycle.
//
// For information about DRDS and how to use it, see [What is DRDS](https://www.alibabacloud.com/help/doc-detail/29659.htm).
//
// > **NOTE:** At present, DRDS instance only can be supported in the regions: cn-shenzhen, cn-beijing, cn-hangzhou, cn-hongkong, cn-qingdao, ap-southeast-1.
//
// > **NOTE:** Currently, this resource only support `Domestic Site Account`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/drds"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := drds.NewInstance(ctx, "_default", &drds.InstanceArgs{
// 			Description:        pulumi.String("drds instance"),
// 			InstanceChargeType: pulumi.String("PostPaid"),
// 			InstanceSeries:     pulumi.String("drds.sn1.4c8g"),
// 			Specification:      pulumi.String("drds.sn1.4c8g.8C16G"),
// 			VswitchId:          pulumi.String("vsw-bp1jlu3swk8rq2yoi40ey"),
// 			ZoneId:             pulumi.String("cn-hangzhou-e"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Distributed Relational Database Service (DRDS) can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:drds/instance:Instance example drds-abc123456
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType pulumi.StringPtrOutput `pulumi:"instanceChargeType"`
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries pulumi.StringOutput `pulumi:"instanceSeries"`
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification pulumi.StringOutput `pulumi:"specification"`
	// The VSwitch ID to launch in.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
	// The Zone to launch the DRDS instance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.InstanceSeries == nil {
		return nil, errors.New("missing required argument 'InstanceSeries'")
	}
	if args == nil || args.Specification == nil {
		return nil, errors.New("missing required argument 'Specification'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	if args == nil {
		args = &InstanceArgs{}
	}
	var resource Instance
	err := ctx.RegisterResource("alicloud:drds/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("alicloud:drds/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description *string `pulumi:"description"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries *string `pulumi:"instanceSeries"`
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification *string `pulumi:"specification"`
	// The VSwitch ID to launch in.
	VswitchId *string `pulumi:"vswitchId"`
	// The Zone to launch the DRDS instance.
	ZoneId *string `pulumi:"zoneId"`
}

type InstanceState struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description pulumi.StringPtrInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries pulumi.StringPtrInput
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification pulumi.StringPtrInput
	// The VSwitch ID to launch in.
	VswitchId pulumi.StringPtrInput
	// The Zone to launch the DRDS instance.
	ZoneId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description string `pulumi:"description"`
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries string `pulumi:"instanceSeries"`
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification string `pulumi:"specification"`
	// The VSwitch ID to launch in.
	VswitchId string `pulumi:"vswitchId"`
	// The Zone to launch the DRDS instance.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description pulumi.StringInput
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries pulumi.StringInput
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification pulumi.StringInput
	// The VSwitch ID to launch in.
	VswitchId pulumi.StringInput
	// The Zone to launch the DRDS instance.
	ZoneId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (Instance) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil)).Elem()
}

func (i Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

type InstanceOutput struct {
	*pulumi.OutputState
}

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceOutput)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
