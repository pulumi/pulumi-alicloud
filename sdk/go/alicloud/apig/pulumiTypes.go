// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GatewayLogConfig struct {
	// Sls See `sls` below.
	Sls *GatewayLogConfigSls `pulumi:"sls"`
}

// GatewayLogConfigInput is an input type that accepts GatewayLogConfigArgs and GatewayLogConfigOutput values.
// You can construct a concrete instance of `GatewayLogConfigInput` via:
//
//	GatewayLogConfigArgs{...}
type GatewayLogConfigInput interface {
	pulumi.Input

	ToGatewayLogConfigOutput() GatewayLogConfigOutput
	ToGatewayLogConfigOutputWithContext(context.Context) GatewayLogConfigOutput
}

type GatewayLogConfigArgs struct {
	// Sls See `sls` below.
	Sls GatewayLogConfigSlsPtrInput `pulumi:"sls"`
}

func (GatewayLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLogConfig)(nil)).Elem()
}

func (i GatewayLogConfigArgs) ToGatewayLogConfigOutput() GatewayLogConfigOutput {
	return i.ToGatewayLogConfigOutputWithContext(context.Background())
}

func (i GatewayLogConfigArgs) ToGatewayLogConfigOutputWithContext(ctx context.Context) GatewayLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigOutput)
}

func (i GatewayLogConfigArgs) ToGatewayLogConfigPtrOutput() GatewayLogConfigPtrOutput {
	return i.ToGatewayLogConfigPtrOutputWithContext(context.Background())
}

func (i GatewayLogConfigArgs) ToGatewayLogConfigPtrOutputWithContext(ctx context.Context) GatewayLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigOutput).ToGatewayLogConfigPtrOutputWithContext(ctx)
}

// GatewayLogConfigPtrInput is an input type that accepts GatewayLogConfigArgs, GatewayLogConfigPtr and GatewayLogConfigPtrOutput values.
// You can construct a concrete instance of `GatewayLogConfigPtrInput` via:
//
//	        GatewayLogConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayLogConfigPtrInput interface {
	pulumi.Input

	ToGatewayLogConfigPtrOutput() GatewayLogConfigPtrOutput
	ToGatewayLogConfigPtrOutputWithContext(context.Context) GatewayLogConfigPtrOutput
}

type gatewayLogConfigPtrType GatewayLogConfigArgs

func GatewayLogConfigPtr(v *GatewayLogConfigArgs) GatewayLogConfigPtrInput {
	return (*gatewayLogConfigPtrType)(v)
}

func (*gatewayLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLogConfig)(nil)).Elem()
}

func (i *gatewayLogConfigPtrType) ToGatewayLogConfigPtrOutput() GatewayLogConfigPtrOutput {
	return i.ToGatewayLogConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayLogConfigPtrType) ToGatewayLogConfigPtrOutputWithContext(ctx context.Context) GatewayLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigPtrOutput)
}

type GatewayLogConfigOutput struct{ *pulumi.OutputState }

func (GatewayLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLogConfig)(nil)).Elem()
}

func (o GatewayLogConfigOutput) ToGatewayLogConfigOutput() GatewayLogConfigOutput {
	return o
}

func (o GatewayLogConfigOutput) ToGatewayLogConfigOutputWithContext(ctx context.Context) GatewayLogConfigOutput {
	return o
}

func (o GatewayLogConfigOutput) ToGatewayLogConfigPtrOutput() GatewayLogConfigPtrOutput {
	return o.ToGatewayLogConfigPtrOutputWithContext(context.Background())
}

func (o GatewayLogConfigOutput) ToGatewayLogConfigPtrOutputWithContext(ctx context.Context) GatewayLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayLogConfig) *GatewayLogConfig {
		return &v
	}).(GatewayLogConfigPtrOutput)
}

// Sls See `sls` below.
func (o GatewayLogConfigOutput) Sls() GatewayLogConfigSlsPtrOutput {
	return o.ApplyT(func(v GatewayLogConfig) *GatewayLogConfigSls { return v.Sls }).(GatewayLogConfigSlsPtrOutput)
}

type GatewayLogConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLogConfig)(nil)).Elem()
}

func (o GatewayLogConfigPtrOutput) ToGatewayLogConfigPtrOutput() GatewayLogConfigPtrOutput {
	return o
}

func (o GatewayLogConfigPtrOutput) ToGatewayLogConfigPtrOutputWithContext(ctx context.Context) GatewayLogConfigPtrOutput {
	return o
}

func (o GatewayLogConfigPtrOutput) Elem() GatewayLogConfigOutput {
	return o.ApplyT(func(v *GatewayLogConfig) GatewayLogConfig {
		if v != nil {
			return *v
		}
		var ret GatewayLogConfig
		return ret
	}).(GatewayLogConfigOutput)
}

// Sls See `sls` below.
func (o GatewayLogConfigPtrOutput) Sls() GatewayLogConfigSlsPtrOutput {
	return o.ApplyT(func(v *GatewayLogConfig) *GatewayLogConfigSls {
		if v == nil {
			return nil
		}
		return v.Sls
	}).(GatewayLogConfigSlsPtrOutput)
}

type GatewayLogConfigSls struct {
	// Enable Log Service
	Enable *bool `pulumi:"enable"`
}

// GatewayLogConfigSlsInput is an input type that accepts GatewayLogConfigSlsArgs and GatewayLogConfigSlsOutput values.
// You can construct a concrete instance of `GatewayLogConfigSlsInput` via:
//
//	GatewayLogConfigSlsArgs{...}
type GatewayLogConfigSlsInput interface {
	pulumi.Input

	ToGatewayLogConfigSlsOutput() GatewayLogConfigSlsOutput
	ToGatewayLogConfigSlsOutputWithContext(context.Context) GatewayLogConfigSlsOutput
}

type GatewayLogConfigSlsArgs struct {
	// Enable Log Service
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (GatewayLogConfigSlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLogConfigSls)(nil)).Elem()
}

func (i GatewayLogConfigSlsArgs) ToGatewayLogConfigSlsOutput() GatewayLogConfigSlsOutput {
	return i.ToGatewayLogConfigSlsOutputWithContext(context.Background())
}

func (i GatewayLogConfigSlsArgs) ToGatewayLogConfigSlsOutputWithContext(ctx context.Context) GatewayLogConfigSlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigSlsOutput)
}

func (i GatewayLogConfigSlsArgs) ToGatewayLogConfigSlsPtrOutput() GatewayLogConfigSlsPtrOutput {
	return i.ToGatewayLogConfigSlsPtrOutputWithContext(context.Background())
}

func (i GatewayLogConfigSlsArgs) ToGatewayLogConfigSlsPtrOutputWithContext(ctx context.Context) GatewayLogConfigSlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigSlsOutput).ToGatewayLogConfigSlsPtrOutputWithContext(ctx)
}

// GatewayLogConfigSlsPtrInput is an input type that accepts GatewayLogConfigSlsArgs, GatewayLogConfigSlsPtr and GatewayLogConfigSlsPtrOutput values.
// You can construct a concrete instance of `GatewayLogConfigSlsPtrInput` via:
//
//	        GatewayLogConfigSlsArgs{...}
//
//	or:
//
//	        nil
type GatewayLogConfigSlsPtrInput interface {
	pulumi.Input

	ToGatewayLogConfigSlsPtrOutput() GatewayLogConfigSlsPtrOutput
	ToGatewayLogConfigSlsPtrOutputWithContext(context.Context) GatewayLogConfigSlsPtrOutput
}

type gatewayLogConfigSlsPtrType GatewayLogConfigSlsArgs

func GatewayLogConfigSlsPtr(v *GatewayLogConfigSlsArgs) GatewayLogConfigSlsPtrInput {
	return (*gatewayLogConfigSlsPtrType)(v)
}

func (*gatewayLogConfigSlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLogConfigSls)(nil)).Elem()
}

func (i *gatewayLogConfigSlsPtrType) ToGatewayLogConfigSlsPtrOutput() GatewayLogConfigSlsPtrOutput {
	return i.ToGatewayLogConfigSlsPtrOutputWithContext(context.Background())
}

func (i *gatewayLogConfigSlsPtrType) ToGatewayLogConfigSlsPtrOutputWithContext(ctx context.Context) GatewayLogConfigSlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLogConfigSlsPtrOutput)
}

type GatewayLogConfigSlsOutput struct{ *pulumi.OutputState }

func (GatewayLogConfigSlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLogConfigSls)(nil)).Elem()
}

func (o GatewayLogConfigSlsOutput) ToGatewayLogConfigSlsOutput() GatewayLogConfigSlsOutput {
	return o
}

func (o GatewayLogConfigSlsOutput) ToGatewayLogConfigSlsOutputWithContext(ctx context.Context) GatewayLogConfigSlsOutput {
	return o
}

func (o GatewayLogConfigSlsOutput) ToGatewayLogConfigSlsPtrOutput() GatewayLogConfigSlsPtrOutput {
	return o.ToGatewayLogConfigSlsPtrOutputWithContext(context.Background())
}

func (o GatewayLogConfigSlsOutput) ToGatewayLogConfigSlsPtrOutputWithContext(ctx context.Context) GatewayLogConfigSlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayLogConfigSls) *GatewayLogConfigSls {
		return &v
	}).(GatewayLogConfigSlsPtrOutput)
}

// Enable Log Service
func (o GatewayLogConfigSlsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayLogConfigSls) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type GatewayLogConfigSlsPtrOutput struct{ *pulumi.OutputState }

func (GatewayLogConfigSlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLogConfigSls)(nil)).Elem()
}

func (o GatewayLogConfigSlsPtrOutput) ToGatewayLogConfigSlsPtrOutput() GatewayLogConfigSlsPtrOutput {
	return o
}

func (o GatewayLogConfigSlsPtrOutput) ToGatewayLogConfigSlsPtrOutputWithContext(ctx context.Context) GatewayLogConfigSlsPtrOutput {
	return o
}

func (o GatewayLogConfigSlsPtrOutput) Elem() GatewayLogConfigSlsOutput {
	return o.ApplyT(func(v *GatewayLogConfigSls) GatewayLogConfigSls {
		if v != nil {
			return *v
		}
		var ret GatewayLogConfigSls
		return ret
	}).(GatewayLogConfigSlsOutput)
}

// Enable Log Service
func (o GatewayLogConfigSlsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GatewayLogConfigSls) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type GatewayNetworkAccessConfig struct {
	// Network Access Type
	Type *string `pulumi:"type"`
}

// GatewayNetworkAccessConfigInput is an input type that accepts GatewayNetworkAccessConfigArgs and GatewayNetworkAccessConfigOutput values.
// You can construct a concrete instance of `GatewayNetworkAccessConfigInput` via:
//
//	GatewayNetworkAccessConfigArgs{...}
type GatewayNetworkAccessConfigInput interface {
	pulumi.Input

	ToGatewayNetworkAccessConfigOutput() GatewayNetworkAccessConfigOutput
	ToGatewayNetworkAccessConfigOutputWithContext(context.Context) GatewayNetworkAccessConfigOutput
}

type GatewayNetworkAccessConfigArgs struct {
	// Network Access Type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayNetworkAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkAccessConfig)(nil)).Elem()
}

func (i GatewayNetworkAccessConfigArgs) ToGatewayNetworkAccessConfigOutput() GatewayNetworkAccessConfigOutput {
	return i.ToGatewayNetworkAccessConfigOutputWithContext(context.Background())
}

func (i GatewayNetworkAccessConfigArgs) ToGatewayNetworkAccessConfigOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkAccessConfigOutput)
}

func (i GatewayNetworkAccessConfigArgs) ToGatewayNetworkAccessConfigPtrOutput() GatewayNetworkAccessConfigPtrOutput {
	return i.ToGatewayNetworkAccessConfigPtrOutputWithContext(context.Background())
}

func (i GatewayNetworkAccessConfigArgs) ToGatewayNetworkAccessConfigPtrOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkAccessConfigOutput).ToGatewayNetworkAccessConfigPtrOutputWithContext(ctx)
}

// GatewayNetworkAccessConfigPtrInput is an input type that accepts GatewayNetworkAccessConfigArgs, GatewayNetworkAccessConfigPtr and GatewayNetworkAccessConfigPtrOutput values.
// You can construct a concrete instance of `GatewayNetworkAccessConfigPtrInput` via:
//
//	        GatewayNetworkAccessConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayNetworkAccessConfigPtrInput interface {
	pulumi.Input

	ToGatewayNetworkAccessConfigPtrOutput() GatewayNetworkAccessConfigPtrOutput
	ToGatewayNetworkAccessConfigPtrOutputWithContext(context.Context) GatewayNetworkAccessConfigPtrOutput
}

type gatewayNetworkAccessConfigPtrType GatewayNetworkAccessConfigArgs

func GatewayNetworkAccessConfigPtr(v *GatewayNetworkAccessConfigArgs) GatewayNetworkAccessConfigPtrInput {
	return (*gatewayNetworkAccessConfigPtrType)(v)
}

func (*gatewayNetworkAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkAccessConfig)(nil)).Elem()
}

func (i *gatewayNetworkAccessConfigPtrType) ToGatewayNetworkAccessConfigPtrOutput() GatewayNetworkAccessConfigPtrOutput {
	return i.ToGatewayNetworkAccessConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayNetworkAccessConfigPtrType) ToGatewayNetworkAccessConfigPtrOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkAccessConfigPtrOutput)
}

type GatewayNetworkAccessConfigOutput struct{ *pulumi.OutputState }

func (GatewayNetworkAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkAccessConfig)(nil)).Elem()
}

func (o GatewayNetworkAccessConfigOutput) ToGatewayNetworkAccessConfigOutput() GatewayNetworkAccessConfigOutput {
	return o
}

func (o GatewayNetworkAccessConfigOutput) ToGatewayNetworkAccessConfigOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigOutput {
	return o
}

func (o GatewayNetworkAccessConfigOutput) ToGatewayNetworkAccessConfigPtrOutput() GatewayNetworkAccessConfigPtrOutput {
	return o.ToGatewayNetworkAccessConfigPtrOutputWithContext(context.Background())
}

func (o GatewayNetworkAccessConfigOutput) ToGatewayNetworkAccessConfigPtrOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayNetworkAccessConfig) *GatewayNetworkAccessConfig {
		return &v
	}).(GatewayNetworkAccessConfigPtrOutput)
}

// Network Access Type
func (o GatewayNetworkAccessConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkAccessConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayNetworkAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayNetworkAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayNetworkAccessConfig)(nil)).Elem()
}

func (o GatewayNetworkAccessConfigPtrOutput) ToGatewayNetworkAccessConfigPtrOutput() GatewayNetworkAccessConfigPtrOutput {
	return o
}

func (o GatewayNetworkAccessConfigPtrOutput) ToGatewayNetworkAccessConfigPtrOutputWithContext(ctx context.Context) GatewayNetworkAccessConfigPtrOutput {
	return o
}

func (o GatewayNetworkAccessConfigPtrOutput) Elem() GatewayNetworkAccessConfigOutput {
	return o.ApplyT(func(v *GatewayNetworkAccessConfig) GatewayNetworkAccessConfig {
		if v != nil {
			return *v
		}
		var ret GatewayNetworkAccessConfig
		return ret
	}).(GatewayNetworkAccessConfigOutput)
}

// Network Access Type
func (o GatewayNetworkAccessConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayNetworkAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GatewayVpc struct {
	// The zone name.
	Name *string `pulumi:"name"`
	// The VPC network ID.
	VpcId string `pulumi:"vpcId"`
}

// GatewayVpcInput is an input type that accepts GatewayVpcArgs and GatewayVpcOutput values.
// You can construct a concrete instance of `GatewayVpcInput` via:
//
//	GatewayVpcArgs{...}
type GatewayVpcInput interface {
	pulumi.Input

	ToGatewayVpcOutput() GatewayVpcOutput
	ToGatewayVpcOutputWithContext(context.Context) GatewayVpcOutput
}

type GatewayVpcArgs struct {
	// The zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The VPC network ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GatewayVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpc)(nil)).Elem()
}

func (i GatewayVpcArgs) ToGatewayVpcOutput() GatewayVpcOutput {
	return i.ToGatewayVpcOutputWithContext(context.Background())
}

func (i GatewayVpcArgs) ToGatewayVpcOutputWithContext(ctx context.Context) GatewayVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpcOutput)
}

func (i GatewayVpcArgs) ToGatewayVpcPtrOutput() GatewayVpcPtrOutput {
	return i.ToGatewayVpcPtrOutputWithContext(context.Background())
}

func (i GatewayVpcArgs) ToGatewayVpcPtrOutputWithContext(ctx context.Context) GatewayVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpcOutput).ToGatewayVpcPtrOutputWithContext(ctx)
}

// GatewayVpcPtrInput is an input type that accepts GatewayVpcArgs, GatewayVpcPtr and GatewayVpcPtrOutput values.
// You can construct a concrete instance of `GatewayVpcPtrInput` via:
//
//	        GatewayVpcArgs{...}
//
//	or:
//
//	        nil
type GatewayVpcPtrInput interface {
	pulumi.Input

	ToGatewayVpcPtrOutput() GatewayVpcPtrOutput
	ToGatewayVpcPtrOutputWithContext(context.Context) GatewayVpcPtrOutput
}

type gatewayVpcPtrType GatewayVpcArgs

func GatewayVpcPtr(v *GatewayVpcArgs) GatewayVpcPtrInput {
	return (*gatewayVpcPtrType)(v)
}

func (*gatewayVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpc)(nil)).Elem()
}

func (i *gatewayVpcPtrType) ToGatewayVpcPtrOutput() GatewayVpcPtrOutput {
	return i.ToGatewayVpcPtrOutputWithContext(context.Background())
}

func (i *gatewayVpcPtrType) ToGatewayVpcPtrOutputWithContext(ctx context.Context) GatewayVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVpcPtrOutput)
}

type GatewayVpcOutput struct{ *pulumi.OutputState }

func (GatewayVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVpc)(nil)).Elem()
}

func (o GatewayVpcOutput) ToGatewayVpcOutput() GatewayVpcOutput {
	return o
}

func (o GatewayVpcOutput) ToGatewayVpcOutputWithContext(ctx context.Context) GatewayVpcOutput {
	return o
}

func (o GatewayVpcOutput) ToGatewayVpcPtrOutput() GatewayVpcPtrOutput {
	return o.ToGatewayVpcPtrOutputWithContext(context.Background())
}

func (o GatewayVpcOutput) ToGatewayVpcPtrOutputWithContext(ctx context.Context) GatewayVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVpc) *GatewayVpc {
		return &v
	}).(GatewayVpcPtrOutput)
}

// The zone name.
func (o GatewayVpcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVpc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The VPC network ID.
func (o GatewayVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type GatewayVpcPtrOutput struct{ *pulumi.OutputState }

func (GatewayVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVpc)(nil)).Elem()
}

func (o GatewayVpcPtrOutput) ToGatewayVpcPtrOutput() GatewayVpcPtrOutput {
	return o
}

func (o GatewayVpcPtrOutput) ToGatewayVpcPtrOutputWithContext(ctx context.Context) GatewayVpcPtrOutput {
	return o
}

func (o GatewayVpcPtrOutput) Elem() GatewayVpcOutput {
	return o.ApplyT(func(v *GatewayVpc) GatewayVpc {
		if v != nil {
			return *v
		}
		var ret GatewayVpc
		return ret
	}).(GatewayVpcOutput)
}

// The zone name.
func (o GatewayVpcPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpc) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The VPC network ID.
func (o GatewayVpcPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVpc) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type GatewayVswitch struct {
	// The zone name.
	Name *string `pulumi:"name"`
	// The ID of the virtual switch.
	VswitchId *string `pulumi:"vswitchId"`
}

// GatewayVswitchInput is an input type that accepts GatewayVswitchArgs and GatewayVswitchOutput values.
// You can construct a concrete instance of `GatewayVswitchInput` via:
//
//	GatewayVswitchArgs{...}
type GatewayVswitchInput interface {
	pulumi.Input

	ToGatewayVswitchOutput() GatewayVswitchOutput
	ToGatewayVswitchOutputWithContext(context.Context) GatewayVswitchOutput
}

type GatewayVswitchArgs struct {
	// The zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the virtual switch.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (GatewayVswitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVswitch)(nil)).Elem()
}

func (i GatewayVswitchArgs) ToGatewayVswitchOutput() GatewayVswitchOutput {
	return i.ToGatewayVswitchOutputWithContext(context.Background())
}

func (i GatewayVswitchArgs) ToGatewayVswitchOutputWithContext(ctx context.Context) GatewayVswitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVswitchOutput)
}

func (i GatewayVswitchArgs) ToGatewayVswitchPtrOutput() GatewayVswitchPtrOutput {
	return i.ToGatewayVswitchPtrOutputWithContext(context.Background())
}

func (i GatewayVswitchArgs) ToGatewayVswitchPtrOutputWithContext(ctx context.Context) GatewayVswitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVswitchOutput).ToGatewayVswitchPtrOutputWithContext(ctx)
}

// GatewayVswitchPtrInput is an input type that accepts GatewayVswitchArgs, GatewayVswitchPtr and GatewayVswitchPtrOutput values.
// You can construct a concrete instance of `GatewayVswitchPtrInput` via:
//
//	        GatewayVswitchArgs{...}
//
//	or:
//
//	        nil
type GatewayVswitchPtrInput interface {
	pulumi.Input

	ToGatewayVswitchPtrOutput() GatewayVswitchPtrOutput
	ToGatewayVswitchPtrOutputWithContext(context.Context) GatewayVswitchPtrOutput
}

type gatewayVswitchPtrType GatewayVswitchArgs

func GatewayVswitchPtr(v *GatewayVswitchArgs) GatewayVswitchPtrInput {
	return (*gatewayVswitchPtrType)(v)
}

func (*gatewayVswitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVswitch)(nil)).Elem()
}

func (i *gatewayVswitchPtrType) ToGatewayVswitchPtrOutput() GatewayVswitchPtrOutput {
	return i.ToGatewayVswitchPtrOutputWithContext(context.Background())
}

func (i *gatewayVswitchPtrType) ToGatewayVswitchPtrOutputWithContext(ctx context.Context) GatewayVswitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayVswitchPtrOutput)
}

type GatewayVswitchOutput struct{ *pulumi.OutputState }

func (GatewayVswitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayVswitch)(nil)).Elem()
}

func (o GatewayVswitchOutput) ToGatewayVswitchOutput() GatewayVswitchOutput {
	return o
}

func (o GatewayVswitchOutput) ToGatewayVswitchOutputWithContext(ctx context.Context) GatewayVswitchOutput {
	return o
}

func (o GatewayVswitchOutput) ToGatewayVswitchPtrOutput() GatewayVswitchPtrOutput {
	return o.ToGatewayVswitchPtrOutputWithContext(context.Background())
}

func (o GatewayVswitchOutput) ToGatewayVswitchPtrOutputWithContext(ctx context.Context) GatewayVswitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayVswitch) *GatewayVswitch {
		return &v
	}).(GatewayVswitchPtrOutput)
}

// The zone name.
func (o GatewayVswitchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVswitch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the virtual switch.
func (o GatewayVswitchOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayVswitch) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

type GatewayVswitchPtrOutput struct{ *pulumi.OutputState }

func (GatewayVswitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayVswitch)(nil)).Elem()
}

func (o GatewayVswitchPtrOutput) ToGatewayVswitchPtrOutput() GatewayVswitchPtrOutput {
	return o
}

func (o GatewayVswitchPtrOutput) ToGatewayVswitchPtrOutputWithContext(ctx context.Context) GatewayVswitchPtrOutput {
	return o
}

func (o GatewayVswitchPtrOutput) Elem() GatewayVswitchOutput {
	return o.ApplyT(func(v *GatewayVswitch) GatewayVswitch {
		if v != nil {
			return *v
		}
		var ret GatewayVswitch
		return ret
	}).(GatewayVswitchOutput)
}

// The zone name.
func (o GatewayVswitchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVswitch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ID of the virtual switch.
func (o GatewayVswitchPtrOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayVswitch) *string {
		if v == nil {
			return nil
		}
		return v.VswitchId
	}).(pulumi.StringPtrOutput)
}

type GatewayZone struct {
	// The zone name.
	Name *string `pulumi:"name"`
	// The vswitch ID.
	VswitchId *string `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// GatewayZoneInput is an input type that accepts GatewayZoneArgs and GatewayZoneOutput values.
// You can construct a concrete instance of `GatewayZoneInput` via:
//
//	GatewayZoneArgs{...}
type GatewayZoneInput interface {
	pulumi.Input

	ToGatewayZoneOutput() GatewayZoneOutput
	ToGatewayZoneOutputWithContext(context.Context) GatewayZoneOutput
}

type GatewayZoneArgs struct {
	// The zone name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The vswitch ID.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GatewayZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayZone)(nil)).Elem()
}

func (i GatewayZoneArgs) ToGatewayZoneOutput() GatewayZoneOutput {
	return i.ToGatewayZoneOutputWithContext(context.Background())
}

func (i GatewayZoneArgs) ToGatewayZoneOutputWithContext(ctx context.Context) GatewayZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayZoneOutput)
}

// GatewayZoneArrayInput is an input type that accepts GatewayZoneArray and GatewayZoneArrayOutput values.
// You can construct a concrete instance of `GatewayZoneArrayInput` via:
//
//	GatewayZoneArray{ GatewayZoneArgs{...} }
type GatewayZoneArrayInput interface {
	pulumi.Input

	ToGatewayZoneArrayOutput() GatewayZoneArrayOutput
	ToGatewayZoneArrayOutputWithContext(context.Context) GatewayZoneArrayOutput
}

type GatewayZoneArray []GatewayZoneInput

func (GatewayZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayZone)(nil)).Elem()
}

func (i GatewayZoneArray) ToGatewayZoneArrayOutput() GatewayZoneArrayOutput {
	return i.ToGatewayZoneArrayOutputWithContext(context.Background())
}

func (i GatewayZoneArray) ToGatewayZoneArrayOutputWithContext(ctx context.Context) GatewayZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayZoneArrayOutput)
}

type GatewayZoneOutput struct{ *pulumi.OutputState }

func (GatewayZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayZone)(nil)).Elem()
}

func (o GatewayZoneOutput) ToGatewayZoneOutput() GatewayZoneOutput {
	return o
}

func (o GatewayZoneOutput) ToGatewayZoneOutputWithContext(ctx context.Context) GatewayZoneOutput {
	return o
}

// The zone name.
func (o GatewayZoneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayZone) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The vswitch ID.
func (o GatewayZoneOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayZone) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// The zone ID.
func (o GatewayZoneOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayZone) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type GatewayZoneArrayOutput struct{ *pulumi.OutputState }

func (GatewayZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayZone)(nil)).Elem()
}

func (o GatewayZoneArrayOutput) ToGatewayZoneArrayOutput() GatewayZoneArrayOutput {
	return o
}

func (o GatewayZoneArrayOutput) ToGatewayZoneArrayOutputWithContext(ctx context.Context) GatewayZoneArrayOutput {
	return o
}

func (o GatewayZoneArrayOutput) Index(i pulumi.IntInput) GatewayZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayZone {
		return vs[0].([]GatewayZone)[vs[1].(int)]
	}).(GatewayZoneOutput)
}

type GatewayZoneConfig struct {
	// Availability Zone Options
	SelectOption string `pulumi:"selectOption"`
}

// GatewayZoneConfigInput is an input type that accepts GatewayZoneConfigArgs and GatewayZoneConfigOutput values.
// You can construct a concrete instance of `GatewayZoneConfigInput` via:
//
//	GatewayZoneConfigArgs{...}
type GatewayZoneConfigInput interface {
	pulumi.Input

	ToGatewayZoneConfigOutput() GatewayZoneConfigOutput
	ToGatewayZoneConfigOutputWithContext(context.Context) GatewayZoneConfigOutput
}

type GatewayZoneConfigArgs struct {
	// Availability Zone Options
	SelectOption pulumi.StringInput `pulumi:"selectOption"`
}

func (GatewayZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayZoneConfig)(nil)).Elem()
}

func (i GatewayZoneConfigArgs) ToGatewayZoneConfigOutput() GatewayZoneConfigOutput {
	return i.ToGatewayZoneConfigOutputWithContext(context.Background())
}

func (i GatewayZoneConfigArgs) ToGatewayZoneConfigOutputWithContext(ctx context.Context) GatewayZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayZoneConfigOutput)
}

func (i GatewayZoneConfigArgs) ToGatewayZoneConfigPtrOutput() GatewayZoneConfigPtrOutput {
	return i.ToGatewayZoneConfigPtrOutputWithContext(context.Background())
}

func (i GatewayZoneConfigArgs) ToGatewayZoneConfigPtrOutputWithContext(ctx context.Context) GatewayZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayZoneConfigOutput).ToGatewayZoneConfigPtrOutputWithContext(ctx)
}

// GatewayZoneConfigPtrInput is an input type that accepts GatewayZoneConfigArgs, GatewayZoneConfigPtr and GatewayZoneConfigPtrOutput values.
// You can construct a concrete instance of `GatewayZoneConfigPtrInput` via:
//
//	        GatewayZoneConfigArgs{...}
//
//	or:
//
//	        nil
type GatewayZoneConfigPtrInput interface {
	pulumi.Input

	ToGatewayZoneConfigPtrOutput() GatewayZoneConfigPtrOutput
	ToGatewayZoneConfigPtrOutputWithContext(context.Context) GatewayZoneConfigPtrOutput
}

type gatewayZoneConfigPtrType GatewayZoneConfigArgs

func GatewayZoneConfigPtr(v *GatewayZoneConfigArgs) GatewayZoneConfigPtrInput {
	return (*gatewayZoneConfigPtrType)(v)
}

func (*gatewayZoneConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayZoneConfig)(nil)).Elem()
}

func (i *gatewayZoneConfigPtrType) ToGatewayZoneConfigPtrOutput() GatewayZoneConfigPtrOutput {
	return i.ToGatewayZoneConfigPtrOutputWithContext(context.Background())
}

func (i *gatewayZoneConfigPtrType) ToGatewayZoneConfigPtrOutputWithContext(ctx context.Context) GatewayZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayZoneConfigPtrOutput)
}

type GatewayZoneConfigOutput struct{ *pulumi.OutputState }

func (GatewayZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayZoneConfig)(nil)).Elem()
}

func (o GatewayZoneConfigOutput) ToGatewayZoneConfigOutput() GatewayZoneConfigOutput {
	return o
}

func (o GatewayZoneConfigOutput) ToGatewayZoneConfigOutputWithContext(ctx context.Context) GatewayZoneConfigOutput {
	return o
}

func (o GatewayZoneConfigOutput) ToGatewayZoneConfigPtrOutput() GatewayZoneConfigPtrOutput {
	return o.ToGatewayZoneConfigPtrOutputWithContext(context.Background())
}

func (o GatewayZoneConfigOutput) ToGatewayZoneConfigPtrOutputWithContext(ctx context.Context) GatewayZoneConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayZoneConfig) *GatewayZoneConfig {
		return &v
	}).(GatewayZoneConfigPtrOutput)
}

// Availability Zone Options
func (o GatewayZoneConfigOutput) SelectOption() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayZoneConfig) string { return v.SelectOption }).(pulumi.StringOutput)
}

type GatewayZoneConfigPtrOutput struct{ *pulumi.OutputState }

func (GatewayZoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayZoneConfig)(nil)).Elem()
}

func (o GatewayZoneConfigPtrOutput) ToGatewayZoneConfigPtrOutput() GatewayZoneConfigPtrOutput {
	return o
}

func (o GatewayZoneConfigPtrOutput) ToGatewayZoneConfigPtrOutputWithContext(ctx context.Context) GatewayZoneConfigPtrOutput {
	return o
}

func (o GatewayZoneConfigPtrOutput) Elem() GatewayZoneConfigOutput {
	return o.ApplyT(func(v *GatewayZoneConfig) GatewayZoneConfig {
		if v != nil {
			return *v
		}
		var ret GatewayZoneConfig
		return ret
	}).(GatewayZoneConfigOutput)
}

// Availability Zone Options
func (o GatewayZoneConfigPtrOutput) SelectOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayZoneConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SelectOption
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLogConfigInput)(nil)).Elem(), GatewayLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLogConfigPtrInput)(nil)).Elem(), GatewayLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLogConfigSlsInput)(nil)).Elem(), GatewayLogConfigSlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLogConfigSlsPtrInput)(nil)).Elem(), GatewayLogConfigSlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkAccessConfigInput)(nil)).Elem(), GatewayNetworkAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkAccessConfigPtrInput)(nil)).Elem(), GatewayNetworkAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpcInput)(nil)).Elem(), GatewayVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVpcPtrInput)(nil)).Elem(), GatewayVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVswitchInput)(nil)).Elem(), GatewayVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayVswitchPtrInput)(nil)).Elem(), GatewayVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayZoneInput)(nil)).Elem(), GatewayZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayZoneArrayInput)(nil)).Elem(), GatewayZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayZoneConfigInput)(nil)).Elem(), GatewayZoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayZoneConfigPtrInput)(nil)).Elem(), GatewayZoneConfigArgs{})
	pulumi.RegisterOutputType(GatewayLogConfigOutput{})
	pulumi.RegisterOutputType(GatewayLogConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayLogConfigSlsOutput{})
	pulumi.RegisterOutputType(GatewayLogConfigSlsPtrOutput{})
	pulumi.RegisterOutputType(GatewayNetworkAccessConfigOutput{})
	pulumi.RegisterOutputType(GatewayNetworkAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(GatewayVpcOutput{})
	pulumi.RegisterOutputType(GatewayVpcPtrOutput{})
	pulumi.RegisterOutputType(GatewayVswitchOutput{})
	pulumi.RegisterOutputType(GatewayVswitchPtrOutput{})
	pulumi.RegisterOutputType(GatewayZoneOutput{})
	pulumi.RegisterOutputType(GatewayZoneArrayOutput{})
	pulumi.RegisterOutputType(GatewayZoneConfigOutput{})
	pulumi.RegisterOutputType(GatewayZoneConfigPtrOutput{})
}
