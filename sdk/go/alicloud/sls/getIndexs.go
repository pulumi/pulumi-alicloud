// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Sls Index available to the user.[What is Index](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateIndex)
//
// > **NOTE:** Available since v1.262.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// logstoreName := "logstore-example-1";
// if param := cfg.Get("logstoreName"); param != ""{
// logstoreName = param
// }
// projectName := "project-for-index-terraform-example-1";
// if param := cfg.Get("projectName"); param != ""{
// projectName = param
// }
// defaultProject, err := log.NewProject(ctx, "default", &log.ProjectArgs{
// Description: pulumi.String("terraform example"),
// ProjectName: pulumi.String(projectName),
// })
// if err != nil {
// return err
// }
// defaultStore, err := log.NewStore(ctx, "default", &log.StoreArgs{
// HotTtl: pulumi.Int(7),
// RetentionPeriod: pulumi.Int(30),
// ShardCount: pulumi.Int(2),
// ProjectName: defaultProject.ProjectName,
// LogstoreName: pulumi.String(logstoreName),
// })
// if err != nil {
// return err
// }
// tmpJSON0, err := json.Marshal(map[string]interface{}{
// "example": map[string]interface{}{
// "caseSensitive": false,
// "token": []string{
// "\n",
// "	",
// ",",
// " ",
// ";",
// "\"",
// "'",
// "(",
// ")",
// "{",
// "}",
// "[",
// "]",
// "<",
// ">",
// "?",
// "/",
// "#",
// ":",
// },
// "type": "text",
// "doc_value": false,
// "alias": "",
// "chn": false,
// },
// })
// if err != nil {
// return err
// }
// json0 := string(tmpJSON0)
// _, err = sls.NewIndex(ctx, "default", &sls.IndexArgs{
// Line: &sls.IndexLineArgs{
// Chn: pulumi.Bool(true),
// CaseSensitive: pulumi.Bool(true),
// Tokens: pulumi.StringArray{
// pulumi.String("a"),
// },
// ExcludeKeys: pulumi.StringArray{
// pulumi.String("t"),
// },
// },
// Keys: pulumi.String(json0),
// LogstoreName: defaultStore.LogstoreName,
// ProjectName: pulumi.String(projectName),
// })
// if err != nil {
// return err
// }
// _default := sls.GetIndexsOutput(ctx, sls.GetIndexsOutputArgs{
// LogstoreName: defaultStore.LogstoreName,
// ProjectName: defaultProject.ProjectName,
// }, nil);
// ctx.Export("alicloudSlsIndexExampleId", _default.ApplyT(func(_default sls.GetIndexsResult) (*string, error) {
// return &default.Indexs[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetIndexs(ctx *pulumi.Context, args *GetIndexsArgs, opts ...pulumi.InvokeOption) (*GetIndexsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIndexsResult
	err := ctx.Invoke("alicloud:sls/getIndexs:getIndexs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIndexs.
type GetIndexsArgs struct {
	// A list of Index IDs. The value is formulated as `<project_name>:<logstore_name>`.
	Ids []string `pulumi:"ids"`
	// Logstore name
	LogstoreName string `pulumi:"logstoreName"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// Project name
	ProjectName string `pulumi:"projectName"`
}

// A collection of values returned by getIndexs.
type GetIndexsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Index IDs.
	Ids []string `pulumi:"ids"`
	// A list of Index Entries. Each element contains the following attributes:
	Indexs       []GetIndexsIndex `pulumi:"indexs"`
	LogstoreName string           `pulumi:"logstoreName"`
	OutputFile   *string          `pulumi:"outputFile"`
	ProjectName  string           `pulumi:"projectName"`
}

func GetIndexsOutput(ctx *pulumi.Context, args GetIndexsOutputArgs, opts ...pulumi.InvokeOption) GetIndexsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIndexsResultOutput, error) {
			args := v.(GetIndexsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:sls/getIndexs:getIndexs", args, GetIndexsResultOutput{}, options).(GetIndexsResultOutput), nil
		}).(GetIndexsResultOutput)
}

// A collection of arguments for invoking getIndexs.
type GetIndexsOutputArgs struct {
	// A list of Index IDs. The value is formulated as `<project_name>:<logstore_name>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Logstore name
	LogstoreName pulumi.StringInput `pulumi:"logstoreName"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Project name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
}

func (GetIndexsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexsArgs)(nil)).Elem()
}

// A collection of values returned by getIndexs.
type GetIndexsResultOutput struct{ *pulumi.OutputState }

func (GetIndexsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexsResult)(nil)).Elem()
}

func (o GetIndexsResultOutput) ToGetIndexsResultOutput() GetIndexsResultOutput {
	return o
}

func (o GetIndexsResultOutput) ToGetIndexsResultOutputWithContext(ctx context.Context) GetIndexsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIndexsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndexsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Index IDs.
func (o GetIndexsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIndexsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list of Index Entries. Each element contains the following attributes:
func (o GetIndexsResultOutput) Indexs() GetIndexsIndexArrayOutput {
	return o.ApplyT(func(v GetIndexsResult) []GetIndexsIndex { return v.Indexs }).(GetIndexsIndexArrayOutput)
}

func (o GetIndexsResultOutput) LogstoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndexsResult) string { return v.LogstoreName }).(pulumi.StringOutput)
}

func (o GetIndexsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIndexsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetIndexsResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndexsResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIndexsResultOutput{})
}
