// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Sls Alert available to the user.[What is Alert](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateAlert)
//
// > **NOTE:** Available since v1.250.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// alertName := "openapi-terraform-alert";
// if param := cfg.Get("alertName"); param != ""{
// alertName = param
// }
// projectName := "terraform-alert-example";
// if param := cfg.Get("projectName"); param != ""{
// projectName = param
// }
// defaultINsMgl, err := log.NewProject(ctx, "defaultINsMgl", &log.ProjectArgs{
// Description: pulumi.String("terraform-alert-example"),
// Name: pulumi.String("terraform-alert-example"),
// })
// if err != nil {
// return err
// }
// defaultAlert, err := sls.NewAlert(ctx, "default", &sls.AlertArgs{
// Configuration: &sls.AlertConfigurationArgs{
// Type: pulumi.String("tpl"),
// Version: pulumi.String("2"),
// QueryLists: sls.AlertConfigurationQueryListArray{
// &sls.AlertConfigurationQueryListArgs{
// Query: pulumi.String("* | select *"),
// TimeSpanType: pulumi.String("Relative"),
// Start: pulumi.String("-15m"),
// End: pulumi.String("now"),
// StoreType: pulumi.String("log"),
// Project: defaultINsMgl.ID(),
// Store: pulumi.String("alert"),
// Region: pulumi.String("cn-beijing"),
// PowerSqlMode: pulumi.String("disable"),
// ChartTitle: pulumi.String("wkb-chart"),
// DashboardId: pulumi.String("wkb-dashboard"),
// Ui: pulumi.String("{}"),
// RoleArn: pulumi.String("acs:ram::1654218965343050:role/aliyunslsalertmonitorrole"),
// },
// &sls.AlertConfigurationQueryListArgs{
// StoreType: pulumi.String("meta"),
// Store: pulumi.String("user.rds_ip_whitelist"),
// },
// &sls.AlertConfigurationQueryListArgs{
// StoreType: pulumi.String("meta"),
// Store: pulumi.String("myexample1"),
// },
// },
// GroupConfiguration: &sls.AlertConfigurationGroupConfigurationArgs{
// Type: pulumi.String("no_group"),
// Fields: pulumi.StringArray{
// pulumi.String("a"),
// pulumi.String("b"),
// },
// },
// JoinConfigurations: sls.AlertConfigurationJoinConfigurationArray{
// &sls.AlertConfigurationJoinConfigurationArgs{
// Type: pulumi.String("no_join"),
// Condition: pulumi.String("aa"),
// },
// &sls.AlertConfigurationJoinConfigurationArgs{
// Type: pulumi.String("cross_join"),
// Condition: pulumi.String("qqq"),
// },
// &sls.AlertConfigurationJoinConfigurationArgs{
// Type: pulumi.String("inner_join"),
// Condition: pulumi.String("fefefe"),
// },
// },
// SeverityConfigurations: sls.AlertConfigurationSeverityConfigurationArray{
// &sls.AlertConfigurationSeverityConfigurationArgs{
// Severity: pulumi.Int(6),
// EvalCondition: &sls.AlertConfigurationSeverityConfigurationEvalConditionArgs{
// Condition: pulumi.String("__count__ > 1"),
// CountCondition: pulumi.String("cnt > 0"),
// },
// },
// },
// Labels: sls.AlertConfigurationLabelArray{
// &sls.AlertConfigurationLabelArgs{
// Key: pulumi.String("a"),
// Value: pulumi.String("b"),
// },
// },
// Annotations: sls.AlertConfigurationAnnotationArray{
// &sls.AlertConfigurationAnnotationArgs{
// Key: pulumi.String("x"),
// Value: pulumi.String("y"),
// },
// },
// AutoAnnotation: pulumi.Bool(true),
// SendResolved: pulumi.Bool(false),
// Threshold: pulumi.Int(1),
// NoDataFire: pulumi.Bool(false),
// SinkEventStore: &sls.AlertConfigurationSinkEventStoreArgs{
// Enabled: pulumi.Bool(true),
// Endpoint: pulumi.String("cn-shanghai-intranet.log.aliyuncs.com"),
// Project: pulumi.String("wkb-wangren"),
// EventStore: pulumi.String("alert"),
// RoleArn: pulumi.String("acs:ram::1654218965343050:role/aliyunlogetlrole"),
// },
// SinkCms: &sls.AlertConfigurationSinkCmsArgs{
// Enabled: pulumi.Bool(false),
// },
// SinkAlerthub: &sls.AlertConfigurationSinkAlerthubArgs{
// Enabled: pulumi.Bool(false),
// },
// TemplateConfiguration: &sls.AlertConfigurationTemplateConfigurationArgs{
// TemplateId: pulumi.String("sls.app.ack.autoscaler.cluster_unhealthy"),
// Type: pulumi.String("sys"),
// Version: pulumi.String("1.0"),
// Lang: pulumi.String("cn"),
// },
// ConditionConfiguration: &sls.AlertConfigurationConditionConfigurationArgs{
// Condition: pulumi.String("cnt > 3"),
// CountCondition: pulumi.String("__count__ < 3"),
// },
// PolicyConfiguration: &sls.AlertConfigurationPolicyConfigurationArgs{
// AlertPolicyId: pulumi.String("sls.builtin.dynamic"),
// ActionPolicyId: pulumi.String("wkb-action"),
// RepeatInterval: pulumi.String("1m"),
// },
// Dashboard: pulumi.String("internal-alert"),
// MuteUntil: pulumi.Int(0),
// NoDataSeverity: pulumi.Int(6),
// Tags: pulumi.StringArray{
// pulumi.String("wkb"),
// pulumi.String("wangren"),
// pulumi.String("sls"),
// },
// },
// AlertName: pulumi.String(alertName),
// ProjectName: defaultINsMgl.ID(),
// Schedule: &sls.AlertScheduleArgs{
// Type: pulumi.String("Cron"),
// RunImmdiately: pulumi.Bool(true),
// TimeZone: pulumi.String("+0800"),
// Delay: pulumi.Int(10),
// CronExpression: pulumi.String("0/5 * * * *"),
// },
// DisplayName: pulumi.String("openapi-terraform"),
// Description: pulumi.String("create alert"),
// })
// if err != nil {
// return err
// }
// _default := sls.GetAlertsOutput(ctx, sls.GetAlertsOutputArgs{
// Ids: pulumi.StringArray{
// defaultAlert.ID(),
// },
// NameRegex: defaultAlert.AlertName,
// ProjectName: defaultINsMgl.ID(),
// }, nil);
// ctx.Export("alicloudSlsAlertExampleId", _default.ApplyT(func(_default sls.GetAlertsResult) (*string, error) {
// return &default.Alerts[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetAlerts(ctx *pulumi.Context, args *GetAlertsArgs, opts ...pulumi.InvokeOption) (*GetAlertsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlertsResult
	err := ctx.Invoke("alicloud:sls/getAlerts:getAlerts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlerts.
type GetAlertsArgs struct {
	// A list of Alert IDs. The value is formulated as `<project_name>:<alert_name>`.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// Project Name
	ProjectName string `pulumi:"projectName"`
}

// A collection of values returned by getAlerts.
type GetAlertsResult struct {
	// A list of Alert Entries. Each element contains the following attributes:
	Alerts []GetAlertsAlert `pulumi:"alerts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Alert IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of name of Alerts.
	Names       []string `pulumi:"names"`
	OutputFile  *string  `pulumi:"outputFile"`
	ProjectName string   `pulumi:"projectName"`
}

func GetAlertsOutput(ctx *pulumi.Context, args GetAlertsOutputArgs, opts ...pulumi.InvokeOption) GetAlertsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAlertsResultOutput, error) {
			args := v.(GetAlertsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:sls/getAlerts:getAlerts", args, GetAlertsResultOutput{}, options).(GetAlertsResultOutput), nil
		}).(GetAlertsResultOutput)
}

// A collection of arguments for invoking getAlerts.
type GetAlertsOutputArgs struct {
	// A list of Alert IDs. The value is formulated as `<project_name>:<alert_name>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Project Name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
}

func (GetAlertsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsArgs)(nil)).Elem()
}

// A collection of values returned by getAlerts.
type GetAlertsResultOutput struct{ *pulumi.OutputState }

func (GetAlertsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsResult)(nil)).Elem()
}

func (o GetAlertsResultOutput) ToGetAlertsResultOutput() GetAlertsResultOutput {
	return o
}

func (o GetAlertsResultOutput) ToGetAlertsResultOutputWithContext(ctx context.Context) GetAlertsResultOutput {
	return o
}

// A list of Alert Entries. Each element contains the following attributes:
func (o GetAlertsResultOutput) Alerts() GetAlertsAlertArrayOutput {
	return o.ApplyT(func(v GetAlertsResult) []GetAlertsAlert { return v.Alerts }).(GetAlertsAlertArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Alert IDs.
func (o GetAlertsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetAlertsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Alerts.
func (o GetAlertsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetAlertsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAlertsResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertsResultOutput{})
}
