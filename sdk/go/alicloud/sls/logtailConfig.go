// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Log Service (SLS) Logtail Config resource.
//
// For information about Log Service (SLS) Logtail Config and how to use it, see [What is Logtail Config](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateConfig).
//
// > **NOTE:** Available since v1.259.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Max: 99999,
//				Min: 10000,
//			})
//			if err != nil {
//				return err
//			}
//			cfg := config.New(ctx, "")
//			name := "tfaccsls62147"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			projectName := "project-for-logtail-terraform"
//			if param := cfg.Get("projectName"); param != "" {
//				projectName = param
//			}
//			defaultuA28zS, err := log.NewProject(ctx, "defaultuA28zS", &log.ProjectArgs{
//				ProjectName: pulumi.String(projectName),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"adjustTimezone":  false,
//				"delayAlarmBytes": 0,
//				"delaySkipBytes":  0,
//				"discardNonUtf8":  false,
//				"discardUnmatch":  true,
//				"dockerFile":      false,
//				"enableRawLog":    false,
//				"enableTag":       false,
//				"fileEncoding":    "utf8",
//				"filePattern":     "access*.log",
//				"filterKey": []string{
//					"key1",
//				},
//				"filterRegex": []string{
//					"regex1",
//				},
//				"key": []string{
//					"key1",
//					"key2",
//				},
//				"localStorage":   true,
//				"logBeginRegex":  ".*",
//				"logPath":        "/var/log/httpd",
//				"logTimezone":    "",
//				"logType":        "common_reg_log",
//				"maxDepth":       1000,
//				"maxSendRate":    -1,
//				"mergeType":      "topic",
//				"preserve":       true,
//				"preserveDepth":  0,
//				"priority":       0,
//				"regex":          "(w+)(s+)",
//				"sendRateExpire": 0,
//				"sensitive_keys": []interface{}{},
//				"tailExisted":    false,
//				"timeFormat":     "%Y/%m/%d %H:%M:%S",
//				"timeKey":        "time",
//				"topicFormat":    "none",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = sls.NewLogtailConfig(ctx, "default", &sls.LogtailConfigArgs{
//				ProjectName: defaultuA28zS.ProjectName,
//				OutputDetail: &sls.LogtailConfigOutputDetailArgs{
//					Endpoint:     pulumi.String("cn-hangzhou-intranet.log.aliyuncs.com"),
//					Region:       pulumi.String("cn-hangzhou"),
//					LogstoreName: pulumi.String("example"),
//				},
//				OutputType:        pulumi.String("LogService"),
//				InputDetail:       pulumi.String(json0),
//				LogtailConfigName: pulumi.String("tfaccsls62147"),
//				InputType:         pulumi.String("file"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Log Service (SLS) Logtail Config can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:sls/logtailConfig:LogtailConfig example <project_name>:<logtail_config_name>
// ```
type LogtailConfig struct {
	pulumi.CustomResourceState

	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The detailed configuration entered by logtail.
	InputDetail pulumi.StringPtrOutput `pulumi:"inputDetail"`
	// Method of log entry
	InputType pulumi.StringPtrOutput `pulumi:"inputType"`
	// Last modification time, unix timestamp
	LastModifyTime pulumi.IntOutput `pulumi:"lastModifyTime"`
	// Sample log
	LogSample pulumi.StringPtrOutput `pulumi:"logSample"`
	// The name of the resource
	LogtailConfigName pulumi.StringOutput `pulumi:"logtailConfigName"`
	// Detailed configuration of logtail output See `outputDetail` below.
	OutputDetail LogtailConfigOutputDetailPtrOutput `pulumi:"outputDetail"`
	// Log output mode. You can only upload data to log service.
	OutputType pulumi.StringPtrOutput `pulumi:"outputType"`
	// Project name
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
}

// NewLogtailConfig registers a new resource with the given unique name, arguments, and options.
func NewLogtailConfig(ctx *pulumi.Context,
	name string, args *LogtailConfigArgs, opts ...pulumi.ResourceOption) (*LogtailConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogtailConfig
	err := ctx.RegisterResource("alicloud:sls/logtailConfig:LogtailConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogtailConfig gets an existing LogtailConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogtailConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogtailConfigState, opts ...pulumi.ResourceOption) (*LogtailConfig, error) {
	var resource LogtailConfig
	err := ctx.ReadResource("alicloud:sls/logtailConfig:LogtailConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogtailConfig resources.
type logtailConfigState struct {
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The detailed configuration entered by logtail.
	InputDetail *string `pulumi:"inputDetail"`
	// Method of log entry
	InputType *string `pulumi:"inputType"`
	// Last modification time, unix timestamp
	LastModifyTime *int `pulumi:"lastModifyTime"`
	// Sample log
	LogSample *string `pulumi:"logSample"`
	// The name of the resource
	LogtailConfigName *string `pulumi:"logtailConfigName"`
	// Detailed configuration of logtail output See `outputDetail` below.
	OutputDetail *LogtailConfigOutputDetail `pulumi:"outputDetail"`
	// Log output mode. You can only upload data to log service.
	OutputType *string `pulumi:"outputType"`
	// Project name
	ProjectName *string `pulumi:"projectName"`
}

type LogtailConfigState struct {
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The detailed configuration entered by logtail.
	InputDetail pulumi.StringPtrInput
	// Method of log entry
	InputType pulumi.StringPtrInput
	// Last modification time, unix timestamp
	LastModifyTime pulumi.IntPtrInput
	// Sample log
	LogSample pulumi.StringPtrInput
	// The name of the resource
	LogtailConfigName pulumi.StringPtrInput
	// Detailed configuration of logtail output See `outputDetail` below.
	OutputDetail LogtailConfigOutputDetailPtrInput
	// Log output mode. You can only upload data to log service.
	OutputType pulumi.StringPtrInput
	// Project name
	ProjectName pulumi.StringPtrInput
}

func (LogtailConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*logtailConfigState)(nil)).Elem()
}

type logtailConfigArgs struct {
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The detailed configuration entered by logtail.
	InputDetail *string `pulumi:"inputDetail"`
	// Method of log entry
	InputType *string `pulumi:"inputType"`
	// Last modification time, unix timestamp
	LastModifyTime *int `pulumi:"lastModifyTime"`
	// Sample log
	LogSample *string `pulumi:"logSample"`
	// The name of the resource
	LogtailConfigName *string `pulumi:"logtailConfigName"`
	// Detailed configuration of logtail output See `outputDetail` below.
	OutputDetail *LogtailConfigOutputDetail `pulumi:"outputDetail"`
	// Log output mode. You can only upload data to log service.
	OutputType *string `pulumi:"outputType"`
	// Project name
	ProjectName string `pulumi:"projectName"`
}

// The set of arguments for constructing a LogtailConfig resource.
type LogtailConfigArgs struct {
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The detailed configuration entered by logtail.
	InputDetail pulumi.StringPtrInput
	// Method of log entry
	InputType pulumi.StringPtrInput
	// Last modification time, unix timestamp
	LastModifyTime pulumi.IntPtrInput
	// Sample log
	LogSample pulumi.StringPtrInput
	// The name of the resource
	LogtailConfigName pulumi.StringPtrInput
	// Detailed configuration of logtail output See `outputDetail` below.
	OutputDetail LogtailConfigOutputDetailPtrInput
	// Log output mode. You can only upload data to log service.
	OutputType pulumi.StringPtrInput
	// Project name
	ProjectName pulumi.StringInput
}

func (LogtailConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logtailConfigArgs)(nil)).Elem()
}

type LogtailConfigInput interface {
	pulumi.Input

	ToLogtailConfigOutput() LogtailConfigOutput
	ToLogtailConfigOutputWithContext(ctx context.Context) LogtailConfigOutput
}

func (*LogtailConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**LogtailConfig)(nil)).Elem()
}

func (i *LogtailConfig) ToLogtailConfigOutput() LogtailConfigOutput {
	return i.ToLogtailConfigOutputWithContext(context.Background())
}

func (i *LogtailConfig) ToLogtailConfigOutputWithContext(ctx context.Context) LogtailConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtailConfigOutput)
}

// LogtailConfigArrayInput is an input type that accepts LogtailConfigArray and LogtailConfigArrayOutput values.
// You can construct a concrete instance of `LogtailConfigArrayInput` via:
//
//	LogtailConfigArray{ LogtailConfigArgs{...} }
type LogtailConfigArrayInput interface {
	pulumi.Input

	ToLogtailConfigArrayOutput() LogtailConfigArrayOutput
	ToLogtailConfigArrayOutputWithContext(context.Context) LogtailConfigArrayOutput
}

type LogtailConfigArray []LogtailConfigInput

func (LogtailConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogtailConfig)(nil)).Elem()
}

func (i LogtailConfigArray) ToLogtailConfigArrayOutput() LogtailConfigArrayOutput {
	return i.ToLogtailConfigArrayOutputWithContext(context.Background())
}

func (i LogtailConfigArray) ToLogtailConfigArrayOutputWithContext(ctx context.Context) LogtailConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtailConfigArrayOutput)
}

// LogtailConfigMapInput is an input type that accepts LogtailConfigMap and LogtailConfigMapOutput values.
// You can construct a concrete instance of `LogtailConfigMapInput` via:
//
//	LogtailConfigMap{ "key": LogtailConfigArgs{...} }
type LogtailConfigMapInput interface {
	pulumi.Input

	ToLogtailConfigMapOutput() LogtailConfigMapOutput
	ToLogtailConfigMapOutputWithContext(context.Context) LogtailConfigMapOutput
}

type LogtailConfigMap map[string]LogtailConfigInput

func (LogtailConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogtailConfig)(nil)).Elem()
}

func (i LogtailConfigMap) ToLogtailConfigMapOutput() LogtailConfigMapOutput {
	return i.ToLogtailConfigMapOutputWithContext(context.Background())
}

func (i LogtailConfigMap) ToLogtailConfigMapOutputWithContext(ctx context.Context) LogtailConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogtailConfigMapOutput)
}

type LogtailConfigOutput struct{ *pulumi.OutputState }

func (LogtailConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogtailConfig)(nil)).Elem()
}

func (o LogtailConfigOutput) ToLogtailConfigOutput() LogtailConfigOutput {
	return o
}

func (o LogtailConfigOutput) ToLogtailConfigOutputWithContext(ctx context.Context) LogtailConfigOutput {
	return o
}

// The creation time of the resource
func (o LogtailConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The detailed configuration entered by logtail.
func (o LogtailConfigOutput) InputDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringPtrOutput { return v.InputDetail }).(pulumi.StringPtrOutput)
}

// Method of log entry
func (o LogtailConfigOutput) InputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringPtrOutput { return v.InputType }).(pulumi.StringPtrOutput)
}

// Last modification time, unix timestamp
func (o LogtailConfigOutput) LastModifyTime() pulumi.IntOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.IntOutput { return v.LastModifyTime }).(pulumi.IntOutput)
}

// Sample log
func (o LogtailConfigOutput) LogSample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringPtrOutput { return v.LogSample }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LogtailConfigOutput) LogtailConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringOutput { return v.LogtailConfigName }).(pulumi.StringOutput)
}

// Detailed configuration of logtail output See `outputDetail` below.
func (o LogtailConfigOutput) OutputDetail() LogtailConfigOutputDetailPtrOutput {
	return o.ApplyT(func(v *LogtailConfig) LogtailConfigOutputDetailPtrOutput { return v.OutputDetail }).(LogtailConfigOutputDetailPtrOutput)
}

// Log output mode. You can only upload data to log service.
func (o LogtailConfigOutput) OutputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringPtrOutput { return v.OutputType }).(pulumi.StringPtrOutput)
}

// Project name
func (o LogtailConfigOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogtailConfig) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

type LogtailConfigArrayOutput struct{ *pulumi.OutputState }

func (LogtailConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogtailConfig)(nil)).Elem()
}

func (o LogtailConfigArrayOutput) ToLogtailConfigArrayOutput() LogtailConfigArrayOutput {
	return o
}

func (o LogtailConfigArrayOutput) ToLogtailConfigArrayOutputWithContext(ctx context.Context) LogtailConfigArrayOutput {
	return o
}

func (o LogtailConfigArrayOutput) Index(i pulumi.IntInput) LogtailConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogtailConfig {
		return vs[0].([]*LogtailConfig)[vs[1].(int)]
	}).(LogtailConfigOutput)
}

type LogtailConfigMapOutput struct{ *pulumi.OutputState }

func (LogtailConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogtailConfig)(nil)).Elem()
}

func (o LogtailConfigMapOutput) ToLogtailConfigMapOutput() LogtailConfigMapOutput {
	return o
}

func (o LogtailConfigMapOutput) ToLogtailConfigMapOutputWithContext(ctx context.Context) LogtailConfigMapOutput {
	return o
}

func (o LogtailConfigMapOutput) MapIndex(k pulumi.StringInput) LogtailConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogtailConfig {
		return vs[0].(map[string]*LogtailConfig)[vs[1].(string)]
	}).(LogtailConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogtailConfigInput)(nil)).Elem(), &LogtailConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogtailConfigArrayInput)(nil)).Elem(), LogtailConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogtailConfigMapInput)(nil)).Elem(), LogtailConfigMap{})
	pulumi.RegisterOutputType(LogtailConfigOutput{})
	pulumi.RegisterOutputType(LogtailConfigArrayOutput{})
	pulumi.RegisterOutputType(LogtailConfigMapOutput{})
}
