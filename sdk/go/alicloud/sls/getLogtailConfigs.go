// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Sls Logtail Config available to the user.[What is Logtail Config](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateConfig)
//
// > **NOTE:** Available since v1.259.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
// Max: 99999,
// Min: 10000,
// })
// if err != nil {
// return err
// }
// cfg := config.New(ctx, "")
// name := "tfaccsls62147";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// projectName := "project-for-logtail-terraform";
// if param := cfg.Get("projectName"); param != ""{
// projectName = param
// }
// defaultuA28zS, err := log.NewProject(ctx, "defaultuA28zS", &log.ProjectArgs{
// ProjectName: pulumi.String(projectName),
// })
// if err != nil {
// return err
// }
// tmpJSON0, err := json.Marshal(map[string]interface{}{
// "adjustTimezone": false,
// "delayAlarmBytes": 0,
// "delaySkipBytes": 0,
// "discardNonUtf8": false,
// "discardUnmatch": true,
// "dockerFile": false,
// "enableRawLog": false,
// "enableTag": false,
// "fileEncoding": "utf8",
// "filePattern": "access*.log",
// "filterKey": []string{
// "key1",
// },
// "filterRegex": []string{
// "regex1",
// },
// "key": []string{
// "key1",
// "key2",
// },
// "localStorage": true,
// "logBeginRegex": ".*",
// "logPath": "/var/log/httpd",
// "logTimezone": "",
// "logType": "common_reg_log",
// "maxDepth": 1000,
// "maxSendRate": -1,
// "mergeType": "topic",
// "preserve": true,
// "preserveDepth": 0,
// "priority": 0,
// "regex": "(w+)(s+)",
// "sendRateExpire": 0,
// "sensitive_keys": []interface{}{
// },
// "tailExisted": false,
// "timeFormat": "%Y/%m/%d %H:%M:%S",
// "timeKey": "time",
// "topicFormat": "none",
// })
// if err != nil {
// return err
// }
// json0 := string(tmpJSON0)
// defaultLogtailConfig, err := sls.NewLogtailConfig(ctx, "default", &sls.LogtailConfigArgs{
// ProjectName: defaultuA28zS.ProjectName,
// OutputDetail: &sls.LogtailConfigOutputDetailArgs{
// Endpoint: pulumi.String("cn-hangzhou-intranet.log.aliyuncs.com"),
// Region: pulumi.String("cn-hangzhou"),
// LogstoreName: pulumi.String("example"),
// },
// OutputType: pulumi.String("LogService"),
// InputDetail: pulumi.String(json0),
// LogtailConfigName: pulumi.String("tfaccsls62147"),
// InputType: pulumi.String("file"),
// })
// if err != nil {
// return err
// }
// _default := defaultLogtailConfig.LogtailConfigName.ApplyT(func(logtailConfigName string) (sls.GetLogtailConfigsResult, error) {
// return sls.GetLogtailConfigsResult(interface{}(sls.GetLogtailConfigsOutput(ctx, sls.GetLogtailConfigsOutputArgs{
// LogtailConfigName: logtailConfigName,
// LogstoreName: "example",
// ProjectName: projectName,
// Offset: 0,
// Size: 100,
// }, nil))), nil
// }).(sls.GetLogtailConfigsResultOutput)
// ctx.Export("alicloudSlsLogtailConfigExampleId", _default.ApplyT(func(_default sls.GetLogtailConfigsResult) (*string, error) {
// return &default.Configs[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetLogtailConfigs(ctx *pulumi.Context, args *GetLogtailConfigsArgs, opts ...pulumi.InvokeOption) (*GetLogtailConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogtailConfigsResult
	err := ctx.Invoke("alicloud:sls/getLogtailConfigs:getLogtailConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogtailConfigs.
type GetLogtailConfigsArgs struct {
	// A list of Logtail Config IDs. The value is formulated as `<project_name>:<logtail_config_name>`.
	Ids []string `pulumi:"ids"`
	// Logstore name.
	LogstoreName string `pulumi:"logstoreName"`
	// The name of the resource
	LogtailConfigName *string `pulumi:"logtailConfigName"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// Query start row. The default value is 0.
	Offset int `pulumi:"offset"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// Project name
	ProjectName string `pulumi:"projectName"`
	// The number of rows per page set for a pagination query. The maximum value is 500.
	Size int `pulumi:"size"`
}

// A collection of values returned by getLogtailConfigs.
type GetLogtailConfigsResult struct {
	// A list of Logtail Config Entries. Each element contains the following attributes:
	Configs []GetLogtailConfigsConfig `pulumi:"configs"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Logtail Config IDs.
	Ids          []string `pulumi:"ids"`
	LogstoreName string   `pulumi:"logstoreName"`
	// The name of the resource
	LogtailConfigName *string `pulumi:"logtailConfigName"`
	NameRegex         *string `pulumi:"nameRegex"`
	// A list of name of Logtail Configs.
	Names       []string `pulumi:"names"`
	Offset      int      `pulumi:"offset"`
	OutputFile  *string  `pulumi:"outputFile"`
	ProjectName string   `pulumi:"projectName"`
	Size        int      `pulumi:"size"`
}

func GetLogtailConfigsOutput(ctx *pulumi.Context, args GetLogtailConfigsOutputArgs, opts ...pulumi.InvokeOption) GetLogtailConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogtailConfigsResultOutput, error) {
			args := v.(GetLogtailConfigsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:sls/getLogtailConfigs:getLogtailConfigs", args, GetLogtailConfigsResultOutput{}, options).(GetLogtailConfigsResultOutput), nil
		}).(GetLogtailConfigsResultOutput)
}

// A collection of arguments for invoking getLogtailConfigs.
type GetLogtailConfigsOutputArgs struct {
	// A list of Logtail Config IDs. The value is formulated as `<project_name>:<logtail_config_name>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Logstore name.
	LogstoreName pulumi.StringInput `pulumi:"logstoreName"`
	// The name of the resource
	LogtailConfigName pulumi.StringPtrInput `pulumi:"logtailConfigName"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// Query start row. The default value is 0.
	Offset pulumi.IntInput `pulumi:"offset"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Project name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The number of rows per page set for a pagination query. The maximum value is 500.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetLogtailConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogtailConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getLogtailConfigs.
type GetLogtailConfigsResultOutput struct{ *pulumi.OutputState }

func (GetLogtailConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogtailConfigsResult)(nil)).Elem()
}

func (o GetLogtailConfigsResultOutput) ToGetLogtailConfigsResultOutput() GetLogtailConfigsResultOutput {
	return o
}

func (o GetLogtailConfigsResultOutput) ToGetLogtailConfigsResultOutputWithContext(ctx context.Context) GetLogtailConfigsResultOutput {
	return o
}

// A list of Logtail Config Entries. Each element contains the following attributes:
func (o GetLogtailConfigsResultOutput) Configs() GetLogtailConfigsConfigArrayOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) []GetLogtailConfigsConfig { return v.Configs }).(GetLogtailConfigsConfigArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogtailConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Logtail Config IDs.
func (o GetLogtailConfigsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetLogtailConfigsResultOutput) LogstoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) string { return v.LogstoreName }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetLogtailConfigsResultOutput) LogtailConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) *string { return v.LogtailConfigName }).(pulumi.StringPtrOutput)
}

func (o GetLogtailConfigsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Logtail Configs.
func (o GetLogtailConfigsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetLogtailConfigsResultOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) int { return v.Offset }).(pulumi.IntOutput)
}

func (o GetLogtailConfigsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetLogtailConfigsResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

func (o GetLogtailConfigsResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogtailConfigsResult) int { return v.Size }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogtailConfigsResultOutput{})
}
