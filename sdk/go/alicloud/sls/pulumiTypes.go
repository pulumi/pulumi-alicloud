// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AlertConfiguration struct {
	// Template Annotations.
	Annotations []AlertConfigurationAnnotation `pulumi:"annotations"`
	// Whether to turn on automatic labeling. true (default): The automatic annotation function is enabled, and the system automatically adds information such as__county__to the alarm. For more information, see Automatic Labeling. false: Turn off the automatic annotation function.
	AutoAnnotation *bool `pulumi:"autoAnnotation"`
	// Alarm trigger condition. See `conditionConfiguration` below.
	ConditionConfiguration *AlertConfigurationConditionConfiguration `pulumi:"conditionConfiguration"`
	// The instrument cluster associated with the alarm. It is recommended to set to internal-alert-analysis.
	Dashboard *string `pulumi:"dashboard"`
	// Group evaluation configuration. See `groupConfiguration` below.
	GroupConfiguration *AlertConfigurationGroupConfiguration `pulumi:"groupConfiguration"`
	// Set operation configuration. See `joinConfigurations` below.
	JoinConfigurations []AlertConfigurationJoinConfiguration `pulumi:"joinConfigurations"`
	// Label. See `labels` below.
	Labels []AlertConfigurationLabel `pulumi:"labels"`
	// Second-level timestamp representing the temporary shutdown deadline.
	MuteUntil *int `pulumi:"muteUntil"`
	// Whether no data triggers an alarm. true: If the number of times the query and analysis results (if there are multiple results, the result after the collection operation) is no data exceeds the continuous trigger threshold, an alarm is generated. false (default): Turn off the no data alarm function.
	NoDataFire *bool `pulumi:"noDataFire"`
	// Alarm severity when no data triggers an alarm.
	NoDataSeverity *int `pulumi:"noDataSeverity"`
	// Alert policy configuration. See `policyConfiguration` below.
	PolicyConfiguration *AlertConfigurationPolicyConfiguration `pulumi:"policyConfiguration"`
	// Query the statistical list. See `queryList` below.
	QueryLists []AlertConfigurationQueryList `pulumi:"queryLists"`
	// Whether to send a recovery notification. true: A recovery alarm is triggered when the alarm is restored. false (default): Turn off the alarm recovery notification function.
	SendResolved *bool `pulumi:"sendResolved"`
	// Trigger condition, set at least one trigger condition. See `severityConfigurations` below.
	SeverityConfigurations []AlertConfigurationSeverityConfiguration `pulumi:"severityConfigurations"`
	// Configuration of Alerts Sent to Alerthub. See `sinkAlerthub` below.
	SinkAlerthub *AlertConfigurationSinkAlerthub `pulumi:"sinkAlerthub"`
	// Configure alerts sent to CloudMonitor. See `sinkCms` below.
	SinkCms *AlertConfigurationSinkCms `pulumi:"sinkCms"`
	// Configuration of sending alarms to EventStore. See `sinkEventStore` below.
	SinkEventStore *AlertConfigurationSinkEventStore `pulumi:"sinkEventStore"`
	// Customize the category of alarm monitoring rules.
	Tags []string `pulumi:"tags"`
	// Alarm rule template configuration. See `templateConfiguration` below.
	TemplateConfiguration *AlertConfigurationTemplateConfiguration `pulumi:"templateConfiguration"`
	// Set the continuous trigger threshold. When the cumulative number of triggers reaches this value, an alarm is generated. The statistics are not counted when the trigger condition is not met.
	Threshold *int `pulumi:"threshold"`
	// Template Type.
	Type *string `pulumi:"type"`
	// Template Version.
	Version *string `pulumi:"version"`
}

// AlertConfigurationInput is an input type that accepts AlertConfigurationArgs and AlertConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationInput` via:
//
//	AlertConfigurationArgs{...}
type AlertConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationOutput() AlertConfigurationOutput
	ToAlertConfigurationOutputWithContext(context.Context) AlertConfigurationOutput
}

type AlertConfigurationArgs struct {
	// Template Annotations.
	Annotations AlertConfigurationAnnotationArrayInput `pulumi:"annotations"`
	// Whether to turn on automatic labeling. true (default): The automatic annotation function is enabled, and the system automatically adds information such as__county__to the alarm. For more information, see Automatic Labeling. false: Turn off the automatic annotation function.
	AutoAnnotation pulumi.BoolPtrInput `pulumi:"autoAnnotation"`
	// Alarm trigger condition. See `conditionConfiguration` below.
	ConditionConfiguration AlertConfigurationConditionConfigurationPtrInput `pulumi:"conditionConfiguration"`
	// The instrument cluster associated with the alarm. It is recommended to set to internal-alert-analysis.
	Dashboard pulumi.StringPtrInput `pulumi:"dashboard"`
	// Group evaluation configuration. See `groupConfiguration` below.
	GroupConfiguration AlertConfigurationGroupConfigurationPtrInput `pulumi:"groupConfiguration"`
	// Set operation configuration. See `joinConfigurations` below.
	JoinConfigurations AlertConfigurationJoinConfigurationArrayInput `pulumi:"joinConfigurations"`
	// Label. See `labels` below.
	Labels AlertConfigurationLabelArrayInput `pulumi:"labels"`
	// Second-level timestamp representing the temporary shutdown deadline.
	MuteUntil pulumi.IntPtrInput `pulumi:"muteUntil"`
	// Whether no data triggers an alarm. true: If the number of times the query and analysis results (if there are multiple results, the result after the collection operation) is no data exceeds the continuous trigger threshold, an alarm is generated. false (default): Turn off the no data alarm function.
	NoDataFire pulumi.BoolPtrInput `pulumi:"noDataFire"`
	// Alarm severity when no data triggers an alarm.
	NoDataSeverity pulumi.IntPtrInput `pulumi:"noDataSeverity"`
	// Alert policy configuration. See `policyConfiguration` below.
	PolicyConfiguration AlertConfigurationPolicyConfigurationPtrInput `pulumi:"policyConfiguration"`
	// Query the statistical list. See `queryList` below.
	QueryLists AlertConfigurationQueryListArrayInput `pulumi:"queryLists"`
	// Whether to send a recovery notification. true: A recovery alarm is triggered when the alarm is restored. false (default): Turn off the alarm recovery notification function.
	SendResolved pulumi.BoolPtrInput `pulumi:"sendResolved"`
	// Trigger condition, set at least one trigger condition. See `severityConfigurations` below.
	SeverityConfigurations AlertConfigurationSeverityConfigurationArrayInput `pulumi:"severityConfigurations"`
	// Configuration of Alerts Sent to Alerthub. See `sinkAlerthub` below.
	SinkAlerthub AlertConfigurationSinkAlerthubPtrInput `pulumi:"sinkAlerthub"`
	// Configure alerts sent to CloudMonitor. See `sinkCms` below.
	SinkCms AlertConfigurationSinkCmsPtrInput `pulumi:"sinkCms"`
	// Configuration of sending alarms to EventStore. See `sinkEventStore` below.
	SinkEventStore AlertConfigurationSinkEventStorePtrInput `pulumi:"sinkEventStore"`
	// Customize the category of alarm monitoring rules.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Alarm rule template configuration. See `templateConfiguration` below.
	TemplateConfiguration AlertConfigurationTemplateConfigurationPtrInput `pulumi:"templateConfiguration"`
	// Set the continuous trigger threshold. When the cumulative number of triggers reaches this value, an alarm is generated. The statistics are not counted when the trigger condition is not met.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Template Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Template Version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AlertConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfiguration)(nil)).Elem()
}

func (i AlertConfigurationArgs) ToAlertConfigurationOutput() AlertConfigurationOutput {
	return i.ToAlertConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationArgs) ToAlertConfigurationOutputWithContext(ctx context.Context) AlertConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationOutput)
}

func (i AlertConfigurationArgs) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return i.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationArgs) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationOutput).ToAlertConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationPtrInput is an input type that accepts AlertConfigurationArgs, AlertConfigurationPtr and AlertConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationPtrInput` via:
//
//	        AlertConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput
	ToAlertConfigurationPtrOutputWithContext(context.Context) AlertConfigurationPtrOutput
}

type alertConfigurationPtrType AlertConfigurationArgs

func AlertConfigurationPtr(v *AlertConfigurationArgs) AlertConfigurationPtrInput {
	return (*alertConfigurationPtrType)(v)
}

func (*alertConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfiguration)(nil)).Elem()
}

func (i *alertConfigurationPtrType) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return i.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationPtrType) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationPtrOutput)
}

type AlertConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfiguration)(nil)).Elem()
}

func (o AlertConfigurationOutput) ToAlertConfigurationOutput() AlertConfigurationOutput {
	return o
}

func (o AlertConfigurationOutput) ToAlertConfigurationOutputWithContext(ctx context.Context) AlertConfigurationOutput {
	return o
}

func (o AlertConfigurationOutput) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return o.ToAlertConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationOutput) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfiguration) *AlertConfiguration {
		return &v
	}).(AlertConfigurationPtrOutput)
}

// Template Annotations.
func (o AlertConfigurationOutput) Annotations() AlertConfigurationAnnotationArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []AlertConfigurationAnnotation { return v.Annotations }).(AlertConfigurationAnnotationArrayOutput)
}

// Whether to turn on automatic labeling. true (default): The automatic annotation function is enabled, and the system automatically adds information such as__county__to the alarm. For more information, see Automatic Labeling. false: Turn off the automatic annotation function.
func (o AlertConfigurationOutput) AutoAnnotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *bool { return v.AutoAnnotation }).(pulumi.BoolPtrOutput)
}

// Alarm trigger condition. See `conditionConfiguration` below.
func (o AlertConfigurationOutput) ConditionConfiguration() AlertConfigurationConditionConfigurationPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationConditionConfiguration { return v.ConditionConfiguration }).(AlertConfigurationConditionConfigurationPtrOutput)
}

// The instrument cluster associated with the alarm. It is recommended to set to internal-alert-analysis.
func (o AlertConfigurationOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *string { return v.Dashboard }).(pulumi.StringPtrOutput)
}

// Group evaluation configuration. See `groupConfiguration` below.
func (o AlertConfigurationOutput) GroupConfiguration() AlertConfigurationGroupConfigurationPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationGroupConfiguration { return v.GroupConfiguration }).(AlertConfigurationGroupConfigurationPtrOutput)
}

// Set operation configuration. See `joinConfigurations` below.
func (o AlertConfigurationOutput) JoinConfigurations() AlertConfigurationJoinConfigurationArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []AlertConfigurationJoinConfiguration { return v.JoinConfigurations }).(AlertConfigurationJoinConfigurationArrayOutput)
}

// Label. See `labels` below.
func (o AlertConfigurationOutput) Labels() AlertConfigurationLabelArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []AlertConfigurationLabel { return v.Labels }).(AlertConfigurationLabelArrayOutput)
}

// Second-level timestamp representing the temporary shutdown deadline.
func (o AlertConfigurationOutput) MuteUntil() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *int { return v.MuteUntil }).(pulumi.IntPtrOutput)
}

// Whether no data triggers an alarm. true: If the number of times the query and analysis results (if there are multiple results, the result after the collection operation) is no data exceeds the continuous trigger threshold, an alarm is generated. false (default): Turn off the no data alarm function.
func (o AlertConfigurationOutput) NoDataFire() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *bool { return v.NoDataFire }).(pulumi.BoolPtrOutput)
}

// Alarm severity when no data triggers an alarm.
func (o AlertConfigurationOutput) NoDataSeverity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *int { return v.NoDataSeverity }).(pulumi.IntPtrOutput)
}

// Alert policy configuration. See `policyConfiguration` below.
func (o AlertConfigurationOutput) PolicyConfiguration() AlertConfigurationPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationPolicyConfiguration { return v.PolicyConfiguration }).(AlertConfigurationPolicyConfigurationPtrOutput)
}

// Query the statistical list. See `queryList` below.
func (o AlertConfigurationOutput) QueryLists() AlertConfigurationQueryListArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []AlertConfigurationQueryList { return v.QueryLists }).(AlertConfigurationQueryListArrayOutput)
}

// Whether to send a recovery notification. true: A recovery alarm is triggered when the alarm is restored. false (default): Turn off the alarm recovery notification function.
func (o AlertConfigurationOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *bool { return v.SendResolved }).(pulumi.BoolPtrOutput)
}

// Trigger condition, set at least one trigger condition. See `severityConfigurations` below.
func (o AlertConfigurationOutput) SeverityConfigurations() AlertConfigurationSeverityConfigurationArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []AlertConfigurationSeverityConfiguration { return v.SeverityConfigurations }).(AlertConfigurationSeverityConfigurationArrayOutput)
}

// Configuration of Alerts Sent to Alerthub. See `sinkAlerthub` below.
func (o AlertConfigurationOutput) SinkAlerthub() AlertConfigurationSinkAlerthubPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationSinkAlerthub { return v.SinkAlerthub }).(AlertConfigurationSinkAlerthubPtrOutput)
}

// Configure alerts sent to CloudMonitor. See `sinkCms` below.
func (o AlertConfigurationOutput) SinkCms() AlertConfigurationSinkCmsPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationSinkCms { return v.SinkCms }).(AlertConfigurationSinkCmsPtrOutput)
}

// Configuration of sending alarms to EventStore. See `sinkEventStore` below.
func (o AlertConfigurationOutput) SinkEventStore() AlertConfigurationSinkEventStorePtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationSinkEventStore { return v.SinkEventStore }).(AlertConfigurationSinkEventStorePtrOutput)
}

// Customize the category of alarm monitoring rules.
func (o AlertConfigurationOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfiguration) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Alarm rule template configuration. See `templateConfiguration` below.
func (o AlertConfigurationOutput) TemplateConfiguration() AlertConfigurationTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *AlertConfigurationTemplateConfiguration { return v.TemplateConfiguration }).(AlertConfigurationTemplateConfigurationPtrOutput)
}

// Set the continuous trigger threshold. When the cumulative number of triggers reaches this value, an alarm is generated. The statistics are not counted when the trigger condition is not met.
func (o AlertConfigurationOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Template Type.
func (o AlertConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Template Version.
func (o AlertConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AlertConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfiguration)(nil)).Elem()
}

func (o AlertConfigurationPtrOutput) ToAlertConfigurationPtrOutput() AlertConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPtrOutput) ToAlertConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPtrOutput) Elem() AlertConfigurationOutput {
	return o.ApplyT(func(v *AlertConfiguration) AlertConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfiguration
		return ret
	}).(AlertConfigurationOutput)
}

// Template Annotations.
func (o AlertConfigurationPtrOutput) Annotations() AlertConfigurationAnnotationArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []AlertConfigurationAnnotation {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(AlertConfigurationAnnotationArrayOutput)
}

// Whether to turn on automatic labeling. true (default): The automatic annotation function is enabled, and the system automatically adds information such as__county__to the alarm. For more information, see Automatic Labeling. false: Turn off the automatic annotation function.
func (o AlertConfigurationPtrOutput) AutoAnnotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoAnnotation
	}).(pulumi.BoolPtrOutput)
}

// Alarm trigger condition. See `conditionConfiguration` below.
func (o AlertConfigurationPtrOutput) ConditionConfiguration() AlertConfigurationConditionConfigurationPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationConditionConfiguration {
		if v == nil {
			return nil
		}
		return v.ConditionConfiguration
	}).(AlertConfigurationConditionConfigurationPtrOutput)
}

// The instrument cluster associated with the alarm. It is recommended to set to internal-alert-analysis.
func (o AlertConfigurationPtrOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Dashboard
	}).(pulumi.StringPtrOutput)
}

// Group evaluation configuration. See `groupConfiguration` below.
func (o AlertConfigurationPtrOutput) GroupConfiguration() AlertConfigurationGroupConfigurationPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationGroupConfiguration {
		if v == nil {
			return nil
		}
		return v.GroupConfiguration
	}).(AlertConfigurationGroupConfigurationPtrOutput)
}

// Set operation configuration. See `joinConfigurations` below.
func (o AlertConfigurationPtrOutput) JoinConfigurations() AlertConfigurationJoinConfigurationArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []AlertConfigurationJoinConfiguration {
		if v == nil {
			return nil
		}
		return v.JoinConfigurations
	}).(AlertConfigurationJoinConfigurationArrayOutput)
}

// Label. See `labels` below.
func (o AlertConfigurationPtrOutput) Labels() AlertConfigurationLabelArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []AlertConfigurationLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(AlertConfigurationLabelArrayOutput)
}

// Second-level timestamp representing the temporary shutdown deadline.
func (o AlertConfigurationPtrOutput) MuteUntil() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MuteUntil
	}).(pulumi.IntPtrOutput)
}

// Whether no data triggers an alarm. true: If the number of times the query and analysis results (if there are multiple results, the result after the collection operation) is no data exceeds the continuous trigger threshold, an alarm is generated. false (default): Turn off the no data alarm function.
func (o AlertConfigurationPtrOutput) NoDataFire() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoDataFire
	}).(pulumi.BoolPtrOutput)
}

// Alarm severity when no data triggers an alarm.
func (o AlertConfigurationPtrOutput) NoDataSeverity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.NoDataSeverity
	}).(pulumi.IntPtrOutput)
}

// Alert policy configuration. See `policyConfiguration` below.
func (o AlertConfigurationPtrOutput) PolicyConfiguration() AlertConfigurationPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationPolicyConfiguration {
		if v == nil {
			return nil
		}
		return v.PolicyConfiguration
	}).(AlertConfigurationPolicyConfigurationPtrOutput)
}

// Query the statistical list. See `queryList` below.
func (o AlertConfigurationPtrOutput) QueryLists() AlertConfigurationQueryListArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []AlertConfigurationQueryList {
		if v == nil {
			return nil
		}
		return v.QueryLists
	}).(AlertConfigurationQueryListArrayOutput)
}

// Whether to send a recovery notification. true: A recovery alarm is triggered when the alarm is restored. false (default): Turn off the alarm recovery notification function.
func (o AlertConfigurationPtrOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SendResolved
	}).(pulumi.BoolPtrOutput)
}

// Trigger condition, set at least one trigger condition. See `severityConfigurations` below.
func (o AlertConfigurationPtrOutput) SeverityConfigurations() AlertConfigurationSeverityConfigurationArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []AlertConfigurationSeverityConfiguration {
		if v == nil {
			return nil
		}
		return v.SeverityConfigurations
	}).(AlertConfigurationSeverityConfigurationArrayOutput)
}

// Configuration of Alerts Sent to Alerthub. See `sinkAlerthub` below.
func (o AlertConfigurationPtrOutput) SinkAlerthub() AlertConfigurationSinkAlerthubPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationSinkAlerthub {
		if v == nil {
			return nil
		}
		return v.SinkAlerthub
	}).(AlertConfigurationSinkAlerthubPtrOutput)
}

// Configure alerts sent to CloudMonitor. See `sinkCms` below.
func (o AlertConfigurationPtrOutput) SinkCms() AlertConfigurationSinkCmsPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationSinkCms {
		if v == nil {
			return nil
		}
		return v.SinkCms
	}).(AlertConfigurationSinkCmsPtrOutput)
}

// Configuration of sending alarms to EventStore. See `sinkEventStore` below.
func (o AlertConfigurationPtrOutput) SinkEventStore() AlertConfigurationSinkEventStorePtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationSinkEventStore {
		if v == nil {
			return nil
		}
		return v.SinkEventStore
	}).(AlertConfigurationSinkEventStorePtrOutput)
}

// Customize the category of alarm monitoring rules.
func (o AlertConfigurationPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Alarm rule template configuration. See `templateConfiguration` below.
func (o AlertConfigurationPtrOutput) TemplateConfiguration() AlertConfigurationTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *AlertConfigurationTemplateConfiguration {
		if v == nil {
			return nil
		}
		return v.TemplateConfiguration
	}).(AlertConfigurationTemplateConfigurationPtrOutput)
}

// Set the continuous trigger threshold. When the cumulative number of triggers reaches this value, an alarm is generated. The statistics are not counted when the trigger condition is not met.
func (o AlertConfigurationPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Template Type.
func (o AlertConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Template Version.
func (o AlertConfigurationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationAnnotation struct {
	// Field name.
	Key *string `pulumi:"key"`
	// Field value.
	Value *string `pulumi:"value"`
}

// AlertConfigurationAnnotationInput is an input type that accepts AlertConfigurationAnnotationArgs and AlertConfigurationAnnotationOutput values.
// You can construct a concrete instance of `AlertConfigurationAnnotationInput` via:
//
//	AlertConfigurationAnnotationArgs{...}
type AlertConfigurationAnnotationInput interface {
	pulumi.Input

	ToAlertConfigurationAnnotationOutput() AlertConfigurationAnnotationOutput
	ToAlertConfigurationAnnotationOutputWithContext(context.Context) AlertConfigurationAnnotationOutput
}

type AlertConfigurationAnnotationArgs struct {
	// Field name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Field value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationAnnotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationAnnotation)(nil)).Elem()
}

func (i AlertConfigurationAnnotationArgs) ToAlertConfigurationAnnotationOutput() AlertConfigurationAnnotationOutput {
	return i.ToAlertConfigurationAnnotationOutputWithContext(context.Background())
}

func (i AlertConfigurationAnnotationArgs) ToAlertConfigurationAnnotationOutputWithContext(ctx context.Context) AlertConfigurationAnnotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationAnnotationOutput)
}

// AlertConfigurationAnnotationArrayInput is an input type that accepts AlertConfigurationAnnotationArray and AlertConfigurationAnnotationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationAnnotationArrayInput` via:
//
//	AlertConfigurationAnnotationArray{ AlertConfigurationAnnotationArgs{...} }
type AlertConfigurationAnnotationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationAnnotationArrayOutput() AlertConfigurationAnnotationArrayOutput
	ToAlertConfigurationAnnotationArrayOutputWithContext(context.Context) AlertConfigurationAnnotationArrayOutput
}

type AlertConfigurationAnnotationArray []AlertConfigurationAnnotationInput

func (AlertConfigurationAnnotationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationAnnotation)(nil)).Elem()
}

func (i AlertConfigurationAnnotationArray) ToAlertConfigurationAnnotationArrayOutput() AlertConfigurationAnnotationArrayOutput {
	return i.ToAlertConfigurationAnnotationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationAnnotationArray) ToAlertConfigurationAnnotationArrayOutputWithContext(ctx context.Context) AlertConfigurationAnnotationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationAnnotationArrayOutput)
}

type AlertConfigurationAnnotationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationAnnotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationAnnotation)(nil)).Elem()
}

func (o AlertConfigurationAnnotationOutput) ToAlertConfigurationAnnotationOutput() AlertConfigurationAnnotationOutput {
	return o
}

func (o AlertConfigurationAnnotationOutput) ToAlertConfigurationAnnotationOutputWithContext(ctx context.Context) AlertConfigurationAnnotationOutput {
	return o
}

// Field name.
func (o AlertConfigurationAnnotationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationAnnotation) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Field value.
func (o AlertConfigurationAnnotationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationAnnotation) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationAnnotationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationAnnotationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationAnnotation)(nil)).Elem()
}

func (o AlertConfigurationAnnotationArrayOutput) ToAlertConfigurationAnnotationArrayOutput() AlertConfigurationAnnotationArrayOutput {
	return o
}

func (o AlertConfigurationAnnotationArrayOutput) ToAlertConfigurationAnnotationArrayOutputWithContext(ctx context.Context) AlertConfigurationAnnotationArrayOutput {
	return o
}

func (o AlertConfigurationAnnotationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationAnnotationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationAnnotation {
		return vs[0].([]AlertConfigurationAnnotation)[vs[1].(int)]
	}).(AlertConfigurationAnnotationOutput)
}

type AlertConfigurationConditionConfiguration struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition *string `pulumi:"condition"`
	// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
	CountCondition *string `pulumi:"countCondition"`
}

// AlertConfigurationConditionConfigurationInput is an input type that accepts AlertConfigurationConditionConfigurationArgs and AlertConfigurationConditionConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationConditionConfigurationInput` via:
//
//	AlertConfigurationConditionConfigurationArgs{...}
type AlertConfigurationConditionConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationConditionConfigurationOutput() AlertConfigurationConditionConfigurationOutput
	ToAlertConfigurationConditionConfigurationOutputWithContext(context.Context) AlertConfigurationConditionConfigurationOutput
}

type AlertConfigurationConditionConfigurationArgs struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
	CountCondition pulumi.StringPtrInput `pulumi:"countCondition"`
}

func (AlertConfigurationConditionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationConditionConfiguration)(nil)).Elem()
}

func (i AlertConfigurationConditionConfigurationArgs) ToAlertConfigurationConditionConfigurationOutput() AlertConfigurationConditionConfigurationOutput {
	return i.ToAlertConfigurationConditionConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationConditionConfigurationArgs) ToAlertConfigurationConditionConfigurationOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationConditionConfigurationOutput)
}

func (i AlertConfigurationConditionConfigurationArgs) ToAlertConfigurationConditionConfigurationPtrOutput() AlertConfigurationConditionConfigurationPtrOutput {
	return i.ToAlertConfigurationConditionConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationConditionConfigurationArgs) ToAlertConfigurationConditionConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationConditionConfigurationOutput).ToAlertConfigurationConditionConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationConditionConfigurationPtrInput is an input type that accepts AlertConfigurationConditionConfigurationArgs, AlertConfigurationConditionConfigurationPtr and AlertConfigurationConditionConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationConditionConfigurationPtrInput` via:
//
//	        AlertConfigurationConditionConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationConditionConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationConditionConfigurationPtrOutput() AlertConfigurationConditionConfigurationPtrOutput
	ToAlertConfigurationConditionConfigurationPtrOutputWithContext(context.Context) AlertConfigurationConditionConfigurationPtrOutput
}

type alertConfigurationConditionConfigurationPtrType AlertConfigurationConditionConfigurationArgs

func AlertConfigurationConditionConfigurationPtr(v *AlertConfigurationConditionConfigurationArgs) AlertConfigurationConditionConfigurationPtrInput {
	return (*alertConfigurationConditionConfigurationPtrType)(v)
}

func (*alertConfigurationConditionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationConditionConfiguration)(nil)).Elem()
}

func (i *alertConfigurationConditionConfigurationPtrType) ToAlertConfigurationConditionConfigurationPtrOutput() AlertConfigurationConditionConfigurationPtrOutput {
	return i.ToAlertConfigurationConditionConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationConditionConfigurationPtrType) ToAlertConfigurationConditionConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationConditionConfigurationPtrOutput)
}

type AlertConfigurationConditionConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationConditionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationConditionConfiguration)(nil)).Elem()
}

func (o AlertConfigurationConditionConfigurationOutput) ToAlertConfigurationConditionConfigurationOutput() AlertConfigurationConditionConfigurationOutput {
	return o
}

func (o AlertConfigurationConditionConfigurationOutput) ToAlertConfigurationConditionConfigurationOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationOutput {
	return o
}

func (o AlertConfigurationConditionConfigurationOutput) ToAlertConfigurationConditionConfigurationPtrOutput() AlertConfigurationConditionConfigurationPtrOutput {
	return o.ToAlertConfigurationConditionConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationConditionConfigurationOutput) ToAlertConfigurationConditionConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationConditionConfiguration) *AlertConfigurationConditionConfiguration {
		return &v
	}).(AlertConfigurationConditionConfigurationPtrOutput)
}

// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
func (o AlertConfigurationConditionConfigurationOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationConditionConfiguration) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
func (o AlertConfigurationConditionConfigurationOutput) CountCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationConditionConfiguration) *string { return v.CountCondition }).(pulumi.StringPtrOutput)
}

type AlertConfigurationConditionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationConditionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationConditionConfiguration)(nil)).Elem()
}

func (o AlertConfigurationConditionConfigurationPtrOutput) ToAlertConfigurationConditionConfigurationPtrOutput() AlertConfigurationConditionConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationConditionConfigurationPtrOutput) ToAlertConfigurationConditionConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationConditionConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationConditionConfigurationPtrOutput) Elem() AlertConfigurationConditionConfigurationOutput {
	return o.ApplyT(func(v *AlertConfigurationConditionConfiguration) AlertConfigurationConditionConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationConditionConfiguration
		return ret
	}).(AlertConfigurationConditionConfigurationOutput)
}

// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
func (o AlertConfigurationConditionConfigurationPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationConditionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
func (o AlertConfigurationConditionConfigurationPtrOutput) CountCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationConditionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CountCondition
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationGroupConfiguration struct {
	// The field used for grouping evaluation. When type is set to custom, fields must be set.
	Fields []string `pulumi:"fields"`
	Type   *string  `pulumi:"type"`
}

// AlertConfigurationGroupConfigurationInput is an input type that accepts AlertConfigurationGroupConfigurationArgs and AlertConfigurationGroupConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationGroupConfigurationInput` via:
//
//	AlertConfigurationGroupConfigurationArgs{...}
type AlertConfigurationGroupConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationGroupConfigurationOutput() AlertConfigurationGroupConfigurationOutput
	ToAlertConfigurationGroupConfigurationOutputWithContext(context.Context) AlertConfigurationGroupConfigurationOutput
}

type AlertConfigurationGroupConfigurationArgs struct {
	// The field used for grouping evaluation. When type is set to custom, fields must be set.
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	Type   pulumi.StringPtrInput   `pulumi:"type"`
}

func (AlertConfigurationGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationGroupConfiguration)(nil)).Elem()
}

func (i AlertConfigurationGroupConfigurationArgs) ToAlertConfigurationGroupConfigurationOutput() AlertConfigurationGroupConfigurationOutput {
	return i.ToAlertConfigurationGroupConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationGroupConfigurationArgs) ToAlertConfigurationGroupConfigurationOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationGroupConfigurationOutput)
}

func (i AlertConfigurationGroupConfigurationArgs) ToAlertConfigurationGroupConfigurationPtrOutput() AlertConfigurationGroupConfigurationPtrOutput {
	return i.ToAlertConfigurationGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationGroupConfigurationArgs) ToAlertConfigurationGroupConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationGroupConfigurationOutput).ToAlertConfigurationGroupConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationGroupConfigurationPtrInput is an input type that accepts AlertConfigurationGroupConfigurationArgs, AlertConfigurationGroupConfigurationPtr and AlertConfigurationGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationGroupConfigurationPtrInput` via:
//
//	        AlertConfigurationGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationGroupConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationGroupConfigurationPtrOutput() AlertConfigurationGroupConfigurationPtrOutput
	ToAlertConfigurationGroupConfigurationPtrOutputWithContext(context.Context) AlertConfigurationGroupConfigurationPtrOutput
}

type alertConfigurationGroupConfigurationPtrType AlertConfigurationGroupConfigurationArgs

func AlertConfigurationGroupConfigurationPtr(v *AlertConfigurationGroupConfigurationArgs) AlertConfigurationGroupConfigurationPtrInput {
	return (*alertConfigurationGroupConfigurationPtrType)(v)
}

func (*alertConfigurationGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationGroupConfiguration)(nil)).Elem()
}

func (i *alertConfigurationGroupConfigurationPtrType) ToAlertConfigurationGroupConfigurationPtrOutput() AlertConfigurationGroupConfigurationPtrOutput {
	return i.ToAlertConfigurationGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationGroupConfigurationPtrType) ToAlertConfigurationGroupConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationGroupConfigurationPtrOutput)
}

type AlertConfigurationGroupConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationGroupConfiguration)(nil)).Elem()
}

func (o AlertConfigurationGroupConfigurationOutput) ToAlertConfigurationGroupConfigurationOutput() AlertConfigurationGroupConfigurationOutput {
	return o
}

func (o AlertConfigurationGroupConfigurationOutput) ToAlertConfigurationGroupConfigurationOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationOutput {
	return o
}

func (o AlertConfigurationGroupConfigurationOutput) ToAlertConfigurationGroupConfigurationPtrOutput() AlertConfigurationGroupConfigurationPtrOutput {
	return o.ToAlertConfigurationGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationGroupConfigurationOutput) ToAlertConfigurationGroupConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationGroupConfiguration) *AlertConfigurationGroupConfiguration {
		return &v
	}).(AlertConfigurationGroupConfigurationPtrOutput)
}

// The field used for grouping evaluation. When type is set to custom, fields must be set.
func (o AlertConfigurationGroupConfigurationOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationGroupConfiguration) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

func (o AlertConfigurationGroupConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationGroupConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlertConfigurationGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationGroupConfiguration)(nil)).Elem()
}

func (o AlertConfigurationGroupConfigurationPtrOutput) ToAlertConfigurationGroupConfigurationPtrOutput() AlertConfigurationGroupConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationGroupConfigurationPtrOutput) ToAlertConfigurationGroupConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationGroupConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationGroupConfigurationPtrOutput) Elem() AlertConfigurationGroupConfigurationOutput {
	return o.ApplyT(func(v *AlertConfigurationGroupConfiguration) AlertConfigurationGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationGroupConfiguration
		return ret
	}).(AlertConfigurationGroupConfigurationOutput)
}

// The field used for grouping evaluation. When type is set to custom, fields must be set.
func (o AlertConfigurationGroupConfigurationPtrOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertConfigurationGroupConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(pulumi.StringArrayOutput)
}

func (o AlertConfigurationGroupConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationJoinConfiguration struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition *string `pulumi:"condition"`
	Type      *string `pulumi:"type"`
}

// AlertConfigurationJoinConfigurationInput is an input type that accepts AlertConfigurationJoinConfigurationArgs and AlertConfigurationJoinConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationJoinConfigurationInput` via:
//
//	AlertConfigurationJoinConfigurationArgs{...}
type AlertConfigurationJoinConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationJoinConfigurationOutput() AlertConfigurationJoinConfigurationOutput
	ToAlertConfigurationJoinConfigurationOutputWithContext(context.Context) AlertConfigurationJoinConfigurationOutput
}

type AlertConfigurationJoinConfigurationArgs struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
}

func (AlertConfigurationJoinConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationJoinConfiguration)(nil)).Elem()
}

func (i AlertConfigurationJoinConfigurationArgs) ToAlertConfigurationJoinConfigurationOutput() AlertConfigurationJoinConfigurationOutput {
	return i.ToAlertConfigurationJoinConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationJoinConfigurationArgs) ToAlertConfigurationJoinConfigurationOutputWithContext(ctx context.Context) AlertConfigurationJoinConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationJoinConfigurationOutput)
}

// AlertConfigurationJoinConfigurationArrayInput is an input type that accepts AlertConfigurationJoinConfigurationArray and AlertConfigurationJoinConfigurationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationJoinConfigurationArrayInput` via:
//
//	AlertConfigurationJoinConfigurationArray{ AlertConfigurationJoinConfigurationArgs{...} }
type AlertConfigurationJoinConfigurationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationJoinConfigurationArrayOutput() AlertConfigurationJoinConfigurationArrayOutput
	ToAlertConfigurationJoinConfigurationArrayOutputWithContext(context.Context) AlertConfigurationJoinConfigurationArrayOutput
}

type AlertConfigurationJoinConfigurationArray []AlertConfigurationJoinConfigurationInput

func (AlertConfigurationJoinConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationJoinConfiguration)(nil)).Elem()
}

func (i AlertConfigurationJoinConfigurationArray) ToAlertConfigurationJoinConfigurationArrayOutput() AlertConfigurationJoinConfigurationArrayOutput {
	return i.ToAlertConfigurationJoinConfigurationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationJoinConfigurationArray) ToAlertConfigurationJoinConfigurationArrayOutputWithContext(ctx context.Context) AlertConfigurationJoinConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationJoinConfigurationArrayOutput)
}

type AlertConfigurationJoinConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationJoinConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationJoinConfiguration)(nil)).Elem()
}

func (o AlertConfigurationJoinConfigurationOutput) ToAlertConfigurationJoinConfigurationOutput() AlertConfigurationJoinConfigurationOutput {
	return o
}

func (o AlertConfigurationJoinConfigurationOutput) ToAlertConfigurationJoinConfigurationOutputWithContext(ctx context.Context) AlertConfigurationJoinConfigurationOutput {
	return o
}

// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
func (o AlertConfigurationJoinConfigurationOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationJoinConfiguration) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o AlertConfigurationJoinConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationJoinConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlertConfigurationJoinConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationJoinConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationJoinConfiguration)(nil)).Elem()
}

func (o AlertConfigurationJoinConfigurationArrayOutput) ToAlertConfigurationJoinConfigurationArrayOutput() AlertConfigurationJoinConfigurationArrayOutput {
	return o
}

func (o AlertConfigurationJoinConfigurationArrayOutput) ToAlertConfigurationJoinConfigurationArrayOutputWithContext(ctx context.Context) AlertConfigurationJoinConfigurationArrayOutput {
	return o
}

func (o AlertConfigurationJoinConfigurationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationJoinConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationJoinConfiguration {
		return vs[0].([]AlertConfigurationJoinConfiguration)[vs[1].(int)]
	}).(AlertConfigurationJoinConfigurationOutput)
}

type AlertConfigurationLabel struct {
	// Field name.
	Key *string `pulumi:"key"`
	// Field value.
	Value *string `pulumi:"value"`
}

// AlertConfigurationLabelInput is an input type that accepts AlertConfigurationLabelArgs and AlertConfigurationLabelOutput values.
// You can construct a concrete instance of `AlertConfigurationLabelInput` via:
//
//	AlertConfigurationLabelArgs{...}
type AlertConfigurationLabelInput interface {
	pulumi.Input

	ToAlertConfigurationLabelOutput() AlertConfigurationLabelOutput
	ToAlertConfigurationLabelOutputWithContext(context.Context) AlertConfigurationLabelOutput
}

type AlertConfigurationLabelArgs struct {
	// Field name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Field value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationLabel)(nil)).Elem()
}

func (i AlertConfigurationLabelArgs) ToAlertConfigurationLabelOutput() AlertConfigurationLabelOutput {
	return i.ToAlertConfigurationLabelOutputWithContext(context.Background())
}

func (i AlertConfigurationLabelArgs) ToAlertConfigurationLabelOutputWithContext(ctx context.Context) AlertConfigurationLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationLabelOutput)
}

// AlertConfigurationLabelArrayInput is an input type that accepts AlertConfigurationLabelArray and AlertConfigurationLabelArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationLabelArrayInput` via:
//
//	AlertConfigurationLabelArray{ AlertConfigurationLabelArgs{...} }
type AlertConfigurationLabelArrayInput interface {
	pulumi.Input

	ToAlertConfigurationLabelArrayOutput() AlertConfigurationLabelArrayOutput
	ToAlertConfigurationLabelArrayOutputWithContext(context.Context) AlertConfigurationLabelArrayOutput
}

type AlertConfigurationLabelArray []AlertConfigurationLabelInput

func (AlertConfigurationLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationLabel)(nil)).Elem()
}

func (i AlertConfigurationLabelArray) ToAlertConfigurationLabelArrayOutput() AlertConfigurationLabelArrayOutput {
	return i.ToAlertConfigurationLabelArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationLabelArray) ToAlertConfigurationLabelArrayOutputWithContext(ctx context.Context) AlertConfigurationLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationLabelArrayOutput)
}

type AlertConfigurationLabelOutput struct{ *pulumi.OutputState }

func (AlertConfigurationLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationLabel)(nil)).Elem()
}

func (o AlertConfigurationLabelOutput) ToAlertConfigurationLabelOutput() AlertConfigurationLabelOutput {
	return o
}

func (o AlertConfigurationLabelOutput) ToAlertConfigurationLabelOutputWithContext(ctx context.Context) AlertConfigurationLabelOutput {
	return o
}

// Field name.
func (o AlertConfigurationLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Field value.
func (o AlertConfigurationLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationLabelArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationLabel)(nil)).Elem()
}

func (o AlertConfigurationLabelArrayOutput) ToAlertConfigurationLabelArrayOutput() AlertConfigurationLabelArrayOutput {
	return o
}

func (o AlertConfigurationLabelArrayOutput) ToAlertConfigurationLabelArrayOutputWithContext(ctx context.Context) AlertConfigurationLabelArrayOutput {
	return o
}

func (o AlertConfigurationLabelArrayOutput) Index(i pulumi.IntInput) AlertConfigurationLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationLabel {
		return vs[0].([]AlertConfigurationLabel)[vs[1].(int)]
	}).(AlertConfigurationLabelOutput)
}

type AlertConfigurationPolicyConfiguration struct {
	// The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
	ActionPolicyId *string `pulumi:"actionPolicyId"`
	// Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
	AlertPolicyId *string `pulumi:"alertPolicyId"`
	// Repeat the waiting time. For example, 5m, 1H, etc.
	RepeatInterval *string `pulumi:"repeatInterval"`
}

// AlertConfigurationPolicyConfigurationInput is an input type that accepts AlertConfigurationPolicyConfigurationArgs and AlertConfigurationPolicyConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationPolicyConfigurationInput` via:
//
//	AlertConfigurationPolicyConfigurationArgs{...}
type AlertConfigurationPolicyConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationPolicyConfigurationOutput() AlertConfigurationPolicyConfigurationOutput
	ToAlertConfigurationPolicyConfigurationOutputWithContext(context.Context) AlertConfigurationPolicyConfigurationOutput
}

type AlertConfigurationPolicyConfigurationArgs struct {
	// The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
	ActionPolicyId pulumi.StringPtrInput `pulumi:"actionPolicyId"`
	// Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
	AlertPolicyId pulumi.StringPtrInput `pulumi:"alertPolicyId"`
	// Repeat the waiting time. For example, 5m, 1H, etc.
	RepeatInterval pulumi.StringPtrInput `pulumi:"repeatInterval"`
}

func (AlertConfigurationPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationPolicyConfiguration)(nil)).Elem()
}

func (i AlertConfigurationPolicyConfigurationArgs) ToAlertConfigurationPolicyConfigurationOutput() AlertConfigurationPolicyConfigurationOutput {
	return i.ToAlertConfigurationPolicyConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationPolicyConfigurationArgs) ToAlertConfigurationPolicyConfigurationOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationPolicyConfigurationOutput)
}

func (i AlertConfigurationPolicyConfigurationArgs) ToAlertConfigurationPolicyConfigurationPtrOutput() AlertConfigurationPolicyConfigurationPtrOutput {
	return i.ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationPolicyConfigurationArgs) ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationPolicyConfigurationOutput).ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationPolicyConfigurationPtrInput is an input type that accepts AlertConfigurationPolicyConfigurationArgs, AlertConfigurationPolicyConfigurationPtr and AlertConfigurationPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationPolicyConfigurationPtrInput` via:
//
//	        AlertConfigurationPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationPolicyConfigurationPtrOutput() AlertConfigurationPolicyConfigurationPtrOutput
	ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(context.Context) AlertConfigurationPolicyConfigurationPtrOutput
}

type alertConfigurationPolicyConfigurationPtrType AlertConfigurationPolicyConfigurationArgs

func AlertConfigurationPolicyConfigurationPtr(v *AlertConfigurationPolicyConfigurationArgs) AlertConfigurationPolicyConfigurationPtrInput {
	return (*alertConfigurationPolicyConfigurationPtrType)(v)
}

func (*alertConfigurationPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationPolicyConfiguration)(nil)).Elem()
}

func (i *alertConfigurationPolicyConfigurationPtrType) ToAlertConfigurationPolicyConfigurationPtrOutput() AlertConfigurationPolicyConfigurationPtrOutput {
	return i.ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationPolicyConfigurationPtrType) ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationPolicyConfigurationPtrOutput)
}

type AlertConfigurationPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationPolicyConfiguration)(nil)).Elem()
}

func (o AlertConfigurationPolicyConfigurationOutput) ToAlertConfigurationPolicyConfigurationOutput() AlertConfigurationPolicyConfigurationOutput {
	return o
}

func (o AlertConfigurationPolicyConfigurationOutput) ToAlertConfigurationPolicyConfigurationOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationOutput {
	return o
}

func (o AlertConfigurationPolicyConfigurationOutput) ToAlertConfigurationPolicyConfigurationPtrOutput() AlertConfigurationPolicyConfigurationPtrOutput {
	return o.ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationPolicyConfigurationOutput) ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationPolicyConfiguration) *AlertConfigurationPolicyConfiguration {
		return &v
	}).(AlertConfigurationPolicyConfigurationPtrOutput)
}

// The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
func (o AlertConfigurationPolicyConfigurationOutput) ActionPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationPolicyConfiguration) *string { return v.ActionPolicyId }).(pulumi.StringPtrOutput)
}

// Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
func (o AlertConfigurationPolicyConfigurationOutput) AlertPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationPolicyConfiguration) *string { return v.AlertPolicyId }).(pulumi.StringPtrOutput)
}

// Repeat the waiting time. For example, 5m, 1H, etc.
func (o AlertConfigurationPolicyConfigurationOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationPolicyConfiguration) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

type AlertConfigurationPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationPolicyConfiguration)(nil)).Elem()
}

func (o AlertConfigurationPolicyConfigurationPtrOutput) ToAlertConfigurationPolicyConfigurationPtrOutput() AlertConfigurationPolicyConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPolicyConfigurationPtrOutput) ToAlertConfigurationPolicyConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationPolicyConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationPolicyConfigurationPtrOutput) Elem() AlertConfigurationPolicyConfigurationOutput {
	return o.ApplyT(func(v *AlertConfigurationPolicyConfiguration) AlertConfigurationPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationPolicyConfiguration
		return ret
	}).(AlertConfigurationPolicyConfigurationOutput)
}

// The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
func (o AlertConfigurationPolicyConfigurationPtrOutput) ActionPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ActionPolicyId
	}).(pulumi.StringPtrOutput)
}

// Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
func (o AlertConfigurationPolicyConfigurationPtrOutput) AlertPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlertPolicyId
	}).(pulumi.StringPtrOutput)
}

// Repeat the waiting time. For example, 5m, 1H, etc.
func (o AlertConfigurationPolicyConfigurationPtrOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RepeatInterval
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationQueryList struct {
	// Chart Name.
	ChartTitle *string `pulumi:"chartTitle"`
	// Dashboard ID.
	DashboardId *string `pulumi:"dashboardId"`
	// End time. When storeType is set to log or metric, end must be set.
	End *string `pulumi:"end"`
	// Whether to use exclusive SQL. The value is as follows: auto: automatic switching. enable: Starts. disable: disable.
	PowerSqlMode *string `pulumi:"powerSqlMode"`
	// Project Name.
	Project *string `pulumi:"project"`
	// Query and analysis statements. When storeType is set to log or metric, query is set to the query analysis statement. When storeType is set to meta, set query to an empty string.
	Query *string `pulumi:"query"`
	// Region of the target Project.
	Region *string `pulumi:"region"`
	// Roles used to write alarm data to the event Library.
	RoleArn *string `pulumi:"roleArn"`
	// Start time. When storeType is set to log or metric, start must be set.
	Start *string `pulumi:"start"`
	// Query the Logstore, Metricstore, or resource data associated with the statistics. When storeType is set to log, store is set to the target Logstore. When storeType is set to metric, store is set to the target Metricstore. When storeType is set to meta, store is set to the target resource data name.
	Store *string `pulumi:"store"`
	// Query the data source type. The value is as follows: log: Logstore. metric: Time series Library. meta: resource data.
	StoreType *string `pulumi:"storeType"`
	// Time Type.
	TimeSpanType *string `pulumi:"timeSpanType"`
	// Use of specific scene alarm front end.
	Ui *string `pulumi:"ui"`
}

// AlertConfigurationQueryListInput is an input type that accepts AlertConfigurationQueryListArgs and AlertConfigurationQueryListOutput values.
// You can construct a concrete instance of `AlertConfigurationQueryListInput` via:
//
//	AlertConfigurationQueryListArgs{...}
type AlertConfigurationQueryListInput interface {
	pulumi.Input

	ToAlertConfigurationQueryListOutput() AlertConfigurationQueryListOutput
	ToAlertConfigurationQueryListOutputWithContext(context.Context) AlertConfigurationQueryListOutput
}

type AlertConfigurationQueryListArgs struct {
	// Chart Name.
	ChartTitle pulumi.StringPtrInput `pulumi:"chartTitle"`
	// Dashboard ID.
	DashboardId pulumi.StringPtrInput `pulumi:"dashboardId"`
	// End time. When storeType is set to log or metric, end must be set.
	End pulumi.StringPtrInput `pulumi:"end"`
	// Whether to use exclusive SQL. The value is as follows: auto: automatic switching. enable: Starts. disable: disable.
	PowerSqlMode pulumi.StringPtrInput `pulumi:"powerSqlMode"`
	// Project Name.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Query and analysis statements. When storeType is set to log or metric, query is set to the query analysis statement. When storeType is set to meta, set query to an empty string.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Region of the target Project.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Roles used to write alarm data to the event Library.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Start time. When storeType is set to log or metric, start must be set.
	Start pulumi.StringPtrInput `pulumi:"start"`
	// Query the Logstore, Metricstore, or resource data associated with the statistics. When storeType is set to log, store is set to the target Logstore. When storeType is set to metric, store is set to the target Metricstore. When storeType is set to meta, store is set to the target resource data name.
	Store pulumi.StringPtrInput `pulumi:"store"`
	// Query the data source type. The value is as follows: log: Logstore. metric: Time series Library. meta: resource data.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
	// Time Type.
	TimeSpanType pulumi.StringPtrInput `pulumi:"timeSpanType"`
	// Use of specific scene alarm front end.
	Ui pulumi.StringPtrInput `pulumi:"ui"`
}

func (AlertConfigurationQueryListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationQueryList)(nil)).Elem()
}

func (i AlertConfigurationQueryListArgs) ToAlertConfigurationQueryListOutput() AlertConfigurationQueryListOutput {
	return i.ToAlertConfigurationQueryListOutputWithContext(context.Background())
}

func (i AlertConfigurationQueryListArgs) ToAlertConfigurationQueryListOutputWithContext(ctx context.Context) AlertConfigurationQueryListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationQueryListOutput)
}

// AlertConfigurationQueryListArrayInput is an input type that accepts AlertConfigurationQueryListArray and AlertConfigurationQueryListArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationQueryListArrayInput` via:
//
//	AlertConfigurationQueryListArray{ AlertConfigurationQueryListArgs{...} }
type AlertConfigurationQueryListArrayInput interface {
	pulumi.Input

	ToAlertConfigurationQueryListArrayOutput() AlertConfigurationQueryListArrayOutput
	ToAlertConfigurationQueryListArrayOutputWithContext(context.Context) AlertConfigurationQueryListArrayOutput
}

type AlertConfigurationQueryListArray []AlertConfigurationQueryListInput

func (AlertConfigurationQueryListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationQueryList)(nil)).Elem()
}

func (i AlertConfigurationQueryListArray) ToAlertConfigurationQueryListArrayOutput() AlertConfigurationQueryListArrayOutput {
	return i.ToAlertConfigurationQueryListArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationQueryListArray) ToAlertConfigurationQueryListArrayOutputWithContext(ctx context.Context) AlertConfigurationQueryListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationQueryListArrayOutput)
}

type AlertConfigurationQueryListOutput struct{ *pulumi.OutputState }

func (AlertConfigurationQueryListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationQueryList)(nil)).Elem()
}

func (o AlertConfigurationQueryListOutput) ToAlertConfigurationQueryListOutput() AlertConfigurationQueryListOutput {
	return o
}

func (o AlertConfigurationQueryListOutput) ToAlertConfigurationQueryListOutputWithContext(ctx context.Context) AlertConfigurationQueryListOutput {
	return o
}

// Chart Name.
func (o AlertConfigurationQueryListOutput) ChartTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.ChartTitle }).(pulumi.StringPtrOutput)
}

// Dashboard ID.
func (o AlertConfigurationQueryListOutput) DashboardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.DashboardId }).(pulumi.StringPtrOutput)
}

// End time. When storeType is set to log or metric, end must be set.
func (o AlertConfigurationQueryListOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.End }).(pulumi.StringPtrOutput)
}

// Whether to use exclusive SQL. The value is as follows: auto: automatic switching. enable: Starts. disable: disable.
func (o AlertConfigurationQueryListOutput) PowerSqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.PowerSqlMode }).(pulumi.StringPtrOutput)
}

// Project Name.
func (o AlertConfigurationQueryListOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Query and analysis statements. When storeType is set to log or metric, query is set to the query analysis statement. When storeType is set to meta, set query to an empty string.
func (o AlertConfigurationQueryListOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Region of the target Project.
func (o AlertConfigurationQueryListOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Roles used to write alarm data to the event Library.
func (o AlertConfigurationQueryListOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Start time. When storeType is set to log or metric, start must be set.
func (o AlertConfigurationQueryListOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Start }).(pulumi.StringPtrOutput)
}

// Query the Logstore, Metricstore, or resource data associated with the statistics. When storeType is set to log, store is set to the target Logstore. When storeType is set to metric, store is set to the target Metricstore. When storeType is set to meta, store is set to the target resource data name.
func (o AlertConfigurationQueryListOutput) Store() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Store }).(pulumi.StringPtrOutput)
}

// Query the data source type. The value is as follows: log: Logstore. metric: Time series Library. meta: resource data.
func (o AlertConfigurationQueryListOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

// Time Type.
func (o AlertConfigurationQueryListOutput) TimeSpanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.TimeSpanType }).(pulumi.StringPtrOutput)
}

// Use of specific scene alarm front end.
func (o AlertConfigurationQueryListOutput) Ui() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationQueryList) *string { return v.Ui }).(pulumi.StringPtrOutput)
}

type AlertConfigurationQueryListArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationQueryListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationQueryList)(nil)).Elem()
}

func (o AlertConfigurationQueryListArrayOutput) ToAlertConfigurationQueryListArrayOutput() AlertConfigurationQueryListArrayOutput {
	return o
}

func (o AlertConfigurationQueryListArrayOutput) ToAlertConfigurationQueryListArrayOutputWithContext(ctx context.Context) AlertConfigurationQueryListArrayOutput {
	return o
}

func (o AlertConfigurationQueryListArrayOutput) Index(i pulumi.IntInput) AlertConfigurationQueryListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationQueryList {
		return vs[0].([]AlertConfigurationQueryList)[vs[1].(int)]
	}).(AlertConfigurationQueryListOutput)
}

type AlertConfigurationSeverityConfiguration struct {
	// Trigger condition. See `evalCondition` below.
	EvalCondition *AlertConfigurationSeverityConfigurationEvalCondition `pulumi:"evalCondition"`
	// Alarm severity.
	Severity *int `pulumi:"severity"`
}

// AlertConfigurationSeverityConfigurationInput is an input type that accepts AlertConfigurationSeverityConfigurationArgs and AlertConfigurationSeverityConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationSeverityConfigurationInput` via:
//
//	AlertConfigurationSeverityConfigurationArgs{...}
type AlertConfigurationSeverityConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationSeverityConfigurationOutput() AlertConfigurationSeverityConfigurationOutput
	ToAlertConfigurationSeverityConfigurationOutputWithContext(context.Context) AlertConfigurationSeverityConfigurationOutput
}

type AlertConfigurationSeverityConfigurationArgs struct {
	// Trigger condition. See `evalCondition` below.
	EvalCondition AlertConfigurationSeverityConfigurationEvalConditionPtrInput `pulumi:"evalCondition"`
	// Alarm severity.
	Severity pulumi.IntPtrInput `pulumi:"severity"`
}

func (AlertConfigurationSeverityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSeverityConfiguration)(nil)).Elem()
}

func (i AlertConfigurationSeverityConfigurationArgs) ToAlertConfigurationSeverityConfigurationOutput() AlertConfigurationSeverityConfigurationOutput {
	return i.ToAlertConfigurationSeverityConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationSeverityConfigurationArgs) ToAlertConfigurationSeverityConfigurationOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSeverityConfigurationOutput)
}

// AlertConfigurationSeverityConfigurationArrayInput is an input type that accepts AlertConfigurationSeverityConfigurationArray and AlertConfigurationSeverityConfigurationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationSeverityConfigurationArrayInput` via:
//
//	AlertConfigurationSeverityConfigurationArray{ AlertConfigurationSeverityConfigurationArgs{...} }
type AlertConfigurationSeverityConfigurationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationSeverityConfigurationArrayOutput() AlertConfigurationSeverityConfigurationArrayOutput
	ToAlertConfigurationSeverityConfigurationArrayOutputWithContext(context.Context) AlertConfigurationSeverityConfigurationArrayOutput
}

type AlertConfigurationSeverityConfigurationArray []AlertConfigurationSeverityConfigurationInput

func (AlertConfigurationSeverityConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationSeverityConfiguration)(nil)).Elem()
}

func (i AlertConfigurationSeverityConfigurationArray) ToAlertConfigurationSeverityConfigurationArrayOutput() AlertConfigurationSeverityConfigurationArrayOutput {
	return i.ToAlertConfigurationSeverityConfigurationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationSeverityConfigurationArray) ToAlertConfigurationSeverityConfigurationArrayOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSeverityConfigurationArrayOutput)
}

type AlertConfigurationSeverityConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSeverityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSeverityConfiguration)(nil)).Elem()
}

func (o AlertConfigurationSeverityConfigurationOutput) ToAlertConfigurationSeverityConfigurationOutput() AlertConfigurationSeverityConfigurationOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationOutput) ToAlertConfigurationSeverityConfigurationOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationOutput {
	return o
}

// Trigger condition. See `evalCondition` below.
func (o AlertConfigurationSeverityConfigurationOutput) EvalCondition() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSeverityConfiguration) *AlertConfigurationSeverityConfigurationEvalCondition {
		return v.EvalCondition
	}).(AlertConfigurationSeverityConfigurationEvalConditionPtrOutput)
}

// Alarm severity.
func (o AlertConfigurationSeverityConfigurationOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSeverityConfiguration) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

type AlertConfigurationSeverityConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSeverityConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationSeverityConfiguration)(nil)).Elem()
}

func (o AlertConfigurationSeverityConfigurationArrayOutput) ToAlertConfigurationSeverityConfigurationArrayOutput() AlertConfigurationSeverityConfigurationArrayOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationArrayOutput) ToAlertConfigurationSeverityConfigurationArrayOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationArrayOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationSeverityConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationSeverityConfiguration {
		return vs[0].([]AlertConfigurationSeverityConfiguration)[vs[1].(int)]
	}).(AlertConfigurationSeverityConfigurationOutput)
}

type AlertConfigurationSeverityConfigurationEvalCondition struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition *string `pulumi:"condition"`
	// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
	CountCondition *string `pulumi:"countCondition"`
}

// AlertConfigurationSeverityConfigurationEvalConditionInput is an input type that accepts AlertConfigurationSeverityConfigurationEvalConditionArgs and AlertConfigurationSeverityConfigurationEvalConditionOutput values.
// You can construct a concrete instance of `AlertConfigurationSeverityConfigurationEvalConditionInput` via:
//
//	AlertConfigurationSeverityConfigurationEvalConditionArgs{...}
type AlertConfigurationSeverityConfigurationEvalConditionInput interface {
	pulumi.Input

	ToAlertConfigurationSeverityConfigurationEvalConditionOutput() AlertConfigurationSeverityConfigurationEvalConditionOutput
	ToAlertConfigurationSeverityConfigurationEvalConditionOutputWithContext(context.Context) AlertConfigurationSeverityConfigurationEvalConditionOutput
}

type AlertConfigurationSeverityConfigurationEvalConditionArgs struct {
	// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
	CountCondition pulumi.StringPtrInput `pulumi:"countCondition"`
}

func (AlertConfigurationSeverityConfigurationEvalConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSeverityConfigurationEvalCondition)(nil)).Elem()
}

func (i AlertConfigurationSeverityConfigurationEvalConditionArgs) ToAlertConfigurationSeverityConfigurationEvalConditionOutput() AlertConfigurationSeverityConfigurationEvalConditionOutput {
	return i.ToAlertConfigurationSeverityConfigurationEvalConditionOutputWithContext(context.Background())
}

func (i AlertConfigurationSeverityConfigurationEvalConditionArgs) ToAlertConfigurationSeverityConfigurationEvalConditionOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSeverityConfigurationEvalConditionOutput)
}

func (i AlertConfigurationSeverityConfigurationEvalConditionArgs) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutput() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return i.ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationSeverityConfigurationEvalConditionArgs) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSeverityConfigurationEvalConditionOutput).ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(ctx)
}

// AlertConfigurationSeverityConfigurationEvalConditionPtrInput is an input type that accepts AlertConfigurationSeverityConfigurationEvalConditionArgs, AlertConfigurationSeverityConfigurationEvalConditionPtr and AlertConfigurationSeverityConfigurationEvalConditionPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationSeverityConfigurationEvalConditionPtrInput` via:
//
//	        AlertConfigurationSeverityConfigurationEvalConditionArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationSeverityConfigurationEvalConditionPtrInput interface {
	pulumi.Input

	ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutput() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput
	ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(context.Context) AlertConfigurationSeverityConfigurationEvalConditionPtrOutput
}

type alertConfigurationSeverityConfigurationEvalConditionPtrType AlertConfigurationSeverityConfigurationEvalConditionArgs

func AlertConfigurationSeverityConfigurationEvalConditionPtr(v *AlertConfigurationSeverityConfigurationEvalConditionArgs) AlertConfigurationSeverityConfigurationEvalConditionPtrInput {
	return (*alertConfigurationSeverityConfigurationEvalConditionPtrType)(v)
}

func (*alertConfigurationSeverityConfigurationEvalConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSeverityConfigurationEvalCondition)(nil)).Elem()
}

func (i *alertConfigurationSeverityConfigurationEvalConditionPtrType) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutput() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return i.ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationSeverityConfigurationEvalConditionPtrType) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSeverityConfigurationEvalConditionPtrOutput)
}

type AlertConfigurationSeverityConfigurationEvalConditionOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSeverityConfigurationEvalConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSeverityConfigurationEvalCondition)(nil)).Elem()
}

func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) ToAlertConfigurationSeverityConfigurationEvalConditionOutput() AlertConfigurationSeverityConfigurationEvalConditionOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) ToAlertConfigurationSeverityConfigurationEvalConditionOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutput() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return o.ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationSeverityConfigurationEvalCondition) *AlertConfigurationSeverityConfigurationEvalCondition {
		return &v
	}).(AlertConfigurationSeverityConfigurationEvalConditionPtrOutput)
}

// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSeverityConfigurationEvalCondition) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
func (o AlertConfigurationSeverityConfigurationEvalConditionOutput) CountCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSeverityConfigurationEvalCondition) *string { return v.CountCondition }).(pulumi.StringPtrOutput)
}

type AlertConfigurationSeverityConfigurationEvalConditionPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSeverityConfigurationEvalCondition)(nil)).Elem()
}

func (o AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutput() AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) ToAlertConfigurationSeverityConfigurationEvalConditionPtrOutputWithContext(ctx context.Context) AlertConfigurationSeverityConfigurationEvalConditionPtrOutput {
	return o
}

func (o AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) Elem() AlertConfigurationSeverityConfigurationEvalConditionOutput {
	return o.ApplyT(func(v *AlertConfigurationSeverityConfigurationEvalCondition) AlertConfigurationSeverityConfigurationEvalCondition {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationSeverityConfigurationEvalCondition
		return ret
	}).(AlertConfigurationSeverityConfigurationEvalConditionOutput)
}

// Data matching expression. When the data content does not need to be determined, set it to an empty string. In other cases, it needs to be set as an expression, for example, errCnt> 10.
func (o AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSeverityConfigurationEvalCondition) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The number of pieces of data to determine the number of pieces of data to indicate how many pieces of data meet the conditions. If data exists, it is satisfied. Set it to an empty string. In other cases, it needs to be set as an expression, such as__count__> 3.
func (o AlertConfigurationSeverityConfigurationEvalConditionPtrOutput) CountCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSeverityConfigurationEvalCondition) *string {
		if v == nil {
			return nil
		}
		return v.CountCondition
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationSinkAlerthub struct {
	// Open.
	Enabled *bool `pulumi:"enabled"`
}

// AlertConfigurationSinkAlerthubInput is an input type that accepts AlertConfigurationSinkAlerthubArgs and AlertConfigurationSinkAlerthubOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkAlerthubInput` via:
//
//	AlertConfigurationSinkAlerthubArgs{...}
type AlertConfigurationSinkAlerthubInput interface {
	pulumi.Input

	ToAlertConfigurationSinkAlerthubOutput() AlertConfigurationSinkAlerthubOutput
	ToAlertConfigurationSinkAlerthubOutputWithContext(context.Context) AlertConfigurationSinkAlerthubOutput
}

type AlertConfigurationSinkAlerthubArgs struct {
	// Open.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AlertConfigurationSinkAlerthubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkAlerthub)(nil)).Elem()
}

func (i AlertConfigurationSinkAlerthubArgs) ToAlertConfigurationSinkAlerthubOutput() AlertConfigurationSinkAlerthubOutput {
	return i.ToAlertConfigurationSinkAlerthubOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkAlerthubArgs) ToAlertConfigurationSinkAlerthubOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkAlerthubOutput)
}

func (i AlertConfigurationSinkAlerthubArgs) ToAlertConfigurationSinkAlerthubPtrOutput() AlertConfigurationSinkAlerthubPtrOutput {
	return i.ToAlertConfigurationSinkAlerthubPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkAlerthubArgs) ToAlertConfigurationSinkAlerthubPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkAlerthubOutput).ToAlertConfigurationSinkAlerthubPtrOutputWithContext(ctx)
}

// AlertConfigurationSinkAlerthubPtrInput is an input type that accepts AlertConfigurationSinkAlerthubArgs, AlertConfigurationSinkAlerthubPtr and AlertConfigurationSinkAlerthubPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkAlerthubPtrInput` via:
//
//	        AlertConfigurationSinkAlerthubArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationSinkAlerthubPtrInput interface {
	pulumi.Input

	ToAlertConfigurationSinkAlerthubPtrOutput() AlertConfigurationSinkAlerthubPtrOutput
	ToAlertConfigurationSinkAlerthubPtrOutputWithContext(context.Context) AlertConfigurationSinkAlerthubPtrOutput
}

type alertConfigurationSinkAlerthubPtrType AlertConfigurationSinkAlerthubArgs

func AlertConfigurationSinkAlerthubPtr(v *AlertConfigurationSinkAlerthubArgs) AlertConfigurationSinkAlerthubPtrInput {
	return (*alertConfigurationSinkAlerthubPtrType)(v)
}

func (*alertConfigurationSinkAlerthubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkAlerthub)(nil)).Elem()
}

func (i *alertConfigurationSinkAlerthubPtrType) ToAlertConfigurationSinkAlerthubPtrOutput() AlertConfigurationSinkAlerthubPtrOutput {
	return i.ToAlertConfigurationSinkAlerthubPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationSinkAlerthubPtrType) ToAlertConfigurationSinkAlerthubPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkAlerthubPtrOutput)
}

type AlertConfigurationSinkAlerthubOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkAlerthubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkAlerthub)(nil)).Elem()
}

func (o AlertConfigurationSinkAlerthubOutput) ToAlertConfigurationSinkAlerthubOutput() AlertConfigurationSinkAlerthubOutput {
	return o
}

func (o AlertConfigurationSinkAlerthubOutput) ToAlertConfigurationSinkAlerthubOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubOutput {
	return o
}

func (o AlertConfigurationSinkAlerthubOutput) ToAlertConfigurationSinkAlerthubPtrOutput() AlertConfigurationSinkAlerthubPtrOutput {
	return o.ToAlertConfigurationSinkAlerthubPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationSinkAlerthubOutput) ToAlertConfigurationSinkAlerthubPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationSinkAlerthub) *AlertConfigurationSinkAlerthub {
		return &v
	}).(AlertConfigurationSinkAlerthubPtrOutput)
}

// Open.
func (o AlertConfigurationSinkAlerthubOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkAlerthub) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AlertConfigurationSinkAlerthubPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkAlerthubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkAlerthub)(nil)).Elem()
}

func (o AlertConfigurationSinkAlerthubPtrOutput) ToAlertConfigurationSinkAlerthubPtrOutput() AlertConfigurationSinkAlerthubPtrOutput {
	return o
}

func (o AlertConfigurationSinkAlerthubPtrOutput) ToAlertConfigurationSinkAlerthubPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkAlerthubPtrOutput {
	return o
}

func (o AlertConfigurationSinkAlerthubPtrOutput) Elem() AlertConfigurationSinkAlerthubOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkAlerthub) AlertConfigurationSinkAlerthub {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationSinkAlerthub
		return ret
	}).(AlertConfigurationSinkAlerthubOutput)
}

// Open.
func (o AlertConfigurationSinkAlerthubPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkAlerthub) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AlertConfigurationSinkCms struct {
	// Open.
	Enabled *bool `pulumi:"enabled"`
}

// AlertConfigurationSinkCmsInput is an input type that accepts AlertConfigurationSinkCmsArgs and AlertConfigurationSinkCmsOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkCmsInput` via:
//
//	AlertConfigurationSinkCmsArgs{...}
type AlertConfigurationSinkCmsInput interface {
	pulumi.Input

	ToAlertConfigurationSinkCmsOutput() AlertConfigurationSinkCmsOutput
	ToAlertConfigurationSinkCmsOutputWithContext(context.Context) AlertConfigurationSinkCmsOutput
}

type AlertConfigurationSinkCmsArgs struct {
	// Open.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AlertConfigurationSinkCmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkCms)(nil)).Elem()
}

func (i AlertConfigurationSinkCmsArgs) ToAlertConfigurationSinkCmsOutput() AlertConfigurationSinkCmsOutput {
	return i.ToAlertConfigurationSinkCmsOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkCmsArgs) ToAlertConfigurationSinkCmsOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkCmsOutput)
}

func (i AlertConfigurationSinkCmsArgs) ToAlertConfigurationSinkCmsPtrOutput() AlertConfigurationSinkCmsPtrOutput {
	return i.ToAlertConfigurationSinkCmsPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkCmsArgs) ToAlertConfigurationSinkCmsPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkCmsOutput).ToAlertConfigurationSinkCmsPtrOutputWithContext(ctx)
}

// AlertConfigurationSinkCmsPtrInput is an input type that accepts AlertConfigurationSinkCmsArgs, AlertConfigurationSinkCmsPtr and AlertConfigurationSinkCmsPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkCmsPtrInput` via:
//
//	        AlertConfigurationSinkCmsArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationSinkCmsPtrInput interface {
	pulumi.Input

	ToAlertConfigurationSinkCmsPtrOutput() AlertConfigurationSinkCmsPtrOutput
	ToAlertConfigurationSinkCmsPtrOutputWithContext(context.Context) AlertConfigurationSinkCmsPtrOutput
}

type alertConfigurationSinkCmsPtrType AlertConfigurationSinkCmsArgs

func AlertConfigurationSinkCmsPtr(v *AlertConfigurationSinkCmsArgs) AlertConfigurationSinkCmsPtrInput {
	return (*alertConfigurationSinkCmsPtrType)(v)
}

func (*alertConfigurationSinkCmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkCms)(nil)).Elem()
}

func (i *alertConfigurationSinkCmsPtrType) ToAlertConfigurationSinkCmsPtrOutput() AlertConfigurationSinkCmsPtrOutput {
	return i.ToAlertConfigurationSinkCmsPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationSinkCmsPtrType) ToAlertConfigurationSinkCmsPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkCmsPtrOutput)
}

type AlertConfigurationSinkCmsOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkCmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkCms)(nil)).Elem()
}

func (o AlertConfigurationSinkCmsOutput) ToAlertConfigurationSinkCmsOutput() AlertConfigurationSinkCmsOutput {
	return o
}

func (o AlertConfigurationSinkCmsOutput) ToAlertConfigurationSinkCmsOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsOutput {
	return o
}

func (o AlertConfigurationSinkCmsOutput) ToAlertConfigurationSinkCmsPtrOutput() AlertConfigurationSinkCmsPtrOutput {
	return o.ToAlertConfigurationSinkCmsPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationSinkCmsOutput) ToAlertConfigurationSinkCmsPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationSinkCms) *AlertConfigurationSinkCms {
		return &v
	}).(AlertConfigurationSinkCmsPtrOutput)
}

// Open.
func (o AlertConfigurationSinkCmsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkCms) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AlertConfigurationSinkCmsPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkCmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkCms)(nil)).Elem()
}

func (o AlertConfigurationSinkCmsPtrOutput) ToAlertConfigurationSinkCmsPtrOutput() AlertConfigurationSinkCmsPtrOutput {
	return o
}

func (o AlertConfigurationSinkCmsPtrOutput) ToAlertConfigurationSinkCmsPtrOutputWithContext(ctx context.Context) AlertConfigurationSinkCmsPtrOutput {
	return o
}

func (o AlertConfigurationSinkCmsPtrOutput) Elem() AlertConfigurationSinkCmsOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkCms) AlertConfigurationSinkCms {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationSinkCms
		return ret
	}).(AlertConfigurationSinkCmsOutput)
}

// Open.
func (o AlertConfigurationSinkCmsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkCms) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AlertConfigurationSinkEventStore struct {
	// Open.
	Enabled *bool `pulumi:"enabled"`
	// SLS service endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Event Library Name.
	EventStore *string `pulumi:"eventStore"`
	// Project Name.
	Project *string `pulumi:"project"`
	// Roles used to write alarm data to the event Library.
	RoleArn *string `pulumi:"roleArn"`
}

// AlertConfigurationSinkEventStoreInput is an input type that accepts AlertConfigurationSinkEventStoreArgs and AlertConfigurationSinkEventStoreOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkEventStoreInput` via:
//
//	AlertConfigurationSinkEventStoreArgs{...}
type AlertConfigurationSinkEventStoreInput interface {
	pulumi.Input

	ToAlertConfigurationSinkEventStoreOutput() AlertConfigurationSinkEventStoreOutput
	ToAlertConfigurationSinkEventStoreOutputWithContext(context.Context) AlertConfigurationSinkEventStoreOutput
}

type AlertConfigurationSinkEventStoreArgs struct {
	// Open.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// SLS service endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Event Library Name.
	EventStore pulumi.StringPtrInput `pulumi:"eventStore"`
	// Project Name.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Roles used to write alarm data to the event Library.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (AlertConfigurationSinkEventStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkEventStore)(nil)).Elem()
}

func (i AlertConfigurationSinkEventStoreArgs) ToAlertConfigurationSinkEventStoreOutput() AlertConfigurationSinkEventStoreOutput {
	return i.ToAlertConfigurationSinkEventStoreOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkEventStoreArgs) ToAlertConfigurationSinkEventStoreOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkEventStoreOutput)
}

func (i AlertConfigurationSinkEventStoreArgs) ToAlertConfigurationSinkEventStorePtrOutput() AlertConfigurationSinkEventStorePtrOutput {
	return i.ToAlertConfigurationSinkEventStorePtrOutputWithContext(context.Background())
}

func (i AlertConfigurationSinkEventStoreArgs) ToAlertConfigurationSinkEventStorePtrOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkEventStoreOutput).ToAlertConfigurationSinkEventStorePtrOutputWithContext(ctx)
}

// AlertConfigurationSinkEventStorePtrInput is an input type that accepts AlertConfigurationSinkEventStoreArgs, AlertConfigurationSinkEventStorePtr and AlertConfigurationSinkEventStorePtrOutput values.
// You can construct a concrete instance of `AlertConfigurationSinkEventStorePtrInput` via:
//
//	        AlertConfigurationSinkEventStoreArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationSinkEventStorePtrInput interface {
	pulumi.Input

	ToAlertConfigurationSinkEventStorePtrOutput() AlertConfigurationSinkEventStorePtrOutput
	ToAlertConfigurationSinkEventStorePtrOutputWithContext(context.Context) AlertConfigurationSinkEventStorePtrOutput
}

type alertConfigurationSinkEventStorePtrType AlertConfigurationSinkEventStoreArgs

func AlertConfigurationSinkEventStorePtr(v *AlertConfigurationSinkEventStoreArgs) AlertConfigurationSinkEventStorePtrInput {
	return (*alertConfigurationSinkEventStorePtrType)(v)
}

func (*alertConfigurationSinkEventStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkEventStore)(nil)).Elem()
}

func (i *alertConfigurationSinkEventStorePtrType) ToAlertConfigurationSinkEventStorePtrOutput() AlertConfigurationSinkEventStorePtrOutput {
	return i.ToAlertConfigurationSinkEventStorePtrOutputWithContext(context.Background())
}

func (i *alertConfigurationSinkEventStorePtrType) ToAlertConfigurationSinkEventStorePtrOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationSinkEventStorePtrOutput)
}

type AlertConfigurationSinkEventStoreOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkEventStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationSinkEventStore)(nil)).Elem()
}

func (o AlertConfigurationSinkEventStoreOutput) ToAlertConfigurationSinkEventStoreOutput() AlertConfigurationSinkEventStoreOutput {
	return o
}

func (o AlertConfigurationSinkEventStoreOutput) ToAlertConfigurationSinkEventStoreOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStoreOutput {
	return o
}

func (o AlertConfigurationSinkEventStoreOutput) ToAlertConfigurationSinkEventStorePtrOutput() AlertConfigurationSinkEventStorePtrOutput {
	return o.ToAlertConfigurationSinkEventStorePtrOutputWithContext(context.Background())
}

func (o AlertConfigurationSinkEventStoreOutput) ToAlertConfigurationSinkEventStorePtrOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationSinkEventStore) *AlertConfigurationSinkEventStore {
		return &v
	}).(AlertConfigurationSinkEventStorePtrOutput)
}

// Open.
func (o AlertConfigurationSinkEventStoreOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkEventStore) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// SLS service endpoint.
func (o AlertConfigurationSinkEventStoreOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkEventStore) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Event Library Name.
func (o AlertConfigurationSinkEventStoreOutput) EventStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkEventStore) *string { return v.EventStore }).(pulumi.StringPtrOutput)
}

// Project Name.
func (o AlertConfigurationSinkEventStoreOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkEventStore) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Roles used to write alarm data to the event Library.
func (o AlertConfigurationSinkEventStoreOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationSinkEventStore) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type AlertConfigurationSinkEventStorePtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationSinkEventStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationSinkEventStore)(nil)).Elem()
}

func (o AlertConfigurationSinkEventStorePtrOutput) ToAlertConfigurationSinkEventStorePtrOutput() AlertConfigurationSinkEventStorePtrOutput {
	return o
}

func (o AlertConfigurationSinkEventStorePtrOutput) ToAlertConfigurationSinkEventStorePtrOutputWithContext(ctx context.Context) AlertConfigurationSinkEventStorePtrOutput {
	return o
}

func (o AlertConfigurationSinkEventStorePtrOutput) Elem() AlertConfigurationSinkEventStoreOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) AlertConfigurationSinkEventStore {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationSinkEventStore
		return ret
	}).(AlertConfigurationSinkEventStoreOutput)
}

// Open.
func (o AlertConfigurationSinkEventStorePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// SLS service endpoint.
func (o AlertConfigurationSinkEventStorePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Event Library Name.
func (o AlertConfigurationSinkEventStorePtrOutput) EventStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) *string {
		if v == nil {
			return nil
		}
		return v.EventStore
	}).(pulumi.StringPtrOutput)
}

// Project Name.
func (o AlertConfigurationSinkEventStorePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Roles used to write alarm data to the event Library.
func (o AlertConfigurationSinkEventStorePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationSinkEventStore) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationTemplateConfiguration struct {
	// Template Annotations.
	Annotations map[string]string `pulumi:"annotations"`
	// Template Language.
	Lang *string `pulumi:"lang"`
	// Template ID.
	TemplateId *string `pulumi:"templateId"`
	// Template Variables.
	Tokens map[string]string `pulumi:"tokens"`
	Type   *string           `pulumi:"type"`
	// Template Version.
	Version *string `pulumi:"version"`
}

// AlertConfigurationTemplateConfigurationInput is an input type that accepts AlertConfigurationTemplateConfigurationArgs and AlertConfigurationTemplateConfigurationOutput values.
// You can construct a concrete instance of `AlertConfigurationTemplateConfigurationInput` via:
//
//	AlertConfigurationTemplateConfigurationArgs{...}
type AlertConfigurationTemplateConfigurationInput interface {
	pulumi.Input

	ToAlertConfigurationTemplateConfigurationOutput() AlertConfigurationTemplateConfigurationOutput
	ToAlertConfigurationTemplateConfigurationOutputWithContext(context.Context) AlertConfigurationTemplateConfigurationOutput
}

type AlertConfigurationTemplateConfigurationArgs struct {
	// Template Annotations.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Template Language.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Template ID.
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// Template Variables.
	Tokens pulumi.StringMapInput `pulumi:"tokens"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
	// Template Version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AlertConfigurationTemplateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationTemplateConfiguration)(nil)).Elem()
}

func (i AlertConfigurationTemplateConfigurationArgs) ToAlertConfigurationTemplateConfigurationOutput() AlertConfigurationTemplateConfigurationOutput {
	return i.ToAlertConfigurationTemplateConfigurationOutputWithContext(context.Background())
}

func (i AlertConfigurationTemplateConfigurationArgs) ToAlertConfigurationTemplateConfigurationOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationTemplateConfigurationOutput)
}

func (i AlertConfigurationTemplateConfigurationArgs) ToAlertConfigurationTemplateConfigurationPtrOutput() AlertConfigurationTemplateConfigurationPtrOutput {
	return i.ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationTemplateConfigurationArgs) ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationTemplateConfigurationOutput).ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(ctx)
}

// AlertConfigurationTemplateConfigurationPtrInput is an input type that accepts AlertConfigurationTemplateConfigurationArgs, AlertConfigurationTemplateConfigurationPtr and AlertConfigurationTemplateConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationTemplateConfigurationPtrInput` via:
//
//	        AlertConfigurationTemplateConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationTemplateConfigurationPtrInput interface {
	pulumi.Input

	ToAlertConfigurationTemplateConfigurationPtrOutput() AlertConfigurationTemplateConfigurationPtrOutput
	ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(context.Context) AlertConfigurationTemplateConfigurationPtrOutput
}

type alertConfigurationTemplateConfigurationPtrType AlertConfigurationTemplateConfigurationArgs

func AlertConfigurationTemplateConfigurationPtr(v *AlertConfigurationTemplateConfigurationArgs) AlertConfigurationTemplateConfigurationPtrInput {
	return (*alertConfigurationTemplateConfigurationPtrType)(v)
}

func (*alertConfigurationTemplateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationTemplateConfiguration)(nil)).Elem()
}

func (i *alertConfigurationTemplateConfigurationPtrType) ToAlertConfigurationTemplateConfigurationPtrOutput() AlertConfigurationTemplateConfigurationPtrOutput {
	return i.ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationTemplateConfigurationPtrType) ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationTemplateConfigurationPtrOutput)
}

type AlertConfigurationTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationTemplateConfiguration)(nil)).Elem()
}

func (o AlertConfigurationTemplateConfigurationOutput) ToAlertConfigurationTemplateConfigurationOutput() AlertConfigurationTemplateConfigurationOutput {
	return o
}

func (o AlertConfigurationTemplateConfigurationOutput) ToAlertConfigurationTemplateConfigurationOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationOutput {
	return o
}

func (o AlertConfigurationTemplateConfigurationOutput) ToAlertConfigurationTemplateConfigurationPtrOutput() AlertConfigurationTemplateConfigurationPtrOutput {
	return o.ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationTemplateConfigurationOutput) ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationTemplateConfiguration) *AlertConfigurationTemplateConfiguration {
		return &v
	}).(AlertConfigurationTemplateConfigurationPtrOutput)
}

// Template Annotations.
func (o AlertConfigurationTemplateConfigurationOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Template Language.
func (o AlertConfigurationTemplateConfigurationOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Template ID.
func (o AlertConfigurationTemplateConfigurationOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// Template Variables.
func (o AlertConfigurationTemplateConfigurationOutput) Tokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) map[string]string { return v.Tokens }).(pulumi.StringMapOutput)
}

func (o AlertConfigurationTemplateConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Template Version.
func (o AlertConfigurationTemplateConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationTemplateConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AlertConfigurationTemplateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationTemplateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationTemplateConfiguration)(nil)).Elem()
}

func (o AlertConfigurationTemplateConfigurationPtrOutput) ToAlertConfigurationTemplateConfigurationPtrOutput() AlertConfigurationTemplateConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationTemplateConfigurationPtrOutput) ToAlertConfigurationTemplateConfigurationPtrOutputWithContext(ctx context.Context) AlertConfigurationTemplateConfigurationPtrOutput {
	return o
}

func (o AlertConfigurationTemplateConfigurationPtrOutput) Elem() AlertConfigurationTemplateConfigurationOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) AlertConfigurationTemplateConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationTemplateConfiguration
		return ret
	}).(AlertConfigurationTemplateConfigurationOutput)
}

// Template Annotations.
func (o AlertConfigurationTemplateConfigurationPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Template Language.
func (o AlertConfigurationTemplateConfigurationPtrOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Lang
	}).(pulumi.StringPtrOutput)
}

// Template ID.
func (o AlertConfigurationTemplateConfigurationPtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// Template Variables.
func (o AlertConfigurationTemplateConfigurationPtrOutput) Tokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tokens
	}).(pulumi.StringMapOutput)
}

func (o AlertConfigurationTemplateConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Template Version.
func (o AlertConfigurationTemplateConfigurationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type AlertSchedule struct {
	// Cron expression, the minimum accuracy is minutes, 24 hours. For example, 0 0/1 * * * means that the check is conducted every 1 hour from 00:00. When type is set to Cron, cronExpression must be set.
	CronExpression *string `pulumi:"cronExpression"`
	// Timed task execution delay (unit: s).
	Delay *int `pulumi:"delay"`
	// Fixed interval for scheduling.
	Interval *string `pulumi:"interval"`
	// Dispatch immediately.
	RunImmdiately *bool `pulumi:"runImmdiately"`
	// The time zone where the Cron expression is located. The default value is null, indicating the eighth zone in the east.
	TimeZone *string `pulumi:"timeZone"`
	// Check the frequency type. Log Service checks the query and analysis results according to the frequency you configured. The values are as follows: Fixedate: checks query and analysis results at regular intervals. Cron: specifies the time interval by using the Cron expression, and checks the query and analysis results at the specified time interval.
	Type *string `pulumi:"type"`
}

// AlertScheduleInput is an input type that accepts AlertScheduleArgs and AlertScheduleOutput values.
// You can construct a concrete instance of `AlertScheduleInput` via:
//
//	AlertScheduleArgs{...}
type AlertScheduleInput interface {
	pulumi.Input

	ToAlertScheduleOutput() AlertScheduleOutput
	ToAlertScheduleOutputWithContext(context.Context) AlertScheduleOutput
}

type AlertScheduleArgs struct {
	// Cron expression, the minimum accuracy is minutes, 24 hours. For example, 0 0/1 * * * means that the check is conducted every 1 hour from 00:00. When type is set to Cron, cronExpression must be set.
	CronExpression pulumi.StringPtrInput `pulumi:"cronExpression"`
	// Timed task execution delay (unit: s).
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Fixed interval for scheduling.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Dispatch immediately.
	RunImmdiately pulumi.BoolPtrInput `pulumi:"runImmdiately"`
	// The time zone where the Cron expression is located. The default value is null, indicating the eighth zone in the east.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Check the frequency type. Log Service checks the query and analysis results according to the frequency you configured. The values are as follows: Fixedate: checks query and analysis results at regular intervals. Cron: specifies the time interval by using the Cron expression, and checks the query and analysis results at the specified time interval.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AlertScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSchedule)(nil)).Elem()
}

func (i AlertScheduleArgs) ToAlertScheduleOutput() AlertScheduleOutput {
	return i.ToAlertScheduleOutputWithContext(context.Background())
}

func (i AlertScheduleArgs) ToAlertScheduleOutputWithContext(ctx context.Context) AlertScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertScheduleOutput)
}

func (i AlertScheduleArgs) ToAlertSchedulePtrOutput() AlertSchedulePtrOutput {
	return i.ToAlertSchedulePtrOutputWithContext(context.Background())
}

func (i AlertScheduleArgs) ToAlertSchedulePtrOutputWithContext(ctx context.Context) AlertSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertScheduleOutput).ToAlertSchedulePtrOutputWithContext(ctx)
}

// AlertSchedulePtrInput is an input type that accepts AlertScheduleArgs, AlertSchedulePtr and AlertSchedulePtrOutput values.
// You can construct a concrete instance of `AlertSchedulePtrInput` via:
//
//	        AlertScheduleArgs{...}
//
//	or:
//
//	        nil
type AlertSchedulePtrInput interface {
	pulumi.Input

	ToAlertSchedulePtrOutput() AlertSchedulePtrOutput
	ToAlertSchedulePtrOutputWithContext(context.Context) AlertSchedulePtrOutput
}

type alertSchedulePtrType AlertScheduleArgs

func AlertSchedulePtr(v *AlertScheduleArgs) AlertSchedulePtrInput {
	return (*alertSchedulePtrType)(v)
}

func (*alertSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSchedule)(nil)).Elem()
}

func (i *alertSchedulePtrType) ToAlertSchedulePtrOutput() AlertSchedulePtrOutput {
	return i.ToAlertSchedulePtrOutputWithContext(context.Background())
}

func (i *alertSchedulePtrType) ToAlertSchedulePtrOutputWithContext(ctx context.Context) AlertSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertSchedulePtrOutput)
}

type AlertScheduleOutput struct{ *pulumi.OutputState }

func (AlertScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSchedule)(nil)).Elem()
}

func (o AlertScheduleOutput) ToAlertScheduleOutput() AlertScheduleOutput {
	return o
}

func (o AlertScheduleOutput) ToAlertScheduleOutputWithContext(ctx context.Context) AlertScheduleOutput {
	return o
}

func (o AlertScheduleOutput) ToAlertSchedulePtrOutput() AlertSchedulePtrOutput {
	return o.ToAlertSchedulePtrOutputWithContext(context.Background())
}

func (o AlertScheduleOutput) ToAlertSchedulePtrOutputWithContext(ctx context.Context) AlertSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSchedule) *AlertSchedule {
		return &v
	}).(AlertSchedulePtrOutput)
}

// Cron expression, the minimum accuracy is minutes, 24 hours. For example, 0 0/1 * * * means that the check is conducted every 1 hour from 00:00. When type is set to Cron, cronExpression must be set.
func (o AlertScheduleOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *string { return v.CronExpression }).(pulumi.StringPtrOutput)
}

// Timed task execution delay (unit: s).
func (o AlertScheduleOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Fixed interval for scheduling.
func (o AlertScheduleOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Dispatch immediately.
func (o AlertScheduleOutput) RunImmdiately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *bool { return v.RunImmdiately }).(pulumi.BoolPtrOutput)
}

// The time zone where the Cron expression is located. The default value is null, indicating the eighth zone in the east.
func (o AlertScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Check the frequency type. Log Service checks the query and analysis results according to the frequency you configured. The values are as follows: Fixedate: checks query and analysis results at regular intervals. Cron: specifies the time interval by using the Cron expression, and checks the query and analysis results at the specified time interval.
func (o AlertScheduleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertSchedule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AlertSchedulePtrOutput struct{ *pulumi.OutputState }

func (AlertSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSchedule)(nil)).Elem()
}

func (o AlertSchedulePtrOutput) ToAlertSchedulePtrOutput() AlertSchedulePtrOutput {
	return o
}

func (o AlertSchedulePtrOutput) ToAlertSchedulePtrOutputWithContext(ctx context.Context) AlertSchedulePtrOutput {
	return o
}

func (o AlertSchedulePtrOutput) Elem() AlertScheduleOutput {
	return o.ApplyT(func(v *AlertSchedule) AlertSchedule {
		if v != nil {
			return *v
		}
		var ret AlertSchedule
		return ret
	}).(AlertScheduleOutput)
}

// Cron expression, the minimum accuracy is minutes, 24 hours. For example, 0 0/1 * * * means that the check is conducted every 1 hour from 00:00. When type is set to Cron, cronExpression must be set.
func (o AlertSchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *string {
		if v == nil {
			return nil
		}
		return v.CronExpression
	}).(pulumi.StringPtrOutput)
}

// Timed task execution delay (unit: s).
func (o AlertSchedulePtrOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *int {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(pulumi.IntPtrOutput)
}

// Fixed interval for scheduling.
func (o AlertSchedulePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Dispatch immediately.
func (o AlertSchedulePtrOutput) RunImmdiately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.RunImmdiately
	}).(pulumi.BoolPtrOutput)
}

// The time zone where the Cron expression is located. The default value is null, indicating the eighth zone in the east.
func (o AlertSchedulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Check the frequency type. Log Service checks the query and analysis results according to the frequency you configured. The values are as follows: Fixedate: checks query and analysis results at regular intervals. Cron: specifies the time interval by using the Cron expression, and checks the query and analysis results at the specified time interval.
func (o AlertSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type CollectionPolicyCentralizeConfig struct {
	// When the central logstore is transferred to the destination logstore, its geographical attribute should be consistent with the destRegion and belong to the destProject.
	DestLogstore *string `pulumi:"destLogstore"`
	// The geographical attributes of the centralized transfer project should be consistent with the destRegion.
	DestProject *string `pulumi:"destProject"`
	// Centralized transfer destination area.
	DestRegion *string `pulumi:"destRegion"`
	// The number of days for the central transfer destination. This is valid only if the central transfer destination log store is not created for the first time.
	DestTtl *int `pulumi:"destTtl"`
}

// CollectionPolicyCentralizeConfigInput is an input type that accepts CollectionPolicyCentralizeConfigArgs and CollectionPolicyCentralizeConfigOutput values.
// You can construct a concrete instance of `CollectionPolicyCentralizeConfigInput` via:
//
//	CollectionPolicyCentralizeConfigArgs{...}
type CollectionPolicyCentralizeConfigInput interface {
	pulumi.Input

	ToCollectionPolicyCentralizeConfigOutput() CollectionPolicyCentralizeConfigOutput
	ToCollectionPolicyCentralizeConfigOutputWithContext(context.Context) CollectionPolicyCentralizeConfigOutput
}

type CollectionPolicyCentralizeConfigArgs struct {
	// When the central logstore is transferred to the destination logstore, its geographical attribute should be consistent with the destRegion and belong to the destProject.
	DestLogstore pulumi.StringPtrInput `pulumi:"destLogstore"`
	// The geographical attributes of the centralized transfer project should be consistent with the destRegion.
	DestProject pulumi.StringPtrInput `pulumi:"destProject"`
	// Centralized transfer destination area.
	DestRegion pulumi.StringPtrInput `pulumi:"destRegion"`
	// The number of days for the central transfer destination. This is valid only if the central transfer destination log store is not created for the first time.
	DestTtl pulumi.IntPtrInput `pulumi:"destTtl"`
}

func (CollectionPolicyCentralizeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyCentralizeConfig)(nil)).Elem()
}

func (i CollectionPolicyCentralizeConfigArgs) ToCollectionPolicyCentralizeConfigOutput() CollectionPolicyCentralizeConfigOutput {
	return i.ToCollectionPolicyCentralizeConfigOutputWithContext(context.Background())
}

func (i CollectionPolicyCentralizeConfigArgs) ToCollectionPolicyCentralizeConfigOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyCentralizeConfigOutput)
}

func (i CollectionPolicyCentralizeConfigArgs) ToCollectionPolicyCentralizeConfigPtrOutput() CollectionPolicyCentralizeConfigPtrOutput {
	return i.ToCollectionPolicyCentralizeConfigPtrOutputWithContext(context.Background())
}

func (i CollectionPolicyCentralizeConfigArgs) ToCollectionPolicyCentralizeConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyCentralizeConfigOutput).ToCollectionPolicyCentralizeConfigPtrOutputWithContext(ctx)
}

// CollectionPolicyCentralizeConfigPtrInput is an input type that accepts CollectionPolicyCentralizeConfigArgs, CollectionPolicyCentralizeConfigPtr and CollectionPolicyCentralizeConfigPtrOutput values.
// You can construct a concrete instance of `CollectionPolicyCentralizeConfigPtrInput` via:
//
//	        CollectionPolicyCentralizeConfigArgs{...}
//
//	or:
//
//	        nil
type CollectionPolicyCentralizeConfigPtrInput interface {
	pulumi.Input

	ToCollectionPolicyCentralizeConfigPtrOutput() CollectionPolicyCentralizeConfigPtrOutput
	ToCollectionPolicyCentralizeConfigPtrOutputWithContext(context.Context) CollectionPolicyCentralizeConfigPtrOutput
}

type collectionPolicyCentralizeConfigPtrType CollectionPolicyCentralizeConfigArgs

func CollectionPolicyCentralizeConfigPtr(v *CollectionPolicyCentralizeConfigArgs) CollectionPolicyCentralizeConfigPtrInput {
	return (*collectionPolicyCentralizeConfigPtrType)(v)
}

func (*collectionPolicyCentralizeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyCentralizeConfig)(nil)).Elem()
}

func (i *collectionPolicyCentralizeConfigPtrType) ToCollectionPolicyCentralizeConfigPtrOutput() CollectionPolicyCentralizeConfigPtrOutput {
	return i.ToCollectionPolicyCentralizeConfigPtrOutputWithContext(context.Background())
}

func (i *collectionPolicyCentralizeConfigPtrType) ToCollectionPolicyCentralizeConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyCentralizeConfigPtrOutput)
}

type CollectionPolicyCentralizeConfigOutput struct{ *pulumi.OutputState }

func (CollectionPolicyCentralizeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyCentralizeConfig)(nil)).Elem()
}

func (o CollectionPolicyCentralizeConfigOutput) ToCollectionPolicyCentralizeConfigOutput() CollectionPolicyCentralizeConfigOutput {
	return o
}

func (o CollectionPolicyCentralizeConfigOutput) ToCollectionPolicyCentralizeConfigOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigOutput {
	return o
}

func (o CollectionPolicyCentralizeConfigOutput) ToCollectionPolicyCentralizeConfigPtrOutput() CollectionPolicyCentralizeConfigPtrOutput {
	return o.ToCollectionPolicyCentralizeConfigPtrOutputWithContext(context.Background())
}

func (o CollectionPolicyCentralizeConfigOutput) ToCollectionPolicyCentralizeConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CollectionPolicyCentralizeConfig) *CollectionPolicyCentralizeConfig {
		return &v
	}).(CollectionPolicyCentralizeConfigPtrOutput)
}

// When the central logstore is transferred to the destination logstore, its geographical attribute should be consistent with the destRegion and belong to the destProject.
func (o CollectionPolicyCentralizeConfigOutput) DestLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyCentralizeConfig) *string { return v.DestLogstore }).(pulumi.StringPtrOutput)
}

// The geographical attributes of the centralized transfer project should be consistent with the destRegion.
func (o CollectionPolicyCentralizeConfigOutput) DestProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyCentralizeConfig) *string { return v.DestProject }).(pulumi.StringPtrOutput)
}

// Centralized transfer destination area.
func (o CollectionPolicyCentralizeConfigOutput) DestRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyCentralizeConfig) *string { return v.DestRegion }).(pulumi.StringPtrOutput)
}

// The number of days for the central transfer destination. This is valid only if the central transfer destination log store is not created for the first time.
func (o CollectionPolicyCentralizeConfigOutput) DestTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CollectionPolicyCentralizeConfig) *int { return v.DestTtl }).(pulumi.IntPtrOutput)
}

type CollectionPolicyCentralizeConfigPtrOutput struct{ *pulumi.OutputState }

func (CollectionPolicyCentralizeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyCentralizeConfig)(nil)).Elem()
}

func (o CollectionPolicyCentralizeConfigPtrOutput) ToCollectionPolicyCentralizeConfigPtrOutput() CollectionPolicyCentralizeConfigPtrOutput {
	return o
}

func (o CollectionPolicyCentralizeConfigPtrOutput) ToCollectionPolicyCentralizeConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyCentralizeConfigPtrOutput {
	return o
}

func (o CollectionPolicyCentralizeConfigPtrOutput) Elem() CollectionPolicyCentralizeConfigOutput {
	return o.ApplyT(func(v *CollectionPolicyCentralizeConfig) CollectionPolicyCentralizeConfig {
		if v != nil {
			return *v
		}
		var ret CollectionPolicyCentralizeConfig
		return ret
	}).(CollectionPolicyCentralizeConfigOutput)
}

// When the central logstore is transferred to the destination logstore, its geographical attribute should be consistent with the destRegion and belong to the destProject.
func (o CollectionPolicyCentralizeConfigPtrOutput) DestLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyCentralizeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DestLogstore
	}).(pulumi.StringPtrOutput)
}

// The geographical attributes of the centralized transfer project should be consistent with the destRegion.
func (o CollectionPolicyCentralizeConfigPtrOutput) DestProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyCentralizeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DestProject
	}).(pulumi.StringPtrOutput)
}

// Centralized transfer destination area.
func (o CollectionPolicyCentralizeConfigPtrOutput) DestRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyCentralizeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DestRegion
	}).(pulumi.StringPtrOutput)
}

// The number of days for the central transfer destination. This is valid only if the central transfer destination log store is not created for the first time.
func (o CollectionPolicyCentralizeConfigPtrOutput) DestTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyCentralizeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DestTtl
	}).(pulumi.IntPtrOutput)
}

type CollectionPolicyDataConfig struct {
	// Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
	DataProject *string `pulumi:"dataProject"`
	// If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
	DataRegion *string `pulumi:"dataRegion"`
}

// CollectionPolicyDataConfigInput is an input type that accepts CollectionPolicyDataConfigArgs and CollectionPolicyDataConfigOutput values.
// You can construct a concrete instance of `CollectionPolicyDataConfigInput` via:
//
//	CollectionPolicyDataConfigArgs{...}
type CollectionPolicyDataConfigInput interface {
	pulumi.Input

	ToCollectionPolicyDataConfigOutput() CollectionPolicyDataConfigOutput
	ToCollectionPolicyDataConfigOutputWithContext(context.Context) CollectionPolicyDataConfigOutput
}

type CollectionPolicyDataConfigArgs struct {
	// Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
	DataProject pulumi.StringPtrInput `pulumi:"dataProject"`
	// If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
	DataRegion pulumi.StringPtrInput `pulumi:"dataRegion"`
}

func (CollectionPolicyDataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyDataConfig)(nil)).Elem()
}

func (i CollectionPolicyDataConfigArgs) ToCollectionPolicyDataConfigOutput() CollectionPolicyDataConfigOutput {
	return i.ToCollectionPolicyDataConfigOutputWithContext(context.Background())
}

func (i CollectionPolicyDataConfigArgs) ToCollectionPolicyDataConfigOutputWithContext(ctx context.Context) CollectionPolicyDataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyDataConfigOutput)
}

func (i CollectionPolicyDataConfigArgs) ToCollectionPolicyDataConfigPtrOutput() CollectionPolicyDataConfigPtrOutput {
	return i.ToCollectionPolicyDataConfigPtrOutputWithContext(context.Background())
}

func (i CollectionPolicyDataConfigArgs) ToCollectionPolicyDataConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyDataConfigOutput).ToCollectionPolicyDataConfigPtrOutputWithContext(ctx)
}

// CollectionPolicyDataConfigPtrInput is an input type that accepts CollectionPolicyDataConfigArgs, CollectionPolicyDataConfigPtr and CollectionPolicyDataConfigPtrOutput values.
// You can construct a concrete instance of `CollectionPolicyDataConfigPtrInput` via:
//
//	        CollectionPolicyDataConfigArgs{...}
//
//	or:
//
//	        nil
type CollectionPolicyDataConfigPtrInput interface {
	pulumi.Input

	ToCollectionPolicyDataConfigPtrOutput() CollectionPolicyDataConfigPtrOutput
	ToCollectionPolicyDataConfigPtrOutputWithContext(context.Context) CollectionPolicyDataConfigPtrOutput
}

type collectionPolicyDataConfigPtrType CollectionPolicyDataConfigArgs

func CollectionPolicyDataConfigPtr(v *CollectionPolicyDataConfigArgs) CollectionPolicyDataConfigPtrInput {
	return (*collectionPolicyDataConfigPtrType)(v)
}

func (*collectionPolicyDataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyDataConfig)(nil)).Elem()
}

func (i *collectionPolicyDataConfigPtrType) ToCollectionPolicyDataConfigPtrOutput() CollectionPolicyDataConfigPtrOutput {
	return i.ToCollectionPolicyDataConfigPtrOutputWithContext(context.Background())
}

func (i *collectionPolicyDataConfigPtrType) ToCollectionPolicyDataConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyDataConfigPtrOutput)
}

type CollectionPolicyDataConfigOutput struct{ *pulumi.OutputState }

func (CollectionPolicyDataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyDataConfig)(nil)).Elem()
}

func (o CollectionPolicyDataConfigOutput) ToCollectionPolicyDataConfigOutput() CollectionPolicyDataConfigOutput {
	return o
}

func (o CollectionPolicyDataConfigOutput) ToCollectionPolicyDataConfigOutputWithContext(ctx context.Context) CollectionPolicyDataConfigOutput {
	return o
}

func (o CollectionPolicyDataConfigOutput) ToCollectionPolicyDataConfigPtrOutput() CollectionPolicyDataConfigPtrOutput {
	return o.ToCollectionPolicyDataConfigPtrOutputWithContext(context.Background())
}

func (o CollectionPolicyDataConfigOutput) ToCollectionPolicyDataConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyDataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CollectionPolicyDataConfig) *CollectionPolicyDataConfig {
		return &v
	}).(CollectionPolicyDataConfigPtrOutput)
}

// Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
func (o CollectionPolicyDataConfigOutput) DataProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyDataConfig) *string { return v.DataProject }).(pulumi.StringPtrOutput)
}

// If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
func (o CollectionPolicyDataConfigOutput) DataRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyDataConfig) *string { return v.DataRegion }).(pulumi.StringPtrOutput)
}

type CollectionPolicyDataConfigPtrOutput struct{ *pulumi.OutputState }

func (CollectionPolicyDataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyDataConfig)(nil)).Elem()
}

func (o CollectionPolicyDataConfigPtrOutput) ToCollectionPolicyDataConfigPtrOutput() CollectionPolicyDataConfigPtrOutput {
	return o
}

func (o CollectionPolicyDataConfigPtrOutput) ToCollectionPolicyDataConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyDataConfigPtrOutput {
	return o
}

func (o CollectionPolicyDataConfigPtrOutput) Elem() CollectionPolicyDataConfigOutput {
	return o.ApplyT(func(v *CollectionPolicyDataConfig) CollectionPolicyDataConfig {
		if v != nil {
			return *v
		}
		var ret CollectionPolicyDataConfig
		return ret
	}).(CollectionPolicyDataConfigOutput)
}

// Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
func (o CollectionPolicyDataConfigPtrOutput) DataProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataProject
	}).(pulumi.StringPtrOutput)
}

// If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
func (o CollectionPolicyDataConfigPtrOutput) DataRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataRegion
	}).(pulumi.StringPtrOutput)
}

type CollectionPolicyPolicyConfig struct {
	// A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
	InstanceIds []string `pulumi:"instanceIds"`
	// The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
	Regions []string `pulumi:"regions"`
	// Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
	ResourceMode string `pulumi:"resourceMode"`
	// Resource label, valid if and only if resourceMode is attributeMode.
	//
	// If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
	//
	// The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
	ResourceTags map[string]string `pulumi:"resourceTags"`
}

// CollectionPolicyPolicyConfigInput is an input type that accepts CollectionPolicyPolicyConfigArgs and CollectionPolicyPolicyConfigOutput values.
// You can construct a concrete instance of `CollectionPolicyPolicyConfigInput` via:
//
//	CollectionPolicyPolicyConfigArgs{...}
type CollectionPolicyPolicyConfigInput interface {
	pulumi.Input

	ToCollectionPolicyPolicyConfigOutput() CollectionPolicyPolicyConfigOutput
	ToCollectionPolicyPolicyConfigOutputWithContext(context.Context) CollectionPolicyPolicyConfigOutput
}

type CollectionPolicyPolicyConfigArgs struct {
	// A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
	ResourceMode pulumi.StringInput `pulumi:"resourceMode"`
	// Resource label, valid if and only if resourceMode is attributeMode.
	//
	// If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
	//
	// The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
	ResourceTags pulumi.StringMapInput `pulumi:"resourceTags"`
}

func (CollectionPolicyPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyPolicyConfig)(nil)).Elem()
}

func (i CollectionPolicyPolicyConfigArgs) ToCollectionPolicyPolicyConfigOutput() CollectionPolicyPolicyConfigOutput {
	return i.ToCollectionPolicyPolicyConfigOutputWithContext(context.Background())
}

func (i CollectionPolicyPolicyConfigArgs) ToCollectionPolicyPolicyConfigOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyPolicyConfigOutput)
}

func (i CollectionPolicyPolicyConfigArgs) ToCollectionPolicyPolicyConfigPtrOutput() CollectionPolicyPolicyConfigPtrOutput {
	return i.ToCollectionPolicyPolicyConfigPtrOutputWithContext(context.Background())
}

func (i CollectionPolicyPolicyConfigArgs) ToCollectionPolicyPolicyConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyPolicyConfigOutput).ToCollectionPolicyPolicyConfigPtrOutputWithContext(ctx)
}

// CollectionPolicyPolicyConfigPtrInput is an input type that accepts CollectionPolicyPolicyConfigArgs, CollectionPolicyPolicyConfigPtr and CollectionPolicyPolicyConfigPtrOutput values.
// You can construct a concrete instance of `CollectionPolicyPolicyConfigPtrInput` via:
//
//	        CollectionPolicyPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type CollectionPolicyPolicyConfigPtrInput interface {
	pulumi.Input

	ToCollectionPolicyPolicyConfigPtrOutput() CollectionPolicyPolicyConfigPtrOutput
	ToCollectionPolicyPolicyConfigPtrOutputWithContext(context.Context) CollectionPolicyPolicyConfigPtrOutput
}

type collectionPolicyPolicyConfigPtrType CollectionPolicyPolicyConfigArgs

func CollectionPolicyPolicyConfigPtr(v *CollectionPolicyPolicyConfigArgs) CollectionPolicyPolicyConfigPtrInput {
	return (*collectionPolicyPolicyConfigPtrType)(v)
}

func (*collectionPolicyPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyPolicyConfig)(nil)).Elem()
}

func (i *collectionPolicyPolicyConfigPtrType) ToCollectionPolicyPolicyConfigPtrOutput() CollectionPolicyPolicyConfigPtrOutput {
	return i.ToCollectionPolicyPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *collectionPolicyPolicyConfigPtrType) ToCollectionPolicyPolicyConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyPolicyConfigPtrOutput)
}

type CollectionPolicyPolicyConfigOutput struct{ *pulumi.OutputState }

func (CollectionPolicyPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyPolicyConfig)(nil)).Elem()
}

func (o CollectionPolicyPolicyConfigOutput) ToCollectionPolicyPolicyConfigOutput() CollectionPolicyPolicyConfigOutput {
	return o
}

func (o CollectionPolicyPolicyConfigOutput) ToCollectionPolicyPolicyConfigOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigOutput {
	return o
}

func (o CollectionPolicyPolicyConfigOutput) ToCollectionPolicyPolicyConfigPtrOutput() CollectionPolicyPolicyConfigPtrOutput {
	return o.ToCollectionPolicyPolicyConfigPtrOutputWithContext(context.Background())
}

func (o CollectionPolicyPolicyConfigOutput) ToCollectionPolicyPolicyConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CollectionPolicyPolicyConfig) *CollectionPolicyPolicyConfig {
		return &v
	}).(CollectionPolicyPolicyConfigPtrOutput)
}

// A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
func (o CollectionPolicyPolicyConfigOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CollectionPolicyPolicyConfig) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
func (o CollectionPolicyPolicyConfigOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CollectionPolicyPolicyConfig) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
func (o CollectionPolicyPolicyConfigOutput) ResourceMode() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionPolicyPolicyConfig) string { return v.ResourceMode }).(pulumi.StringOutput)
}

// Resource label, valid if and only if resourceMode is attributeMode.
//
// If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
//
// The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
func (o CollectionPolicyPolicyConfigOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CollectionPolicyPolicyConfig) map[string]string { return v.ResourceTags }).(pulumi.StringMapOutput)
}

type CollectionPolicyPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (CollectionPolicyPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyPolicyConfig)(nil)).Elem()
}

func (o CollectionPolicyPolicyConfigPtrOutput) ToCollectionPolicyPolicyConfigPtrOutput() CollectionPolicyPolicyConfigPtrOutput {
	return o
}

func (o CollectionPolicyPolicyConfigPtrOutput) ToCollectionPolicyPolicyConfigPtrOutputWithContext(ctx context.Context) CollectionPolicyPolicyConfigPtrOutput {
	return o
}

func (o CollectionPolicyPolicyConfigPtrOutput) Elem() CollectionPolicyPolicyConfigOutput {
	return o.ApplyT(func(v *CollectionPolicyPolicyConfig) CollectionPolicyPolicyConfig {
		if v != nil {
			return *v
		}
		var ret CollectionPolicyPolicyConfig
		return ret
	}).(CollectionPolicyPolicyConfigOutput)
}

// A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
func (o CollectionPolicyPolicyConfigPtrOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CollectionPolicyPolicyConfig) []string {
		if v == nil {
			return nil
		}
		return v.InstanceIds
	}).(pulumi.StringArrayOutput)
}

// The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
func (o CollectionPolicyPolicyConfigPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CollectionPolicyPolicyConfig) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
func (o CollectionPolicyPolicyConfigPtrOutput) ResourceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyPolicyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceMode
	}).(pulumi.StringPtrOutput)
}

// Resource label, valid if and only if resourceMode is attributeMode.
//
// If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
//
// The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
func (o CollectionPolicyPolicyConfigPtrOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CollectionPolicyPolicyConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(pulumi.StringMapOutput)
}

type CollectionPolicyResourceDirectory struct {
	// Support all mode all and custom mode custom under this resource directory
	AccountGroupType *string `pulumi:"accountGroupType"`
	// When the resource directory is configured in the custom mode, the corresponding member account list
	Members []string `pulumi:"members"`
}

// CollectionPolicyResourceDirectoryInput is an input type that accepts CollectionPolicyResourceDirectoryArgs and CollectionPolicyResourceDirectoryOutput values.
// You can construct a concrete instance of `CollectionPolicyResourceDirectoryInput` via:
//
//	CollectionPolicyResourceDirectoryArgs{...}
type CollectionPolicyResourceDirectoryInput interface {
	pulumi.Input

	ToCollectionPolicyResourceDirectoryOutput() CollectionPolicyResourceDirectoryOutput
	ToCollectionPolicyResourceDirectoryOutputWithContext(context.Context) CollectionPolicyResourceDirectoryOutput
}

type CollectionPolicyResourceDirectoryArgs struct {
	// Support all mode all and custom mode custom under this resource directory
	AccountGroupType pulumi.StringPtrInput `pulumi:"accountGroupType"`
	// When the resource directory is configured in the custom mode, the corresponding member account list
	Members pulumi.StringArrayInput `pulumi:"members"`
}

func (CollectionPolicyResourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyResourceDirectory)(nil)).Elem()
}

func (i CollectionPolicyResourceDirectoryArgs) ToCollectionPolicyResourceDirectoryOutput() CollectionPolicyResourceDirectoryOutput {
	return i.ToCollectionPolicyResourceDirectoryOutputWithContext(context.Background())
}

func (i CollectionPolicyResourceDirectoryArgs) ToCollectionPolicyResourceDirectoryOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyResourceDirectoryOutput)
}

func (i CollectionPolicyResourceDirectoryArgs) ToCollectionPolicyResourceDirectoryPtrOutput() CollectionPolicyResourceDirectoryPtrOutput {
	return i.ToCollectionPolicyResourceDirectoryPtrOutputWithContext(context.Background())
}

func (i CollectionPolicyResourceDirectoryArgs) ToCollectionPolicyResourceDirectoryPtrOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyResourceDirectoryOutput).ToCollectionPolicyResourceDirectoryPtrOutputWithContext(ctx)
}

// CollectionPolicyResourceDirectoryPtrInput is an input type that accepts CollectionPolicyResourceDirectoryArgs, CollectionPolicyResourceDirectoryPtr and CollectionPolicyResourceDirectoryPtrOutput values.
// You can construct a concrete instance of `CollectionPolicyResourceDirectoryPtrInput` via:
//
//	        CollectionPolicyResourceDirectoryArgs{...}
//
//	or:
//
//	        nil
type CollectionPolicyResourceDirectoryPtrInput interface {
	pulumi.Input

	ToCollectionPolicyResourceDirectoryPtrOutput() CollectionPolicyResourceDirectoryPtrOutput
	ToCollectionPolicyResourceDirectoryPtrOutputWithContext(context.Context) CollectionPolicyResourceDirectoryPtrOutput
}

type collectionPolicyResourceDirectoryPtrType CollectionPolicyResourceDirectoryArgs

func CollectionPolicyResourceDirectoryPtr(v *CollectionPolicyResourceDirectoryArgs) CollectionPolicyResourceDirectoryPtrInput {
	return (*collectionPolicyResourceDirectoryPtrType)(v)
}

func (*collectionPolicyResourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyResourceDirectory)(nil)).Elem()
}

func (i *collectionPolicyResourceDirectoryPtrType) ToCollectionPolicyResourceDirectoryPtrOutput() CollectionPolicyResourceDirectoryPtrOutput {
	return i.ToCollectionPolicyResourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *collectionPolicyResourceDirectoryPtrType) ToCollectionPolicyResourceDirectoryPtrOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionPolicyResourceDirectoryPtrOutput)
}

type CollectionPolicyResourceDirectoryOutput struct{ *pulumi.OutputState }

func (CollectionPolicyResourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionPolicyResourceDirectory)(nil)).Elem()
}

func (o CollectionPolicyResourceDirectoryOutput) ToCollectionPolicyResourceDirectoryOutput() CollectionPolicyResourceDirectoryOutput {
	return o
}

func (o CollectionPolicyResourceDirectoryOutput) ToCollectionPolicyResourceDirectoryOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryOutput {
	return o
}

func (o CollectionPolicyResourceDirectoryOutput) ToCollectionPolicyResourceDirectoryPtrOutput() CollectionPolicyResourceDirectoryPtrOutput {
	return o.ToCollectionPolicyResourceDirectoryPtrOutputWithContext(context.Background())
}

func (o CollectionPolicyResourceDirectoryOutput) ToCollectionPolicyResourceDirectoryPtrOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CollectionPolicyResourceDirectory) *CollectionPolicyResourceDirectory {
		return &v
	}).(CollectionPolicyResourceDirectoryPtrOutput)
}

// Support all mode all and custom mode custom under this resource directory
func (o CollectionPolicyResourceDirectoryOutput) AccountGroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionPolicyResourceDirectory) *string { return v.AccountGroupType }).(pulumi.StringPtrOutput)
}

// When the resource directory is configured in the custom mode, the corresponding member account list
func (o CollectionPolicyResourceDirectoryOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CollectionPolicyResourceDirectory) []string { return v.Members }).(pulumi.StringArrayOutput)
}

type CollectionPolicyResourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (CollectionPolicyResourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionPolicyResourceDirectory)(nil)).Elem()
}

func (o CollectionPolicyResourceDirectoryPtrOutput) ToCollectionPolicyResourceDirectoryPtrOutput() CollectionPolicyResourceDirectoryPtrOutput {
	return o
}

func (o CollectionPolicyResourceDirectoryPtrOutput) ToCollectionPolicyResourceDirectoryPtrOutputWithContext(ctx context.Context) CollectionPolicyResourceDirectoryPtrOutput {
	return o
}

func (o CollectionPolicyResourceDirectoryPtrOutput) Elem() CollectionPolicyResourceDirectoryOutput {
	return o.ApplyT(func(v *CollectionPolicyResourceDirectory) CollectionPolicyResourceDirectory {
		if v != nil {
			return *v
		}
		var ret CollectionPolicyResourceDirectory
		return ret
	}).(CollectionPolicyResourceDirectoryOutput)
}

// Support all mode all and custom mode custom under this resource directory
func (o CollectionPolicyResourceDirectoryPtrOutput) AccountGroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionPolicyResourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.AccountGroupType
	}).(pulumi.StringPtrOutput)
}

// When the resource directory is configured in the custom mode, the corresponding member account list
func (o CollectionPolicyResourceDirectoryPtrOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CollectionPolicyResourceDirectory) []string {
		if v == nil {
			return nil
		}
		return v.Members
	}).(pulumi.StringArrayOutput)
}

type OssExportSinkConfiguration struct {
	// The beginning of the time range to ship data. The value 1 specifies that the data shipping job ships data from the first log in the Logstore. Example value: 1718380800
	FromTime int `pulumi:"fromTime"`
	// The name of the Logstore.
	Logstore string `pulumi:"logstore"`
	// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
	RoleArn string `pulumi:"roleArn"`
	// The configurations of the Object Storage Service (OSS) data shipping job. See `sink` below.
	Sink OssExportSinkConfigurationSink `pulumi:"sink"`
	// The end of the time range to ship data. The value 0 specifies that the data shipping job continuously ships data until the job is manually stopped. Example value: 1718380800
	ToTime int `pulumi:"toTime"`
}

// OssExportSinkConfigurationInput is an input type that accepts OssExportSinkConfigurationArgs and OssExportSinkConfigurationOutput values.
// You can construct a concrete instance of `OssExportSinkConfigurationInput` via:
//
//	OssExportSinkConfigurationArgs{...}
type OssExportSinkConfigurationInput interface {
	pulumi.Input

	ToOssExportSinkConfigurationOutput() OssExportSinkConfigurationOutput
	ToOssExportSinkConfigurationOutputWithContext(context.Context) OssExportSinkConfigurationOutput
}

type OssExportSinkConfigurationArgs struct {
	// The beginning of the time range to ship data. The value 1 specifies that the data shipping job ships data from the first log in the Logstore. Example value: 1718380800
	FromTime pulumi.IntInput `pulumi:"fromTime"`
	// The name of the Logstore.
	Logstore pulumi.StringInput `pulumi:"logstore"`
	// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configurations of the Object Storage Service (OSS) data shipping job. See `sink` below.
	Sink OssExportSinkConfigurationSinkInput `pulumi:"sink"`
	// The end of the time range to ship data. The value 0 specifies that the data shipping job continuously ships data until the job is manually stopped. Example value: 1718380800
	ToTime pulumi.IntInput `pulumi:"toTime"`
}

func (OssExportSinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OssExportSinkConfiguration)(nil)).Elem()
}

func (i OssExportSinkConfigurationArgs) ToOssExportSinkConfigurationOutput() OssExportSinkConfigurationOutput {
	return i.ToOssExportSinkConfigurationOutputWithContext(context.Background())
}

func (i OssExportSinkConfigurationArgs) ToOssExportSinkConfigurationOutputWithContext(ctx context.Context) OssExportSinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationOutput)
}

func (i OssExportSinkConfigurationArgs) ToOssExportSinkConfigurationPtrOutput() OssExportSinkConfigurationPtrOutput {
	return i.ToOssExportSinkConfigurationPtrOutputWithContext(context.Background())
}

func (i OssExportSinkConfigurationArgs) ToOssExportSinkConfigurationPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationOutput).ToOssExportSinkConfigurationPtrOutputWithContext(ctx)
}

// OssExportSinkConfigurationPtrInput is an input type that accepts OssExportSinkConfigurationArgs, OssExportSinkConfigurationPtr and OssExportSinkConfigurationPtrOutput values.
// You can construct a concrete instance of `OssExportSinkConfigurationPtrInput` via:
//
//	        OssExportSinkConfigurationArgs{...}
//
//	or:
//
//	        nil
type OssExportSinkConfigurationPtrInput interface {
	pulumi.Input

	ToOssExportSinkConfigurationPtrOutput() OssExportSinkConfigurationPtrOutput
	ToOssExportSinkConfigurationPtrOutputWithContext(context.Context) OssExportSinkConfigurationPtrOutput
}

type ossExportSinkConfigurationPtrType OssExportSinkConfigurationArgs

func OssExportSinkConfigurationPtr(v *OssExportSinkConfigurationArgs) OssExportSinkConfigurationPtrInput {
	return (*ossExportSinkConfigurationPtrType)(v)
}

func (*ossExportSinkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OssExportSinkConfiguration)(nil)).Elem()
}

func (i *ossExportSinkConfigurationPtrType) ToOssExportSinkConfigurationPtrOutput() OssExportSinkConfigurationPtrOutput {
	return i.ToOssExportSinkConfigurationPtrOutputWithContext(context.Background())
}

func (i *ossExportSinkConfigurationPtrType) ToOssExportSinkConfigurationPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationPtrOutput)
}

type OssExportSinkConfigurationOutput struct{ *pulumi.OutputState }

func (OssExportSinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OssExportSinkConfiguration)(nil)).Elem()
}

func (o OssExportSinkConfigurationOutput) ToOssExportSinkConfigurationOutput() OssExportSinkConfigurationOutput {
	return o
}

func (o OssExportSinkConfigurationOutput) ToOssExportSinkConfigurationOutputWithContext(ctx context.Context) OssExportSinkConfigurationOutput {
	return o
}

func (o OssExportSinkConfigurationOutput) ToOssExportSinkConfigurationPtrOutput() OssExportSinkConfigurationPtrOutput {
	return o.ToOssExportSinkConfigurationPtrOutputWithContext(context.Background())
}

func (o OssExportSinkConfigurationOutput) ToOssExportSinkConfigurationPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OssExportSinkConfiguration) *OssExportSinkConfiguration {
		return &v
	}).(OssExportSinkConfigurationPtrOutput)
}

// The beginning of the time range to ship data. The value 1 specifies that the data shipping job ships data from the first log in the Logstore. Example value: 1718380800
func (o OssExportSinkConfigurationOutput) FromTime() pulumi.IntOutput {
	return o.ApplyT(func(v OssExportSinkConfiguration) int { return v.FromTime }).(pulumi.IntOutput)
}

// The name of the Logstore.
func (o OssExportSinkConfigurationOutput) Logstore() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfiguration) string { return v.Logstore }).(pulumi.StringOutput)
}

// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
func (o OssExportSinkConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configurations of the Object Storage Service (OSS) data shipping job. See `sink` below.
func (o OssExportSinkConfigurationOutput) Sink() OssExportSinkConfigurationSinkOutput {
	return o.ApplyT(func(v OssExportSinkConfiguration) OssExportSinkConfigurationSink { return v.Sink }).(OssExportSinkConfigurationSinkOutput)
}

// The end of the time range to ship data. The value 0 specifies that the data shipping job continuously ships data until the job is manually stopped. Example value: 1718380800
func (o OssExportSinkConfigurationOutput) ToTime() pulumi.IntOutput {
	return o.ApplyT(func(v OssExportSinkConfiguration) int { return v.ToTime }).(pulumi.IntOutput)
}

type OssExportSinkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OssExportSinkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OssExportSinkConfiguration)(nil)).Elem()
}

func (o OssExportSinkConfigurationPtrOutput) ToOssExportSinkConfigurationPtrOutput() OssExportSinkConfigurationPtrOutput {
	return o
}

func (o OssExportSinkConfigurationPtrOutput) ToOssExportSinkConfigurationPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationPtrOutput {
	return o
}

func (o OssExportSinkConfigurationPtrOutput) Elem() OssExportSinkConfigurationOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) OssExportSinkConfiguration {
		if v != nil {
			return *v
		}
		var ret OssExportSinkConfiguration
		return ret
	}).(OssExportSinkConfigurationOutput)
}

// The beginning of the time range to ship data. The value 1 specifies that the data shipping job ships data from the first log in the Logstore. Example value: 1718380800
func (o OssExportSinkConfigurationPtrOutput) FromTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.FromTime
	}).(pulumi.IntPtrOutput)
}

// The name of the Logstore.
func (o OssExportSinkConfigurationPtrOutput) Logstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Logstore
	}).(pulumi.StringPtrOutput)
}

// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
func (o OssExportSinkConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The configurations of the Object Storage Service (OSS) data shipping job. See `sink` below.
func (o OssExportSinkConfigurationPtrOutput) Sink() OssExportSinkConfigurationSinkPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) *OssExportSinkConfigurationSink {
		if v == nil {
			return nil
		}
		return &v.Sink
	}).(OssExportSinkConfigurationSinkPtrOutput)
}

// The end of the time range to ship data. The value 0 specifies that the data shipping job continuously ships data until the job is manually stopped. Example value: 1718380800
func (o OssExportSinkConfigurationPtrOutput) ToTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.ToTime
	}).(pulumi.IntPtrOutput)
}

type OssExportSinkConfigurationSink struct {
	// The OSS bucket.
	Bucket string `pulumi:"bucket"`
	// The interval between two data shipping operations. Valid values: 300 to 900. Unit: seconds.
	BufferInterval string `pulumi:"bufferInterval"`
	// The size of the OSS object to which data is shipped. Valid values: 5 to 256. Unit: MB.
	BufferSize string `pulumi:"bufferSize"`
	// Supports four compression types, such as snappy, gzip, zstd, and none.
	CompressionType string `pulumi:"compressionType"`
	// The OSS file content details. Note: the value of this parameter should be updated based on the value of the contentType parameter.
	//
	// If the contentType value is JSON, the parameters of the contentDetail value are as follows:
	//
	// If the tag is allowed to be posted, the value of the parameter enableTag is true. Example:{"enableTag": true}
	//
	// You are not allowed to post tags. The value of the parameter enableTag is false. Example:{"enableTag": false}
	//
	// If the contentType value is csv, the parameters of the contentDetail value are as follows:
	//
	// The parameter columns is the key of the log in the source logstore.
	//
	// The delimiter parameter, which can be ",","|","", or "\t".
	//
	// The header parameter determines whether the OSS file retains the header. The optional value is true or false.
	//
	// The lineFeed parameter. Optional values are "\t", "\n", or "".
	//
	// The invalid field content parameter is null to specify the delivery content when the field name does not exist.
	//
	// The escape character parameter "quote". Optional values are "" "," '", or" ".
	//
	// Example:{"null": "-", "header": false, "lineFeed": "\n", "quote": "", "delimiter": ",", "columns": ["a", "B", "c", "d"]}
	//
	// When the contentType value is parquet, the parameters of the contentDetail value are as follows:
	//
	// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
	//
	// When the contentType value is set to orc, the parameters of the contentDetail value are as follows:
	//
	// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
	ContentDetail string `pulumi:"contentDetail"`
	// The storage format of the OSS object. Valid values: json, parquet, csv, and orc.
	ContentType string `pulumi:"contentType"`
	// The latency of data shipping. The value of this parameter cannot exceed the data retention period of the source Logstore.
	DelaySeconds *int `pulumi:"delaySeconds"`
	// The OSS Endpoint can only be an OSS intranet Endpoint and only supports the same region. Example value: https://oss-cn-hangzhou-internal.aliyuncs.com
	Endpoint string `pulumi:"endpoint"`
	// The directory is dynamically generated according to the time. The default value is% Y/%m/%d/%H/%M. The corresponding generated directory is, for example, 2017/01/23/12/00. Note that the partition format cannot start and end. Example values:%Y/%m/%d
	PathFormat *string `pulumi:"pathFormat"`
	// The partition format type. only support time
	PathFormatType *string `pulumi:"pathFormatType"`
	// The prefix of the OSS object.
	Prefix *string `pulumi:"prefix"`
	// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
	RoleArn string `pulumi:"roleArn"`
	// The suffix of the OSS object.
	Suffix *string `pulumi:"suffix"`
	// The time zone. Example value: +0800
	TimeZone string `pulumi:"timeZone"`
}

// OssExportSinkConfigurationSinkInput is an input type that accepts OssExportSinkConfigurationSinkArgs and OssExportSinkConfigurationSinkOutput values.
// You can construct a concrete instance of `OssExportSinkConfigurationSinkInput` via:
//
//	OssExportSinkConfigurationSinkArgs{...}
type OssExportSinkConfigurationSinkInput interface {
	pulumi.Input

	ToOssExportSinkConfigurationSinkOutput() OssExportSinkConfigurationSinkOutput
	ToOssExportSinkConfigurationSinkOutputWithContext(context.Context) OssExportSinkConfigurationSinkOutput
}

type OssExportSinkConfigurationSinkArgs struct {
	// The OSS bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The interval between two data shipping operations. Valid values: 300 to 900. Unit: seconds.
	BufferInterval pulumi.StringInput `pulumi:"bufferInterval"`
	// The size of the OSS object to which data is shipped. Valid values: 5 to 256. Unit: MB.
	BufferSize pulumi.StringInput `pulumi:"bufferSize"`
	// Supports four compression types, such as snappy, gzip, zstd, and none.
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	// The OSS file content details. Note: the value of this parameter should be updated based on the value of the contentType parameter.
	//
	// If the contentType value is JSON, the parameters of the contentDetail value are as follows:
	//
	// If the tag is allowed to be posted, the value of the parameter enableTag is true. Example:{"enableTag": true}
	//
	// You are not allowed to post tags. The value of the parameter enableTag is false. Example:{"enableTag": false}
	//
	// If the contentType value is csv, the parameters of the contentDetail value are as follows:
	//
	// The parameter columns is the key of the log in the source logstore.
	//
	// The delimiter parameter, which can be ",","|","", or "\t".
	//
	// The header parameter determines whether the OSS file retains the header. The optional value is true or false.
	//
	// The lineFeed parameter. Optional values are "\t", "\n", or "".
	//
	// The invalid field content parameter is null to specify the delivery content when the field name does not exist.
	//
	// The escape character parameter "quote". Optional values are "" "," '", or" ".
	//
	// Example:{"null": "-", "header": false, "lineFeed": "\n", "quote": "", "delimiter": ",", "columns": ["a", "B", "c", "d"]}
	//
	// When the contentType value is parquet, the parameters of the contentDetail value are as follows:
	//
	// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
	//
	// When the contentType value is set to orc, the parameters of the contentDetail value are as follows:
	//
	// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
	ContentDetail pulumi.StringInput `pulumi:"contentDetail"`
	// The storage format of the OSS object. Valid values: json, parquet, csv, and orc.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The latency of data shipping. The value of this parameter cannot exceed the data retention period of the source Logstore.
	DelaySeconds pulumi.IntPtrInput `pulumi:"delaySeconds"`
	// The OSS Endpoint can only be an OSS intranet Endpoint and only supports the same region. Example value: https://oss-cn-hangzhou-internal.aliyuncs.com
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The directory is dynamically generated according to the time. The default value is% Y/%m/%d/%H/%M. The corresponding generated directory is, for example, 2017/01/23/12/00. Note that the partition format cannot start and end. Example values:%Y/%m/%d
	PathFormat pulumi.StringPtrInput `pulumi:"pathFormat"`
	// The partition format type. only support time
	PathFormatType pulumi.StringPtrInput `pulumi:"pathFormatType"`
	// The prefix of the OSS object.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The suffix of the OSS object.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// The time zone. Example value: +0800
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (OssExportSinkConfigurationSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OssExportSinkConfigurationSink)(nil)).Elem()
}

func (i OssExportSinkConfigurationSinkArgs) ToOssExportSinkConfigurationSinkOutput() OssExportSinkConfigurationSinkOutput {
	return i.ToOssExportSinkConfigurationSinkOutputWithContext(context.Background())
}

func (i OssExportSinkConfigurationSinkArgs) ToOssExportSinkConfigurationSinkOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationSinkOutput)
}

func (i OssExportSinkConfigurationSinkArgs) ToOssExportSinkConfigurationSinkPtrOutput() OssExportSinkConfigurationSinkPtrOutput {
	return i.ToOssExportSinkConfigurationSinkPtrOutputWithContext(context.Background())
}

func (i OssExportSinkConfigurationSinkArgs) ToOssExportSinkConfigurationSinkPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationSinkOutput).ToOssExportSinkConfigurationSinkPtrOutputWithContext(ctx)
}

// OssExportSinkConfigurationSinkPtrInput is an input type that accepts OssExportSinkConfigurationSinkArgs, OssExportSinkConfigurationSinkPtr and OssExportSinkConfigurationSinkPtrOutput values.
// You can construct a concrete instance of `OssExportSinkConfigurationSinkPtrInput` via:
//
//	        OssExportSinkConfigurationSinkArgs{...}
//
//	or:
//
//	        nil
type OssExportSinkConfigurationSinkPtrInput interface {
	pulumi.Input

	ToOssExportSinkConfigurationSinkPtrOutput() OssExportSinkConfigurationSinkPtrOutput
	ToOssExportSinkConfigurationSinkPtrOutputWithContext(context.Context) OssExportSinkConfigurationSinkPtrOutput
}

type ossExportSinkConfigurationSinkPtrType OssExportSinkConfigurationSinkArgs

func OssExportSinkConfigurationSinkPtr(v *OssExportSinkConfigurationSinkArgs) OssExportSinkConfigurationSinkPtrInput {
	return (*ossExportSinkConfigurationSinkPtrType)(v)
}

func (*ossExportSinkConfigurationSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OssExportSinkConfigurationSink)(nil)).Elem()
}

func (i *ossExportSinkConfigurationSinkPtrType) ToOssExportSinkConfigurationSinkPtrOutput() OssExportSinkConfigurationSinkPtrOutput {
	return i.ToOssExportSinkConfigurationSinkPtrOutputWithContext(context.Background())
}

func (i *ossExportSinkConfigurationSinkPtrType) ToOssExportSinkConfigurationSinkPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OssExportSinkConfigurationSinkPtrOutput)
}

type OssExportSinkConfigurationSinkOutput struct{ *pulumi.OutputState }

func (OssExportSinkConfigurationSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OssExportSinkConfigurationSink)(nil)).Elem()
}

func (o OssExportSinkConfigurationSinkOutput) ToOssExportSinkConfigurationSinkOutput() OssExportSinkConfigurationSinkOutput {
	return o
}

func (o OssExportSinkConfigurationSinkOutput) ToOssExportSinkConfigurationSinkOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkOutput {
	return o
}

func (o OssExportSinkConfigurationSinkOutput) ToOssExportSinkConfigurationSinkPtrOutput() OssExportSinkConfigurationSinkPtrOutput {
	return o.ToOssExportSinkConfigurationSinkPtrOutputWithContext(context.Background())
}

func (o OssExportSinkConfigurationSinkOutput) ToOssExportSinkConfigurationSinkPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OssExportSinkConfigurationSink) *OssExportSinkConfigurationSink {
		return &v
	}).(OssExportSinkConfigurationSinkPtrOutput)
}

// The OSS bucket.
func (o OssExportSinkConfigurationSinkOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.Bucket }).(pulumi.StringOutput)
}

// The interval between two data shipping operations. Valid values: 300 to 900. Unit: seconds.
func (o OssExportSinkConfigurationSinkOutput) BufferInterval() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.BufferInterval }).(pulumi.StringOutput)
}

// The size of the OSS object to which data is shipped. Valid values: 5 to 256. Unit: MB.
func (o OssExportSinkConfigurationSinkOutput) BufferSize() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.BufferSize }).(pulumi.StringOutput)
}

// Supports four compression types, such as snappy, gzip, zstd, and none.
func (o OssExportSinkConfigurationSinkOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.CompressionType }).(pulumi.StringOutput)
}

// The OSS file content details. Note: the value of this parameter should be updated based on the value of the contentType parameter.
//
// If the contentType value is JSON, the parameters of the contentDetail value are as follows:
//
// If the tag is allowed to be posted, the value of the parameter enableTag is true. Example:{"enableTag": true}
//
// You are not allowed to post tags. The value of the parameter enableTag is false. Example:{"enableTag": false}
//
// If the contentType value is csv, the parameters of the contentDetail value are as follows:
//
// The parameter columns is the key of the log in the source logstore.
//
// The delimiter parameter, which can be ",","|","", or "\t".
//
// The header parameter determines whether the OSS file retains the header. The optional value is true or false.
//
// The lineFeed parameter. Optional values are "\t", "\n", or "".
//
// The invalid field content parameter is null to specify the delivery content when the field name does not exist.
//
// The escape character parameter "quote". Optional values are "" "," '", or" ".
//
// Example:{"null": "-", "header": false, "lineFeed": "\n", "quote": "", "delimiter": ",", "columns": ["a", "B", "c", "d"]}
//
// When the contentType value is parquet, the parameters of the contentDetail value are as follows:
//
// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
//
// When the contentType value is set to orc, the parameters of the contentDetail value are as follows:
//
// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
func (o OssExportSinkConfigurationSinkOutput) ContentDetail() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.ContentDetail }).(pulumi.StringOutput)
}

// The storage format of the OSS object. Valid values: json, parquet, csv, and orc.
func (o OssExportSinkConfigurationSinkOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.ContentType }).(pulumi.StringOutput)
}

// The latency of data shipping. The value of this parameter cannot exceed the data retention period of the source Logstore.
func (o OssExportSinkConfigurationSinkOutput) DelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) *int { return v.DelaySeconds }).(pulumi.IntPtrOutput)
}

// The OSS Endpoint can only be an OSS intranet Endpoint and only supports the same region. Example value: https://oss-cn-hangzhou-internal.aliyuncs.com
func (o OssExportSinkConfigurationSinkOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The directory is dynamically generated according to the time. The default value is% Y/%m/%d/%H/%M. The corresponding generated directory is, for example, 2017/01/23/12/00. Note that the partition format cannot start and end. Example values:%Y/%m/%d
func (o OssExportSinkConfigurationSinkOutput) PathFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) *string { return v.PathFormat }).(pulumi.StringPtrOutput)
}

// The partition format type. only support time
func (o OssExportSinkConfigurationSinkOutput) PathFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) *string { return v.PathFormatType }).(pulumi.StringPtrOutput)
}

// The prefix of the OSS object.
func (o OssExportSinkConfigurationSinkOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
func (o OssExportSinkConfigurationSinkOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The suffix of the OSS object.
func (o OssExportSinkConfigurationSinkOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

// The time zone. Example value: +0800
func (o OssExportSinkConfigurationSinkOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v OssExportSinkConfigurationSink) string { return v.TimeZone }).(pulumi.StringOutput)
}

type OssExportSinkConfigurationSinkPtrOutput struct{ *pulumi.OutputState }

func (OssExportSinkConfigurationSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OssExportSinkConfigurationSink)(nil)).Elem()
}

func (o OssExportSinkConfigurationSinkPtrOutput) ToOssExportSinkConfigurationSinkPtrOutput() OssExportSinkConfigurationSinkPtrOutput {
	return o
}

func (o OssExportSinkConfigurationSinkPtrOutput) ToOssExportSinkConfigurationSinkPtrOutputWithContext(ctx context.Context) OssExportSinkConfigurationSinkPtrOutput {
	return o
}

func (o OssExportSinkConfigurationSinkPtrOutput) Elem() OssExportSinkConfigurationSinkOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) OssExportSinkConfigurationSink {
		if v != nil {
			return *v
		}
		var ret OssExportSinkConfigurationSink
		return ret
	}).(OssExportSinkConfigurationSinkOutput)
}

// The OSS bucket.
func (o OssExportSinkConfigurationSinkPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The interval between two data shipping operations. Valid values: 300 to 900. Unit: seconds.
func (o OssExportSinkConfigurationSinkPtrOutput) BufferInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.BufferInterval
	}).(pulumi.StringPtrOutput)
}

// The size of the OSS object to which data is shipped. Valid values: 5 to 256. Unit: MB.
func (o OssExportSinkConfigurationSinkPtrOutput) BufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.BufferSize
	}).(pulumi.StringPtrOutput)
}

// Supports four compression types, such as snappy, gzip, zstd, and none.
func (o OssExportSinkConfigurationSinkPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// The OSS file content details. Note: the value of this parameter should be updated based on the value of the contentType parameter.
//
// If the contentType value is JSON, the parameters of the contentDetail value are as follows:
//
// If the tag is allowed to be posted, the value of the parameter enableTag is true. Example:{"enableTag": true}
//
// You are not allowed to post tags. The value of the parameter enableTag is false. Example:{"enableTag": false}
//
// If the contentType value is csv, the parameters of the contentDetail value are as follows:
//
// The parameter columns is the key of the log in the source logstore.
//
// The delimiter parameter, which can be ",","|","", or "\t".
//
// The header parameter determines whether the OSS file retains the header. The optional value is true or false.
//
// The lineFeed parameter. Optional values are "\t", "\n", or "".
//
// The invalid field content parameter is null to specify the delivery content when the field name does not exist.
//
// The escape character parameter "quote". Optional values are "" "," '", or" ".
//
// Example:{"null": "-", "header": false, "lineFeed": "\n", "quote": "", "delimiter": ",", "columns": ["a", "B", "c", "d"]}
//
// When the contentType value is parquet, the parameters of the contentDetail value are as follows:
//
// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
//
// When the contentType value is set to orc, the parameters of the contentDetail value are as follows:
//
// The columns parameter is the key of the log in the source Logstore and must carry the data type of the key, for example:{"columns": [{"name": "a", "type": "string"}, {"name": "B", "type": "string"}, {"name": "c", "type": "string": "string"}]}
func (o OssExportSinkConfigurationSinkPtrOutput) ContentDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.ContentDetail
	}).(pulumi.StringPtrOutput)
}

// The storage format of the OSS object. Valid values: json, parquet, csv, and orc.
func (o OssExportSinkConfigurationSinkPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The latency of data shipping. The value of this parameter cannot exceed the data retention period of the source Logstore.
func (o OssExportSinkConfigurationSinkPtrOutput) DelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *int {
		if v == nil {
			return nil
		}
		return v.DelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The OSS Endpoint can only be an OSS intranet Endpoint and only supports the same region. Example value: https://oss-cn-hangzhou-internal.aliyuncs.com
func (o OssExportSinkConfigurationSinkPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The directory is dynamically generated according to the time. The default value is% Y/%m/%d/%H/%M. The corresponding generated directory is, for example, 2017/01/23/12/00. Note that the partition format cannot start and end. Example values:%Y/%m/%d
func (o OssExportSinkConfigurationSinkPtrOutput) PathFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return v.PathFormat
	}).(pulumi.StringPtrOutput)
}

// The partition format type. only support time
func (o OssExportSinkConfigurationSinkPtrOutput) PathFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return v.PathFormatType
	}).(pulumi.StringPtrOutput)
}

// The prefix of the OSS object.
func (o OssExportSinkConfigurationSinkPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the RAM role that is used to write data to OSS. Example value: acs:ram::xxxxxxx
func (o OssExportSinkConfigurationSinkPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The suffix of the OSS object.
func (o OssExportSinkConfigurationSinkPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// The time zone. Example value: +0800
func (o OssExportSinkConfigurationSinkPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OssExportSinkConfigurationSink) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type ScheduledSqlSchedule struct {
	// Cron expression, minimum precision is minutes, 24-hour clock. For example, 0 0/1 **indicates that the check is performed every one hour from 00:00. When type is set to Cron, cronExpression must be set.
	CronExpression *string `pulumi:"cronExpression"`
	// Delay time.
	Delay *int `pulumi:"delay"`
	// Time interval, such as 5m, 1H.
	Interval *string `pulumi:"interval"`
	// Whether to execute the OSS import task immediately after it is created.
	RunImmediately *bool `pulumi:"runImmediately"`
	// Time Zone.
	TimeZone *string `pulumi:"timeZone"`
	// Check the frequency type. Log Service checks the query and analysis results based on the frequency you configured. The value is as follows: FixedRate: checks the query and analysis results at fixed intervals. Cron: specifies a time interval through a Cron expression, and checks the query and analysis results at the specified time interval. Weekly: Check the query and analysis results at a fixed point in time on the day of the week. Daily: checks the query and analysis results at a fixed time point every day. Hourly: Check query and analysis results every hour.
	Type *string `pulumi:"type"`
}

// ScheduledSqlScheduleInput is an input type that accepts ScheduledSqlScheduleArgs and ScheduledSqlScheduleOutput values.
// You can construct a concrete instance of `ScheduledSqlScheduleInput` via:
//
//	ScheduledSqlScheduleArgs{...}
type ScheduledSqlScheduleInput interface {
	pulumi.Input

	ToScheduledSqlScheduleOutput() ScheduledSqlScheduleOutput
	ToScheduledSqlScheduleOutputWithContext(context.Context) ScheduledSqlScheduleOutput
}

type ScheduledSqlScheduleArgs struct {
	// Cron expression, minimum precision is minutes, 24-hour clock. For example, 0 0/1 **indicates that the check is performed every one hour from 00:00. When type is set to Cron, cronExpression must be set.
	CronExpression pulumi.StringPtrInput `pulumi:"cronExpression"`
	// Delay time.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Time interval, such as 5m, 1H.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Whether to execute the OSS import task immediately after it is created.
	RunImmediately pulumi.BoolPtrInput `pulumi:"runImmediately"`
	// Time Zone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Check the frequency type. Log Service checks the query and analysis results based on the frequency you configured. The value is as follows: FixedRate: checks the query and analysis results at fixed intervals. Cron: specifies a time interval through a Cron expression, and checks the query and analysis results at the specified time interval. Weekly: Check the query and analysis results at a fixed point in time on the day of the week. Daily: checks the query and analysis results at a fixed time point every day. Hourly: Check query and analysis results every hour.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ScheduledSqlScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlSchedule)(nil)).Elem()
}

func (i ScheduledSqlScheduleArgs) ToScheduledSqlScheduleOutput() ScheduledSqlScheduleOutput {
	return i.ToScheduledSqlScheduleOutputWithContext(context.Background())
}

func (i ScheduledSqlScheduleArgs) ToScheduledSqlScheduleOutputWithContext(ctx context.Context) ScheduledSqlScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlScheduleOutput)
}

func (i ScheduledSqlScheduleArgs) ToScheduledSqlSchedulePtrOutput() ScheduledSqlSchedulePtrOutput {
	return i.ToScheduledSqlSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduledSqlScheduleArgs) ToScheduledSqlSchedulePtrOutputWithContext(ctx context.Context) ScheduledSqlSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlScheduleOutput).ToScheduledSqlSchedulePtrOutputWithContext(ctx)
}

// ScheduledSqlSchedulePtrInput is an input type that accepts ScheduledSqlScheduleArgs, ScheduledSqlSchedulePtr and ScheduledSqlSchedulePtrOutput values.
// You can construct a concrete instance of `ScheduledSqlSchedulePtrInput` via:
//
//	        ScheduledSqlScheduleArgs{...}
//
//	or:
//
//	        nil
type ScheduledSqlSchedulePtrInput interface {
	pulumi.Input

	ToScheduledSqlSchedulePtrOutput() ScheduledSqlSchedulePtrOutput
	ToScheduledSqlSchedulePtrOutputWithContext(context.Context) ScheduledSqlSchedulePtrOutput
}

type scheduledSqlSchedulePtrType ScheduledSqlScheduleArgs

func ScheduledSqlSchedulePtr(v *ScheduledSqlScheduleArgs) ScheduledSqlSchedulePtrInput {
	return (*scheduledSqlSchedulePtrType)(v)
}

func (*scheduledSqlSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlSchedule)(nil)).Elem()
}

func (i *scheduledSqlSchedulePtrType) ToScheduledSqlSchedulePtrOutput() ScheduledSqlSchedulePtrOutput {
	return i.ToScheduledSqlSchedulePtrOutputWithContext(context.Background())
}

func (i *scheduledSqlSchedulePtrType) ToScheduledSqlSchedulePtrOutputWithContext(ctx context.Context) ScheduledSqlSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlSchedulePtrOutput)
}

type ScheduledSqlScheduleOutput struct{ *pulumi.OutputState }

func (ScheduledSqlScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlSchedule)(nil)).Elem()
}

func (o ScheduledSqlScheduleOutput) ToScheduledSqlScheduleOutput() ScheduledSqlScheduleOutput {
	return o
}

func (o ScheduledSqlScheduleOutput) ToScheduledSqlScheduleOutputWithContext(ctx context.Context) ScheduledSqlScheduleOutput {
	return o
}

func (o ScheduledSqlScheduleOutput) ToScheduledSqlSchedulePtrOutput() ScheduledSqlSchedulePtrOutput {
	return o.ToScheduledSqlSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduledSqlScheduleOutput) ToScheduledSqlSchedulePtrOutputWithContext(ctx context.Context) ScheduledSqlSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledSqlSchedule) *ScheduledSqlSchedule {
		return &v
	}).(ScheduledSqlSchedulePtrOutput)
}

// Cron expression, minimum precision is minutes, 24-hour clock. For example, 0 0/1 **indicates that the check is performed every one hour from 00:00. When type is set to Cron, cronExpression must be set.
func (o ScheduledSqlScheduleOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *string { return v.CronExpression }).(pulumi.StringPtrOutput)
}

// Delay time.
func (o ScheduledSqlScheduleOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Time interval, such as 5m, 1H.
func (o ScheduledSqlScheduleOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Whether to execute the OSS import task immediately after it is created.
func (o ScheduledSqlScheduleOutput) RunImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *bool { return v.RunImmediately }).(pulumi.BoolPtrOutput)
}

// Time Zone.
func (o ScheduledSqlScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Check the frequency type. Log Service checks the query and analysis results based on the frequency you configured. The value is as follows: FixedRate: checks the query and analysis results at fixed intervals. Cron: specifies a time interval through a Cron expression, and checks the query and analysis results at the specified time interval. Weekly: Check the query and analysis results at a fixed point in time on the day of the week. Daily: checks the query and analysis results at a fixed time point every day. Hourly: Check query and analysis results every hour.
func (o ScheduledSqlScheduleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlSchedule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ScheduledSqlSchedulePtrOutput struct{ *pulumi.OutputState }

func (ScheduledSqlSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlSchedule)(nil)).Elem()
}

func (o ScheduledSqlSchedulePtrOutput) ToScheduledSqlSchedulePtrOutput() ScheduledSqlSchedulePtrOutput {
	return o
}

func (o ScheduledSqlSchedulePtrOutput) ToScheduledSqlSchedulePtrOutputWithContext(ctx context.Context) ScheduledSqlSchedulePtrOutput {
	return o
}

func (o ScheduledSqlSchedulePtrOutput) Elem() ScheduledSqlScheduleOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) ScheduledSqlSchedule {
		if v != nil {
			return *v
		}
		var ret ScheduledSqlSchedule
		return ret
	}).(ScheduledSqlScheduleOutput)
}

// Cron expression, minimum precision is minutes, 24-hour clock. For example, 0 0/1 **indicates that the check is performed every one hour from 00:00. When type is set to Cron, cronExpression must be set.
func (o ScheduledSqlSchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *string {
		if v == nil {
			return nil
		}
		return v.CronExpression
	}).(pulumi.StringPtrOutput)
}

// Delay time.
func (o ScheduledSqlSchedulePtrOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *int {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(pulumi.IntPtrOutput)
}

// Time interval, such as 5m, 1H.
func (o ScheduledSqlSchedulePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Whether to execute the OSS import task immediately after it is created.
func (o ScheduledSqlSchedulePtrOutput) RunImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.RunImmediately
	}).(pulumi.BoolPtrOutput)
}

// Time Zone.
func (o ScheduledSqlSchedulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Check the frequency type. Log Service checks the query and analysis results based on the frequency you configured. The value is as follows: FixedRate: checks the query and analysis results at fixed intervals. Cron: specifies a time interval through a Cron expression, and checks the query and analysis results at the specified time interval. Weekly: Check the query and analysis results at a fixed point in time on the day of the week. Daily: checks the query and analysis results at a fixed time point every day. Hourly: Check query and analysis results every hour.
func (o ScheduledSqlSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ScheduledSqlScheduledSqlConfiguration struct {
	// Write Mode.
	DataFormat *string `pulumi:"dataFormat"`
	// Target Endpoint.
	DestEndpoint *string `pulumi:"destEndpoint"`
	// Target Logstore.
	DestLogstore *string `pulumi:"destLogstore"`
	// Target Project.
	DestProject *string `pulumi:"destProject"`
	// Write target role ARN.
	DestRoleArn *string `pulumi:"destRoleArn"`
	// Schedule Start Time.
	FromTime *int `pulumi:"fromTime"`
	// SQL time window-start.
	FromTimeExpr *string `pulumi:"fromTimeExpr"`
	// Maximum retries.
	MaxRetries *int `pulumi:"maxRetries"`
	// SQL timeout.
	MaxRunTimeInSeconds *int `pulumi:"maxRunTimeInSeconds"`
	// Parameter configuration.
	Parameters map[string]string `pulumi:"parameters"`
	// Resource Pool.
	ResourcePool *string `pulumi:"resourcePool"`
	// Read role ARN.
	RoleArn *string `pulumi:"roleArn"`
	// SQL statement.
	Script *string `pulumi:"script"`
	// Source Logstore.
	SourceLogstore *string `pulumi:"sourceLogstore"`
	// SQL type.
	SqlType *string `pulumi:"sqlType"`
	// Time at end of schedule.
	ToTime *int `pulumi:"toTime"`
	// SQL time window-end.
	ToTimeExpr *string `pulumi:"toTimeExpr"`
}

// ScheduledSqlScheduledSqlConfigurationInput is an input type that accepts ScheduledSqlScheduledSqlConfigurationArgs and ScheduledSqlScheduledSqlConfigurationOutput values.
// You can construct a concrete instance of `ScheduledSqlScheduledSqlConfigurationInput` via:
//
//	ScheduledSqlScheduledSqlConfigurationArgs{...}
type ScheduledSqlScheduledSqlConfigurationInput interface {
	pulumi.Input

	ToScheduledSqlScheduledSqlConfigurationOutput() ScheduledSqlScheduledSqlConfigurationOutput
	ToScheduledSqlScheduledSqlConfigurationOutputWithContext(context.Context) ScheduledSqlScheduledSqlConfigurationOutput
}

type ScheduledSqlScheduledSqlConfigurationArgs struct {
	// Write Mode.
	DataFormat pulumi.StringPtrInput `pulumi:"dataFormat"`
	// Target Endpoint.
	DestEndpoint pulumi.StringPtrInput `pulumi:"destEndpoint"`
	// Target Logstore.
	DestLogstore pulumi.StringPtrInput `pulumi:"destLogstore"`
	// Target Project.
	DestProject pulumi.StringPtrInput `pulumi:"destProject"`
	// Write target role ARN.
	DestRoleArn pulumi.StringPtrInput `pulumi:"destRoleArn"`
	// Schedule Start Time.
	FromTime pulumi.IntPtrInput `pulumi:"fromTime"`
	// SQL time window-start.
	FromTimeExpr pulumi.StringPtrInput `pulumi:"fromTimeExpr"`
	// Maximum retries.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// SQL timeout.
	MaxRunTimeInSeconds pulumi.IntPtrInput `pulumi:"maxRunTimeInSeconds"`
	// Parameter configuration.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Resource Pool.
	ResourcePool pulumi.StringPtrInput `pulumi:"resourcePool"`
	// Read role ARN.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// SQL statement.
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Source Logstore.
	SourceLogstore pulumi.StringPtrInput `pulumi:"sourceLogstore"`
	// SQL type.
	SqlType pulumi.StringPtrInput `pulumi:"sqlType"`
	// Time at end of schedule.
	ToTime pulumi.IntPtrInput `pulumi:"toTime"`
	// SQL time window-end.
	ToTimeExpr pulumi.StringPtrInput `pulumi:"toTimeExpr"`
}

func (ScheduledSqlScheduledSqlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlScheduledSqlConfiguration)(nil)).Elem()
}

func (i ScheduledSqlScheduledSqlConfigurationArgs) ToScheduledSqlScheduledSqlConfigurationOutput() ScheduledSqlScheduledSqlConfigurationOutput {
	return i.ToScheduledSqlScheduledSqlConfigurationOutputWithContext(context.Background())
}

func (i ScheduledSqlScheduledSqlConfigurationArgs) ToScheduledSqlScheduledSqlConfigurationOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlScheduledSqlConfigurationOutput)
}

func (i ScheduledSqlScheduledSqlConfigurationArgs) ToScheduledSqlScheduledSqlConfigurationPtrOutput() ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return i.ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledSqlScheduledSqlConfigurationArgs) ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlScheduledSqlConfigurationOutput).ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(ctx)
}

// ScheduledSqlScheduledSqlConfigurationPtrInput is an input type that accepts ScheduledSqlScheduledSqlConfigurationArgs, ScheduledSqlScheduledSqlConfigurationPtr and ScheduledSqlScheduledSqlConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledSqlScheduledSqlConfigurationPtrInput` via:
//
//	        ScheduledSqlScheduledSqlConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledSqlScheduledSqlConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledSqlScheduledSqlConfigurationPtrOutput() ScheduledSqlScheduledSqlConfigurationPtrOutput
	ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(context.Context) ScheduledSqlScheduledSqlConfigurationPtrOutput
}

type scheduledSqlScheduledSqlConfigurationPtrType ScheduledSqlScheduledSqlConfigurationArgs

func ScheduledSqlScheduledSqlConfigurationPtr(v *ScheduledSqlScheduledSqlConfigurationArgs) ScheduledSqlScheduledSqlConfigurationPtrInput {
	return (*scheduledSqlScheduledSqlConfigurationPtrType)(v)
}

func (*scheduledSqlScheduledSqlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlScheduledSqlConfiguration)(nil)).Elem()
}

func (i *scheduledSqlScheduledSqlConfigurationPtrType) ToScheduledSqlScheduledSqlConfigurationPtrOutput() ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return i.ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledSqlScheduledSqlConfigurationPtrType) ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlScheduledSqlConfigurationPtrOutput)
}

type ScheduledSqlScheduledSqlConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledSqlScheduledSqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlScheduledSqlConfiguration)(nil)).Elem()
}

func (o ScheduledSqlScheduledSqlConfigurationOutput) ToScheduledSqlScheduledSqlConfigurationOutput() ScheduledSqlScheduledSqlConfigurationOutput {
	return o
}

func (o ScheduledSqlScheduledSqlConfigurationOutput) ToScheduledSqlScheduledSqlConfigurationOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationOutput {
	return o
}

func (o ScheduledSqlScheduledSqlConfigurationOutput) ToScheduledSqlScheduledSqlConfigurationPtrOutput() ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return o.ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledSqlScheduledSqlConfigurationOutput) ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledSqlScheduledSqlConfiguration) *ScheduledSqlScheduledSqlConfiguration {
		return &v
	}).(ScheduledSqlScheduledSqlConfigurationPtrOutput)
}

// Write Mode.
func (o ScheduledSqlScheduledSqlConfigurationOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// Target Endpoint.
func (o ScheduledSqlScheduledSqlConfigurationOutput) DestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.DestEndpoint }).(pulumi.StringPtrOutput)
}

// Target Logstore.
func (o ScheduledSqlScheduledSqlConfigurationOutput) DestLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.DestLogstore }).(pulumi.StringPtrOutput)
}

// Target Project.
func (o ScheduledSqlScheduledSqlConfigurationOutput) DestProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.DestProject }).(pulumi.StringPtrOutput)
}

// Write target role ARN.
func (o ScheduledSqlScheduledSqlConfigurationOutput) DestRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.DestRoleArn }).(pulumi.StringPtrOutput)
}

// Schedule Start Time.
func (o ScheduledSqlScheduledSqlConfigurationOutput) FromTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *int { return v.FromTime }).(pulumi.IntPtrOutput)
}

// SQL time window-start.
func (o ScheduledSqlScheduledSqlConfigurationOutput) FromTimeExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.FromTimeExpr }).(pulumi.StringPtrOutput)
}

// Maximum retries.
func (o ScheduledSqlScheduledSqlConfigurationOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// SQL timeout.
func (o ScheduledSqlScheduledSqlConfigurationOutput) MaxRunTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *int { return v.MaxRunTimeInSeconds }).(pulumi.IntPtrOutput)
}

// Parameter configuration.
func (o ScheduledSqlScheduledSqlConfigurationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Resource Pool.
func (o ScheduledSqlScheduledSqlConfigurationOutput) ResourcePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.ResourcePool }).(pulumi.StringPtrOutput)
}

// Read role ARN.
func (o ScheduledSqlScheduledSqlConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// SQL statement.
func (o ScheduledSqlScheduledSqlConfigurationOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Source Logstore.
func (o ScheduledSqlScheduledSqlConfigurationOutput) SourceLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.SourceLogstore }).(pulumi.StringPtrOutput)
}

// SQL type.
func (o ScheduledSqlScheduledSqlConfigurationOutput) SqlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.SqlType }).(pulumi.StringPtrOutput)
}

// Time at end of schedule.
func (o ScheduledSqlScheduledSqlConfigurationOutput) ToTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *int { return v.ToTime }).(pulumi.IntPtrOutput)
}

// SQL time window-end.
func (o ScheduledSqlScheduledSqlConfigurationOutput) ToTimeExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlScheduledSqlConfiguration) *string { return v.ToTimeExpr }).(pulumi.StringPtrOutput)
}

type ScheduledSqlScheduledSqlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledSqlScheduledSqlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlScheduledSqlConfiguration)(nil)).Elem()
}

func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) ToScheduledSqlScheduledSqlConfigurationPtrOutput() ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return o
}

func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) ToScheduledSqlScheduledSqlConfigurationPtrOutputWithContext(ctx context.Context) ScheduledSqlScheduledSqlConfigurationPtrOutput {
	return o
}

func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) Elem() ScheduledSqlScheduledSqlConfigurationOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) ScheduledSqlScheduledSqlConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledSqlScheduledSqlConfiguration
		return ret
	}).(ScheduledSqlScheduledSqlConfigurationOutput)
}

// Write Mode.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// Target Endpoint.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) DestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestEndpoint
	}).(pulumi.StringPtrOutput)
}

// Target Logstore.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) DestLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestLogstore
	}).(pulumi.StringPtrOutput)
}

// Target Project.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) DestProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestProject
	}).(pulumi.StringPtrOutput)
}

// Write target role ARN.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) DestRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestRoleArn
	}).(pulumi.StringPtrOutput)
}

// Schedule Start Time.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) FromTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.FromTime
	}).(pulumi.IntPtrOutput)
}

// SQL time window-start.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) FromTimeExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FromTimeExpr
	}).(pulumi.StringPtrOutput)
}

// Maximum retries.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// SQL timeout.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) MaxRunTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRunTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Parameter configuration.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Resource Pool.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) ResourcePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePool
	}).(pulumi.StringPtrOutput)
}

// Read role ARN.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// SQL statement.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

// Source Logstore.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) SourceLogstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SourceLogstore
	}).(pulumi.StringPtrOutput)
}

// SQL type.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) SqlType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SqlType
	}).(pulumi.StringPtrOutput)
}

// Time at end of schedule.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) ToTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ToTime
	}).(pulumi.IntPtrOutput)
}

// SQL time window-end.
func (o ScheduledSqlScheduledSqlConfigurationPtrOutput) ToTimeExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlScheduledSqlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ToTimeExpr
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationInput)(nil)).Elem(), AlertConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationPtrInput)(nil)).Elem(), AlertConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationAnnotationInput)(nil)).Elem(), AlertConfigurationAnnotationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationAnnotationArrayInput)(nil)).Elem(), AlertConfigurationAnnotationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationConditionConfigurationInput)(nil)).Elem(), AlertConfigurationConditionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationConditionConfigurationPtrInput)(nil)).Elem(), AlertConfigurationConditionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationGroupConfigurationInput)(nil)).Elem(), AlertConfigurationGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationGroupConfigurationPtrInput)(nil)).Elem(), AlertConfigurationGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationJoinConfigurationInput)(nil)).Elem(), AlertConfigurationJoinConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationJoinConfigurationArrayInput)(nil)).Elem(), AlertConfigurationJoinConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationLabelInput)(nil)).Elem(), AlertConfigurationLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationLabelArrayInput)(nil)).Elem(), AlertConfigurationLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationPolicyConfigurationInput)(nil)).Elem(), AlertConfigurationPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationPolicyConfigurationPtrInput)(nil)).Elem(), AlertConfigurationPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationQueryListInput)(nil)).Elem(), AlertConfigurationQueryListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationQueryListArrayInput)(nil)).Elem(), AlertConfigurationQueryListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSeverityConfigurationInput)(nil)).Elem(), AlertConfigurationSeverityConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSeverityConfigurationArrayInput)(nil)).Elem(), AlertConfigurationSeverityConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSeverityConfigurationEvalConditionInput)(nil)).Elem(), AlertConfigurationSeverityConfigurationEvalConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSeverityConfigurationEvalConditionPtrInput)(nil)).Elem(), AlertConfigurationSeverityConfigurationEvalConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkAlerthubInput)(nil)).Elem(), AlertConfigurationSinkAlerthubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkAlerthubPtrInput)(nil)).Elem(), AlertConfigurationSinkAlerthubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkCmsInput)(nil)).Elem(), AlertConfigurationSinkCmsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkCmsPtrInput)(nil)).Elem(), AlertConfigurationSinkCmsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkEventStoreInput)(nil)).Elem(), AlertConfigurationSinkEventStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationSinkEventStorePtrInput)(nil)).Elem(), AlertConfigurationSinkEventStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationTemplateConfigurationInput)(nil)).Elem(), AlertConfigurationTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationTemplateConfigurationPtrInput)(nil)).Elem(), AlertConfigurationTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertScheduleInput)(nil)).Elem(), AlertScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertSchedulePtrInput)(nil)).Elem(), AlertScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyCentralizeConfigInput)(nil)).Elem(), CollectionPolicyCentralizeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyCentralizeConfigPtrInput)(nil)).Elem(), CollectionPolicyCentralizeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyDataConfigInput)(nil)).Elem(), CollectionPolicyDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyDataConfigPtrInput)(nil)).Elem(), CollectionPolicyDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyPolicyConfigInput)(nil)).Elem(), CollectionPolicyPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyPolicyConfigPtrInput)(nil)).Elem(), CollectionPolicyPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyResourceDirectoryInput)(nil)).Elem(), CollectionPolicyResourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionPolicyResourceDirectoryPtrInput)(nil)).Elem(), CollectionPolicyResourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssExportSinkConfigurationInput)(nil)).Elem(), OssExportSinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssExportSinkConfigurationPtrInput)(nil)).Elem(), OssExportSinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssExportSinkConfigurationSinkInput)(nil)).Elem(), OssExportSinkConfigurationSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OssExportSinkConfigurationSinkPtrInput)(nil)).Elem(), OssExportSinkConfigurationSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlScheduleInput)(nil)).Elem(), ScheduledSqlScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlSchedulePtrInput)(nil)).Elem(), ScheduledSqlScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlScheduledSqlConfigurationInput)(nil)).Elem(), ScheduledSqlScheduledSqlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlScheduledSqlConfigurationPtrInput)(nil)).Elem(), ScheduledSqlScheduledSqlConfigurationArgs{})
	pulumi.RegisterOutputType(AlertConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationAnnotationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationAnnotationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationConditionConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationConditionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationGroupConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationJoinConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationJoinConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationLabelOutput{})
	pulumi.RegisterOutputType(AlertConfigurationLabelArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationQueryListOutput{})
	pulumi.RegisterOutputType(AlertConfigurationQueryListArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSeverityConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSeverityConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSeverityConfigurationEvalConditionOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSeverityConfigurationEvalConditionPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkAlerthubOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkAlerthubPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkCmsOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkCmsPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkEventStoreOutput{})
	pulumi.RegisterOutputType(AlertConfigurationSinkEventStorePtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationTemplateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertScheduleOutput{})
	pulumi.RegisterOutputType(AlertSchedulePtrOutput{})
	pulumi.RegisterOutputType(CollectionPolicyCentralizeConfigOutput{})
	pulumi.RegisterOutputType(CollectionPolicyCentralizeConfigPtrOutput{})
	pulumi.RegisterOutputType(CollectionPolicyDataConfigOutput{})
	pulumi.RegisterOutputType(CollectionPolicyDataConfigPtrOutput{})
	pulumi.RegisterOutputType(CollectionPolicyPolicyConfigOutput{})
	pulumi.RegisterOutputType(CollectionPolicyPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(CollectionPolicyResourceDirectoryOutput{})
	pulumi.RegisterOutputType(CollectionPolicyResourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(OssExportSinkConfigurationOutput{})
	pulumi.RegisterOutputType(OssExportSinkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OssExportSinkConfigurationSinkOutput{})
	pulumi.RegisterOutputType(OssExportSinkConfigurationSinkPtrOutput{})
	pulumi.RegisterOutputType(ScheduledSqlScheduleOutput{})
	pulumi.RegisterOutputType(ScheduledSqlSchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduledSqlScheduledSqlConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledSqlScheduledSqlConfigurationPtrOutput{})
}
