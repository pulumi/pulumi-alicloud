// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Sls Machine Group available to the user.[What is Machine Group](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateMachineGroup)
//
// > **NOTE:** Available since v1.259.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// projectName := "project-for-machine-group-terraform";
// if param := cfg.Get("projectName"); param != ""{
// projectName = param
// }
// _, err := log.NewProject(ctx, "defaultyJqrue", &log.ProjectArgs{
// Description: pulumi.String("for terraform example"),
// Name: pulumi.String(projectName),
// })
// if err != nil {
// return err
// }
// defaultMachineGroup, err := sls.NewMachineGroup(ctx, "default", &sls.MachineGroupArgs{
// GroupName: pulumi.String("group1"),
// ProjectName: pulumi.String(projectName),
// MachineIdentifyType: pulumi.String("ip"),
// GroupAttribute: &sls.MachineGroupGroupAttributeArgs{
// GroupTopic: pulumi.String("example"),
// ExternalName: pulumi.String("example"),
// },
// MachineLists: pulumi.StringArray{
// pulumi.String("192.168.1.1"),
// },
// })
// if err != nil {
// return err
// }
// _default := sls.GetMachineGroupsOutput(ctx, sls.GetMachineGroupsOutputArgs{
// Ids: pulumi.StringArray{
// defaultMachineGroup.ID(),
// },
// GroupName: pulumi.String("group1"),
// ProjectName: pulumi.String(projectName),
// }, nil);
// ctx.Export("alicloudSlsMachineGroupExampleId", _default.ApplyT(func(_default sls.GetMachineGroupsResult) (*string, error) {
// return &default.Groups[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetMachineGroups(ctx *pulumi.Context, args *GetMachineGroupsArgs, opts ...pulumi.InvokeOption) (*GetMachineGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMachineGroupsResult
	err := ctx.Invoke("alicloud:sls/getMachineGroups:getMachineGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineGroups.
type GetMachineGroupsArgs struct {
	// Machine Group name
	GroupName *string `pulumi:"groupName"`
	// A list of Machine Group IDs. The value is formulated as `<project_name>:<group_name>`.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// Project name
	ProjectName string `pulumi:"projectName"`
}

// A collection of values returned by getMachineGroups.
type GetMachineGroupsResult struct {
	// Machine Group name
	GroupName *string `pulumi:"groupName"`
	// A list of Machine Group Entries. Each element contains the following attributes:
	Groups []GetMachineGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Machine Group IDs.
	Ids         []string `pulumi:"ids"`
	OutputFile  *string  `pulumi:"outputFile"`
	ProjectName string   `pulumi:"projectName"`
}

func GetMachineGroupsOutput(ctx *pulumi.Context, args GetMachineGroupsOutputArgs, opts ...pulumi.InvokeOption) GetMachineGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMachineGroupsResultOutput, error) {
			args := v.(GetMachineGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:sls/getMachineGroups:getMachineGroups", args, GetMachineGroupsResultOutput{}, options).(GetMachineGroupsResultOutput), nil
		}).(GetMachineGroupsResultOutput)
}

// A collection of arguments for invoking getMachineGroups.
type GetMachineGroupsOutputArgs struct {
	// Machine Group name
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// A list of Machine Group IDs. The value is formulated as `<project_name>:<group_name>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Project name
	ProjectName pulumi.StringInput `pulumi:"projectName"`
}

func (GetMachineGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getMachineGroups.
type GetMachineGroupsResultOutput struct{ *pulumi.OutputState }

func (GetMachineGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupsResult)(nil)).Elem()
}

func (o GetMachineGroupsResultOutput) ToGetMachineGroupsResultOutput() GetMachineGroupsResultOutput {
	return o
}

func (o GetMachineGroupsResultOutput) ToGetMachineGroupsResultOutputWithContext(ctx context.Context) GetMachineGroupsResultOutput {
	return o
}

// Machine Group name
func (o GetMachineGroupsResultOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// A list of Machine Group Entries. Each element contains the following attributes:
func (o GetMachineGroupsResultOutput) Groups() GetMachineGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) []GetMachineGroupsGroup { return v.Groups }).(GetMachineGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMachineGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Machine Group IDs.
func (o GetMachineGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetMachineGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetMachineGroupsResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupsResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMachineGroupsResultOutput{})
}
