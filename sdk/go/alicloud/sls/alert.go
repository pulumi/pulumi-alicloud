// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sls

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a SLS Alert resource.
//
// For information about SLS Alert and how to use it, see [What is Alert](https://www.alibabacloud.com/help/en/doc-detail/209202.html).
//
// > **NOTE:** Available since v1.223.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/sls"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			alertName := "openapi-terraform-alert"
//			if param := cfg.Get("alertName"); param != "" {
//				alertName = param
//			}
//			projectName := "terraform-alert-example"
//			if param := cfg.Get("projectName"); param != "" {
//				projectName = param
//			}
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultINsMgl, err := log.NewProject(ctx, "defaultINsMgl", &log.ProjectArgs{
//				Description: pulumi.Sprintf("%v-%v", projectName, _default.Result),
//				ProjectName: pulumi.Sprintf("%v-%v", projectName, _default.Result),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sls.NewAlert(ctx, "default", &sls.AlertArgs{
//				Schedule: &sls.AlertScheduleArgs{
//					Type:          pulumi.String("FixedRate"),
//					RunImmdiately: pulumi.Bool(true),
//					Interval:      pulumi.String("1m"),
//					TimeZone:      pulumi.String("+0800"),
//					Delay:         pulumi.Int(10),
//				},
//				DisplayName: pulumi.String("openapi-terraform"),
//				Description: pulumi.String("create alert"),
//				Status:      pulumi.String("ENABLED"),
//				Configuration: &sls.AlertConfigurationArgs{
//					GroupConfiguration: &sls.AlertConfigurationGroupConfigurationArgs{
//						Fields: pulumi.StringArray{
//							pulumi.String("a"),
//							pulumi.String("b"),
//						},
//						Type: pulumi.String("no_group"),
//					},
//					NoDataFire: pulumi.Bool(false),
//					Version:    pulumi.String("2"),
//					SeverityConfigurations: sls.AlertConfigurationSeverityConfigurationArray{
//						&sls.AlertConfigurationSeverityConfigurationArgs{
//							Severity: pulumi.Int(6),
//							EvalCondition: &sls.AlertConfigurationSeverityConfigurationEvalConditionArgs{
//								CountCondition: pulumi.String("cnt > 0"),
//								Condition:      pulumi.String("__count__ > 1"),
//							},
//						},
//					},
//					Labels: sls.AlertConfigurationLabelArray{
//						&sls.AlertConfigurationLabelArgs{
//							Key:   pulumi.String("a"),
//							Value: pulumi.String("b"),
//						},
//					},
//					AutoAnnotation: pulumi.Bool(true),
//					TemplateConfiguration: &sls.AlertConfigurationTemplateConfigurationArgs{
//						Lang: pulumi.String("cn"),
//						Tokens: pulumi.StringMap{
//							"a": pulumi.String("b"),
//						},
//						Annotations: pulumi.StringMap{
//							"x": pulumi.String("y"),
//						},
//						TemplateId: pulumi.String("sls.app.ack.autoscaler.cluster_unhealthy"),
//						Type:       pulumi.String("sys"),
//						Version:    pulumi.String("1.0"),
//					},
//					MuteUntil: pulumi.Int(0),
//					Annotations: sls.AlertConfigurationAnnotationArray{
//						&sls.AlertConfigurationAnnotationArgs{
//							Key:   pulumi.String("x"),
//							Value: pulumi.String("y"),
//						},
//					},
//					SendResolved: pulumi.Bool(false),
//					Threshold:    pulumi.Int(1),
//					SinkCms: &sls.AlertConfigurationSinkCmsArgs{
//						Enabled: pulumi.Bool(false),
//					},
//					ConditionConfiguration: &sls.AlertConfigurationConditionConfigurationArgs{
//						Condition:      pulumi.String("cnt > 3"),
//						CountCondition: pulumi.String("__count__ < 3"),
//					},
//					PolicyConfiguration: &sls.AlertConfigurationPolicyConfigurationArgs{
//						AlertPolicyId:  pulumi.String("sls.builtin.dynamic"),
//						ActionPolicyId: pulumi.String("wkb-action"),
//						RepeatInterval: pulumi.String("1m"),
//					},
//					Dashboard: pulumi.String("internal-alert"),
//					Type:      pulumi.String("tpl"),
//					QueryLists: sls.AlertConfigurationQueryListArray{
//						&sls.AlertConfigurationQueryListArgs{
//							Ui:           pulumi.String("{}"),
//							RoleArn:      pulumi.String("acs:ram::1654218965343050:role/aliyunslsalertmonitorrole"),
//							Query:        pulumi.String("* | select *"),
//							TimeSpanType: pulumi.String("Relative"),
//							Project:      defaultINsMgl.ProjectName,
//							PowerSqlMode: pulumi.String("disable"),
//							DashboardId:  pulumi.String("wkb-dashboard"),
//							ChartTitle:   pulumi.String("wkb-chart"),
//							Start:        pulumi.String("-15m"),
//							End:          pulumi.String("now"),
//							StoreType:    pulumi.String("log"),
//							Store:        pulumi.String("alert"),
//							Region:       pulumi.String("cn-shanghai"),
//						},
//						&sls.AlertConfigurationQueryListArgs{
//							StoreType: pulumi.String("meta"),
//							Store:     pulumi.String("user.rds_ip_whitelist"),
//						},
//						&sls.AlertConfigurationQueryListArgs{
//							StoreType: pulumi.String("meta"),
//							Store:     pulumi.String("myexample1"),
//						},
//					},
//					JoinConfigurations: sls.AlertConfigurationJoinConfigurationArray{
//						&sls.AlertConfigurationJoinConfigurationArgs{
//							Type:      pulumi.String("no_join"),
//							Condition: pulumi.String("aa"),
//						},
//						&sls.AlertConfigurationJoinConfigurationArgs{
//							Type:      pulumi.String("cross_join"),
//							Condition: pulumi.String("qqq"),
//						},
//						&sls.AlertConfigurationJoinConfigurationArgs{
//							Type:      pulumi.String("inner_join"),
//							Condition: pulumi.String("fefefe"),
//						},
//					},
//					SinkEventStore: &sls.AlertConfigurationSinkEventStoreArgs{
//						Enabled:    pulumi.Bool(true),
//						Endpoint:   pulumi.String("cn-shanghai-intranet.log.aliyuncs.com"),
//						Project:    pulumi.String("wkb-wangren"),
//						EventStore: pulumi.String("alert"),
//						RoleArn:    pulumi.String("acs:ram::1654218965343050:role/aliyunlogetlrole"),
//					},
//					SinkAlerthub: &sls.AlertConfigurationSinkAlerthubArgs{
//						Enabled: pulumi.Bool(false),
//					},
//					NoDataSeverity: pulumi.Int(6),
//					Tags: pulumi.StringArray{
//						pulumi.String("wkb"),
//						pulumi.String("wangren"),
//						pulumi.String("sls"),
//					},
//				},
//				AlertName:   pulumi.String(alertName),
//				ProjectName: defaultINsMgl.ProjectName,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SLS Alert can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:sls/alert:Alert example <project_name>:<alert_name>
// ```
type Alert struct {
	pulumi.CustomResourceState

	// Alert rule ID, unique under Project.
	AlertName pulumi.StringOutput `pulumi:"alertName"`
	// Detailed configuration of alarm monitoring rules. See `configuration` below.
	Configuration AlertConfigurationOutput `pulumi:"configuration"`
	// Alarm rule creation time.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// Compatible fields, set to empty strings.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name of the alarm rule.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Project Name.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// Check the frequency-dependent configuration. See `schedule` below.
	Schedule AlertScheduleOutput `pulumi:"schedule"`
	// Resource attribute field representing alarm status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewAlert registers a new resource with the given unique name, arguments, and options.
func NewAlert(ctx *pulumi.Context,
	name string, args *AlertArgs, opts ...pulumi.ResourceOption) (*Alert, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlertName == nil {
		return nil, errors.New("invalid value for required argument 'AlertName'")
	}
	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Alert
	err := ctx.RegisterResource("alicloud:sls/alert:Alert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlert gets an existing Alert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertState, opts ...pulumi.ResourceOption) (*Alert, error) {
	var resource Alert
	err := ctx.ReadResource("alicloud:sls/alert:Alert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alert resources.
type alertState struct {
	// Alert rule ID, unique under Project.
	AlertName *string `pulumi:"alertName"`
	// Detailed configuration of alarm monitoring rules. See `configuration` below.
	Configuration *AlertConfiguration `pulumi:"configuration"`
	// Alarm rule creation time.
	CreateTime *int `pulumi:"createTime"`
	// Compatible fields, set to empty strings.
	Description *string `pulumi:"description"`
	// Display name of the alarm rule.
	DisplayName *string `pulumi:"displayName"`
	// Project Name.
	ProjectName *string `pulumi:"projectName"`
	// Check the frequency-dependent configuration. See `schedule` below.
	Schedule *AlertSchedule `pulumi:"schedule"`
	// Resource attribute field representing alarm status.
	Status *string `pulumi:"status"`
}

type AlertState struct {
	// Alert rule ID, unique under Project.
	AlertName pulumi.StringPtrInput
	// Detailed configuration of alarm monitoring rules. See `configuration` below.
	Configuration AlertConfigurationPtrInput
	// Alarm rule creation time.
	CreateTime pulumi.IntPtrInput
	// Compatible fields, set to empty strings.
	Description pulumi.StringPtrInput
	// Display name of the alarm rule.
	DisplayName pulumi.StringPtrInput
	// Project Name.
	ProjectName pulumi.StringPtrInput
	// Check the frequency-dependent configuration. See `schedule` below.
	Schedule AlertSchedulePtrInput
	// Resource attribute field representing alarm status.
	Status pulumi.StringPtrInput
}

func (AlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertState)(nil)).Elem()
}

type alertArgs struct {
	// Alert rule ID, unique under Project.
	AlertName string `pulumi:"alertName"`
	// Detailed configuration of alarm monitoring rules. See `configuration` below.
	Configuration AlertConfiguration `pulumi:"configuration"`
	// Compatible fields, set to empty strings.
	Description *string `pulumi:"description"`
	// Display name of the alarm rule.
	DisplayName string `pulumi:"displayName"`
	// Project Name.
	ProjectName string `pulumi:"projectName"`
	// Check the frequency-dependent configuration. See `schedule` below.
	Schedule AlertSchedule `pulumi:"schedule"`
	// Resource attribute field representing alarm status.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a Alert resource.
type AlertArgs struct {
	// Alert rule ID, unique under Project.
	AlertName pulumi.StringInput
	// Detailed configuration of alarm monitoring rules. See `configuration` below.
	Configuration AlertConfigurationInput
	// Compatible fields, set to empty strings.
	Description pulumi.StringPtrInput
	// Display name of the alarm rule.
	DisplayName pulumi.StringInput
	// Project Name.
	ProjectName pulumi.StringInput
	// Check the frequency-dependent configuration. See `schedule` below.
	Schedule AlertScheduleInput
	// Resource attribute field representing alarm status.
	Status pulumi.StringPtrInput
}

func (AlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertArgs)(nil)).Elem()
}

type AlertInput interface {
	pulumi.Input

	ToAlertOutput() AlertOutput
	ToAlertOutputWithContext(ctx context.Context) AlertOutput
}

func (*Alert) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (i *Alert) ToAlertOutput() AlertOutput {
	return i.ToAlertOutputWithContext(context.Background())
}

func (i *Alert) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertOutput)
}

// AlertArrayInput is an input type that accepts AlertArray and AlertArrayOutput values.
// You can construct a concrete instance of `AlertArrayInput` via:
//
//	AlertArray{ AlertArgs{...} }
type AlertArrayInput interface {
	pulumi.Input

	ToAlertArrayOutput() AlertArrayOutput
	ToAlertArrayOutputWithContext(context.Context) AlertArrayOutput
}

type AlertArray []AlertInput

func (AlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alert)(nil)).Elem()
}

func (i AlertArray) ToAlertArrayOutput() AlertArrayOutput {
	return i.ToAlertArrayOutputWithContext(context.Background())
}

func (i AlertArray) ToAlertArrayOutputWithContext(ctx context.Context) AlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertArrayOutput)
}

// AlertMapInput is an input type that accepts AlertMap and AlertMapOutput values.
// You can construct a concrete instance of `AlertMapInput` via:
//
//	AlertMap{ "key": AlertArgs{...} }
type AlertMapInput interface {
	pulumi.Input

	ToAlertMapOutput() AlertMapOutput
	ToAlertMapOutputWithContext(context.Context) AlertMapOutput
}

type AlertMap map[string]AlertInput

func (AlertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alert)(nil)).Elem()
}

func (i AlertMap) ToAlertMapOutput() AlertMapOutput {
	return i.ToAlertMapOutputWithContext(context.Background())
}

func (i AlertMap) ToAlertMapOutputWithContext(ctx context.Context) AlertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMapOutput)
}

type AlertOutput struct{ *pulumi.OutputState }

func (AlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (o AlertOutput) ToAlertOutput() AlertOutput {
	return o
}

func (o AlertOutput) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return o
}

// Alert rule ID, unique under Project.
func (o AlertOutput) AlertName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.AlertName }).(pulumi.StringOutput)
}

// Detailed configuration of alarm monitoring rules. See `configuration` below.
func (o AlertOutput) Configuration() AlertConfigurationOutput {
	return o.ApplyT(func(v *Alert) AlertConfigurationOutput { return v.Configuration }).(AlertConfigurationOutput)
}

// Alarm rule creation time.
func (o AlertOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Alert) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// Compatible fields, set to empty strings.
func (o AlertOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of the alarm rule.
func (o AlertOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Project Name.
func (o AlertOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// Check the frequency-dependent configuration. See `schedule` below.
func (o AlertOutput) Schedule() AlertScheduleOutput {
	return o.ApplyT(func(v *Alert) AlertScheduleOutput { return v.Schedule }).(AlertScheduleOutput)
}

// Resource attribute field representing alarm status.
func (o AlertOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type AlertArrayOutput struct{ *pulumi.OutputState }

func (AlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alert)(nil)).Elem()
}

func (o AlertArrayOutput) ToAlertArrayOutput() AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) ToAlertArrayOutputWithContext(ctx context.Context) AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) Index(i pulumi.IntInput) AlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Alert {
		return vs[0].([]*Alert)[vs[1].(int)]
	}).(AlertOutput)
}

type AlertMapOutput struct{ *pulumi.OutputState }

func (AlertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alert)(nil)).Elem()
}

func (o AlertMapOutput) ToAlertMapOutput() AlertMapOutput {
	return o
}

func (o AlertMapOutput) ToAlertMapOutputWithContext(ctx context.Context) AlertMapOutput {
	return o
}

func (o AlertMapOutput) MapIndex(k pulumi.StringInput) AlertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Alert {
		return vs[0].(map[string]*Alert)[vs[1].(string)]
	}).(AlertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertInput)(nil)).Elem(), &Alert{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertArrayInput)(nil)).Elem(), AlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMapInput)(nil)).Elem(), AlertMap{})
	pulumi.RegisterOutputType(AlertOutput{})
	pulumi.RegisterOutputType(AlertArrayOutput{})
	pulumi.RegisterOutputType(AlertMapOutput{})
}
