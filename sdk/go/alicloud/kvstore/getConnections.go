// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kvstore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can query the public IP of the specified Tair (Redis OSS-Compatible) And Memcache (KVStore).
//
// > **NOTE:** Available in v1.101.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kvstore"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Declare the data source
//			example, err := kvstore.GetConnections(ctx, &kvstore.GetConnectionsArgs{
//				Ids: "r-wer123456",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("connectionString", example.Connections[0].ConnectionString)
//			return nil
//		})
//	}
//
// ```
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionsResult
	err := ctx.Invoke("alicloud:kvstore/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// A list of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance ids, only support one item.
	Ids string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	// Public network details of the specified resource. contains the following attributes:
	Connections []GetConnectionsConnection `pulumi:"connections"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance ids.
	Ids        string  `pulumi:"ids"`
	OutputFile *string `pulumi:"outputFile"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionsResultOutput, error) {
			args := v.(GetConnectionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:kvstore/getConnections:getConnections", args, GetConnectionsResultOutput{}, options).(GetConnectionsResultOutput), nil
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// A list of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance ids, only support one item.
	Ids pulumi.StringInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

// Public network details of the specified resource. contains the following attributes:
func (o GetConnectionsResultOutput) Connections() GetConnectionsConnectionArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsConnection { return v.Connections }).(GetConnectionsConnectionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance ids.
func (o GetConnectionsResultOutput) Ids() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Ids }).(pulumi.StringOutput)
}

func (o GetConnectionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
