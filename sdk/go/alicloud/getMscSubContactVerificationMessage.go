// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alicloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** Available in v1.156.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultMscSubContract, err := alicloud.NewMscSubContract(ctx, "defaultMscSubContract", &alicloud.MscSubContractArgs{
// 			ContactName: pulumi.String("example_value"),
// 			Position:    pulumi.String("CEO"),
// 			Email:       pulumi.String("123@163.com"),
// 			Mobile:      pulumi.String("153xxxxx906"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMscSubContactVerificationMessage(ctx *pulumi.Context, args *GetMscSubContactVerificationMessageArgs, opts ...pulumi.InvokeOption) (*GetMscSubContactVerificationMessageResult, error) {
	var rv GetMscSubContactVerificationMessageResult
	err := ctx.Invoke("alicloud:index/getMscSubContactVerificationMessage:getMscSubContactVerificationMessage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMscSubContactVerificationMessage.
type GetMscSubContactVerificationMessageArgs struct {
	// The ID of the Contact.
	ContactId string `pulumi:"contactId"`
	// How a user receives verification messages. Valid values : `1`, `2`.
	// * `1`: Send a verification message through the user's mobile.
	// * `2`: Send a verification message through the user's mail.
	Type int `pulumi:"type"`
}

// A collection of values returned by getMscSubContactVerificationMessage.
type GetMscSubContactVerificationMessageResult struct {
	ContactId string `pulumi:"contactId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The sending status of the message. Valid values : `Success`, `Failed`.
	Status string `pulumi:"status"`
	Type   int    `pulumi:"type"`
}

func GetMscSubContactVerificationMessageOutput(ctx *pulumi.Context, args GetMscSubContactVerificationMessageOutputArgs, opts ...pulumi.InvokeOption) GetMscSubContactVerificationMessageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMscSubContactVerificationMessageResult, error) {
			args := v.(GetMscSubContactVerificationMessageArgs)
			r, err := GetMscSubContactVerificationMessage(ctx, &args, opts...)
			var s GetMscSubContactVerificationMessageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMscSubContactVerificationMessageResultOutput)
}

// A collection of arguments for invoking getMscSubContactVerificationMessage.
type GetMscSubContactVerificationMessageOutputArgs struct {
	// The ID of the Contact.
	ContactId pulumi.StringInput `pulumi:"contactId"`
	// How a user receives verification messages. Valid values : `1`, `2`.
	// * `1`: Send a verification message through the user's mobile.
	// * `2`: Send a verification message through the user's mail.
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetMscSubContactVerificationMessageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubContactVerificationMessageArgs)(nil)).Elem()
}

// A collection of values returned by getMscSubContactVerificationMessage.
type GetMscSubContactVerificationMessageResultOutput struct{ *pulumi.OutputState }

func (GetMscSubContactVerificationMessageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubContactVerificationMessageResult)(nil)).Elem()
}

func (o GetMscSubContactVerificationMessageResultOutput) ToGetMscSubContactVerificationMessageResultOutput() GetMscSubContactVerificationMessageResultOutput {
	return o
}

func (o GetMscSubContactVerificationMessageResultOutput) ToGetMscSubContactVerificationMessageResultOutputWithContext(ctx context.Context) GetMscSubContactVerificationMessageResultOutput {
	return o
}

func (o GetMscSubContactVerificationMessageResultOutput) ContactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactVerificationMessageResult) string { return v.ContactId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMscSubContactVerificationMessageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactVerificationMessageResult) string { return v.Id }).(pulumi.StringOutput)
}

// The sending status of the message. Valid values : `Success`, `Failed`.
func (o GetMscSubContactVerificationMessageResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactVerificationMessageResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetMscSubContactVerificationMessageResultOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubContactVerificationMessageResult) int { return v.Type }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMscSubContactVerificationMessageResultOutput{})
}
