// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oss

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a OSS Bucket Cors resource. Cross-Origin Resource Sharing (CORS) allows web applications to access resources in other regions.
//
// For information about OSS Bucket Cors and how to use it, see [What is Bucket Cors](https://www.alibabacloud.com/help/en/oss/developer-reference/putbucketcors).
//
// > **NOTE:** Available since v1.223.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oss"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := random.NewUuid(ctx, "default", nil)
//			if err != nil {
//				return err
//			}
//			createBucket, err := oss.NewBucket(ctx, "CreateBucket", &oss.BucketArgs{
//				StorageClass: pulumi.String("Standard"),
//				Bucket:       pulumi.Sprintf("%v-%v", name, _default.Result),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = oss.NewBucketCors(ctx, "default", &oss.BucketCorsArgs{
//				Bucket:       createBucket.Bucket,
//				ResponseVary: pulumi.Bool(true),
//				CorsRules: oss.BucketCorsCorsRuleArray{
//					&oss.BucketCorsCorsRuleArgs{
//						AllowedMethods: pulumi.StringArray{
//							pulumi.String("GET"),
//						},
//						AllowedOrigins: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//						AllowedHeaders: pulumi.StringArray{
//							pulumi.String("x-oss-test"),
//							pulumi.String("x-oss-abc"),
//						},
//						ExposeHeaders: pulumi.StringArray{
//							pulumi.String("x-oss-request-id"),
//						},
//						MaxAgeSeconds: pulumi.Int(1000),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OSS Bucket Cors can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:oss/bucketCors:BucketCors example <id>
// ```
type BucketCors struct {
	pulumi.CustomResourceState

	// The name of the Bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
	CorsRules BucketCorsCorsRuleArrayOutput `pulumi:"corsRules"`
	// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
	ResponseVary pulumi.BoolOutput `pulumi:"responseVary"`
}

// NewBucketCors registers a new resource with the given unique name, arguments, and options.
func NewBucketCors(ctx *pulumi.Context,
	name string, args *BucketCorsArgs, opts ...pulumi.ResourceOption) (*BucketCors, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.CorsRules == nil {
		return nil, errors.New("invalid value for required argument 'CorsRules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketCors
	err := ctx.RegisterResource("alicloud:oss/bucketCors:BucketCors", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketCors gets an existing BucketCors resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketCors(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketCorsState, opts ...pulumi.ResourceOption) (*BucketCors, error) {
	var resource BucketCors
	err := ctx.ReadResource("alicloud:oss/bucketCors:BucketCors", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketCors resources.
type bucketCorsState struct {
	// The name of the Bucket.
	Bucket *string `pulumi:"bucket"`
	// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
	CorsRules []BucketCorsCorsRule `pulumi:"corsRules"`
	// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
	ResponseVary *bool `pulumi:"responseVary"`
}

type BucketCorsState struct {
	// The name of the Bucket.
	Bucket pulumi.StringPtrInput
	// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
	CorsRules BucketCorsCorsRuleArrayInput
	// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
	ResponseVary pulumi.BoolPtrInput
}

func (BucketCorsState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketCorsState)(nil)).Elem()
}

type bucketCorsArgs struct {
	// The name of the Bucket.
	Bucket string `pulumi:"bucket"`
	// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
	CorsRules []BucketCorsCorsRule `pulumi:"corsRules"`
	// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
	ResponseVary *bool `pulumi:"responseVary"`
}

// The set of arguments for constructing a BucketCors resource.
type BucketCorsArgs struct {
	// The name of the Bucket.
	Bucket pulumi.StringInput
	// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
	CorsRules BucketCorsCorsRuleArrayInput
	// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
	ResponseVary pulumi.BoolPtrInput
}

func (BucketCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketCorsArgs)(nil)).Elem()
}

type BucketCorsInput interface {
	pulumi.Input

	ToBucketCorsOutput() BucketCorsOutput
	ToBucketCorsOutputWithContext(ctx context.Context) BucketCorsOutput
}

func (*BucketCors) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketCors)(nil)).Elem()
}

func (i *BucketCors) ToBucketCorsOutput() BucketCorsOutput {
	return i.ToBucketCorsOutputWithContext(context.Background())
}

func (i *BucketCors) ToBucketCorsOutputWithContext(ctx context.Context) BucketCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsOutput)
}

// BucketCorsArrayInput is an input type that accepts BucketCorsArray and BucketCorsArrayOutput values.
// You can construct a concrete instance of `BucketCorsArrayInput` via:
//
//	BucketCorsArray{ BucketCorsArgs{...} }
type BucketCorsArrayInput interface {
	pulumi.Input

	ToBucketCorsArrayOutput() BucketCorsArrayOutput
	ToBucketCorsArrayOutputWithContext(context.Context) BucketCorsArrayOutput
}

type BucketCorsArray []BucketCorsInput

func (BucketCorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketCors)(nil)).Elem()
}

func (i BucketCorsArray) ToBucketCorsArrayOutput() BucketCorsArrayOutput {
	return i.ToBucketCorsArrayOutputWithContext(context.Background())
}

func (i BucketCorsArray) ToBucketCorsArrayOutputWithContext(ctx context.Context) BucketCorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsArrayOutput)
}

// BucketCorsMapInput is an input type that accepts BucketCorsMap and BucketCorsMapOutput values.
// You can construct a concrete instance of `BucketCorsMapInput` via:
//
//	BucketCorsMap{ "key": BucketCorsArgs{...} }
type BucketCorsMapInput interface {
	pulumi.Input

	ToBucketCorsMapOutput() BucketCorsMapOutput
	ToBucketCorsMapOutputWithContext(context.Context) BucketCorsMapOutput
}

type BucketCorsMap map[string]BucketCorsInput

func (BucketCorsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketCors)(nil)).Elem()
}

func (i BucketCorsMap) ToBucketCorsMapOutput() BucketCorsMapOutput {
	return i.ToBucketCorsMapOutputWithContext(context.Background())
}

func (i BucketCorsMap) ToBucketCorsMapOutputWithContext(ctx context.Context) BucketCorsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsMapOutput)
}

type BucketCorsOutput struct{ *pulumi.OutputState }

func (BucketCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketCors)(nil)).Elem()
}

func (o BucketCorsOutput) ToBucketCorsOutput() BucketCorsOutput {
	return o
}

func (o BucketCorsOutput) ToBucketCorsOutputWithContext(ctx context.Context) BucketCorsOutput {
	return o
}

// The name of the Bucket.
func (o BucketCorsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketCors) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// The Cross-Origin Resource Sharing (CORS) configuration of the Bucket. See `corsRule` below.
func (o BucketCorsOutput) CorsRules() BucketCorsCorsRuleArrayOutput {
	return o.ApplyT(func(v *BucketCors) BucketCorsCorsRuleArrayOutput { return v.CorsRules }).(BucketCorsCorsRuleArrayOutput)
}

// Specifies whether to return the Vary: Origin header. Valid values: true: returns the Vary: Origin header, regardless of whether the request is a cross-origin request or whether the cross-origin request succeeds. false: does not return the Vary: Origin header. This element is valid only when at least one CORS rule is configured.
func (o BucketCorsOutput) ResponseVary() pulumi.BoolOutput {
	return o.ApplyT(func(v *BucketCors) pulumi.BoolOutput { return v.ResponseVary }).(pulumi.BoolOutput)
}

type BucketCorsArrayOutput struct{ *pulumi.OutputState }

func (BucketCorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketCors)(nil)).Elem()
}

func (o BucketCorsArrayOutput) ToBucketCorsArrayOutput() BucketCorsArrayOutput {
	return o
}

func (o BucketCorsArrayOutput) ToBucketCorsArrayOutputWithContext(ctx context.Context) BucketCorsArrayOutput {
	return o
}

func (o BucketCorsArrayOutput) Index(i pulumi.IntInput) BucketCorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketCors {
		return vs[0].([]*BucketCors)[vs[1].(int)]
	}).(BucketCorsOutput)
}

type BucketCorsMapOutput struct{ *pulumi.OutputState }

func (BucketCorsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketCors)(nil)).Elem()
}

func (o BucketCorsMapOutput) ToBucketCorsMapOutput() BucketCorsMapOutput {
	return o
}

func (o BucketCorsMapOutput) ToBucketCorsMapOutputWithContext(ctx context.Context) BucketCorsMapOutput {
	return o
}

func (o BucketCorsMapOutput) MapIndex(k pulumi.StringInput) BucketCorsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketCors {
		return vs[0].(map[string]*BucketCors)[vs[1].(string)]
	}).(BucketCorsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsInput)(nil)).Elem(), &BucketCors{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsArrayInput)(nil)).Elem(), BucketCorsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsMapInput)(nil)).Elem(), BucketCorsMap{})
	pulumi.RegisterOutputType(BucketCorsOutput{})
	pulumi.RegisterOutputType(BucketCorsArrayOutput{})
	pulumi.RegisterOutputType(BucketCorsMapOutput{})
}
