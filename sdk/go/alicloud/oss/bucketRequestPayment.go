// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oss

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// OSS Bucket Request Payment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:oss/bucketRequestPayment:BucketRequestPayment example <id>
// ```
type BucketRequestPayment struct {
	pulumi.CustomResourceState

	// The name of the bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
	Payer pulumi.StringOutput `pulumi:"payer"`
}

// NewBucketRequestPayment registers a new resource with the given unique name, arguments, and options.
func NewBucketRequestPayment(ctx *pulumi.Context,
	name string, args *BucketRequestPaymentArgs, opts ...pulumi.ResourceOption) (*BucketRequestPayment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketRequestPayment
	err := ctx.RegisterResource("alicloud:oss/bucketRequestPayment:BucketRequestPayment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketRequestPayment gets an existing BucketRequestPayment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketRequestPayment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketRequestPaymentState, opts ...pulumi.ResourceOption) (*BucketRequestPayment, error) {
	var resource BucketRequestPayment
	err := ctx.ReadResource("alicloud:oss/bucketRequestPayment:BucketRequestPayment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketRequestPayment resources.
type bucketRequestPaymentState struct {
	// The name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
	Payer *string `pulumi:"payer"`
}

type BucketRequestPaymentState struct {
	// The name of the bucket.
	Bucket pulumi.StringPtrInput
	// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
	Payer pulumi.StringPtrInput
}

func (BucketRequestPaymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketRequestPaymentState)(nil)).Elem()
}

type bucketRequestPaymentArgs struct {
	// The name of the bucket.
	Bucket string `pulumi:"bucket"`
	// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
	Payer *string `pulumi:"payer"`
}

// The set of arguments for constructing a BucketRequestPayment resource.
type BucketRequestPaymentArgs struct {
	// The name of the bucket.
	Bucket pulumi.StringInput
	// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
	Payer pulumi.StringPtrInput
}

func (BucketRequestPaymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketRequestPaymentArgs)(nil)).Elem()
}

type BucketRequestPaymentInput interface {
	pulumi.Input

	ToBucketRequestPaymentOutput() BucketRequestPaymentOutput
	ToBucketRequestPaymentOutputWithContext(ctx context.Context) BucketRequestPaymentOutput
}

func (*BucketRequestPayment) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRequestPayment)(nil)).Elem()
}

func (i *BucketRequestPayment) ToBucketRequestPaymentOutput() BucketRequestPaymentOutput {
	return i.ToBucketRequestPaymentOutputWithContext(context.Background())
}

func (i *BucketRequestPayment) ToBucketRequestPaymentOutputWithContext(ctx context.Context) BucketRequestPaymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentOutput)
}

// BucketRequestPaymentArrayInput is an input type that accepts BucketRequestPaymentArray and BucketRequestPaymentArrayOutput values.
// You can construct a concrete instance of `BucketRequestPaymentArrayInput` via:
//
//	BucketRequestPaymentArray{ BucketRequestPaymentArgs{...} }
type BucketRequestPaymentArrayInput interface {
	pulumi.Input

	ToBucketRequestPaymentArrayOutput() BucketRequestPaymentArrayOutput
	ToBucketRequestPaymentArrayOutputWithContext(context.Context) BucketRequestPaymentArrayOutput
}

type BucketRequestPaymentArray []BucketRequestPaymentInput

func (BucketRequestPaymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketRequestPayment)(nil)).Elem()
}

func (i BucketRequestPaymentArray) ToBucketRequestPaymentArrayOutput() BucketRequestPaymentArrayOutput {
	return i.ToBucketRequestPaymentArrayOutputWithContext(context.Background())
}

func (i BucketRequestPaymentArray) ToBucketRequestPaymentArrayOutputWithContext(ctx context.Context) BucketRequestPaymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentArrayOutput)
}

// BucketRequestPaymentMapInput is an input type that accepts BucketRequestPaymentMap and BucketRequestPaymentMapOutput values.
// You can construct a concrete instance of `BucketRequestPaymentMapInput` via:
//
//	BucketRequestPaymentMap{ "key": BucketRequestPaymentArgs{...} }
type BucketRequestPaymentMapInput interface {
	pulumi.Input

	ToBucketRequestPaymentMapOutput() BucketRequestPaymentMapOutput
	ToBucketRequestPaymentMapOutputWithContext(context.Context) BucketRequestPaymentMapOutput
}

type BucketRequestPaymentMap map[string]BucketRequestPaymentInput

func (BucketRequestPaymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketRequestPayment)(nil)).Elem()
}

func (i BucketRequestPaymentMap) ToBucketRequestPaymentMapOutput() BucketRequestPaymentMapOutput {
	return i.ToBucketRequestPaymentMapOutputWithContext(context.Background())
}

func (i BucketRequestPaymentMap) ToBucketRequestPaymentMapOutputWithContext(ctx context.Context) BucketRequestPaymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentMapOutput)
}

type BucketRequestPaymentOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRequestPayment)(nil)).Elem()
}

func (o BucketRequestPaymentOutput) ToBucketRequestPaymentOutput() BucketRequestPaymentOutput {
	return o
}

func (o BucketRequestPaymentOutput) ToBucketRequestPaymentOutputWithContext(ctx context.Context) BucketRequestPaymentOutput {
	return o
}

// The name of the bucket.
func (o BucketRequestPaymentOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketRequestPayment) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
func (o BucketRequestPaymentOutput) Payer() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketRequestPayment) pulumi.StringOutput { return v.Payer }).(pulumi.StringOutput)
}

type BucketRequestPaymentArrayOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketRequestPayment)(nil)).Elem()
}

func (o BucketRequestPaymentArrayOutput) ToBucketRequestPaymentArrayOutput() BucketRequestPaymentArrayOutput {
	return o
}

func (o BucketRequestPaymentArrayOutput) ToBucketRequestPaymentArrayOutputWithContext(ctx context.Context) BucketRequestPaymentArrayOutput {
	return o
}

func (o BucketRequestPaymentArrayOutput) Index(i pulumi.IntInput) BucketRequestPaymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketRequestPayment {
		return vs[0].([]*BucketRequestPayment)[vs[1].(int)]
	}).(BucketRequestPaymentOutput)
}

type BucketRequestPaymentMapOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketRequestPayment)(nil)).Elem()
}

func (o BucketRequestPaymentMapOutput) ToBucketRequestPaymentMapOutput() BucketRequestPaymentMapOutput {
	return o
}

func (o BucketRequestPaymentMapOutput) ToBucketRequestPaymentMapOutputWithContext(ctx context.Context) BucketRequestPaymentMapOutput {
	return o
}

func (o BucketRequestPaymentMapOutput) MapIndex(k pulumi.StringInput) BucketRequestPaymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketRequestPayment {
		return vs[0].(map[string]*BucketRequestPayment)[vs[1].(string)]
	}).(BucketRequestPaymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentInput)(nil)).Elem(), &BucketRequestPayment{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentArrayInput)(nil)).Elem(), BucketRequestPaymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentMapInput)(nil)).Elem(), BucketRequestPaymentMap{})
	pulumi.RegisterOutputType(BucketRequestPaymentOutput{})
	pulumi.RegisterOutputType(BucketRequestPaymentArrayOutput{})
	pulumi.RegisterOutputType(BucketRequestPaymentMapOutput{})
}
