// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "alicloud:resourcemanager/account:Account":
		r, err = NewAccount(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/controlPolicy:ControlPolicy":
		r, err = NewControlPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/controlPolicyAttachment:ControlPolicyAttachment":
		r, err = NewControlPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/folder:Folder":
		r, err = NewFolder(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/handshake:Handshake":
		r, err = NewHandshake(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/policy:Policy":
		r, err = NewPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/policyAttachment:PolicyAttachment":
		r, err = NewPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/policyVersion:PolicyVersion":
		r, err = NewPolicyVersion(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/resourceDirectory:ResourceDirectory":
		r, err = NewResourceDirectory(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/resourceGroup:ResourceGroup":
		r, err = NewResourceGroup(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/resourceShare:ResourceShare":
		r, err = NewResourceShare(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/role:Role":
		r, err = NewRole(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/sharedResource:SharedResource":
		r, err = NewSharedResource(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:resourcemanager/sharedTarget:SharedTarget":
		r, err = NewSharedTarget(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := alicloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/controlPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/controlPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/folder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/handshake",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/policyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/policyVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/resourceDirectory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/resourceGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/resourceShare",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/sharedResource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"resourcemanager/sharedTarget",
		&module{version},
	)
}
