// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Resource Manager Multi Account Delivery Channel resource.
//
// Multi-account Resource Delivery Channel.
//
// For information about Resource Manager Multi Account Delivery Channel and how to use it, see [What is Multi Account Delivery Channel](https://next.api.alibabacloud.com/document/ResourceCenter/2022-12-01/CreateMultiAccountDeliveryChannel).
//
// > **NOTE:** Available since v1.262.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultuHQ8Cu, err := resourcemanager.NewFolder(ctx, "defaultuHQ8Cu", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String("folder-aone-example-1"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultioI16p, err := resourcemanager.NewFolder(ctx, "defaultioI16p", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String("folder-aone-example-2"),
//			})
//			if err != nil {
//				return err
//			}
//			default55Uum4, err := resourcemanager.NewFolder(ctx, "default55Uum4", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String("folder-aone-example-3"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = resourcemanager.NewFolder(ctx, "defaultiEjEbe", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String("folder-aone-example-4"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = resourcemanager.NewFolder(ctx, "defaultdNL2TN", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String("folder-aone-example-5"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = resourcemanager.NewMultiAccountDeliveryChannel(ctx, "default", &resourcemanager.MultiAccountDeliveryChannelArgs{
//				ResourceChangeDelivery: &resourcemanager.MultiAccountDeliveryChannelResourceChangeDeliveryArgs{
//					SlsProperties: &resourcemanager.MultiAccountDeliveryChannelResourceChangeDeliverySlsPropertiesArgs{
//						OversizedDataOssTargetArn: pulumi.String("acs:oss:cn-hangzhou:1511928242963727:resourcecenter-aone-example-delivery-oss"),
//					},
//					TargetArn: pulumi.String("acs:log:cn-hangzhou:1511928242963727:project/delivery-aone-example/logstore/resourcecenter-delivery-aone-example-sls"),
//				},
//				DeliveryChannelDescription:      pulumi.String("multi_delivery_channel_resource_spec_mq_example"),
//				MultiAccountDeliveryChannelName: pulumi.String("multi_delivery_channel_resource_spec_mq_example"),
//				DeliveryChannelFilter: &resourcemanager.MultiAccountDeliveryChannelDeliveryChannelFilterArgs{
//					AccountScopes: pulumi.StringArray{
//						defaultuHQ8Cu.ID(),
//						defaultioI16p.ID(),
//						default55Uum4.ID(),
//					},
//					ResourceTypes: pulumi.StringArray{
//						pulumi.String("ACS::ACK::Cluster"),
//						pulumi.String("ACS::ActionTrail::Trail"),
//						pulumi.String("ACS::BPStudio::Application"),
//					},
//				},
//				ResourceSnapshotDelivery: &resourcemanager.MultiAccountDeliveryChannelResourceSnapshotDeliveryArgs{
//					DeliveryTime:     pulumi.String("16:00Z"),
//					TargetArn:        pulumi.String("acs:log:cn-hangzhou:1511928242963727:project/delivery-aone-example/logstore/resourcecenter-delivery-aone-example-sls"),
//					TargetType:       pulumi.String("SLS"),
//					CustomExpression: pulumi.String("select * from resources limit 10;"),
//					SlsProperties: &resourcemanager.MultiAccountDeliveryChannelResourceSnapshotDeliverySlsPropertiesArgs{
//						OversizedDataOssTargetArn: pulumi.String("acs:oss:cn-hangzhou:1511928242963727:resourcecenter-aone-example-delivery-oss"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource Manager Multi Account Delivery Channel can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:resourcemanager/multiAccountDeliveryChannel:MultiAccountDeliveryChannel example <id>
// ```
type MultiAccountDeliveryChannel struct {
	pulumi.CustomResourceState

	// The description of the delivery channel.
	DeliveryChannelDescription pulumi.StringOutput `pulumi:"deliveryChannelDescription"`
	// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
	DeliveryChannelFilter MultiAccountDeliveryChannelDeliveryChannelFilterOutput `pulumi:"deliveryChannelFilter"`
	// The name of the delivery channel.
	MultiAccountDeliveryChannelName pulumi.StringOutput `pulumi:"multiAccountDeliveryChannelName"`
	// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
	ResourceChangeDelivery MultiAccountDeliveryChannelResourceChangeDeliveryPtrOutput `pulumi:"resourceChangeDelivery"`
	// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
	ResourceSnapshotDelivery MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrOutput `pulumi:"resourceSnapshotDelivery"`
}

// NewMultiAccountDeliveryChannel registers a new resource with the given unique name, arguments, and options.
func NewMultiAccountDeliveryChannel(ctx *pulumi.Context,
	name string, args *MultiAccountDeliveryChannelArgs, opts ...pulumi.ResourceOption) (*MultiAccountDeliveryChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeliveryChannelDescription == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelDescription'")
	}
	if args.DeliveryChannelFilter == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryChannelFilter'")
	}
	if args.MultiAccountDeliveryChannelName == nil {
		return nil, errors.New("invalid value for required argument 'MultiAccountDeliveryChannelName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MultiAccountDeliveryChannel
	err := ctx.RegisterResource("alicloud:resourcemanager/multiAccountDeliveryChannel:MultiAccountDeliveryChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMultiAccountDeliveryChannel gets an existing MultiAccountDeliveryChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMultiAccountDeliveryChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MultiAccountDeliveryChannelState, opts ...pulumi.ResourceOption) (*MultiAccountDeliveryChannel, error) {
	var resource MultiAccountDeliveryChannel
	err := ctx.ReadResource("alicloud:resourcemanager/multiAccountDeliveryChannel:MultiAccountDeliveryChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MultiAccountDeliveryChannel resources.
type multiAccountDeliveryChannelState struct {
	// The description of the delivery channel.
	DeliveryChannelDescription *string `pulumi:"deliveryChannelDescription"`
	// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
	DeliveryChannelFilter *MultiAccountDeliveryChannelDeliveryChannelFilter `pulumi:"deliveryChannelFilter"`
	// The name of the delivery channel.
	MultiAccountDeliveryChannelName *string `pulumi:"multiAccountDeliveryChannelName"`
	// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
	ResourceChangeDelivery *MultiAccountDeliveryChannelResourceChangeDelivery `pulumi:"resourceChangeDelivery"`
	// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
	ResourceSnapshotDelivery *MultiAccountDeliveryChannelResourceSnapshotDelivery `pulumi:"resourceSnapshotDelivery"`
}

type MultiAccountDeliveryChannelState struct {
	// The description of the delivery channel.
	DeliveryChannelDescription pulumi.StringPtrInput
	// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
	DeliveryChannelFilter MultiAccountDeliveryChannelDeliveryChannelFilterPtrInput
	// The name of the delivery channel.
	MultiAccountDeliveryChannelName pulumi.StringPtrInput
	// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
	ResourceChangeDelivery MultiAccountDeliveryChannelResourceChangeDeliveryPtrInput
	// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
	ResourceSnapshotDelivery MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrInput
}

func (MultiAccountDeliveryChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*multiAccountDeliveryChannelState)(nil)).Elem()
}

type multiAccountDeliveryChannelArgs struct {
	// The description of the delivery channel.
	DeliveryChannelDescription string `pulumi:"deliveryChannelDescription"`
	// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
	DeliveryChannelFilter MultiAccountDeliveryChannelDeliveryChannelFilter `pulumi:"deliveryChannelFilter"`
	// The name of the delivery channel.
	MultiAccountDeliveryChannelName string `pulumi:"multiAccountDeliveryChannelName"`
	// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
	ResourceChangeDelivery *MultiAccountDeliveryChannelResourceChangeDelivery `pulumi:"resourceChangeDelivery"`
	// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
	ResourceSnapshotDelivery *MultiAccountDeliveryChannelResourceSnapshotDelivery `pulumi:"resourceSnapshotDelivery"`
}

// The set of arguments for constructing a MultiAccountDeliveryChannel resource.
type MultiAccountDeliveryChannelArgs struct {
	// The description of the delivery channel.
	DeliveryChannelDescription pulumi.StringInput
	// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
	DeliveryChannelFilter MultiAccountDeliveryChannelDeliveryChannelFilterInput
	// The name of the delivery channel.
	MultiAccountDeliveryChannelName pulumi.StringInput
	// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
	ResourceChangeDelivery MultiAccountDeliveryChannelResourceChangeDeliveryPtrInput
	// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
	ResourceSnapshotDelivery MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrInput
}

func (MultiAccountDeliveryChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*multiAccountDeliveryChannelArgs)(nil)).Elem()
}

type MultiAccountDeliveryChannelInput interface {
	pulumi.Input

	ToMultiAccountDeliveryChannelOutput() MultiAccountDeliveryChannelOutput
	ToMultiAccountDeliveryChannelOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelOutput
}

func (*MultiAccountDeliveryChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiAccountDeliveryChannel)(nil)).Elem()
}

func (i *MultiAccountDeliveryChannel) ToMultiAccountDeliveryChannelOutput() MultiAccountDeliveryChannelOutput {
	return i.ToMultiAccountDeliveryChannelOutputWithContext(context.Background())
}

func (i *MultiAccountDeliveryChannel) ToMultiAccountDeliveryChannelOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiAccountDeliveryChannelOutput)
}

// MultiAccountDeliveryChannelArrayInput is an input type that accepts MultiAccountDeliveryChannelArray and MultiAccountDeliveryChannelArrayOutput values.
// You can construct a concrete instance of `MultiAccountDeliveryChannelArrayInput` via:
//
//	MultiAccountDeliveryChannelArray{ MultiAccountDeliveryChannelArgs{...} }
type MultiAccountDeliveryChannelArrayInput interface {
	pulumi.Input

	ToMultiAccountDeliveryChannelArrayOutput() MultiAccountDeliveryChannelArrayOutput
	ToMultiAccountDeliveryChannelArrayOutputWithContext(context.Context) MultiAccountDeliveryChannelArrayOutput
}

type MultiAccountDeliveryChannelArray []MultiAccountDeliveryChannelInput

func (MultiAccountDeliveryChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MultiAccountDeliveryChannel)(nil)).Elem()
}

func (i MultiAccountDeliveryChannelArray) ToMultiAccountDeliveryChannelArrayOutput() MultiAccountDeliveryChannelArrayOutput {
	return i.ToMultiAccountDeliveryChannelArrayOutputWithContext(context.Background())
}

func (i MultiAccountDeliveryChannelArray) ToMultiAccountDeliveryChannelArrayOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiAccountDeliveryChannelArrayOutput)
}

// MultiAccountDeliveryChannelMapInput is an input type that accepts MultiAccountDeliveryChannelMap and MultiAccountDeliveryChannelMapOutput values.
// You can construct a concrete instance of `MultiAccountDeliveryChannelMapInput` via:
//
//	MultiAccountDeliveryChannelMap{ "key": MultiAccountDeliveryChannelArgs{...} }
type MultiAccountDeliveryChannelMapInput interface {
	pulumi.Input

	ToMultiAccountDeliveryChannelMapOutput() MultiAccountDeliveryChannelMapOutput
	ToMultiAccountDeliveryChannelMapOutputWithContext(context.Context) MultiAccountDeliveryChannelMapOutput
}

type MultiAccountDeliveryChannelMap map[string]MultiAccountDeliveryChannelInput

func (MultiAccountDeliveryChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MultiAccountDeliveryChannel)(nil)).Elem()
}

func (i MultiAccountDeliveryChannelMap) ToMultiAccountDeliveryChannelMapOutput() MultiAccountDeliveryChannelMapOutput {
	return i.ToMultiAccountDeliveryChannelMapOutputWithContext(context.Background())
}

func (i MultiAccountDeliveryChannelMap) ToMultiAccountDeliveryChannelMapOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiAccountDeliveryChannelMapOutput)
}

type MultiAccountDeliveryChannelOutput struct{ *pulumi.OutputState }

func (MultiAccountDeliveryChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiAccountDeliveryChannel)(nil)).Elem()
}

func (o MultiAccountDeliveryChannelOutput) ToMultiAccountDeliveryChannelOutput() MultiAccountDeliveryChannelOutput {
	return o
}

func (o MultiAccountDeliveryChannelOutput) ToMultiAccountDeliveryChannelOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelOutput {
	return o
}

// The description of the delivery channel.
func (o MultiAccountDeliveryChannelOutput) DeliveryChannelDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *MultiAccountDeliveryChannel) pulumi.StringOutput { return v.DeliveryChannelDescription }).(pulumi.StringOutput)
}

// The effective scope of the delivery channel. See `deliveryChannelFilter` below.
func (o MultiAccountDeliveryChannelOutput) DeliveryChannelFilter() MultiAccountDeliveryChannelDeliveryChannelFilterOutput {
	return o.ApplyT(func(v *MultiAccountDeliveryChannel) MultiAccountDeliveryChannelDeliveryChannelFilterOutput {
		return v.DeliveryChannelFilter
	}).(MultiAccountDeliveryChannelDeliveryChannelFilterOutput)
}

// The name of the delivery channel.
func (o MultiAccountDeliveryChannelOutput) MultiAccountDeliveryChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v *MultiAccountDeliveryChannel) pulumi.StringOutput { return v.MultiAccountDeliveryChannelName }).(pulumi.StringOutput)
}

// The configurations for delivery of resource configuration change events. See `resourceChangeDelivery` below.
func (o MultiAccountDeliveryChannelOutput) ResourceChangeDelivery() MultiAccountDeliveryChannelResourceChangeDeliveryPtrOutput {
	return o.ApplyT(func(v *MultiAccountDeliveryChannel) MultiAccountDeliveryChannelResourceChangeDeliveryPtrOutput {
		return v.ResourceChangeDelivery
	}).(MultiAccountDeliveryChannelResourceChangeDeliveryPtrOutput)
}

// The configurations for delivery of scheduled resource snapshots. See `resourceSnapshotDelivery` below.
func (o MultiAccountDeliveryChannelOutput) ResourceSnapshotDelivery() MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrOutput {
	return o.ApplyT(func(v *MultiAccountDeliveryChannel) MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrOutput {
		return v.ResourceSnapshotDelivery
	}).(MultiAccountDeliveryChannelResourceSnapshotDeliveryPtrOutput)
}

type MultiAccountDeliveryChannelArrayOutput struct{ *pulumi.OutputState }

func (MultiAccountDeliveryChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MultiAccountDeliveryChannel)(nil)).Elem()
}

func (o MultiAccountDeliveryChannelArrayOutput) ToMultiAccountDeliveryChannelArrayOutput() MultiAccountDeliveryChannelArrayOutput {
	return o
}

func (o MultiAccountDeliveryChannelArrayOutput) ToMultiAccountDeliveryChannelArrayOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelArrayOutput {
	return o
}

func (o MultiAccountDeliveryChannelArrayOutput) Index(i pulumi.IntInput) MultiAccountDeliveryChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MultiAccountDeliveryChannel {
		return vs[0].([]*MultiAccountDeliveryChannel)[vs[1].(int)]
	}).(MultiAccountDeliveryChannelOutput)
}

type MultiAccountDeliveryChannelMapOutput struct{ *pulumi.OutputState }

func (MultiAccountDeliveryChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MultiAccountDeliveryChannel)(nil)).Elem()
}

func (o MultiAccountDeliveryChannelMapOutput) ToMultiAccountDeliveryChannelMapOutput() MultiAccountDeliveryChannelMapOutput {
	return o
}

func (o MultiAccountDeliveryChannelMapOutput) ToMultiAccountDeliveryChannelMapOutputWithContext(ctx context.Context) MultiAccountDeliveryChannelMapOutput {
	return o
}

func (o MultiAccountDeliveryChannelMapOutput) MapIndex(k pulumi.StringInput) MultiAccountDeliveryChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MultiAccountDeliveryChannel {
		return vs[0].(map[string]*MultiAccountDeliveryChannel)[vs[1].(string)]
	}).(MultiAccountDeliveryChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MultiAccountDeliveryChannelInput)(nil)).Elem(), &MultiAccountDeliveryChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiAccountDeliveryChannelArrayInput)(nil)).Elem(), MultiAccountDeliveryChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiAccountDeliveryChannelMapInput)(nil)).Elem(), MultiAccountDeliveryChannelMap{})
	pulumi.RegisterOutputType(MultiAccountDeliveryChannelOutput{})
	pulumi.RegisterOutputType(MultiAccountDeliveryChannelArrayOutput{})
	pulumi.RegisterOutputType(MultiAccountDeliveryChannelMapOutput{})
}
