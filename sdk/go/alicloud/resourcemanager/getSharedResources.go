// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Resource Manager Shared Resources of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.111.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "tf-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// _default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
// AvailableResourceCreation: pulumi.StringRef("VSwitch"),
// }, nil);
// if err != nil {
// return err
// }
// defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
// NameRegex: pulumi.StringRef("^default-NODELETING$"),
// }, nil);
// if err != nil {
// return err
// }
// defaultGetSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
// VpcId: pulumi.StringRef(defaultGetNetworks.Ids[0]),
// ZoneId: pulumi.StringRef(_default.Ids[0]),
// }, nil);
// if err != nil {
// return err
// }
// defaultResourceShare, err := resourcemanager.NewResourceShare(ctx, "default", &resourcemanager.ResourceShareArgs{
// ResourceShareName: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// defaultSharedResource, err := resourcemanager.NewSharedResource(ctx, "default", &resourcemanager.SharedResourceArgs{
// ResourceShareId: defaultResourceShare.ID(),
// ResourceId: pulumi.String(defaultGetSwitches.Ids[0]),
// ResourceType: pulumi.String("VSwitch"),
// })
// if err != nil {
// return err
// }
// ids, err := resourcemanager.GetSharedResources(ctx, &resourcemanager.GetSharedResourcesArgs{
// Ids: interface{}{
// std.Format(ctx, &std.FormatArgs{
// Input: "%s:%s",
// Args: pulumi.StringArray{
// defaultSharedResource.ResourceId,
// defaultSharedResource.ResourceType,
// },
// }, nil).Result,
// },
// }, nil);
// if err != nil {
// return err
// }
// ctx.Export("firstResourceManagerSharedResourceId", ids.Resources[0].Id)
// resourceShareId := resourcemanager.GetSharedResourcesOutput(ctx, resourcemanager.GetSharedResourcesOutputArgs{
// ResourceShareId: defaultSharedResource.ResourceShareId,
// }, nil);
// ctx.Export("secondResourceManagerSharedResourceId", resourceShareId.ApplyT(func(resourceShareId resourcemanager.GetSharedResourcesResult) (*string, error) {
// return &resourceShareId.Resources[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetSharedResources(ctx *pulumi.Context, args *GetSharedResourcesArgs, opts ...pulumi.InvokeOption) (*GetSharedResourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSharedResourcesResult
	err := ctx.Invoke("alicloud:resourcemanager/getSharedResources:getSharedResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSharedResources.
type GetSharedResourcesArgs struct {
	// A list of shared resource IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The resource share ID of resource manager.
	ResourceShareId *string `pulumi:"resourceShareId"`
	// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getSharedResources.
type GetSharedResourcesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The resource share ID of resource manager.
	ResourceShareId *string `pulumi:"resourceShareId"`
	// A list of Resource Manager Shared Resources. Each element contains the following attributes:
	Resources []GetSharedResourcesResource `pulumi:"resources"`
	// The status of shared resource.
	Status *string `pulumi:"status"`
}

func GetSharedResourcesOutput(ctx *pulumi.Context, args GetSharedResourcesOutputArgs, opts ...pulumi.InvokeOption) GetSharedResourcesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSharedResourcesResultOutput, error) {
			args := v.(GetSharedResourcesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:resourcemanager/getSharedResources:getSharedResources", args, GetSharedResourcesResultOutput{}, options).(GetSharedResourcesResultOutput), nil
		}).(GetSharedResourcesResultOutput)
}

// A collection of arguments for invoking getSharedResources.
type GetSharedResourcesOutputArgs struct {
	// A list of shared resource IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The resource share ID of resource manager.
	ResourceShareId pulumi.StringPtrInput `pulumi:"resourceShareId"`
	// The status of share resource. Valid values: `Associated`, `Associating`, `Disassociated`, `Disassociating` and `Failed`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetSharedResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedResourcesArgs)(nil)).Elem()
}

// A collection of values returned by getSharedResources.
type GetSharedResourcesResultOutput struct{ *pulumi.OutputState }

func (GetSharedResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedResourcesResult)(nil)).Elem()
}

func (o GetSharedResourcesResultOutput) ToGetSharedResourcesResultOutput() GetSharedResourcesResultOutput {
	return o
}

func (o GetSharedResourcesResultOutput) ToGetSharedResourcesResultOutputWithContext(ctx context.Context) GetSharedResourcesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSharedResourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSharedResourcesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSharedResourcesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The resource share ID of resource manager.
func (o GetSharedResourcesResultOutput) ResourceShareId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) *string { return v.ResourceShareId }).(pulumi.StringPtrOutput)
}

// A list of Resource Manager Shared Resources. Each element contains the following attributes:
func (o GetSharedResourcesResultOutput) Resources() GetSharedResourcesResourceArrayOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) []GetSharedResourcesResource { return v.Resources }).(GetSharedResourcesResourceArrayOutput)
}

// The status of shared resource.
func (o GetSharedResourcesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSharedResourcesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSharedResourcesResultOutput{})
}
