// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Resource Manager Folder resource. A folder is an organizational unit in a resource directory. You can use folders to build an organizational structure for resources.
// For information about Resource Manager Foler and how to use it, see [What is Resource Manager Folder](https://www.alibabacloud.com/help/en/doc-detail/111221.htm).
//
// > **NOTE:** Available in v1.82.0+.
//
// > **NOTE:** A maximum of five levels of folders can be created under the root folder.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/resourcemanager"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := resourcemanager.NewFolder(ctx, "example", &resourcemanager.FolderArgs{
// 			FolderName: pulumi.String("test"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Resource Manager Folder can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:resourcemanager/folder:Folder example fd-u8B321****
// ```
type Folder struct {
	pulumi.CustomResourceState

	// The name of the folder. The name must be 1 to 24 characters in length and can contain letters, digits, underscores (_), periods (.), and hyphens (-).
	FolderName pulumi.StringOutput `pulumi:"folderName"`
	// The ID of the parent folder. If not set, the system default value will be used.
	ParentFolderId pulumi.StringOutput `pulumi:"parentFolderId"`
}

// NewFolder registers a new resource with the given unique name, arguments, and options.
func NewFolder(ctx *pulumi.Context,
	name string, args *FolderArgs, opts ...pulumi.ResourceOption) (*Folder, error) {
	if args == nil || args.FolderName == nil {
		return nil, errors.New("missing required argument 'FolderName'")
	}
	if args == nil {
		args = &FolderArgs{}
	}
	var resource Folder
	err := ctx.RegisterResource("alicloud:resourcemanager/folder:Folder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolder gets an existing Folder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderState, opts ...pulumi.ResourceOption) (*Folder, error) {
	var resource Folder
	err := ctx.ReadResource("alicloud:resourcemanager/folder:Folder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Folder resources.
type folderState struct {
	// The name of the folder. The name must be 1 to 24 characters in length and can contain letters, digits, underscores (_), periods (.), and hyphens (-).
	FolderName *string `pulumi:"folderName"`
	// The ID of the parent folder. If not set, the system default value will be used.
	ParentFolderId *string `pulumi:"parentFolderId"`
}

type FolderState struct {
	// The name of the folder. The name must be 1 to 24 characters in length and can contain letters, digits, underscores (_), periods (.), and hyphens (-).
	FolderName pulumi.StringPtrInput
	// The ID of the parent folder. If not set, the system default value will be used.
	ParentFolderId pulumi.StringPtrInput
}

func (FolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderState)(nil)).Elem()
}

type folderArgs struct {
	// The name of the folder. The name must be 1 to 24 characters in length and can contain letters, digits, underscores (_), periods (.), and hyphens (-).
	FolderName string `pulumi:"folderName"`
	// The ID of the parent folder. If not set, the system default value will be used.
	ParentFolderId *string `pulumi:"parentFolderId"`
}

// The set of arguments for constructing a Folder resource.
type FolderArgs struct {
	// The name of the folder. The name must be 1 to 24 characters in length and can contain letters, digits, underscores (_), periods (.), and hyphens (-).
	FolderName pulumi.StringInput
	// The ID of the parent folder. If not set, the system default value will be used.
	ParentFolderId pulumi.StringPtrInput
}

func (FolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderArgs)(nil)).Elem()
}

type FolderInput interface {
	pulumi.Input

	ToFolderOutput() FolderOutput
	ToFolderOutputWithContext(ctx context.Context) FolderOutput
}

func (Folder) ElementType() reflect.Type {
	return reflect.TypeOf((*Folder)(nil)).Elem()
}

func (i Folder) ToFolderOutput() FolderOutput {
	return i.ToFolderOutputWithContext(context.Background())
}

func (i Folder) ToFolderOutputWithContext(ctx context.Context) FolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderOutput)
}

type FolderOutput struct {
	*pulumi.OutputState
}

func (FolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderOutput)(nil)).Elem()
}

func (o FolderOutput) ToFolderOutput() FolderOutput {
	return o
}

func (o FolderOutput) ToFolderOutputWithContext(ctx context.Context) FolderOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(FolderOutput{})
}
