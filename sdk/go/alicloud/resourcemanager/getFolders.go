// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Resource Manager Folders of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.84.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := resourcemanager.NewFolder(ctx, "default", &resourcemanager.FolderArgs{
//				FolderName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			ids := resourcemanager.GetFoldersOutput(ctx, resourcemanager.GetFoldersOutputArgs{
//				Ids: pulumi.StringArray{
//					_default.ID(),
//				},
//			}, nil)
//			ctx.Export("resourceManagerFolderId0", ids.ApplyT(func(ids resourcemanager.GetFoldersResult) (*string, error) {
//				return &ids.Folders[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetFolders(ctx *pulumi.Context, args *GetFoldersArgs, opts ...pulumi.InvokeOption) (*GetFoldersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFoldersResult
	err := ctx.Invoke("alicloud:resourcemanager/getFolders:getFolders", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFolders.
type GetFoldersArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Folders IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Folder name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the parent folder. **NOTE:** If `parentFolderId` is not set, the information of the first-level subfolders of the Root folder is queried.
	ParentFolderId *string `pulumi:"parentFolderId"`
	// The keyword used for the query, such as a folder name. Fuzzy match is supported.
	QueryKeyword *string `pulumi:"queryKeyword"`
}

// A collection of values returned by getFolders.
type GetFoldersResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Folder. Each element contains the following attributes:
	Folders []GetFoldersFolder `pulumi:"folders"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Folder names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// (Available since v1.114.0) The ID of the parent folder. **Note:** `parentFolderId` takes effect only if `enableDetails` is set to `true`.
	ParentFolderId *string `pulumi:"parentFolderId"`
	QueryKeyword   *string `pulumi:"queryKeyword"`
}

func GetFoldersOutput(ctx *pulumi.Context, args GetFoldersOutputArgs, opts ...pulumi.InvokeOption) GetFoldersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFoldersResultOutput, error) {
			args := v.(GetFoldersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetFoldersResult
			secret, err := ctx.InvokePackageRaw("alicloud:resourcemanager/getFolders:getFolders", args, &rv, "", opts...)
			if err != nil {
				return GetFoldersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetFoldersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetFoldersResultOutput), nil
			}
			return output, nil
		}).(GetFoldersResultOutput)
}

// A collection of arguments for invoking getFolders.
type GetFoldersOutputArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Folders IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Folder name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the parent folder. **NOTE:** If `parentFolderId` is not set, the information of the first-level subfolders of the Root folder is queried.
	ParentFolderId pulumi.StringPtrInput `pulumi:"parentFolderId"`
	// The keyword used for the query, such as a folder name. Fuzzy match is supported.
	QueryKeyword pulumi.StringPtrInput `pulumi:"queryKeyword"`
}

func (GetFoldersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFoldersArgs)(nil)).Elem()
}

// A collection of values returned by getFolders.
type GetFoldersResultOutput struct{ *pulumi.OutputState }

func (GetFoldersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFoldersResult)(nil)).Elem()
}

func (o GetFoldersResultOutput) ToGetFoldersResultOutput() GetFoldersResultOutput {
	return o
}

func (o GetFoldersResultOutput) ToGetFoldersResultOutputWithContext(ctx context.Context) GetFoldersResultOutput {
	return o
}

func (o GetFoldersResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFoldersResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// A list of Folder. Each element contains the following attributes:
func (o GetFoldersResultOutput) Folders() GetFoldersFolderArrayOutput {
	return o.ApplyT(func(v GetFoldersResult) []GetFoldersFolder { return v.Folders }).(GetFoldersFolderArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFoldersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoldersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFoldersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFoldersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetFoldersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFoldersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Folder names.
func (o GetFoldersResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFoldersResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetFoldersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFoldersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// (Available since v1.114.0) The ID of the parent folder. **Note:** `parentFolderId` takes effect only if `enableDetails` is set to `true`.
func (o GetFoldersResultOutput) ParentFolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFoldersResult) *string { return v.ParentFolderId }).(pulumi.StringPtrOutput)
}

func (o GetFoldersResultOutput) QueryKeyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFoldersResult) *string { return v.QueryKeyword }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFoldersResultOutput{})
}
