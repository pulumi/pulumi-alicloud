// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetConsumerChannelsChannel struct {
	// The ID of the consumer group.
	ConsumerGroupId string `pulumi:"consumerGroupId"`
	// The name of the consumer group.
	ConsumerGroupName string `pulumi:"consumerGroupName"`
	// The username of the consumer group.
	ConsumerGroupUserName string `pulumi:"consumerGroupUserName"`
	// The time point when the client consumed the last message in the subscription channel.
	ConsumptionCheckpoint string `pulumi:"consumptionCheckpoint"`
	// The ID of the Consumer Channel.
	Id string `pulumi:"id"`
	// The message delay time, for the current time data subscription channel in the earliest time of unconsumed messages of the difference, in Unix timestamp format, which is measured in seconds.
	MessageDelay int `pulumi:"messageDelay"`
	// The total number of unconsumed messages.
	UnconsumedData int `pulumi:"unconsumedData"`
}

// GetConsumerChannelsChannelInput is an input type that accepts GetConsumerChannelsChannelArgs and GetConsumerChannelsChannelOutput values.
// You can construct a concrete instance of `GetConsumerChannelsChannelInput` via:
//
//          GetConsumerChannelsChannelArgs{...}
type GetConsumerChannelsChannelInput interface {
	pulumi.Input

	ToGetConsumerChannelsChannelOutput() GetConsumerChannelsChannelOutput
	ToGetConsumerChannelsChannelOutputWithContext(context.Context) GetConsumerChannelsChannelOutput
}

type GetConsumerChannelsChannelArgs struct {
	// The ID of the consumer group.
	ConsumerGroupId pulumi.StringInput `pulumi:"consumerGroupId"`
	// The name of the consumer group.
	ConsumerGroupName pulumi.StringInput `pulumi:"consumerGroupName"`
	// The username of the consumer group.
	ConsumerGroupUserName pulumi.StringInput `pulumi:"consumerGroupUserName"`
	// The time point when the client consumed the last message in the subscription channel.
	ConsumptionCheckpoint pulumi.StringInput `pulumi:"consumptionCheckpoint"`
	// The ID of the Consumer Channel.
	Id pulumi.StringInput `pulumi:"id"`
	// The message delay time, for the current time data subscription channel in the earliest time of unconsumed messages of the difference, in Unix timestamp format, which is measured in seconds.
	MessageDelay pulumi.IntInput `pulumi:"messageDelay"`
	// The total number of unconsumed messages.
	UnconsumedData pulumi.IntInput `pulumi:"unconsumedData"`
}

func (GetConsumerChannelsChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerChannelsChannel)(nil)).Elem()
}

func (i GetConsumerChannelsChannelArgs) ToGetConsumerChannelsChannelOutput() GetConsumerChannelsChannelOutput {
	return i.ToGetConsumerChannelsChannelOutputWithContext(context.Background())
}

func (i GetConsumerChannelsChannelArgs) ToGetConsumerChannelsChannelOutputWithContext(ctx context.Context) GetConsumerChannelsChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConsumerChannelsChannelOutput)
}

// GetConsumerChannelsChannelArrayInput is an input type that accepts GetConsumerChannelsChannelArray and GetConsumerChannelsChannelArrayOutput values.
// You can construct a concrete instance of `GetConsumerChannelsChannelArrayInput` via:
//
//          GetConsumerChannelsChannelArray{ GetConsumerChannelsChannelArgs{...} }
type GetConsumerChannelsChannelArrayInput interface {
	pulumi.Input

	ToGetConsumerChannelsChannelArrayOutput() GetConsumerChannelsChannelArrayOutput
	ToGetConsumerChannelsChannelArrayOutputWithContext(context.Context) GetConsumerChannelsChannelArrayOutput
}

type GetConsumerChannelsChannelArray []GetConsumerChannelsChannelInput

func (GetConsumerChannelsChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConsumerChannelsChannel)(nil)).Elem()
}

func (i GetConsumerChannelsChannelArray) ToGetConsumerChannelsChannelArrayOutput() GetConsumerChannelsChannelArrayOutput {
	return i.ToGetConsumerChannelsChannelArrayOutputWithContext(context.Background())
}

func (i GetConsumerChannelsChannelArray) ToGetConsumerChannelsChannelArrayOutputWithContext(ctx context.Context) GetConsumerChannelsChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConsumerChannelsChannelArrayOutput)
}

type GetConsumerChannelsChannelOutput struct{ *pulumi.OutputState }

func (GetConsumerChannelsChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerChannelsChannel)(nil)).Elem()
}

func (o GetConsumerChannelsChannelOutput) ToGetConsumerChannelsChannelOutput() GetConsumerChannelsChannelOutput {
	return o
}

func (o GetConsumerChannelsChannelOutput) ToGetConsumerChannelsChannelOutputWithContext(ctx context.Context) GetConsumerChannelsChannelOutput {
	return o
}

// The ID of the consumer group.
func (o GetConsumerChannelsChannelOutput) ConsumerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) string { return v.ConsumerGroupId }).(pulumi.StringOutput)
}

// The name of the consumer group.
func (o GetConsumerChannelsChannelOutput) ConsumerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) string { return v.ConsumerGroupName }).(pulumi.StringOutput)
}

// The username of the consumer group.
func (o GetConsumerChannelsChannelOutput) ConsumerGroupUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) string { return v.ConsumerGroupUserName }).(pulumi.StringOutput)
}

// The time point when the client consumed the last message in the subscription channel.
func (o GetConsumerChannelsChannelOutput) ConsumptionCheckpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) string { return v.ConsumptionCheckpoint }).(pulumi.StringOutput)
}

// The ID of the Consumer Channel.
func (o GetConsumerChannelsChannelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) string { return v.Id }).(pulumi.StringOutput)
}

// The message delay time, for the current time data subscription channel in the earliest time of unconsumed messages of the difference, in Unix timestamp format, which is measured in seconds.
func (o GetConsumerChannelsChannelOutput) MessageDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) int { return v.MessageDelay }).(pulumi.IntOutput)
}

// The total number of unconsumed messages.
func (o GetConsumerChannelsChannelOutput) UnconsumedData() pulumi.IntOutput {
	return o.ApplyT(func(v GetConsumerChannelsChannel) int { return v.UnconsumedData }).(pulumi.IntOutput)
}

type GetConsumerChannelsChannelArrayOutput struct{ *pulumi.OutputState }

func (GetConsumerChannelsChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConsumerChannelsChannel)(nil)).Elem()
}

func (o GetConsumerChannelsChannelArrayOutput) ToGetConsumerChannelsChannelArrayOutput() GetConsumerChannelsChannelArrayOutput {
	return o
}

func (o GetConsumerChannelsChannelArrayOutput) ToGetConsumerChannelsChannelArrayOutputWithContext(ctx context.Context) GetConsumerChannelsChannelArrayOutput {
	return o
}

func (o GetConsumerChannelsChannelArrayOutput) Index(i pulumi.IntInput) GetConsumerChannelsChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConsumerChannelsChannel {
		return vs[0].([]GetConsumerChannelsChannel)[vs[1].(int)]
	}).(GetConsumerChannelsChannelOutput)
}

type GetMigrationJobsJob struct {
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization.
	DataInitialization bool `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization bool `pulumi:"dataSynchronization"`
	// The Migration object, in the format of JSON strings.
	DbList string `pulumi:"dbList"`
	// The name of migrate the database.
	DestinationEndpointDataBaseName string `pulumi:"destinationEndpointDataBaseName"`
	// The type of destination database.
	DestinationEndpointEngineName string `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId string `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance.
	DestinationEndpointInstanceType string `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp string `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid string `pulumi:"destinationEndpointOracleSid"`
	// The port of source endpoint.
	DestinationEndpointPort string `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion string `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName string `pulumi:"destinationEndpointUserName"`
	// The Migration instance ID. The ID of `dts.MigrationInstance`.
	DtsInstanceId string `pulumi:"dtsInstanceId"`
	// The ID of the Migration Job.
	DtsJobId string `pulumi:"dtsJobId"`
	// The name of synchronization job.
	DtsJobName string `pulumi:"dtsJobName"`
	// The ID of the Migration Job. Its value is same as `dtsJobId`.
	Id string `pulumi:"id"`
	// The payment type of the Migration Instance.
	PaymentType string `pulumi:"paymentType"`
	// The name of migrate the database.
	SourceEndpointDatabaseName string `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database.
	SourceEndpointEngineName string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance.
	SourceEndpointInstanceType string `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId string `pulumi:"sourceEndpointOwnerId"`
	// The port of source endpoint.
	SourceEndpointPort string `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion string `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole string `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName string `pulumi:"sourceEndpointUserName"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization.
	StructureInitialization bool `pulumi:"structureInitialization"`
}

// GetMigrationJobsJobInput is an input type that accepts GetMigrationJobsJobArgs and GetMigrationJobsJobOutput values.
// You can construct a concrete instance of `GetMigrationJobsJobInput` via:
//
//          GetMigrationJobsJobArgs{...}
type GetMigrationJobsJobInput interface {
	pulumi.Input

	ToGetMigrationJobsJobOutput() GetMigrationJobsJobOutput
	ToGetMigrationJobsJobOutputWithContext(context.Context) GetMigrationJobsJobOutput
}

type GetMigrationJobsJobArgs struct {
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization.
	DataInitialization pulumi.BoolInput `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization pulumi.BoolInput `pulumi:"dataSynchronization"`
	// The Migration object, in the format of JSON strings.
	DbList pulumi.StringInput `pulumi:"dbList"`
	// The name of migrate the database.
	DestinationEndpointDataBaseName pulumi.StringInput `pulumi:"destinationEndpointDataBaseName"`
	// The type of destination database.
	DestinationEndpointEngineName pulumi.StringInput `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId pulumi.StringInput `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance.
	DestinationEndpointInstanceType pulumi.StringInput `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp pulumi.StringInput `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid pulumi.StringInput `pulumi:"destinationEndpointOracleSid"`
	// The port of source endpoint.
	DestinationEndpointPort pulumi.StringInput `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion pulumi.StringInput `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName pulumi.StringInput `pulumi:"destinationEndpointUserName"`
	// The Migration instance ID. The ID of `dts.MigrationInstance`.
	DtsInstanceId pulumi.StringInput `pulumi:"dtsInstanceId"`
	// The ID of the Migration Job.
	DtsJobId pulumi.StringInput `pulumi:"dtsJobId"`
	// The name of synchronization job.
	DtsJobName pulumi.StringInput `pulumi:"dtsJobName"`
	// The ID of the Migration Job. Its value is same as `dtsJobId`.
	Id pulumi.StringInput `pulumi:"id"`
	// The payment type of the Migration Instance.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The name of migrate the database.
	SourceEndpointDatabaseName pulumi.StringInput `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database.
	SourceEndpointEngineName pulumi.StringInput `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId pulumi.StringInput `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance.
	SourceEndpointInstanceType pulumi.StringInput `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp pulumi.StringInput `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid pulumi.StringInput `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId pulumi.StringInput `pulumi:"sourceEndpointOwnerId"`
	// The port of source endpoint.
	SourceEndpointPort pulumi.StringInput `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion pulumi.StringInput `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole pulumi.StringInput `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName pulumi.StringInput `pulumi:"sourceEndpointUserName"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization.
	StructureInitialization pulumi.BoolInput `pulumi:"structureInitialization"`
}

func (GetMigrationJobsJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrationJobsJob)(nil)).Elem()
}

func (i GetMigrationJobsJobArgs) ToGetMigrationJobsJobOutput() GetMigrationJobsJobOutput {
	return i.ToGetMigrationJobsJobOutputWithContext(context.Background())
}

func (i GetMigrationJobsJobArgs) ToGetMigrationJobsJobOutputWithContext(ctx context.Context) GetMigrationJobsJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMigrationJobsJobOutput)
}

// GetMigrationJobsJobArrayInput is an input type that accepts GetMigrationJobsJobArray and GetMigrationJobsJobArrayOutput values.
// You can construct a concrete instance of `GetMigrationJobsJobArrayInput` via:
//
//          GetMigrationJobsJobArray{ GetMigrationJobsJobArgs{...} }
type GetMigrationJobsJobArrayInput interface {
	pulumi.Input

	ToGetMigrationJobsJobArrayOutput() GetMigrationJobsJobArrayOutput
	ToGetMigrationJobsJobArrayOutputWithContext(context.Context) GetMigrationJobsJobArrayOutput
}

type GetMigrationJobsJobArray []GetMigrationJobsJobInput

func (GetMigrationJobsJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMigrationJobsJob)(nil)).Elem()
}

func (i GetMigrationJobsJobArray) ToGetMigrationJobsJobArrayOutput() GetMigrationJobsJobArrayOutput {
	return i.ToGetMigrationJobsJobArrayOutputWithContext(context.Background())
}

func (i GetMigrationJobsJobArray) ToGetMigrationJobsJobArrayOutputWithContext(ctx context.Context) GetMigrationJobsJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMigrationJobsJobArrayOutput)
}

type GetMigrationJobsJobOutput struct{ *pulumi.OutputState }

func (GetMigrationJobsJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrationJobsJob)(nil)).Elem()
}

func (o GetMigrationJobsJobOutput) ToGetMigrationJobsJobOutput() GetMigrationJobsJobOutput {
	return o
}

func (o GetMigrationJobsJobOutput) ToGetMigrationJobsJobOutputWithContext(ctx context.Context) GetMigrationJobsJobOutput {
	return o
}

// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization.
func (o GetMigrationJobsJobOutput) DataInitialization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) bool { return v.DataInitialization }).(pulumi.BoolOutput)
}

// Whether to perform incremental data migration for migration types or synchronization values include:
func (o GetMigrationJobsJobOutput) DataSynchronization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) bool { return v.DataSynchronization }).(pulumi.BoolOutput)
}

// The Migration object, in the format of JSON strings.
func (o GetMigrationJobsJobOutput) DbList() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DbList }).(pulumi.StringOutput)
}

// The name of migrate the database.
func (o GetMigrationJobsJobOutput) DestinationEndpointDataBaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointDataBaseName }).(pulumi.StringOutput)
}

// The type of destination database.
func (o GetMigrationJobsJobOutput) DestinationEndpointEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointEngineName }).(pulumi.StringOutput)
}

// The ID of destination instance.
func (o GetMigrationJobsJobOutput) DestinationEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointInstanceId }).(pulumi.StringOutput)
}

// The type of destination instance.
func (o GetMigrationJobsJobOutput) DestinationEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointInstanceType }).(pulumi.StringOutput)
}

// The ip of source endpoint.
func (o GetMigrationJobsJobOutput) DestinationEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointIp }).(pulumi.StringOutput)
}

// The SID of Oracle database.
func (o GetMigrationJobsJobOutput) DestinationEndpointOracleSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointOracleSid }).(pulumi.StringOutput)
}

// The port of source endpoint.
func (o GetMigrationJobsJobOutput) DestinationEndpointPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointPort }).(pulumi.StringOutput)
}

// The region of destination instance.
func (o GetMigrationJobsJobOutput) DestinationEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointRegion }).(pulumi.StringOutput)
}

// The username of database account.
func (o GetMigrationJobsJobOutput) DestinationEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DestinationEndpointUserName }).(pulumi.StringOutput)
}

// The Migration instance ID. The ID of `dts.MigrationInstance`.
func (o GetMigrationJobsJobOutput) DtsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DtsInstanceId }).(pulumi.StringOutput)
}

// The ID of the Migration Job.
func (o GetMigrationJobsJobOutput) DtsJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DtsJobId }).(pulumi.StringOutput)
}

// The name of synchronization job.
func (o GetMigrationJobsJobOutput) DtsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.DtsJobName }).(pulumi.StringOutput)
}

// The ID of the Migration Job. Its value is same as `dtsJobId`.
func (o GetMigrationJobsJobOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.Id }).(pulumi.StringOutput)
}

// The payment type of the Migration Instance.
func (o GetMigrationJobsJobOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The name of migrate the database.
func (o GetMigrationJobsJobOutput) SourceEndpointDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointDatabaseName }).(pulumi.StringOutput)
}

// The type of source database.
func (o GetMigrationJobsJobOutput) SourceEndpointEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointEngineName }).(pulumi.StringOutput)
}

// The ID of source instance.
func (o GetMigrationJobsJobOutput) SourceEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointInstanceId }).(pulumi.StringOutput)
}

// The type of source instance.
func (o GetMigrationJobsJobOutput) SourceEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointInstanceType }).(pulumi.StringOutput)
}

// The ip of source endpoint.
func (o GetMigrationJobsJobOutput) SourceEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointIp }).(pulumi.StringOutput)
}

// The SID of Oracle database.
func (o GetMigrationJobsJobOutput) SourceEndpointOracleSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointOracleSid }).(pulumi.StringOutput)
}

// The Alibaba Cloud account ID to which the source instance belongs.
func (o GetMigrationJobsJobOutput) SourceEndpointOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointOwnerId }).(pulumi.StringOutput)
}

// The port of source endpoint.
func (o GetMigrationJobsJobOutput) SourceEndpointPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointPort }).(pulumi.StringOutput)
}

// The region of source instance.
func (o GetMigrationJobsJobOutput) SourceEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointRegion }).(pulumi.StringOutput)
}

// The name of the role configured for the cloud account to which the source instance belongs.
func (o GetMigrationJobsJobOutput) SourceEndpointRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointRole }).(pulumi.StringOutput)
}

// The username of database account.
func (o GetMigrationJobsJobOutput) SourceEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.SourceEndpointUserName }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetMigrationJobsJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) string { return v.Status }).(pulumi.StringOutput)
}

// Whether to perform a database table structure to migrate or initialization.
func (o GetMigrationJobsJobOutput) StructureInitialization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMigrationJobsJob) bool { return v.StructureInitialization }).(pulumi.BoolOutput)
}

type GetMigrationJobsJobArrayOutput struct{ *pulumi.OutputState }

func (GetMigrationJobsJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMigrationJobsJob)(nil)).Elem()
}

func (o GetMigrationJobsJobArrayOutput) ToGetMigrationJobsJobArrayOutput() GetMigrationJobsJobArrayOutput {
	return o
}

func (o GetMigrationJobsJobArrayOutput) ToGetMigrationJobsJobArrayOutputWithContext(ctx context.Context) GetMigrationJobsJobArrayOutput {
	return o
}

func (o GetMigrationJobsJobArrayOutput) Index(i pulumi.IntInput) GetMigrationJobsJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMigrationJobsJob {
		return vs[0].([]GetMigrationJobsJob)[vs[1].(int)]
	}).(GetMigrationJobsJobOutput)
}

type GetSubscriptionJobsJob struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint string `pulumi:"checkpoint"`
	// The creation time of subscription job instance.
	CreateTime string `pulumi:"createTime"`
	// Subscription object, in the format of JSON strings.
	DbList string `pulumi:"dbList"`
	// The ID of subscription job instance.
	DtsInstanceId string `pulumi:"dtsInstanceId"`
	// The ID of subscription job instance.
	DtsJobId string `pulumi:"dtsJobId"`
	// The name of subscription job instance.
	DtsJobName string `pulumi:"dtsJobName"`
	// The Expiration Time. Formatting with yyyy-MM-ddTHH:mm:ssZ(UTC time).
	ExpireTime string `pulumi:"expireTime"`
	// The ID of the Subscription Job.
	Id string `pulumi:"id"`
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType string `pulumi:"paymentType"`
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName string `pulumi:"sourceEndpointDatabaseName"`
	// The source database type value is MySQL or Oracle.
	SourceEndpointEngineName string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType string `pulumi:"sourceEndpointInstanceType"`
	// The IP of source endpoint.
	SourceEndpointIp string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId string `pulumi:"sourceEndpointOwnerId"`
	// The  port of source database.
	SourceEndpointPort string `pulumi:"sourceEndpointPort"`
	// The region of source database.
	SourceEndpointRegion string `pulumi:"sourceEndpointRegion"`
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole string `pulumi:"sourceEndpointRole"`
	// The username of source database instance account.
	SourceEndpointUserName string `pulumi:"sourceEndpointUserName"`
	// The status of the task. Valid values: `NotStarted`, `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state of `Normal` to start the job, and specify this state of `Abnormal` to stop the job.
	Status string `pulumi:"status"`
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl bool `pulumi:"subscriptionDataTypeDdl"`
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml bool `pulumi:"subscriptionDataTypeDml"`
	// Network information.
	SubscriptionHosts []GetSubscriptionJobsJobSubscriptionHost `pulumi:"subscriptionHosts"`
	// The type of subscription instance network. Valid value: `classic`, `vpc`.
	SubscriptionInstanceNetworkType string `pulumi:"subscriptionInstanceNetworkType"`
	// The ID of subscription instance vpc.
	SubscriptionInstanceVpcId string `pulumi:"subscriptionInstanceVpcId"`
	// The ID of subscription instance vswitch.
	SubscriptionInstanceVswitchId string `pulumi:"subscriptionInstanceVswitchId"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetSubscriptionJobsJobInput is an input type that accepts GetSubscriptionJobsJobArgs and GetSubscriptionJobsJobOutput values.
// You can construct a concrete instance of `GetSubscriptionJobsJobInput` via:
//
//          GetSubscriptionJobsJobArgs{...}
type GetSubscriptionJobsJobInput interface {
	pulumi.Input

	ToGetSubscriptionJobsJobOutput() GetSubscriptionJobsJobOutput
	ToGetSubscriptionJobsJobOutputWithContext(context.Context) GetSubscriptionJobsJobOutput
}

type GetSubscriptionJobsJobArgs struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint pulumi.StringInput `pulumi:"checkpoint"`
	// The creation time of subscription job instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Subscription object, in the format of JSON strings.
	DbList pulumi.StringInput `pulumi:"dbList"`
	// The ID of subscription job instance.
	DtsInstanceId pulumi.StringInput `pulumi:"dtsInstanceId"`
	// The ID of subscription job instance.
	DtsJobId pulumi.StringInput `pulumi:"dtsJobId"`
	// The name of subscription job instance.
	DtsJobName pulumi.StringInput `pulumi:"dtsJobName"`
	// The Expiration Time. Formatting with yyyy-MM-ddTHH:mm:ssZ(UTC time).
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of the Subscription Job.
	Id pulumi.StringInput `pulumi:"id"`
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName pulumi.StringInput `pulumi:"sourceEndpointDatabaseName"`
	// The source database type value is MySQL or Oracle.
	SourceEndpointEngineName pulumi.StringInput `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId pulumi.StringInput `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType pulumi.StringInput `pulumi:"sourceEndpointInstanceType"`
	// The IP of source endpoint.
	SourceEndpointIp pulumi.StringInput `pulumi:"sourceEndpointIp"`
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid pulumi.StringInput `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId pulumi.StringInput `pulumi:"sourceEndpointOwnerId"`
	// The  port of source database.
	SourceEndpointPort pulumi.StringInput `pulumi:"sourceEndpointPort"`
	// The region of source database.
	SourceEndpointRegion pulumi.StringInput `pulumi:"sourceEndpointRegion"`
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole pulumi.StringInput `pulumi:"sourceEndpointRole"`
	// The username of source database instance account.
	SourceEndpointUserName pulumi.StringInput `pulumi:"sourceEndpointUserName"`
	// The status of the task. Valid values: `NotStarted`, `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state of `Normal` to start the job, and specify this state of `Abnormal` to stop the job.
	Status pulumi.StringInput `pulumi:"status"`
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl pulumi.BoolInput `pulumi:"subscriptionDataTypeDdl"`
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml pulumi.BoolInput `pulumi:"subscriptionDataTypeDml"`
	// Network information.
	SubscriptionHosts GetSubscriptionJobsJobSubscriptionHostArrayInput `pulumi:"subscriptionHosts"`
	// The type of subscription instance network. Valid value: `classic`, `vpc`.
	SubscriptionInstanceNetworkType pulumi.StringInput `pulumi:"subscriptionInstanceNetworkType"`
	// The ID of subscription instance vpc.
	SubscriptionInstanceVpcId pulumi.StringInput `pulumi:"subscriptionInstanceVpcId"`
	// The ID of subscription instance vswitch.
	SubscriptionInstanceVswitchId pulumi.StringInput `pulumi:"subscriptionInstanceVswitchId"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetSubscriptionJobsJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsJob)(nil)).Elem()
}

func (i GetSubscriptionJobsJobArgs) ToGetSubscriptionJobsJobOutput() GetSubscriptionJobsJobOutput {
	return i.ToGetSubscriptionJobsJobOutputWithContext(context.Background())
}

func (i GetSubscriptionJobsJobArgs) ToGetSubscriptionJobsJobOutputWithContext(ctx context.Context) GetSubscriptionJobsJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionJobsJobOutput)
}

// GetSubscriptionJobsJobArrayInput is an input type that accepts GetSubscriptionJobsJobArray and GetSubscriptionJobsJobArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionJobsJobArrayInput` via:
//
//          GetSubscriptionJobsJobArray{ GetSubscriptionJobsJobArgs{...} }
type GetSubscriptionJobsJobArrayInput interface {
	pulumi.Input

	ToGetSubscriptionJobsJobArrayOutput() GetSubscriptionJobsJobArrayOutput
	ToGetSubscriptionJobsJobArrayOutputWithContext(context.Context) GetSubscriptionJobsJobArrayOutput
}

type GetSubscriptionJobsJobArray []GetSubscriptionJobsJobInput

func (GetSubscriptionJobsJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionJobsJob)(nil)).Elem()
}

func (i GetSubscriptionJobsJobArray) ToGetSubscriptionJobsJobArrayOutput() GetSubscriptionJobsJobArrayOutput {
	return i.ToGetSubscriptionJobsJobArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionJobsJobArray) ToGetSubscriptionJobsJobArrayOutputWithContext(ctx context.Context) GetSubscriptionJobsJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionJobsJobArrayOutput)
}

type GetSubscriptionJobsJobOutput struct{ *pulumi.OutputState }

func (GetSubscriptionJobsJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsJob)(nil)).Elem()
}

func (o GetSubscriptionJobsJobOutput) ToGetSubscriptionJobsJobOutput() GetSubscriptionJobsJobOutput {
	return o
}

func (o GetSubscriptionJobsJobOutput) ToGetSubscriptionJobsJobOutputWithContext(ctx context.Context) GetSubscriptionJobsJobOutput {
	return o
}

// Subscription start time in Unix timestamp format.
func (o GetSubscriptionJobsJobOutput) Checkpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.Checkpoint }).(pulumi.StringOutput)
}

// The creation time of subscription job instance.
func (o GetSubscriptionJobsJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Subscription object, in the format of JSON strings.
func (o GetSubscriptionJobsJobOutput) DbList() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.DbList }).(pulumi.StringOutput)
}

// The ID of subscription job instance.
func (o GetSubscriptionJobsJobOutput) DtsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.DtsInstanceId }).(pulumi.StringOutput)
}

// The ID of subscription job instance.
func (o GetSubscriptionJobsJobOutput) DtsJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.DtsJobId }).(pulumi.StringOutput)
}

// The name of subscription job instance.
func (o GetSubscriptionJobsJobOutput) DtsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.DtsJobName }).(pulumi.StringOutput)
}

// The Expiration Time. Formatting with yyyy-MM-ddTHH:mm:ssZ(UTC time).
func (o GetSubscriptionJobsJobOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of the Subscription Job.
func (o GetSubscriptionJobsJobOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.Id }).(pulumi.StringOutput)
}

// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
func (o GetSubscriptionJobsJobOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.PaymentType }).(pulumi.StringOutput)
}

// To subscribe to the name of the database.
func (o GetSubscriptionJobsJobOutput) SourceEndpointDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointDatabaseName }).(pulumi.StringOutput)
}

// The source database type value is MySQL or Oracle.
func (o GetSubscriptionJobsJobOutput) SourceEndpointEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointEngineName }).(pulumi.StringOutput)
}

// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
func (o GetSubscriptionJobsJobOutput) SourceEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointInstanceId }).(pulumi.StringOutput)
}

// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
func (o GetSubscriptionJobsJobOutput) SourceEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointInstanceType }).(pulumi.StringOutput)
}

// The IP of source endpoint.
func (o GetSubscriptionJobsJobOutput) SourceEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointIp }).(pulumi.StringOutput)
}

// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
func (o GetSubscriptionJobsJobOutput) SourceEndpointOracleSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointOracleSid }).(pulumi.StringOutput)
}

// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
func (o GetSubscriptionJobsJobOutput) SourceEndpointOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointOwnerId }).(pulumi.StringOutput)
}

// The  port of source database.
func (o GetSubscriptionJobsJobOutput) SourceEndpointPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointPort }).(pulumi.StringOutput)
}

// The region of source database.
func (o GetSubscriptionJobsJobOutput) SourceEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointRegion }).(pulumi.StringOutput)
}

// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
func (o GetSubscriptionJobsJobOutput) SourceEndpointRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointRole }).(pulumi.StringOutput)
}

// The username of source database instance account.
func (o GetSubscriptionJobsJobOutput) SourceEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SourceEndpointUserName }).(pulumi.StringOutput)
}

// The status of the task. Valid values: `NotStarted`, `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state of `Normal` to start the job, and specify this state of `Abnormal` to stop the job.
func (o GetSubscriptionJobsJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.Status }).(pulumi.StringOutput)
}

// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
func (o GetSubscriptionJobsJobOutput) SubscriptionDataTypeDdl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) bool { return v.SubscriptionDataTypeDdl }).(pulumi.BoolOutput)
}

// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
func (o GetSubscriptionJobsJobOutput) SubscriptionDataTypeDml() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) bool { return v.SubscriptionDataTypeDml }).(pulumi.BoolOutput)
}

// Network information.
func (o GetSubscriptionJobsJobOutput) SubscriptionHosts() GetSubscriptionJobsJobSubscriptionHostArrayOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) []GetSubscriptionJobsJobSubscriptionHost { return v.SubscriptionHosts }).(GetSubscriptionJobsJobSubscriptionHostArrayOutput)
}

// The type of subscription instance network. Valid value: `classic`, `vpc`.
func (o GetSubscriptionJobsJobOutput) SubscriptionInstanceNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SubscriptionInstanceNetworkType }).(pulumi.StringOutput)
}

// The ID of subscription instance vpc.
func (o GetSubscriptionJobsJobOutput) SubscriptionInstanceVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SubscriptionInstanceVpcId }).(pulumi.StringOutput)
}

// The ID of subscription instance vswitch.
func (o GetSubscriptionJobsJobOutput) SubscriptionInstanceVswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) string { return v.SubscriptionInstanceVswitchId }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetSubscriptionJobsJobOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJob) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetSubscriptionJobsJobArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionJobsJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionJobsJob)(nil)).Elem()
}

func (o GetSubscriptionJobsJobArrayOutput) ToGetSubscriptionJobsJobArrayOutput() GetSubscriptionJobsJobArrayOutput {
	return o
}

func (o GetSubscriptionJobsJobArrayOutput) ToGetSubscriptionJobsJobArrayOutputWithContext(ctx context.Context) GetSubscriptionJobsJobArrayOutput {
	return o
}

func (o GetSubscriptionJobsJobArrayOutput) Index(i pulumi.IntInput) GetSubscriptionJobsJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionJobsJob {
		return vs[0].([]GetSubscriptionJobsJob)[vs[1].(int)]
	}).(GetSubscriptionJobsJobOutput)
}

type GetSubscriptionJobsJobSubscriptionHost struct {
	// Classic network address.
	PrivateHost string `pulumi:"privateHost"`
	// Public network address.
	PublicHost string `pulumi:"publicHost"`
	// VPC network address.
	VpcHost string `pulumi:"vpcHost"`
}

// GetSubscriptionJobsJobSubscriptionHostInput is an input type that accepts GetSubscriptionJobsJobSubscriptionHostArgs and GetSubscriptionJobsJobSubscriptionHostOutput values.
// You can construct a concrete instance of `GetSubscriptionJobsJobSubscriptionHostInput` via:
//
//          GetSubscriptionJobsJobSubscriptionHostArgs{...}
type GetSubscriptionJobsJobSubscriptionHostInput interface {
	pulumi.Input

	ToGetSubscriptionJobsJobSubscriptionHostOutput() GetSubscriptionJobsJobSubscriptionHostOutput
	ToGetSubscriptionJobsJobSubscriptionHostOutputWithContext(context.Context) GetSubscriptionJobsJobSubscriptionHostOutput
}

type GetSubscriptionJobsJobSubscriptionHostArgs struct {
	// Classic network address.
	PrivateHost pulumi.StringInput `pulumi:"privateHost"`
	// Public network address.
	PublicHost pulumi.StringInput `pulumi:"publicHost"`
	// VPC network address.
	VpcHost pulumi.StringInput `pulumi:"vpcHost"`
}

func (GetSubscriptionJobsJobSubscriptionHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsJobSubscriptionHost)(nil)).Elem()
}

func (i GetSubscriptionJobsJobSubscriptionHostArgs) ToGetSubscriptionJobsJobSubscriptionHostOutput() GetSubscriptionJobsJobSubscriptionHostOutput {
	return i.ToGetSubscriptionJobsJobSubscriptionHostOutputWithContext(context.Background())
}

func (i GetSubscriptionJobsJobSubscriptionHostArgs) ToGetSubscriptionJobsJobSubscriptionHostOutputWithContext(ctx context.Context) GetSubscriptionJobsJobSubscriptionHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionJobsJobSubscriptionHostOutput)
}

// GetSubscriptionJobsJobSubscriptionHostArrayInput is an input type that accepts GetSubscriptionJobsJobSubscriptionHostArray and GetSubscriptionJobsJobSubscriptionHostArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionJobsJobSubscriptionHostArrayInput` via:
//
//          GetSubscriptionJobsJobSubscriptionHostArray{ GetSubscriptionJobsJobSubscriptionHostArgs{...} }
type GetSubscriptionJobsJobSubscriptionHostArrayInput interface {
	pulumi.Input

	ToGetSubscriptionJobsJobSubscriptionHostArrayOutput() GetSubscriptionJobsJobSubscriptionHostArrayOutput
	ToGetSubscriptionJobsJobSubscriptionHostArrayOutputWithContext(context.Context) GetSubscriptionJobsJobSubscriptionHostArrayOutput
}

type GetSubscriptionJobsJobSubscriptionHostArray []GetSubscriptionJobsJobSubscriptionHostInput

func (GetSubscriptionJobsJobSubscriptionHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionJobsJobSubscriptionHost)(nil)).Elem()
}

func (i GetSubscriptionJobsJobSubscriptionHostArray) ToGetSubscriptionJobsJobSubscriptionHostArrayOutput() GetSubscriptionJobsJobSubscriptionHostArrayOutput {
	return i.ToGetSubscriptionJobsJobSubscriptionHostArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionJobsJobSubscriptionHostArray) ToGetSubscriptionJobsJobSubscriptionHostArrayOutputWithContext(ctx context.Context) GetSubscriptionJobsJobSubscriptionHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionJobsJobSubscriptionHostArrayOutput)
}

type GetSubscriptionJobsJobSubscriptionHostOutput struct{ *pulumi.OutputState }

func (GetSubscriptionJobsJobSubscriptionHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsJobSubscriptionHost)(nil)).Elem()
}

func (o GetSubscriptionJobsJobSubscriptionHostOutput) ToGetSubscriptionJobsJobSubscriptionHostOutput() GetSubscriptionJobsJobSubscriptionHostOutput {
	return o
}

func (o GetSubscriptionJobsJobSubscriptionHostOutput) ToGetSubscriptionJobsJobSubscriptionHostOutputWithContext(ctx context.Context) GetSubscriptionJobsJobSubscriptionHostOutput {
	return o
}

// Classic network address.
func (o GetSubscriptionJobsJobSubscriptionHostOutput) PrivateHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJobSubscriptionHost) string { return v.PrivateHost }).(pulumi.StringOutput)
}

// Public network address.
func (o GetSubscriptionJobsJobSubscriptionHostOutput) PublicHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJobSubscriptionHost) string { return v.PublicHost }).(pulumi.StringOutput)
}

// VPC network address.
func (o GetSubscriptionJobsJobSubscriptionHostOutput) VpcHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsJobSubscriptionHost) string { return v.VpcHost }).(pulumi.StringOutput)
}

type GetSubscriptionJobsJobSubscriptionHostArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionJobsJobSubscriptionHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionJobsJobSubscriptionHost)(nil)).Elem()
}

func (o GetSubscriptionJobsJobSubscriptionHostArrayOutput) ToGetSubscriptionJobsJobSubscriptionHostArrayOutput() GetSubscriptionJobsJobSubscriptionHostArrayOutput {
	return o
}

func (o GetSubscriptionJobsJobSubscriptionHostArrayOutput) ToGetSubscriptionJobsJobSubscriptionHostArrayOutputWithContext(ctx context.Context) GetSubscriptionJobsJobSubscriptionHostArrayOutput {
	return o
}

func (o GetSubscriptionJobsJobSubscriptionHostArrayOutput) Index(i pulumi.IntInput) GetSubscriptionJobsJobSubscriptionHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionJobsJobSubscriptionHost {
		return vs[0].([]GetSubscriptionJobsJobSubscriptionHost)[vs[1].(int)]
	}).(GetSubscriptionJobsJobSubscriptionHostOutput)
}

type GetSynchronizationJobsJob struct {
	// Start time in Unix timestamp format.
	Checkpoint string `pulumi:"checkpoint"`
	CreateTime string `pulumi:"createTime"`
	// Whether to execute DTS supports schema migration, full data migration, or full-data initialization.
	DataInitialization bool `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization.
	DataSynchronization bool `pulumi:"dataSynchronization"`
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList string `pulumi:"dbList"`
	// The name of migrate the database.
	DestinationEndpointDataBaseName string `pulumi:"destinationEndpointDataBaseName"`
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName string `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId string `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType string `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp string `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid string `pulumi:"destinationEndpointOracleSid"`
	// The port of source endpoint.
	DestinationEndpointPort string `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion string `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName string `pulumi:"destinationEndpointUserName"`
	DtsInstanceId               string `pulumi:"dtsInstanceId"`
	DtsJobId                    string `pulumi:"dtsJobId"`
	// The name of synchronization job.
	DtsJobName string `pulumi:"dtsJobName"`
	ExpireTime string `pulumi:"expireTime"`
	// The ID of synchronizing instance. It's the ID of resource `dts.SynchronizationInstance`.
	Id string `pulumi:"id"`
	// The name of migrate the database.
	SourceEndpointDatabaseName string `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType string `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId string `pulumi:"sourceEndpointOwnerId"`
	// The port of source endpoint.
	SourceEndpointPort string `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion string `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole string `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName string `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status string `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization bool `pulumi:"structureInitialization"`
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection string `pulumi:"synchronizationDirection"`
}

// GetSynchronizationJobsJobInput is an input type that accepts GetSynchronizationJobsJobArgs and GetSynchronizationJobsJobOutput values.
// You can construct a concrete instance of `GetSynchronizationJobsJobInput` via:
//
//          GetSynchronizationJobsJobArgs{...}
type GetSynchronizationJobsJobInput interface {
	pulumi.Input

	ToGetSynchronizationJobsJobOutput() GetSynchronizationJobsJobOutput
	ToGetSynchronizationJobsJobOutputWithContext(context.Context) GetSynchronizationJobsJobOutput
}

type GetSynchronizationJobsJobArgs struct {
	// Start time in Unix timestamp format.
	Checkpoint pulumi.StringInput `pulumi:"checkpoint"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether to execute DTS supports schema migration, full data migration, or full-data initialization.
	DataInitialization pulumi.BoolInput `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization.
	DataSynchronization pulumi.BoolInput `pulumi:"dataSynchronization"`
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringInput `pulumi:"dbList"`
	// The name of migrate the database.
	DestinationEndpointDataBaseName pulumi.StringInput `pulumi:"destinationEndpointDataBaseName"`
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName pulumi.StringInput `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId pulumi.StringInput `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType pulumi.StringInput `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp pulumi.StringInput `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid pulumi.StringInput `pulumi:"destinationEndpointOracleSid"`
	// The port of source endpoint.
	DestinationEndpointPort pulumi.StringInput `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion pulumi.StringInput `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName pulumi.StringInput `pulumi:"destinationEndpointUserName"`
	DtsInstanceId               pulumi.StringInput `pulumi:"dtsInstanceId"`
	DtsJobId                    pulumi.StringInput `pulumi:"dtsJobId"`
	// The name of synchronization job.
	DtsJobName pulumi.StringInput `pulumi:"dtsJobName"`
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of synchronizing instance. It's the ID of resource `dts.SynchronizationInstance`.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of migrate the database.
	SourceEndpointDatabaseName pulumi.StringInput `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName pulumi.StringInput `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId pulumi.StringInput `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType pulumi.StringInput `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp pulumi.StringInput `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid pulumi.StringInput `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId pulumi.StringInput `pulumi:"sourceEndpointOwnerId"`
	// The port of source endpoint.
	SourceEndpointPort pulumi.StringInput `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion pulumi.StringInput `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole pulumi.StringInput `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName pulumi.StringInput `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status pulumi.StringInput `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization pulumi.BoolInput `pulumi:"structureInitialization"`
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection pulumi.StringInput `pulumi:"synchronizationDirection"`
}

func (GetSynchronizationJobsJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSynchronizationJobsJob)(nil)).Elem()
}

func (i GetSynchronizationJobsJobArgs) ToGetSynchronizationJobsJobOutput() GetSynchronizationJobsJobOutput {
	return i.ToGetSynchronizationJobsJobOutputWithContext(context.Background())
}

func (i GetSynchronizationJobsJobArgs) ToGetSynchronizationJobsJobOutputWithContext(ctx context.Context) GetSynchronizationJobsJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSynchronizationJobsJobOutput)
}

// GetSynchronizationJobsJobArrayInput is an input type that accepts GetSynchronizationJobsJobArray and GetSynchronizationJobsJobArrayOutput values.
// You can construct a concrete instance of `GetSynchronizationJobsJobArrayInput` via:
//
//          GetSynchronizationJobsJobArray{ GetSynchronizationJobsJobArgs{...} }
type GetSynchronizationJobsJobArrayInput interface {
	pulumi.Input

	ToGetSynchronizationJobsJobArrayOutput() GetSynchronizationJobsJobArrayOutput
	ToGetSynchronizationJobsJobArrayOutputWithContext(context.Context) GetSynchronizationJobsJobArrayOutput
}

type GetSynchronizationJobsJobArray []GetSynchronizationJobsJobInput

func (GetSynchronizationJobsJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSynchronizationJobsJob)(nil)).Elem()
}

func (i GetSynchronizationJobsJobArray) ToGetSynchronizationJobsJobArrayOutput() GetSynchronizationJobsJobArrayOutput {
	return i.ToGetSynchronizationJobsJobArrayOutputWithContext(context.Background())
}

func (i GetSynchronizationJobsJobArray) ToGetSynchronizationJobsJobArrayOutputWithContext(ctx context.Context) GetSynchronizationJobsJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSynchronizationJobsJobArrayOutput)
}

type GetSynchronizationJobsJobOutput struct{ *pulumi.OutputState }

func (GetSynchronizationJobsJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSynchronizationJobsJob)(nil)).Elem()
}

func (o GetSynchronizationJobsJobOutput) ToGetSynchronizationJobsJobOutput() GetSynchronizationJobsJobOutput {
	return o
}

func (o GetSynchronizationJobsJobOutput) ToGetSynchronizationJobsJobOutputWithContext(ctx context.Context) GetSynchronizationJobsJobOutput {
	return o
}

// Start time in Unix timestamp format.
func (o GetSynchronizationJobsJobOutput) Checkpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.Checkpoint }).(pulumi.StringOutput)
}

func (o GetSynchronizationJobsJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether to execute DTS supports schema migration, full data migration, or full-data initialization.
func (o GetSynchronizationJobsJobOutput) DataInitialization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) bool { return v.DataInitialization }).(pulumi.BoolOutput)
}

// Whether to perform incremental data migration for migration types or synchronization.
func (o GetSynchronizationJobsJobOutput) DataSynchronization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) bool { return v.DataSynchronization }).(pulumi.BoolOutput)
}

// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
func (o GetSynchronizationJobsJobOutput) DbList() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DbList }).(pulumi.StringOutput)
}

// The name of migrate the database.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointDataBaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointDataBaseName }).(pulumi.StringOutput)
}

// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointEngineName }).(pulumi.StringOutput)
}

// The ID of destination instance.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointInstanceId }).(pulumi.StringOutput)
}

// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointInstanceType }).(pulumi.StringOutput)
}

// The ip of source endpoint.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointIp }).(pulumi.StringOutput)
}

// The SID of Oracle database.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointOracleSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointOracleSid }).(pulumi.StringOutput)
}

// The port of source endpoint.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointPort }).(pulumi.StringOutput)
}

// The region of destination instance.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointRegion }).(pulumi.StringOutput)
}

// The username of database account.
func (o GetSynchronizationJobsJobOutput) DestinationEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DestinationEndpointUserName }).(pulumi.StringOutput)
}

func (o GetSynchronizationJobsJobOutput) DtsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DtsInstanceId }).(pulumi.StringOutput)
}

func (o GetSynchronizationJobsJobOutput) DtsJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DtsJobId }).(pulumi.StringOutput)
}

// The name of synchronization job.
func (o GetSynchronizationJobsJobOutput) DtsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.DtsJobName }).(pulumi.StringOutput)
}

func (o GetSynchronizationJobsJobOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of synchronizing instance. It's the ID of resource `dts.SynchronizationInstance`.
func (o GetSynchronizationJobsJobOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.Id }).(pulumi.StringOutput)
}

// The name of migrate the database.
func (o GetSynchronizationJobsJobOutput) SourceEndpointDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointDatabaseName }).(pulumi.StringOutput)
}

// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
func (o GetSynchronizationJobsJobOutput) SourceEndpointEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointEngineName }).(pulumi.StringOutput)
}

// The ID of source instance.
func (o GetSynchronizationJobsJobOutput) SourceEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointInstanceId }).(pulumi.StringOutput)
}

// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
func (o GetSynchronizationJobsJobOutput) SourceEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointInstanceType }).(pulumi.StringOutput)
}

// The ip of source endpoint.
func (o GetSynchronizationJobsJobOutput) SourceEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointIp }).(pulumi.StringOutput)
}

// The SID of Oracle database.
func (o GetSynchronizationJobsJobOutput) SourceEndpointOracleSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointOracleSid }).(pulumi.StringOutput)
}

// The Alibaba Cloud account ID to which the source instance belongs.
func (o GetSynchronizationJobsJobOutput) SourceEndpointOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointOwnerId }).(pulumi.StringOutput)
}

// The port of source endpoint.
func (o GetSynchronizationJobsJobOutput) SourceEndpointPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointPort }).(pulumi.StringOutput)
}

// The region of source instance.
func (o GetSynchronizationJobsJobOutput) SourceEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointRegion }).(pulumi.StringOutput)
}

// The name of the role configured for the cloud account to which the source instance belongs.
func (o GetSynchronizationJobsJobOutput) SourceEndpointRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointRole }).(pulumi.StringOutput)
}

// The username of database account.
func (o GetSynchronizationJobsJobOutput) SourceEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SourceEndpointUserName }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
func (o GetSynchronizationJobsJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.Status }).(pulumi.StringOutput)
}

// Whether to perform a database table structure to migrate or initialization values include:
func (o GetSynchronizationJobsJobOutput) StructureInitialization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) bool { return v.StructureInitialization }).(pulumi.BoolOutput)
}

// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
func (o GetSynchronizationJobsJobOutput) SynchronizationDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSynchronizationJobsJob) string { return v.SynchronizationDirection }).(pulumi.StringOutput)
}

type GetSynchronizationJobsJobArrayOutput struct{ *pulumi.OutputState }

func (GetSynchronizationJobsJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSynchronizationJobsJob)(nil)).Elem()
}

func (o GetSynchronizationJobsJobArrayOutput) ToGetSynchronizationJobsJobArrayOutput() GetSynchronizationJobsJobArrayOutput {
	return o
}

func (o GetSynchronizationJobsJobArrayOutput) ToGetSynchronizationJobsJobArrayOutputWithContext(ctx context.Context) GetSynchronizationJobsJobArrayOutput {
	return o
}

func (o GetSynchronizationJobsJobArrayOutput) Index(i pulumi.IntInput) GetSynchronizationJobsJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSynchronizationJobsJob {
		return vs[0].([]GetSynchronizationJobsJob)[vs[1].(int)]
	}).(GetSynchronizationJobsJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetConsumerChannelsChannelInput)(nil)).Elem(), GetConsumerChannelsChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConsumerChannelsChannelArrayInput)(nil)).Elem(), GetConsumerChannelsChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMigrationJobsJobInput)(nil)).Elem(), GetMigrationJobsJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMigrationJobsJobArrayInput)(nil)).Elem(), GetMigrationJobsJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionJobsJobInput)(nil)).Elem(), GetSubscriptionJobsJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionJobsJobArrayInput)(nil)).Elem(), GetSubscriptionJobsJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionJobsJobSubscriptionHostInput)(nil)).Elem(), GetSubscriptionJobsJobSubscriptionHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionJobsJobSubscriptionHostArrayInput)(nil)).Elem(), GetSubscriptionJobsJobSubscriptionHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSynchronizationJobsJobInput)(nil)).Elem(), GetSynchronizationJobsJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSynchronizationJobsJobArrayInput)(nil)).Elem(), GetSynchronizationJobsJobArray{})
	pulumi.RegisterOutputType(GetConsumerChannelsChannelOutput{})
	pulumi.RegisterOutputType(GetConsumerChannelsChannelArrayOutput{})
	pulumi.RegisterOutputType(GetMigrationJobsJobOutput{})
	pulumi.RegisterOutputType(GetMigrationJobsJobArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionJobsJobOutput{})
	pulumi.RegisterOutputType(GetSubscriptionJobsJobArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionJobsJobSubscriptionHostOutput{})
	pulumi.RegisterOutputType(GetSubscriptionJobsJobSubscriptionHostArrayOutput{})
	pulumi.RegisterOutputType(GetSynchronizationJobsJobOutput{})
	pulumi.RegisterOutputType(GetSynchronizationJobsJobArrayOutput{})
}
