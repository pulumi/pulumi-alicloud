// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a DTS Subscription Job resource.
//
// For information about DTS Subscription Job and how to use it, see [What is Subscription Job](https://help.aliyun.com/document_detail/254791.html).
//
// > **NOTE:** Available in v1.138.0+.
//
// ## Import
//
// DTS Subscription Job can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:dts/subscriptionJob:SubscriptionJob example <id>
// ```
type SubscriptionJob struct {
	pulumi.CustomResourceState

	// Subscription start time in Unix timestamp format.
	Checkpoint pulumi.StringOutput `pulumi:"checkpoint"`
	// [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
	ComputeUnit pulumi.IntPtrOutput `pulumi:"computeUnit"`
	// The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `sourceEndpointEngineName` equals `drds`.
	DatabaseCount pulumi.IntPtrOutput `pulumi:"databaseCount"`
	// Subscription object, in the format of JSON strings. For detailed definitions, please refer to the description of migration, synchronization or subscription objects [document](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringPtrOutput `pulumi:"dbList"`
	// This parameter decides whether to monitor the delay status. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrOutput `pulumi:"delayNotice"`
	// The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrOutput `pulumi:"delayPhone"`
	// When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime pulumi.StringPtrOutput `pulumi:"delayRuleTime"`
	// The destination endpoint engine name. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardbO`, `polardbPg`, `tidb`.
	DestinationEndpointEngineName pulumi.StringPtrOutput `pulumi:"destinationEndpointEngineName"`
	// The destination region. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
	DestinationRegion pulumi.StringPtrOutput `pulumi:"destinationRegion"`
	// The ID of subscription instance.
	DtsInstanceId pulumi.StringOutput `pulumi:"dtsInstanceId"`
	// The name of subscription task.
	DtsJobName pulumi.StringPtrOutput `pulumi:"dtsJobName"`
	// This parameter decides whether to monitor abnormal status. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrOutput `pulumi:"errorNotice"`
	// The mobile phone number of the contact for abnormal alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrOutput `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`.
	InstanceClass pulumi.StringPtrOutput `pulumi:"instanceClass"`
	// The duration of prepaid instance purchase. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDuration pulumi.IntPtrOutput `pulumi:"paymentDuration"`
	// The payment duration unit. Valid values: `Month`, `Year`. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDurationUnit pulumi.StringPtrOutput `pulumi:"paymentDurationUnit"`
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter description of the [Reserve parameter](https://help.aliyun.com/document_detail/176470.html).
	Reserve pulumi.StringPtrOutput `pulumi:"reserve"`
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName pulumi.StringPtrOutput `pulumi:"sourceEndpointDatabaseName"`
	// The source database type value is MySQL or Oracle. Valid values: `MySQL`, `Oracle`.
	SourceEndpointEngineName pulumi.StringPtrOutput `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId pulumi.StringPtrOutput `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType pulumi.StringPtrOutput `pulumi:"sourceEndpointInstanceType"`
	// The IP of source endpoint.
	SourceEndpointIp pulumi.StringPtrOutput `pulumi:"sourceEndpointIp"`
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid pulumi.StringPtrOutput `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId pulumi.StringPtrOutput `pulumi:"sourceEndpointOwnerId"`
	// The password of source database instance account.
	SourceEndpointPassword pulumi.StringPtrOutput `pulumi:"sourceEndpointPassword"`
	// The port of source database.
	SourceEndpointPort pulumi.StringPtrOutput `pulumi:"sourceEndpointPort"`
	// The region of source database.
	SourceEndpointRegion pulumi.StringPtrOutput `pulumi:"sourceEndpointRegion"`
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole pulumi.StringPtrOutput `pulumi:"sourceEndpointRole"`
	// The username of source database instance account.
	SourceEndpointUserName pulumi.StringPtrOutput `pulumi:"sourceEndpointUserName"`
	// The status of the task. Valid values: `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state to `Normal` to start the job, and specify this state of `Abnormal` to stop the job. **Note: We treat the state `Starting` as the state of `Normal`, and consider the two states to be consistent on the user side.**
	Status pulumi.StringOutput `pulumi:"status"`
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl pulumi.BoolOutput `pulumi:"subscriptionDataTypeDdl"`
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml pulumi.BoolOutput `pulumi:"subscriptionDataTypeDml"`
	// Subscription task type of network value: classic: classic Network. Virtual Private Cloud (vpc): a vpc. Valid values: `classic`, `vpc`.
	SubscriptionInstanceNetworkType pulumi.StringPtrOutput `pulumi:"subscriptionInstanceNetworkType"`
	// The ID of subscription vpc instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVpcId pulumi.StringPtrOutput `pulumi:"subscriptionInstanceVpcId"`
	// The ID of subscription VSwitch instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVswitchId pulumi.StringPtrOutput `pulumi:"subscriptionInstanceVswitchId"`
	// The sync architecture. Valid values: `bidirectional`, `oneway`.
	SyncArchitecture pulumi.StringPtrOutput `pulumi:"syncArchitecture"`
	// The synchronization direction. Valid values: `Forward`, `Reverse`. When the topology type of the data synchronization instance is bidirectional, it can be passed in to reverse to start the reverse synchronization link.
	SynchronizationDirection pulumi.StringPtrOutput `pulumi:"synchronizationDirection"`
	Tags                     pulumi.MapOutput       `pulumi:"tags"`
}

// NewSubscriptionJob registers a new resource with the given unique name, arguments, and options.
func NewSubscriptionJob(ctx *pulumi.Context,
	name string, args *SubscriptionJobArgs, opts ...pulumi.ResourceOption) (*SubscriptionJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	var resource SubscriptionJob
	err := ctx.RegisterResource("alicloud:dts/subscriptionJob:SubscriptionJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriptionJob gets an existing SubscriptionJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriptionJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionJobState, opts ...pulumi.ResourceOption) (*SubscriptionJob, error) {
	var resource SubscriptionJob
	err := ctx.ReadResource("alicloud:dts/subscriptionJob:SubscriptionJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubscriptionJob resources.
type subscriptionJobState struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint *string `pulumi:"checkpoint"`
	// [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
	ComputeUnit *int `pulumi:"computeUnit"`
	// The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `sourceEndpointEngineName` equals `drds`.
	DatabaseCount *int `pulumi:"databaseCount"`
	// Subscription object, in the format of JSON strings. For detailed definitions, please refer to the description of migration, synchronization or subscription objects [document](https://help.aliyun.com/document_detail/209545.html).
	DbList *string `pulumi:"dbList"`
	// This parameter decides whether to monitor the delay status. Valid values: `true`, `false`.
	DelayNotice *bool `pulumi:"delayNotice"`
	// The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone *string `pulumi:"delayPhone"`
	// When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime *string `pulumi:"delayRuleTime"`
	// The destination endpoint engine name. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardbO`, `polardbPg`, `tidb`.
	DestinationEndpointEngineName *string `pulumi:"destinationEndpointEngineName"`
	// The destination region. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
	DestinationRegion *string `pulumi:"destinationRegion"`
	// The ID of subscription instance.
	DtsInstanceId *string `pulumi:"dtsInstanceId"`
	// The name of subscription task.
	DtsJobName *string `pulumi:"dtsJobName"`
	// This parameter decides whether to monitor abnormal status. Valid values: `true`, `false`.
	ErrorNotice *bool `pulumi:"errorNotice"`
	// The mobile phone number of the contact for abnormal alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone *string `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`.
	InstanceClass *string `pulumi:"instanceClass"`
	// The duration of prepaid instance purchase. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDuration *int `pulumi:"paymentDuration"`
	// The payment duration unit. Valid values: `Month`, `Year`. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDurationUnit *string `pulumi:"paymentDurationUnit"`
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType *string `pulumi:"paymentType"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter description of the [Reserve parameter](https://help.aliyun.com/document_detail/176470.html).
	Reserve *string `pulumi:"reserve"`
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The source database type value is MySQL or Oracle. Valid values: `MySQL`, `Oracle`.
	SourceEndpointEngineName *string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType *string `pulumi:"sourceEndpointInstanceType"`
	// The IP of source endpoint.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId *string `pulumi:"sourceEndpointOwnerId"`
	// The password of source database instance account.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The port of source database.
	SourceEndpointPort *string `pulumi:"sourceEndpointPort"`
	// The region of source database.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole *string `pulumi:"sourceEndpointRole"`
	// The username of source database instance account.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the task. Valid values: `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state to `Normal` to start the job, and specify this state of `Abnormal` to stop the job. **Note: We treat the state `Starting` as the state of `Normal`, and consider the two states to be consistent on the user side.**
	Status *string `pulumi:"status"`
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl *bool `pulumi:"subscriptionDataTypeDdl"`
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml *bool `pulumi:"subscriptionDataTypeDml"`
	// Subscription task type of network value: classic: classic Network. Virtual Private Cloud (vpc): a vpc. Valid values: `classic`, `vpc`.
	SubscriptionInstanceNetworkType *string `pulumi:"subscriptionInstanceNetworkType"`
	// The ID of subscription vpc instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVpcId *string `pulumi:"subscriptionInstanceVpcId"`
	// The ID of subscription VSwitch instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVswitchId *string `pulumi:"subscriptionInstanceVswitchId"`
	// The sync architecture. Valid values: `bidirectional`, `oneway`.
	SyncArchitecture *string `pulumi:"syncArchitecture"`
	// The synchronization direction. Valid values: `Forward`, `Reverse`. When the topology type of the data synchronization instance is bidirectional, it can be passed in to reverse to start the reverse synchronization link.
	SynchronizationDirection *string                `pulumi:"synchronizationDirection"`
	Tags                     map[string]interface{} `pulumi:"tags"`
}

type SubscriptionJobState struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint pulumi.StringPtrInput
	// [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
	ComputeUnit pulumi.IntPtrInput
	// The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `sourceEndpointEngineName` equals `drds`.
	DatabaseCount pulumi.IntPtrInput
	// Subscription object, in the format of JSON strings. For detailed definitions, please refer to the description of migration, synchronization or subscription objects [document](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringPtrInput
	// This parameter decides whether to monitor the delay status. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrInput
	// The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrInput
	// When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime pulumi.StringPtrInput
	// The destination endpoint engine name. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardbO`, `polardbPg`, `tidb`.
	DestinationEndpointEngineName pulumi.StringPtrInput
	// The destination region. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
	DestinationRegion pulumi.StringPtrInput
	// The ID of subscription instance.
	DtsInstanceId pulumi.StringPtrInput
	// The name of subscription task.
	DtsJobName pulumi.StringPtrInput
	// This parameter decides whether to monitor abnormal status. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrInput
	// The mobile phone number of the contact for abnormal alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`.
	InstanceClass pulumi.StringPtrInput
	// The duration of prepaid instance purchase. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDuration pulumi.IntPtrInput
	// The payment duration unit. Valid values: `Month`, `Year`. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDurationUnit pulumi.StringPtrInput
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType pulumi.StringPtrInput
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter description of the [Reserve parameter](https://help.aliyun.com/document_detail/176470.html).
	Reserve pulumi.StringPtrInput
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The source database type value is MySQL or Oracle. Valid values: `MySQL`, `Oracle`.
	SourceEndpointEngineName pulumi.StringPtrInput
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType pulumi.StringPtrInput
	// The IP of source endpoint.
	SourceEndpointIp pulumi.StringPtrInput
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId pulumi.StringPtrInput
	// The password of source database instance account.
	SourceEndpointPassword pulumi.StringPtrInput
	// The port of source database.
	SourceEndpointPort pulumi.StringPtrInput
	// The region of source database.
	SourceEndpointRegion pulumi.StringPtrInput
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole pulumi.StringPtrInput
	// The username of source database instance account.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the task. Valid values: `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state to `Normal` to start the job, and specify this state of `Abnormal` to stop the job. **Note: We treat the state `Starting` as the state of `Normal`, and consider the two states to be consistent on the user side.**
	Status pulumi.StringPtrInput
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl pulumi.BoolPtrInput
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml pulumi.BoolPtrInput
	// Subscription task type of network value: classic: classic Network. Virtual Private Cloud (vpc): a vpc. Valid values: `classic`, `vpc`.
	SubscriptionInstanceNetworkType pulumi.StringPtrInput
	// The ID of subscription vpc instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVpcId pulumi.StringPtrInput
	// The ID of subscription VSwitch instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVswitchId pulumi.StringPtrInput
	// The sync architecture. Valid values: `bidirectional`, `oneway`.
	SyncArchitecture pulumi.StringPtrInput
	// The synchronization direction. Valid values: `Forward`, `Reverse`. When the topology type of the data synchronization instance is bidirectional, it can be passed in to reverse to start the reverse synchronization link.
	SynchronizationDirection pulumi.StringPtrInput
	Tags                     pulumi.MapInput
}

func (SubscriptionJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionJobState)(nil)).Elem()
}

type subscriptionJobArgs struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint *string `pulumi:"checkpoint"`
	// [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
	ComputeUnit *int `pulumi:"computeUnit"`
	// The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `sourceEndpointEngineName` equals `drds`.
	DatabaseCount *int `pulumi:"databaseCount"`
	// Subscription object, in the format of JSON strings. For detailed definitions, please refer to the description of migration, synchronization or subscription objects [document](https://help.aliyun.com/document_detail/209545.html).
	DbList *string `pulumi:"dbList"`
	// This parameter decides whether to monitor the delay status. Valid values: `true`, `false`.
	DelayNotice *bool `pulumi:"delayNotice"`
	// The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone *string `pulumi:"delayPhone"`
	// When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime *string `pulumi:"delayRuleTime"`
	// The destination endpoint engine name. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardbO`, `polardbPg`, `tidb`.
	DestinationEndpointEngineName *string `pulumi:"destinationEndpointEngineName"`
	// The destination region. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
	DestinationRegion *string `pulumi:"destinationRegion"`
	// The ID of subscription instance.
	DtsInstanceId *string `pulumi:"dtsInstanceId"`
	// The name of subscription task.
	DtsJobName *string `pulumi:"dtsJobName"`
	// This parameter decides whether to monitor abnormal status. Valid values: `true`, `false`.
	ErrorNotice *bool `pulumi:"errorNotice"`
	// The mobile phone number of the contact for abnormal alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone *string `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`.
	InstanceClass *string `pulumi:"instanceClass"`
	// The duration of prepaid instance purchase. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDuration *int `pulumi:"paymentDuration"`
	// The payment duration unit. Valid values: `Month`, `Year`. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDurationUnit *string `pulumi:"paymentDurationUnit"`
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType string `pulumi:"paymentType"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter description of the [Reserve parameter](https://help.aliyun.com/document_detail/176470.html).
	Reserve *string `pulumi:"reserve"`
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The source database type value is MySQL or Oracle. Valid values: `MySQL`, `Oracle`.
	SourceEndpointEngineName *string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType *string `pulumi:"sourceEndpointInstanceType"`
	// The IP of source endpoint.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId *string `pulumi:"sourceEndpointOwnerId"`
	// The password of source database instance account.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The port of source database.
	SourceEndpointPort *string `pulumi:"sourceEndpointPort"`
	// The region of source database.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole *string `pulumi:"sourceEndpointRole"`
	// The username of source database instance account.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the task. Valid values: `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state to `Normal` to start the job, and specify this state of `Abnormal` to stop the job. **Note: We treat the state `Starting` as the state of `Normal`, and consider the two states to be consistent on the user side.**
	Status *string `pulumi:"status"`
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl *bool `pulumi:"subscriptionDataTypeDdl"`
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml *bool `pulumi:"subscriptionDataTypeDml"`
	// Subscription task type of network value: classic: classic Network. Virtual Private Cloud (vpc): a vpc. Valid values: `classic`, `vpc`.
	SubscriptionInstanceNetworkType *string `pulumi:"subscriptionInstanceNetworkType"`
	// The ID of subscription vpc instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVpcId *string `pulumi:"subscriptionInstanceVpcId"`
	// The ID of subscription VSwitch instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVswitchId *string `pulumi:"subscriptionInstanceVswitchId"`
	// The sync architecture. Valid values: `bidirectional`, `oneway`.
	SyncArchitecture *string `pulumi:"syncArchitecture"`
	// The synchronization direction. Valid values: `Forward`, `Reverse`. When the topology type of the data synchronization instance is bidirectional, it can be passed in to reverse to start the reverse synchronization link.
	SynchronizationDirection *string                `pulumi:"synchronizationDirection"`
	Tags                     map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a SubscriptionJob resource.
type SubscriptionJobArgs struct {
	// Subscription start time in Unix timestamp format.
	Checkpoint pulumi.StringPtrInput
	// [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
	ComputeUnit pulumi.IntPtrInput
	// The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `sourceEndpointEngineName` equals `drds`.
	DatabaseCount pulumi.IntPtrInput
	// Subscription object, in the format of JSON strings. For detailed definitions, please refer to the description of migration, synchronization or subscription objects [document](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringPtrInput
	// This parameter decides whether to monitor the delay status. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrInput
	// The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrInput
	// When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime pulumi.StringPtrInput
	// The destination endpoint engine name. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardbO`, `polardbPg`, `tidb`.
	DestinationEndpointEngineName pulumi.StringPtrInput
	// The destination region. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
	DestinationRegion pulumi.StringPtrInput
	// The ID of subscription instance.
	DtsInstanceId pulumi.StringPtrInput
	// The name of subscription task.
	DtsJobName pulumi.StringPtrInput
	// This parameter decides whether to monitor abnormal status. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrInput
	// The mobile phone number of the contact for abnormal alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`.
	InstanceClass pulumi.StringPtrInput
	// The duration of prepaid instance purchase. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDuration pulumi.IntPtrInput
	// The payment duration unit. Valid values: `Month`, `Year`. When `paymentType` is `Subscription`, this parameter is valid and must be passed in.
	PaymentDurationUnit pulumi.StringPtrInput
	// The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType pulumi.StringInput
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter description of the [Reserve parameter](https://help.aliyun.com/document_detail/176470.html).
	Reserve pulumi.StringPtrInput
	// To subscribe to the name of the database.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The source database type value is MySQL or Oracle. Valid values: `MySQL`, `Oracle`.
	SourceEndpointEngineName pulumi.StringPtrInput
	// The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
	SourceEndpointInstanceType pulumi.StringPtrInput
	// The IP of source endpoint.
	SourceEndpointIp pulumi.StringPtrInput
	// The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
	SourceEndpointOwnerId pulumi.StringPtrInput
	// The password of source database instance account.
	SourceEndpointPassword pulumi.StringPtrInput
	// The port of source database.
	SourceEndpointPort pulumi.StringPtrInput
	// The region of source database.
	SourceEndpointRegion pulumi.StringPtrInput
	// Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
	SourceEndpointRole pulumi.StringPtrInput
	// The username of source database instance account.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the task. Valid values: `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state to `Normal` to start the job, and specify this state of `Abnormal` to stop the job. **Note: We treat the state `Starting` as the state of `Normal`, and consider the two states to be consistent on the user side.**
	Status pulumi.StringPtrInput
	// Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDdl pulumi.BoolPtrInput
	// Whether to subscribe the DML type of data. Valid values: `true`, `false`.
	SubscriptionDataTypeDml pulumi.BoolPtrInput
	// Subscription task type of network value: classic: classic Network. Virtual Private Cloud (vpc): a vpc. Valid values: `classic`, `vpc`.
	SubscriptionInstanceNetworkType pulumi.StringPtrInput
	// The ID of subscription vpc instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVpcId pulumi.StringPtrInput
	// The ID of subscription VSwitch instance. When the value of `subscriptionInstanceNetworkType` is vpc, this parameter is available and must be passed in.
	SubscriptionInstanceVswitchId pulumi.StringPtrInput
	// The sync architecture. Valid values: `bidirectional`, `oneway`.
	SyncArchitecture pulumi.StringPtrInput
	// The synchronization direction. Valid values: `Forward`, `Reverse`. When the topology type of the data synchronization instance is bidirectional, it can be passed in to reverse to start the reverse synchronization link.
	SynchronizationDirection pulumi.StringPtrInput
	Tags                     pulumi.MapInput
}

func (SubscriptionJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionJobArgs)(nil)).Elem()
}

type SubscriptionJobInput interface {
	pulumi.Input

	ToSubscriptionJobOutput() SubscriptionJobOutput
	ToSubscriptionJobOutputWithContext(ctx context.Context) SubscriptionJobOutput
}

func (*SubscriptionJob) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionJob)(nil)).Elem()
}

func (i *SubscriptionJob) ToSubscriptionJobOutput() SubscriptionJobOutput {
	return i.ToSubscriptionJobOutputWithContext(context.Background())
}

func (i *SubscriptionJob) ToSubscriptionJobOutputWithContext(ctx context.Context) SubscriptionJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionJobOutput)
}

// SubscriptionJobArrayInput is an input type that accepts SubscriptionJobArray and SubscriptionJobArrayOutput values.
// You can construct a concrete instance of `SubscriptionJobArrayInput` via:
//
//          SubscriptionJobArray{ SubscriptionJobArgs{...} }
type SubscriptionJobArrayInput interface {
	pulumi.Input

	ToSubscriptionJobArrayOutput() SubscriptionJobArrayOutput
	ToSubscriptionJobArrayOutputWithContext(context.Context) SubscriptionJobArrayOutput
}

type SubscriptionJobArray []SubscriptionJobInput

func (SubscriptionJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubscriptionJob)(nil)).Elem()
}

func (i SubscriptionJobArray) ToSubscriptionJobArrayOutput() SubscriptionJobArrayOutput {
	return i.ToSubscriptionJobArrayOutputWithContext(context.Background())
}

func (i SubscriptionJobArray) ToSubscriptionJobArrayOutputWithContext(ctx context.Context) SubscriptionJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionJobArrayOutput)
}

// SubscriptionJobMapInput is an input type that accepts SubscriptionJobMap and SubscriptionJobMapOutput values.
// You can construct a concrete instance of `SubscriptionJobMapInput` via:
//
//          SubscriptionJobMap{ "key": SubscriptionJobArgs{...} }
type SubscriptionJobMapInput interface {
	pulumi.Input

	ToSubscriptionJobMapOutput() SubscriptionJobMapOutput
	ToSubscriptionJobMapOutputWithContext(context.Context) SubscriptionJobMapOutput
}

type SubscriptionJobMap map[string]SubscriptionJobInput

func (SubscriptionJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubscriptionJob)(nil)).Elem()
}

func (i SubscriptionJobMap) ToSubscriptionJobMapOutput() SubscriptionJobMapOutput {
	return i.ToSubscriptionJobMapOutputWithContext(context.Background())
}

func (i SubscriptionJobMap) ToSubscriptionJobMapOutputWithContext(ctx context.Context) SubscriptionJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionJobMapOutput)
}

type SubscriptionJobOutput struct{ *pulumi.OutputState }

func (SubscriptionJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionJob)(nil)).Elem()
}

func (o SubscriptionJobOutput) ToSubscriptionJobOutput() SubscriptionJobOutput {
	return o
}

func (o SubscriptionJobOutput) ToSubscriptionJobOutputWithContext(ctx context.Context) SubscriptionJobOutput {
	return o
}

type SubscriptionJobArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubscriptionJob)(nil)).Elem()
}

func (o SubscriptionJobArrayOutput) ToSubscriptionJobArrayOutput() SubscriptionJobArrayOutput {
	return o
}

func (o SubscriptionJobArrayOutput) ToSubscriptionJobArrayOutputWithContext(ctx context.Context) SubscriptionJobArrayOutput {
	return o
}

func (o SubscriptionJobArrayOutput) Index(i pulumi.IntInput) SubscriptionJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SubscriptionJob {
		return vs[0].([]*SubscriptionJob)[vs[1].(int)]
	}).(SubscriptionJobOutput)
}

type SubscriptionJobMapOutput struct{ *pulumi.OutputState }

func (SubscriptionJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubscriptionJob)(nil)).Elem()
}

func (o SubscriptionJobMapOutput) ToSubscriptionJobMapOutput() SubscriptionJobMapOutput {
	return o
}

func (o SubscriptionJobMapOutput) ToSubscriptionJobMapOutputWithContext(ctx context.Context) SubscriptionJobMapOutput {
	return o
}

func (o SubscriptionJobMapOutput) MapIndex(k pulumi.StringInput) SubscriptionJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SubscriptionJob {
		return vs[0].(map[string]*SubscriptionJob)[vs[1].(string)]
	}).(SubscriptionJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionJobInput)(nil)).Elem(), &SubscriptionJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionJobArrayInput)(nil)).Elem(), SubscriptionJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionJobMapInput)(nil)).Elem(), SubscriptionJobMap{})
	pulumi.RegisterOutputType(SubscriptionJobOutput{})
	pulumi.RegisterOutputType(SubscriptionJobArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionJobMapOutput{})
}
