// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Dts Subscription Jobs of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.138.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/dts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := dts.GetSubscriptionJobs(ctx, &dts.GetSubscriptionJobsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("dtsSubscriptionJobId1", ids.Jobs[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetSubscriptionJobs(ctx *pulumi.Context, args *GetSubscriptionJobsArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionJobsResult
	err := ctx.Invoke("alicloud:dts/getSubscriptionJobs:getSubscriptionJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscriptionJobs.
type GetSubscriptionJobsArgs struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Subscription Job IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by subscription job name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the task. Valid values: `Abnormal`, `Downgrade`, `Locked`, `Normal`, `NotStarted`, `NotStarted`, `PreCheckPass`, `PrecheckFailed`, `Prechecking`, `Retrying`, `Starting`, `Upgrade`.
	Status *string           `pulumi:"status"`
	Tags   map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSubscriptionJobs.
type GetSubscriptionJobsResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                   `pulumi:"id"`
	Ids        []string                 `pulumi:"ids"`
	Jobs       []GetSubscriptionJobsJob `pulumi:"jobs"`
	NameRegex  *string                  `pulumi:"nameRegex"`
	Names      []string                 `pulumi:"names"`
	OutputFile *string                  `pulumi:"outputFile"`
	Status     *string                  `pulumi:"status"`
	Tags       map[string]string        `pulumi:"tags"`
}

func GetSubscriptionJobsOutput(ctx *pulumi.Context, args GetSubscriptionJobsOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubscriptionJobsResultOutput, error) {
			args := v.(GetSubscriptionJobsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:dts/getSubscriptionJobs:getSubscriptionJobs", args, GetSubscriptionJobsResultOutput{}, options).(GetSubscriptionJobsResultOutput), nil
		}).(GetSubscriptionJobsResultOutput)
}

// A collection of arguments for invoking getSubscriptionJobs.
type GetSubscriptionJobsOutputArgs struct {
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Subscription Job IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by subscription job name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the task. Valid values: `Abnormal`, `Downgrade`, `Locked`, `Normal`, `NotStarted`, `NotStarted`, `PreCheckPass`, `PrecheckFailed`, `Prechecking`, `Retrying`, `Starting`, `Upgrade`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	Tags   pulumi.StringMapInput `pulumi:"tags"`
}

func (GetSubscriptionJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsArgs)(nil)).Elem()
}

// A collection of values returned by getSubscriptionJobs.
type GetSubscriptionJobsResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionJobsResult)(nil)).Elem()
}

func (o GetSubscriptionJobsResultOutput) ToGetSubscriptionJobsResultOutput() GetSubscriptionJobsResultOutput {
	return o
}

func (o GetSubscriptionJobsResultOutput) ToGetSubscriptionJobsResultOutputWithContext(ctx context.Context) GetSubscriptionJobsResultOutput {
	return o
}

func (o GetSubscriptionJobsResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscriptionJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubscriptionJobsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSubscriptionJobsResultOutput) Jobs() GetSubscriptionJobsJobArrayOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) []GetSubscriptionJobsJob { return v.Jobs }).(GetSubscriptionJobsJobArrayOutput)
}

func (o GetSubscriptionJobsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionJobsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSubscriptionJobsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionJobsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetSubscriptionJobsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionJobsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionJobsResultOutput{})
}
