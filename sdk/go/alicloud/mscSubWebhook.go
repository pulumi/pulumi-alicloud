// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alicloud

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Msc Sub Webhook resource.
//
// > **NOTE:** Available in v1.141.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := alicloud.NewMscSubWebhook(ctx, "example", &alicloud.MscSubWebhookArgs{
// 			ServerUrl:   pulumi.String("example_value"),
// 			WebhookName: pulumi.String("example_value"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Msc Sub Webhook can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:index/mscSubWebhook:MscSubWebhook example <id>
// ```
type MscSubWebhook struct {
	pulumi.CustomResourceState

	// The serverUrl of the Webhook. This url must start with `https://oapi.dingtalk.com/robot/send?access_token=`.
	ServerUrl pulumi.StringOutput `pulumi:"serverUrl"`
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName pulumi.StringOutput `pulumi:"webhookName"`
}

// NewMscSubWebhook registers a new resource with the given unique name, arguments, and options.
func NewMscSubWebhook(ctx *pulumi.Context,
	name string, args *MscSubWebhookArgs, opts ...pulumi.ResourceOption) (*MscSubWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerUrl == nil {
		return nil, errors.New("invalid value for required argument 'ServerUrl'")
	}
	if args.WebhookName == nil {
		return nil, errors.New("invalid value for required argument 'WebhookName'")
	}
	var resource MscSubWebhook
	err := ctx.RegisterResource("alicloud:index/mscSubWebhook:MscSubWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMscSubWebhook gets an existing MscSubWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMscSubWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MscSubWebhookState, opts ...pulumi.ResourceOption) (*MscSubWebhook, error) {
	var resource MscSubWebhook
	err := ctx.ReadResource("alicloud:index/mscSubWebhook:MscSubWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MscSubWebhook resources.
type mscSubWebhookState struct {
	// The serverUrl of the Webhook. This url must start with `https://oapi.dingtalk.com/robot/send?access_token=`.
	ServerUrl *string `pulumi:"serverUrl"`
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName *string `pulumi:"webhookName"`
}

type MscSubWebhookState struct {
	// The serverUrl of the Webhook. This url must start with `https://oapi.dingtalk.com/robot/send?access_token=`.
	ServerUrl pulumi.StringPtrInput
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName pulumi.StringPtrInput
}

func (MscSubWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*mscSubWebhookState)(nil)).Elem()
}

type mscSubWebhookArgs struct {
	// The serverUrl of the Webhook. This url must start with `https://oapi.dingtalk.com/robot/send?access_token=`.
	ServerUrl string `pulumi:"serverUrl"`
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName string `pulumi:"webhookName"`
}

// The set of arguments for constructing a MscSubWebhook resource.
type MscSubWebhookArgs struct {
	// The serverUrl of the Webhook. This url must start with `https://oapi.dingtalk.com/robot/send?access_token=`.
	ServerUrl pulumi.StringInput
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName pulumi.StringInput
}

func (MscSubWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mscSubWebhookArgs)(nil)).Elem()
}

type MscSubWebhookInput interface {
	pulumi.Input

	ToMscSubWebhookOutput() MscSubWebhookOutput
	ToMscSubWebhookOutputWithContext(ctx context.Context) MscSubWebhookOutput
}

func (*MscSubWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**MscSubWebhook)(nil)).Elem()
}

func (i *MscSubWebhook) ToMscSubWebhookOutput() MscSubWebhookOutput {
	return i.ToMscSubWebhookOutputWithContext(context.Background())
}

func (i *MscSubWebhook) ToMscSubWebhookOutputWithContext(ctx context.Context) MscSubWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MscSubWebhookOutput)
}

// MscSubWebhookArrayInput is an input type that accepts MscSubWebhookArray and MscSubWebhookArrayOutput values.
// You can construct a concrete instance of `MscSubWebhookArrayInput` via:
//
//          MscSubWebhookArray{ MscSubWebhookArgs{...} }
type MscSubWebhookArrayInput interface {
	pulumi.Input

	ToMscSubWebhookArrayOutput() MscSubWebhookArrayOutput
	ToMscSubWebhookArrayOutputWithContext(context.Context) MscSubWebhookArrayOutput
}

type MscSubWebhookArray []MscSubWebhookInput

func (MscSubWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MscSubWebhook)(nil)).Elem()
}

func (i MscSubWebhookArray) ToMscSubWebhookArrayOutput() MscSubWebhookArrayOutput {
	return i.ToMscSubWebhookArrayOutputWithContext(context.Background())
}

func (i MscSubWebhookArray) ToMscSubWebhookArrayOutputWithContext(ctx context.Context) MscSubWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MscSubWebhookArrayOutput)
}

// MscSubWebhookMapInput is an input type that accepts MscSubWebhookMap and MscSubWebhookMapOutput values.
// You can construct a concrete instance of `MscSubWebhookMapInput` via:
//
//          MscSubWebhookMap{ "key": MscSubWebhookArgs{...} }
type MscSubWebhookMapInput interface {
	pulumi.Input

	ToMscSubWebhookMapOutput() MscSubWebhookMapOutput
	ToMscSubWebhookMapOutputWithContext(context.Context) MscSubWebhookMapOutput
}

type MscSubWebhookMap map[string]MscSubWebhookInput

func (MscSubWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MscSubWebhook)(nil)).Elem()
}

func (i MscSubWebhookMap) ToMscSubWebhookMapOutput() MscSubWebhookMapOutput {
	return i.ToMscSubWebhookMapOutputWithContext(context.Background())
}

func (i MscSubWebhookMap) ToMscSubWebhookMapOutputWithContext(ctx context.Context) MscSubWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MscSubWebhookMapOutput)
}

type MscSubWebhookOutput struct{ *pulumi.OutputState }

func (MscSubWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MscSubWebhook)(nil)).Elem()
}

func (o MscSubWebhookOutput) ToMscSubWebhookOutput() MscSubWebhookOutput {
	return o
}

func (o MscSubWebhookOutput) ToMscSubWebhookOutputWithContext(ctx context.Context) MscSubWebhookOutput {
	return o
}

type MscSubWebhookArrayOutput struct{ *pulumi.OutputState }

func (MscSubWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MscSubWebhook)(nil)).Elem()
}

func (o MscSubWebhookArrayOutput) ToMscSubWebhookArrayOutput() MscSubWebhookArrayOutput {
	return o
}

func (o MscSubWebhookArrayOutput) ToMscSubWebhookArrayOutputWithContext(ctx context.Context) MscSubWebhookArrayOutput {
	return o
}

func (o MscSubWebhookArrayOutput) Index(i pulumi.IntInput) MscSubWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MscSubWebhook {
		return vs[0].([]*MscSubWebhook)[vs[1].(int)]
	}).(MscSubWebhookOutput)
}

type MscSubWebhookMapOutput struct{ *pulumi.OutputState }

func (MscSubWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MscSubWebhook)(nil)).Elem()
}

func (o MscSubWebhookMapOutput) ToMscSubWebhookMapOutput() MscSubWebhookMapOutput {
	return o
}

func (o MscSubWebhookMapOutput) ToMscSubWebhookMapOutputWithContext(ctx context.Context) MscSubWebhookMapOutput {
	return o
}

func (o MscSubWebhookMapOutput) MapIndex(k pulumi.StringInput) MscSubWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MscSubWebhook {
		return vs[0].(map[string]*MscSubWebhook)[vs[1].(string)]
	}).(MscSubWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MscSubWebhookInput)(nil)).Elem(), &MscSubWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*MscSubWebhookArrayInput)(nil)).Elem(), MscSubWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MscSubWebhookMapInput)(nil)).Elem(), MscSubWebhookMap{})
	pulumi.RegisterOutputType(MscSubWebhookOutput{})
	pulumi.RegisterOutputType(MscSubWebhookArrayOutput{})
	pulumi.RegisterOutputType(MscSubWebhookMapOutput{})
}
