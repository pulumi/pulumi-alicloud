// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ehpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Ehpc Cluster resource.
//
// For information about Ehpc Cluster and how to use it, see [What is Cluster](https://www.alibabacloud.com/help/e-hpc/latest/createcluster).
//
// > **NOTE:** Available in v1.173.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ehpc"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/nas"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("default-NODELETING"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
//				VpcId:  pulumi.StringRef(defaultNetworks.Ids[0]),
//				ZoneId: pulumi.StringRef(defaultZones.Zones[0].Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
//				AvailabilityZone: pulumi.StringRef(defaultZones.Zones[0].Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			cfg := config.New(ctx, "")
//			storageType := "Performance"
//			if param := cfg.Get("storageType"); param != "" {
//				storageType = param
//			}
//			defaultFileSystem, err := nas.NewFileSystem(ctx, "defaultFileSystem", &nas.FileSystemArgs{
//				StorageType:  pulumi.String(storageType),
//				ProtocolType: pulumi.String("NFS"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultMountTarget, err := nas.NewMountTarget(ctx, "defaultMountTarget", &nas.MountTargetArgs{
//				FileSystemId:    defaultFileSystem.ID(),
//				AccessGroupName: pulumi.String("DEFAULT_VPC_GROUP_NAME"),
//				VswitchId:       *pulumi.String(defaultSwitches.Ids[0]),
//			})
//			if err != nil {
//				return err
//			}
//			defaultImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				NameRegex: pulumi.StringRef("^centos_7_6_x64*"),
//				Owners:    pulumi.StringRef("system"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ehpc.NewCluster(ctx, "defaultCluster", &ehpc.ClusterArgs{
//				ClusterName:         pulumi.String("example_value"),
//				DeployMode:          pulumi.String("Simple"),
//				Description:         pulumi.String("example_description"),
//				HaEnable:            pulumi.Bool(false),
//				ImageId:             *pulumi.String(defaultImages.Images[0].Id),
//				ImageOwnerAlias:     pulumi.String("system"),
//				VolumeProtocol:      pulumi.String("nfs"),
//				VolumeId:            defaultFileSystem.ID(),
//				VolumeMountpoint:    defaultMountTarget.MountTargetDomain,
//				ComputeCount:        pulumi.Int(1),
//				ComputeInstanceType: *pulumi.String(defaultInstanceTypes.InstanceTypes[0].Id),
//				LoginCount:          pulumi.Int(1),
//				LoginInstanceType:   *pulumi.String(defaultInstanceTypes.InstanceTypes[0].Id),
//				ManagerCount:        pulumi.Int(1),
//				ManagerInstanceType: *pulumi.String(defaultInstanceTypes.InstanceTypes[0].Id),
//				OsTag:               pulumi.String("CentOS_7.6_64"),
//				SchedulerType:       pulumi.String("pbs"),
//				Password:            pulumi.String("your-password123"),
//				VswitchId:           *pulumi.String(defaultSwitches.Ids[0]),
//				VpcId:               *pulumi.String(defaultNetworks.Ids[0]),
//				ZoneId:              *pulumi.String(defaultZones.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Ehpc Cluster can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:ehpc/cluster:Cluster example <id>
//
// ```
type Cluster struct {
	pulumi.CustomResourceState

	// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
	AccountType pulumi.StringOutput `pulumi:"accountType"`
	// The additional volumes. See the following `Block additionalVolumes`.
	AdditionalVolumes ClusterAdditionalVolumeArrayOutput `pulumi:"additionalVolumes"`
	// The application. See the following `Block application`.
	Applications ClusterApplicationArrayOutput `pulumi:"applications"`
	// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// The version of the E-HPC client. By default, the parameter is set to the latest version number.
	ClientVersion pulumi.StringOutput `pulumi:"clientVersion"`
	// The name of the cluster. The name must be `2` to `64` characters in length.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// The version of the cluster. Default value: `1.0`.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// The number of the compute nodes. Valid values: `1` to `99`.
	ComputeCount pulumi.IntOutput `pulumi:"computeCount"`
	// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
	ComputeEnableHt pulumi.BoolPtrOutput `pulumi:"computeEnableHt"`
	// The instance type of the compute nodes.
	ComputeInstanceType pulumi.StringOutput `pulumi:"computeInstanceType"`
	// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
	ComputeSpotPriceLimit pulumi.StringPtrOutput `pulumi:"computeSpotPriceLimit"`
	// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
	ComputeSpotStrategy pulumi.StringPtrOutput `pulumi:"computeSpotStrategy"`
	// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
	DeployMode pulumi.StringOutput `pulumi:"deployMode"`
	// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
	Description pulumi.StringOutput `pulumi:"description"`
	// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// The billing method of the nodes.
	EcsChargeType pulumi.StringOutput `pulumi:"ecsChargeType"`
	// The version of E-HPC. By default, the parameter is set to the latest version number.
	EhpcVersion pulumi.StringOutput `pulumi:"ehpcVersion"`
	// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
	HaEnable pulumi.BoolOutput `pulumi:"haEnable"`
	// The ID of the image.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
	ImageOwnerAlias pulumi.StringOutput `pulumi:"imageOwnerAlias"`
	// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
	InputFileUrl pulumi.StringPtrOutput `pulumi:"inputFileUrl"`
	// Specifies whether to enable auto scaling. Default value: `false`.
	IsComputeEss pulumi.BoolPtrOutput `pulumi:"isComputeEss"`
	// The queue to which the compute nodes are added.
	JobQueue pulumi.StringPtrOutput `pulumi:"jobQueue"`
	// The name of the AccessKey pair.
	KeyPairName pulumi.StringPtrOutput `pulumi:"keyPairName"`
	// The number of the logon nodes. Valid values: `1`.
	LoginCount pulumi.IntOutput `pulumi:"loginCount"`
	// The instance type of the logon nodes.
	LoginInstanceType pulumi.StringOutput `pulumi:"loginInstanceType"`
	// The number of the management nodes. Valid values: 1 and 2.
	ManagerCount pulumi.IntOutput `pulumi:"managerCount"`
	// The instance type of the management nodes.
	ManagerInstanceType pulumi.StringOutput `pulumi:"managerInstanceType"`
	// The image tag of the operating system.
	OsTag pulumi.StringOutput `pulumi:"osTag"`
	// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
	// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
	// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
	// - pluginMod: the mode of the plug-in. The following modes are supported:
	// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
	// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
	// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
	// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
	Plugin pulumi.StringPtrOutput `pulumi:"plugin"`
	// The post install script. See the following `Block postInstallScript`.
	PostInstallScripts ClusterPostInstallScriptArrayOutput `pulumi:"postInstallScripts"`
	// The node of the RAM role.
	RamNodeTypes pulumi.StringArrayOutput `pulumi:"ramNodeTypes"`
	// The name of the Resource Access Management (RAM) role.
	RamRoleName pulumi.StringPtrOutput `pulumi:"ramRoleName"`
	// The release instance. Valid values: `true`.
	ReleaseInstance pulumi.BoolPtrOutput `pulumi:"releaseInstance"`
	// The remote directory to which the file system is mounted.
	RemoteDirectory pulumi.StringOutput `pulumi:"remoteDirectory"`
	// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
	RemoteVisEnable pulumi.BoolPtrOutput `pulumi:"remoteVisEnable"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrOutput `pulumi:"resourceGroupId"`
	// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
	SccClusterId pulumi.StringOutput `pulumi:"sccClusterId"`
	// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
	SchedulerType pulumi.StringOutput `pulumi:"schedulerType"`
	// The ID of the security group to which the cluster belongs.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
	SecurityGroupName pulumi.StringPtrOutput `pulumi:"securityGroupName"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
	SystemDiskLevel pulumi.StringPtrOutput `pulumi:"systemDiskLevel"`
	// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
	SystemDiskSize pulumi.IntPtrOutput `pulumi:"systemDiskSize"`
	// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
	SystemDiskType pulumi.StringPtrOutput `pulumi:"systemDiskType"`
	// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
	VolumeId pulumi.StringOutput `pulumi:"volumeId"`
	// The mount options of the file system.
	VolumeMountOption pulumi.StringPtrOutput `pulumi:"volumeMountOption"`
	// The mount target of the file system. Take note of the following information:
	// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
	// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
	VolumeMountpoint pulumi.StringOutput `pulumi:"volumeMountpoint"`
	// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
	VolumeProtocol pulumi.StringOutput `pulumi:"volumeProtocol"`
	// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
	VolumeType pulumi.StringOutput `pulumi:"volumeType"`
	// The ID of the virtual private cloud (VPC) to which the cluster belongs.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ID of the vSwitch. E-HPC supports only VPC networks.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
	// Specifies whether not to install the agent. Default value: `false`.
	WithoutAgent pulumi.BoolPtrOutput `pulumi:"withoutAgent"`
	// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
	WithoutElasticIp pulumi.BoolPtrOutput `pulumi:"withoutElasticIp"`
	// The ID of the zone.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ComputeCount == nil {
		return nil, errors.New("invalid value for required argument 'ComputeCount'")
	}
	if args.ComputeInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'ComputeInstanceType'")
	}
	if args.LoginCount == nil {
		return nil, errors.New("invalid value for required argument 'LoginCount'")
	}
	if args.LoginInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'LoginInstanceType'")
	}
	if args.ManagerInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'ManagerInstanceType'")
	}
	if args.OsTag == nil {
		return nil, errors.New("invalid value for required argument 'OsTag'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource Cluster
	err := ctx.RegisterResource("alicloud:ehpc/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("alicloud:ehpc/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
	AccountType *string `pulumi:"accountType"`
	// The additional volumes. See the following `Block additionalVolumes`.
	AdditionalVolumes []ClusterAdditionalVolume `pulumi:"additionalVolumes"`
	// The application. See the following `Block application`.
	Applications []ClusterApplication `pulumi:"applications"`
	// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The version of the E-HPC client. By default, the parameter is set to the latest version number.
	ClientVersion *string `pulumi:"clientVersion"`
	// The name of the cluster. The name must be `2` to `64` characters in length.
	ClusterName *string `pulumi:"clusterName"`
	// The version of the cluster. Default value: `1.0`.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// The number of the compute nodes. Valid values: `1` to `99`.
	ComputeCount *int `pulumi:"computeCount"`
	// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
	ComputeEnableHt *bool `pulumi:"computeEnableHt"`
	// The instance type of the compute nodes.
	ComputeInstanceType *string `pulumi:"computeInstanceType"`
	// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
	ComputeSpotPriceLimit *string `pulumi:"computeSpotPriceLimit"`
	// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
	ComputeSpotStrategy *string `pulumi:"computeSpotStrategy"`
	// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
	DeployMode *string `pulumi:"deployMode"`
	// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
	Domain *string `pulumi:"domain"`
	// The billing method of the nodes.
	EcsChargeType *string `pulumi:"ecsChargeType"`
	// The version of E-HPC. By default, the parameter is set to the latest version number.
	EhpcVersion *string `pulumi:"ehpcVersion"`
	// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
	HaEnable *bool `pulumi:"haEnable"`
	// The ID of the image.
	ImageId *string `pulumi:"imageId"`
	// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
	InputFileUrl *string `pulumi:"inputFileUrl"`
	// Specifies whether to enable auto scaling. Default value: `false`.
	IsComputeEss *bool `pulumi:"isComputeEss"`
	// The queue to which the compute nodes are added.
	JobQueue *string `pulumi:"jobQueue"`
	// The name of the AccessKey pair.
	KeyPairName *string `pulumi:"keyPairName"`
	// The number of the logon nodes. Valid values: `1`.
	LoginCount *int `pulumi:"loginCount"`
	// The instance type of the logon nodes.
	LoginInstanceType *string `pulumi:"loginInstanceType"`
	// The number of the management nodes. Valid values: 1 and 2.
	ManagerCount *int `pulumi:"managerCount"`
	// The instance type of the management nodes.
	ManagerInstanceType *string `pulumi:"managerInstanceType"`
	// The image tag of the operating system.
	OsTag *string `pulumi:"osTag"`
	// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
	Password *string `pulumi:"password"`
	// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
	// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
	// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
	Period *int `pulumi:"period"`
	// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
	// - pluginMod: the mode of the plug-in. The following modes are supported:
	// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
	// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
	// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
	// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
	Plugin *string `pulumi:"plugin"`
	// The post install script. See the following `Block postInstallScript`.
	PostInstallScripts []ClusterPostInstallScript `pulumi:"postInstallScripts"`
	// The node of the RAM role.
	RamNodeTypes []string `pulumi:"ramNodeTypes"`
	// The name of the Resource Access Management (RAM) role.
	RamRoleName *string `pulumi:"ramRoleName"`
	// The release instance. Valid values: `true`.
	ReleaseInstance *bool `pulumi:"releaseInstance"`
	// The remote directory to which the file system is mounted.
	RemoteDirectory *string `pulumi:"remoteDirectory"`
	// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
	RemoteVisEnable *bool `pulumi:"remoteVisEnable"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
	SccClusterId *string `pulumi:"sccClusterId"`
	// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
	SchedulerType *string `pulumi:"schedulerType"`
	// The ID of the security group to which the cluster belongs.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
	SystemDiskLevel *string `pulumi:"systemDiskLevel"`
	// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
	VolumeId *string `pulumi:"volumeId"`
	// The mount options of the file system.
	VolumeMountOption *string `pulumi:"volumeMountOption"`
	// The mount target of the file system. Take note of the following information:
	// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
	// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
	VolumeMountpoint *string `pulumi:"volumeMountpoint"`
	// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
	VolumeProtocol *string `pulumi:"volumeProtocol"`
	// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
	VolumeType *string `pulumi:"volumeType"`
	// The ID of the virtual private cloud (VPC) to which the cluster belongs.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the vSwitch. E-HPC supports only VPC networks.
	VswitchId *string `pulumi:"vswitchId"`
	// Specifies whether not to install the agent. Default value: `false`.
	WithoutAgent *bool `pulumi:"withoutAgent"`
	// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
	WithoutElasticIp *bool `pulumi:"withoutElasticIp"`
	// The ID of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

type ClusterState struct {
	// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
	AccountType pulumi.StringPtrInput
	// The additional volumes. See the following `Block additionalVolumes`.
	AdditionalVolumes ClusterAdditionalVolumeArrayInput
	// The application. See the following `Block application`.
	Applications ClusterApplicationArrayInput
	// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
	AutoRenew pulumi.BoolPtrInput
	// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
	AutoRenewPeriod pulumi.IntPtrInput
	// The version of the E-HPC client. By default, the parameter is set to the latest version number.
	ClientVersion pulumi.StringPtrInput
	// The name of the cluster. The name must be `2` to `64` characters in length.
	ClusterName pulumi.StringPtrInput
	// The version of the cluster. Default value: `1.0`.
	ClusterVersion pulumi.StringPtrInput
	// The number of the compute nodes. Valid values: `1` to `99`.
	ComputeCount pulumi.IntPtrInput
	// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
	ComputeEnableHt pulumi.BoolPtrInput
	// The instance type of the compute nodes.
	ComputeInstanceType pulumi.StringPtrInput
	// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
	ComputeSpotPriceLimit pulumi.StringPtrInput
	// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
	ComputeSpotStrategy pulumi.StringPtrInput
	// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
	DeployMode pulumi.StringPtrInput
	// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
	Domain pulumi.StringPtrInput
	// The billing method of the nodes.
	EcsChargeType pulumi.StringPtrInput
	// The version of E-HPC. By default, the parameter is set to the latest version number.
	EhpcVersion pulumi.StringPtrInput
	// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
	HaEnable pulumi.BoolPtrInput
	// The ID of the image.
	ImageId pulumi.StringPtrInput
	// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
	ImageOwnerAlias pulumi.StringPtrInput
	// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
	InputFileUrl pulumi.StringPtrInput
	// Specifies whether to enable auto scaling. Default value: `false`.
	IsComputeEss pulumi.BoolPtrInput
	// The queue to which the compute nodes are added.
	JobQueue pulumi.StringPtrInput
	// The name of the AccessKey pair.
	KeyPairName pulumi.StringPtrInput
	// The number of the logon nodes. Valid values: `1`.
	LoginCount pulumi.IntPtrInput
	// The instance type of the logon nodes.
	LoginInstanceType pulumi.StringPtrInput
	// The number of the management nodes. Valid values: 1 and 2.
	ManagerCount pulumi.IntPtrInput
	// The instance type of the management nodes.
	ManagerInstanceType pulumi.StringPtrInput
	// The image tag of the operating system.
	OsTag pulumi.StringPtrInput
	// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
	Password pulumi.StringPtrInput
	// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
	// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
	// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
	Period pulumi.IntPtrInput
	// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
	// - pluginMod: the mode of the plug-in. The following modes are supported:
	// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
	// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
	// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
	// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
	Plugin pulumi.StringPtrInput
	// The post install script. See the following `Block postInstallScript`.
	PostInstallScripts ClusterPostInstallScriptArrayInput
	// The node of the RAM role.
	RamNodeTypes pulumi.StringArrayInput
	// The name of the Resource Access Management (RAM) role.
	RamRoleName pulumi.StringPtrInput
	// The release instance. Valid values: `true`.
	ReleaseInstance pulumi.BoolPtrInput
	// The remote directory to which the file system is mounted.
	RemoteDirectory pulumi.StringPtrInput
	// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
	RemoteVisEnable pulumi.BoolPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
	SccClusterId pulumi.StringPtrInput
	// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
	SchedulerType pulumi.StringPtrInput
	// The ID of the security group to which the cluster belongs.
	SecurityGroupId pulumi.StringPtrInput
	// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
	SecurityGroupName pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
	// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
	SystemDiskLevel pulumi.StringPtrInput
	// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
	SystemDiskSize pulumi.IntPtrInput
	// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
	SystemDiskType pulumi.StringPtrInput
	// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
	VolumeId pulumi.StringPtrInput
	// The mount options of the file system.
	VolumeMountOption pulumi.StringPtrInput
	// The mount target of the file system. Take note of the following information:
	// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
	// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
	VolumeMountpoint pulumi.StringPtrInput
	// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
	VolumeProtocol pulumi.StringPtrInput
	// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
	VolumeType pulumi.StringPtrInput
	// The ID of the virtual private cloud (VPC) to which the cluster belongs.
	VpcId pulumi.StringPtrInput
	// The ID of the vSwitch. E-HPC supports only VPC networks.
	VswitchId pulumi.StringPtrInput
	// Specifies whether not to install the agent. Default value: `false`.
	WithoutAgent pulumi.BoolPtrInput
	// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
	WithoutElasticIp pulumi.BoolPtrInput
	// The ID of the zone.
	ZoneId pulumi.StringPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
	AccountType *string `pulumi:"accountType"`
	// The additional volumes. See the following `Block additionalVolumes`.
	AdditionalVolumes []ClusterAdditionalVolume `pulumi:"additionalVolumes"`
	// The application. See the following `Block application`.
	Applications []ClusterApplication `pulumi:"applications"`
	// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The version of the E-HPC client. By default, the parameter is set to the latest version number.
	ClientVersion *string `pulumi:"clientVersion"`
	// The name of the cluster. The name must be `2` to `64` characters in length.
	ClusterName string `pulumi:"clusterName"`
	// The version of the cluster. Default value: `1.0`.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// The number of the compute nodes. Valid values: `1` to `99`.
	ComputeCount int `pulumi:"computeCount"`
	// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
	ComputeEnableHt *bool `pulumi:"computeEnableHt"`
	// The instance type of the compute nodes.
	ComputeInstanceType string `pulumi:"computeInstanceType"`
	// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
	ComputeSpotPriceLimit *string `pulumi:"computeSpotPriceLimit"`
	// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
	ComputeSpotStrategy *string `pulumi:"computeSpotStrategy"`
	// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
	DeployMode *string `pulumi:"deployMode"`
	// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
	Domain *string `pulumi:"domain"`
	// The billing method of the nodes.
	EcsChargeType *string `pulumi:"ecsChargeType"`
	// The version of E-HPC. By default, the parameter is set to the latest version number.
	EhpcVersion *string `pulumi:"ehpcVersion"`
	// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
	HaEnable *bool `pulumi:"haEnable"`
	// The ID of the image.
	ImageId *string `pulumi:"imageId"`
	// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
	InputFileUrl *string `pulumi:"inputFileUrl"`
	// Specifies whether to enable auto scaling. Default value: `false`.
	IsComputeEss *bool `pulumi:"isComputeEss"`
	// The queue to which the compute nodes are added.
	JobQueue *string `pulumi:"jobQueue"`
	// The name of the AccessKey pair.
	KeyPairName *string `pulumi:"keyPairName"`
	// The number of the logon nodes. Valid values: `1`.
	LoginCount int `pulumi:"loginCount"`
	// The instance type of the logon nodes.
	LoginInstanceType string `pulumi:"loginInstanceType"`
	// The number of the management nodes. Valid values: 1 and 2.
	ManagerCount *int `pulumi:"managerCount"`
	// The instance type of the management nodes.
	ManagerInstanceType string `pulumi:"managerInstanceType"`
	// The image tag of the operating system.
	OsTag string `pulumi:"osTag"`
	// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
	Password *string `pulumi:"password"`
	// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
	// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
	// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
	Period *int `pulumi:"period"`
	// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
	// - pluginMod: the mode of the plug-in. The following modes are supported:
	// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
	// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
	// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
	// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
	Plugin *string `pulumi:"plugin"`
	// The post install script. See the following `Block postInstallScript`.
	PostInstallScripts []ClusterPostInstallScript `pulumi:"postInstallScripts"`
	// The node of the RAM role.
	RamNodeTypes []string `pulumi:"ramNodeTypes"`
	// The name of the Resource Access Management (RAM) role.
	RamRoleName *string `pulumi:"ramRoleName"`
	// The release instance. Valid values: `true`.
	ReleaseInstance *bool `pulumi:"releaseInstance"`
	// The remote directory to which the file system is mounted.
	RemoteDirectory *string `pulumi:"remoteDirectory"`
	// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
	RemoteVisEnable *bool `pulumi:"remoteVisEnable"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
	SccClusterId *string `pulumi:"sccClusterId"`
	// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
	SchedulerType *string `pulumi:"schedulerType"`
	// The ID of the security group to which the cluster belongs.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
	// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
	SystemDiskLevel *string `pulumi:"systemDiskLevel"`
	// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
	VolumeId *string `pulumi:"volumeId"`
	// The mount options of the file system.
	VolumeMountOption *string `pulumi:"volumeMountOption"`
	// The mount target of the file system. Take note of the following information:
	// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
	// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
	VolumeMountpoint *string `pulumi:"volumeMountpoint"`
	// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
	VolumeProtocol *string `pulumi:"volumeProtocol"`
	// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
	VolumeType *string `pulumi:"volumeType"`
	// The ID of the virtual private cloud (VPC) to which the cluster belongs.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the vSwitch. E-HPC supports only VPC networks.
	VswitchId *string `pulumi:"vswitchId"`
	// Specifies whether not to install the agent. Default value: `false`.
	WithoutAgent *bool `pulumi:"withoutAgent"`
	// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
	WithoutElasticIp *bool `pulumi:"withoutElasticIp"`
	// The ID of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
	AccountType pulumi.StringPtrInput
	// The additional volumes. See the following `Block additionalVolumes`.
	AdditionalVolumes ClusterAdditionalVolumeArrayInput
	// The application. See the following `Block application`.
	Applications ClusterApplicationArrayInput
	// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
	AutoRenew pulumi.BoolPtrInput
	// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
	AutoRenewPeriod pulumi.IntPtrInput
	// The version of the E-HPC client. By default, the parameter is set to the latest version number.
	ClientVersion pulumi.StringPtrInput
	// The name of the cluster. The name must be `2` to `64` characters in length.
	ClusterName pulumi.StringInput
	// The version of the cluster. Default value: `1.0`.
	ClusterVersion pulumi.StringPtrInput
	// The number of the compute nodes. Valid values: `1` to `99`.
	ComputeCount pulumi.IntInput
	// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
	ComputeEnableHt pulumi.BoolPtrInput
	// The instance type of the compute nodes.
	ComputeInstanceType pulumi.StringInput
	// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
	ComputeSpotPriceLimit pulumi.StringPtrInput
	// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
	ComputeSpotStrategy pulumi.StringPtrInput
	// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
	DeployMode pulumi.StringPtrInput
	// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
	Domain pulumi.StringPtrInput
	// The billing method of the nodes.
	EcsChargeType pulumi.StringPtrInput
	// The version of E-HPC. By default, the parameter is set to the latest version number.
	EhpcVersion pulumi.StringPtrInput
	// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
	HaEnable pulumi.BoolPtrInput
	// The ID of the image.
	ImageId pulumi.StringPtrInput
	// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
	ImageOwnerAlias pulumi.StringPtrInput
	// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
	InputFileUrl pulumi.StringPtrInput
	// Specifies whether to enable auto scaling. Default value: `false`.
	IsComputeEss pulumi.BoolPtrInput
	// The queue to which the compute nodes are added.
	JobQueue pulumi.StringPtrInput
	// The name of the AccessKey pair.
	KeyPairName pulumi.StringPtrInput
	// The number of the logon nodes. Valid values: `1`.
	LoginCount pulumi.IntInput
	// The instance type of the logon nodes.
	LoginInstanceType pulumi.StringInput
	// The number of the management nodes. Valid values: 1 and 2.
	ManagerCount pulumi.IntPtrInput
	// The instance type of the management nodes.
	ManagerInstanceType pulumi.StringInput
	// The image tag of the operating system.
	OsTag pulumi.StringInput
	// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
	Password pulumi.StringPtrInput
	// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
	// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
	// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
	Period pulumi.IntPtrInput
	// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
	// - pluginMod: the mode of the plug-in. The following modes are supported:
	// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
	// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
	// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
	// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
	Plugin pulumi.StringPtrInput
	// The post install script. See the following `Block postInstallScript`.
	PostInstallScripts ClusterPostInstallScriptArrayInput
	// The node of the RAM role.
	RamNodeTypes pulumi.StringArrayInput
	// The name of the Resource Access Management (RAM) role.
	RamRoleName pulumi.StringPtrInput
	// The release instance. Valid values: `true`.
	ReleaseInstance pulumi.BoolPtrInput
	// The remote directory to which the file system is mounted.
	RemoteDirectory pulumi.StringPtrInput
	// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
	RemoteVisEnable pulumi.BoolPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
	SccClusterId pulumi.StringPtrInput
	// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
	SchedulerType pulumi.StringPtrInput
	// The ID of the security group to which the cluster belongs.
	SecurityGroupId pulumi.StringPtrInput
	// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
	SecurityGroupName pulumi.StringPtrInput
	// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
	SystemDiskLevel pulumi.StringPtrInput
	// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
	SystemDiskSize pulumi.IntPtrInput
	// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
	SystemDiskType pulumi.StringPtrInput
	// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
	VolumeId pulumi.StringPtrInput
	// The mount options of the file system.
	VolumeMountOption pulumi.StringPtrInput
	// The mount target of the file system. Take note of the following information:
	// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
	// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
	VolumeMountpoint pulumi.StringPtrInput
	// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
	VolumeProtocol pulumi.StringPtrInput
	// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
	VolumeType pulumi.StringPtrInput
	// The ID of the virtual private cloud (VPC) to which the cluster belongs.
	VpcId pulumi.StringPtrInput
	// The ID of the vSwitch. E-HPC supports only VPC networks.
	VswitchId pulumi.StringPtrInput
	// Specifies whether not to install the agent. Default value: `false`.
	WithoutAgent pulumi.BoolPtrInput
	// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
	WithoutElasticIp pulumi.BoolPtrInput
	// The ID of the zone.
	ZoneId pulumi.StringPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// The type of the domain account service. Valid values: `nis`, `ldap`. Default value: `nis`
func (o ClusterOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.AccountType }).(pulumi.StringOutput)
}

// The additional volumes. See the following `Block additionalVolumes`.
func (o ClusterOutput) AdditionalVolumes() ClusterAdditionalVolumeArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterAdditionalVolumeArrayOutput { return v.AdditionalVolumes }).(ClusterAdditionalVolumeArrayOutput)
}

// The application. See the following `Block application`.
func (o ClusterOutput) Applications() ClusterApplicationArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterApplicationArrayOutput { return v.Applications }).(ClusterApplicationArrayOutput)
}

// Specifies whether to enable auto-renewal for the subscription. Default value: `false`.
func (o ClusterOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The auto-renewal period of the subscription compute nodes. The parameter takes effect when AutoRenew is set to true.
func (o ClusterOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// The version of the E-HPC client. By default, the parameter is set to the latest version number.
func (o ClusterOutput) ClientVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClientVersion }).(pulumi.StringOutput)
}

// The name of the cluster. The name must be `2` to `64` characters in length.
func (o ClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// The version of the cluster. Default value: `1.0`.
func (o ClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// The number of the compute nodes. Valid values: `1` to `99`.
func (o ClusterOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.ComputeCount }).(pulumi.IntOutput)
}

// Specifies whether the compute nodes support hyper-threading. Default value: `true`.
func (o ClusterOutput) ComputeEnableHt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.ComputeEnableHt }).(pulumi.BoolPtrOutput)
}

// The instance type of the compute nodes.
func (o ClusterOutput) ComputeInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ComputeInstanceType }).(pulumi.StringOutput)
}

// The maximum hourly price of the compute nodes. A maximum of three decimal places can be used in the value of the parameter. The parameter is valid only when the ComputeSpotStrategy parameter is set to SpotWithPriceLimit.
func (o ClusterOutput) ComputeSpotPriceLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ComputeSpotPriceLimit }).(pulumi.StringPtrOutput)
}

// The bidding method of the compute nodes. Default value: `NoSpot`. Valid values:
func (o ClusterOutput) ComputeSpotStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ComputeSpotStrategy }).(pulumi.StringPtrOutput)
}

// The mode in which the cluster is deployed. Valid values: `Standard`, `Simple`, `Tiny`. Default value: Standard.
func (o ClusterOutput) DeployMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DeployMode }).(pulumi.StringOutput)
}

// The description of the cluster. The description must be `2` to `256` characters in length. It cannot start with `http://` or `https://`.
func (o ClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The domain name of the on-premises cluster. This parameter takes effect only when the AccoutType parameter is set to Idap.
func (o ClusterOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Domain }).(pulumi.StringPtrOutput)
}

// The billing method of the nodes.
func (o ClusterOutput) EcsChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EcsChargeType }).(pulumi.StringOutput)
}

// The version of E-HPC. By default, the parameter is set to the latest version number.
func (o ClusterOutput) EhpcVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EhpcVersion }).(pulumi.StringOutput)
}

// Specifies whether to enable the high availability feature. Default value: `false`.  **Note:** If high availability is enabled, a primary management node and a secondary management node are used.
func (o ClusterOutput) HaEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.HaEnable }).(pulumi.BoolOutput)
}

// The ID of the image.
func (o ClusterOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// The type of the image. Valid values: `others`, `self`, `system`, `marketplace`. Default value: `system`.
func (o ClusterOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

// The URL of the job files that are uploaded to an Object Storage Service (OSS) bucket.
func (o ClusterOutput) InputFileUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.InputFileUrl }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable auto scaling. Default value: `false`.
func (o ClusterOutput) IsComputeEss() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.IsComputeEss }).(pulumi.BoolPtrOutput)
}

// The queue to which the compute nodes are added.
func (o ClusterOutput) JobQueue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.JobQueue }).(pulumi.StringPtrOutput)
}

// The name of the AccessKey pair.
func (o ClusterOutput) KeyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.KeyPairName }).(pulumi.StringPtrOutput)
}

// The number of the logon nodes. Valid values: `1`.
func (o ClusterOutput) LoginCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.LoginCount }).(pulumi.IntOutput)
}

// The instance type of the logon nodes.
func (o ClusterOutput) LoginInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.LoginInstanceType }).(pulumi.StringOutput)
}

// The number of the management nodes. Valid values: 1 and 2.
func (o ClusterOutput) ManagerCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.ManagerCount }).(pulumi.IntOutput)
}

// The instance type of the management nodes.
func (o ClusterOutput) ManagerInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ManagerInstanceType }).(pulumi.StringOutput)
}

// The image tag of the operating system.
func (o ClusterOutput) OsTag() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.OsTag }).(pulumi.StringOutput)
}

// The root password of the logon node. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters: `( ) ~ ! @ # $ % ^ & * - + = { } [ ] : ; â€˜ < > , . ? /`. You must specify either `password` or `keyPairName`. If both are specified, the Password parameter prevails.
func (o ClusterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The duration of the subscription. The unit of the duration is specified by the `periodUnit` parameter. Default value: `1`.
// * If you set PriceUnit to Year, the valid values of the Period parameter are 1, 2, and 3.
// * If you set PriceUnit to Month, the valid values of the Period parameter are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
// * If you set PriceUnit to Hour, the valid value of the Period parameter is 1.
func (o ClusterOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The unit of the subscription duration. Valid values: `Year`, `Month`, `Hour`. Default value: `Month`.
func (o ClusterOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The mode configurations of the plug-in. This parameter takes effect only when the SchedulerType parameter is set to custom. The value must be a JSON string. The parameter contains the following parameters: pluginMod, pluginLocalPath, and pluginOssPath.
// - pluginMod: the mode of the plug-in. The following modes are supported:
// - oss: The plug-in is downloaded and decompressed from OSS to a local path. The local path is specified by the pluginLocalPath parameter.
// - image: By default, the plug-in is stored in a pre-defined local path. The local path is specified by the pluginLocalPath parameter.
// - pluginLocalPath: the local path where the plug-in is stored. We recommend that you select a shared directory in oss mode and a non-shared directory in image mode.
// - pluginOssPath: the remote path where the plug-in is stored in OSS. This parameter takes effect only when the pluginMod parameter is set to oss.
func (o ClusterOutput) Plugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Plugin }).(pulumi.StringPtrOutput)
}

// The post install script. See the following `Block postInstallScript`.
func (o ClusterOutput) PostInstallScripts() ClusterPostInstallScriptArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterPostInstallScriptArrayOutput { return v.PostInstallScripts }).(ClusterPostInstallScriptArrayOutput)
}

// The node of the RAM role.
func (o ClusterOutput) RamNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.RamNodeTypes }).(pulumi.StringArrayOutput)
}

// The name of the Resource Access Management (RAM) role.
func (o ClusterOutput) RamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.RamRoleName }).(pulumi.StringPtrOutput)
}

// The release instance. Valid values: `true`.
func (o ClusterOutput) ReleaseInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.ReleaseInstance }).(pulumi.BoolPtrOutput)
}

// The remote directory to which the file system is mounted.
func (o ClusterOutput) RemoteDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.RemoteDirectory }).(pulumi.StringOutput)
}

// Specifies whether to enable Virtual Network Computing (VNC). Default value: `false`.
func (o ClusterOutput) RemoteVisEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.RemoteVisEnable }).(pulumi.BoolPtrOutput)
}

// The ID of the resource group.
func (o ClusterOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The ID of the Super Computing Cluster (SCC) instance. If you specify the parameter, the SCC instance is moved to a new SCC cluster.
func (o ClusterOutput) SccClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SccClusterId }).(pulumi.StringOutput)
}

// The type of the scheduler. Valid values: `pbs`, `slurm`, `opengridscheduler` and `deadline`. Default value: `pbs`.
func (o ClusterOutput) SchedulerType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SchedulerType }).(pulumi.StringOutput)
}

// The ID of the security group to which the cluster belongs.
func (o ClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// If you do not use an existing security group, set the parameter to the name of a new security group. A default policy is applied to the new security group.
func (o ClusterOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o ClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The performance level of the ESSD that is used as the system disk. Default value: `PL1` For more information, see [ESSDs](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/essds). Valid values:
func (o ClusterOutput) SystemDiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SystemDiskLevel }).(pulumi.StringPtrOutput)
}

// The size of the system disk. Unit: `GB`. Valid values: `40` to `500`. Default value: `40`.
func (o ClusterOutput) SystemDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.SystemDiskSize }).(pulumi.IntPtrOutput)
}

// The type of the system disk. Valid values: `cloudEfficiency`, `cloudSsd`, `cloudEssd` or `cloud`. Default value: `cloudSsd`.
func (o ClusterOutput) SystemDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SystemDiskType }).(pulumi.StringPtrOutput)
}

// The ID of the file system. If you leave the parameter empty, a Performance NAS file system is created by default.
func (o ClusterOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VolumeId }).(pulumi.StringOutput)
}

// The mount options of the file system.
func (o ClusterOutput) VolumeMountOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.VolumeMountOption }).(pulumi.StringPtrOutput)
}

// The mount target of the file system. Take note of the following information:
// - If you do not specify the VolumeId parameter, you can leave the VolumeMountpoint parameter empty. A mount target is created by default.
// - If you specify the VolumeId parameter, the VolumeMountpoint parameter is required.
func (o ClusterOutput) VolumeMountpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VolumeMountpoint }).(pulumi.StringOutput)
}

// The type of the protocol that is used by the file system. Valid values: `NFS`, `SMB`. Default value: `NFS`.
func (o ClusterOutput) VolumeProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VolumeProtocol }).(pulumi.StringOutput)
}

// The type of the shared storage. Only Apsara File Storage NAS file systems are supported.
func (o ClusterOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VolumeType }).(pulumi.StringOutput)
}

// The ID of the virtual private cloud (VPC) to which the cluster belongs.
func (o ClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of the vSwitch. E-HPC supports only VPC networks.
func (o ClusterOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

// Specifies whether not to install the agent. Default value: `false`.
func (o ClusterOutput) WithoutAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.WithoutAgent }).(pulumi.BoolPtrOutput)
}

// Specifies whether the logon node uses an elastic IP address (EIP). Default value: `false`.
func (o ClusterOutput) WithoutElasticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.WithoutElasticIp }).(pulumi.BoolPtrOutput)
}

// The ID of the zone.
func (o ClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
