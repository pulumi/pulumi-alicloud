// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastionhost

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetHostAccountsAccount struct {
	// Whether to set a new password.
	HasPassword bool `pulumi:"hasPassword"`
	// Hosting account ID.
	HostAccountId string `pulumi:"hostAccountId"`
	// Specify the new hosting account's name, support the longest 128 characters.
	HostAccountName string `pulumi:"hostAccountName"`
	// Specifies the database where you want to create your hosting account's host ID.
	HostId string `pulumi:"hostId"`
	// The ID of the Host Account.
	Id string `pulumi:"id"`
	// Specifies the database where you want to create your hosting account's host bastion host ID of.
	InstanceId string `pulumi:"instanceId"`
	// The situation where the private keys of the fingerprint information.
	PrivateKeyFingerprint string `pulumi:"privateKeyFingerprint"`
	// Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
	ProtocolName string `pulumi:"protocolName"`
}

// GetHostAccountsAccountInput is an input type that accepts GetHostAccountsAccountArgs and GetHostAccountsAccountOutput values.
// You can construct a concrete instance of `GetHostAccountsAccountInput` via:
//
//          GetHostAccountsAccountArgs{...}
type GetHostAccountsAccountInput interface {
	pulumi.Input

	ToGetHostAccountsAccountOutput() GetHostAccountsAccountOutput
	ToGetHostAccountsAccountOutputWithContext(context.Context) GetHostAccountsAccountOutput
}

type GetHostAccountsAccountArgs struct {
	// Whether to set a new password.
	HasPassword pulumi.BoolInput `pulumi:"hasPassword"`
	// Hosting account ID.
	HostAccountId pulumi.StringInput `pulumi:"hostAccountId"`
	// Specify the new hosting account's name, support the longest 128 characters.
	HostAccountName pulumi.StringInput `pulumi:"hostAccountName"`
	// Specifies the database where you want to create your hosting account's host ID.
	HostId pulumi.StringInput `pulumi:"hostId"`
	// The ID of the Host Account.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the database where you want to create your hosting account's host bastion host ID of.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The situation where the private keys of the fingerprint information.
	PrivateKeyFingerprint pulumi.StringInput `pulumi:"privateKeyFingerprint"`
	// Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
	ProtocolName pulumi.StringInput `pulumi:"protocolName"`
}

func (GetHostAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostAccountsAccount)(nil)).Elem()
}

func (i GetHostAccountsAccountArgs) ToGetHostAccountsAccountOutput() GetHostAccountsAccountOutput {
	return i.ToGetHostAccountsAccountOutputWithContext(context.Background())
}

func (i GetHostAccountsAccountArgs) ToGetHostAccountsAccountOutputWithContext(ctx context.Context) GetHostAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostAccountsAccountOutput)
}

// GetHostAccountsAccountArrayInput is an input type that accepts GetHostAccountsAccountArray and GetHostAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetHostAccountsAccountArrayInput` via:
//
//          GetHostAccountsAccountArray{ GetHostAccountsAccountArgs{...} }
type GetHostAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetHostAccountsAccountArrayOutput() GetHostAccountsAccountArrayOutput
	ToGetHostAccountsAccountArrayOutputWithContext(context.Context) GetHostAccountsAccountArrayOutput
}

type GetHostAccountsAccountArray []GetHostAccountsAccountInput

func (GetHostAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostAccountsAccount)(nil)).Elem()
}

func (i GetHostAccountsAccountArray) ToGetHostAccountsAccountArrayOutput() GetHostAccountsAccountArrayOutput {
	return i.ToGetHostAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetHostAccountsAccountArray) ToGetHostAccountsAccountArrayOutputWithContext(ctx context.Context) GetHostAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostAccountsAccountArrayOutput)
}

type GetHostAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetHostAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostAccountsAccount)(nil)).Elem()
}

func (o GetHostAccountsAccountOutput) ToGetHostAccountsAccountOutput() GetHostAccountsAccountOutput {
	return o
}

func (o GetHostAccountsAccountOutput) ToGetHostAccountsAccountOutputWithContext(ctx context.Context) GetHostAccountsAccountOutput {
	return o
}

// Whether to set a new password.
func (o GetHostAccountsAccountOutput) HasPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) bool { return v.HasPassword }).(pulumi.BoolOutput)
}

// Hosting account ID.
func (o GetHostAccountsAccountOutput) HostAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.HostAccountId }).(pulumi.StringOutput)
}

// Specify the new hosting account's name, support the longest 128 characters.
func (o GetHostAccountsAccountOutput) HostAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.HostAccountName }).(pulumi.StringOutput)
}

// Specifies the database where you want to create your hosting account's host ID.
func (o GetHostAccountsAccountOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.HostId }).(pulumi.StringOutput)
}

// The ID of the Host Account.
func (o GetHostAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the database where you want to create your hosting account's host bastion host ID of.
func (o GetHostAccountsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The situation where the private keys of the fingerprint information.
func (o GetHostAccountsAccountOutput) PrivateKeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.PrivateKeyFingerprint }).(pulumi.StringOutput)
}

// Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
func (o GetHostAccountsAccountOutput) ProtocolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostAccountsAccount) string { return v.ProtocolName }).(pulumi.StringOutput)
}

type GetHostAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetHostAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostAccountsAccount)(nil)).Elem()
}

func (o GetHostAccountsAccountArrayOutput) ToGetHostAccountsAccountArrayOutput() GetHostAccountsAccountArrayOutput {
	return o
}

func (o GetHostAccountsAccountArrayOutput) ToGetHostAccountsAccountArrayOutputWithContext(ctx context.Context) GetHostAccountsAccountArrayOutput {
	return o
}

func (o GetHostAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetHostAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostAccountsAccount {
		return vs[0].([]GetHostAccountsAccount)[vs[1].(int)]
	}).(GetHostAccountsAccountOutput)
}

type GetHostGroupsGroup struct {
	// Specify the New Host Group of Notes, Supports up to 500 Characters.
	Comment string `pulumi:"comment"`
	// Host Group ID.
	HostGroupId string `pulumi:"hostGroupId"`
	// Specify the New Host Group Name, Supports up to 128 Characters.
	HostGroupName string `pulumi:"hostGroupName"`
	// The ID of the Host Group.
	Id string `pulumi:"id"`
	// Specify the New Host Group Where the Bastion Host ID of.
	InstanceId string `pulumi:"instanceId"`
}

// GetHostGroupsGroupInput is an input type that accepts GetHostGroupsGroupArgs and GetHostGroupsGroupOutput values.
// You can construct a concrete instance of `GetHostGroupsGroupInput` via:
//
//          GetHostGroupsGroupArgs{...}
type GetHostGroupsGroupInput interface {
	pulumi.Input

	ToGetHostGroupsGroupOutput() GetHostGroupsGroupOutput
	ToGetHostGroupsGroupOutputWithContext(context.Context) GetHostGroupsGroupOutput
}

type GetHostGroupsGroupArgs struct {
	// Specify the New Host Group of Notes, Supports up to 500 Characters.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Host Group ID.
	HostGroupId pulumi.StringInput `pulumi:"hostGroupId"`
	// Specify the New Host Group Name, Supports up to 128 Characters.
	HostGroupName pulumi.StringInput `pulumi:"hostGroupName"`
	// The ID of the Host Group.
	Id pulumi.StringInput `pulumi:"id"`
	// Specify the New Host Group Where the Bastion Host ID of.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetHostGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostGroupsGroup)(nil)).Elem()
}

func (i GetHostGroupsGroupArgs) ToGetHostGroupsGroupOutput() GetHostGroupsGroupOutput {
	return i.ToGetHostGroupsGroupOutputWithContext(context.Background())
}

func (i GetHostGroupsGroupArgs) ToGetHostGroupsGroupOutputWithContext(ctx context.Context) GetHostGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostGroupsGroupOutput)
}

// GetHostGroupsGroupArrayInput is an input type that accepts GetHostGroupsGroupArray and GetHostGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetHostGroupsGroupArrayInput` via:
//
//          GetHostGroupsGroupArray{ GetHostGroupsGroupArgs{...} }
type GetHostGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetHostGroupsGroupArrayOutput() GetHostGroupsGroupArrayOutput
	ToGetHostGroupsGroupArrayOutputWithContext(context.Context) GetHostGroupsGroupArrayOutput
}

type GetHostGroupsGroupArray []GetHostGroupsGroupInput

func (GetHostGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostGroupsGroup)(nil)).Elem()
}

func (i GetHostGroupsGroupArray) ToGetHostGroupsGroupArrayOutput() GetHostGroupsGroupArrayOutput {
	return i.ToGetHostGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetHostGroupsGroupArray) ToGetHostGroupsGroupArrayOutputWithContext(ctx context.Context) GetHostGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostGroupsGroupArrayOutput)
}

type GetHostGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetHostGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostGroupsGroup)(nil)).Elem()
}

func (o GetHostGroupsGroupOutput) ToGetHostGroupsGroupOutput() GetHostGroupsGroupOutput {
	return o
}

func (o GetHostGroupsGroupOutput) ToGetHostGroupsGroupOutputWithContext(ctx context.Context) GetHostGroupsGroupOutput {
	return o
}

// Specify the New Host Group of Notes, Supports up to 500 Characters.
func (o GetHostGroupsGroupOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostGroupsGroup) string { return v.Comment }).(pulumi.StringOutput)
}

// Host Group ID.
func (o GetHostGroupsGroupOutput) HostGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostGroupsGroup) string { return v.HostGroupId }).(pulumi.StringOutput)
}

// Specify the New Host Group Name, Supports up to 128 Characters.
func (o GetHostGroupsGroupOutput) HostGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostGroupsGroup) string { return v.HostGroupName }).(pulumi.StringOutput)
}

// The ID of the Host Group.
func (o GetHostGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Specify the New Host Group Where the Bastion Host ID of.
func (o GetHostGroupsGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostGroupsGroup) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetHostGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetHostGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostGroupsGroup)(nil)).Elem()
}

func (o GetHostGroupsGroupArrayOutput) ToGetHostGroupsGroupArrayOutput() GetHostGroupsGroupArrayOutput {
	return o
}

func (o GetHostGroupsGroupArrayOutput) ToGetHostGroupsGroupArrayOutputWithContext(ctx context.Context) GetHostGroupsGroupArrayOutput {
	return o
}

func (o GetHostGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetHostGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostGroupsGroup {
		return vs[0].([]GetHostGroupsGroup)[vs[1].(int)]
	}).(GetHostGroupsGroupOutput)
}

type GetHostsHost struct {
	// Specify the new create a host of address types. Valid values: Public: the IP address of a Public network Private: Private network address.
	ActiveAddressType string `pulumi:"activeAddressType"`
	// Specify a host of notes, supports up to 500 characters.
	Comment string `pulumi:"comment"`
	// The host ID.
	HostId string `pulumi:"hostId"`
	// Specify the new create a host name of the supports up to 128 characters.
	HostName string `pulumi:"hostName"`
	// Specify the new create a host of the private network address, it is possible to use the domain name or IP ADDRESS.
	HostPrivateAddress string `pulumi:"hostPrivateAddress"`
	// Specify the new create a host of the IP address of a public network, it is possible to use the domain name or IP ADDRESS.
	HostPublicAddress string `pulumi:"hostPublicAddress"`
	// The ID of the Host.
	Id string `pulumi:"id"`
	// Specify the new create a host where the Bastion host ID of.
	InstanceId string `pulumi:"instanceId"`
	// Specify the new create the host's operating system. Valid values: Linux Windows.
	OsType string `pulumi:"osType"`
	// The host of the protocol information.
	Protocols []GetHostsHostProtocol `pulumi:"protocols"`
	// Specify the new create a host of source. Valid values: Local: localhost Ecs:ECS instance Rds:RDS exclusive cluster host.
	Source string `pulumi:"source"`
	// Specify the newly created ECS instance ID or dedicated cluster host ID.
	SourceInstanceId string `pulumi:"sourceInstanceId"`
}

// GetHostsHostInput is an input type that accepts GetHostsHostArgs and GetHostsHostOutput values.
// You can construct a concrete instance of `GetHostsHostInput` via:
//
//          GetHostsHostArgs{...}
type GetHostsHostInput interface {
	pulumi.Input

	ToGetHostsHostOutput() GetHostsHostOutput
	ToGetHostsHostOutputWithContext(context.Context) GetHostsHostOutput
}

type GetHostsHostArgs struct {
	// Specify the new create a host of address types. Valid values: Public: the IP address of a Public network Private: Private network address.
	ActiveAddressType pulumi.StringInput `pulumi:"activeAddressType"`
	// Specify a host of notes, supports up to 500 characters.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The host ID.
	HostId pulumi.StringInput `pulumi:"hostId"`
	// Specify the new create a host name of the supports up to 128 characters.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Specify the new create a host of the private network address, it is possible to use the domain name or IP ADDRESS.
	HostPrivateAddress pulumi.StringInput `pulumi:"hostPrivateAddress"`
	// Specify the new create a host of the IP address of a public network, it is possible to use the domain name or IP ADDRESS.
	HostPublicAddress pulumi.StringInput `pulumi:"hostPublicAddress"`
	// The ID of the Host.
	Id pulumi.StringInput `pulumi:"id"`
	// Specify the new create a host where the Bastion host ID of.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specify the new create the host's operating system. Valid values: Linux Windows.
	OsType pulumi.StringInput `pulumi:"osType"`
	// The host of the protocol information.
	Protocols GetHostsHostProtocolArrayInput `pulumi:"protocols"`
	// Specify the new create a host of source. Valid values: Local: localhost Ecs:ECS instance Rds:RDS exclusive cluster host.
	Source pulumi.StringInput `pulumi:"source"`
	// Specify the newly created ECS instance ID or dedicated cluster host ID.
	SourceInstanceId pulumi.StringInput `pulumi:"sourceInstanceId"`
}

func (GetHostsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHost)(nil)).Elem()
}

func (i GetHostsHostArgs) ToGetHostsHostOutput() GetHostsHostOutput {
	return i.ToGetHostsHostOutputWithContext(context.Background())
}

func (i GetHostsHostArgs) ToGetHostsHostOutputWithContext(ctx context.Context) GetHostsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostOutput)
}

// GetHostsHostArrayInput is an input type that accepts GetHostsHostArray and GetHostsHostArrayOutput values.
// You can construct a concrete instance of `GetHostsHostArrayInput` via:
//
//          GetHostsHostArray{ GetHostsHostArgs{...} }
type GetHostsHostArrayInput interface {
	pulumi.Input

	ToGetHostsHostArrayOutput() GetHostsHostArrayOutput
	ToGetHostsHostArrayOutputWithContext(context.Context) GetHostsHostArrayOutput
}

type GetHostsHostArray []GetHostsHostInput

func (GetHostsHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHost)(nil)).Elem()
}

func (i GetHostsHostArray) ToGetHostsHostArrayOutput() GetHostsHostArrayOutput {
	return i.ToGetHostsHostArrayOutputWithContext(context.Background())
}

func (i GetHostsHostArray) ToGetHostsHostArrayOutputWithContext(ctx context.Context) GetHostsHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostArrayOutput)
}

type GetHostsHostOutput struct{ *pulumi.OutputState }

func (GetHostsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHost)(nil)).Elem()
}

func (o GetHostsHostOutput) ToGetHostsHostOutput() GetHostsHostOutput {
	return o
}

func (o GetHostsHostOutput) ToGetHostsHostOutputWithContext(ctx context.Context) GetHostsHostOutput {
	return o
}

// Specify the new create a host of address types. Valid values: Public: the IP address of a Public network Private: Private network address.
func (o GetHostsHostOutput) ActiveAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.ActiveAddressType }).(pulumi.StringOutput)
}

// Specify a host of notes, supports up to 500 characters.
func (o GetHostsHostOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.Comment }).(pulumi.StringOutput)
}

// The host ID.
func (o GetHostsHostOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.HostId }).(pulumi.StringOutput)
}

// Specify the new create a host name of the supports up to 128 characters.
func (o GetHostsHostOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.HostName }).(pulumi.StringOutput)
}

// Specify the new create a host of the private network address, it is possible to use the domain name or IP ADDRESS.
func (o GetHostsHostOutput) HostPrivateAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.HostPrivateAddress }).(pulumi.StringOutput)
}

// Specify the new create a host of the IP address of a public network, it is possible to use the domain name or IP ADDRESS.
func (o GetHostsHostOutput) HostPublicAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.HostPublicAddress }).(pulumi.StringOutput)
}

// The ID of the Host.
func (o GetHostsHostOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.Id }).(pulumi.StringOutput)
}

// Specify the new create a host where the Bastion host ID of.
func (o GetHostsHostOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specify the new create the host's operating system. Valid values: Linux Windows.
func (o GetHostsHostOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.OsType }).(pulumi.StringOutput)
}

// The host of the protocol information.
func (o GetHostsHostOutput) Protocols() GetHostsHostProtocolArrayOutput {
	return o.ApplyT(func(v GetHostsHost) []GetHostsHostProtocol { return v.Protocols }).(GetHostsHostProtocolArrayOutput)
}

// Specify the new create a host of source. Valid values: Local: localhost Ecs:ECS instance Rds:RDS exclusive cluster host.
func (o GetHostsHostOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.Source }).(pulumi.StringOutput)
}

// Specify the newly created ECS instance ID or dedicated cluster host ID.
func (o GetHostsHostOutput) SourceInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.SourceInstanceId }).(pulumi.StringOutput)
}

type GetHostsHostArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHost)(nil)).Elem()
}

func (o GetHostsHostArrayOutput) ToGetHostsHostArrayOutput() GetHostsHostArrayOutput {
	return o
}

func (o GetHostsHostArrayOutput) ToGetHostsHostArrayOutputWithContext(ctx context.Context) GetHostsHostArrayOutput {
	return o
}

func (o GetHostsHostArrayOutput) Index(i pulumi.IntInput) GetHostsHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHost {
		return vs[0].([]GetHostsHost)[vs[1].(int)]
	}).(GetHostsHostOutput)
}

type GetHostsHostProtocol struct {
	// Host fingerprint information, it is possible to uniquely identify a host.
	HostFingerPrint string `pulumi:"hostFingerPrint"`
	// Host the service port of the RDS.
	Port int `pulumi:"port"`
	// The host uses the protocol name.
	ProtocolName string `pulumi:"protocolName"`
}

// GetHostsHostProtocolInput is an input type that accepts GetHostsHostProtocolArgs and GetHostsHostProtocolOutput values.
// You can construct a concrete instance of `GetHostsHostProtocolInput` via:
//
//          GetHostsHostProtocolArgs{...}
type GetHostsHostProtocolInput interface {
	pulumi.Input

	ToGetHostsHostProtocolOutput() GetHostsHostProtocolOutput
	ToGetHostsHostProtocolOutputWithContext(context.Context) GetHostsHostProtocolOutput
}

type GetHostsHostProtocolArgs struct {
	// Host fingerprint information, it is possible to uniquely identify a host.
	HostFingerPrint pulumi.StringInput `pulumi:"hostFingerPrint"`
	// Host the service port of the RDS.
	Port pulumi.IntInput `pulumi:"port"`
	// The host uses the protocol name.
	ProtocolName pulumi.StringInput `pulumi:"protocolName"`
}

func (GetHostsHostProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostProtocol)(nil)).Elem()
}

func (i GetHostsHostProtocolArgs) ToGetHostsHostProtocolOutput() GetHostsHostProtocolOutput {
	return i.ToGetHostsHostProtocolOutputWithContext(context.Background())
}

func (i GetHostsHostProtocolArgs) ToGetHostsHostProtocolOutputWithContext(ctx context.Context) GetHostsHostProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostProtocolOutput)
}

// GetHostsHostProtocolArrayInput is an input type that accepts GetHostsHostProtocolArray and GetHostsHostProtocolArrayOutput values.
// You can construct a concrete instance of `GetHostsHostProtocolArrayInput` via:
//
//          GetHostsHostProtocolArray{ GetHostsHostProtocolArgs{...} }
type GetHostsHostProtocolArrayInput interface {
	pulumi.Input

	ToGetHostsHostProtocolArrayOutput() GetHostsHostProtocolArrayOutput
	ToGetHostsHostProtocolArrayOutputWithContext(context.Context) GetHostsHostProtocolArrayOutput
}

type GetHostsHostProtocolArray []GetHostsHostProtocolInput

func (GetHostsHostProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostProtocol)(nil)).Elem()
}

func (i GetHostsHostProtocolArray) ToGetHostsHostProtocolArrayOutput() GetHostsHostProtocolArrayOutput {
	return i.ToGetHostsHostProtocolArrayOutputWithContext(context.Background())
}

func (i GetHostsHostProtocolArray) ToGetHostsHostProtocolArrayOutputWithContext(ctx context.Context) GetHostsHostProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostProtocolArrayOutput)
}

type GetHostsHostProtocolOutput struct{ *pulumi.OutputState }

func (GetHostsHostProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostProtocol)(nil)).Elem()
}

func (o GetHostsHostProtocolOutput) ToGetHostsHostProtocolOutput() GetHostsHostProtocolOutput {
	return o
}

func (o GetHostsHostProtocolOutput) ToGetHostsHostProtocolOutputWithContext(ctx context.Context) GetHostsHostProtocolOutput {
	return o
}

// Host fingerprint information, it is possible to uniquely identify a host.
func (o GetHostsHostProtocolOutput) HostFingerPrint() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostProtocol) string { return v.HostFingerPrint }).(pulumi.StringOutput)
}

// Host the service port of the RDS.
func (o GetHostsHostProtocolOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostProtocol) int { return v.Port }).(pulumi.IntOutput)
}

// The host uses the protocol name.
func (o GetHostsHostProtocolOutput) ProtocolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostProtocol) string { return v.ProtocolName }).(pulumi.StringOutput)
}

type GetHostsHostProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostProtocol)(nil)).Elem()
}

func (o GetHostsHostProtocolArrayOutput) ToGetHostsHostProtocolArrayOutput() GetHostsHostProtocolArrayOutput {
	return o
}

func (o GetHostsHostProtocolArrayOutput) ToGetHostsHostProtocolArrayOutputWithContext(ctx context.Context) GetHostsHostProtocolArrayOutput {
	return o
}

func (o GetHostsHostProtocolArrayOutput) Index(i pulumi.IntInput) GetHostsHostProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHostProtocol {
		return vs[0].([]GetHostsHostProtocol)[vs[1].(int)]
	}).(GetHostsHostProtocolOutput)
}

type GetInstancesInstance struct {
	// The instance's remark.
	Description string `pulumi:"description"`
	// The instance's id.
	Id string `pulumi:"id"`
	// The instance's status.
	InstanceStatus string `pulumi:"instanceStatus"`
	LicenseCode    string `pulumi:"licenseCode"`
	// The instance's private domain name.
	PrivateDomain string `pulumi:"privateDomain"`
	// The instance's public domain name.
	PublicDomain string `pulumi:"publicDomain"`
	// The instance's public network access configuration.
	PublicNetworkAccess bool `pulumi:"publicNetworkAccess"`
	// The instance's security group configuration.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A map of tags assigned to the bastionhost instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// The instance's vSwitch ID.
	UserVswitchId string `pulumi:"userVswitchId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The instance's remark.
	Description pulumi.StringInput `pulumi:"description"`
	// The instance's id.
	Id pulumi.StringInput `pulumi:"id"`
	// The instance's status.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	LicenseCode    pulumi.StringInput `pulumi:"licenseCode"`
	// The instance's private domain name.
	PrivateDomain pulumi.StringInput `pulumi:"privateDomain"`
	// The instance's public domain name.
	PublicDomain pulumi.StringInput `pulumi:"publicDomain"`
	// The instance's public network access configuration.
	PublicNetworkAccess pulumi.BoolInput `pulumi:"publicNetworkAccess"`
	// The instance's security group configuration.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A map of tags assigned to the bastionhost instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// The instance's vSwitch ID.
	UserVswitchId pulumi.StringInput `pulumi:"userVswitchId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The instance's remark.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// The instance's id.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The instance's status.
func (o GetInstancesInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) LicenseCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.LicenseCode }).(pulumi.StringOutput)
}

// The instance's private domain name.
func (o GetInstancesInstanceOutput) PrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateDomain }).(pulumi.StringOutput)
}

// The instance's public domain name.
func (o GetInstancesInstanceOutput) PublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicDomain }).(pulumi.StringOutput)
}

// The instance's public network access configuration.
func (o GetInstancesInstanceOutput) PublicNetworkAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.PublicNetworkAccess }).(pulumi.BoolOutput)
}

// The instance's security group configuration.
func (o GetInstancesInstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A map of tags assigned to the bastionhost instance. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The instance's vSwitch ID.
func (o GetInstancesInstanceOutput) UserVswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.UserVswitchId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetUserGroupsGroup struct {
	// Specify the New Group of Remark Information. Supports up to 500 Characters.
	Comment string `pulumi:"comment"`
	// The ID of the User Group.
	Id string `pulumi:"id"`
	// Specify the New Group of the Bastion Host of Instance Id.
	InstanceId string `pulumi:"instanceId"`
	// The User Group ID.
	UserGroupId string `pulumi:"userGroupId"`
	// Specify the New Group Name. Supports up to 128 Characters.
	UserGroupName string `pulumi:"userGroupName"`
}

// GetUserGroupsGroupInput is an input type that accepts GetUserGroupsGroupArgs and GetUserGroupsGroupOutput values.
// You can construct a concrete instance of `GetUserGroupsGroupInput` via:
//
//          GetUserGroupsGroupArgs{...}
type GetUserGroupsGroupInput interface {
	pulumi.Input

	ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput
	ToGetUserGroupsGroupOutputWithContext(context.Context) GetUserGroupsGroupOutput
}

type GetUserGroupsGroupArgs struct {
	// Specify the New Group of Remark Information. Supports up to 500 Characters.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The ID of the User Group.
	Id pulumi.StringInput `pulumi:"id"`
	// Specify the New Group of the Bastion Host of Instance Id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The User Group ID.
	UserGroupId pulumi.StringInput `pulumi:"userGroupId"`
	// Specify the New Group Name. Supports up to 128 Characters.
	UserGroupName pulumi.StringInput `pulumi:"userGroupName"`
}

func (GetUserGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsGroup)(nil)).Elem()
}

func (i GetUserGroupsGroupArgs) ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput {
	return i.ToGetUserGroupsGroupOutputWithContext(context.Background())
}

func (i GetUserGroupsGroupArgs) ToGetUserGroupsGroupOutputWithContext(ctx context.Context) GetUserGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsGroupOutput)
}

// GetUserGroupsGroupArrayInput is an input type that accepts GetUserGroupsGroupArray and GetUserGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetUserGroupsGroupArrayInput` via:
//
//          GetUserGroupsGroupArray{ GetUserGroupsGroupArgs{...} }
type GetUserGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput
	ToGetUserGroupsGroupArrayOutputWithContext(context.Context) GetUserGroupsGroupArrayOutput
}

type GetUserGroupsGroupArray []GetUserGroupsGroupInput

func (GetUserGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsGroup)(nil)).Elem()
}

func (i GetUserGroupsGroupArray) ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput {
	return i.ToGetUserGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetUserGroupsGroupArray) ToGetUserGroupsGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsGroupArrayOutput)
}

type GetUserGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetUserGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsGroup)(nil)).Elem()
}

func (o GetUserGroupsGroupOutput) ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput {
	return o
}

func (o GetUserGroupsGroupOutput) ToGetUserGroupsGroupOutputWithContext(ctx context.Context) GetUserGroupsGroupOutput {
	return o
}

// Specify the New Group of Remark Information. Supports up to 500 Characters.
func (o GetUserGroupsGroupOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.Comment }).(pulumi.StringOutput)
}

// The ID of the User Group.
func (o GetUserGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Specify the New Group of the Bastion Host of Instance Id.
func (o GetUserGroupsGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The User Group ID.
func (o GetUserGroupsGroupOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.UserGroupId }).(pulumi.StringOutput)
}

// Specify the New Group Name. Supports up to 128 Characters.
func (o GetUserGroupsGroupOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.UserGroupName }).(pulumi.StringOutput)
}

type GetUserGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsGroup)(nil)).Elem()
}

func (o GetUserGroupsGroupArrayOutput) ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput {
	return o
}

func (o GetUserGroupsGroupArrayOutput) ToGetUserGroupsGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsGroupArrayOutput {
	return o
}

func (o GetUserGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetUserGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupsGroup {
		return vs[0].([]GetUserGroupsGroup)[vs[1].(int)]
	}).(GetUserGroupsGroupOutput)
}

type GetUsersUser struct {
	// Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
	Comment string `pulumi:"comment"`
	// Specify the New Created the User's Display Name. Supports up to 128 Characters.
	DisplayName string `pulumi:"displayName"`
	// Specify the New User's Mailbox.
	Email string `pulumi:"email"`
	// The ID of the User.
	Id string `pulumi:"id"`
	// You Want to Query the User the Bastion Host ID of.
	InstanceId string `pulumi:"instanceId"`
	// Specify the New of the User That Created a Different Mobile Phone Number from Your.
	Mobile string `pulumi:"mobile"`
	// Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN Value: CN: Mainland China (+86) HK: hong Kong, China (+852) Mo: Macau, China (+853) TW: Taiwan, China (+886) ru: Russian (+7) SG: Singapore (+65) My: malaysia (+60) ID: Indonesia (+62) De: Germany (+49) AU: Australia (+61) US: United States (+1) AE: dubai (+971) JP: Japan (+81) Introducing the Long-Range GB: United Kingdom (+44) in: India (+91) KR: South Korea (+82) Ph: philippines (+63) Ch: Switzerland (+41) Se: Sweden (+46).
	MobileCountryCode string `pulumi:"mobileCountryCode"`
	// Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
	Source string `pulumi:"source"`
	// Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User's Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
	SourceUserId string `pulumi:"sourceUserId"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The User ID.
	UserId string `pulumi:"userId"`
	// Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
	UserName string `pulumi:"userName"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//          GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Specify the New Created the User's Display Name. Supports up to 128 Characters.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Specify the New User's Mailbox.
	Email pulumi.StringInput `pulumi:"email"`
	// The ID of the User.
	Id pulumi.StringInput `pulumi:"id"`
	// You Want to Query the User the Bastion Host ID of.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specify the New of the User That Created a Different Mobile Phone Number from Your.
	Mobile pulumi.StringInput `pulumi:"mobile"`
	// Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN Value: CN: Mainland China (+86) HK: hong Kong, China (+852) Mo: Macau, China (+853) TW: Taiwan, China (+886) ru: Russian (+7) SG: Singapore (+65) My: malaysia (+60) ID: Indonesia (+62) De: Germany (+49) AU: Australia (+61) US: United States (+1) AE: dubai (+971) JP: Japan (+81) Introducing the Long-Range GB: United Kingdom (+44) in: India (+91) KR: South Korea (+82) Ph: philippines (+63) Ch: Switzerland (+41) Se: Sweden (+46).
	MobileCountryCode pulumi.StringInput `pulumi:"mobileCountryCode"`
	// Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
	Source pulumi.StringInput `pulumi:"source"`
	// Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User's Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
	SourceUserId pulumi.StringInput `pulumi:"sourceUserId"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The User ID.
	UserId pulumi.StringInput `pulumi:"userId"`
	// Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//          GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
func (o GetUsersUserOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Comment }).(pulumi.StringOutput)
}

// Specify the New Created the User's Display Name. Supports up to 128 Characters.
func (o GetUsersUserOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Specify the New User's Mailbox.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// The ID of the User.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// You Want to Query the User the Bastion Host ID of.
func (o GetUsersUserOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specify the New of the User That Created a Different Mobile Phone Number from Your.
func (o GetUsersUserOutput) Mobile() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Mobile }).(pulumi.StringOutput)
}

// Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN Value: CN: Mainland China (+86) HK: hong Kong, China (+852) Mo: Macau, China (+853) TW: Taiwan, China (+886) ru: Russian (+7) SG: Singapore (+65) My: malaysia (+60) ID: Indonesia (+62) De: Germany (+49) AU: Australia (+61) US: United States (+1) AE: dubai (+971) JP: Japan (+81) Introducing the Long-Range GB: United Kingdom (+44) in: India (+91) KR: South Korea (+82) Ph: philippines (+63) Ch: Switzerland (+41) Se: Sweden (+46).
func (o GetUsersUserOutput) MobileCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.MobileCountryCode }).(pulumi.StringOutput)
}

// Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
func (o GetUsersUserOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Source }).(pulumi.StringOutput)
}

// Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User's Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
func (o GetUsersUserOutput) SourceUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.SourceUserId }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

// The User ID.
func (o GetUsersUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserId }).(pulumi.StringOutput)
}

// Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
func (o GetUsersUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserName }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostAccountsAccountInput)(nil)).Elem(), GetHostAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostAccountsAccountArrayInput)(nil)).Elem(), GetHostAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostGroupsGroupInput)(nil)).Elem(), GetHostGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostGroupsGroupArrayInput)(nil)).Elem(), GetHostGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostInput)(nil)).Elem(), GetHostsHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostArrayInput)(nil)).Elem(), GetHostsHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostProtocolInput)(nil)).Elem(), GetHostsHostProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostProtocolArrayInput)(nil)).Elem(), GetHostsHostProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsGroupInput)(nil)).Elem(), GetUserGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupsGroupArrayInput)(nil)).Elem(), GetUserGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(GetHostAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetHostAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetHostGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetHostGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostOutput{})
	pulumi.RegisterOutputType(GetHostsHostArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostProtocolOutput{})
	pulumi.RegisterOutputType(GetHostsHostProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetUserGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
