// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastionhost

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Bastionhost Users of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.133.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := bastionhost.GetUsers(ctx, &bastionhost.GetUsersArgs{
// 			InstanceId: "example_value",
// 			Ids: []string{
// 				"1",
// 				"10",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("bastionhostUserId1", ids.Users[0].Id)
// 		nameRegex, err := bastionhost.GetUsers(ctx, &bastionhost.GetUsersArgs{
// 			InstanceId: "example_value",
// 			NameRegex:  pulumi.StringRef("^my-User"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("bastionhostUserId2", nameRegex.Users[0].Id)
// 		return nil
// 	})
// }
// ```
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	var rv GetUsersResult
	err := ctx.Invoke("alicloud:bastionhost/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	// Specify the New Created the User's Display Name. Supports up to 128 Characters.
	DisplayName *string `pulumi:"displayName"`
	// A list of User IDs.
	Ids []string `pulumi:"ids"`
	// You Want to Query the User the Bastion Host ID of.
	InstanceId string `pulumi:"instanceId"`
	// Specify the New of the User That Created a Different Mobile Phone Number from Your.
	Mobile *string `pulumi:"mobile"`
	// A regex string to filter results by User name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
	Source *string `pulumi:"source"`
	// Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User's Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
	SourceUserId *string `pulumi:"sourceUserId"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	DisplayName *string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id           string         `pulumi:"id"`
	Ids          []string       `pulumi:"ids"`
	InstanceId   string         `pulumi:"instanceId"`
	Mobile       *string        `pulumi:"mobile"`
	NameRegex    *string        `pulumi:"nameRegex"`
	Names        []string       `pulumi:"names"`
	OutputFile   *string        `pulumi:"outputFile"`
	Source       *string        `pulumi:"source"`
	SourceUserId *string        `pulumi:"sourceUserId"`
	Status       *string        `pulumi:"status"`
	UserName     *string        `pulumi:"userName"`
	Users        []GetUsersUser `pulumi:"users"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResult, error) {
			args := v.(GetUsersArgs)
			r, err := GetUsers(ctx, &args, opts...)
			var s GetUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	// Specify the New Created the User's Display Name. Supports up to 128 Characters.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A list of User IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// You Want to Query the User the Bastion Host ID of.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specify the New of the User That Created a Different Mobile Phone Number from Your.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// A regex string to filter results by User name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User's Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
	SourceUserId pulumi.StringPtrInput `pulumi:"sourceUserId"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetUsersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetUsersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) SourceUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.SourceUserId }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) Users() GetUsersUserArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersUser { return v.Users }).(GetUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
