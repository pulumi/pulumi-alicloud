// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ocean

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Ocean Base Instance resource.
//
// For information about Ocean Base Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/apsaradb-for-oceanbase/latest/what-is-oceanbase-database).
//
// > **NOTE:** Available in v1.203.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ocean"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ocean.NewBaseInstance(ctx, "default", &ocean.BaseInstanceArgs{
//				InstanceName:  pulumi.Any(_var.Name),
//				Series:        pulumi.String("normal"),
//				DiskSize:      pulumi.Int(200),
//				InstanceClass: pulumi.String("14C70GB"),
//				Zones: pulumi.StringArray{
//					pulumi.String("ap-southeast-1a"),
//					pulumi.String("ap-southeast-1b"),
//					pulumi.String("ap-southeast-1c"),
//				},
//				PaymentType: pulumi.String("PayAsYouGo"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Ocean Base Instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:ocean/baseInstance:BaseInstance example <id>
//
// ```
type BaseInstance struct {
	pulumi.CustomResourceState

	// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
	// - true: automatic renewal.
	// - false (default): no automatic renewal.
	AutoRenew pulumi.BoolOutput `pulumi:"autoRenew"`
	// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// The backup retain mode.
	BackupRetainMode pulumi.StringPtrOutput `pulumi:"backupRetainMode"`
	// The product code of the OceanBase cluster.
	// - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
	// - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
	// - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
	CommodityCode pulumi.StringOutput `pulumi:"commodityCode"`
	// The number of CPU cores of the cluster.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
	// - 8C32GB:100GB ~ 10000GB
	// - 14C70GB:200GB ~ 10000GB
	// - 30C180GB:400GB ~ 10000GB
	// - 62C400G:800GB-10000GB.
	// - The default value of each package is its minimum value.
	DiskSize pulumi.IntOutput `pulumi:"diskSize"`
	// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
	InstanceClass pulumi.StringOutput `pulumi:"instanceClass"`
	// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The number of nodes in the cluster.
	NodeNum pulumi.StringOutput `pulumi:"nodeNum"`
	// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The period unit. Valid values: `Month`,`Year`.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The ID of the enterprise resource group to which the instance resides.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
	Series pulumi.StringOutput `pulumi:"series"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// Information about the zone where the cluster is deployed.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewBaseInstance registers a new resource with the given unique name, arguments, and options.
func NewBaseInstance(ctx *pulumi.Context,
	name string, args *BaseInstanceArgs, opts ...pulumi.ResourceOption) (*BaseInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiskSize == nil {
		return nil, errors.New("invalid value for required argument 'DiskSize'")
	}
	if args.InstanceClass == nil {
		return nil, errors.New("invalid value for required argument 'InstanceClass'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	if args.Series == nil {
		return nil, errors.New("invalid value for required argument 'Series'")
	}
	if args.Zones == nil {
		return nil, errors.New("invalid value for required argument 'Zones'")
	}
	var resource BaseInstance
	err := ctx.RegisterResource("alicloud:ocean/baseInstance:BaseInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBaseInstance gets an existing BaseInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBaseInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BaseInstanceState, opts ...pulumi.ResourceOption) (*BaseInstance, error) {
	var resource BaseInstance
	err := ctx.ReadResource("alicloud:ocean/baseInstance:BaseInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BaseInstance resources.
type baseInstanceState struct {
	// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
	// - true: automatic renewal.
	// - false (default): no automatic renewal.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The backup retain mode.
	BackupRetainMode *string `pulumi:"backupRetainMode"`
	// The product code of the OceanBase cluster.
	// - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
	// - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
	// - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
	CommodityCode *string `pulumi:"commodityCode"`
	// The number of CPU cores of the cluster.
	Cpu *int `pulumi:"cpu"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
	// - 8C32GB:100GB ~ 10000GB
	// - 14C70GB:200GB ~ 10000GB
	// - 30C180GB:400GB ~ 10000GB
	// - 62C400G:800GB-10000GB.
	// - The default value of each package is its minimum value.
	DiskSize *int `pulumi:"diskSize"`
	// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
	InstanceClass *string `pulumi:"instanceClass"`
	// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
	InstanceName *string `pulumi:"instanceName"`
	// The number of nodes in the cluster.
	NodeNum *string `pulumi:"nodeNum"`
	// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
	Period *int `pulumi:"period"`
	// The period unit. Valid values: `Month`,`Year`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The ID of the enterprise resource group to which the instance resides.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
	Series *string `pulumi:"series"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// Information about the zone where the cluster is deployed.
	Zones []string `pulumi:"zones"`
}

type BaseInstanceState struct {
	// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
	// - true: automatic renewal.
	// - false (default): no automatic renewal.
	AutoRenew pulumi.BoolPtrInput
	// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
	AutoRenewPeriod pulumi.IntPtrInput
	// The backup retain mode.
	BackupRetainMode pulumi.StringPtrInput
	// The product code of the OceanBase cluster.
	// - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
	// - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
	// - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
	CommodityCode pulumi.StringPtrInput
	// The number of CPU cores of the cluster.
	Cpu pulumi.IntPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
	// - 8C32GB:100GB ~ 10000GB
	// - 14C70GB:200GB ~ 10000GB
	// - 30C180GB:400GB ~ 10000GB
	// - 62C400G:800GB-10000GB.
	// - The default value of each package is its minimum value.
	DiskSize pulumi.IntPtrInput
	// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
	InstanceClass pulumi.StringPtrInput
	// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
	InstanceName pulumi.StringPtrInput
	// The number of nodes in the cluster.
	NodeNum pulumi.StringPtrInput
	// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringPtrInput
	// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
	Period pulumi.IntPtrInput
	// The period unit. Valid values: `Month`,`Year`.
	PeriodUnit pulumi.StringPtrInput
	// The ID of the enterprise resource group to which the instance resides.
	ResourceGroupId pulumi.StringPtrInput
	// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
	Series pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
	// Information about the zone where the cluster is deployed.
	Zones pulumi.StringArrayInput
}

func (BaseInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*baseInstanceState)(nil)).Elem()
}

type baseInstanceArgs struct {
	// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
	// - true: automatic renewal.
	// - false (default): no automatic renewal.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The backup retain mode.
	BackupRetainMode *string `pulumi:"backupRetainMode"`
	// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
	// - 8C32GB:100GB ~ 10000GB
	// - 14C70GB:200GB ~ 10000GB
	// - 30C180GB:400GB ~ 10000GB
	// - 62C400G:800GB-10000GB.
	// - The default value of each package is its minimum value.
	DiskSize int `pulumi:"diskSize"`
	// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
	InstanceClass string `pulumi:"instanceClass"`
	// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
	InstanceName *string `pulumi:"instanceName"`
	// The number of nodes in the cluster.
	NodeNum *string `pulumi:"nodeNum"`
	// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
	Period *int `pulumi:"period"`
	// The period unit. Valid values: `Month`,`Year`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The ID of the enterprise resource group to which the instance resides.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
	Series string `pulumi:"series"`
	// Information about the zone where the cluster is deployed.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a BaseInstance resource.
type BaseInstanceArgs struct {
	// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
	// - true: automatic renewal.
	// - false (default): no automatic renewal.
	AutoRenew pulumi.BoolPtrInput
	// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
	AutoRenewPeriod pulumi.IntPtrInput
	// The backup retain mode.
	BackupRetainMode pulumi.StringPtrInput
	// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
	// - 8C32GB:100GB ~ 10000GB
	// - 14C70GB:200GB ~ 10000GB
	// - 30C180GB:400GB ~ 10000GB
	// - 62C400G:800GB-10000GB.
	// - The default value of each package is its minimum value.
	DiskSize pulumi.IntInput
	// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
	InstanceClass pulumi.StringInput
	// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
	InstanceName pulumi.StringPtrInput
	// The number of nodes in the cluster.
	NodeNum pulumi.StringPtrInput
	// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringInput
	// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
	Period pulumi.IntPtrInput
	// The period unit. Valid values: `Month`,`Year`.
	PeriodUnit pulumi.StringPtrInput
	// The ID of the enterprise resource group to which the instance resides.
	ResourceGroupId pulumi.StringPtrInput
	// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
	Series pulumi.StringInput
	// Information about the zone where the cluster is deployed.
	Zones pulumi.StringArrayInput
}

func (BaseInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*baseInstanceArgs)(nil)).Elem()
}

type BaseInstanceInput interface {
	pulumi.Input

	ToBaseInstanceOutput() BaseInstanceOutput
	ToBaseInstanceOutputWithContext(ctx context.Context) BaseInstanceOutput
}

func (*BaseInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseInstance)(nil)).Elem()
}

func (i *BaseInstance) ToBaseInstanceOutput() BaseInstanceOutput {
	return i.ToBaseInstanceOutputWithContext(context.Background())
}

func (i *BaseInstance) ToBaseInstanceOutputWithContext(ctx context.Context) BaseInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseInstanceOutput)
}

// BaseInstanceArrayInput is an input type that accepts BaseInstanceArray and BaseInstanceArrayOutput values.
// You can construct a concrete instance of `BaseInstanceArrayInput` via:
//
//	BaseInstanceArray{ BaseInstanceArgs{...} }
type BaseInstanceArrayInput interface {
	pulumi.Input

	ToBaseInstanceArrayOutput() BaseInstanceArrayOutput
	ToBaseInstanceArrayOutputWithContext(context.Context) BaseInstanceArrayOutput
}

type BaseInstanceArray []BaseInstanceInput

func (BaseInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaseInstance)(nil)).Elem()
}

func (i BaseInstanceArray) ToBaseInstanceArrayOutput() BaseInstanceArrayOutput {
	return i.ToBaseInstanceArrayOutputWithContext(context.Background())
}

func (i BaseInstanceArray) ToBaseInstanceArrayOutputWithContext(ctx context.Context) BaseInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseInstanceArrayOutput)
}

// BaseInstanceMapInput is an input type that accepts BaseInstanceMap and BaseInstanceMapOutput values.
// You can construct a concrete instance of `BaseInstanceMapInput` via:
//
//	BaseInstanceMap{ "key": BaseInstanceArgs{...} }
type BaseInstanceMapInput interface {
	pulumi.Input

	ToBaseInstanceMapOutput() BaseInstanceMapOutput
	ToBaseInstanceMapOutputWithContext(context.Context) BaseInstanceMapOutput
}

type BaseInstanceMap map[string]BaseInstanceInput

func (BaseInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaseInstance)(nil)).Elem()
}

func (i BaseInstanceMap) ToBaseInstanceMapOutput() BaseInstanceMapOutput {
	return i.ToBaseInstanceMapOutputWithContext(context.Background())
}

func (i BaseInstanceMap) ToBaseInstanceMapOutputWithContext(ctx context.Context) BaseInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseInstanceMapOutput)
}

type BaseInstanceOutput struct{ *pulumi.OutputState }

func (BaseInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseInstance)(nil)).Elem()
}

func (o BaseInstanceOutput) ToBaseInstanceOutput() BaseInstanceOutput {
	return o
}

func (o BaseInstanceOutput) ToBaseInstanceOutputWithContext(ctx context.Context) BaseInstanceOutput {
	return o
}

// Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
// - true: automatic renewal.
// - false (default): no automatic renewal.
func (o BaseInstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.BoolOutput { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {"1", "2", "3"}.-PeriodUnit is Month, AutoRenewPeriod is {"1", "2", "3", "6", "12"}.
func (o BaseInstanceOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// The backup retain mode.
func (o BaseInstanceOutput) BackupRetainMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringPtrOutput { return v.BackupRetainMode }).(pulumi.StringPtrOutput)
}

// The product code of the OceanBase cluster.
// - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
// - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
// - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
func (o BaseInstanceOutput) CommodityCode() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.CommodityCode }).(pulumi.StringOutput)
}

// The number of CPU cores of the cluster.
func (o BaseInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// The creation time of the resource
func (o BaseInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
// - 8C32GB:100GB ~ 10000GB
// - 14C70GB:200GB ~ 10000GB
// - 30C180GB:400GB ~ 10000GB
// - 62C400G:800GB-10000GB.
// - The default value of each package is its minimum value.
func (o BaseInstanceOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.IntOutput { return v.DiskSize }).(pulumi.IntOutput)
}

// Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
func (o BaseInstanceOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.InstanceClass }).(pulumi.StringOutput)
}

// OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
func (o BaseInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The number of nodes in the cluster.
func (o BaseInstanceOutput) NodeNum() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.NodeNum }).(pulumi.StringOutput)
}

// The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
func (o BaseInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `paymentType` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `periodUnit` = Year, Period values: {"1", "2", "3"}. When `periodUnit` = Month, Period values: {"1", "2", "3", "4", "5", "6", "7", "8", "9"}.
func (o BaseInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The period unit. Valid values: `Month`,`Year`.
func (o BaseInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The ID of the enterprise resource group to which the instance resides.
func (o BaseInstanceOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normalSsd`.
func (o BaseInstanceOutput) Series() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.Series }).(pulumi.StringOutput)
}

// The status of the resource.
func (o BaseInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Information about the zone where the cluster is deployed.
func (o BaseInstanceOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaseInstance) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

type BaseInstanceArrayOutput struct{ *pulumi.OutputState }

func (BaseInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaseInstance)(nil)).Elem()
}

func (o BaseInstanceArrayOutput) ToBaseInstanceArrayOutput() BaseInstanceArrayOutput {
	return o
}

func (o BaseInstanceArrayOutput) ToBaseInstanceArrayOutputWithContext(ctx context.Context) BaseInstanceArrayOutput {
	return o
}

func (o BaseInstanceArrayOutput) Index(i pulumi.IntInput) BaseInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BaseInstance {
		return vs[0].([]*BaseInstance)[vs[1].(int)]
	}).(BaseInstanceOutput)
}

type BaseInstanceMapOutput struct{ *pulumi.OutputState }

func (BaseInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaseInstance)(nil)).Elem()
}

func (o BaseInstanceMapOutput) ToBaseInstanceMapOutput() BaseInstanceMapOutput {
	return o
}

func (o BaseInstanceMapOutput) ToBaseInstanceMapOutputWithContext(ctx context.Context) BaseInstanceMapOutput {
	return o
}

func (o BaseInstanceMapOutput) MapIndex(k pulumi.StringInput) BaseInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BaseInstance {
		return vs[0].(map[string]*BaseInstance)[vs[1].(string)]
	}).(BaseInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaseInstanceInput)(nil)).Elem(), &BaseInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseInstanceArrayInput)(nil)).Elem(), BaseInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaseInstanceMapInput)(nil)).Elem(), BaseInstanceMap{})
	pulumi.RegisterOutputType(BaseInstanceOutput{})
	pulumi.RegisterOutputType(BaseInstanceArrayOutput{})
	pulumi.RegisterOutputType(BaseInstanceMapOutput{})
}
