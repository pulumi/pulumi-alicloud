// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a SSL Certificates Certificate resource.
//
// For information about SSL Certificates Certificate and how to use it, see [What is Certificate](https://www.alibabacloud.com/help/product/28533.html).
//
// > **NOTE:** Available since v1.129.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cas"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cas.NewServiceCertificate(ctx, "default", &cas.ServiceCertificateArgs{
//				CertificateName: pulumi.Sprintf("terraform-example-%v", _default.Result),
//				Cert: pulumi.String(`-----BEGIN CERTIFICATE-----
//
// MIID1jCCAr6gAwIBAgIQQ7/8/QOOTbywxdgSX9aMqDANBgkqhkiG9w0BAQsFADBe
// MQswCQYDVQQGEwJDTjEOMAwGA1UEChMFTXlTU0wxKzApBgNVBAsTIk15U1NMIFRl
// c3QgUlNBIC0gRm9yIHRlc3QgdXNlIG9ubHkxEjAQBgNVBAMTCU15U1NMLmNvbTAe
// Fw0yNTA5MjIwNTU3NDVaFw0zMDA5MjEwNTU3NDVaMCAxCzAJBgNVBAYTAkNOMREw
// DwYDVQQDEwgxNjg4LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
// AMEl04gKBqJxV+8KideZb7S4mPysehPzr/cXu4i1RXT7UFtNVZuqc4IdIzOja2SU
// 6uNn8mY6Pfc5FNybg98bYx0ADbub55TUaw2Pz1CFEbiMvLpzMkp4EZadvmJWZk8t
// dNb+ClKqdXUWhxApS3Lz+wjCNYQnlODk4KmxmM8/U/CyQS7lgWS/1G72UFB09Skg
// sfvWdoHLrFfIlbVkp9XVELCtOkjj8Nn/rPOhc31NbstrwV4Whl6jngGAkaEtImJ7
// //sL+sPPsutefCgfZPrC+Zwru2En1BuIo5KW02NYLdjXbABH8xjkUobqRoro7eY3
// VySBr7adD6QmNv5hWohOuykCAwEAAaOBzTCByjAOBgNVHQ8BAf8EBAMCBaAwHQYD
// VR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB8GA1UdIwQYMBaAFCiBJgXRNBo/
// wXMPu5PPFRw/A79/MGMGCCsGAQUFBwEBBFcwVTAhBggrBgEFBQcwAYYVaHR0cDov
// L29jc3AubXlzc2wuY29tMDAGCCsGAQUFBzAChiRodHRwOi8vY2EubXlzc2wuY29t
// L215c3NsdGVzdHJzYS5jcnQwEwYDVR0RBAwwCoIIMTY4OC5jb20wDQYJKoZIhvcN
// AQELBQADggEBAHa0ATVeHtPPw1+a6kajlW6OQUjhiJg+Sk9fVA1eJ2Hzl1yDDw3K
// yAyl1gkxGI6BwWdX/C8IE6PuPYcG2CmJGoFoEAAIbAE76AKABvHoA8I6wyDruxFz
// 06bNM8104TxAHTxe2zaHgBQnYIRk07uA8gxjZKFp1//eYbxj8HiP0Q9zXqYjF79G
// Le4PDw7Q6U22CP+cT9Sz5ZEoJCzmUtx3uQWhLzNxvyISrXeSqAFJzjtL0KKSR1cr
// 8he6FoeU37oKdmrnweLeBe+no3OMChETa2JN4VAzXj/nPpQcyB7nXDfLUHe01+BB
// ZBXKFLD2H38e97mFl/7mgNP5Nc1sycI5Sp4=
// -----END CERTIFICATE-----
// `),
//
//	Key: pulumi.String(`-----BEGIN PRIVATE KEY-----
//
// MIIEowIBAAKCAQEAwSXTiAoGonFX7wqJ15lvtLiY/Kx6E/Ov9xe7iLVFdPtQW01V
// m6pzgh0jM6NrZJTq42fyZjo99zkU3JuD3xtjHQANu5vnlNRrDY/PUIURuIy8unMy
// SngRlp2+YlZmTy101v4KUqp1dRaHEClLcvP7CMI1hCeU4OTgqbGYzz9T8LJBLuWB
// ZL/UbvZQUHT1KSCx+9Z2gcusV8iVtWSn1dUQsK06SOPw2f+s86FzfU1uy2vBXhaG
// XqOeAYCRoS0iYnv/+wv6w8+y6158KB9k+sL5nCu7YSfUG4ijkpbTY1gt2NdsAEfz
// GORShupGiujt5jdXJIGvtp0PpCY2/mFaiE67KQIDAQABAoIBAAKF9CZTUd8zvDKE
// azo/Ur0Zf5omxgOBC/vzj0DLyXKr89KgMdhHmPG1YBKFIIU0XYCHXkclR05LAcbu
// BdeCJpXS5zBbwDdAB9P/XHXQqeNvfJRc++ZgJ4QAXzkuqBssXK87ALcwFeUShxot
// cphiWpW0inlwVkVn3WLUzfUV0+ARljn8VOf+aAmfCiQMl4gsBpvD3dxF84aihS+1
// blqar5dE1GCJWHW67R1uSaAqHf7nwbBkZY8nTWF8n4+ELAAtlOgQKZlrQ+JxB3Ar
// rWzgMj4M6F1/man1y/XPR56px9Xv3DwBZHuLufsqPr10q/nI9VIIQHe49sFgnN4+
// 48Q7wIECgYEAwxlrgBJI8gua4mJZxJRT8gBv2Mb1Kk1k7HVX11I+yF4eXr+cm+24
// Cq7MjqmBXSnqvdQkwGFZ+C3cTKXJBPONWGF8NgiXaHSKjPEoFuHLdKBpgZMAax/L
// aZBQRw6g12nz3XUCK0DE0wGgPkoDxc65s4NEWS+ua43LZ4TUOzWwwWECgYEA/XB1
// ARNHyARy+P3iTeebh3t7qJoNoptLWHMlKjSjIZ1VZ4+9ilKsi5ZKVkPaLIjo8MGv
// Ank3vzSrFSYhId0XfmSqoWySWc0eBkc6NERvopxuIV1WwRKf/18lLhxiEjHIcgds
// G2KmfeiXdCKSgGlWvJmLITY4gJpOYMjpEDxipskCgYAdxnljmGbNmfvPZRcyKzkM
// jAiF2wd7p0gp1lbLo9+1ELgt2ax7F7Ko3riVZUU7BLSwt/nL6o+iks02XW7qdIkz
// 3dzpGjKRXIfwrrVhmKBGclzny5mav8V5nO7DiXX+qkrvl3X3R/FCCtN77ivZOo2Y
// 2gXKXr6N55wNdnY1eyI4wQKBgQDXjZo2O+vFVuNimqyrjd1eMcxO7hfCwUooBGcL
// qpFEucg1uK+Awig24LCBBly9nARjIJh1Bhw/58/KwQ9U+fJNcdkeSnV/I1HyDQqY
// AczhBSM2BWkP9YNXc9jvivxudSECuwVblV/9nqGSCQWJag53gjAvIyqTVqpq7vYq
// 9PEC4QKBgGY2pj0ZNqGkq16jD3iS+DDBpX+TPnoHzu5GZCM/1GLZ6xXbpNWtZQt4
// /m+6koRWeGvNAULnp8RSnhBzm+ZglpbwYcvsqRNDqIPGhJ2JruVA/bY3S0ebkRlD
// xDn0dJVMvNyRR83ZpjTQhxoq5l56TN5xk1vdJ9nZdwJMmXiz2TrA
// -----END PRIVATE KEY-----
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SSL Certificates Certificate can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cas/serviceCertificate:ServiceCertificate example <id>
// ```
type ServiceCertificate struct {
	pulumi.CustomResourceState

	// The content of a non-SM certificate in PEM format.
	Cert pulumi.StringPtrOutput `pulumi:"cert"`
	// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
	CertificateName pulumi.StringOutput `pulumi:"certificateName"`
	// The content of an SM encryption certificate in PEM format.
	EncryptCert pulumi.StringPtrOutput `pulumi:"encryptCert"`
	// The private key of an SM encryption certificate in PEM format.
	EncryptPrivateKey pulumi.StringPtrOutput `pulumi:"encryptPrivateKey"`
	// The private key of a non-SM certificate in PEM format.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	//
	// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	Lang pulumi.StringPtrOutput `pulumi:"lang"`
	// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The content of an SM signing certificate in PEM format.
	SignCert pulumi.StringPtrOutput `pulumi:"signCert"`
	// The private key of an SM signing certificate in PEM format.
	SignPrivateKey pulumi.StringPtrOutput `pulumi:"signPrivateKey"`
	// The tag of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewServiceCertificate registers a new resource with the given unique name, arguments, and options.
func NewServiceCertificate(ctx *pulumi.Context,
	name string, args *ServiceCertificateArgs, opts ...pulumi.ResourceOption) (*ServiceCertificate, error) {
	if args == nil {
		args = &ServiceCertificateArgs{}
	}

	if args.EncryptPrivateKey != nil {
		args.EncryptPrivateKey = pulumi.ToSecret(args.EncryptPrivateKey).(pulumi.StringPtrInput)
	}
	if args.Key != nil {
		args.Key = pulumi.ToSecret(args.Key).(pulumi.StringPtrInput)
	}
	if args.SignPrivateKey != nil {
		args.SignPrivateKey = pulumi.ToSecret(args.SignPrivateKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptPrivateKey",
		"key",
		"signPrivateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceCertificate
	err := ctx.RegisterResource("alicloud:cas/serviceCertificate:ServiceCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCertificate gets an existing ServiceCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCertificateState, opts ...pulumi.ResourceOption) (*ServiceCertificate, error) {
	var resource ServiceCertificate
	err := ctx.ReadResource("alicloud:cas/serviceCertificate:ServiceCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCertificate resources.
type serviceCertificateState struct {
	// The content of a non-SM certificate in PEM format.
	Cert *string `pulumi:"cert"`
	// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
	CertificateName *string `pulumi:"certificateName"`
	// The content of an SM encryption certificate in PEM format.
	EncryptCert *string `pulumi:"encryptCert"`
	// The private key of an SM encryption certificate in PEM format.
	EncryptPrivateKey *string `pulumi:"encryptPrivateKey"`
	// The private key of a non-SM certificate in PEM format.
	Key *string `pulumi:"key"`
	// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	//
	// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	Lang *string `pulumi:"lang"`
	// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
	Name *string `pulumi:"name"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The content of an SM signing certificate in PEM format.
	SignCert *string `pulumi:"signCert"`
	// The private key of an SM signing certificate in PEM format.
	SignPrivateKey *string `pulumi:"signPrivateKey"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

type ServiceCertificateState struct {
	// The content of a non-SM certificate in PEM format.
	Cert pulumi.StringPtrInput
	// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
	CertificateName pulumi.StringPtrInput
	// The content of an SM encryption certificate in PEM format.
	EncryptCert pulumi.StringPtrInput
	// The private key of an SM encryption certificate in PEM format.
	EncryptPrivateKey pulumi.StringPtrInput
	// The private key of a non-SM certificate in PEM format.
	Key pulumi.StringPtrInput
	// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	//
	// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	Lang pulumi.StringPtrInput
	// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
	Name pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The content of an SM signing certificate in PEM format.
	SignCert pulumi.StringPtrInput
	// The private key of an SM signing certificate in PEM format.
	SignPrivateKey pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
}

func (ServiceCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCertificateState)(nil)).Elem()
}

type serviceCertificateArgs struct {
	// The content of a non-SM certificate in PEM format.
	Cert *string `pulumi:"cert"`
	// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
	CertificateName *string `pulumi:"certificateName"`
	// The content of an SM encryption certificate in PEM format.
	EncryptCert *string `pulumi:"encryptCert"`
	// The private key of an SM encryption certificate in PEM format.
	EncryptPrivateKey *string `pulumi:"encryptPrivateKey"`
	// The private key of a non-SM certificate in PEM format.
	Key *string `pulumi:"key"`
	// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	//
	// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	Lang *string `pulumi:"lang"`
	// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
	Name *string `pulumi:"name"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The content of an SM signing certificate in PEM format.
	SignCert *string `pulumi:"signCert"`
	// The private key of an SM signing certificate in PEM format.
	SignPrivateKey *string `pulumi:"signPrivateKey"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceCertificate resource.
type ServiceCertificateArgs struct {
	// The content of a non-SM certificate in PEM format.
	Cert pulumi.StringPtrInput
	// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
	CertificateName pulumi.StringPtrInput
	// The content of an SM encryption certificate in PEM format.
	EncryptCert pulumi.StringPtrInput
	// The private key of an SM encryption certificate in PEM format.
	EncryptPrivateKey pulumi.StringPtrInput
	// The private key of a non-SM certificate in PEM format.
	Key pulumi.StringPtrInput
	// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	//
	// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
	Lang pulumi.StringPtrInput
	// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
	Name pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The content of an SM signing certificate in PEM format.
	SignCert pulumi.StringPtrInput
	// The private key of an SM signing certificate in PEM format.
	SignPrivateKey pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
}

func (ServiceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCertificateArgs)(nil)).Elem()
}

type ServiceCertificateInput interface {
	pulumi.Input

	ToServiceCertificateOutput() ServiceCertificateOutput
	ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput
}

func (*ServiceCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCertificate)(nil)).Elem()
}

func (i *ServiceCertificate) ToServiceCertificateOutput() ServiceCertificateOutput {
	return i.ToServiceCertificateOutputWithContext(context.Background())
}

func (i *ServiceCertificate) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateOutput)
}

// ServiceCertificateArrayInput is an input type that accepts ServiceCertificateArray and ServiceCertificateArrayOutput values.
// You can construct a concrete instance of `ServiceCertificateArrayInput` via:
//
//	ServiceCertificateArray{ ServiceCertificateArgs{...} }
type ServiceCertificateArrayInput interface {
	pulumi.Input

	ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput
	ToServiceCertificateArrayOutputWithContext(context.Context) ServiceCertificateArrayOutput
}

type ServiceCertificateArray []ServiceCertificateInput

func (ServiceCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return i.ToServiceCertificateArrayOutputWithContext(context.Background())
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateArrayOutput)
}

// ServiceCertificateMapInput is an input type that accepts ServiceCertificateMap and ServiceCertificateMapOutput values.
// You can construct a concrete instance of `ServiceCertificateMapInput` via:
//
//	ServiceCertificateMap{ "key": ServiceCertificateArgs{...} }
type ServiceCertificateMapInput interface {
	pulumi.Input

	ToServiceCertificateMapOutput() ServiceCertificateMapOutput
	ToServiceCertificateMapOutputWithContext(context.Context) ServiceCertificateMapOutput
}

type ServiceCertificateMap map[string]ServiceCertificateInput

func (ServiceCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateMap) ToServiceCertificateMapOutput() ServiceCertificateMapOutput {
	return i.ToServiceCertificateMapOutputWithContext(context.Background())
}

func (i ServiceCertificateMap) ToServiceCertificateMapOutputWithContext(ctx context.Context) ServiceCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateMapOutput)
}

type ServiceCertificateOutput struct{ *pulumi.OutputState }

func (ServiceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateOutput) ToServiceCertificateOutput() ServiceCertificateOutput {
	return o
}

func (o ServiceCertificateOutput) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return o
}

// The content of a non-SM certificate in PEM format.
func (o ServiceCertificateOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.Cert }).(pulumi.StringPtrOutput)
}

// A custom name for the certificate. The name can be up to 64 characters long and can contain any character type, such as letters, numbers, and underscores. **NOTE:** From version 1.260.1, `certificateName` can be modified.
func (o ServiceCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringOutput { return v.CertificateName }).(pulumi.StringOutput)
}

// The content of an SM encryption certificate in PEM format.
func (o ServiceCertificateOutput) EncryptCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.EncryptCert }).(pulumi.StringPtrOutput)
}

// The private key of an SM encryption certificate in PEM format.
func (o ServiceCertificateOutput) EncryptPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.EncryptPrivateKey }).(pulumi.StringPtrOutput)
}

// The private key of a non-SM certificate in PEM format.
func (o ServiceCertificateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// Field `lang` has been deprecated from provider version 1.260.1 and it will be removed in the future version.
//
// Deprecated: Field 'lang' has been deprecated from provider version 1.260.1 and it will be removed in the future version.
func (o ServiceCertificateOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.Lang }).(pulumi.StringPtrOutput)
}

// Field `name` has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute `certificateName` instead.
//
// Deprecated: Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead.
func (o ServiceCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o ServiceCertificateOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The content of an SM signing certificate in PEM format.
func (o ServiceCertificateOutput) SignCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.SignCert }).(pulumi.StringPtrOutput)
}

// The private key of an SM signing certificate in PEM format.
func (o ServiceCertificateOutput) SignPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringPtrOutput { return v.SignPrivateKey }).(pulumi.StringPtrOutput)
}

// The tag of the resource.
func (o ServiceCertificateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceCertificate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceCertificateArrayOutput struct{ *pulumi.OutputState }

func (ServiceCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) Index(i pulumi.IntInput) ServiceCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceCertificate {
		return vs[0].([]*ServiceCertificate)[vs[1].(int)]
	}).(ServiceCertificateOutput)
}

type ServiceCertificateMapOutput struct{ *pulumi.OutputState }

func (ServiceCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateMapOutput) ToServiceCertificateMapOutput() ServiceCertificateMapOutput {
	return o
}

func (o ServiceCertificateMapOutput) ToServiceCertificateMapOutputWithContext(ctx context.Context) ServiceCertificateMapOutput {
	return o
}

func (o ServiceCertificateMapOutput) MapIndex(k pulumi.StringInput) ServiceCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceCertificate {
		return vs[0].(map[string]*ServiceCertificate)[vs[1].(string)]
	}).(ServiceCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCertificateInput)(nil)).Elem(), &ServiceCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCertificateArrayInput)(nil)).Elem(), ServiceCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCertificateMapInput)(nil)).Elem(), ServiceCertificateMap{})
	pulumi.RegisterOutputType(ServiceCertificateOutput{})
	pulumi.RegisterOutputType(ServiceCertificateArrayOutput{})
	pulumi.RegisterOutputType(ServiceCertificateMapOutput{})
}
