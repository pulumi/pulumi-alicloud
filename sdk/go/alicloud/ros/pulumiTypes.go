// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ChangeSetParameter struct {
	// The parameter key.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// ChangeSetParameterInput is an input type that accepts ChangeSetParameterArgs and ChangeSetParameterOutput values.
// You can construct a concrete instance of `ChangeSetParameterInput` via:
//
//          ChangeSetParameterArgs{...}
type ChangeSetParameterInput interface {
	pulumi.Input

	ToChangeSetParameterOutput() ChangeSetParameterOutput
	ToChangeSetParameterOutputWithContext(context.Context) ChangeSetParameterOutput
}

type ChangeSetParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (ChangeSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeSetParameter)(nil)).Elem()
}

func (i ChangeSetParameterArgs) ToChangeSetParameterOutput() ChangeSetParameterOutput {
	return i.ToChangeSetParameterOutputWithContext(context.Background())
}

func (i ChangeSetParameterArgs) ToChangeSetParameterOutputWithContext(ctx context.Context) ChangeSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeSetParameterOutput)
}

// ChangeSetParameterArrayInput is an input type that accepts ChangeSetParameterArray and ChangeSetParameterArrayOutput values.
// You can construct a concrete instance of `ChangeSetParameterArrayInput` via:
//
//          ChangeSetParameterArray{ ChangeSetParameterArgs{...} }
type ChangeSetParameterArrayInput interface {
	pulumi.Input

	ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput
	ToChangeSetParameterArrayOutputWithContext(context.Context) ChangeSetParameterArrayOutput
}

type ChangeSetParameterArray []ChangeSetParameterInput

func (ChangeSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChangeSetParameter)(nil)).Elem()
}

func (i ChangeSetParameterArray) ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput {
	return i.ToChangeSetParameterArrayOutputWithContext(context.Background())
}

func (i ChangeSetParameterArray) ToChangeSetParameterArrayOutputWithContext(ctx context.Context) ChangeSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeSetParameterArrayOutput)
}

type ChangeSetParameterOutput struct{ *pulumi.OutputState }

func (ChangeSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeSetParameter)(nil)).Elem()
}

func (o ChangeSetParameterOutput) ToChangeSetParameterOutput() ChangeSetParameterOutput {
	return o
}

func (o ChangeSetParameterOutput) ToChangeSetParameterOutputWithContext(ctx context.Context) ChangeSetParameterOutput {
	return o
}

// The parameter key.
func (o ChangeSetParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ChangeSetParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameter value.
func (o ChangeSetParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v ChangeSetParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type ChangeSetParameterArrayOutput struct{ *pulumi.OutputState }

func (ChangeSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChangeSetParameter)(nil)).Elem()
}

func (o ChangeSetParameterArrayOutput) ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput {
	return o
}

func (o ChangeSetParameterArrayOutput) ToChangeSetParameterArrayOutputWithContext(ctx context.Context) ChangeSetParameterArrayOutput {
	return o
}

func (o ChangeSetParameterArrayOutput) Index(i pulumi.IntInput) ChangeSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChangeSetParameter {
		return vs[0].([]ChangeSetParameter)[vs[1].(int)]
	}).(ChangeSetParameterOutput)
}

type StackGroupParameter struct {
	// The parameter key.
	ParameterKey *string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue *string `pulumi:"parameterValue"`
}

// StackGroupParameterInput is an input type that accepts StackGroupParameterArgs and StackGroupParameterOutput values.
// You can construct a concrete instance of `StackGroupParameterInput` via:
//
//          StackGroupParameterArgs{...}
type StackGroupParameterInput interface {
	pulumi.Input

	ToStackGroupParameterOutput() StackGroupParameterOutput
	ToStackGroupParameterOutputWithContext(context.Context) StackGroupParameterOutput
}

type StackGroupParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringPtrInput `pulumi:"parameterValue"`
}

func (StackGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackGroupParameter)(nil)).Elem()
}

func (i StackGroupParameterArgs) ToStackGroupParameterOutput() StackGroupParameterOutput {
	return i.ToStackGroupParameterOutputWithContext(context.Background())
}

func (i StackGroupParameterArgs) ToStackGroupParameterOutputWithContext(ctx context.Context) StackGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupParameterOutput)
}

// StackGroupParameterArrayInput is an input type that accepts StackGroupParameterArray and StackGroupParameterArrayOutput values.
// You can construct a concrete instance of `StackGroupParameterArrayInput` via:
//
//          StackGroupParameterArray{ StackGroupParameterArgs{...} }
type StackGroupParameterArrayInput interface {
	pulumi.Input

	ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput
	ToStackGroupParameterArrayOutputWithContext(context.Context) StackGroupParameterArrayOutput
}

type StackGroupParameterArray []StackGroupParameterInput

func (StackGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackGroupParameter)(nil)).Elem()
}

func (i StackGroupParameterArray) ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput {
	return i.ToStackGroupParameterArrayOutputWithContext(context.Background())
}

func (i StackGroupParameterArray) ToStackGroupParameterArrayOutputWithContext(ctx context.Context) StackGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupParameterArrayOutput)
}

type StackGroupParameterOutput struct{ *pulumi.OutputState }

func (StackGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackGroupParameter)(nil)).Elem()
}

func (o StackGroupParameterOutput) ToStackGroupParameterOutput() StackGroupParameterOutput {
	return o
}

func (o StackGroupParameterOutput) ToStackGroupParameterOutputWithContext(ctx context.Context) StackGroupParameterOutput {
	return o
}

// The parameter key.
func (o StackGroupParameterOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackGroupParameter) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The parameter value.
func (o StackGroupParameterOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackGroupParameter) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type StackGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (StackGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackGroupParameter)(nil)).Elem()
}

func (o StackGroupParameterArrayOutput) ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput {
	return o
}

func (o StackGroupParameterArrayOutput) ToStackGroupParameterArrayOutputWithContext(ctx context.Context) StackGroupParameterArrayOutput {
	return o
}

func (o StackGroupParameterArrayOutput) Index(i pulumi.IntInput) StackGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackGroupParameter {
		return vs[0].([]StackGroupParameter)[vs[1].(int)]
	}).(StackGroupParameterOutput)
}

type StackInstanceParameterOverride struct {
	// The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
	ParameterKey *string `pulumi:"parameterKey"`
	// The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
	ParameterValue *string `pulumi:"parameterValue"`
}

// StackInstanceParameterOverrideInput is an input type that accepts StackInstanceParameterOverrideArgs and StackInstanceParameterOverrideOutput values.
// You can construct a concrete instance of `StackInstanceParameterOverrideInput` via:
//
//          StackInstanceParameterOverrideArgs{...}
type StackInstanceParameterOverrideInput interface {
	pulumi.Input

	ToStackInstanceParameterOverrideOutput() StackInstanceParameterOverrideOutput
	ToStackInstanceParameterOverrideOutputWithContext(context.Context) StackInstanceParameterOverrideOutput
}

type StackInstanceParameterOverrideArgs struct {
	// The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
	ParameterValue pulumi.StringPtrInput `pulumi:"parameterValue"`
}

func (StackInstanceParameterOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstanceParameterOverride)(nil)).Elem()
}

func (i StackInstanceParameterOverrideArgs) ToStackInstanceParameterOverrideOutput() StackInstanceParameterOverrideOutput {
	return i.ToStackInstanceParameterOverrideOutputWithContext(context.Background())
}

func (i StackInstanceParameterOverrideArgs) ToStackInstanceParameterOverrideOutputWithContext(ctx context.Context) StackInstanceParameterOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstanceParameterOverrideOutput)
}

// StackInstanceParameterOverrideArrayInput is an input type that accepts StackInstanceParameterOverrideArray and StackInstanceParameterOverrideArrayOutput values.
// You can construct a concrete instance of `StackInstanceParameterOverrideArrayInput` via:
//
//          StackInstanceParameterOverrideArray{ StackInstanceParameterOverrideArgs{...} }
type StackInstanceParameterOverrideArrayInput interface {
	pulumi.Input

	ToStackInstanceParameterOverrideArrayOutput() StackInstanceParameterOverrideArrayOutput
	ToStackInstanceParameterOverrideArrayOutputWithContext(context.Context) StackInstanceParameterOverrideArrayOutput
}

type StackInstanceParameterOverrideArray []StackInstanceParameterOverrideInput

func (StackInstanceParameterOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstanceParameterOverride)(nil)).Elem()
}

func (i StackInstanceParameterOverrideArray) ToStackInstanceParameterOverrideArrayOutput() StackInstanceParameterOverrideArrayOutput {
	return i.ToStackInstanceParameterOverrideArrayOutputWithContext(context.Background())
}

func (i StackInstanceParameterOverrideArray) ToStackInstanceParameterOverrideArrayOutputWithContext(ctx context.Context) StackInstanceParameterOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackInstanceParameterOverrideArrayOutput)
}

type StackInstanceParameterOverrideOutput struct{ *pulumi.OutputState }

func (StackInstanceParameterOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackInstanceParameterOverride)(nil)).Elem()
}

func (o StackInstanceParameterOverrideOutput) ToStackInstanceParameterOverrideOutput() StackInstanceParameterOverrideOutput {
	return o
}

func (o StackInstanceParameterOverrideOutput) ToStackInstanceParameterOverrideOutputWithContext(ctx context.Context) StackInstanceParameterOverrideOutput {
	return o
}

// The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
func (o StackInstanceParameterOverrideOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackInstanceParameterOverride) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
func (o StackInstanceParameterOverrideOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackInstanceParameterOverride) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type StackInstanceParameterOverrideArrayOutput struct{ *pulumi.OutputState }

func (StackInstanceParameterOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackInstanceParameterOverride)(nil)).Elem()
}

func (o StackInstanceParameterOverrideArrayOutput) ToStackInstanceParameterOverrideArrayOutput() StackInstanceParameterOverrideArrayOutput {
	return o
}

func (o StackInstanceParameterOverrideArrayOutput) ToStackInstanceParameterOverrideArrayOutputWithContext(ctx context.Context) StackInstanceParameterOverrideArrayOutput {
	return o
}

func (o StackInstanceParameterOverrideArrayOutput) Index(i pulumi.IntInput) StackInstanceParameterOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackInstanceParameterOverride {
		return vs[0].([]StackInstanceParameterOverride)[vs[1].(int)]
	}).(StackInstanceParameterOverrideOutput)
}

type StackParameter struct {
	// The parameter key.
	ParameterKey *string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// StackParameterInput is an input type that accepts StackParameterArgs and StackParameterOutput values.
// You can construct a concrete instance of `StackParameterInput` via:
//
//          StackParameterArgs{...}
type StackParameterInput interface {
	pulumi.Input

	ToStackParameterOutput() StackParameterOutput
	ToStackParameterOutputWithContext(context.Context) StackParameterOutput
}

type StackParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (StackParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackParameter)(nil)).Elem()
}

func (i StackParameterArgs) ToStackParameterOutput() StackParameterOutput {
	return i.ToStackParameterOutputWithContext(context.Background())
}

func (i StackParameterArgs) ToStackParameterOutputWithContext(ctx context.Context) StackParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackParameterOutput)
}

// StackParameterArrayInput is an input type that accepts StackParameterArray and StackParameterArrayOutput values.
// You can construct a concrete instance of `StackParameterArrayInput` via:
//
//          StackParameterArray{ StackParameterArgs{...} }
type StackParameterArrayInput interface {
	pulumi.Input

	ToStackParameterArrayOutput() StackParameterArrayOutput
	ToStackParameterArrayOutputWithContext(context.Context) StackParameterArrayOutput
}

type StackParameterArray []StackParameterInput

func (StackParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackParameter)(nil)).Elem()
}

func (i StackParameterArray) ToStackParameterArrayOutput() StackParameterArrayOutput {
	return i.ToStackParameterArrayOutputWithContext(context.Background())
}

func (i StackParameterArray) ToStackParameterArrayOutputWithContext(ctx context.Context) StackParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackParameterArrayOutput)
}

type StackParameterOutput struct{ *pulumi.OutputState }

func (StackParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackParameter)(nil)).Elem()
}

func (o StackParameterOutput) ToStackParameterOutput() StackParameterOutput {
	return o
}

func (o StackParameterOutput) ToStackParameterOutputWithContext(ctx context.Context) StackParameterOutput {
	return o
}

// The parameter key.
func (o StackParameterOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackParameter) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The parameter value.
func (o StackParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v StackParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type StackParameterArrayOutput struct{ *pulumi.OutputState }

func (StackParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackParameter)(nil)).Elem()
}

func (o StackParameterArrayOutput) ToStackParameterArrayOutput() StackParameterArrayOutput {
	return o
}

func (o StackParameterArrayOutput) ToStackParameterArrayOutputWithContext(ctx context.Context) StackParameterArrayOutput {
	return o
}

func (o StackParameterArrayOutput) Index(i pulumi.IntInput) StackParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackParameter {
		return vs[0].([]StackParameter)[vs[1].(int)]
	}).(StackParameterOutput)
}

type TemplateScratchPreferenceParameter struct {
	// Priority parameter key. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
	ParameterKey string `pulumi:"parameterKey"`
	// Priority parameter value. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
	ParameterValue string `pulumi:"parameterValue"`
}

// TemplateScratchPreferenceParameterInput is an input type that accepts TemplateScratchPreferenceParameterArgs and TemplateScratchPreferenceParameterOutput values.
// You can construct a concrete instance of `TemplateScratchPreferenceParameterInput` via:
//
//          TemplateScratchPreferenceParameterArgs{...}
type TemplateScratchPreferenceParameterInput interface {
	pulumi.Input

	ToTemplateScratchPreferenceParameterOutput() TemplateScratchPreferenceParameterOutput
	ToTemplateScratchPreferenceParameterOutputWithContext(context.Context) TemplateScratchPreferenceParameterOutput
}

type TemplateScratchPreferenceParameterArgs struct {
	// Priority parameter key. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// Priority parameter value. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (TemplateScratchPreferenceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchPreferenceParameter)(nil)).Elem()
}

func (i TemplateScratchPreferenceParameterArgs) ToTemplateScratchPreferenceParameterOutput() TemplateScratchPreferenceParameterOutput {
	return i.ToTemplateScratchPreferenceParameterOutputWithContext(context.Background())
}

func (i TemplateScratchPreferenceParameterArgs) ToTemplateScratchPreferenceParameterOutputWithContext(ctx context.Context) TemplateScratchPreferenceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchPreferenceParameterOutput)
}

// TemplateScratchPreferenceParameterArrayInput is an input type that accepts TemplateScratchPreferenceParameterArray and TemplateScratchPreferenceParameterArrayOutput values.
// You can construct a concrete instance of `TemplateScratchPreferenceParameterArrayInput` via:
//
//          TemplateScratchPreferenceParameterArray{ TemplateScratchPreferenceParameterArgs{...} }
type TemplateScratchPreferenceParameterArrayInput interface {
	pulumi.Input

	ToTemplateScratchPreferenceParameterArrayOutput() TemplateScratchPreferenceParameterArrayOutput
	ToTemplateScratchPreferenceParameterArrayOutputWithContext(context.Context) TemplateScratchPreferenceParameterArrayOutput
}

type TemplateScratchPreferenceParameterArray []TemplateScratchPreferenceParameterInput

func (TemplateScratchPreferenceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateScratchPreferenceParameter)(nil)).Elem()
}

func (i TemplateScratchPreferenceParameterArray) ToTemplateScratchPreferenceParameterArrayOutput() TemplateScratchPreferenceParameterArrayOutput {
	return i.ToTemplateScratchPreferenceParameterArrayOutputWithContext(context.Background())
}

func (i TemplateScratchPreferenceParameterArray) ToTemplateScratchPreferenceParameterArrayOutputWithContext(ctx context.Context) TemplateScratchPreferenceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchPreferenceParameterArrayOutput)
}

type TemplateScratchPreferenceParameterOutput struct{ *pulumi.OutputState }

func (TemplateScratchPreferenceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchPreferenceParameter)(nil)).Elem()
}

func (o TemplateScratchPreferenceParameterOutput) ToTemplateScratchPreferenceParameterOutput() TemplateScratchPreferenceParameterOutput {
	return o
}

func (o TemplateScratchPreferenceParameterOutput) ToTemplateScratchPreferenceParameterOutputWithContext(ctx context.Context) TemplateScratchPreferenceParameterOutput {
	return o
}

// Priority parameter key. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
func (o TemplateScratchPreferenceParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScratchPreferenceParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// Priority parameter value. For more information about values, see [supplementary instructions for request parameters](https://www.alibabacloud.com/help/zh/doc-detail/358846.html#h2-url-4).
func (o TemplateScratchPreferenceParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScratchPreferenceParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type TemplateScratchPreferenceParameterArrayOutput struct{ *pulumi.OutputState }

func (TemplateScratchPreferenceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateScratchPreferenceParameter)(nil)).Elem()
}

func (o TemplateScratchPreferenceParameterArrayOutput) ToTemplateScratchPreferenceParameterArrayOutput() TemplateScratchPreferenceParameterArrayOutput {
	return o
}

func (o TemplateScratchPreferenceParameterArrayOutput) ToTemplateScratchPreferenceParameterArrayOutputWithContext(ctx context.Context) TemplateScratchPreferenceParameterArrayOutput {
	return o
}

func (o TemplateScratchPreferenceParameterArrayOutput) Index(i pulumi.IntInput) TemplateScratchPreferenceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateScratchPreferenceParameter {
		return vs[0].([]TemplateScratchPreferenceParameter)[vs[1].(int)]
	}).(TemplateScratchPreferenceParameterOutput)
}

type TemplateScratchSourceResource struct {
	// The ID of the Source Resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of the Source resource.
	ResourceType string `pulumi:"resourceType"`
}

// TemplateScratchSourceResourceInput is an input type that accepts TemplateScratchSourceResourceArgs and TemplateScratchSourceResourceOutput values.
// You can construct a concrete instance of `TemplateScratchSourceResourceInput` via:
//
//          TemplateScratchSourceResourceArgs{...}
type TemplateScratchSourceResourceInput interface {
	pulumi.Input

	ToTemplateScratchSourceResourceOutput() TemplateScratchSourceResourceOutput
	ToTemplateScratchSourceResourceOutputWithContext(context.Context) TemplateScratchSourceResourceOutput
}

type TemplateScratchSourceResourceArgs struct {
	// The ID of the Source Resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of the Source resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (TemplateScratchSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceResource)(nil)).Elem()
}

func (i TemplateScratchSourceResourceArgs) ToTemplateScratchSourceResourceOutput() TemplateScratchSourceResourceOutput {
	return i.ToTemplateScratchSourceResourceOutputWithContext(context.Background())
}

func (i TemplateScratchSourceResourceArgs) ToTemplateScratchSourceResourceOutputWithContext(ctx context.Context) TemplateScratchSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceResourceOutput)
}

// TemplateScratchSourceResourceArrayInput is an input type that accepts TemplateScratchSourceResourceArray and TemplateScratchSourceResourceArrayOutput values.
// You can construct a concrete instance of `TemplateScratchSourceResourceArrayInput` via:
//
//          TemplateScratchSourceResourceArray{ TemplateScratchSourceResourceArgs{...} }
type TemplateScratchSourceResourceArrayInput interface {
	pulumi.Input

	ToTemplateScratchSourceResourceArrayOutput() TemplateScratchSourceResourceArrayOutput
	ToTemplateScratchSourceResourceArrayOutputWithContext(context.Context) TemplateScratchSourceResourceArrayOutput
}

type TemplateScratchSourceResourceArray []TemplateScratchSourceResourceInput

func (TemplateScratchSourceResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateScratchSourceResource)(nil)).Elem()
}

func (i TemplateScratchSourceResourceArray) ToTemplateScratchSourceResourceArrayOutput() TemplateScratchSourceResourceArrayOutput {
	return i.ToTemplateScratchSourceResourceArrayOutputWithContext(context.Background())
}

func (i TemplateScratchSourceResourceArray) ToTemplateScratchSourceResourceArrayOutputWithContext(ctx context.Context) TemplateScratchSourceResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceResourceArrayOutput)
}

type TemplateScratchSourceResourceOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceResource)(nil)).Elem()
}

func (o TemplateScratchSourceResourceOutput) ToTemplateScratchSourceResourceOutput() TemplateScratchSourceResourceOutput {
	return o
}

func (o TemplateScratchSourceResourceOutput) ToTemplateScratchSourceResourceOutputWithContext(ctx context.Context) TemplateScratchSourceResourceOutput {
	return o
}

// The ID of the Source Resource.
func (o TemplateScratchSourceResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScratchSourceResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of the Source resource.
func (o TemplateScratchSourceResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScratchSourceResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type TemplateScratchSourceResourceArrayOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateScratchSourceResource)(nil)).Elem()
}

func (o TemplateScratchSourceResourceArrayOutput) ToTemplateScratchSourceResourceArrayOutput() TemplateScratchSourceResourceArrayOutput {
	return o
}

func (o TemplateScratchSourceResourceArrayOutput) ToTemplateScratchSourceResourceArrayOutputWithContext(ctx context.Context) TemplateScratchSourceResourceArrayOutput {
	return o
}

func (o TemplateScratchSourceResourceArrayOutput) Index(i pulumi.IntInput) TemplateScratchSourceResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateScratchSourceResource {
		return vs[0].([]TemplateScratchSourceResource)[vs[1].(int)]
	}).(TemplateScratchSourceResourceOutput)
}

type TemplateScratchSourceResourceGroup struct {
	// The ID of the Source Resource Group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
	ResourceTypeFilters []string `pulumi:"resourceTypeFilters"`
}

// TemplateScratchSourceResourceGroupInput is an input type that accepts TemplateScratchSourceResourceGroupArgs and TemplateScratchSourceResourceGroupOutput values.
// You can construct a concrete instance of `TemplateScratchSourceResourceGroupInput` via:
//
//          TemplateScratchSourceResourceGroupArgs{...}
type TemplateScratchSourceResourceGroupInput interface {
	pulumi.Input

	ToTemplateScratchSourceResourceGroupOutput() TemplateScratchSourceResourceGroupOutput
	ToTemplateScratchSourceResourceGroupOutputWithContext(context.Context) TemplateScratchSourceResourceGroupOutput
}

type TemplateScratchSourceResourceGroupArgs struct {
	// The ID of the Source Resource Group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
	ResourceTypeFilters pulumi.StringArrayInput `pulumi:"resourceTypeFilters"`
}

func (TemplateScratchSourceResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceResourceGroup)(nil)).Elem()
}

func (i TemplateScratchSourceResourceGroupArgs) ToTemplateScratchSourceResourceGroupOutput() TemplateScratchSourceResourceGroupOutput {
	return i.ToTemplateScratchSourceResourceGroupOutputWithContext(context.Background())
}

func (i TemplateScratchSourceResourceGroupArgs) ToTemplateScratchSourceResourceGroupOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceResourceGroupOutput)
}

func (i TemplateScratchSourceResourceGroupArgs) ToTemplateScratchSourceResourceGroupPtrOutput() TemplateScratchSourceResourceGroupPtrOutput {
	return i.ToTemplateScratchSourceResourceGroupPtrOutputWithContext(context.Background())
}

func (i TemplateScratchSourceResourceGroupArgs) ToTemplateScratchSourceResourceGroupPtrOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceResourceGroupOutput).ToTemplateScratchSourceResourceGroupPtrOutputWithContext(ctx)
}

// TemplateScratchSourceResourceGroupPtrInput is an input type that accepts TemplateScratchSourceResourceGroupArgs, TemplateScratchSourceResourceGroupPtr and TemplateScratchSourceResourceGroupPtrOutput values.
// You can construct a concrete instance of `TemplateScratchSourceResourceGroupPtrInput` via:
//
//          TemplateScratchSourceResourceGroupArgs{...}
//
//  or:
//
//          nil
type TemplateScratchSourceResourceGroupPtrInput interface {
	pulumi.Input

	ToTemplateScratchSourceResourceGroupPtrOutput() TemplateScratchSourceResourceGroupPtrOutput
	ToTemplateScratchSourceResourceGroupPtrOutputWithContext(context.Context) TemplateScratchSourceResourceGroupPtrOutput
}

type templateScratchSourceResourceGroupPtrType TemplateScratchSourceResourceGroupArgs

func TemplateScratchSourceResourceGroupPtr(v *TemplateScratchSourceResourceGroupArgs) TemplateScratchSourceResourceGroupPtrInput {
	return (*templateScratchSourceResourceGroupPtrType)(v)
}

func (*templateScratchSourceResourceGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScratchSourceResourceGroup)(nil)).Elem()
}

func (i *templateScratchSourceResourceGroupPtrType) ToTemplateScratchSourceResourceGroupPtrOutput() TemplateScratchSourceResourceGroupPtrOutput {
	return i.ToTemplateScratchSourceResourceGroupPtrOutputWithContext(context.Background())
}

func (i *templateScratchSourceResourceGroupPtrType) ToTemplateScratchSourceResourceGroupPtrOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceResourceGroupPtrOutput)
}

type TemplateScratchSourceResourceGroupOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceResourceGroup)(nil)).Elem()
}

func (o TemplateScratchSourceResourceGroupOutput) ToTemplateScratchSourceResourceGroupOutput() TemplateScratchSourceResourceGroupOutput {
	return o
}

func (o TemplateScratchSourceResourceGroupOutput) ToTemplateScratchSourceResourceGroupOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupOutput {
	return o
}

func (o TemplateScratchSourceResourceGroupOutput) ToTemplateScratchSourceResourceGroupPtrOutput() TemplateScratchSourceResourceGroupPtrOutput {
	return o.ToTemplateScratchSourceResourceGroupPtrOutputWithContext(context.Background())
}

func (o TemplateScratchSourceResourceGroupOutput) ToTemplateScratchSourceResourceGroupPtrOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScratchSourceResourceGroup) *TemplateScratchSourceResourceGroup {
		return &v
	}).(TemplateScratchSourceResourceGroupPtrOutput)
}

// The ID of the Source Resource Group.
func (o TemplateScratchSourceResourceGroupOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScratchSourceResourceGroup) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
func (o TemplateScratchSourceResourceGroupOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateScratchSourceResourceGroup) []string { return v.ResourceTypeFilters }).(pulumi.StringArrayOutput)
}

type TemplateScratchSourceResourceGroupPtrOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceResourceGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScratchSourceResourceGroup)(nil)).Elem()
}

func (o TemplateScratchSourceResourceGroupPtrOutput) ToTemplateScratchSourceResourceGroupPtrOutput() TemplateScratchSourceResourceGroupPtrOutput {
	return o
}

func (o TemplateScratchSourceResourceGroupPtrOutput) ToTemplateScratchSourceResourceGroupPtrOutputWithContext(ctx context.Context) TemplateScratchSourceResourceGroupPtrOutput {
	return o
}

func (o TemplateScratchSourceResourceGroupPtrOutput) Elem() TemplateScratchSourceResourceGroupOutput {
	return o.ApplyT(func(v *TemplateScratchSourceResourceGroup) TemplateScratchSourceResourceGroup {
		if v != nil {
			return *v
		}
		var ret TemplateScratchSourceResourceGroup
		return ret
	}).(TemplateScratchSourceResourceGroupOutput)
}

// The ID of the Source Resource Group.
func (o TemplateScratchSourceResourceGroupPtrOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateScratchSourceResourceGroup) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
func (o TemplateScratchSourceResourceGroupPtrOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateScratchSourceResourceGroup) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypeFilters
	}).(pulumi.StringArrayOutput)
}

type TemplateScratchSourceTag struct {
	// Source label. **NOTE:** A maximum of 10 source labels can be configured.
	ResourceTags map[string]interface{} `pulumi:"resourceTags"`
	// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
	ResourceTypeFilters []string `pulumi:"resourceTypeFilters"`
}

// TemplateScratchSourceTagInput is an input type that accepts TemplateScratchSourceTagArgs and TemplateScratchSourceTagOutput values.
// You can construct a concrete instance of `TemplateScratchSourceTagInput` via:
//
//          TemplateScratchSourceTagArgs{...}
type TemplateScratchSourceTagInput interface {
	pulumi.Input

	ToTemplateScratchSourceTagOutput() TemplateScratchSourceTagOutput
	ToTemplateScratchSourceTagOutputWithContext(context.Context) TemplateScratchSourceTagOutput
}

type TemplateScratchSourceTagArgs struct {
	// Source label. **NOTE:** A maximum of 10 source labels can be configured.
	ResourceTags pulumi.MapInput `pulumi:"resourceTags"`
	// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
	ResourceTypeFilters pulumi.StringArrayInput `pulumi:"resourceTypeFilters"`
}

func (TemplateScratchSourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceTag)(nil)).Elem()
}

func (i TemplateScratchSourceTagArgs) ToTemplateScratchSourceTagOutput() TemplateScratchSourceTagOutput {
	return i.ToTemplateScratchSourceTagOutputWithContext(context.Background())
}

func (i TemplateScratchSourceTagArgs) ToTemplateScratchSourceTagOutputWithContext(ctx context.Context) TemplateScratchSourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceTagOutput)
}

func (i TemplateScratchSourceTagArgs) ToTemplateScratchSourceTagPtrOutput() TemplateScratchSourceTagPtrOutput {
	return i.ToTemplateScratchSourceTagPtrOutputWithContext(context.Background())
}

func (i TemplateScratchSourceTagArgs) ToTemplateScratchSourceTagPtrOutputWithContext(ctx context.Context) TemplateScratchSourceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceTagOutput).ToTemplateScratchSourceTagPtrOutputWithContext(ctx)
}

// TemplateScratchSourceTagPtrInput is an input type that accepts TemplateScratchSourceTagArgs, TemplateScratchSourceTagPtr and TemplateScratchSourceTagPtrOutput values.
// You can construct a concrete instance of `TemplateScratchSourceTagPtrInput` via:
//
//          TemplateScratchSourceTagArgs{...}
//
//  or:
//
//          nil
type TemplateScratchSourceTagPtrInput interface {
	pulumi.Input

	ToTemplateScratchSourceTagPtrOutput() TemplateScratchSourceTagPtrOutput
	ToTemplateScratchSourceTagPtrOutputWithContext(context.Context) TemplateScratchSourceTagPtrOutput
}

type templateScratchSourceTagPtrType TemplateScratchSourceTagArgs

func TemplateScratchSourceTagPtr(v *TemplateScratchSourceTagArgs) TemplateScratchSourceTagPtrInput {
	return (*templateScratchSourceTagPtrType)(v)
}

func (*templateScratchSourceTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScratchSourceTag)(nil)).Elem()
}

func (i *templateScratchSourceTagPtrType) ToTemplateScratchSourceTagPtrOutput() TemplateScratchSourceTagPtrOutput {
	return i.ToTemplateScratchSourceTagPtrOutputWithContext(context.Background())
}

func (i *templateScratchSourceTagPtrType) ToTemplateScratchSourceTagPtrOutputWithContext(ctx context.Context) TemplateScratchSourceTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScratchSourceTagPtrOutput)
}

type TemplateScratchSourceTagOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScratchSourceTag)(nil)).Elem()
}

func (o TemplateScratchSourceTagOutput) ToTemplateScratchSourceTagOutput() TemplateScratchSourceTagOutput {
	return o
}

func (o TemplateScratchSourceTagOutput) ToTemplateScratchSourceTagOutputWithContext(ctx context.Context) TemplateScratchSourceTagOutput {
	return o
}

func (o TemplateScratchSourceTagOutput) ToTemplateScratchSourceTagPtrOutput() TemplateScratchSourceTagPtrOutput {
	return o.ToTemplateScratchSourceTagPtrOutputWithContext(context.Background())
}

func (o TemplateScratchSourceTagOutput) ToTemplateScratchSourceTagPtrOutputWithContext(ctx context.Context) TemplateScratchSourceTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScratchSourceTag) *TemplateScratchSourceTag {
		return &v
	}).(TemplateScratchSourceTagPtrOutput)
}

// Source label. **NOTE:** A maximum of 10 source labels can be configured.
func (o TemplateScratchSourceTagOutput) ResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v TemplateScratchSourceTag) map[string]interface{} { return v.ResourceTags }).(pulumi.MapOutput)
}

// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
func (o TemplateScratchSourceTagOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateScratchSourceTag) []string { return v.ResourceTypeFilters }).(pulumi.StringArrayOutput)
}

type TemplateScratchSourceTagPtrOutput struct{ *pulumi.OutputState }

func (TemplateScratchSourceTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScratchSourceTag)(nil)).Elem()
}

func (o TemplateScratchSourceTagPtrOutput) ToTemplateScratchSourceTagPtrOutput() TemplateScratchSourceTagPtrOutput {
	return o
}

func (o TemplateScratchSourceTagPtrOutput) ToTemplateScratchSourceTagPtrOutputWithContext(ctx context.Context) TemplateScratchSourceTagPtrOutput {
	return o
}

func (o TemplateScratchSourceTagPtrOutput) Elem() TemplateScratchSourceTagOutput {
	return o.ApplyT(func(v *TemplateScratchSourceTag) TemplateScratchSourceTag {
		if v != nil {
			return *v
		}
		var ret TemplateScratchSourceTag
		return ret
	}).(TemplateScratchSourceTagOutput)
}

// Source label. **NOTE:** A maximum of 10 source labels can be configured.
func (o TemplateScratchSourceTagPtrOutput) ResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TemplateScratchSourceTag) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(pulumi.MapOutput)
}

// Source resource type filter list. If the resource type list is specified, it means to scan the resources of the specified resource type and in the specified resource group; Otherwise, it means to scan all resources in the specified resource group. **NOTE:** A maximum of `20` resource type filter can be configured.
func (o TemplateScratchSourceTagPtrOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateScratchSourceTag) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypeFilters
	}).(pulumi.StringArrayOutput)
}

type GetChangeSetsSet struct {
	// The ID of the change set.
	ChangeSetId string `pulumi:"changeSetId"`
	// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	ChangeSetName string `pulumi:"changeSetName"`
	// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
	ChangeSetType string `pulumi:"changeSetType"`
	// The description of the change set. The description can be up to 1,024 bytes in length.
	Description string `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	DisableRollback bool `pulumi:"disableRollback"`
	// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
	ExecutionStatus string `pulumi:"executionStatus"`
	// The ID of the Change Set.
	Id string `pulumi:"id"`
	// Parameters.
	Parameters []GetChangeSetsSetParameter `pulumi:"parameters"`
	// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
	StackId string `pulumi:"stackId"`
	// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	StackName string `pulumi:"stackName"`
	// The status of the change set.
	Status string `pulumi:"status"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
	TemplateBody string `pulumi:"templateBody"`
	// Timeout In Minutes.
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// GetChangeSetsSetInput is an input type that accepts GetChangeSetsSetArgs and GetChangeSetsSetOutput values.
// You can construct a concrete instance of `GetChangeSetsSetInput` via:
//
//          GetChangeSetsSetArgs{...}
type GetChangeSetsSetInput interface {
	pulumi.Input

	ToGetChangeSetsSetOutput() GetChangeSetsSetOutput
	ToGetChangeSetsSetOutputWithContext(context.Context) GetChangeSetsSetOutput
}

type GetChangeSetsSetArgs struct {
	// The ID of the change set.
	ChangeSetId pulumi.StringInput `pulumi:"changeSetId"`
	// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	ChangeSetName pulumi.StringInput `pulumi:"changeSetName"`
	// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
	ChangeSetType pulumi.StringInput `pulumi:"changeSetType"`
	// The description of the change set. The description can be up to 1,024 bytes in length.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	DisableRollback pulumi.BoolInput `pulumi:"disableRollback"`
	// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
	ExecutionStatus pulumi.StringInput `pulumi:"executionStatus"`
	// The ID of the Change Set.
	Id pulumi.StringInput `pulumi:"id"`
	// Parameters.
	Parameters GetChangeSetsSetParameterArrayInput `pulumi:"parameters"`
	// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	StackName pulumi.StringInput `pulumi:"stackName"`
	// The status of the change set.
	Status pulumi.StringInput `pulumi:"status"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
	// Timeout In Minutes.
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (GetChangeSetsSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSet)(nil)).Elem()
}

func (i GetChangeSetsSetArgs) ToGetChangeSetsSetOutput() GetChangeSetsSetOutput {
	return i.ToGetChangeSetsSetOutputWithContext(context.Background())
}

func (i GetChangeSetsSetArgs) ToGetChangeSetsSetOutputWithContext(ctx context.Context) GetChangeSetsSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetOutput)
}

// GetChangeSetsSetArrayInput is an input type that accepts GetChangeSetsSetArray and GetChangeSetsSetArrayOutput values.
// You can construct a concrete instance of `GetChangeSetsSetArrayInput` via:
//
//          GetChangeSetsSetArray{ GetChangeSetsSetArgs{...} }
type GetChangeSetsSetArrayInput interface {
	pulumi.Input

	ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput
	ToGetChangeSetsSetArrayOutputWithContext(context.Context) GetChangeSetsSetArrayOutput
}

type GetChangeSetsSetArray []GetChangeSetsSetInput

func (GetChangeSetsSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSet)(nil)).Elem()
}

func (i GetChangeSetsSetArray) ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput {
	return i.ToGetChangeSetsSetArrayOutputWithContext(context.Background())
}

func (i GetChangeSetsSetArray) ToGetChangeSetsSetArrayOutputWithContext(ctx context.Context) GetChangeSetsSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetArrayOutput)
}

type GetChangeSetsSetOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSet)(nil)).Elem()
}

func (o GetChangeSetsSetOutput) ToGetChangeSetsSetOutput() GetChangeSetsSetOutput {
	return o
}

func (o GetChangeSetsSetOutput) ToGetChangeSetsSetOutputWithContext(ctx context.Context) GetChangeSetsSetOutput {
	return o
}

// The ID of the change set.
func (o GetChangeSetsSetOutput) ChangeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetId }).(pulumi.StringOutput)
}

// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetChangeSetsSetOutput) ChangeSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetName }).(pulumi.StringOutput)
}

// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
func (o GetChangeSetsSetOutput) ChangeSetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetType }).(pulumi.StringOutput)
}

// The description of the change set. The description can be up to 1,024 bytes in length.
func (o GetChangeSetsSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
func (o GetChangeSetsSetOutput) DisableRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChangeSetsSet) bool { return v.DisableRollback }).(pulumi.BoolOutput)
}

// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
func (o GetChangeSetsSetOutput) ExecutionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ExecutionStatus }).(pulumi.StringOutput)
}

// The ID of the Change Set.
func (o GetChangeSetsSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Id }).(pulumi.StringOutput)
}

// Parameters.
func (o GetChangeSetsSetOutput) Parameters() GetChangeSetsSetParameterArrayOutput {
	return o.ApplyT(func(v GetChangeSetsSet) []GetChangeSetsSetParameter { return v.Parameters }).(GetChangeSetsSetParameterArrayOutput)
}

// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
func (o GetChangeSetsSetOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.StackId }).(pulumi.StringOutput)
}

// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
func (o GetChangeSetsSetOutput) StackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.StackName }).(pulumi.StringOutput)
}

// The status of the change set.
func (o GetChangeSetsSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Status }).(pulumi.StringOutput)
}

// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
func (o GetChangeSetsSetOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.TemplateBody }).(pulumi.StringOutput)
}

// Timeout In Minutes.
func (o GetChangeSetsSetOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetChangeSetsSet) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type GetChangeSetsSetArrayOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSet)(nil)).Elem()
}

func (o GetChangeSetsSetArrayOutput) ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput {
	return o
}

func (o GetChangeSetsSetArrayOutput) ToGetChangeSetsSetArrayOutputWithContext(ctx context.Context) GetChangeSetsSetArrayOutput {
	return o
}

func (o GetChangeSetsSetArrayOutput) Index(i pulumi.IntInput) GetChangeSetsSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChangeSetsSet {
		return vs[0].([]GetChangeSetsSet)[vs[1].(int)]
	}).(GetChangeSetsSetOutput)
}

type GetChangeSetsSetParameter struct {
	// The parameters.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameters.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetChangeSetsSetParameterInput is an input type that accepts GetChangeSetsSetParameterArgs and GetChangeSetsSetParameterOutput values.
// You can construct a concrete instance of `GetChangeSetsSetParameterInput` via:
//
//          GetChangeSetsSetParameterArgs{...}
type GetChangeSetsSetParameterInput interface {
	pulumi.Input

	ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput
	ToGetChangeSetsSetParameterOutputWithContext(context.Context) GetChangeSetsSetParameterOutput
}

type GetChangeSetsSetParameterArgs struct {
	// The parameters.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameters.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetChangeSetsSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSetParameter)(nil)).Elem()
}

func (i GetChangeSetsSetParameterArgs) ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput {
	return i.ToGetChangeSetsSetParameterOutputWithContext(context.Background())
}

func (i GetChangeSetsSetParameterArgs) ToGetChangeSetsSetParameterOutputWithContext(ctx context.Context) GetChangeSetsSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetParameterOutput)
}

// GetChangeSetsSetParameterArrayInput is an input type that accepts GetChangeSetsSetParameterArray and GetChangeSetsSetParameterArrayOutput values.
// You can construct a concrete instance of `GetChangeSetsSetParameterArrayInput` via:
//
//          GetChangeSetsSetParameterArray{ GetChangeSetsSetParameterArgs{...} }
type GetChangeSetsSetParameterArrayInput interface {
	pulumi.Input

	ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput
	ToGetChangeSetsSetParameterArrayOutputWithContext(context.Context) GetChangeSetsSetParameterArrayOutput
}

type GetChangeSetsSetParameterArray []GetChangeSetsSetParameterInput

func (GetChangeSetsSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSetParameter)(nil)).Elem()
}

func (i GetChangeSetsSetParameterArray) ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput {
	return i.ToGetChangeSetsSetParameterArrayOutputWithContext(context.Background())
}

func (i GetChangeSetsSetParameterArray) ToGetChangeSetsSetParameterArrayOutputWithContext(ctx context.Context) GetChangeSetsSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetParameterArrayOutput)
}

type GetChangeSetsSetParameterOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSetParameter)(nil)).Elem()
}

func (o GetChangeSetsSetParameterOutput) ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput {
	return o
}

func (o GetChangeSetsSetParameterOutput) ToGetChangeSetsSetParameterOutputWithContext(ctx context.Context) GetChangeSetsSetParameterOutput {
	return o
}

// The parameters.
func (o GetChangeSetsSetParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSetParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameters.
func (o GetChangeSetsSetParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSetParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetChangeSetsSetParameterArrayOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSetParameter)(nil)).Elem()
}

func (o GetChangeSetsSetParameterArrayOutput) ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput {
	return o
}

func (o GetChangeSetsSetParameterArrayOutput) ToGetChangeSetsSetParameterArrayOutputWithContext(ctx context.Context) GetChangeSetsSetParameterArrayOutput {
	return o
}

func (o GetChangeSetsSetParameterArrayOutput) Index(i pulumi.IntInput) GetChangeSetsSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChangeSetsSetParameter {
		return vs[0].([]GetChangeSetsSetParameter)[vs[1].(int)]
	}).(GetChangeSetsSetParameterOutput)
}

type GetRegionsRegion struct {
	// The name of the region.
	LocalName string `pulumi:"localName"`
	// The endpoint of the region.
	RegionEndpoint string `pulumi:"regionEndpoint"`
	// The ID of the region.
	RegionId string `pulumi:"regionId"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//          GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// The name of the region.
	LocalName pulumi.StringInput `pulumi:"localName"`
	// The endpoint of the region.
	RegionEndpoint pulumi.StringInput `pulumi:"regionEndpoint"`
	// The ID of the region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//          GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// The name of the region.
func (o GetRegionsRegionOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.LocalName }).(pulumi.StringOutput)
}

// The endpoint of the region.
func (o GetRegionsRegionOutput) RegionEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionEndpoint }).(pulumi.StringOutput)
}

// The ID of the region.
func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetStackGroupsGroup struct {
	// The name of the RAM administrator role assumed by ROS.
	AdministrationRoleName string `pulumi:"administrationRoleName"`
	// The description of the stack group.
	Description string `pulumi:"description"`
	// The name of the RAM execution role assumed by the administrator role.
	ExecutionRoleName string `pulumi:"executionRoleName"`
	// The ID of the Stack Group.
	Id string `pulumi:"id"`
	// The parameters.
	Parameters []GetStackGroupsGroupParameter `pulumi:"parameters"`
	// The id of Stack Group.
	StackGroupId string `pulumi:"stackGroupId"`
	// The name of the stack group..
	StackGroupName string `pulumi:"stackGroupName"`
	// The status of Stack Group.
	Status string `pulumi:"status"`
	// The structure that contains the template body.
	TemplateBody string `pulumi:"templateBody"`
}

// GetStackGroupsGroupInput is an input type that accepts GetStackGroupsGroupArgs and GetStackGroupsGroupOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupInput` via:
//
//          GetStackGroupsGroupArgs{...}
type GetStackGroupsGroupInput interface {
	pulumi.Input

	ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput
	ToGetStackGroupsGroupOutputWithContext(context.Context) GetStackGroupsGroupOutput
}

type GetStackGroupsGroupArgs struct {
	// The name of the RAM administrator role assumed by ROS.
	AdministrationRoleName pulumi.StringInput `pulumi:"administrationRoleName"`
	// The description of the stack group.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the RAM execution role assumed by the administrator role.
	ExecutionRoleName pulumi.StringInput `pulumi:"executionRoleName"`
	// The ID of the Stack Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters.
	Parameters GetStackGroupsGroupParameterArrayInput `pulumi:"parameters"`
	// The id of Stack Group.
	StackGroupId pulumi.StringInput `pulumi:"stackGroupId"`
	// The name of the stack group..
	StackGroupName pulumi.StringInput `pulumi:"stackGroupName"`
	// The status of Stack Group.
	Status pulumi.StringInput `pulumi:"status"`
	// The structure that contains the template body.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
}

func (GetStackGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroup)(nil)).Elem()
}

func (i GetStackGroupsGroupArgs) ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput {
	return i.ToGetStackGroupsGroupOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupArgs) ToGetStackGroupsGroupOutputWithContext(ctx context.Context) GetStackGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupOutput)
}

// GetStackGroupsGroupArrayInput is an input type that accepts GetStackGroupsGroupArray and GetStackGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupArrayInput` via:
//
//          GetStackGroupsGroupArray{ GetStackGroupsGroupArgs{...} }
type GetStackGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput
	ToGetStackGroupsGroupArrayOutputWithContext(context.Context) GetStackGroupsGroupArrayOutput
}

type GetStackGroupsGroupArray []GetStackGroupsGroupInput

func (GetStackGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroup)(nil)).Elem()
}

func (i GetStackGroupsGroupArray) ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput {
	return i.ToGetStackGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupArray) ToGetStackGroupsGroupArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupArrayOutput)
}

type GetStackGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroup)(nil)).Elem()
}

func (o GetStackGroupsGroupOutput) ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput {
	return o
}

func (o GetStackGroupsGroupOutput) ToGetStackGroupsGroupOutputWithContext(ctx context.Context) GetStackGroupsGroupOutput {
	return o
}

// The name of the RAM administrator role assumed by ROS.
func (o GetStackGroupsGroupOutput) AdministrationRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.AdministrationRoleName }).(pulumi.StringOutput)
}

// The description of the stack group.
func (o GetStackGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the RAM execution role assumed by the administrator role.
func (o GetStackGroupsGroupOutput) ExecutionRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.ExecutionRoleName }).(pulumi.StringOutput)
}

// The ID of the Stack Group.
func (o GetStackGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters.
func (o GetStackGroupsGroupOutput) Parameters() GetStackGroupsGroupParameterArrayOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) []GetStackGroupsGroupParameter { return v.Parameters }).(GetStackGroupsGroupParameterArrayOutput)
}

// The id of Stack Group.
func (o GetStackGroupsGroupOutput) StackGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.StackGroupId }).(pulumi.StringOutput)
}

// The name of the stack group..
func (o GetStackGroupsGroupOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.StackGroupName }).(pulumi.StringOutput)
}

// The status of Stack Group.
func (o GetStackGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The structure that contains the template body.
func (o GetStackGroupsGroupOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.TemplateBody }).(pulumi.StringOutput)
}

type GetStackGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroup)(nil)).Elem()
}

func (o GetStackGroupsGroupArrayOutput) ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput {
	return o
}

func (o GetStackGroupsGroupArrayOutput) ToGetStackGroupsGroupArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupArrayOutput {
	return o
}

func (o GetStackGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetStackGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackGroupsGroup {
		return vs[0].([]GetStackGroupsGroup)[vs[1].(int)]
	}).(GetStackGroupsGroupOutput)
}

type GetStackGroupsGroupParameter struct {
	// The parameter key.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetStackGroupsGroupParameterInput is an input type that accepts GetStackGroupsGroupParameterArgs and GetStackGroupsGroupParameterOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupParameterInput` via:
//
//          GetStackGroupsGroupParameterArgs{...}
type GetStackGroupsGroupParameterInput interface {
	pulumi.Input

	ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput
	ToGetStackGroupsGroupParameterOutputWithContext(context.Context) GetStackGroupsGroupParameterOutput
}

type GetStackGroupsGroupParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetStackGroupsGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroupParameter)(nil)).Elem()
}

func (i GetStackGroupsGroupParameterArgs) ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput {
	return i.ToGetStackGroupsGroupParameterOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupParameterArgs) ToGetStackGroupsGroupParameterOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupParameterOutput)
}

// GetStackGroupsGroupParameterArrayInput is an input type that accepts GetStackGroupsGroupParameterArray and GetStackGroupsGroupParameterArrayOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupParameterArrayInput` via:
//
//          GetStackGroupsGroupParameterArray{ GetStackGroupsGroupParameterArgs{...} }
type GetStackGroupsGroupParameterArrayInput interface {
	pulumi.Input

	ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput
	ToGetStackGroupsGroupParameterArrayOutputWithContext(context.Context) GetStackGroupsGroupParameterArrayOutput
}

type GetStackGroupsGroupParameterArray []GetStackGroupsGroupParameterInput

func (GetStackGroupsGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroupParameter)(nil)).Elem()
}

func (i GetStackGroupsGroupParameterArray) ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput {
	return i.ToGetStackGroupsGroupParameterArrayOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupParameterArray) ToGetStackGroupsGroupParameterArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupParameterArrayOutput)
}

type GetStackGroupsGroupParameterOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroupParameter)(nil)).Elem()
}

func (o GetStackGroupsGroupParameterOutput) ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput {
	return o
}

func (o GetStackGroupsGroupParameterOutput) ToGetStackGroupsGroupParameterOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterOutput {
	return o
}

// The parameter key.
func (o GetStackGroupsGroupParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroupParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameter value.
func (o GetStackGroupsGroupParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroupParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetStackGroupsGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroupParameter)(nil)).Elem()
}

func (o GetStackGroupsGroupParameterArrayOutput) ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput {
	return o
}

func (o GetStackGroupsGroupParameterArrayOutput) ToGetStackGroupsGroupParameterArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterArrayOutput {
	return o
}

func (o GetStackGroupsGroupParameterArrayOutput) Index(i pulumi.IntInput) GetStackGroupsGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackGroupsGroupParameter {
		return vs[0].([]GetStackGroupsGroupParameter)[vs[1].(int)]
	}).(GetStackGroupsGroupParameterOutput)
}

type GetStackInstancesInstance struct {
	// The ID of the Stack Instance. The value formats as `<stack_group_name>:<stack_instance_account_id>:<stack_instance_region_id>`.
	Id string `pulumi:"id"`
	// ParameterOverrides.
	ParameterOverrides []GetStackInstancesInstanceParameterOverride `pulumi:"parameterOverrides"`
	// The ID of the stack group.
	StackGroupId string `pulumi:"stackGroupId"`
	// The name of the stack group.
	StackGroupName string `pulumi:"stackGroupName"`
	// The ID of the stack corresponding to the stack instance.
	StackId string `pulumi:"stackId"`
	// The account to which the stack instance belongs.
	StackInstanceAccountId string `pulumi:"stackInstanceAccountId"`
	// The region of the stack instance.
	StackInstanceRegionId string `pulumi:"stackInstanceRegionId"`
	// The status of the stack instance. Valid values: `CURRENT` or `OUTDATED`.
	// * `CURRENT`: The stack corresponding to the stack instance is up to date with the stack group.
	// * `OUTDATED`: The stack corresponding to the stack instance is not up to date with the stack group. The `OUTDATED` state has the following possible causes:
	// * When the CreateStackInstances operation is called to create stack instances, the corresponding stacks fail to be created.
	// * When the UpdateStackInstances or UpdateStackGroup operation is called to update stack instances, the corresponding stacks fail to be updated, or only some of the stack instances are updated.
	// * The create or update operation is not complete.
	Status string `pulumi:"status"`
	// The reason why the stack is in its current state.
	StatusReason string `pulumi:"statusReason"`
}

// GetStackInstancesInstanceInput is an input type that accepts GetStackInstancesInstanceArgs and GetStackInstancesInstanceOutput values.
// You can construct a concrete instance of `GetStackInstancesInstanceInput` via:
//
//          GetStackInstancesInstanceArgs{...}
type GetStackInstancesInstanceInput interface {
	pulumi.Input

	ToGetStackInstancesInstanceOutput() GetStackInstancesInstanceOutput
	ToGetStackInstancesInstanceOutputWithContext(context.Context) GetStackInstancesInstanceOutput
}

type GetStackInstancesInstanceArgs struct {
	// The ID of the Stack Instance. The value formats as `<stack_group_name>:<stack_instance_account_id>:<stack_instance_region_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// ParameterOverrides.
	ParameterOverrides GetStackInstancesInstanceParameterOverrideArrayInput `pulumi:"parameterOverrides"`
	// The ID of the stack group.
	StackGroupId pulumi.StringInput `pulumi:"stackGroupId"`
	// The name of the stack group.
	StackGroupName pulumi.StringInput `pulumi:"stackGroupName"`
	// The ID of the stack corresponding to the stack instance.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// The account to which the stack instance belongs.
	StackInstanceAccountId pulumi.StringInput `pulumi:"stackInstanceAccountId"`
	// The region of the stack instance.
	StackInstanceRegionId pulumi.StringInput `pulumi:"stackInstanceRegionId"`
	// The status of the stack instance. Valid values: `CURRENT` or `OUTDATED`.
	// * `CURRENT`: The stack corresponding to the stack instance is up to date with the stack group.
	// * `OUTDATED`: The stack corresponding to the stack instance is not up to date with the stack group. The `OUTDATED` state has the following possible causes:
	// * When the CreateStackInstances operation is called to create stack instances, the corresponding stacks fail to be created.
	// * When the UpdateStackInstances or UpdateStackGroup operation is called to update stack instances, the corresponding stacks fail to be updated, or only some of the stack instances are updated.
	// * The create or update operation is not complete.
	Status pulumi.StringInput `pulumi:"status"`
	// The reason why the stack is in its current state.
	StatusReason pulumi.StringInput `pulumi:"statusReason"`
}

func (GetStackInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackInstancesInstance)(nil)).Elem()
}

func (i GetStackInstancesInstanceArgs) ToGetStackInstancesInstanceOutput() GetStackInstancesInstanceOutput {
	return i.ToGetStackInstancesInstanceOutputWithContext(context.Background())
}

func (i GetStackInstancesInstanceArgs) ToGetStackInstancesInstanceOutputWithContext(ctx context.Context) GetStackInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackInstancesInstanceOutput)
}

// GetStackInstancesInstanceArrayInput is an input type that accepts GetStackInstancesInstanceArray and GetStackInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetStackInstancesInstanceArrayInput` via:
//
//          GetStackInstancesInstanceArray{ GetStackInstancesInstanceArgs{...} }
type GetStackInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetStackInstancesInstanceArrayOutput() GetStackInstancesInstanceArrayOutput
	ToGetStackInstancesInstanceArrayOutputWithContext(context.Context) GetStackInstancesInstanceArrayOutput
}

type GetStackInstancesInstanceArray []GetStackInstancesInstanceInput

func (GetStackInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackInstancesInstance)(nil)).Elem()
}

func (i GetStackInstancesInstanceArray) ToGetStackInstancesInstanceArrayOutput() GetStackInstancesInstanceArrayOutput {
	return i.ToGetStackInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetStackInstancesInstanceArray) ToGetStackInstancesInstanceArrayOutputWithContext(ctx context.Context) GetStackInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackInstancesInstanceArrayOutput)
}

type GetStackInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetStackInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackInstancesInstance)(nil)).Elem()
}

func (o GetStackInstancesInstanceOutput) ToGetStackInstancesInstanceOutput() GetStackInstancesInstanceOutput {
	return o
}

func (o GetStackInstancesInstanceOutput) ToGetStackInstancesInstanceOutputWithContext(ctx context.Context) GetStackInstancesInstanceOutput {
	return o
}

// The ID of the Stack Instance. The value formats as `<stack_group_name>:<stack_instance_account_id>:<stack_instance_region_id>`.
func (o GetStackInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// ParameterOverrides.
func (o GetStackInstancesInstanceOutput) ParameterOverrides() GetStackInstancesInstanceParameterOverrideArrayOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) []GetStackInstancesInstanceParameterOverride {
		return v.ParameterOverrides
	}).(GetStackInstancesInstanceParameterOverrideArrayOutput)
}

// The ID of the stack group.
func (o GetStackInstancesInstanceOutput) StackGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StackGroupId }).(pulumi.StringOutput)
}

// The name of the stack group.
func (o GetStackInstancesInstanceOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StackGroupName }).(pulumi.StringOutput)
}

// The ID of the stack corresponding to the stack instance.
func (o GetStackInstancesInstanceOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StackId }).(pulumi.StringOutput)
}

// The account to which the stack instance belongs.
func (o GetStackInstancesInstanceOutput) StackInstanceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StackInstanceAccountId }).(pulumi.StringOutput)
}

// The region of the stack instance.
func (o GetStackInstancesInstanceOutput) StackInstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StackInstanceRegionId }).(pulumi.StringOutput)
}

// The status of the stack instance. Valid values: `CURRENT` or `OUTDATED`.
// * `CURRENT`: The stack corresponding to the stack instance is up to date with the stack group.
// * `OUTDATED`: The stack corresponding to the stack instance is not up to date with the stack group. The `OUTDATED` state has the following possible causes:
// * When the CreateStackInstances operation is called to create stack instances, the corresponding stacks fail to be created.
// * When the UpdateStackInstances or UpdateStackGroup operation is called to update stack instances, the corresponding stacks fail to be updated, or only some of the stack instances are updated.
// * The create or update operation is not complete.
func (o GetStackInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The reason why the stack is in its current state.
func (o GetStackInstancesInstanceOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstance) string { return v.StatusReason }).(pulumi.StringOutput)
}

type GetStackInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetStackInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackInstancesInstance)(nil)).Elem()
}

func (o GetStackInstancesInstanceArrayOutput) ToGetStackInstancesInstanceArrayOutput() GetStackInstancesInstanceArrayOutput {
	return o
}

func (o GetStackInstancesInstanceArrayOutput) ToGetStackInstancesInstanceArrayOutputWithContext(ctx context.Context) GetStackInstancesInstanceArrayOutput {
	return o
}

func (o GetStackInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetStackInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackInstancesInstance {
		return vs[0].([]GetStackInstancesInstance)[vs[1].(int)]
	}).(GetStackInstancesInstanceOutput)
}

type GetStackInstancesInstanceParameterOverride struct {
	// The key of override parameter.
	ParameterKey string `pulumi:"parameterKey"`
	// The value of override parameter.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetStackInstancesInstanceParameterOverrideInput is an input type that accepts GetStackInstancesInstanceParameterOverrideArgs and GetStackInstancesInstanceParameterOverrideOutput values.
// You can construct a concrete instance of `GetStackInstancesInstanceParameterOverrideInput` via:
//
//          GetStackInstancesInstanceParameterOverrideArgs{...}
type GetStackInstancesInstanceParameterOverrideInput interface {
	pulumi.Input

	ToGetStackInstancesInstanceParameterOverrideOutput() GetStackInstancesInstanceParameterOverrideOutput
	ToGetStackInstancesInstanceParameterOverrideOutputWithContext(context.Context) GetStackInstancesInstanceParameterOverrideOutput
}

type GetStackInstancesInstanceParameterOverrideArgs struct {
	// The key of override parameter.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The value of override parameter.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetStackInstancesInstanceParameterOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackInstancesInstanceParameterOverride)(nil)).Elem()
}

func (i GetStackInstancesInstanceParameterOverrideArgs) ToGetStackInstancesInstanceParameterOverrideOutput() GetStackInstancesInstanceParameterOverrideOutput {
	return i.ToGetStackInstancesInstanceParameterOverrideOutputWithContext(context.Background())
}

func (i GetStackInstancesInstanceParameterOverrideArgs) ToGetStackInstancesInstanceParameterOverrideOutputWithContext(ctx context.Context) GetStackInstancesInstanceParameterOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackInstancesInstanceParameterOverrideOutput)
}

// GetStackInstancesInstanceParameterOverrideArrayInput is an input type that accepts GetStackInstancesInstanceParameterOverrideArray and GetStackInstancesInstanceParameterOverrideArrayOutput values.
// You can construct a concrete instance of `GetStackInstancesInstanceParameterOverrideArrayInput` via:
//
//          GetStackInstancesInstanceParameterOverrideArray{ GetStackInstancesInstanceParameterOverrideArgs{...} }
type GetStackInstancesInstanceParameterOverrideArrayInput interface {
	pulumi.Input

	ToGetStackInstancesInstanceParameterOverrideArrayOutput() GetStackInstancesInstanceParameterOverrideArrayOutput
	ToGetStackInstancesInstanceParameterOverrideArrayOutputWithContext(context.Context) GetStackInstancesInstanceParameterOverrideArrayOutput
}

type GetStackInstancesInstanceParameterOverrideArray []GetStackInstancesInstanceParameterOverrideInput

func (GetStackInstancesInstanceParameterOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackInstancesInstanceParameterOverride)(nil)).Elem()
}

func (i GetStackInstancesInstanceParameterOverrideArray) ToGetStackInstancesInstanceParameterOverrideArrayOutput() GetStackInstancesInstanceParameterOverrideArrayOutput {
	return i.ToGetStackInstancesInstanceParameterOverrideArrayOutputWithContext(context.Background())
}

func (i GetStackInstancesInstanceParameterOverrideArray) ToGetStackInstancesInstanceParameterOverrideArrayOutputWithContext(ctx context.Context) GetStackInstancesInstanceParameterOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackInstancesInstanceParameterOverrideArrayOutput)
}

type GetStackInstancesInstanceParameterOverrideOutput struct{ *pulumi.OutputState }

func (GetStackInstancesInstanceParameterOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackInstancesInstanceParameterOverride)(nil)).Elem()
}

func (o GetStackInstancesInstanceParameterOverrideOutput) ToGetStackInstancesInstanceParameterOverrideOutput() GetStackInstancesInstanceParameterOverrideOutput {
	return o
}

func (o GetStackInstancesInstanceParameterOverrideOutput) ToGetStackInstancesInstanceParameterOverrideOutputWithContext(ctx context.Context) GetStackInstancesInstanceParameterOverrideOutput {
	return o
}

// The key of override parameter.
func (o GetStackInstancesInstanceParameterOverrideOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstanceParameterOverride) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The value of override parameter.
func (o GetStackInstancesInstanceParameterOverrideOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackInstancesInstanceParameterOverride) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetStackInstancesInstanceParameterOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetStackInstancesInstanceParameterOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackInstancesInstanceParameterOverride)(nil)).Elem()
}

func (o GetStackInstancesInstanceParameterOverrideArrayOutput) ToGetStackInstancesInstanceParameterOverrideArrayOutput() GetStackInstancesInstanceParameterOverrideArrayOutput {
	return o
}

func (o GetStackInstancesInstanceParameterOverrideArrayOutput) ToGetStackInstancesInstanceParameterOverrideArrayOutputWithContext(ctx context.Context) GetStackInstancesInstanceParameterOverrideArrayOutput {
	return o
}

func (o GetStackInstancesInstanceParameterOverrideArrayOutput) Index(i pulumi.IntInput) GetStackInstancesInstanceParameterOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackInstancesInstanceParameterOverride {
		return vs[0].([]GetStackInstancesInstanceParameterOverride)[vs[1].(int)]
	}).(GetStackInstancesInstanceParameterOverrideOutput)
}

type GetStacksStack struct {
	// Specifies whether to enable deletion protection on the stack.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The Description of the Stack.
	Description string `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure..
	DisableRollback bool `pulumi:"disableRollback"`
	// Drift DetectionTime.
	DriftDetectionTime string `pulumi:"driftDetectionTime"`
	// The ID of the Stack.
	Id string `pulumi:"id"`
	// The parameters.
	Parameters []GetStacksStackParameter `pulumi:"parameters"`
	// Parent Stack Id.
	ParentStackId string `pulumi:"parentStackId"`
	// The RamRoleName.
	RamRoleName string `pulumi:"ramRoleName"`
	// Root Stack Id.
	RootStackId string `pulumi:"rootStackId"`
	// Stack DriftStatus.
	StackDriftStatus string `pulumi:"stackDriftStatus"`
	// Stack Id.
	StackId string `pulumi:"stackId"`
	// Stack Name.
	StackName string `pulumi:"stackName"`
	// The structure that contains the stack policy body.
	StackPolicyBody string `pulumi:"stackPolicyBody"`
	// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
	Status string `pulumi:"status"`
	// Status Reason.
	StatusReason string `pulumi:"statusReason"`
	// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
	Tags map[string]interface{} `pulumi:"tags"`
	// Template Description.
	TemplateDescription string `pulumi:"templateDescription"`
	// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// GetStacksStackInput is an input type that accepts GetStacksStackArgs and GetStacksStackOutput values.
// You can construct a concrete instance of `GetStacksStackInput` via:
//
//          GetStacksStackArgs{...}
type GetStacksStackInput interface {
	pulumi.Input

	ToGetStacksStackOutput() GetStacksStackOutput
	ToGetStacksStackOutputWithContext(context.Context) GetStacksStackOutput
}

type GetStacksStackArgs struct {
	// Specifies whether to enable deletion protection on the stack.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The Description of the Stack.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure..
	DisableRollback pulumi.BoolInput `pulumi:"disableRollback"`
	// Drift DetectionTime.
	DriftDetectionTime pulumi.StringInput `pulumi:"driftDetectionTime"`
	// The ID of the Stack.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters.
	Parameters GetStacksStackParameterArrayInput `pulumi:"parameters"`
	// Parent Stack Id.
	ParentStackId pulumi.StringInput `pulumi:"parentStackId"`
	// The RamRoleName.
	RamRoleName pulumi.StringInput `pulumi:"ramRoleName"`
	// Root Stack Id.
	RootStackId pulumi.StringInput `pulumi:"rootStackId"`
	// Stack DriftStatus.
	StackDriftStatus pulumi.StringInput `pulumi:"stackDriftStatus"`
	// Stack Id.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// Stack Name.
	StackName pulumi.StringInput `pulumi:"stackName"`
	// The structure that contains the stack policy body.
	StackPolicyBody pulumi.StringInput `pulumi:"stackPolicyBody"`
	// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
	Status pulumi.StringInput `pulumi:"status"`
	// Status Reason.
	StatusReason pulumi.StringInput `pulumi:"statusReason"`
	// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Template Description.
	TemplateDescription pulumi.StringInput `pulumi:"templateDescription"`
	// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (GetStacksStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStack)(nil)).Elem()
}

func (i GetStacksStackArgs) ToGetStacksStackOutput() GetStacksStackOutput {
	return i.ToGetStacksStackOutputWithContext(context.Background())
}

func (i GetStacksStackArgs) ToGetStacksStackOutputWithContext(ctx context.Context) GetStacksStackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackOutput)
}

// GetStacksStackArrayInput is an input type that accepts GetStacksStackArray and GetStacksStackArrayOutput values.
// You can construct a concrete instance of `GetStacksStackArrayInput` via:
//
//          GetStacksStackArray{ GetStacksStackArgs{...} }
type GetStacksStackArrayInput interface {
	pulumi.Input

	ToGetStacksStackArrayOutput() GetStacksStackArrayOutput
	ToGetStacksStackArrayOutputWithContext(context.Context) GetStacksStackArrayOutput
}

type GetStacksStackArray []GetStacksStackInput

func (GetStacksStackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStack)(nil)).Elem()
}

func (i GetStacksStackArray) ToGetStacksStackArrayOutput() GetStacksStackArrayOutput {
	return i.ToGetStacksStackArrayOutputWithContext(context.Background())
}

func (i GetStacksStackArray) ToGetStacksStackArrayOutputWithContext(ctx context.Context) GetStacksStackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackArrayOutput)
}

type GetStacksStackOutput struct{ *pulumi.OutputState }

func (GetStacksStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStack)(nil)).Elem()
}

func (o GetStacksStackOutput) ToGetStacksStackOutput() GetStacksStackOutput {
	return o
}

func (o GetStacksStackOutput) ToGetStacksStackOutputWithContext(ctx context.Context) GetStacksStackOutput {
	return o
}

// Specifies whether to enable deletion protection on the stack.
func (o GetStacksStackOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The Description of the Stack.
func (o GetStacksStackOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to disable rollback on stack creation failure..
func (o GetStacksStackOutput) DisableRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStacksStack) bool { return v.DisableRollback }).(pulumi.BoolOutput)
}

// Drift DetectionTime.
func (o GetStacksStackOutput) DriftDetectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.DriftDetectionTime }).(pulumi.StringOutput)
}

// The ID of the Stack.
func (o GetStacksStackOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters.
func (o GetStacksStackOutput) Parameters() GetStacksStackParameterArrayOutput {
	return o.ApplyT(func(v GetStacksStack) []GetStacksStackParameter { return v.Parameters }).(GetStacksStackParameterArrayOutput)
}

// Parent Stack Id.
func (o GetStacksStackOutput) ParentStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.ParentStackId }).(pulumi.StringOutput)
}

// The RamRoleName.
func (o GetStacksStackOutput) RamRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.RamRoleName }).(pulumi.StringOutput)
}

// Root Stack Id.
func (o GetStacksStackOutput) RootStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.RootStackId }).(pulumi.StringOutput)
}

// Stack DriftStatus.
func (o GetStacksStackOutput) StackDriftStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackDriftStatus }).(pulumi.StringOutput)
}

// Stack Id.
func (o GetStacksStackOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackId }).(pulumi.StringOutput)
}

// Stack Name.
func (o GetStacksStackOutput) StackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackName }).(pulumi.StringOutput)
}

// The structure that contains the stack policy body.
func (o GetStacksStackOutput) StackPolicyBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackPolicyBody }).(pulumi.StringOutput)
}

// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
func (o GetStacksStackOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Status }).(pulumi.StringOutput)
}

// Status Reason.
func (o GetStacksStackOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StatusReason }).(pulumi.StringOutput)
}

// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
func (o GetStacksStackOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStacksStack) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Template Description.
func (o GetStacksStackOutput) TemplateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.TemplateDescription }).(pulumi.StringOutput)
}

// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
func (o GetStacksStackOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetStacksStack) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type GetStacksStackArrayOutput struct{ *pulumi.OutputState }

func (GetStacksStackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStack)(nil)).Elem()
}

func (o GetStacksStackArrayOutput) ToGetStacksStackArrayOutput() GetStacksStackArrayOutput {
	return o
}

func (o GetStacksStackArrayOutput) ToGetStacksStackArrayOutputWithContext(ctx context.Context) GetStacksStackArrayOutput {
	return o
}

func (o GetStacksStackArrayOutput) Index(i pulumi.IntInput) GetStacksStackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStacksStack {
		return vs[0].([]GetStacksStack)[vs[1].(int)]
	}).(GetStacksStackOutput)
}

type GetStacksStackParameter struct {
	// The key of parameters.
	ParameterKey string `pulumi:"parameterKey"`
	// The value of parameters.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetStacksStackParameterInput is an input type that accepts GetStacksStackParameterArgs and GetStacksStackParameterOutput values.
// You can construct a concrete instance of `GetStacksStackParameterInput` via:
//
//          GetStacksStackParameterArgs{...}
type GetStacksStackParameterInput interface {
	pulumi.Input

	ToGetStacksStackParameterOutput() GetStacksStackParameterOutput
	ToGetStacksStackParameterOutputWithContext(context.Context) GetStacksStackParameterOutput
}

type GetStacksStackParameterArgs struct {
	// The key of parameters.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The value of parameters.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetStacksStackParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStackParameter)(nil)).Elem()
}

func (i GetStacksStackParameterArgs) ToGetStacksStackParameterOutput() GetStacksStackParameterOutput {
	return i.ToGetStacksStackParameterOutputWithContext(context.Background())
}

func (i GetStacksStackParameterArgs) ToGetStacksStackParameterOutputWithContext(ctx context.Context) GetStacksStackParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackParameterOutput)
}

// GetStacksStackParameterArrayInput is an input type that accepts GetStacksStackParameterArray and GetStacksStackParameterArrayOutput values.
// You can construct a concrete instance of `GetStacksStackParameterArrayInput` via:
//
//          GetStacksStackParameterArray{ GetStacksStackParameterArgs{...} }
type GetStacksStackParameterArrayInput interface {
	pulumi.Input

	ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput
	ToGetStacksStackParameterArrayOutputWithContext(context.Context) GetStacksStackParameterArrayOutput
}

type GetStacksStackParameterArray []GetStacksStackParameterInput

func (GetStacksStackParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStackParameter)(nil)).Elem()
}

func (i GetStacksStackParameterArray) ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput {
	return i.ToGetStacksStackParameterArrayOutputWithContext(context.Background())
}

func (i GetStacksStackParameterArray) ToGetStacksStackParameterArrayOutputWithContext(ctx context.Context) GetStacksStackParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackParameterArrayOutput)
}

type GetStacksStackParameterOutput struct{ *pulumi.OutputState }

func (GetStacksStackParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStackParameter)(nil)).Elem()
}

func (o GetStacksStackParameterOutput) ToGetStacksStackParameterOutput() GetStacksStackParameterOutput {
	return o
}

func (o GetStacksStackParameterOutput) ToGetStacksStackParameterOutputWithContext(ctx context.Context) GetStacksStackParameterOutput {
	return o
}

// The key of parameters.
func (o GetStacksStackParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStackParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The value of parameters.
func (o GetStacksStackParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStackParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetStacksStackParameterArrayOutput struct{ *pulumi.OutputState }

func (GetStacksStackParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStackParameter)(nil)).Elem()
}

func (o GetStacksStackParameterArrayOutput) ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput {
	return o
}

func (o GetStacksStackParameterArrayOutput) ToGetStacksStackParameterArrayOutputWithContext(ctx context.Context) GetStacksStackParameterArrayOutput {
	return o
}

func (o GetStacksStackParameterArrayOutput) Index(i pulumi.IntInput) GetStacksStackParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStacksStackParameter {
		return vs[0].([]GetStacksStackParameter)[vs[1].(int)]
	}).(GetStacksStackParameterOutput)
}

type GetTemplateScratchesScratch struct {
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The description of the Template Scratch.
	Description string `pulumi:"description"`
	// The ID of the Template Scratch.
	Id string `pulumi:"id"`
	// The Logical ID generation strategy of the Template Scratch.
	LogicalIdStrategy string `pulumi:"logicalIdStrategy"`
	// Priority parameter.
	PreferenceParameters []GetTemplateScratchesScratchPreferenceParameter `pulumi:"preferenceParameters"`
	// Source resource grouping.
	SourceResourceGroups []GetTemplateScratchesScratchSourceResourceGroup `pulumi:"sourceResourceGroups"`
	// Source resource.
	SourceResources []GetTemplateScratchesScratchSourceResource `pulumi:"sourceResources"`
	// The Source label list.
	SourceTags []GetTemplateScratchesScratchSourceTag `pulumi:"sourceTags"`
	// A list of resource stacks associated with the resource scene.
	Stacks []GetTemplateScratchesScratchStack `pulumi:"stacks"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The ID of the Template Scratch.
	TemplateScratchId string `pulumi:"templateScratchId"`
	// The type of the Template Scratch.
	TemplateScratchType string `pulumi:"templateScratchType"`
}

// GetTemplateScratchesScratchInput is an input type that accepts GetTemplateScratchesScratchArgs and GetTemplateScratchesScratchOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchInput` via:
//
//          GetTemplateScratchesScratchArgs{...}
type GetTemplateScratchesScratchInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchOutput() GetTemplateScratchesScratchOutput
	ToGetTemplateScratchesScratchOutputWithContext(context.Context) GetTemplateScratchesScratchOutput
}

type GetTemplateScratchesScratchArgs struct {
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Template Scratch.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Template Scratch.
	Id pulumi.StringInput `pulumi:"id"`
	// The Logical ID generation strategy of the Template Scratch.
	LogicalIdStrategy pulumi.StringInput `pulumi:"logicalIdStrategy"`
	// Priority parameter.
	PreferenceParameters GetTemplateScratchesScratchPreferenceParameterArrayInput `pulumi:"preferenceParameters"`
	// Source resource grouping.
	SourceResourceGroups GetTemplateScratchesScratchSourceResourceGroupArrayInput `pulumi:"sourceResourceGroups"`
	// Source resource.
	SourceResources GetTemplateScratchesScratchSourceResourceArrayInput `pulumi:"sourceResources"`
	// The Source label list.
	SourceTags GetTemplateScratchesScratchSourceTagArrayInput `pulumi:"sourceTags"`
	// A list of resource stacks associated with the resource scene.
	Stacks GetTemplateScratchesScratchStackArrayInput `pulumi:"stacks"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the Template Scratch.
	TemplateScratchId pulumi.StringInput `pulumi:"templateScratchId"`
	// The type of the Template Scratch.
	TemplateScratchType pulumi.StringInput `pulumi:"templateScratchType"`
}

func (GetTemplateScratchesScratchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratch)(nil)).Elem()
}

func (i GetTemplateScratchesScratchArgs) ToGetTemplateScratchesScratchOutput() GetTemplateScratchesScratchOutput {
	return i.ToGetTemplateScratchesScratchOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchArgs) ToGetTemplateScratchesScratchOutputWithContext(ctx context.Context) GetTemplateScratchesScratchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchOutput)
}

// GetTemplateScratchesScratchArrayInput is an input type that accepts GetTemplateScratchesScratchArray and GetTemplateScratchesScratchArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchArrayInput` via:
//
//          GetTemplateScratchesScratchArray{ GetTemplateScratchesScratchArgs{...} }
type GetTemplateScratchesScratchArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchArrayOutput() GetTemplateScratchesScratchArrayOutput
	ToGetTemplateScratchesScratchArrayOutputWithContext(context.Context) GetTemplateScratchesScratchArrayOutput
}

type GetTemplateScratchesScratchArray []GetTemplateScratchesScratchInput

func (GetTemplateScratchesScratchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratch)(nil)).Elem()
}

func (i GetTemplateScratchesScratchArray) ToGetTemplateScratchesScratchArrayOutput() GetTemplateScratchesScratchArrayOutput {
	return i.ToGetTemplateScratchesScratchArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchArray) ToGetTemplateScratchesScratchArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchArrayOutput)
}

type GetTemplateScratchesScratchOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratch)(nil)).Elem()
}

func (o GetTemplateScratchesScratchOutput) ToGetTemplateScratchesScratchOutput() GetTemplateScratchesScratchOutput {
	return o
}

func (o GetTemplateScratchesScratchOutput) ToGetTemplateScratchesScratchOutputWithContext(ctx context.Context) GetTemplateScratchesScratchOutput {
	return o
}

// The creation time of the resource.
func (o GetTemplateScratchesScratchOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Template Scratch.
func (o GetTemplateScratchesScratchOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Template Scratch.
func (o GetTemplateScratchesScratchOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.Id }).(pulumi.StringOutput)
}

// The Logical ID generation strategy of the Template Scratch.
func (o GetTemplateScratchesScratchOutput) LogicalIdStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.LogicalIdStrategy }).(pulumi.StringOutput)
}

// Priority parameter.
func (o GetTemplateScratchesScratchOutput) PreferenceParameters() GetTemplateScratchesScratchPreferenceParameterArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) []GetTemplateScratchesScratchPreferenceParameter {
		return v.PreferenceParameters
	}).(GetTemplateScratchesScratchPreferenceParameterArrayOutput)
}

// Source resource grouping.
func (o GetTemplateScratchesScratchOutput) SourceResourceGroups() GetTemplateScratchesScratchSourceResourceGroupArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) []GetTemplateScratchesScratchSourceResourceGroup {
		return v.SourceResourceGroups
	}).(GetTemplateScratchesScratchSourceResourceGroupArrayOutput)
}

// Source resource.
func (o GetTemplateScratchesScratchOutput) SourceResources() GetTemplateScratchesScratchSourceResourceArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) []GetTemplateScratchesScratchSourceResource {
		return v.SourceResources
	}).(GetTemplateScratchesScratchSourceResourceArrayOutput)
}

// The Source label list.
func (o GetTemplateScratchesScratchOutput) SourceTags() GetTemplateScratchesScratchSourceTagArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) []GetTemplateScratchesScratchSourceTag { return v.SourceTags }).(GetTemplateScratchesScratchSourceTagArrayOutput)
}

// A list of resource stacks associated with the resource scene.
func (o GetTemplateScratchesScratchOutput) Stacks() GetTemplateScratchesScratchStackArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) []GetTemplateScratchesScratchStack { return v.Stacks }).(GetTemplateScratchesScratchStackArrayOutput)
}

// The status of the resource.
func (o GetTemplateScratchesScratchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the Template Scratch.
func (o GetTemplateScratchesScratchOutput) TemplateScratchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.TemplateScratchId }).(pulumi.StringOutput)
}

// The type of the Template Scratch.
func (o GetTemplateScratchesScratchOutput) TemplateScratchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratch) string { return v.TemplateScratchType }).(pulumi.StringOutput)
}

type GetTemplateScratchesScratchArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratch)(nil)).Elem()
}

func (o GetTemplateScratchesScratchArrayOutput) ToGetTemplateScratchesScratchArrayOutput() GetTemplateScratchesScratchArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchArrayOutput) ToGetTemplateScratchesScratchArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratch {
		return vs[0].([]GetTemplateScratchesScratch)[vs[1].(int)]
	}).(GetTemplateScratchesScratchOutput)
}

type GetTemplateScratchesScratchPreferenceParameter struct {
	// Priority parameter key.
	ParameterKey string `pulumi:"parameterKey"`
	// Priority parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetTemplateScratchesScratchPreferenceParameterInput is an input type that accepts GetTemplateScratchesScratchPreferenceParameterArgs and GetTemplateScratchesScratchPreferenceParameterOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchPreferenceParameterInput` via:
//
//          GetTemplateScratchesScratchPreferenceParameterArgs{...}
type GetTemplateScratchesScratchPreferenceParameterInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchPreferenceParameterOutput() GetTemplateScratchesScratchPreferenceParameterOutput
	ToGetTemplateScratchesScratchPreferenceParameterOutputWithContext(context.Context) GetTemplateScratchesScratchPreferenceParameterOutput
}

type GetTemplateScratchesScratchPreferenceParameterArgs struct {
	// Priority parameter key.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// Priority parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetTemplateScratchesScratchPreferenceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchPreferenceParameter)(nil)).Elem()
}

func (i GetTemplateScratchesScratchPreferenceParameterArgs) ToGetTemplateScratchesScratchPreferenceParameterOutput() GetTemplateScratchesScratchPreferenceParameterOutput {
	return i.ToGetTemplateScratchesScratchPreferenceParameterOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchPreferenceParameterArgs) ToGetTemplateScratchesScratchPreferenceParameterOutputWithContext(ctx context.Context) GetTemplateScratchesScratchPreferenceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchPreferenceParameterOutput)
}

// GetTemplateScratchesScratchPreferenceParameterArrayInput is an input type that accepts GetTemplateScratchesScratchPreferenceParameterArray and GetTemplateScratchesScratchPreferenceParameterArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchPreferenceParameterArrayInput` via:
//
//          GetTemplateScratchesScratchPreferenceParameterArray{ GetTemplateScratchesScratchPreferenceParameterArgs{...} }
type GetTemplateScratchesScratchPreferenceParameterArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchPreferenceParameterArrayOutput() GetTemplateScratchesScratchPreferenceParameterArrayOutput
	ToGetTemplateScratchesScratchPreferenceParameterArrayOutputWithContext(context.Context) GetTemplateScratchesScratchPreferenceParameterArrayOutput
}

type GetTemplateScratchesScratchPreferenceParameterArray []GetTemplateScratchesScratchPreferenceParameterInput

func (GetTemplateScratchesScratchPreferenceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchPreferenceParameter)(nil)).Elem()
}

func (i GetTemplateScratchesScratchPreferenceParameterArray) ToGetTemplateScratchesScratchPreferenceParameterArrayOutput() GetTemplateScratchesScratchPreferenceParameterArrayOutput {
	return i.ToGetTemplateScratchesScratchPreferenceParameterArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchPreferenceParameterArray) ToGetTemplateScratchesScratchPreferenceParameterArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchPreferenceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchPreferenceParameterArrayOutput)
}

type GetTemplateScratchesScratchPreferenceParameterOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchPreferenceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchPreferenceParameter)(nil)).Elem()
}

func (o GetTemplateScratchesScratchPreferenceParameterOutput) ToGetTemplateScratchesScratchPreferenceParameterOutput() GetTemplateScratchesScratchPreferenceParameterOutput {
	return o
}

func (o GetTemplateScratchesScratchPreferenceParameterOutput) ToGetTemplateScratchesScratchPreferenceParameterOutputWithContext(ctx context.Context) GetTemplateScratchesScratchPreferenceParameterOutput {
	return o
}

// Priority parameter key.
func (o GetTemplateScratchesScratchPreferenceParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchPreferenceParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// Priority parameter value.
func (o GetTemplateScratchesScratchPreferenceParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchPreferenceParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetTemplateScratchesScratchPreferenceParameterArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchPreferenceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchPreferenceParameter)(nil)).Elem()
}

func (o GetTemplateScratchesScratchPreferenceParameterArrayOutput) ToGetTemplateScratchesScratchPreferenceParameterArrayOutput() GetTemplateScratchesScratchPreferenceParameterArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchPreferenceParameterArrayOutput) ToGetTemplateScratchesScratchPreferenceParameterArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchPreferenceParameterArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchPreferenceParameterArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchPreferenceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratchPreferenceParameter {
		return vs[0].([]GetTemplateScratchesScratchPreferenceParameter)[vs[1].(int)]
	}).(GetTemplateScratchesScratchPreferenceParameterOutput)
}

type GetTemplateScratchesScratchSourceResource struct {
	// The ID of the Source Resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of the Source resource.
	ResourceType string `pulumi:"resourceType"`
}

// GetTemplateScratchesScratchSourceResourceInput is an input type that accepts GetTemplateScratchesScratchSourceResourceArgs and GetTemplateScratchesScratchSourceResourceOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceResourceInput` via:
//
//          GetTemplateScratchesScratchSourceResourceArgs{...}
type GetTemplateScratchesScratchSourceResourceInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceResourceOutput() GetTemplateScratchesScratchSourceResourceOutput
	ToGetTemplateScratchesScratchSourceResourceOutputWithContext(context.Context) GetTemplateScratchesScratchSourceResourceOutput
}

type GetTemplateScratchesScratchSourceResourceArgs struct {
	// The ID of the Source Resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of the Source resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetTemplateScratchesScratchSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceResource)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceResourceArgs) ToGetTemplateScratchesScratchSourceResourceOutput() GetTemplateScratchesScratchSourceResourceOutput {
	return i.ToGetTemplateScratchesScratchSourceResourceOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceResourceArgs) ToGetTemplateScratchesScratchSourceResourceOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceResourceOutput)
}

// GetTemplateScratchesScratchSourceResourceArrayInput is an input type that accepts GetTemplateScratchesScratchSourceResourceArray and GetTemplateScratchesScratchSourceResourceArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceResourceArrayInput` via:
//
//          GetTemplateScratchesScratchSourceResourceArray{ GetTemplateScratchesScratchSourceResourceArgs{...} }
type GetTemplateScratchesScratchSourceResourceArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceResourceArrayOutput() GetTemplateScratchesScratchSourceResourceArrayOutput
	ToGetTemplateScratchesScratchSourceResourceArrayOutputWithContext(context.Context) GetTemplateScratchesScratchSourceResourceArrayOutput
}

type GetTemplateScratchesScratchSourceResourceArray []GetTemplateScratchesScratchSourceResourceInput

func (GetTemplateScratchesScratchSourceResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceResource)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceResourceArray) ToGetTemplateScratchesScratchSourceResourceArrayOutput() GetTemplateScratchesScratchSourceResourceArrayOutput {
	return i.ToGetTemplateScratchesScratchSourceResourceArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceResourceArray) ToGetTemplateScratchesScratchSourceResourceArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceResourceArrayOutput)
}

type GetTemplateScratchesScratchSourceResourceOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceResource)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceResourceOutput) ToGetTemplateScratchesScratchSourceResourceOutput() GetTemplateScratchesScratchSourceResourceOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceOutput) ToGetTemplateScratchesScratchSourceResourceOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceOutput {
	return o
}

// The ID of the Source Resource.
func (o GetTemplateScratchesScratchSourceResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of the Source resource.
func (o GetTemplateScratchesScratchSourceResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetTemplateScratchesScratchSourceResourceArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceResource)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceResourceArrayOutput) ToGetTemplateScratchesScratchSourceResourceArrayOutput() GetTemplateScratchesScratchSourceResourceArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceArrayOutput) ToGetTemplateScratchesScratchSourceResourceArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchSourceResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratchSourceResource {
		return vs[0].([]GetTemplateScratchesScratchSourceResource)[vs[1].(int)]
	}).(GetTemplateScratchesScratchSourceResourceOutput)
}

type GetTemplateScratchesScratchSourceResourceGroup struct {
	// The ID of the Source Resource Group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Source resource type filter list.
	ResourceTypeFilters []string `pulumi:"resourceTypeFilters"`
}

// GetTemplateScratchesScratchSourceResourceGroupInput is an input type that accepts GetTemplateScratchesScratchSourceResourceGroupArgs and GetTemplateScratchesScratchSourceResourceGroupOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceResourceGroupInput` via:
//
//          GetTemplateScratchesScratchSourceResourceGroupArgs{...}
type GetTemplateScratchesScratchSourceResourceGroupInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceResourceGroupOutput() GetTemplateScratchesScratchSourceResourceGroupOutput
	ToGetTemplateScratchesScratchSourceResourceGroupOutputWithContext(context.Context) GetTemplateScratchesScratchSourceResourceGroupOutput
}

type GetTemplateScratchesScratchSourceResourceGroupArgs struct {
	// The ID of the Source Resource Group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Source resource type filter list.
	ResourceTypeFilters pulumi.StringArrayInput `pulumi:"resourceTypeFilters"`
}

func (GetTemplateScratchesScratchSourceResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceGroup)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceResourceGroupArgs) ToGetTemplateScratchesScratchSourceResourceGroupOutput() GetTemplateScratchesScratchSourceResourceGroupOutput {
	return i.ToGetTemplateScratchesScratchSourceResourceGroupOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceResourceGroupArgs) ToGetTemplateScratchesScratchSourceResourceGroupOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceResourceGroupOutput)
}

// GetTemplateScratchesScratchSourceResourceGroupArrayInput is an input type that accepts GetTemplateScratchesScratchSourceResourceGroupArray and GetTemplateScratchesScratchSourceResourceGroupArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceResourceGroupArrayInput` via:
//
//          GetTemplateScratchesScratchSourceResourceGroupArray{ GetTemplateScratchesScratchSourceResourceGroupArgs{...} }
type GetTemplateScratchesScratchSourceResourceGroupArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceResourceGroupArrayOutput() GetTemplateScratchesScratchSourceResourceGroupArrayOutput
	ToGetTemplateScratchesScratchSourceResourceGroupArrayOutputWithContext(context.Context) GetTemplateScratchesScratchSourceResourceGroupArrayOutput
}

type GetTemplateScratchesScratchSourceResourceGroupArray []GetTemplateScratchesScratchSourceResourceGroupInput

func (GetTemplateScratchesScratchSourceResourceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceResourceGroup)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceResourceGroupArray) ToGetTemplateScratchesScratchSourceResourceGroupArrayOutput() GetTemplateScratchesScratchSourceResourceGroupArrayOutput {
	return i.ToGetTemplateScratchesScratchSourceResourceGroupArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceResourceGroupArray) ToGetTemplateScratchesScratchSourceResourceGroupArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceResourceGroupArrayOutput)
}

type GetTemplateScratchesScratchSourceResourceGroupOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceGroup)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceResourceGroupOutput) ToGetTemplateScratchesScratchSourceResourceGroupOutput() GetTemplateScratchesScratchSourceResourceGroupOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceGroupOutput) ToGetTemplateScratchesScratchSourceResourceGroupOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceGroupOutput {
	return o
}

// The ID of the Source Resource Group.
func (o GetTemplateScratchesScratchSourceResourceGroupOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceResourceGroup) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Source resource type filter list.
func (o GetTemplateScratchesScratchSourceResourceGroupOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceResourceGroup) []string { return v.ResourceTypeFilters }).(pulumi.StringArrayOutput)
}

type GetTemplateScratchesScratchSourceResourceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceResourceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceResourceGroup)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceResourceGroupArrayOutput) ToGetTemplateScratchesScratchSourceResourceGroupArrayOutput() GetTemplateScratchesScratchSourceResourceGroupArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceGroupArrayOutput) ToGetTemplateScratchesScratchSourceResourceGroupArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceResourceGroupArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceResourceGroupArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchSourceResourceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratchSourceResourceGroup {
		return vs[0].([]GetTemplateScratchesScratchSourceResourceGroup)[vs[1].(int)]
	}).(GetTemplateScratchesScratchSourceResourceGroupOutput)
}

type GetTemplateScratchesScratchSourceTag struct {
	// Source label.
	ResourceTags map[string]interface{} `pulumi:"resourceTags"`
	// Source resource type filter list.
	ResourceTypeFilters []string `pulumi:"resourceTypeFilters"`
}

// GetTemplateScratchesScratchSourceTagInput is an input type that accepts GetTemplateScratchesScratchSourceTagArgs and GetTemplateScratchesScratchSourceTagOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceTagInput` via:
//
//          GetTemplateScratchesScratchSourceTagArgs{...}
type GetTemplateScratchesScratchSourceTagInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceTagOutput() GetTemplateScratchesScratchSourceTagOutput
	ToGetTemplateScratchesScratchSourceTagOutputWithContext(context.Context) GetTemplateScratchesScratchSourceTagOutput
}

type GetTemplateScratchesScratchSourceTagArgs struct {
	// Source label.
	ResourceTags pulumi.MapInput `pulumi:"resourceTags"`
	// Source resource type filter list.
	ResourceTypeFilters pulumi.StringArrayInput `pulumi:"resourceTypeFilters"`
}

func (GetTemplateScratchesScratchSourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceTag)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceTagArgs) ToGetTemplateScratchesScratchSourceTagOutput() GetTemplateScratchesScratchSourceTagOutput {
	return i.ToGetTemplateScratchesScratchSourceTagOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceTagArgs) ToGetTemplateScratchesScratchSourceTagOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceTagOutput)
}

// GetTemplateScratchesScratchSourceTagArrayInput is an input type that accepts GetTemplateScratchesScratchSourceTagArray and GetTemplateScratchesScratchSourceTagArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchSourceTagArrayInput` via:
//
//          GetTemplateScratchesScratchSourceTagArray{ GetTemplateScratchesScratchSourceTagArgs{...} }
type GetTemplateScratchesScratchSourceTagArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchSourceTagArrayOutput() GetTemplateScratchesScratchSourceTagArrayOutput
	ToGetTemplateScratchesScratchSourceTagArrayOutputWithContext(context.Context) GetTemplateScratchesScratchSourceTagArrayOutput
}

type GetTemplateScratchesScratchSourceTagArray []GetTemplateScratchesScratchSourceTagInput

func (GetTemplateScratchesScratchSourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceTag)(nil)).Elem()
}

func (i GetTemplateScratchesScratchSourceTagArray) ToGetTemplateScratchesScratchSourceTagArrayOutput() GetTemplateScratchesScratchSourceTagArrayOutput {
	return i.ToGetTemplateScratchesScratchSourceTagArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchSourceTagArray) ToGetTemplateScratchesScratchSourceTagArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchSourceTagArrayOutput)
}

type GetTemplateScratchesScratchSourceTagOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchSourceTag)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceTagOutput) ToGetTemplateScratchesScratchSourceTagOutput() GetTemplateScratchesScratchSourceTagOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceTagOutput) ToGetTemplateScratchesScratchSourceTagOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceTagOutput {
	return o
}

// Source label.
func (o GetTemplateScratchesScratchSourceTagOutput) ResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceTag) map[string]interface{} { return v.ResourceTags }).(pulumi.MapOutput)
}

// Source resource type filter list.
func (o GetTemplateScratchesScratchSourceTagOutput) ResourceTypeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchSourceTag) []string { return v.ResourceTypeFilters }).(pulumi.StringArrayOutput)
}

type GetTemplateScratchesScratchSourceTagArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchSourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchSourceTag)(nil)).Elem()
}

func (o GetTemplateScratchesScratchSourceTagArrayOutput) ToGetTemplateScratchesScratchSourceTagArrayOutput() GetTemplateScratchesScratchSourceTagArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceTagArrayOutput) ToGetTemplateScratchesScratchSourceTagArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchSourceTagArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchSourceTagArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchSourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratchSourceTag {
		return vs[0].([]GetTemplateScratchesScratchSourceTag)[vs[1].(int)]
	}).(GetTemplateScratchesScratchSourceTagOutput)
}

type GetTemplateScratchesScratchStack struct {
	// The ID of the Resource stack.
	StackId string `pulumi:"stackId"`
}

// GetTemplateScratchesScratchStackInput is an input type that accepts GetTemplateScratchesScratchStackArgs and GetTemplateScratchesScratchStackOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchStackInput` via:
//
//          GetTemplateScratchesScratchStackArgs{...}
type GetTemplateScratchesScratchStackInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchStackOutput() GetTemplateScratchesScratchStackOutput
	ToGetTemplateScratchesScratchStackOutputWithContext(context.Context) GetTemplateScratchesScratchStackOutput
}

type GetTemplateScratchesScratchStackArgs struct {
	// The ID of the Resource stack.
	StackId pulumi.StringInput `pulumi:"stackId"`
}

func (GetTemplateScratchesScratchStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchStack)(nil)).Elem()
}

func (i GetTemplateScratchesScratchStackArgs) ToGetTemplateScratchesScratchStackOutput() GetTemplateScratchesScratchStackOutput {
	return i.ToGetTemplateScratchesScratchStackOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchStackArgs) ToGetTemplateScratchesScratchStackOutputWithContext(ctx context.Context) GetTemplateScratchesScratchStackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchStackOutput)
}

// GetTemplateScratchesScratchStackArrayInput is an input type that accepts GetTemplateScratchesScratchStackArray and GetTemplateScratchesScratchStackArrayOutput values.
// You can construct a concrete instance of `GetTemplateScratchesScratchStackArrayInput` via:
//
//          GetTemplateScratchesScratchStackArray{ GetTemplateScratchesScratchStackArgs{...} }
type GetTemplateScratchesScratchStackArrayInput interface {
	pulumi.Input

	ToGetTemplateScratchesScratchStackArrayOutput() GetTemplateScratchesScratchStackArrayOutput
	ToGetTemplateScratchesScratchStackArrayOutputWithContext(context.Context) GetTemplateScratchesScratchStackArrayOutput
}

type GetTemplateScratchesScratchStackArray []GetTemplateScratchesScratchStackInput

func (GetTemplateScratchesScratchStackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchStack)(nil)).Elem()
}

func (i GetTemplateScratchesScratchStackArray) ToGetTemplateScratchesScratchStackArrayOutput() GetTemplateScratchesScratchStackArrayOutput {
	return i.ToGetTemplateScratchesScratchStackArrayOutputWithContext(context.Background())
}

func (i GetTemplateScratchesScratchStackArray) ToGetTemplateScratchesScratchStackArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchStackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateScratchesScratchStackArrayOutput)
}

type GetTemplateScratchesScratchStackOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateScratchesScratchStack)(nil)).Elem()
}

func (o GetTemplateScratchesScratchStackOutput) ToGetTemplateScratchesScratchStackOutput() GetTemplateScratchesScratchStackOutput {
	return o
}

func (o GetTemplateScratchesScratchStackOutput) ToGetTemplateScratchesScratchStackOutputWithContext(ctx context.Context) GetTemplateScratchesScratchStackOutput {
	return o
}

// The ID of the Resource stack.
func (o GetTemplateScratchesScratchStackOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateScratchesScratchStack) string { return v.StackId }).(pulumi.StringOutput)
}

type GetTemplateScratchesScratchStackArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateScratchesScratchStackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateScratchesScratchStack)(nil)).Elem()
}

func (o GetTemplateScratchesScratchStackArrayOutput) ToGetTemplateScratchesScratchStackArrayOutput() GetTemplateScratchesScratchStackArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchStackArrayOutput) ToGetTemplateScratchesScratchStackArrayOutputWithContext(ctx context.Context) GetTemplateScratchesScratchStackArrayOutput {
	return o
}

func (o GetTemplateScratchesScratchStackArrayOutput) Index(i pulumi.IntInput) GetTemplateScratchesScratchStackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateScratchesScratchStack {
		return vs[0].([]GetTemplateScratchesScratchStack)[vs[1].(int)]
	}).(GetTemplateScratchesScratchStackOutput)
}

type GetTemplatesTemplate struct {
	// The ID of the change set.
	ChangeSetId string `pulumi:"changeSetId"`
	// The description of the template. The description can be up to 256 characters in length.
	Description string `pulumi:"description"`
	// The ID of the Template.
	Id string `pulumi:"id"`
	// Share Type.
	ShareType string `pulumi:"shareType"`
	// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	StackGroupName string `pulumi:"stackGroupName"`
	// The ID of the stack.
	StackId string `pulumi:"stackId"`
	// Tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
	TemplateBody string `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId string `pulumi:"templateId"`
	// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	TemplateName string `pulumi:"templateName"`
	// Template Version.
	TemplateVersion string `pulumi:"templateVersion"`
}

// GetTemplatesTemplateInput is an input type that accepts GetTemplatesTemplateArgs and GetTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateInput` via:
//
//          GetTemplatesTemplateArgs{...}
type GetTemplatesTemplateInput interface {
	pulumi.Input

	ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput
	ToGetTemplatesTemplateOutputWithContext(context.Context) GetTemplatesTemplateOutput
}

type GetTemplatesTemplateArgs struct {
	// The ID of the change set.
	ChangeSetId pulumi.StringInput `pulumi:"changeSetId"`
	// The description of the template. The description can be up to 256 characters in length.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Template.
	Id pulumi.StringInput `pulumi:"id"`
	// Share Type.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	StackGroupName pulumi.StringInput `pulumi:"stackGroupName"`
	// The ID of the stack.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// Tags.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// Template Version.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
}

func (GetTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return i.ToGetTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateOutput)
}

// GetTemplatesTemplateArrayInput is an input type that accepts GetTemplatesTemplateArray and GetTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateArrayInput` via:
//
//          GetTemplatesTemplateArray{ GetTemplatesTemplateArgs{...} }
type GetTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput
	ToGetTemplatesTemplateArrayOutputWithContext(context.Context) GetTemplatesTemplateArrayOutput
}

type GetTemplatesTemplateArray []GetTemplatesTemplateInput

func (GetTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return i.ToGetTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateArrayOutput)
}

type GetTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return o
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return o
}

// The ID of the change set.
func (o GetTemplatesTemplateOutput) ChangeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.ChangeSetId }).(pulumi.StringOutput)
}

// The description of the template. The description can be up to 256 characters in length.
func (o GetTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Template.
func (o GetTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// Share Type.
func (o GetTemplatesTemplateOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.ShareType }).(pulumi.StringOutput)
}

// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetTemplatesTemplateOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.StackGroupName }).(pulumi.StringOutput)
}

// The ID of the stack.
func (o GetTemplatesTemplateOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.StackId }).(pulumi.StringOutput)
}

// Tags.
func (o GetTemplatesTemplateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
func (o GetTemplatesTemplateOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateBody }).(pulumi.StringOutput)
}

// The ID of the template.
func (o GetTemplatesTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetTemplatesTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateName }).(pulumi.StringOutput)
}

// Template Version.
func (o GetTemplatesTemplateOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

type GetTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplatesTemplate {
		return vs[0].([]GetTemplatesTemplate)[vs[1].(int)]
	}).(GetTemplatesTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChangeSetParameterInput)(nil)).Elem(), ChangeSetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChangeSetParameterArrayInput)(nil)).Elem(), ChangeSetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackGroupParameterInput)(nil)).Elem(), StackGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackGroupParameterArrayInput)(nil)).Elem(), StackGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackInstanceParameterOverrideInput)(nil)).Elem(), StackInstanceParameterOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackInstanceParameterOverrideArrayInput)(nil)).Elem(), StackInstanceParameterOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackParameterInput)(nil)).Elem(), StackParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackParameterArrayInput)(nil)).Elem(), StackParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchPreferenceParameterInput)(nil)).Elem(), TemplateScratchPreferenceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchPreferenceParameterArrayInput)(nil)).Elem(), TemplateScratchPreferenceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceResourceInput)(nil)).Elem(), TemplateScratchSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceResourceArrayInput)(nil)).Elem(), TemplateScratchSourceResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceResourceGroupInput)(nil)).Elem(), TemplateScratchSourceResourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceResourceGroupPtrInput)(nil)).Elem(), TemplateScratchSourceResourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceTagInput)(nil)).Elem(), TemplateScratchSourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScratchSourceTagPtrInput)(nil)).Elem(), TemplateScratchSourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChangeSetsSetInput)(nil)).Elem(), GetChangeSetsSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChangeSetsSetArrayInput)(nil)).Elem(), GetChangeSetsSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChangeSetsSetParameterInput)(nil)).Elem(), GetChangeSetsSetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetChangeSetsSetParameterArrayInput)(nil)).Elem(), GetChangeSetsSetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackGroupsGroupInput)(nil)).Elem(), GetStackGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackGroupsGroupArrayInput)(nil)).Elem(), GetStackGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackGroupsGroupParameterInput)(nil)).Elem(), GetStackGroupsGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackGroupsGroupParameterArrayInput)(nil)).Elem(), GetStackGroupsGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackInstancesInstanceInput)(nil)).Elem(), GetStackInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackInstancesInstanceArrayInput)(nil)).Elem(), GetStackInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackInstancesInstanceParameterOverrideInput)(nil)).Elem(), GetStackInstancesInstanceParameterOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackInstancesInstanceParameterOverrideArrayInput)(nil)).Elem(), GetStackInstancesInstanceParameterOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStacksStackInput)(nil)).Elem(), GetStacksStackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStacksStackArrayInput)(nil)).Elem(), GetStacksStackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStacksStackParameterInput)(nil)).Elem(), GetStacksStackParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStacksStackParameterArrayInput)(nil)).Elem(), GetStacksStackParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchInput)(nil)).Elem(), GetTemplateScratchesScratchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchArrayInput)(nil)).Elem(), GetTemplateScratchesScratchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchPreferenceParameterInput)(nil)).Elem(), GetTemplateScratchesScratchPreferenceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchPreferenceParameterArrayInput)(nil)).Elem(), GetTemplateScratchesScratchPreferenceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceInput)(nil)).Elem(), GetTemplateScratchesScratchSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceArrayInput)(nil)).Elem(), GetTemplateScratchesScratchSourceResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceGroupInput)(nil)).Elem(), GetTemplateScratchesScratchSourceResourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceResourceGroupArrayInput)(nil)).Elem(), GetTemplateScratchesScratchSourceResourceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceTagInput)(nil)).Elem(), GetTemplateScratchesScratchSourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchSourceTagArrayInput)(nil)).Elem(), GetTemplateScratchesScratchSourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchStackInput)(nil)).Elem(), GetTemplateScratchesScratchStackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateScratchesScratchStackArrayInput)(nil)).Elem(), GetTemplateScratchesScratchStackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesTemplateInput)(nil)).Elem(), GetTemplatesTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesTemplateArrayInput)(nil)).Elem(), GetTemplatesTemplateArray{})
	pulumi.RegisterOutputType(ChangeSetParameterOutput{})
	pulumi.RegisterOutputType(ChangeSetParameterArrayOutput{})
	pulumi.RegisterOutputType(StackGroupParameterOutput{})
	pulumi.RegisterOutputType(StackGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(StackInstanceParameterOverrideOutput{})
	pulumi.RegisterOutputType(StackInstanceParameterOverrideArrayOutput{})
	pulumi.RegisterOutputType(StackParameterOutput{})
	pulumi.RegisterOutputType(StackParameterArrayOutput{})
	pulumi.RegisterOutputType(TemplateScratchPreferenceParameterOutput{})
	pulumi.RegisterOutputType(TemplateScratchPreferenceParameterArrayOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceResourceOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceResourceArrayOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceResourceGroupOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceResourceGroupPtrOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceTagOutput{})
	pulumi.RegisterOutputType(TemplateScratchSourceTagPtrOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetArrayOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetParameterOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetParameterArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupParameterOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(GetStackInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetStackInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetStackInstancesInstanceParameterOverrideOutput{})
	pulumi.RegisterOutputType(GetStackInstancesInstanceParameterOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetStacksStackOutput{})
	pulumi.RegisterOutputType(GetStacksStackArrayOutput{})
	pulumi.RegisterOutputType(GetStacksStackParameterOutput{})
	pulumi.RegisterOutputType(GetStacksStackParameterArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchPreferenceParameterOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchPreferenceParameterArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceResourceOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceResourceArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceResourceGroupOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceResourceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceTagOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchSourceTagArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchStackOutput{})
	pulumi.RegisterOutputType(GetTemplateScratchesScratchStackArrayOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateArrayOutput{})
}
