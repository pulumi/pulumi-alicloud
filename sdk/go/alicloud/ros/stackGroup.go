// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ROS Stack Group resource.
//
// Resource stack Group.
//
// For information about ROS Stack Group and how to use it, see [What is Stack Group](https://www.alibabacloud.com/help/en/doc-detail/151333.htm).
//
// > **NOTE:** Available since v1.107.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ros.NewStackGroup(ctx, "example", &ros.StackGroupArgs{
//				StackGroupName: pulumi.String("example_value"),
//				TemplateBody:   pulumi.String("    {\n    \\t\\\"ROSTemplateFormatVersion\\\": \\\"2015-09-01\\\"\n    }\n"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ROS Stack Group can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ros/stackGroup:StackGroup example <id>
// ```
type StackGroup struct {
	pulumi.CustomResourceState

	// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
	AdministrationRoleName pulumi.StringOutput `pulumi:"administrationRoleName"`
	// Automatic deployment setting information. Description
	// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
	AutoDeployment StackGroupAutoDeploymentPtrOutput `pulumi:"autoDeployment"`
	// The list of resource stack group options. The maximum length is 1.
	Capabilities pulumi.StringArrayOutput `pulumi:"capabilities"`
	// The description of the stack group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
	ExecutionRoleName pulumi.StringOutput `pulumi:"executionRoleName"`
	// Parameters See `parameters` below.
	Parameters StackGroupParameterArrayOutput `pulumi:"parameters"`
	// The permission model.
	PermissionModel pulumi.StringOutput `pulumi:"permissionModel"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The ID of stack group.
	StackGroupId pulumi.StringOutput `pulumi:"stackGroupId"`
	// StackGroupName
	StackGroupName pulumi.StringOutput `pulumi:"stackGroupName"`
	// The status of the stack group.
	Status pulumi.StringOutput `pulumi:"status"`
	// The label of the resource stack group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The template body.
	TemplateBody pulumi.StringOutput `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId pulumi.StringPtrOutput `pulumi:"templateId"`
	// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
	//
	// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
	TemplateUrl pulumi.StringPtrOutput `pulumi:"templateUrl"`
	// The version of the template.
	TemplateVersion pulumi.StringPtrOutput `pulumi:"templateVersion"`
}

// NewStackGroup registers a new resource with the given unique name, arguments, and options.
func NewStackGroup(ctx *pulumi.Context,
	name string, args *StackGroupArgs, opts ...pulumi.ResourceOption) (*StackGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StackGroupName == nil {
		return nil, errors.New("invalid value for required argument 'StackGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StackGroup
	err := ctx.RegisterResource("alicloud:ros/stackGroup:StackGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackGroup gets an existing StackGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackGroupState, opts ...pulumi.ResourceOption) (*StackGroup, error) {
	var resource StackGroup
	err := ctx.ReadResource("alicloud:ros/stackGroup:StackGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackGroup resources.
type stackGroupState struct {
	// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
	AdministrationRoleName *string `pulumi:"administrationRoleName"`
	// Automatic deployment setting information. Description
	// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
	AutoDeployment *StackGroupAutoDeployment `pulumi:"autoDeployment"`
	// The list of resource stack group options. The maximum length is 1.
	Capabilities []string `pulumi:"capabilities"`
	// The description of the stack group.
	Description *string `pulumi:"description"`
	// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
	ExecutionRoleName *string `pulumi:"executionRoleName"`
	// Parameters See `parameters` below.
	Parameters []StackGroupParameter `pulumi:"parameters"`
	// The permission model.
	PermissionModel *string `pulumi:"permissionModel"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of stack group.
	StackGroupId *string `pulumi:"stackGroupId"`
	// StackGroupName
	StackGroupName *string `pulumi:"stackGroupName"`
	// The status of the stack group.
	Status *string `pulumi:"status"`
	// The label of the resource stack group.
	Tags map[string]string `pulumi:"tags"`
	// The template body.
	TemplateBody *string `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId *string `pulumi:"templateId"`
	// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
	//
	// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
	TemplateUrl *string `pulumi:"templateUrl"`
	// The version of the template.
	TemplateVersion *string `pulumi:"templateVersion"`
}

type StackGroupState struct {
	// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
	AdministrationRoleName pulumi.StringPtrInput
	// Automatic deployment setting information. Description
	// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
	AutoDeployment StackGroupAutoDeploymentPtrInput
	// The list of resource stack group options. The maximum length is 1.
	Capabilities pulumi.StringArrayInput
	// The description of the stack group.
	Description pulumi.StringPtrInput
	// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
	ExecutionRoleName pulumi.StringPtrInput
	// Parameters See `parameters` below.
	Parameters StackGroupParameterArrayInput
	// The permission model.
	PermissionModel pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of stack group.
	StackGroupId pulumi.StringPtrInput
	// StackGroupName
	StackGroupName pulumi.StringPtrInput
	// The status of the stack group.
	Status pulumi.StringPtrInput
	// The label of the resource stack group.
	Tags pulumi.StringMapInput
	// The template body.
	TemplateBody pulumi.StringPtrInput
	// The ID of the template.
	TemplateId pulumi.StringPtrInput
	// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
	//
	// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
	TemplateUrl pulumi.StringPtrInput
	// The version of the template.
	TemplateVersion pulumi.StringPtrInput
}

func (StackGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackGroupState)(nil)).Elem()
}

type stackGroupArgs struct {
	// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
	AdministrationRoleName *string `pulumi:"administrationRoleName"`
	// Automatic deployment setting information. Description
	// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
	AutoDeployment *StackGroupAutoDeployment `pulumi:"autoDeployment"`
	// The list of resource stack group options. The maximum length is 1.
	Capabilities []string `pulumi:"capabilities"`
	// The description of the stack group.
	Description *string `pulumi:"description"`
	// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
	ExecutionRoleName *string `pulumi:"executionRoleName"`
	// Parameters See `parameters` below.
	Parameters []StackGroupParameter `pulumi:"parameters"`
	// The permission model.
	PermissionModel *string `pulumi:"permissionModel"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// StackGroupName
	StackGroupName string `pulumi:"stackGroupName"`
	// The label of the resource stack group.
	Tags map[string]string `pulumi:"tags"`
	// The template body.
	TemplateBody *string `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId *string `pulumi:"templateId"`
	// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
	//
	// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
	TemplateUrl *string `pulumi:"templateUrl"`
	// The version of the template.
	TemplateVersion *string `pulumi:"templateVersion"`
}

// The set of arguments for constructing a StackGroup resource.
type StackGroupArgs struct {
	// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
	AdministrationRoleName pulumi.StringPtrInput
	// Automatic deployment setting information. Description
	// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
	AutoDeployment StackGroupAutoDeploymentPtrInput
	// The list of resource stack group options. The maximum length is 1.
	Capabilities pulumi.StringArrayInput
	// The description of the stack group.
	Description pulumi.StringPtrInput
	// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
	ExecutionRoleName pulumi.StringPtrInput
	// Parameters See `parameters` below.
	Parameters StackGroupParameterArrayInput
	// The permission model.
	PermissionModel pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// StackGroupName
	StackGroupName pulumi.StringInput
	// The label of the resource stack group.
	Tags pulumi.StringMapInput
	// The template body.
	TemplateBody pulumi.StringPtrInput
	// The ID of the template.
	TemplateId pulumi.StringPtrInput
	// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
	//
	// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
	TemplateUrl pulumi.StringPtrInput
	// The version of the template.
	TemplateVersion pulumi.StringPtrInput
}

func (StackGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackGroupArgs)(nil)).Elem()
}

type StackGroupInput interface {
	pulumi.Input

	ToStackGroupOutput() StackGroupOutput
	ToStackGroupOutputWithContext(ctx context.Context) StackGroupOutput
}

func (*StackGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**StackGroup)(nil)).Elem()
}

func (i *StackGroup) ToStackGroupOutput() StackGroupOutput {
	return i.ToStackGroupOutputWithContext(context.Background())
}

func (i *StackGroup) ToStackGroupOutputWithContext(ctx context.Context) StackGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupOutput)
}

// StackGroupArrayInput is an input type that accepts StackGroupArray and StackGroupArrayOutput values.
// You can construct a concrete instance of `StackGroupArrayInput` via:
//
//	StackGroupArray{ StackGroupArgs{...} }
type StackGroupArrayInput interface {
	pulumi.Input

	ToStackGroupArrayOutput() StackGroupArrayOutput
	ToStackGroupArrayOutputWithContext(context.Context) StackGroupArrayOutput
}

type StackGroupArray []StackGroupInput

func (StackGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackGroup)(nil)).Elem()
}

func (i StackGroupArray) ToStackGroupArrayOutput() StackGroupArrayOutput {
	return i.ToStackGroupArrayOutputWithContext(context.Background())
}

func (i StackGroupArray) ToStackGroupArrayOutputWithContext(ctx context.Context) StackGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupArrayOutput)
}

// StackGroupMapInput is an input type that accepts StackGroupMap and StackGroupMapOutput values.
// You can construct a concrete instance of `StackGroupMapInput` via:
//
//	StackGroupMap{ "key": StackGroupArgs{...} }
type StackGroupMapInput interface {
	pulumi.Input

	ToStackGroupMapOutput() StackGroupMapOutput
	ToStackGroupMapOutputWithContext(context.Context) StackGroupMapOutput
}

type StackGroupMap map[string]StackGroupInput

func (StackGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackGroup)(nil)).Elem()
}

func (i StackGroupMap) ToStackGroupMapOutput() StackGroupMapOutput {
	return i.ToStackGroupMapOutputWithContext(context.Background())
}

func (i StackGroupMap) ToStackGroupMapOutputWithContext(ctx context.Context) StackGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupMapOutput)
}

type StackGroupOutput struct{ *pulumi.OutputState }

func (StackGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackGroup)(nil)).Elem()
}

func (o StackGroupOutput) ToStackGroupOutput() StackGroupOutput {
	return o
}

func (o StackGroupOutput) ToStackGroupOutputWithContext(ctx context.Context) StackGroupOutput {
	return o
}

// The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
func (o StackGroupOutput) AdministrationRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.AdministrationRoleName }).(pulumi.StringOutput)
}

// Automatic deployment setting information. Description
// This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
func (o StackGroupOutput) AutoDeployment() StackGroupAutoDeploymentPtrOutput {
	return o.ApplyT(func(v *StackGroup) StackGroupAutoDeploymentPtrOutput { return v.AutoDeployment }).(StackGroupAutoDeploymentPtrOutput)
}

// The list of resource stack group options. The maximum length is 1.
func (o StackGroupOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringArrayOutput { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// The description of the stack group.
func (o StackGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
func (o StackGroupOutput) ExecutionRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.ExecutionRoleName }).(pulumi.StringOutput)
}

// Parameters See `parameters` below.
func (o StackGroupOutput) Parameters() StackGroupParameterArrayOutput {
	return o.ApplyT(func(v *StackGroup) StackGroupParameterArrayOutput { return v.Parameters }).(StackGroupParameterArrayOutput)
}

// The permission model.
func (o StackGroupOutput) PermissionModel() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.PermissionModel }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o StackGroupOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of stack group.
func (o StackGroupOutput) StackGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.StackGroupId }).(pulumi.StringOutput)
}

// StackGroupName
func (o StackGroupOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.StackGroupName }).(pulumi.StringOutput)
}

// The status of the stack group.
func (o StackGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The label of the resource stack group.
func (o StackGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The template body.
func (o StackGroupOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringOutput { return v.TemplateBody }).(pulumi.StringOutput)
}

// The ID of the template.
func (o StackGroupOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringPtrOutput { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
//
// > **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
func (o StackGroupOutput) TemplateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringPtrOutput { return v.TemplateUrl }).(pulumi.StringPtrOutput)
}

// The version of the template.
func (o StackGroupOutput) TemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackGroup) pulumi.StringPtrOutput { return v.TemplateVersion }).(pulumi.StringPtrOutput)
}

type StackGroupArrayOutput struct{ *pulumi.OutputState }

func (StackGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackGroup)(nil)).Elem()
}

func (o StackGroupArrayOutput) ToStackGroupArrayOutput() StackGroupArrayOutput {
	return o
}

func (o StackGroupArrayOutput) ToStackGroupArrayOutputWithContext(ctx context.Context) StackGroupArrayOutput {
	return o
}

func (o StackGroupArrayOutput) Index(i pulumi.IntInput) StackGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StackGroup {
		return vs[0].([]*StackGroup)[vs[1].(int)]
	}).(StackGroupOutput)
}

type StackGroupMapOutput struct{ *pulumi.OutputState }

func (StackGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackGroup)(nil)).Elem()
}

func (o StackGroupMapOutput) ToStackGroupMapOutput() StackGroupMapOutput {
	return o
}

func (o StackGroupMapOutput) ToStackGroupMapOutputWithContext(ctx context.Context) StackGroupMapOutput {
	return o
}

func (o StackGroupMapOutput) MapIndex(k pulumi.StringInput) StackGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StackGroup {
		return vs[0].(map[string]*StackGroup)[vs[1].(string)]
	}).(StackGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StackGroupInput)(nil)).Elem(), &StackGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackGroupArrayInput)(nil)).Elem(), StackGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackGroupMapInput)(nil)).Elem(), StackGroupMap{})
	pulumi.RegisterOutputType(StackGroupOutput{})
	pulumi.RegisterOutputType(StackGroupArrayOutput{})
	pulumi.RegisterOutputType(StackGroupMapOutput{})
}
