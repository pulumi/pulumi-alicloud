// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a RAM Policy resource.
//
// For information about RAM Policy and how to use it, see [What is Policy](https://www.alibabacloud.com/help/en/ram/developer-reference/api-ram-2015-05-01-createpolicy).
//
// > **NOTE:** Available since v1.0.0.
//
// > **NOTE:** When you want to destroy this resource forcefully(means remove all the relationships associated with it automatically and then destroy it) without set `force`  with `true` at beginning, you need add `force = true` to configuration file and run `pulumi preview`, then you can delete resource forcefully.
//
// > **NOTE:** Each policy can own at most 5 versions and the oldest version will be removed after its version achieves 5.
//
// > **NOTE:** If the policy has multiple versions, all non-default versions will be deleted first when deleting policy.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ram"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a new RAM Policy.
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ram.NewPolicy(ctx, "policy", &ram.PolicyArgs{
//				PolicyName: pulumi.Sprintf("tf-example-%v", _default.Result),
//				PolicyDocument: pulumi.String(`  {
//	    \"Statement\": [
//	      {
//	        \"Action\": [
//	          \"oss:ListObjects\",
//	          \"oss:GetObject\"
//	        ],
//	        \"Effect\": \"Allow\",
//	        \"Resource\": [
//	          \"acs:oss:*:*:mybucket\",
//	          \"acs:oss:*:*:mybucket/*\"
//	        ]
//	      }
//	    ],
//	      \"Version\": \"1\"
//	  }
//
// `),
//
//				Description: pulumi.String("this is a policy test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RAM Policy can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ram/policy:Policy example <id>
// ```
type Policy struct {
	pulumi.CustomResourceState

	// Number of attachments of the policy.
	AttachmentCount pulumi.IntOutput `pulumi:"attachmentCount"`
	// (Available since v1.246.0) The create time of the policy.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The default version ID of the policy.
	DefaultVersion pulumi.StringOutput `pulumi:"defaultVersion"`
	// The description of the policy. It can be 1 to 1024 characters in length.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
	//
	// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
	Document pulumi.StringOutput `pulumi:"document"`
	// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument pulumi.StringOutput `pulumi:"policyDocument"`
	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName pulumi.StringOutput `pulumi:"policyName"`
	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// - `None`: Turn off the rotation mechanism.
	// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
	RotateStrategy pulumi.StringPtrOutput `pulumi:"rotateStrategy"`
	// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
	//
	// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Statements PolicyStatementArrayOutput `pulumi:"statements"`
	// The list of tags on the policy.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the policy.
	Type pulumi.StringOutput `pulumi:"type"`
	// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
	//
	// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Version pulumi.StringPtrOutput `pulumi:"version"`
	// The ID of the default policy version.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil {
		args = &PolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Policy
	err := ctx.RegisterResource("alicloud:ram/policy:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("alicloud:ram/policy:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	// Number of attachments of the policy.
	AttachmentCount *int `pulumi:"attachmentCount"`
	// (Available since v1.246.0) The create time of the policy.
	CreateTime *string `pulumi:"createTime"`
	// The default version ID of the policy.
	DefaultVersion *string `pulumi:"defaultVersion"`
	// The description of the policy. It can be 1 to 1024 characters in length.
	Description *string `pulumi:"description"`
	// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
	//
	// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
	Document *string `pulumi:"document"`
	// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
	Force *bool `pulumi:"force"`
	// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
	Name *string `pulumi:"name"`
	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument *string `pulumi:"policyDocument"`
	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName *string `pulumi:"policyName"`
	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// - `None`: Turn off the rotation mechanism.
	// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
	RotateStrategy *string `pulumi:"rotateStrategy"`
	// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
	//
	// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Statements []PolicyStatement `pulumi:"statements"`
	// The list of tags on the policy.
	Tags map[string]string `pulumi:"tags"`
	// The type of the policy.
	Type *string `pulumi:"type"`
	// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
	//
	// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Version *string `pulumi:"version"`
	// The ID of the default policy version.
	VersionId *string `pulumi:"versionId"`
}

type PolicyState struct {
	// Number of attachments of the policy.
	AttachmentCount pulumi.IntPtrInput
	// (Available since v1.246.0) The create time of the policy.
	CreateTime pulumi.StringPtrInput
	// The default version ID of the policy.
	DefaultVersion pulumi.StringPtrInput
	// The description of the policy. It can be 1 to 1024 characters in length.
	Description pulumi.StringPtrInput
	// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
	//
	// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
	Document pulumi.StringPtrInput
	// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
	Force pulumi.BoolPtrInput
	// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
	Name pulumi.StringPtrInput
	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument pulumi.StringPtrInput
	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName pulumi.StringPtrInput
	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// - `None`: Turn off the rotation mechanism.
	// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
	RotateStrategy pulumi.StringPtrInput
	// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
	//
	// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Statements PolicyStatementArrayInput
	// The list of tags on the policy.
	Tags pulumi.StringMapInput
	// The type of the policy.
	Type pulumi.StringPtrInput
	// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
	//
	// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Version pulumi.StringPtrInput
	// The ID of the default policy version.
	VersionId pulumi.StringPtrInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	// The description of the policy. It can be 1 to 1024 characters in length.
	Description *string `pulumi:"description"`
	// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
	//
	// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
	Document *string `pulumi:"document"`
	// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
	Force *bool `pulumi:"force"`
	// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
	Name *string `pulumi:"name"`
	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument *string `pulumi:"policyDocument"`
	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName *string `pulumi:"policyName"`
	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// - `None`: Turn off the rotation mechanism.
	// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
	RotateStrategy *string `pulumi:"rotateStrategy"`
	// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
	//
	// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Statements []PolicyStatement `pulumi:"statements"`
	// The list of tags on the policy.
	Tags map[string]string `pulumi:"tags"`
	// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
	//
	// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	// The description of the policy. It can be 1 to 1024 characters in length.
	Description pulumi.StringPtrInput
	// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
	//
	// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
	Document pulumi.StringPtrInput
	// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
	Force pulumi.BoolPtrInput
	// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
	//
	// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
	Name pulumi.StringPtrInput
	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument pulumi.StringPtrInput
	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName pulumi.StringPtrInput
	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// - `None`: Turn off the rotation mechanism.
	// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
	RotateStrategy pulumi.StringPtrInput
	// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
	//
	// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Statements PolicyStatementArrayInput
	// The list of tags on the policy.
	Tags pulumi.StringMapInput
	// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
	//
	// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
	Version pulumi.StringPtrInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}

type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(ctx context.Context) PolicyOutput
}

func (*Policy) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (i *Policy) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i *Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

// PolicyArrayInput is an input type that accepts PolicyArray and PolicyArrayOutput values.
// You can construct a concrete instance of `PolicyArrayInput` via:
//
//	PolicyArray{ PolicyArgs{...} }
type PolicyArrayInput interface {
	pulumi.Input

	ToPolicyArrayOutput() PolicyArrayOutput
	ToPolicyArrayOutputWithContext(context.Context) PolicyArrayOutput
}

type PolicyArray []PolicyInput

func (PolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (i PolicyArray) ToPolicyArrayOutput() PolicyArrayOutput {
	return i.ToPolicyArrayOutputWithContext(context.Background())
}

func (i PolicyArray) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyArrayOutput)
}

// PolicyMapInput is an input type that accepts PolicyMap and PolicyMapOutput values.
// You can construct a concrete instance of `PolicyMapInput` via:
//
//	PolicyMap{ "key": PolicyArgs{...} }
type PolicyMapInput interface {
	pulumi.Input

	ToPolicyMapOutput() PolicyMapOutput
	ToPolicyMapOutputWithContext(context.Context) PolicyMapOutput
}

type PolicyMap map[string]PolicyInput

func (PolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (i PolicyMap) ToPolicyMapOutput() PolicyMapOutput {
	return i.ToPolicyMapOutputWithContext(context.Background())
}

func (i PolicyMap) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMapOutput)
}

type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

// Number of attachments of the policy.
func (o PolicyOutput) AttachmentCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Policy) pulumi.IntOutput { return v.AttachmentCount }).(pulumi.IntOutput)
}

// (Available since v1.246.0) The create time of the policy.
func (o PolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The default version ID of the policy.
func (o PolicyOutput) DefaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.DefaultVersion }).(pulumi.StringOutput)
}

// The description of the policy. It can be 1 to 1024 characters in length.
func (o PolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Field `document` has been deprecated from provider version 1.114.0. New field `policyDocument` instead.
//
// Deprecated: Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead.
func (o PolicyOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Document }).(pulumi.StringOutput)
}

// Specifies whether to force delete the Policy. Default value: `false`. Valid values:
func (o PolicyOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.BoolPtrOutput { return v.Force }).(pulumi.BoolPtrOutput)
}

// Field `name` has been deprecated from provider version 1.114.0. New field `policyName` instead.
//
// Deprecated: Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead.
func (o PolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The content of the policy. The maximum length is 6144 bytes.
func (o PolicyOutput) PolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.PolicyDocument }).(pulumi.StringOutput)
}

// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
func (o PolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.PolicyName }).(pulumi.StringOutput)
}

// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
// - `None`: Turn off the rotation mechanism.
// - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
func (o PolicyOutput) RotateStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringPtrOutput { return v.RotateStrategy }).(pulumi.StringPtrOutput)
}

// Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
//
// Deprecated: Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.
func (o PolicyOutput) Statements() PolicyStatementArrayOutput {
	return o.ApplyT(func(v *Policy) PolicyStatementArrayOutput { return v.Statements }).(PolicyStatementArrayOutput)
}

// The list of tags on the policy.
func (o PolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the policy.
func (o PolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
//
// Deprecated: Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.
func (o PolicyOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

// The ID of the default policy version.
func (o PolicyOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

type PolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (o PolicyArrayOutput) ToPolicyArrayOutput() PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) Index(i pulumi.IntInput) PolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].([]*Policy)[vs[1].(int)]
	}).(PolicyOutput)
}

type PolicyMapOutput struct{ *pulumi.OutputState }

func (PolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (o PolicyMapOutput) ToPolicyMapOutput() PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) MapIndex(k pulumi.StringInput) PolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].(map[string]*Policy)[vs[1].(string)]
	}).(PolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInput)(nil)).Elem(), &Policy{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyArrayInput)(nil)).Elem(), PolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMapInput)(nil)).Elem(), PolicyMap{})
	pulumi.RegisterOutputType(PolicyOutput{})
	pulumi.RegisterOutputType(PolicyArrayOutput{})
	pulumi.RegisterOutputType(PolicyMapOutput{})
}
