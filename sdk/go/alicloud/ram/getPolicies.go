// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ram"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		policiesDs, err := ram.GetPolicies(ctx, &ram.GetPoliciesArgs{
// 			GroupName:  pulumi.StringRef("group1"),
// 			OutputFile: pulumi.StringRef("policies.txt"),
// 			Type:       pulumi.StringRef("System"),
// 			UserName:   pulumi.StringRef("user1"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstPolicyName", policiesDs.Policies[0].Name)
// 		return nil
// 	})
// }
// ```
func GetPolicies(ctx *pulumi.Context, args *GetPoliciesArgs, opts ...pulumi.InvokeOption) (*GetPoliciesResult, error) {
	var rv GetPoliciesResult
	err := ctx.Invoke("alicloud:ram/getPolicies:getPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicies.
type GetPoliciesArgs struct {
	// Default to `true`. Set it to true can output more details.
	EnableDetails *bool `pulumi:"enableDetails"`
	// Filter results by a specific group name. Returned policies are attached to the specified group.
	GroupName *string  `pulumi:"groupName"`
	Ids       []string `pulumi:"ids"`
	// A regex string to filter resulting policies by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// Filter results by a specific role name. Returned policies are attached to the specified role.
	RoleName *string `pulumi:"roleName"`
	// Filter results by a specific policy type. Valid values are `Custom` and `System`.
	Type *string `pulumi:"type"`
	// Filter results by a specific user name. Returned policies are attached to the specified user.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getPolicies.
type GetPoliciesResult struct {
	EnableDetails *bool   `pulumi:"enableDetails"`
	GroupName     *string `pulumi:"groupName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of ram group names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of policies. Each element contains the following attributes:
	Policies []GetPoliciesPolicy `pulumi:"policies"`
	RoleName *string             `pulumi:"roleName"`
	// Type of the policy.
	Type     *string `pulumi:"type"`
	UserName *string `pulumi:"userName"`
}

func GetPoliciesOutput(ctx *pulumi.Context, args GetPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPoliciesResult, error) {
			args := v.(GetPoliciesArgs)
			r, err := GetPolicies(ctx, &args, opts...)
			var s GetPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPoliciesResultOutput)
}

// A collection of arguments for invoking getPolicies.
type GetPoliciesOutputArgs struct {
	// Default to `true`. Set it to true can output more details.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// Filter results by a specific group name. Returned policies are attached to the specified group.
	GroupName pulumi.StringPtrInput   `pulumi:"groupName"`
	Ids       pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter resulting policies by name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Filter results by a specific role name. Returned policies are attached to the specified role.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
	// Filter results by a specific policy type. Valid values are `Custom` and `System`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Filter results by a specific user name. Returned policies are attached to the specified user.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getPolicies.
type GetPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesResult)(nil)).Elem()
}

func (o GetPoliciesResultOutput) ToGetPoliciesResultOutput() GetPoliciesResultOutput {
	return o
}

func (o GetPoliciesResultOutput) ToGetPoliciesResultOutputWithContext(ctx context.Context) GetPoliciesResultOutput {
	return o
}

func (o GetPoliciesResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

func (o GetPoliciesResultOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPoliciesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoliciesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPoliciesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of ram group names.
func (o GetPoliciesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoliciesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetPoliciesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of policies. Each element contains the following attributes:
func (o GetPoliciesResultOutput) Policies() GetPoliciesPolicyArrayOutput {
	return o.ApplyT(func(v GetPoliciesResult) []GetPoliciesPolicy { return v.Policies }).(GetPoliciesPolicyArrayOutput)
}

func (o GetPoliciesResultOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

// Type of the policy.
func (o GetPoliciesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetPoliciesResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoliciesResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPoliciesResultOutput{})
}
