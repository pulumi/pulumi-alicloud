// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyStatement struct {
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
	Actions []string `pulumi:"actions"`
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
	Effect string `pulumi:"effect"`
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone's Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
	Resources []string `pulumi:"resources"`
}

// PolicyStatementInput is an input type that accepts PolicyStatementArgs and PolicyStatementOutput values.
// You can construct a concrete instance of `PolicyStatementInput` via:
//
//          PolicyStatementArgs{...}
type PolicyStatementInput interface {
	pulumi.Input

	ToPolicyStatementOutput() PolicyStatementOutput
	ToPolicyStatementOutputWithContext(context.Context) PolicyStatementOutput
}

type PolicyStatementArgs struct {
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone's Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (PolicyStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatement)(nil)).Elem()
}

func (i PolicyStatementArgs) ToPolicyStatementOutput() PolicyStatementOutput {
	return i.ToPolicyStatementOutputWithContext(context.Background())
}

func (i PolicyStatementArgs) ToPolicyStatementOutputWithContext(ctx context.Context) PolicyStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStatementOutput)
}

// PolicyStatementArrayInput is an input type that accepts PolicyStatementArray and PolicyStatementArrayOutput values.
// You can construct a concrete instance of `PolicyStatementArrayInput` via:
//
//          PolicyStatementArray{ PolicyStatementArgs{...} }
type PolicyStatementArrayInput interface {
	pulumi.Input

	ToPolicyStatementArrayOutput() PolicyStatementArrayOutput
	ToPolicyStatementArrayOutputWithContext(context.Context) PolicyStatementArrayOutput
}

type PolicyStatementArray []PolicyStatementInput

func (PolicyStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStatement)(nil)).Elem()
}

func (i PolicyStatementArray) ToPolicyStatementArrayOutput() PolicyStatementArrayOutput {
	return i.ToPolicyStatementArrayOutputWithContext(context.Background())
}

func (i PolicyStatementArray) ToPolicyStatementArrayOutputWithContext(ctx context.Context) PolicyStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStatementArrayOutput)
}

type PolicyStatementOutput struct{ *pulumi.OutputState }

func (PolicyStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatement)(nil)).Elem()
}

func (o PolicyStatementOutput) ToPolicyStatementOutput() PolicyStatementOutput {
	return o
}

func (o PolicyStatementOutput) ToPolicyStatementOutputWithContext(ctx context.Context) PolicyStatementOutput {
	return o
}

// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
func (o PolicyStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
func (o PolicyStatementOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyStatement) string { return v.Effect }).(pulumi.StringOutput)
}

// (It has been deprecated from version 1.49.0, and use field 'document' to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone's Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
func (o PolicyStatementOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyStatement) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type PolicyStatementArrayOutput struct{ *pulumi.OutputState }

func (PolicyStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStatement)(nil)).Elem()
}

func (o PolicyStatementArrayOutput) ToPolicyStatementArrayOutput() PolicyStatementArrayOutput {
	return o
}

func (o PolicyStatementArrayOutput) ToPolicyStatementArrayOutputWithContext(ctx context.Context) PolicyStatementArrayOutput {
	return o
}

func (o PolicyStatementArrayOutput) Index(i pulumi.IntInput) PolicyStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyStatement {
		return vs[0].([]PolicyStatement)[vs[1].(int)]
	}).(PolicyStatementOutput)
}

type GetGroupsGroup struct {
	// Comments of the group.
	Comments string `pulumi:"comments"`
	// Name of the group.
	Name string `pulumi:"name"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//          GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// Comments of the group.
	Comments pulumi.StringInput `pulumi:"comments"`
	// Name of the group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//          GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// Comments of the group.
func (o GetGroupsGroupOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Comments }).(pulumi.StringOutput)
}

// Name of the group.
func (o GetGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetPoliciesPolicy struct {
	// Attachment count of the policy.
	AttachmentCount int `pulumi:"attachmentCount"`
	// Creation date of the policy.
	CreateDate string `pulumi:"createDate"`
	// Default version of the policy.
	DefaultVersion string `pulumi:"defaultVersion"`
	// Description of the policy.
	Description string `pulumi:"description"`
	// Policy document of the policy.
	Document string `pulumi:"document"`
	Id       string `pulumi:"id"`
	// Name of the policy.
	Name string `pulumi:"name"`
	// Policy document of the policy.
	PolicyDocument string `pulumi:"policyDocument"`
	// Name of the policy.
	PolicyName string `pulumi:"policyName"`
	// Filter results by a specific policy type. Valid values are `Custom` and `System`.
	Type string `pulumi:"type"`
	// Update date of the policy.
	UpdateDate string `pulumi:"updateDate"`
	// Filter results by a specific user name. Returned policies are attached to the specified user.
	UserName string `pulumi:"userName"`
	// The ID of default policy.
	VersionId string `pulumi:"versionId"`
}

// GetPoliciesPolicyInput is an input type that accepts GetPoliciesPolicyArgs and GetPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyInput` via:
//
//          GetPoliciesPolicyArgs{...}
type GetPoliciesPolicyInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput
	ToGetPoliciesPolicyOutputWithContext(context.Context) GetPoliciesPolicyOutput
}

type GetPoliciesPolicyArgs struct {
	// Attachment count of the policy.
	AttachmentCount pulumi.IntInput `pulumi:"attachmentCount"`
	// Creation date of the policy.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// Default version of the policy.
	DefaultVersion pulumi.StringInput `pulumi:"defaultVersion"`
	// Description of the policy.
	Description pulumi.StringInput `pulumi:"description"`
	// Policy document of the policy.
	Document pulumi.StringInput `pulumi:"document"`
	Id       pulumi.StringInput `pulumi:"id"`
	// Name of the policy.
	Name pulumi.StringInput `pulumi:"name"`
	// Policy document of the policy.
	PolicyDocument pulumi.StringInput `pulumi:"policyDocument"`
	// Name of the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// Filter results by a specific policy type. Valid values are `Custom` and `System`.
	Type pulumi.StringInput `pulumi:"type"`
	// Update date of the policy.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
	// Filter results by a specific user name. Returned policies are attached to the specified user.
	UserName pulumi.StringInput `pulumi:"userName"`
	// The ID of default policy.
	VersionId pulumi.StringInput `pulumi:"versionId"`
}

func (GetPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return i.ToGetPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOutput)
}

// GetPoliciesPolicyArrayInput is an input type that accepts GetPoliciesPolicyArray and GetPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyArrayInput` via:
//
//          GetPoliciesPolicyArray{ GetPoliciesPolicyArgs{...} }
type GetPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput
	ToGetPoliciesPolicyArrayOutputWithContext(context.Context) GetPoliciesPolicyArrayOutput
}

type GetPoliciesPolicyArray []GetPoliciesPolicyInput

func (GetPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return i.ToGetPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyArrayOutput)
}

type GetPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return o
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return o
}

// Attachment count of the policy.
func (o GetPoliciesPolicyOutput) AttachmentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) int { return v.AttachmentCount }).(pulumi.IntOutput)
}

// Creation date of the policy.
func (o GetPoliciesPolicyOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Default version of the policy.
func (o GetPoliciesPolicyOutput) DefaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.DefaultVersion }).(pulumi.StringOutput)
}

// Description of the policy.
func (o GetPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// Policy document of the policy.
func (o GetPoliciesPolicyOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Document }).(pulumi.StringOutput)
}

func (o GetPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the policy.
func (o GetPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// Policy document of the policy.
func (o GetPoliciesPolicyOutput) PolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.PolicyDocument }).(pulumi.StringOutput)
}

// Name of the policy.
func (o GetPoliciesPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// Filter results by a specific policy type. Valid values are `Custom` and `System`.
func (o GetPoliciesPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// Update date of the policy.
func (o GetPoliciesPolicyOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.UpdateDate }).(pulumi.StringOutput)
}

// Filter results by a specific user name. Returned policies are attached to the specified user.
func (o GetPoliciesPolicyOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.UserName }).(pulumi.StringOutput)
}

// The ID of default policy.
func (o GetPoliciesPolicyOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.VersionId }).(pulumi.StringOutput)
}

type GetPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicy {
		return vs[0].([]GetPoliciesPolicy)[vs[1].(int)]
	}).(GetPoliciesPolicyOutput)
}

type GetRolesRole struct {
	// Resource descriptor of the role.
	Arn string `pulumi:"arn"`
	// Authorization strategy of the role. This parameter is deprecated and replaced by `document`.
	AssumeRolePolicyDocument string `pulumi:"assumeRolePolicyDocument"`
	// Creation date of the role.
	CreateDate string `pulumi:"createDate"`
	// Description of the role.
	Description string `pulumi:"description"`
	// Authorization strategy of the role.
	Document string `pulumi:"document"`
	// Id of the role.
	Id string `pulumi:"id"`
	// Name of the role.
	Name string `pulumi:"name"`
	// Update date of the role.
	UpdateDate string `pulumi:"updateDate"`
}

// GetRolesRoleInput is an input type that accepts GetRolesRoleArgs and GetRolesRoleOutput values.
// You can construct a concrete instance of `GetRolesRoleInput` via:
//
//          GetRolesRoleArgs{...}
type GetRolesRoleInput interface {
	pulumi.Input

	ToGetRolesRoleOutput() GetRolesRoleOutput
	ToGetRolesRoleOutputWithContext(context.Context) GetRolesRoleOutput
}

type GetRolesRoleArgs struct {
	// Resource descriptor of the role.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Authorization strategy of the role. This parameter is deprecated and replaced by `document`.
	AssumeRolePolicyDocument pulumi.StringInput `pulumi:"assumeRolePolicyDocument"`
	// Creation date of the role.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// Description of the role.
	Description pulumi.StringInput `pulumi:"description"`
	// Authorization strategy of the role.
	Document pulumi.StringInput `pulumi:"document"`
	// Id of the role.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the role.
	Name pulumi.StringInput `pulumi:"name"`
	// Update date of the role.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
}

func (GetRolesRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return i.ToGetRolesRoleOutputWithContext(context.Background())
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleOutput)
}

// GetRolesRoleArrayInput is an input type that accepts GetRolesRoleArray and GetRolesRoleArrayOutput values.
// You can construct a concrete instance of `GetRolesRoleArrayInput` via:
//
//          GetRolesRoleArray{ GetRolesRoleArgs{...} }
type GetRolesRoleArrayInput interface {
	pulumi.Input

	ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput
	ToGetRolesRoleArrayOutputWithContext(context.Context) GetRolesRoleArrayOutput
}

type GetRolesRoleArray []GetRolesRoleInput

func (GetRolesRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return i.ToGetRolesRoleArrayOutputWithContext(context.Background())
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleArrayOutput)
}

type GetRolesRoleOutput struct{ *pulumi.OutputState }

func (GetRolesRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return o
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return o
}

// Resource descriptor of the role.
func (o GetRolesRoleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Arn }).(pulumi.StringOutput)
}

// Authorization strategy of the role. This parameter is deprecated and replaced by `document`.
func (o GetRolesRoleOutput) AssumeRolePolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.AssumeRolePolicyDocument }).(pulumi.StringOutput)
}

// Creation date of the role.
func (o GetRolesRoleOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Description of the role.
func (o GetRolesRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Description }).(pulumi.StringOutput)
}

// Authorization strategy of the role.
func (o GetRolesRoleOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Document }).(pulumi.StringOutput)
}

// Id of the role.
func (o GetRolesRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the role.
func (o GetRolesRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Name }).(pulumi.StringOutput)
}

// Update date of the role.
func (o GetRolesRoleOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.UpdateDate }).(pulumi.StringOutput)
}

type GetRolesRoleArrayOutput struct{ *pulumi.OutputState }

func (GetRolesRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) Index(i pulumi.IntInput) GetRolesRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesRole {
		return vs[0].([]GetRolesRole)[vs[1].(int)]
	}).(GetRolesRoleOutput)
}

type GetSamlProvidersProvider struct {
	// The Alibaba Cloud Resource Name (ARN) of the IdP.
	Arn string `pulumi:"arn"`
	// The description of SAML Provider.
	Description string `pulumi:"description"`
	// The encodedsaml metadata document.
	EncodedsamlMetadataDocument string `pulumi:"encodedsamlMetadataDocument"`
	// The ID of the SAML Provider.
	Id string `pulumi:"id"`
	// The saml provider name.
	SamlProviderName string `pulumi:"samlProviderName"`
	// The update time.
	UpdateDate string `pulumi:"updateDate"`
}

// GetSamlProvidersProviderInput is an input type that accepts GetSamlProvidersProviderArgs and GetSamlProvidersProviderOutput values.
// You can construct a concrete instance of `GetSamlProvidersProviderInput` via:
//
//          GetSamlProvidersProviderArgs{...}
type GetSamlProvidersProviderInput interface {
	pulumi.Input

	ToGetSamlProvidersProviderOutput() GetSamlProvidersProviderOutput
	ToGetSamlProvidersProviderOutputWithContext(context.Context) GetSamlProvidersProviderOutput
}

type GetSamlProvidersProviderArgs struct {
	// The Alibaba Cloud Resource Name (ARN) of the IdP.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The description of SAML Provider.
	Description pulumi.StringInput `pulumi:"description"`
	// The encodedsaml metadata document.
	EncodedsamlMetadataDocument pulumi.StringInput `pulumi:"encodedsamlMetadataDocument"`
	// The ID of the SAML Provider.
	Id pulumi.StringInput `pulumi:"id"`
	// The saml provider name.
	SamlProviderName pulumi.StringInput `pulumi:"samlProviderName"`
	// The update time.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
}

func (GetSamlProvidersProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlProvidersProvider)(nil)).Elem()
}

func (i GetSamlProvidersProviderArgs) ToGetSamlProvidersProviderOutput() GetSamlProvidersProviderOutput {
	return i.ToGetSamlProvidersProviderOutputWithContext(context.Background())
}

func (i GetSamlProvidersProviderArgs) ToGetSamlProvidersProviderOutputWithContext(ctx context.Context) GetSamlProvidersProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlProvidersProviderOutput)
}

// GetSamlProvidersProviderArrayInput is an input type that accepts GetSamlProvidersProviderArray and GetSamlProvidersProviderArrayOutput values.
// You can construct a concrete instance of `GetSamlProvidersProviderArrayInput` via:
//
//          GetSamlProvidersProviderArray{ GetSamlProvidersProviderArgs{...} }
type GetSamlProvidersProviderArrayInput interface {
	pulumi.Input

	ToGetSamlProvidersProviderArrayOutput() GetSamlProvidersProviderArrayOutput
	ToGetSamlProvidersProviderArrayOutputWithContext(context.Context) GetSamlProvidersProviderArrayOutput
}

type GetSamlProvidersProviderArray []GetSamlProvidersProviderInput

func (GetSamlProvidersProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlProvidersProvider)(nil)).Elem()
}

func (i GetSamlProvidersProviderArray) ToGetSamlProvidersProviderArrayOutput() GetSamlProvidersProviderArrayOutput {
	return i.ToGetSamlProvidersProviderArrayOutputWithContext(context.Background())
}

func (i GetSamlProvidersProviderArray) ToGetSamlProvidersProviderArrayOutputWithContext(ctx context.Context) GetSamlProvidersProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSamlProvidersProviderArrayOutput)
}

type GetSamlProvidersProviderOutput struct{ *pulumi.OutputState }

func (GetSamlProvidersProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSamlProvidersProvider)(nil)).Elem()
}

func (o GetSamlProvidersProviderOutput) ToGetSamlProvidersProviderOutput() GetSamlProvidersProviderOutput {
	return o
}

func (o GetSamlProvidersProviderOutput) ToGetSamlProvidersProviderOutputWithContext(ctx context.Context) GetSamlProvidersProviderOutput {
	return o
}

// The Alibaba Cloud Resource Name (ARN) of the IdP.
func (o GetSamlProvidersProviderOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.Arn }).(pulumi.StringOutput)
}

// The description of SAML Provider.
func (o GetSamlProvidersProviderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.Description }).(pulumi.StringOutput)
}

// The encodedsaml metadata document.
func (o GetSamlProvidersProviderOutput) EncodedsamlMetadataDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.EncodedsamlMetadataDocument }).(pulumi.StringOutput)
}

// The ID of the SAML Provider.
func (o GetSamlProvidersProviderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.Id }).(pulumi.StringOutput)
}

// The saml provider name.
func (o GetSamlProvidersProviderOutput) SamlProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.SamlProviderName }).(pulumi.StringOutput)
}

// The update time.
func (o GetSamlProvidersProviderOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSamlProvidersProvider) string { return v.UpdateDate }).(pulumi.StringOutput)
}

type GetSamlProvidersProviderArrayOutput struct{ *pulumi.OutputState }

func (GetSamlProvidersProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSamlProvidersProvider)(nil)).Elem()
}

func (o GetSamlProvidersProviderArrayOutput) ToGetSamlProvidersProviderArrayOutput() GetSamlProvidersProviderArrayOutput {
	return o
}

func (o GetSamlProvidersProviderArrayOutput) ToGetSamlProvidersProviderArrayOutputWithContext(ctx context.Context) GetSamlProvidersProviderArrayOutput {
	return o
}

func (o GetSamlProvidersProviderArrayOutput) Index(i pulumi.IntInput) GetSamlProvidersProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSamlProvidersProvider {
		return vs[0].([]GetSamlProvidersProvider)[vs[1].(int)]
	}).(GetSamlProvidersProviderOutput)
}

type GetUsersUser struct {
	// Creation date of the user.
	CreateDate string `pulumi:"createDate"`
	// The original id is user name, but it is user id in 1.37.0+.
	Id string `pulumi:"id"`
	// Last login date of the user. Removed from version 1.79.0.
	LastLoginDate string `pulumi:"lastLoginDate"`
	// Name of the user.
	Name string `pulumi:"name"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//          GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// Creation date of the user.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// The original id is user name, but it is user id in 1.37.0+.
	Id pulumi.StringInput `pulumi:"id"`
	// Last login date of the user. Removed from version 1.79.0.
	LastLoginDate pulumi.StringInput `pulumi:"lastLoginDate"`
	// Name of the user.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//          GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// Creation date of the user.
func (o GetUsersUserOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CreateDate }).(pulumi.StringOutput)
}

// The original id is user name, but it is user id in 1.37.0+.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// Last login date of the user. Removed from version 1.79.0.
func (o GetUsersUserOutput) LastLoginDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastLoginDate }).(pulumi.StringOutput)
}

// Name of the user.
func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementInput)(nil)).Elem(), PolicyStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementArrayInput)(nil)).Elem(), PolicyStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyInput)(nil)).Elem(), GetPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyArrayInput)(nil)).Elem(), GetPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleInput)(nil)).Elem(), GetRolesRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleArrayInput)(nil)).Elem(), GetRolesRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlProvidersProviderInput)(nil)).Elem(), GetSamlProvidersProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSamlProvidersProviderArrayInput)(nil)).Elem(), GetSamlProvidersProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(PolicyStatementOutput{})
	pulumi.RegisterOutputType(PolicyStatementArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetRolesRoleOutput{})
	pulumi.RegisterOutputType(GetRolesRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSamlProvidersProviderOutput{})
	pulumi.RegisterOutputType(GetSamlProvidersProviderArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
