// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterBootstrapAction struct {
	// bootstrap action args, e.g. "--a=b".
	Arg *string `pulumi:"arg"`
	// bootstrap action execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ . Default value: "FAILED_BLOCKED
	ExecutionFailStrategy *string `pulumi:"executionFailStrategy"`
	// bootstrap action execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ . Default value: "BEFORE_INSTALL".
	ExecutionMoment *string `pulumi:"executionMoment"`
	// bootstrap action execution target, you can specify the host group name, e.g. "coreGroup". If this is not specified, the bootstrap action execution target is whole cluster.
	ExecutionTarget *string `pulumi:"executionTarget"`
	// The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, "-", "_".
	Name *string `pulumi:"name"`
	// bootstrap action path, e.g. "oss://bucket/path".
	Path *string `pulumi:"path"`
}

// ClusterBootstrapActionInput is an input type that accepts ClusterBootstrapActionArgs and ClusterBootstrapActionOutput values.
// You can construct a concrete instance of `ClusterBootstrapActionInput` via:
//
//	ClusterBootstrapActionArgs{...}
type ClusterBootstrapActionInput interface {
	pulumi.Input

	ToClusterBootstrapActionOutput() ClusterBootstrapActionOutput
	ToClusterBootstrapActionOutputWithContext(context.Context) ClusterBootstrapActionOutput
}

type ClusterBootstrapActionArgs struct {
	// bootstrap action args, e.g. "--a=b".
	Arg pulumi.StringPtrInput `pulumi:"arg"`
	// bootstrap action execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ . Default value: "FAILED_BLOCKED
	ExecutionFailStrategy pulumi.StringPtrInput `pulumi:"executionFailStrategy"`
	// bootstrap action execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ . Default value: "BEFORE_INSTALL".
	ExecutionMoment pulumi.StringPtrInput `pulumi:"executionMoment"`
	// bootstrap action execution target, you can specify the host group name, e.g. "coreGroup". If this is not specified, the bootstrap action execution target is whole cluster.
	ExecutionTarget pulumi.StringPtrInput `pulumi:"executionTarget"`
	// The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, "-", "_".
	Name pulumi.StringPtrInput `pulumi:"name"`
	// bootstrap action path, e.g. "oss://bucket/path".
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ClusterBootstrapActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBootstrapAction)(nil)).Elem()
}

func (i ClusterBootstrapActionArgs) ToClusterBootstrapActionOutput() ClusterBootstrapActionOutput {
	return i.ToClusterBootstrapActionOutputWithContext(context.Background())
}

func (i ClusterBootstrapActionArgs) ToClusterBootstrapActionOutputWithContext(ctx context.Context) ClusterBootstrapActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBootstrapActionOutput)
}

// ClusterBootstrapActionArrayInput is an input type that accepts ClusterBootstrapActionArray and ClusterBootstrapActionArrayOutput values.
// You can construct a concrete instance of `ClusterBootstrapActionArrayInput` via:
//
//	ClusterBootstrapActionArray{ ClusterBootstrapActionArgs{...} }
type ClusterBootstrapActionArrayInput interface {
	pulumi.Input

	ToClusterBootstrapActionArrayOutput() ClusterBootstrapActionArrayOutput
	ToClusterBootstrapActionArrayOutputWithContext(context.Context) ClusterBootstrapActionArrayOutput
}

type ClusterBootstrapActionArray []ClusterBootstrapActionInput

func (ClusterBootstrapActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBootstrapAction)(nil)).Elem()
}

func (i ClusterBootstrapActionArray) ToClusterBootstrapActionArrayOutput() ClusterBootstrapActionArrayOutput {
	return i.ToClusterBootstrapActionArrayOutputWithContext(context.Background())
}

func (i ClusterBootstrapActionArray) ToClusterBootstrapActionArrayOutputWithContext(ctx context.Context) ClusterBootstrapActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBootstrapActionArrayOutput)
}

type ClusterBootstrapActionOutput struct{ *pulumi.OutputState }

func (ClusterBootstrapActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBootstrapAction)(nil)).Elem()
}

func (o ClusterBootstrapActionOutput) ToClusterBootstrapActionOutput() ClusterBootstrapActionOutput {
	return o
}

func (o ClusterBootstrapActionOutput) ToClusterBootstrapActionOutputWithContext(ctx context.Context) ClusterBootstrapActionOutput {
	return o
}

// bootstrap action args, e.g. "--a=b".
func (o ClusterBootstrapActionOutput) Arg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.Arg }).(pulumi.StringPtrOutput)
}

// bootstrap action execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ . Default value: "FAILED_BLOCKED
func (o ClusterBootstrapActionOutput) ExecutionFailStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.ExecutionFailStrategy }).(pulumi.StringPtrOutput)
}

// bootstrap action execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ . Default value: "BEFORE_INSTALL".
func (o ClusterBootstrapActionOutput) ExecutionMoment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.ExecutionMoment }).(pulumi.StringPtrOutput)
}

// bootstrap action execution target, you can specify the host group name, e.g. "coreGroup". If this is not specified, the bootstrap action execution target is whole cluster.
func (o ClusterBootstrapActionOutput) ExecutionTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.ExecutionTarget }).(pulumi.StringPtrOutput)
}

// The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, "-", "_".
func (o ClusterBootstrapActionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// bootstrap action path, e.g. "oss://bucket/path".
func (o ClusterBootstrapActionOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapAction) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ClusterBootstrapActionArrayOutput struct{ *pulumi.OutputState }

func (ClusterBootstrapActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBootstrapAction)(nil)).Elem()
}

func (o ClusterBootstrapActionArrayOutput) ToClusterBootstrapActionArrayOutput() ClusterBootstrapActionArrayOutput {
	return o
}

func (o ClusterBootstrapActionArrayOutput) ToClusterBootstrapActionArrayOutputWithContext(ctx context.Context) ClusterBootstrapActionArrayOutput {
	return o
}

func (o ClusterBootstrapActionArrayOutput) Index(i pulumi.IntInput) ClusterBootstrapActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBootstrapAction {
		return vs[0].([]ClusterBootstrapAction)[vs[1].(int)]
	}).(ClusterBootstrapActionOutput)
}

type ClusterConfig struct {
	// Custom configuration service config key, e.g. ’dfs.replication’.
	ConfigKey string `pulumi:"configKey"`
	// Custom configuration service config value, e.g. ’3’.
	ConfigValue string `pulumi:"configValue"`
	// Custom configuration service file name, e.g. ’hdfs-site’.
	FileName string `pulumi:"fileName"`
	// Custom configuration service name, e.g. ’HDFS’.
	ServiceName string `pulumi:"serviceName"`
}

// ClusterConfigInput is an input type that accepts ClusterConfigArgs and ClusterConfigOutput values.
// You can construct a concrete instance of `ClusterConfigInput` via:
//
//	ClusterConfigArgs{...}
type ClusterConfigInput interface {
	pulumi.Input

	ToClusterConfigOutput() ClusterConfigOutput
	ToClusterConfigOutputWithContext(context.Context) ClusterConfigOutput
}

type ClusterConfigArgs struct {
	// Custom configuration service config key, e.g. ’dfs.replication’.
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// Custom configuration service config value, e.g. ’3’.
	ConfigValue pulumi.StringInput `pulumi:"configValue"`
	// Custom configuration service file name, e.g. ’hdfs-site’.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// Custom configuration service name, e.g. ’HDFS’.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfig)(nil)).Elem()
}

func (i ClusterConfigArgs) ToClusterConfigOutput() ClusterConfigOutput {
	return i.ToClusterConfigOutputWithContext(context.Background())
}

func (i ClusterConfigArgs) ToClusterConfigOutputWithContext(ctx context.Context) ClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigOutput)
}

// ClusterConfigArrayInput is an input type that accepts ClusterConfigArray and ClusterConfigArrayOutput values.
// You can construct a concrete instance of `ClusterConfigArrayInput` via:
//
//	ClusterConfigArray{ ClusterConfigArgs{...} }
type ClusterConfigArrayInput interface {
	pulumi.Input

	ToClusterConfigArrayOutput() ClusterConfigArrayOutput
	ToClusterConfigArrayOutputWithContext(context.Context) ClusterConfigArrayOutput
}

type ClusterConfigArray []ClusterConfigInput

func (ClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConfig)(nil)).Elem()
}

func (i ClusterConfigArray) ToClusterConfigArrayOutput() ClusterConfigArrayOutput {
	return i.ToClusterConfigArrayOutputWithContext(context.Background())
}

func (i ClusterConfigArray) ToClusterConfigArrayOutputWithContext(ctx context.Context) ClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigArrayOutput)
}

type ClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfig)(nil)).Elem()
}

func (o ClusterConfigOutput) ToClusterConfigOutput() ClusterConfigOutput {
	return o
}

func (o ClusterConfigOutput) ToClusterConfigOutputWithContext(ctx context.Context) ClusterConfigOutput {
	return o
}

// Custom configuration service config key, e.g. ’dfs.replication’.
func (o ClusterConfigOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfig) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// Custom configuration service config value, e.g. ’3’.
func (o ClusterConfigOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfig) string { return v.ConfigValue }).(pulumi.StringOutput)
}

// Custom configuration service file name, e.g. ’hdfs-site’.
func (o ClusterConfigOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfig) string { return v.FileName }).(pulumi.StringOutput)
}

// Custom configuration service name, e.g. ’HDFS’.
func (o ClusterConfigOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfig) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConfig)(nil)).Elem()
}

func (o ClusterConfigArrayOutput) ToClusterConfigArrayOutput() ClusterConfigArrayOutput {
	return o
}

func (o ClusterConfigArrayOutput) ToClusterConfigArrayOutputWithContext(ctx context.Context) ClusterConfigArrayOutput {
	return o
}

func (o ClusterConfigArrayOutput) Index(i pulumi.IntInput) ClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConfig {
		return vs[0].([]ClusterConfig)[vs[1].(int)]
	}).(ClusterConfigOutput)
}

type ClusterHostGroup struct {
	// Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
	ChargeType *string `pulumi:"chargeType"`
	// Graceful decommission timeout, unit: seconds.
	DecommissionTimeout *int `pulumi:"decommissionTimeout"`
	// Data disk capacity.
	DiskCapacity *string `pulumi:"diskCapacity"`
	// Data disk count.
	DiskCount *string `pulumi:"diskCount"`
	// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
	DiskType *string `pulumi:"diskType"`
	// Enable hadoop cluster of task node graceful decommission, ’true’ or ‘false’ . Default value: false.
	EnableGracefulDecommission *bool   `pulumi:"enableGracefulDecommission"`
	GpuDriver                  *string `pulumi:"gpuDriver"`
	// host group name.
	HostGroupName *string `pulumi:"hostGroupName"`
	// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
	HostGroupType *string `pulumi:"hostGroupType"`
	// Instance list for cluster scale down. This value follows the json format, e.g. ["instanceId1","instanceId2"]. escape character for " is \".
	InstanceList *string `pulumi:"instanceList"`
	// Host Ecs instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Host number in this group.
	NodeCount *string `pulumi:"nodeCount"`
	// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
	Period *int `pulumi:"period"`
	// System disk capacity.
	SysDiskCapacity *string `pulumi:"sysDiskCapacity"`
	// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
	SysDiskType *string `pulumi:"sysDiskType"`
}

// ClusterHostGroupInput is an input type that accepts ClusterHostGroupArgs and ClusterHostGroupOutput values.
// You can construct a concrete instance of `ClusterHostGroupInput` via:
//
//	ClusterHostGroupArgs{...}
type ClusterHostGroupInput interface {
	pulumi.Input

	ToClusterHostGroupOutput() ClusterHostGroupOutput
	ToClusterHostGroupOutputWithContext(context.Context) ClusterHostGroupOutput
}

type ClusterHostGroupArgs struct {
	// Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// Graceful decommission timeout, unit: seconds.
	DecommissionTimeout pulumi.IntPtrInput `pulumi:"decommissionTimeout"`
	// Data disk capacity.
	DiskCapacity pulumi.StringPtrInput `pulumi:"diskCapacity"`
	// Data disk count.
	DiskCount pulumi.StringPtrInput `pulumi:"diskCount"`
	// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Enable hadoop cluster of task node graceful decommission, ’true’ or ‘false’ . Default value: false.
	EnableGracefulDecommission pulumi.BoolPtrInput   `pulumi:"enableGracefulDecommission"`
	GpuDriver                  pulumi.StringPtrInput `pulumi:"gpuDriver"`
	// host group name.
	HostGroupName pulumi.StringPtrInput `pulumi:"hostGroupName"`
	// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
	HostGroupType pulumi.StringPtrInput `pulumi:"hostGroupType"`
	// Instance list for cluster scale down. This value follows the json format, e.g. ["instanceId1","instanceId2"]. escape character for " is \".
	InstanceList pulumi.StringPtrInput `pulumi:"instanceList"`
	// Host Ecs instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Host number in this group.
	NodeCount pulumi.StringPtrInput `pulumi:"nodeCount"`
	// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// System disk capacity.
	SysDiskCapacity pulumi.StringPtrInput `pulumi:"sysDiskCapacity"`
	// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
	SysDiskType pulumi.StringPtrInput `pulumi:"sysDiskType"`
}

func (ClusterHostGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHostGroup)(nil)).Elem()
}

func (i ClusterHostGroupArgs) ToClusterHostGroupOutput() ClusterHostGroupOutput {
	return i.ToClusterHostGroupOutputWithContext(context.Background())
}

func (i ClusterHostGroupArgs) ToClusterHostGroupOutputWithContext(ctx context.Context) ClusterHostGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHostGroupOutput)
}

// ClusterHostGroupArrayInput is an input type that accepts ClusterHostGroupArray and ClusterHostGroupArrayOutput values.
// You can construct a concrete instance of `ClusterHostGroupArrayInput` via:
//
//	ClusterHostGroupArray{ ClusterHostGroupArgs{...} }
type ClusterHostGroupArrayInput interface {
	pulumi.Input

	ToClusterHostGroupArrayOutput() ClusterHostGroupArrayOutput
	ToClusterHostGroupArrayOutputWithContext(context.Context) ClusterHostGroupArrayOutput
}

type ClusterHostGroupArray []ClusterHostGroupInput

func (ClusterHostGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterHostGroup)(nil)).Elem()
}

func (i ClusterHostGroupArray) ToClusterHostGroupArrayOutput() ClusterHostGroupArrayOutput {
	return i.ToClusterHostGroupArrayOutputWithContext(context.Background())
}

func (i ClusterHostGroupArray) ToClusterHostGroupArrayOutputWithContext(ctx context.Context) ClusterHostGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHostGroupArrayOutput)
}

type ClusterHostGroupOutput struct{ *pulumi.OutputState }

func (ClusterHostGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHostGroup)(nil)).Elem()
}

func (o ClusterHostGroupOutput) ToClusterHostGroupOutput() ClusterHostGroupOutput {
	return o
}

func (o ClusterHostGroupOutput) ToClusterHostGroupOutputWithContext(ctx context.Context) ClusterHostGroupOutput {
	return o
}

// Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
func (o ClusterHostGroupOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
func (o ClusterHostGroupOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// Graceful decommission timeout, unit: seconds.
func (o ClusterHostGroupOutput) DecommissionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *int { return v.DecommissionTimeout }).(pulumi.IntPtrOutput)
}

// Data disk capacity.
func (o ClusterHostGroupOutput) DiskCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.DiskCapacity }).(pulumi.StringPtrOutput)
}

// Data disk count.
func (o ClusterHostGroupOutput) DiskCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.DiskCount }).(pulumi.StringPtrOutput)
}

// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
func (o ClusterHostGroupOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Enable hadoop cluster of task node graceful decommission, ’true’ or ‘false’ . Default value: false.
func (o ClusterHostGroupOutput) EnableGracefulDecommission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *bool { return v.EnableGracefulDecommission }).(pulumi.BoolPtrOutput)
}

func (o ClusterHostGroupOutput) GpuDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.GpuDriver }).(pulumi.StringPtrOutput)
}

// host group name.
func (o ClusterHostGroupOutput) HostGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.HostGroupName }).(pulumi.StringPtrOutput)
}

// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
func (o ClusterHostGroupOutput) HostGroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.HostGroupType }).(pulumi.StringPtrOutput)
}

// Instance list for cluster scale down. This value follows the json format, e.g. ["instanceId1","instanceId2"]. escape character for " is \".
func (o ClusterHostGroupOutput) InstanceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.InstanceList }).(pulumi.StringPtrOutput)
}

// Host Ecs instance type.
func (o ClusterHostGroupOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Host number in this group.
func (o ClusterHostGroupOutput) NodeCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.NodeCount }).(pulumi.StringPtrOutput)
}

// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
func (o ClusterHostGroupOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// System disk capacity.
func (o ClusterHostGroupOutput) SysDiskCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.SysDiskCapacity }).(pulumi.StringPtrOutput)
}

// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
func (o ClusterHostGroupOutput) SysDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHostGroup) *string { return v.SysDiskType }).(pulumi.StringPtrOutput)
}

type ClusterHostGroupArrayOutput struct{ *pulumi.OutputState }

func (ClusterHostGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterHostGroup)(nil)).Elem()
}

func (o ClusterHostGroupArrayOutput) ToClusterHostGroupArrayOutput() ClusterHostGroupArrayOutput {
	return o
}

func (o ClusterHostGroupArrayOutput) ToClusterHostGroupArrayOutputWithContext(ctx context.Context) ClusterHostGroupArrayOutput {
	return o
}

func (o ClusterHostGroupArrayOutput) Index(i pulumi.IntInput) ClusterHostGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterHostGroup {
		return vs[0].([]ClusterHostGroup)[vs[1].(int)]
	}).(ClusterHostGroupOutput)
}

type ClusterMetaStoreConf struct {
	// Custom rds database password.
	DbPassword string `pulumi:"dbPassword"`
	// Custom rds database connection url.
	DbUrl string `pulumi:"dbUrl"`
	// Custom rds database user name.
	DbUserName string `pulumi:"dbUserName"`
}

// ClusterMetaStoreConfInput is an input type that accepts ClusterMetaStoreConfArgs and ClusterMetaStoreConfOutput values.
// You can construct a concrete instance of `ClusterMetaStoreConfInput` via:
//
//	ClusterMetaStoreConfArgs{...}
type ClusterMetaStoreConfInput interface {
	pulumi.Input

	ToClusterMetaStoreConfOutput() ClusterMetaStoreConfOutput
	ToClusterMetaStoreConfOutputWithContext(context.Context) ClusterMetaStoreConfOutput
}

type ClusterMetaStoreConfArgs struct {
	// Custom rds database password.
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// Custom rds database connection url.
	DbUrl pulumi.StringInput `pulumi:"dbUrl"`
	// Custom rds database user name.
	DbUserName pulumi.StringInput `pulumi:"dbUserName"`
}

func (ClusterMetaStoreConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetaStoreConf)(nil)).Elem()
}

func (i ClusterMetaStoreConfArgs) ToClusterMetaStoreConfOutput() ClusterMetaStoreConfOutput {
	return i.ToClusterMetaStoreConfOutputWithContext(context.Background())
}

func (i ClusterMetaStoreConfArgs) ToClusterMetaStoreConfOutputWithContext(ctx context.Context) ClusterMetaStoreConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetaStoreConfOutput)
}

func (i ClusterMetaStoreConfArgs) ToClusterMetaStoreConfPtrOutput() ClusterMetaStoreConfPtrOutput {
	return i.ToClusterMetaStoreConfPtrOutputWithContext(context.Background())
}

func (i ClusterMetaStoreConfArgs) ToClusterMetaStoreConfPtrOutputWithContext(ctx context.Context) ClusterMetaStoreConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetaStoreConfOutput).ToClusterMetaStoreConfPtrOutputWithContext(ctx)
}

// ClusterMetaStoreConfPtrInput is an input type that accepts ClusterMetaStoreConfArgs, ClusterMetaStoreConfPtr and ClusterMetaStoreConfPtrOutput values.
// You can construct a concrete instance of `ClusterMetaStoreConfPtrInput` via:
//
//	        ClusterMetaStoreConfArgs{...}
//
//	or:
//
//	        nil
type ClusterMetaStoreConfPtrInput interface {
	pulumi.Input

	ToClusterMetaStoreConfPtrOutput() ClusterMetaStoreConfPtrOutput
	ToClusterMetaStoreConfPtrOutputWithContext(context.Context) ClusterMetaStoreConfPtrOutput
}

type clusterMetaStoreConfPtrType ClusterMetaStoreConfArgs

func ClusterMetaStoreConfPtr(v *ClusterMetaStoreConfArgs) ClusterMetaStoreConfPtrInput {
	return (*clusterMetaStoreConfPtrType)(v)
}

func (*clusterMetaStoreConfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetaStoreConf)(nil)).Elem()
}

func (i *clusterMetaStoreConfPtrType) ToClusterMetaStoreConfPtrOutput() ClusterMetaStoreConfPtrOutput {
	return i.ToClusterMetaStoreConfPtrOutputWithContext(context.Background())
}

func (i *clusterMetaStoreConfPtrType) ToClusterMetaStoreConfPtrOutputWithContext(ctx context.Context) ClusterMetaStoreConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetaStoreConfPtrOutput)
}

type ClusterMetaStoreConfOutput struct{ *pulumi.OutputState }

func (ClusterMetaStoreConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetaStoreConf)(nil)).Elem()
}

func (o ClusterMetaStoreConfOutput) ToClusterMetaStoreConfOutput() ClusterMetaStoreConfOutput {
	return o
}

func (o ClusterMetaStoreConfOutput) ToClusterMetaStoreConfOutputWithContext(ctx context.Context) ClusterMetaStoreConfOutput {
	return o
}

func (o ClusterMetaStoreConfOutput) ToClusterMetaStoreConfPtrOutput() ClusterMetaStoreConfPtrOutput {
	return o.ToClusterMetaStoreConfPtrOutputWithContext(context.Background())
}

func (o ClusterMetaStoreConfOutput) ToClusterMetaStoreConfPtrOutputWithContext(ctx context.Context) ClusterMetaStoreConfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMetaStoreConf) *ClusterMetaStoreConf {
		return &v
	}).(ClusterMetaStoreConfPtrOutput)
}

// Custom rds database password.
func (o ClusterMetaStoreConfOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetaStoreConf) string { return v.DbPassword }).(pulumi.StringOutput)
}

// Custom rds database connection url.
func (o ClusterMetaStoreConfOutput) DbUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetaStoreConf) string { return v.DbUrl }).(pulumi.StringOutput)
}

// Custom rds database user name.
func (o ClusterMetaStoreConfOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetaStoreConf) string { return v.DbUserName }).(pulumi.StringOutput)
}

type ClusterMetaStoreConfPtrOutput struct{ *pulumi.OutputState }

func (ClusterMetaStoreConfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetaStoreConf)(nil)).Elem()
}

func (o ClusterMetaStoreConfPtrOutput) ToClusterMetaStoreConfPtrOutput() ClusterMetaStoreConfPtrOutput {
	return o
}

func (o ClusterMetaStoreConfPtrOutput) ToClusterMetaStoreConfPtrOutputWithContext(ctx context.Context) ClusterMetaStoreConfPtrOutput {
	return o
}

func (o ClusterMetaStoreConfPtrOutput) Elem() ClusterMetaStoreConfOutput {
	return o.ApplyT(func(v *ClusterMetaStoreConf) ClusterMetaStoreConf {
		if v != nil {
			return *v
		}
		var ret ClusterMetaStoreConf
		return ret
	}).(ClusterMetaStoreConfOutput)
}

// Custom rds database password.
func (o ClusterMetaStoreConfPtrOutput) DbPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMetaStoreConf) *string {
		if v == nil {
			return nil
		}
		return &v.DbPassword
	}).(pulumi.StringPtrOutput)
}

// Custom rds database connection url.
func (o ClusterMetaStoreConfPtrOutput) DbUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMetaStoreConf) *string {
		if v == nil {
			return nil
		}
		return &v.DbUrl
	}).(pulumi.StringPtrOutput)
}

// Custom rds database user name.
func (o ClusterMetaStoreConfPtrOutput) DbUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMetaStoreConf) *string {
		if v == nil {
			return nil
		}
		return &v.DbUserName
	}).(pulumi.StringPtrOutput)
}

type ClusterModifyClusterServiceConfig struct {
	// Cluster service configuration modification comment, e.g. "Modify tez configuration".
	Comment *string `pulumi:"comment"`
	// Cluster service configuration modification params, e.g. ’{"hdfs-site":{"dfs.replication":"3"}}’.
	ConfigParams string `pulumi:"configParams"`
	// Cluster service configuration modification type.
	ConfigType *string `pulumi:"configType"`
	// Cluster service configuration modification custom params, e.g. ’{"tez-site":{"key":{"Value":"value"}}}’.
	CustomConfigParams *string `pulumi:"customConfigParams"`
	// Cluster service configuration modification related gateway cluster id list.
	GatewayClusterIdLists []string `pulumi:"gatewayClusterIdLists"`
	// Cluster service configuration modification node group id, e.g. ’G-XXX’.
	GroupId *string `pulumi:"groupId"`
	// Cluster service configuration modification host instance id, e.g. ’i-bp146tnrkq4tcxxxxx’.
	HostInstanceId *string `pulumi:"hostInstanceId"`
	// Cluster service configuration modification refresh host config, ’true’ or ’false’.
	RefreshHostConfig *bool `pulumi:"refreshHostConfig"`
	// Custom configuration service name, e.g. ’HDFS’.
	ServiceName string `pulumi:"serviceName"`
}

// ClusterModifyClusterServiceConfigInput is an input type that accepts ClusterModifyClusterServiceConfigArgs and ClusterModifyClusterServiceConfigOutput values.
// You can construct a concrete instance of `ClusterModifyClusterServiceConfigInput` via:
//
//	ClusterModifyClusterServiceConfigArgs{...}
type ClusterModifyClusterServiceConfigInput interface {
	pulumi.Input

	ToClusterModifyClusterServiceConfigOutput() ClusterModifyClusterServiceConfigOutput
	ToClusterModifyClusterServiceConfigOutputWithContext(context.Context) ClusterModifyClusterServiceConfigOutput
}

type ClusterModifyClusterServiceConfigArgs struct {
	// Cluster service configuration modification comment, e.g. "Modify tez configuration".
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Cluster service configuration modification params, e.g. ’{"hdfs-site":{"dfs.replication":"3"}}’.
	ConfigParams pulumi.StringInput `pulumi:"configParams"`
	// Cluster service configuration modification type.
	ConfigType pulumi.StringPtrInput `pulumi:"configType"`
	// Cluster service configuration modification custom params, e.g. ’{"tez-site":{"key":{"Value":"value"}}}’.
	CustomConfigParams pulumi.StringPtrInput `pulumi:"customConfigParams"`
	// Cluster service configuration modification related gateway cluster id list.
	GatewayClusterIdLists pulumi.StringArrayInput `pulumi:"gatewayClusterIdLists"`
	// Cluster service configuration modification node group id, e.g. ’G-XXX’.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Cluster service configuration modification host instance id, e.g. ’i-bp146tnrkq4tcxxxxx’.
	HostInstanceId pulumi.StringPtrInput `pulumi:"hostInstanceId"`
	// Cluster service configuration modification refresh host config, ’true’ or ’false’.
	RefreshHostConfig pulumi.BoolPtrInput `pulumi:"refreshHostConfig"`
	// Custom configuration service name, e.g. ’HDFS’.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ClusterModifyClusterServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterModifyClusterServiceConfig)(nil)).Elem()
}

func (i ClusterModifyClusterServiceConfigArgs) ToClusterModifyClusterServiceConfigOutput() ClusterModifyClusterServiceConfigOutput {
	return i.ToClusterModifyClusterServiceConfigOutputWithContext(context.Background())
}

func (i ClusterModifyClusterServiceConfigArgs) ToClusterModifyClusterServiceConfigOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterModifyClusterServiceConfigOutput)
}

func (i ClusterModifyClusterServiceConfigArgs) ToClusterModifyClusterServiceConfigPtrOutput() ClusterModifyClusterServiceConfigPtrOutput {
	return i.ToClusterModifyClusterServiceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterModifyClusterServiceConfigArgs) ToClusterModifyClusterServiceConfigPtrOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterModifyClusterServiceConfigOutput).ToClusterModifyClusterServiceConfigPtrOutputWithContext(ctx)
}

// ClusterModifyClusterServiceConfigPtrInput is an input type that accepts ClusterModifyClusterServiceConfigArgs, ClusterModifyClusterServiceConfigPtr and ClusterModifyClusterServiceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterModifyClusterServiceConfigPtrInput` via:
//
//	        ClusterModifyClusterServiceConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterModifyClusterServiceConfigPtrInput interface {
	pulumi.Input

	ToClusterModifyClusterServiceConfigPtrOutput() ClusterModifyClusterServiceConfigPtrOutput
	ToClusterModifyClusterServiceConfigPtrOutputWithContext(context.Context) ClusterModifyClusterServiceConfigPtrOutput
}

type clusterModifyClusterServiceConfigPtrType ClusterModifyClusterServiceConfigArgs

func ClusterModifyClusterServiceConfigPtr(v *ClusterModifyClusterServiceConfigArgs) ClusterModifyClusterServiceConfigPtrInput {
	return (*clusterModifyClusterServiceConfigPtrType)(v)
}

func (*clusterModifyClusterServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterModifyClusterServiceConfig)(nil)).Elem()
}

func (i *clusterModifyClusterServiceConfigPtrType) ToClusterModifyClusterServiceConfigPtrOutput() ClusterModifyClusterServiceConfigPtrOutput {
	return i.ToClusterModifyClusterServiceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterModifyClusterServiceConfigPtrType) ToClusterModifyClusterServiceConfigPtrOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterModifyClusterServiceConfigPtrOutput)
}

type ClusterModifyClusterServiceConfigOutput struct{ *pulumi.OutputState }

func (ClusterModifyClusterServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterModifyClusterServiceConfig)(nil)).Elem()
}

func (o ClusterModifyClusterServiceConfigOutput) ToClusterModifyClusterServiceConfigOutput() ClusterModifyClusterServiceConfigOutput {
	return o
}

func (o ClusterModifyClusterServiceConfigOutput) ToClusterModifyClusterServiceConfigOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigOutput {
	return o
}

func (o ClusterModifyClusterServiceConfigOutput) ToClusterModifyClusterServiceConfigPtrOutput() ClusterModifyClusterServiceConfigPtrOutput {
	return o.ToClusterModifyClusterServiceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterModifyClusterServiceConfigOutput) ToClusterModifyClusterServiceConfigPtrOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterModifyClusterServiceConfig) *ClusterModifyClusterServiceConfig {
		return &v
	}).(ClusterModifyClusterServiceConfigPtrOutput)
}

// Cluster service configuration modification comment, e.g. "Modify tez configuration".
func (o ClusterModifyClusterServiceConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification params, e.g. ’{"hdfs-site":{"dfs.replication":"3"}}’.
func (o ClusterModifyClusterServiceConfigOutput) ConfigParams() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) string { return v.ConfigParams }).(pulumi.StringOutput)
}

// Cluster service configuration modification type.
func (o ClusterModifyClusterServiceConfigOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *string { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification custom params, e.g. ’{"tez-site":{"key":{"Value":"value"}}}’.
func (o ClusterModifyClusterServiceConfigOutput) CustomConfigParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *string { return v.CustomConfigParams }).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification related gateway cluster id list.
func (o ClusterModifyClusterServiceConfigOutput) GatewayClusterIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) []string { return v.GatewayClusterIdLists }).(pulumi.StringArrayOutput)
}

// Cluster service configuration modification node group id, e.g. ’G-XXX’.
func (o ClusterModifyClusterServiceConfigOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification host instance id, e.g. ’i-bp146tnrkq4tcxxxxx’.
func (o ClusterModifyClusterServiceConfigOutput) HostInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *string { return v.HostInstanceId }).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification refresh host config, ’true’ or ’false’.
func (o ClusterModifyClusterServiceConfigOutput) RefreshHostConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) *bool { return v.RefreshHostConfig }).(pulumi.BoolPtrOutput)
}

// Custom configuration service name, e.g. ’HDFS’.
func (o ClusterModifyClusterServiceConfigOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterModifyClusterServiceConfig) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ClusterModifyClusterServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterModifyClusterServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterModifyClusterServiceConfig)(nil)).Elem()
}

func (o ClusterModifyClusterServiceConfigPtrOutput) ToClusterModifyClusterServiceConfigPtrOutput() ClusterModifyClusterServiceConfigPtrOutput {
	return o
}

func (o ClusterModifyClusterServiceConfigPtrOutput) ToClusterModifyClusterServiceConfigPtrOutputWithContext(ctx context.Context) ClusterModifyClusterServiceConfigPtrOutput {
	return o
}

func (o ClusterModifyClusterServiceConfigPtrOutput) Elem() ClusterModifyClusterServiceConfigOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) ClusterModifyClusterServiceConfig {
		if v != nil {
			return *v
		}
		var ret ClusterModifyClusterServiceConfig
		return ret
	}).(ClusterModifyClusterServiceConfigOutput)
}

// Cluster service configuration modification comment, e.g. "Modify tez configuration".
func (o ClusterModifyClusterServiceConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification params, e.g. ’{"hdfs-site":{"dfs.replication":"3"}}’.
func (o ClusterModifyClusterServiceConfigPtrOutput) ConfigParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigParams
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification type.
func (o ClusterModifyClusterServiceConfigPtrOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConfigType
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification custom params, e.g. ’{"tez-site":{"key":{"Value":"value"}}}’.
func (o ClusterModifyClusterServiceConfigPtrOutput) CustomConfigParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfigParams
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification related gateway cluster id list.
func (o ClusterModifyClusterServiceConfigPtrOutput) GatewayClusterIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) []string {
		if v == nil {
			return nil
		}
		return v.GatewayClusterIdLists
	}).(pulumi.StringArrayOutput)
}

// Cluster service configuration modification node group id, e.g. ’G-XXX’.
func (o ClusterModifyClusterServiceConfigPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification host instance id, e.g. ’i-bp146tnrkq4tcxxxxx’.
func (o ClusterModifyClusterServiceConfigPtrOutput) HostInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return v.HostInstanceId
	}).(pulumi.StringPtrOutput)
}

// Cluster service configuration modification refresh host config, ’true’ or ’false’.
func (o ClusterModifyClusterServiceConfigPtrOutput) RefreshHostConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RefreshHostConfig
	}).(pulumi.BoolPtrOutput)
}

// Custom configuration service name, e.g. ’HDFS’.
func (o ClusterModifyClusterServiceConfigPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterModifyClusterServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type GetClustersCluster struct {
	// Cluster connection information.
	AccessInfos []GetClustersClusterAccessInfo `pulumi:"accessInfos"`
	// Whether flexible expansion is allowed.
	AutoScalingAllowed bool `pulumi:"autoScalingAllowed"`
	// Whether to allow expansion by load.
	AutoScalingByLoadAllowed bool `pulumi:"autoScalingByLoadAllowed"`
	// Whether to enable elastic expansion.
	AutoScalingEnable bool `pulumi:"autoScalingEnable"`
	// Whether to allow the use of elastic scaling bidding instances.
	AutoScalingSpotWithLimitAllowed bool `pulumi:"autoScalingSpotWithLimitAllowed"`
	// List of boot actions.
	BootstrapActionLists []GetClustersClusterBootstrapActionList `pulumi:"bootstrapActionLists"`
	// The result of the boot operation.
	BootstrapFailed bool `pulumi:"bootstrapFailed"`
	// The ID of the associated cluster.
	ClusterId string `pulumi:"clusterId"`
	// The name of the associated cluster.
	ClusterName string `pulumi:"clusterName"`
	// Cluster tag, no need to pay attention.
	CreateResource string `pulumi:"createResource"`
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// How to create a cluster.
	CreateType string `pulumi:"createType"`
	// The hosting type of the cluster.
	DepositType string `pulumi:"depositType"`
	// High security cluster.
	EasEnable bool `pulumi:"easEnable"`
	// Timeout time.
	ExpiredTime string `pulumi:"expiredTime"`
	// Additional information for Stack.
	ExtraInfo           string `pulumi:"extraInfo"`
	HasUncompletedOrder bool   `pulumi:"hasUncompletedOrder"`
	// High availability cluster.
	HighAvailabilityEnable bool `pulumi:"highAvailabilityEnable"`
	// List of cluster machine groups.
	HostGroupLists []GetClustersClusterHostGroupList `pulumi:"hostGroupLists"`
	// Machine pool information.
	HostPoolInfos []GetClustersClusterHostPoolInfo `pulumi:"hostPoolInfos"`
	Id            string                           `pulumi:"id"`
	// The ID of the image used to create the cluster.
	ImageId string `pulumi:"imageId"`
	// Whether to use Hive local Metabase.
	LocalMetaDb bool `pulumi:"localMetaDb"`
	// The host type of the cluster. The default is ECS.
	MachineType string `pulumi:"machineType"`
	// Metadata type:
	MetaStoreType string `pulumi:"metaStoreType"`
	// Cluster network type.
	NetType string `pulumi:"netType"`
	// The payment type of the resource.
	PaymentType string `pulumi:"paymentType"`
	// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
	Period int `pulumi:"period"`
	// The information of the primary cluster associated with the Gateway.
	RelateClusterInfos []GetClustersClusterRelateClusterInfo `pulumi:"relateClusterInfos"`
	// Whether to allow disk expansion:
	ResizeDiskEnable bool `pulumi:"resizeDiskEnable"`
	// The time (in seconds) that has been running.
	RunningTime int `pulumi:"runningTime"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// Service list.
	SoftwareInfos []GetClustersClusterSoftwareInfo `pulumi:"softwareInfos"`
	// Cluster startup time.
	StartTime string `pulumi:"startTime"`
	// The cluster status.
	Status string `pulumi:"status"`
	// Cluster stop time.
	StopTime string `pulumi:"stopTime"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Disk type.
	Type string `pulumi:"type"`
	// The EMR permission name used.
	UserDefinedEmrEcsRole string `pulumi:"userDefinedEmrEcsRole"`
	// The user ID.
	UserId string `pulumi:"userId"`
	// The VPC ID.
	VpcId string `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetClustersClusterInput is an input type that accepts GetClustersClusterArgs and GetClustersClusterOutput values.
// You can construct a concrete instance of `GetClustersClusterInput` via:
//
//	GetClustersClusterArgs{...}
type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	// Cluster connection information.
	AccessInfos GetClustersClusterAccessInfoArrayInput `pulumi:"accessInfos"`
	// Whether flexible expansion is allowed.
	AutoScalingAllowed pulumi.BoolInput `pulumi:"autoScalingAllowed"`
	// Whether to allow expansion by load.
	AutoScalingByLoadAllowed pulumi.BoolInput `pulumi:"autoScalingByLoadAllowed"`
	// Whether to enable elastic expansion.
	AutoScalingEnable pulumi.BoolInput `pulumi:"autoScalingEnable"`
	// Whether to allow the use of elastic scaling bidding instances.
	AutoScalingSpotWithLimitAllowed pulumi.BoolInput `pulumi:"autoScalingSpotWithLimitAllowed"`
	// List of boot actions.
	BootstrapActionLists GetClustersClusterBootstrapActionListArrayInput `pulumi:"bootstrapActionLists"`
	// The result of the boot operation.
	BootstrapFailed pulumi.BoolInput `pulumi:"bootstrapFailed"`
	// The ID of the associated cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the associated cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Cluster tag, no need to pay attention.
	CreateResource pulumi.StringInput `pulumi:"createResource"`
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// How to create a cluster.
	CreateType pulumi.StringInput `pulumi:"createType"`
	// The hosting type of the cluster.
	DepositType pulumi.StringInput `pulumi:"depositType"`
	// High security cluster.
	EasEnable pulumi.BoolInput `pulumi:"easEnable"`
	// Timeout time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Additional information for Stack.
	ExtraInfo           pulumi.StringInput `pulumi:"extraInfo"`
	HasUncompletedOrder pulumi.BoolInput   `pulumi:"hasUncompletedOrder"`
	// High availability cluster.
	HighAvailabilityEnable pulumi.BoolInput `pulumi:"highAvailabilityEnable"`
	// List of cluster machine groups.
	HostGroupLists GetClustersClusterHostGroupListArrayInput `pulumi:"hostGroupLists"`
	// Machine pool information.
	HostPoolInfos GetClustersClusterHostPoolInfoArrayInput `pulumi:"hostPoolInfos"`
	Id            pulumi.StringInput                       `pulumi:"id"`
	// The ID of the image used to create the cluster.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Whether to use Hive local Metabase.
	LocalMetaDb pulumi.BoolInput `pulumi:"localMetaDb"`
	// The host type of the cluster. The default is ECS.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Metadata type:
	MetaStoreType pulumi.StringInput `pulumi:"metaStoreType"`
	// Cluster network type.
	NetType pulumi.StringInput `pulumi:"netType"`
	// The payment type of the resource.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
	Period pulumi.IntInput `pulumi:"period"`
	// The information of the primary cluster associated with the Gateway.
	RelateClusterInfos GetClustersClusterRelateClusterInfoArrayInput `pulumi:"relateClusterInfos"`
	// Whether to allow disk expansion:
	ResizeDiskEnable pulumi.BoolInput `pulumi:"resizeDiskEnable"`
	// The time (in seconds) that has been running.
	RunningTime pulumi.IntInput `pulumi:"runningTime"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// Service list.
	SoftwareInfos GetClustersClusterSoftwareInfoArrayInput `pulumi:"softwareInfos"`
	// Cluster startup time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The cluster status.
	Status pulumi.StringInput `pulumi:"status"`
	// Cluster stop time.
	StopTime pulumi.StringInput `pulumi:"stopTime"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Disk type.
	Type pulumi.StringInput `pulumi:"type"`
	// The EMR permission name used.
	UserDefinedEmrEcsRole pulumi.StringInput `pulumi:"userDefinedEmrEcsRole"`
	// The user ID.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

// GetClustersClusterArrayInput is an input type that accepts GetClustersClusterArray and GetClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterArrayInput` via:
//
//	GetClustersClusterArray{ GetClustersClusterArgs{...} }
type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

// Cluster connection information.
func (o GetClustersClusterOutput) AccessInfos() GetClustersClusterAccessInfoArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterAccessInfo { return v.AccessInfos }).(GetClustersClusterAccessInfoArrayOutput)
}

// Whether flexible expansion is allowed.
func (o GetClustersClusterOutput) AutoScalingAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.AutoScalingAllowed }).(pulumi.BoolOutput)
}

// Whether to allow expansion by load.
func (o GetClustersClusterOutput) AutoScalingByLoadAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.AutoScalingByLoadAllowed }).(pulumi.BoolOutput)
}

// Whether to enable elastic expansion.
func (o GetClustersClusterOutput) AutoScalingEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.AutoScalingEnable }).(pulumi.BoolOutput)
}

// Whether to allow the use of elastic scaling bidding instances.
func (o GetClustersClusterOutput) AutoScalingSpotWithLimitAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.AutoScalingSpotWithLimitAllowed }).(pulumi.BoolOutput)
}

// List of boot actions.
func (o GetClustersClusterOutput) BootstrapActionLists() GetClustersClusterBootstrapActionListArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterBootstrapActionList { return v.BootstrapActionLists }).(GetClustersClusterBootstrapActionListArrayOutput)
}

// The result of the boot operation.
func (o GetClustersClusterOutput) BootstrapFailed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.BootstrapFailed }).(pulumi.BoolOutput)
}

// The ID of the associated cluster.
func (o GetClustersClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The name of the associated cluster.
func (o GetClustersClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Cluster tag, no need to pay attention.
func (o GetClustersClusterOutput) CreateResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreateResource }).(pulumi.StringOutput)
}

// Creation time.
func (o GetClustersClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreateTime }).(pulumi.StringOutput)
}

// How to create a cluster.
func (o GetClustersClusterOutput) CreateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreateType }).(pulumi.StringOutput)
}

// The hosting type of the cluster.
func (o GetClustersClusterOutput) DepositType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.DepositType }).(pulumi.StringOutput)
}

// High security cluster.
func (o GetClustersClusterOutput) EasEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.EasEnable }).(pulumi.BoolOutput)
}

// Timeout time.
func (o GetClustersClusterOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Additional information for Stack.
func (o GetClustersClusterOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ExtraInfo }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) HasUncompletedOrder() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.HasUncompletedOrder }).(pulumi.BoolOutput)
}

// High availability cluster.
func (o GetClustersClusterOutput) HighAvailabilityEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.HighAvailabilityEnable }).(pulumi.BoolOutput)
}

// List of cluster machine groups.
func (o GetClustersClusterOutput) HostGroupLists() GetClustersClusterHostGroupListArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterHostGroupList { return v.HostGroupLists }).(GetClustersClusterHostGroupListArrayOutput)
}

// Machine pool information.
func (o GetClustersClusterOutput) HostPoolInfos() GetClustersClusterHostPoolInfoArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterHostPoolInfo { return v.HostPoolInfos }).(GetClustersClusterHostPoolInfoArrayOutput)
}

func (o GetClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the image used to create the cluster.
func (o GetClustersClusterOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ImageId }).(pulumi.StringOutput)
}

// Whether to use Hive local Metabase.
func (o GetClustersClusterOutput) LocalMetaDb() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.LocalMetaDb }).(pulumi.BoolOutput)
}

// The host type of the cluster. The default is ECS.
func (o GetClustersClusterOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.MachineType }).(pulumi.StringOutput)
}

// Metadata type:
func (o GetClustersClusterOutput) MetaStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.MetaStoreType }).(pulumi.StringOutput)
}

// Cluster network type.
func (o GetClustersClusterOutput) NetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.NetType }).(pulumi.StringOutput)
}

// The payment type of the resource.
func (o GetClustersClusterOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
func (o GetClustersClusterOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.Period }).(pulumi.IntOutput)
}

// The information of the primary cluster associated with the Gateway.
func (o GetClustersClusterOutput) RelateClusterInfos() GetClustersClusterRelateClusterInfoArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterRelateClusterInfo { return v.RelateClusterInfos }).(GetClustersClusterRelateClusterInfoArrayOutput)
}

// Whether to allow disk expansion:
func (o GetClustersClusterOutput) ResizeDiskEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersCluster) bool { return v.ResizeDiskEnable }).(pulumi.BoolOutput)
}

// The time (in seconds) that has been running.
func (o GetClustersClusterOutput) RunningTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.RunningTime }).(pulumi.IntOutput)
}

// The ID of the security group.
func (o GetClustersClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the security group.
func (o GetClustersClusterOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// Service list.
func (o GetClustersClusterOutput) SoftwareInfos() GetClustersClusterSoftwareInfoArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterSoftwareInfo { return v.SoftwareInfos }).(GetClustersClusterSoftwareInfoArrayOutput)
}

// Cluster startup time.
func (o GetClustersClusterOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.StartTime }).(pulumi.StringOutput)
}

// The cluster status.
func (o GetClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

// Cluster stop time.
func (o GetClustersClusterOutput) StopTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.StopTime }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetClustersClusterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersCluster) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Disk type.
func (o GetClustersClusterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Type }).(pulumi.StringOutput)
}

// The EMR permission name used.
func (o GetClustersClusterOutput) UserDefinedEmrEcsRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.UserDefinedEmrEcsRole }).(pulumi.StringOutput)
}

// The user ID.
func (o GetClustersClusterOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.UserId }).(pulumi.StringOutput)
}

// The VPC ID.
func (o GetClustersClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetClustersClusterOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The zone ID.
func (o GetClustersClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetClustersClusterAccessInfo struct {
	// Link address information list of ZooKeeper.
	ZkLinks []GetClustersClusterAccessInfoZkLink `pulumi:"zkLinks"`
}

// GetClustersClusterAccessInfoInput is an input type that accepts GetClustersClusterAccessInfoArgs and GetClustersClusterAccessInfoOutput values.
// You can construct a concrete instance of `GetClustersClusterAccessInfoInput` via:
//
//	GetClustersClusterAccessInfoArgs{...}
type GetClustersClusterAccessInfoInput interface {
	pulumi.Input

	ToGetClustersClusterAccessInfoOutput() GetClustersClusterAccessInfoOutput
	ToGetClustersClusterAccessInfoOutputWithContext(context.Context) GetClustersClusterAccessInfoOutput
}

type GetClustersClusterAccessInfoArgs struct {
	// Link address information list of ZooKeeper.
	ZkLinks GetClustersClusterAccessInfoZkLinkArrayInput `pulumi:"zkLinks"`
}

func (GetClustersClusterAccessInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterAccessInfo)(nil)).Elem()
}

func (i GetClustersClusterAccessInfoArgs) ToGetClustersClusterAccessInfoOutput() GetClustersClusterAccessInfoOutput {
	return i.ToGetClustersClusterAccessInfoOutputWithContext(context.Background())
}

func (i GetClustersClusterAccessInfoArgs) ToGetClustersClusterAccessInfoOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterAccessInfoOutput)
}

// GetClustersClusterAccessInfoArrayInput is an input type that accepts GetClustersClusterAccessInfoArray and GetClustersClusterAccessInfoArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterAccessInfoArrayInput` via:
//
//	GetClustersClusterAccessInfoArray{ GetClustersClusterAccessInfoArgs{...} }
type GetClustersClusterAccessInfoArrayInput interface {
	pulumi.Input

	ToGetClustersClusterAccessInfoArrayOutput() GetClustersClusterAccessInfoArrayOutput
	ToGetClustersClusterAccessInfoArrayOutputWithContext(context.Context) GetClustersClusterAccessInfoArrayOutput
}

type GetClustersClusterAccessInfoArray []GetClustersClusterAccessInfoInput

func (GetClustersClusterAccessInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterAccessInfo)(nil)).Elem()
}

func (i GetClustersClusterAccessInfoArray) ToGetClustersClusterAccessInfoArrayOutput() GetClustersClusterAccessInfoArrayOutput {
	return i.ToGetClustersClusterAccessInfoArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterAccessInfoArray) ToGetClustersClusterAccessInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterAccessInfoArrayOutput)
}

type GetClustersClusterAccessInfoOutput struct{ *pulumi.OutputState }

func (GetClustersClusterAccessInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterAccessInfo)(nil)).Elem()
}

func (o GetClustersClusterAccessInfoOutput) ToGetClustersClusterAccessInfoOutput() GetClustersClusterAccessInfoOutput {
	return o
}

func (o GetClustersClusterAccessInfoOutput) ToGetClustersClusterAccessInfoOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoOutput {
	return o
}

// Link address information list of ZooKeeper.
func (o GetClustersClusterAccessInfoOutput) ZkLinks() GetClustersClusterAccessInfoZkLinkArrayOutput {
	return o.ApplyT(func(v GetClustersClusterAccessInfo) []GetClustersClusterAccessInfoZkLink { return v.ZkLinks }).(GetClustersClusterAccessInfoZkLinkArrayOutput)
}

type GetClustersClusterAccessInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterAccessInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterAccessInfo)(nil)).Elem()
}

func (o GetClustersClusterAccessInfoArrayOutput) ToGetClustersClusterAccessInfoArrayOutput() GetClustersClusterAccessInfoArrayOutput {
	return o
}

func (o GetClustersClusterAccessInfoArrayOutput) ToGetClustersClusterAccessInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoArrayOutput {
	return o
}

func (o GetClustersClusterAccessInfoArrayOutput) Index(i pulumi.IntInput) GetClustersClusterAccessInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterAccessInfo {
		return vs[0].([]GetClustersClusterAccessInfo)[vs[1].(int)]
	}).(GetClustersClusterAccessInfoOutput)
}

type GetClustersClusterAccessInfoZkLink struct {
	// The access link address of ZooKeeper.
	Link string `pulumi:"link"`
	// The port of ZooKeeper.
	Port string `pulumi:"port"`
}

// GetClustersClusterAccessInfoZkLinkInput is an input type that accepts GetClustersClusterAccessInfoZkLinkArgs and GetClustersClusterAccessInfoZkLinkOutput values.
// You can construct a concrete instance of `GetClustersClusterAccessInfoZkLinkInput` via:
//
//	GetClustersClusterAccessInfoZkLinkArgs{...}
type GetClustersClusterAccessInfoZkLinkInput interface {
	pulumi.Input

	ToGetClustersClusterAccessInfoZkLinkOutput() GetClustersClusterAccessInfoZkLinkOutput
	ToGetClustersClusterAccessInfoZkLinkOutputWithContext(context.Context) GetClustersClusterAccessInfoZkLinkOutput
}

type GetClustersClusterAccessInfoZkLinkArgs struct {
	// The access link address of ZooKeeper.
	Link pulumi.StringInput `pulumi:"link"`
	// The port of ZooKeeper.
	Port pulumi.StringInput `pulumi:"port"`
}

func (GetClustersClusterAccessInfoZkLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterAccessInfoZkLink)(nil)).Elem()
}

func (i GetClustersClusterAccessInfoZkLinkArgs) ToGetClustersClusterAccessInfoZkLinkOutput() GetClustersClusterAccessInfoZkLinkOutput {
	return i.ToGetClustersClusterAccessInfoZkLinkOutputWithContext(context.Background())
}

func (i GetClustersClusterAccessInfoZkLinkArgs) ToGetClustersClusterAccessInfoZkLinkOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoZkLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterAccessInfoZkLinkOutput)
}

// GetClustersClusterAccessInfoZkLinkArrayInput is an input type that accepts GetClustersClusterAccessInfoZkLinkArray and GetClustersClusterAccessInfoZkLinkArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterAccessInfoZkLinkArrayInput` via:
//
//	GetClustersClusterAccessInfoZkLinkArray{ GetClustersClusterAccessInfoZkLinkArgs{...} }
type GetClustersClusterAccessInfoZkLinkArrayInput interface {
	pulumi.Input

	ToGetClustersClusterAccessInfoZkLinkArrayOutput() GetClustersClusterAccessInfoZkLinkArrayOutput
	ToGetClustersClusterAccessInfoZkLinkArrayOutputWithContext(context.Context) GetClustersClusterAccessInfoZkLinkArrayOutput
}

type GetClustersClusterAccessInfoZkLinkArray []GetClustersClusterAccessInfoZkLinkInput

func (GetClustersClusterAccessInfoZkLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterAccessInfoZkLink)(nil)).Elem()
}

func (i GetClustersClusterAccessInfoZkLinkArray) ToGetClustersClusterAccessInfoZkLinkArrayOutput() GetClustersClusterAccessInfoZkLinkArrayOutput {
	return i.ToGetClustersClusterAccessInfoZkLinkArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterAccessInfoZkLinkArray) ToGetClustersClusterAccessInfoZkLinkArrayOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoZkLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterAccessInfoZkLinkArrayOutput)
}

type GetClustersClusterAccessInfoZkLinkOutput struct{ *pulumi.OutputState }

func (GetClustersClusterAccessInfoZkLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterAccessInfoZkLink)(nil)).Elem()
}

func (o GetClustersClusterAccessInfoZkLinkOutput) ToGetClustersClusterAccessInfoZkLinkOutput() GetClustersClusterAccessInfoZkLinkOutput {
	return o
}

func (o GetClustersClusterAccessInfoZkLinkOutput) ToGetClustersClusterAccessInfoZkLinkOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoZkLinkOutput {
	return o
}

// The access link address of ZooKeeper.
func (o GetClustersClusterAccessInfoZkLinkOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterAccessInfoZkLink) string { return v.Link }).(pulumi.StringOutput)
}

// The port of ZooKeeper.
func (o GetClustersClusterAccessInfoZkLinkOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterAccessInfoZkLink) string { return v.Port }).(pulumi.StringOutput)
}

type GetClustersClusterAccessInfoZkLinkArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterAccessInfoZkLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterAccessInfoZkLink)(nil)).Elem()
}

func (o GetClustersClusterAccessInfoZkLinkArrayOutput) ToGetClustersClusterAccessInfoZkLinkArrayOutput() GetClustersClusterAccessInfoZkLinkArrayOutput {
	return o
}

func (o GetClustersClusterAccessInfoZkLinkArrayOutput) ToGetClustersClusterAccessInfoZkLinkArrayOutputWithContext(ctx context.Context) GetClustersClusterAccessInfoZkLinkArrayOutput {
	return o
}

func (o GetClustersClusterAccessInfoZkLinkArrayOutput) Index(i pulumi.IntInput) GetClustersClusterAccessInfoZkLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterAccessInfoZkLink {
		return vs[0].([]GetClustersClusterAccessInfoZkLink)[vs[1].(int)]
	}).(GetClustersClusterAccessInfoZkLinkOutput)
}

type GetClustersClusterBootstrapActionList struct {
	// Parameters of the boot operation.
	Arg string `pulumi:"arg"`
	// The internal name of the service.
	Name string `pulumi:"name"`
	// Boot operation script path.
	Path string `pulumi:"path"`
}

// GetClustersClusterBootstrapActionListInput is an input type that accepts GetClustersClusterBootstrapActionListArgs and GetClustersClusterBootstrapActionListOutput values.
// You can construct a concrete instance of `GetClustersClusterBootstrapActionListInput` via:
//
//	GetClustersClusterBootstrapActionListArgs{...}
type GetClustersClusterBootstrapActionListInput interface {
	pulumi.Input

	ToGetClustersClusterBootstrapActionListOutput() GetClustersClusterBootstrapActionListOutput
	ToGetClustersClusterBootstrapActionListOutputWithContext(context.Context) GetClustersClusterBootstrapActionListOutput
}

type GetClustersClusterBootstrapActionListArgs struct {
	// Parameters of the boot operation.
	Arg pulumi.StringInput `pulumi:"arg"`
	// The internal name of the service.
	Name pulumi.StringInput `pulumi:"name"`
	// Boot operation script path.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetClustersClusterBootstrapActionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterBootstrapActionList)(nil)).Elem()
}

func (i GetClustersClusterBootstrapActionListArgs) ToGetClustersClusterBootstrapActionListOutput() GetClustersClusterBootstrapActionListOutput {
	return i.ToGetClustersClusterBootstrapActionListOutputWithContext(context.Background())
}

func (i GetClustersClusterBootstrapActionListArgs) ToGetClustersClusterBootstrapActionListOutputWithContext(ctx context.Context) GetClustersClusterBootstrapActionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterBootstrapActionListOutput)
}

// GetClustersClusterBootstrapActionListArrayInput is an input type that accepts GetClustersClusterBootstrapActionListArray and GetClustersClusterBootstrapActionListArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterBootstrapActionListArrayInput` via:
//
//	GetClustersClusterBootstrapActionListArray{ GetClustersClusterBootstrapActionListArgs{...} }
type GetClustersClusterBootstrapActionListArrayInput interface {
	pulumi.Input

	ToGetClustersClusterBootstrapActionListArrayOutput() GetClustersClusterBootstrapActionListArrayOutput
	ToGetClustersClusterBootstrapActionListArrayOutputWithContext(context.Context) GetClustersClusterBootstrapActionListArrayOutput
}

type GetClustersClusterBootstrapActionListArray []GetClustersClusterBootstrapActionListInput

func (GetClustersClusterBootstrapActionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterBootstrapActionList)(nil)).Elem()
}

func (i GetClustersClusterBootstrapActionListArray) ToGetClustersClusterBootstrapActionListArrayOutput() GetClustersClusterBootstrapActionListArrayOutput {
	return i.ToGetClustersClusterBootstrapActionListArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterBootstrapActionListArray) ToGetClustersClusterBootstrapActionListArrayOutputWithContext(ctx context.Context) GetClustersClusterBootstrapActionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterBootstrapActionListArrayOutput)
}

type GetClustersClusterBootstrapActionListOutput struct{ *pulumi.OutputState }

func (GetClustersClusterBootstrapActionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterBootstrapActionList)(nil)).Elem()
}

func (o GetClustersClusterBootstrapActionListOutput) ToGetClustersClusterBootstrapActionListOutput() GetClustersClusterBootstrapActionListOutput {
	return o
}

func (o GetClustersClusterBootstrapActionListOutput) ToGetClustersClusterBootstrapActionListOutputWithContext(ctx context.Context) GetClustersClusterBootstrapActionListOutput {
	return o
}

// Parameters of the boot operation.
func (o GetClustersClusterBootstrapActionListOutput) Arg() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterBootstrapActionList) string { return v.Arg }).(pulumi.StringOutput)
}

// The internal name of the service.
func (o GetClustersClusterBootstrapActionListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterBootstrapActionList) string { return v.Name }).(pulumi.StringOutput)
}

// Boot operation script path.
func (o GetClustersClusterBootstrapActionListOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterBootstrapActionList) string { return v.Path }).(pulumi.StringOutput)
}

type GetClustersClusterBootstrapActionListArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterBootstrapActionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterBootstrapActionList)(nil)).Elem()
}

func (o GetClustersClusterBootstrapActionListArrayOutput) ToGetClustersClusterBootstrapActionListArrayOutput() GetClustersClusterBootstrapActionListArrayOutput {
	return o
}

func (o GetClustersClusterBootstrapActionListArrayOutput) ToGetClustersClusterBootstrapActionListArrayOutputWithContext(ctx context.Context) GetClustersClusterBootstrapActionListArrayOutput {
	return o
}

func (o GetClustersClusterBootstrapActionListArrayOutput) Index(i pulumi.IntInput) GetClustersClusterBootstrapActionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterBootstrapActionList {
		return vs[0].([]GetClustersClusterBootstrapActionList)[vs[1].(int)]
	}).(GetClustersClusterBootstrapActionListOutput)
}

type GetClustersClusterHostGroupList struct {
	// Bandwidth.
	BandWidth string `pulumi:"bandWidth"`
	// Payment Type.
	ChargeType string `pulumi:"chargeType"`
	// The number of CPU cores.
	CpuCore int `pulumi:"cpuCore"`
	// Data disk capacity.
	DiskCapacity int `pulumi:"diskCapacity"`
	// The number of data disks.
	DiskCount int `pulumi:"diskCount"`
	// System disk type:
	DiskType string `pulumi:"diskType"`
	// The current operation type of the machine Group:
	HostGroupChangeType string `pulumi:"hostGroupChangeType"`
	// The ID of the machine group.
	HostGroupId string `pulumi:"hostGroupId"`
	// The name of the machine group.
	HostGroupName string `pulumi:"hostGroupName"`
	// Role of host in cluster:
	HostGroupType string `pulumi:"hostGroupType"`
	// Machine Group instance.
	InstanceType string `pulumi:"instanceType"`
	// Memory size.
	MemoryCapacity int `pulumi:"memoryCapacity"`
	// The number of machine group nodes.
	NodeCount int `pulumi:"nodeCount"`
	// Machine node.
	Nodes []GetClustersClusterHostGroupListNode `pulumi:"nodes"`
	// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
	Period string `pulumi:"period"`
}

// GetClustersClusterHostGroupListInput is an input type that accepts GetClustersClusterHostGroupListArgs and GetClustersClusterHostGroupListOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListInput` via:
//
//	GetClustersClusterHostGroupListArgs{...}
type GetClustersClusterHostGroupListInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListOutput() GetClustersClusterHostGroupListOutput
	ToGetClustersClusterHostGroupListOutputWithContext(context.Context) GetClustersClusterHostGroupListOutput
}

type GetClustersClusterHostGroupListArgs struct {
	// Bandwidth.
	BandWidth pulumi.StringInput `pulumi:"bandWidth"`
	// Payment Type.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The number of CPU cores.
	CpuCore pulumi.IntInput `pulumi:"cpuCore"`
	// Data disk capacity.
	DiskCapacity pulumi.IntInput `pulumi:"diskCapacity"`
	// The number of data disks.
	DiskCount pulumi.IntInput `pulumi:"diskCount"`
	// System disk type:
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The current operation type of the machine Group:
	HostGroupChangeType pulumi.StringInput `pulumi:"hostGroupChangeType"`
	// The ID of the machine group.
	HostGroupId pulumi.StringInput `pulumi:"hostGroupId"`
	// The name of the machine group.
	HostGroupName pulumi.StringInput `pulumi:"hostGroupName"`
	// Role of host in cluster:
	HostGroupType pulumi.StringInput `pulumi:"hostGroupType"`
	// Machine Group instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Memory size.
	MemoryCapacity pulumi.IntInput `pulumi:"memoryCapacity"`
	// The number of machine group nodes.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Machine node.
	Nodes GetClustersClusterHostGroupListNodeArrayInput `pulumi:"nodes"`
	// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
	Period pulumi.StringInput `pulumi:"period"`
}

func (GetClustersClusterHostGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupList)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListArgs) ToGetClustersClusterHostGroupListOutput() GetClustersClusterHostGroupListOutput {
	return i.ToGetClustersClusterHostGroupListOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListArgs) ToGetClustersClusterHostGroupListOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListOutput)
}

// GetClustersClusterHostGroupListArrayInput is an input type that accepts GetClustersClusterHostGroupListArray and GetClustersClusterHostGroupListArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListArrayInput` via:
//
//	GetClustersClusterHostGroupListArray{ GetClustersClusterHostGroupListArgs{...} }
type GetClustersClusterHostGroupListArrayInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListArrayOutput() GetClustersClusterHostGroupListArrayOutput
	ToGetClustersClusterHostGroupListArrayOutputWithContext(context.Context) GetClustersClusterHostGroupListArrayOutput
}

type GetClustersClusterHostGroupListArray []GetClustersClusterHostGroupListInput

func (GetClustersClusterHostGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupList)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListArray) ToGetClustersClusterHostGroupListArrayOutput() GetClustersClusterHostGroupListArrayOutput {
	return i.ToGetClustersClusterHostGroupListArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListArray) ToGetClustersClusterHostGroupListArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListArrayOutput)
}

type GetClustersClusterHostGroupListOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupList)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListOutput) ToGetClustersClusterHostGroupListOutput() GetClustersClusterHostGroupListOutput {
	return o
}

func (o GetClustersClusterHostGroupListOutput) ToGetClustersClusterHostGroupListOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListOutput {
	return o
}

// Bandwidth.
func (o GetClustersClusterHostGroupListOutput) BandWidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.BandWidth }).(pulumi.StringOutput)
}

// Payment Type.
func (o GetClustersClusterHostGroupListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The number of CPU cores.
func (o GetClustersClusterHostGroupListOutput) CpuCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) int { return v.CpuCore }).(pulumi.IntOutput)
}

// Data disk capacity.
func (o GetClustersClusterHostGroupListOutput) DiskCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) int { return v.DiskCapacity }).(pulumi.IntOutput)
}

// The number of data disks.
func (o GetClustersClusterHostGroupListOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) int { return v.DiskCount }).(pulumi.IntOutput)
}

// System disk type:
func (o GetClustersClusterHostGroupListOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.DiskType }).(pulumi.StringOutput)
}

// The current operation type of the machine Group:
func (o GetClustersClusterHostGroupListOutput) HostGroupChangeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.HostGroupChangeType }).(pulumi.StringOutput)
}

// The ID of the machine group.
func (o GetClustersClusterHostGroupListOutput) HostGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.HostGroupId }).(pulumi.StringOutput)
}

// The name of the machine group.
func (o GetClustersClusterHostGroupListOutput) HostGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.HostGroupName }).(pulumi.StringOutput)
}

// Role of host in cluster:
func (o GetClustersClusterHostGroupListOutput) HostGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.HostGroupType }).(pulumi.StringOutput)
}

// Machine Group instance.
func (o GetClustersClusterHostGroupListOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Memory size.
func (o GetClustersClusterHostGroupListOutput) MemoryCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) int { return v.MemoryCapacity }).(pulumi.IntOutput)
}

// The number of machine group nodes.
func (o GetClustersClusterHostGroupListOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Machine node.
func (o GetClustersClusterHostGroupListOutput) Nodes() GetClustersClusterHostGroupListNodeArrayOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) []GetClustersClusterHostGroupListNode { return v.Nodes }).(GetClustersClusterHostGroupListNodeArrayOutput)
}

// The package year and month time of the machine group. The Valid Values : `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`.
func (o GetClustersClusterHostGroupListOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupList) string { return v.Period }).(pulumi.StringOutput)
}

type GetClustersClusterHostGroupListArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupList)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListArrayOutput) ToGetClustersClusterHostGroupListArrayOutput() GetClustersClusterHostGroupListArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListArrayOutput) ToGetClustersClusterHostGroupListArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListArrayOutput) Index(i pulumi.IntInput) GetClustersClusterHostGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterHostGroupList {
		return vs[0].([]GetClustersClusterHostGroupList)[vs[1].(int)]
	}).(GetClustersClusterHostGroupListOutput)
}

type GetClustersClusterHostGroupListNode struct {
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// Disk information.
	DiskInfos []GetClustersClusterHostGroupListNodeDiskInfo `pulumi:"diskInfos"`
	// The timeout of the EMR.
	EmrExpiredTime string `pulumi:"emrExpiredTime"`
	// Timeout time.
	ExpiredTime string `pulumi:"expiredTime"`
	// The Intranet IP of the EMR.
	InnerIp string `pulumi:"innerIp"`
	// The ID of the ECS instance.
	InstanceId string `pulumi:"instanceId"`
	// Public IP address.
	PubIp string `pulumi:"pubIp"`
	// The cluster status.
	Status string `pulumi:"status"`
	// Whether IPV6 is supported.
	SupportIpv6 bool `pulumi:"supportIpv6"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetClustersClusterHostGroupListNodeInput is an input type that accepts GetClustersClusterHostGroupListNodeArgs and GetClustersClusterHostGroupListNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListNodeInput` via:
//
//	GetClustersClusterHostGroupListNodeArgs{...}
type GetClustersClusterHostGroupListNodeInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListNodeOutput() GetClustersClusterHostGroupListNodeOutput
	ToGetClustersClusterHostGroupListNodeOutputWithContext(context.Context) GetClustersClusterHostGroupListNodeOutput
}

type GetClustersClusterHostGroupListNodeArgs struct {
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Disk information.
	DiskInfos GetClustersClusterHostGroupListNodeDiskInfoArrayInput `pulumi:"diskInfos"`
	// The timeout of the EMR.
	EmrExpiredTime pulumi.StringInput `pulumi:"emrExpiredTime"`
	// Timeout time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The Intranet IP of the EMR.
	InnerIp pulumi.StringInput `pulumi:"innerIp"`
	// The ID of the ECS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Public IP address.
	PubIp pulumi.StringInput `pulumi:"pubIp"`
	// The cluster status.
	Status pulumi.StringInput `pulumi:"status"`
	// Whether IPV6 is supported.
	SupportIpv6 pulumi.BoolInput `pulumi:"supportIpv6"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetClustersClusterHostGroupListNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupListNode)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListNodeArgs) ToGetClustersClusterHostGroupListNodeOutput() GetClustersClusterHostGroupListNodeOutput {
	return i.ToGetClustersClusterHostGroupListNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListNodeArgs) ToGetClustersClusterHostGroupListNodeOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListNodeOutput)
}

// GetClustersClusterHostGroupListNodeArrayInput is an input type that accepts GetClustersClusterHostGroupListNodeArray and GetClustersClusterHostGroupListNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListNodeArrayInput` via:
//
//	GetClustersClusterHostGroupListNodeArray{ GetClustersClusterHostGroupListNodeArgs{...} }
type GetClustersClusterHostGroupListNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListNodeArrayOutput() GetClustersClusterHostGroupListNodeArrayOutput
	ToGetClustersClusterHostGroupListNodeArrayOutputWithContext(context.Context) GetClustersClusterHostGroupListNodeArrayOutput
}

type GetClustersClusterHostGroupListNodeArray []GetClustersClusterHostGroupListNodeInput

func (GetClustersClusterHostGroupListNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupListNode)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListNodeArray) ToGetClustersClusterHostGroupListNodeArrayOutput() GetClustersClusterHostGroupListNodeArrayOutput {
	return i.ToGetClustersClusterHostGroupListNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListNodeArray) ToGetClustersClusterHostGroupListNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListNodeArrayOutput)
}

type GetClustersClusterHostGroupListNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupListNode)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListNodeOutput) ToGetClustersClusterHostGroupListNodeOutput() GetClustersClusterHostGroupListNodeOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeOutput) ToGetClustersClusterHostGroupListNodeOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeOutput {
	return o
}

// Creation time.
func (o GetClustersClusterHostGroupListNodeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Disk information.
func (o GetClustersClusterHostGroupListNodeOutput) DiskInfos() GetClustersClusterHostGroupListNodeDiskInfoArrayOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) []GetClustersClusterHostGroupListNodeDiskInfo {
		return v.DiskInfos
	}).(GetClustersClusterHostGroupListNodeDiskInfoArrayOutput)
}

// The timeout of the EMR.
func (o GetClustersClusterHostGroupListNodeOutput) EmrExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.EmrExpiredTime }).(pulumi.StringOutput)
}

// Timeout time.
func (o GetClustersClusterHostGroupListNodeOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The Intranet IP of the EMR.
func (o GetClustersClusterHostGroupListNodeOutput) InnerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.InnerIp }).(pulumi.StringOutput)
}

// The ID of the ECS instance.
func (o GetClustersClusterHostGroupListNodeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Public IP address.
func (o GetClustersClusterHostGroupListNodeOutput) PubIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.PubIp }).(pulumi.StringOutput)
}

// The cluster status.
func (o GetClustersClusterHostGroupListNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.Status }).(pulumi.StringOutput)
}

// Whether IPV6 is supported.
func (o GetClustersClusterHostGroupListNodeOutput) SupportIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) bool { return v.SupportIpv6 }).(pulumi.BoolOutput)
}

// The zone ID.
func (o GetClustersClusterHostGroupListNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetClustersClusterHostGroupListNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupListNode)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListNodeArrayOutput) ToGetClustersClusterHostGroupListNodeArrayOutput() GetClustersClusterHostGroupListNodeArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeArrayOutput) ToGetClustersClusterHostGroupListNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterHostGroupListNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterHostGroupListNode {
		return vs[0].([]GetClustersClusterHostGroupListNode)[vs[1].(int)]
	}).(GetClustersClusterHostGroupListNodeOutput)
}

type GetClustersClusterHostGroupListNodeDiskInfo struct {
	// The disk name.
	Device string `pulumi:"device"`
	// The ID of the disk.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// Disk capacity.
	Size int `pulumi:"size"`
	// Disk type.
	Type string `pulumi:"type"`
}

// GetClustersClusterHostGroupListNodeDiskInfoInput is an input type that accepts GetClustersClusterHostGroupListNodeDiskInfoArgs and GetClustersClusterHostGroupListNodeDiskInfoOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListNodeDiskInfoInput` via:
//
//	GetClustersClusterHostGroupListNodeDiskInfoArgs{...}
type GetClustersClusterHostGroupListNodeDiskInfoInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListNodeDiskInfoOutput() GetClustersClusterHostGroupListNodeDiskInfoOutput
	ToGetClustersClusterHostGroupListNodeDiskInfoOutputWithContext(context.Context) GetClustersClusterHostGroupListNodeDiskInfoOutput
}

type GetClustersClusterHostGroupListNodeDiskInfoArgs struct {
	// The disk name.
	Device pulumi.StringInput `pulumi:"device"`
	// The ID of the disk.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The disk name.
	DiskName pulumi.StringInput `pulumi:"diskName"`
	// Disk capacity.
	Size pulumi.IntInput `pulumi:"size"`
	// Disk type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClustersClusterHostGroupListNodeDiskInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupListNodeDiskInfo)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListNodeDiskInfoArgs) ToGetClustersClusterHostGroupListNodeDiskInfoOutput() GetClustersClusterHostGroupListNodeDiskInfoOutput {
	return i.ToGetClustersClusterHostGroupListNodeDiskInfoOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListNodeDiskInfoArgs) ToGetClustersClusterHostGroupListNodeDiskInfoOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeDiskInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListNodeDiskInfoOutput)
}

// GetClustersClusterHostGroupListNodeDiskInfoArrayInput is an input type that accepts GetClustersClusterHostGroupListNodeDiskInfoArray and GetClustersClusterHostGroupListNodeDiskInfoArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterHostGroupListNodeDiskInfoArrayInput` via:
//
//	GetClustersClusterHostGroupListNodeDiskInfoArray{ GetClustersClusterHostGroupListNodeDiskInfoArgs{...} }
type GetClustersClusterHostGroupListNodeDiskInfoArrayInput interface {
	pulumi.Input

	ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutput() GetClustersClusterHostGroupListNodeDiskInfoArrayOutput
	ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutputWithContext(context.Context) GetClustersClusterHostGroupListNodeDiskInfoArrayOutput
}

type GetClustersClusterHostGroupListNodeDiskInfoArray []GetClustersClusterHostGroupListNodeDiskInfoInput

func (GetClustersClusterHostGroupListNodeDiskInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupListNodeDiskInfo)(nil)).Elem()
}

func (i GetClustersClusterHostGroupListNodeDiskInfoArray) ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutput() GetClustersClusterHostGroupListNodeDiskInfoArrayOutput {
	return i.ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterHostGroupListNodeDiskInfoArray) ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeDiskInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostGroupListNodeDiskInfoArrayOutput)
}

type GetClustersClusterHostGroupListNodeDiskInfoOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListNodeDiskInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostGroupListNodeDiskInfo)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) ToGetClustersClusterHostGroupListNodeDiskInfoOutput() GetClustersClusterHostGroupListNodeDiskInfoOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) ToGetClustersClusterHostGroupListNodeDiskInfoOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeDiskInfoOutput {
	return o
}

// The disk name.
func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNodeDiskInfo) string { return v.Device }).(pulumi.StringOutput)
}

// The ID of the disk.
func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNodeDiskInfo) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNodeDiskInfo) string { return v.DiskName }).(pulumi.StringOutput)
}

// Disk capacity.
func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNodeDiskInfo) int { return v.Size }).(pulumi.IntOutput)
}

// Disk type.
func (o GetClustersClusterHostGroupListNodeDiskInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostGroupListNodeDiskInfo) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersClusterHostGroupListNodeDiskInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostGroupListNodeDiskInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostGroupListNodeDiskInfo)(nil)).Elem()
}

func (o GetClustersClusterHostGroupListNodeDiskInfoArrayOutput) ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutput() GetClustersClusterHostGroupListNodeDiskInfoArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeDiskInfoArrayOutput) ToGetClustersClusterHostGroupListNodeDiskInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterHostGroupListNodeDiskInfoArrayOutput {
	return o
}

func (o GetClustersClusterHostGroupListNodeDiskInfoArrayOutput) Index(i pulumi.IntInput) GetClustersClusterHostGroupListNodeDiskInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterHostGroupListNodeDiskInfo {
		return vs[0].([]GetClustersClusterHostGroupListNodeDiskInfo)[vs[1].(int)]
	}).(GetClustersClusterHostGroupListNodeDiskInfoOutput)
}

type GetClustersClusterHostPoolInfo struct {
	// Machine pool ID.
	HpBizId string `pulumi:"hpBizId"`
	// The name of the machine pool.
	HpName string `pulumi:"hpName"`
}

// GetClustersClusterHostPoolInfoInput is an input type that accepts GetClustersClusterHostPoolInfoArgs and GetClustersClusterHostPoolInfoOutput values.
// You can construct a concrete instance of `GetClustersClusterHostPoolInfoInput` via:
//
//	GetClustersClusterHostPoolInfoArgs{...}
type GetClustersClusterHostPoolInfoInput interface {
	pulumi.Input

	ToGetClustersClusterHostPoolInfoOutput() GetClustersClusterHostPoolInfoOutput
	ToGetClustersClusterHostPoolInfoOutputWithContext(context.Context) GetClustersClusterHostPoolInfoOutput
}

type GetClustersClusterHostPoolInfoArgs struct {
	// Machine pool ID.
	HpBizId pulumi.StringInput `pulumi:"hpBizId"`
	// The name of the machine pool.
	HpName pulumi.StringInput `pulumi:"hpName"`
}

func (GetClustersClusterHostPoolInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostPoolInfo)(nil)).Elem()
}

func (i GetClustersClusterHostPoolInfoArgs) ToGetClustersClusterHostPoolInfoOutput() GetClustersClusterHostPoolInfoOutput {
	return i.ToGetClustersClusterHostPoolInfoOutputWithContext(context.Background())
}

func (i GetClustersClusterHostPoolInfoArgs) ToGetClustersClusterHostPoolInfoOutputWithContext(ctx context.Context) GetClustersClusterHostPoolInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostPoolInfoOutput)
}

// GetClustersClusterHostPoolInfoArrayInput is an input type that accepts GetClustersClusterHostPoolInfoArray and GetClustersClusterHostPoolInfoArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterHostPoolInfoArrayInput` via:
//
//	GetClustersClusterHostPoolInfoArray{ GetClustersClusterHostPoolInfoArgs{...} }
type GetClustersClusterHostPoolInfoArrayInput interface {
	pulumi.Input

	ToGetClustersClusterHostPoolInfoArrayOutput() GetClustersClusterHostPoolInfoArrayOutput
	ToGetClustersClusterHostPoolInfoArrayOutputWithContext(context.Context) GetClustersClusterHostPoolInfoArrayOutput
}

type GetClustersClusterHostPoolInfoArray []GetClustersClusterHostPoolInfoInput

func (GetClustersClusterHostPoolInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostPoolInfo)(nil)).Elem()
}

func (i GetClustersClusterHostPoolInfoArray) ToGetClustersClusterHostPoolInfoArrayOutput() GetClustersClusterHostPoolInfoArrayOutput {
	return i.ToGetClustersClusterHostPoolInfoArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterHostPoolInfoArray) ToGetClustersClusterHostPoolInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterHostPoolInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterHostPoolInfoArrayOutput)
}

type GetClustersClusterHostPoolInfoOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostPoolInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterHostPoolInfo)(nil)).Elem()
}

func (o GetClustersClusterHostPoolInfoOutput) ToGetClustersClusterHostPoolInfoOutput() GetClustersClusterHostPoolInfoOutput {
	return o
}

func (o GetClustersClusterHostPoolInfoOutput) ToGetClustersClusterHostPoolInfoOutputWithContext(ctx context.Context) GetClustersClusterHostPoolInfoOutput {
	return o
}

// Machine pool ID.
func (o GetClustersClusterHostPoolInfoOutput) HpBizId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostPoolInfo) string { return v.HpBizId }).(pulumi.StringOutput)
}

// The name of the machine pool.
func (o GetClustersClusterHostPoolInfoOutput) HpName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterHostPoolInfo) string { return v.HpName }).(pulumi.StringOutput)
}

type GetClustersClusterHostPoolInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterHostPoolInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterHostPoolInfo)(nil)).Elem()
}

func (o GetClustersClusterHostPoolInfoArrayOutput) ToGetClustersClusterHostPoolInfoArrayOutput() GetClustersClusterHostPoolInfoArrayOutput {
	return o
}

func (o GetClustersClusterHostPoolInfoArrayOutput) ToGetClustersClusterHostPoolInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterHostPoolInfoArrayOutput {
	return o
}

func (o GetClustersClusterHostPoolInfoArrayOutput) Index(i pulumi.IntInput) GetClustersClusterHostPoolInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterHostPoolInfo {
		return vs[0].([]GetClustersClusterHostPoolInfo)[vs[1].(int)]
	}).(GetClustersClusterHostPoolInfoOutput)
}

type GetClustersClusterRelateClusterInfo struct {
	// The ID of the associated cluster.
	ClusterId string `pulumi:"clusterId"`
	// The name of the associated cluster.
	ClusterName string `pulumi:"clusterName"`
	// Cluster type:
	ClusterType string `pulumi:"clusterType"`
	// The cluster status.
	Status string `pulumi:"status"`
}

// GetClustersClusterRelateClusterInfoInput is an input type that accepts GetClustersClusterRelateClusterInfoArgs and GetClustersClusterRelateClusterInfoOutput values.
// You can construct a concrete instance of `GetClustersClusterRelateClusterInfoInput` via:
//
//	GetClustersClusterRelateClusterInfoArgs{...}
type GetClustersClusterRelateClusterInfoInput interface {
	pulumi.Input

	ToGetClustersClusterRelateClusterInfoOutput() GetClustersClusterRelateClusterInfoOutput
	ToGetClustersClusterRelateClusterInfoOutputWithContext(context.Context) GetClustersClusterRelateClusterInfoOutput
}

type GetClustersClusterRelateClusterInfoArgs struct {
	// The ID of the associated cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the associated cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Cluster type:
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// The cluster status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetClustersClusterRelateClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterRelateClusterInfo)(nil)).Elem()
}

func (i GetClustersClusterRelateClusterInfoArgs) ToGetClustersClusterRelateClusterInfoOutput() GetClustersClusterRelateClusterInfoOutput {
	return i.ToGetClustersClusterRelateClusterInfoOutputWithContext(context.Background())
}

func (i GetClustersClusterRelateClusterInfoArgs) ToGetClustersClusterRelateClusterInfoOutputWithContext(ctx context.Context) GetClustersClusterRelateClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterRelateClusterInfoOutput)
}

// GetClustersClusterRelateClusterInfoArrayInput is an input type that accepts GetClustersClusterRelateClusterInfoArray and GetClustersClusterRelateClusterInfoArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterRelateClusterInfoArrayInput` via:
//
//	GetClustersClusterRelateClusterInfoArray{ GetClustersClusterRelateClusterInfoArgs{...} }
type GetClustersClusterRelateClusterInfoArrayInput interface {
	pulumi.Input

	ToGetClustersClusterRelateClusterInfoArrayOutput() GetClustersClusterRelateClusterInfoArrayOutput
	ToGetClustersClusterRelateClusterInfoArrayOutputWithContext(context.Context) GetClustersClusterRelateClusterInfoArrayOutput
}

type GetClustersClusterRelateClusterInfoArray []GetClustersClusterRelateClusterInfoInput

func (GetClustersClusterRelateClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterRelateClusterInfo)(nil)).Elem()
}

func (i GetClustersClusterRelateClusterInfoArray) ToGetClustersClusterRelateClusterInfoArrayOutput() GetClustersClusterRelateClusterInfoArrayOutput {
	return i.ToGetClustersClusterRelateClusterInfoArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterRelateClusterInfoArray) ToGetClustersClusterRelateClusterInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterRelateClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterRelateClusterInfoArrayOutput)
}

type GetClustersClusterRelateClusterInfoOutput struct{ *pulumi.OutputState }

func (GetClustersClusterRelateClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterRelateClusterInfo)(nil)).Elem()
}

func (o GetClustersClusterRelateClusterInfoOutput) ToGetClustersClusterRelateClusterInfoOutput() GetClustersClusterRelateClusterInfoOutput {
	return o
}

func (o GetClustersClusterRelateClusterInfoOutput) ToGetClustersClusterRelateClusterInfoOutputWithContext(ctx context.Context) GetClustersClusterRelateClusterInfoOutput {
	return o
}

// The ID of the associated cluster.
func (o GetClustersClusterRelateClusterInfoOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterRelateClusterInfo) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The name of the associated cluster.
func (o GetClustersClusterRelateClusterInfoOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterRelateClusterInfo) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Cluster type:
func (o GetClustersClusterRelateClusterInfoOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterRelateClusterInfo) string { return v.ClusterType }).(pulumi.StringOutput)
}

// The cluster status.
func (o GetClustersClusterRelateClusterInfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterRelateClusterInfo) string { return v.Status }).(pulumi.StringOutput)
}

type GetClustersClusterRelateClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterRelateClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterRelateClusterInfo)(nil)).Elem()
}

func (o GetClustersClusterRelateClusterInfoArrayOutput) ToGetClustersClusterRelateClusterInfoArrayOutput() GetClustersClusterRelateClusterInfoArrayOutput {
	return o
}

func (o GetClustersClusterRelateClusterInfoArrayOutput) ToGetClustersClusterRelateClusterInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterRelateClusterInfoArrayOutput {
	return o
}

func (o GetClustersClusterRelateClusterInfoArrayOutput) Index(i pulumi.IntInput) GetClustersClusterRelateClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterRelateClusterInfo {
		return vs[0].([]GetClustersClusterRelateClusterInfo)[vs[1].(int)]
	}).(GetClustersClusterRelateClusterInfoOutput)
}

type GetClustersClusterSoftwareInfo struct {
	// Cluster type:
	ClusterType string `pulumi:"clusterType"`
	// E-MapReduce version number.
	EmrVer string `pulumi:"emrVer"`
	// Service list.
	Softwares []GetClustersClusterSoftwareInfoSoftware `pulumi:"softwares"`
}

// GetClustersClusterSoftwareInfoInput is an input type that accepts GetClustersClusterSoftwareInfoArgs and GetClustersClusterSoftwareInfoOutput values.
// You can construct a concrete instance of `GetClustersClusterSoftwareInfoInput` via:
//
//	GetClustersClusterSoftwareInfoArgs{...}
type GetClustersClusterSoftwareInfoInput interface {
	pulumi.Input

	ToGetClustersClusterSoftwareInfoOutput() GetClustersClusterSoftwareInfoOutput
	ToGetClustersClusterSoftwareInfoOutputWithContext(context.Context) GetClustersClusterSoftwareInfoOutput
}

type GetClustersClusterSoftwareInfoArgs struct {
	// Cluster type:
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// E-MapReduce version number.
	EmrVer pulumi.StringInput `pulumi:"emrVer"`
	// Service list.
	Softwares GetClustersClusterSoftwareInfoSoftwareArrayInput `pulumi:"softwares"`
}

func (GetClustersClusterSoftwareInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterSoftwareInfo)(nil)).Elem()
}

func (i GetClustersClusterSoftwareInfoArgs) ToGetClustersClusterSoftwareInfoOutput() GetClustersClusterSoftwareInfoOutput {
	return i.ToGetClustersClusterSoftwareInfoOutputWithContext(context.Background())
}

func (i GetClustersClusterSoftwareInfoArgs) ToGetClustersClusterSoftwareInfoOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterSoftwareInfoOutput)
}

// GetClustersClusterSoftwareInfoArrayInput is an input type that accepts GetClustersClusterSoftwareInfoArray and GetClustersClusterSoftwareInfoArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterSoftwareInfoArrayInput` via:
//
//	GetClustersClusterSoftwareInfoArray{ GetClustersClusterSoftwareInfoArgs{...} }
type GetClustersClusterSoftwareInfoArrayInput interface {
	pulumi.Input

	ToGetClustersClusterSoftwareInfoArrayOutput() GetClustersClusterSoftwareInfoArrayOutput
	ToGetClustersClusterSoftwareInfoArrayOutputWithContext(context.Context) GetClustersClusterSoftwareInfoArrayOutput
}

type GetClustersClusterSoftwareInfoArray []GetClustersClusterSoftwareInfoInput

func (GetClustersClusterSoftwareInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterSoftwareInfo)(nil)).Elem()
}

func (i GetClustersClusterSoftwareInfoArray) ToGetClustersClusterSoftwareInfoArrayOutput() GetClustersClusterSoftwareInfoArrayOutput {
	return i.ToGetClustersClusterSoftwareInfoArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterSoftwareInfoArray) ToGetClustersClusterSoftwareInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterSoftwareInfoArrayOutput)
}

type GetClustersClusterSoftwareInfoOutput struct{ *pulumi.OutputState }

func (GetClustersClusterSoftwareInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterSoftwareInfo)(nil)).Elem()
}

func (o GetClustersClusterSoftwareInfoOutput) ToGetClustersClusterSoftwareInfoOutput() GetClustersClusterSoftwareInfoOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoOutput) ToGetClustersClusterSoftwareInfoOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoOutput {
	return o
}

// Cluster type:
func (o GetClustersClusterSoftwareInfoOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfo) string { return v.ClusterType }).(pulumi.StringOutput)
}

// E-MapReduce version number.
func (o GetClustersClusterSoftwareInfoOutput) EmrVer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfo) string { return v.EmrVer }).(pulumi.StringOutput)
}

// Service list.
func (o GetClustersClusterSoftwareInfoOutput) Softwares() GetClustersClusterSoftwareInfoSoftwareArrayOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfo) []GetClustersClusterSoftwareInfoSoftware { return v.Softwares }).(GetClustersClusterSoftwareInfoSoftwareArrayOutput)
}

type GetClustersClusterSoftwareInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterSoftwareInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterSoftwareInfo)(nil)).Elem()
}

func (o GetClustersClusterSoftwareInfoArrayOutput) ToGetClustersClusterSoftwareInfoArrayOutput() GetClustersClusterSoftwareInfoArrayOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoArrayOutput) ToGetClustersClusterSoftwareInfoArrayOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoArrayOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoArrayOutput) Index(i pulumi.IntInput) GetClustersClusterSoftwareInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterSoftwareInfo {
		return vs[0].([]GetClustersClusterSoftwareInfo)[vs[1].(int)]
	}).(GetClustersClusterSoftwareInfoOutput)
}

type GetClustersClusterSoftwareInfoSoftware struct {
	// The name of the service.
	DisplayName string `pulumi:"displayName"`
	// The internal name of the service.
	Name string `pulumi:"name"`
	// Whether it shows.
	OnlyDisplay bool `pulumi:"onlyDisplay"`
	// Startup type.
	StartTpe int `pulumi:"startTpe"`
	// Service version.
	Version string `pulumi:"version"`
}

// GetClustersClusterSoftwareInfoSoftwareInput is an input type that accepts GetClustersClusterSoftwareInfoSoftwareArgs and GetClustersClusterSoftwareInfoSoftwareOutput values.
// You can construct a concrete instance of `GetClustersClusterSoftwareInfoSoftwareInput` via:
//
//	GetClustersClusterSoftwareInfoSoftwareArgs{...}
type GetClustersClusterSoftwareInfoSoftwareInput interface {
	pulumi.Input

	ToGetClustersClusterSoftwareInfoSoftwareOutput() GetClustersClusterSoftwareInfoSoftwareOutput
	ToGetClustersClusterSoftwareInfoSoftwareOutputWithContext(context.Context) GetClustersClusterSoftwareInfoSoftwareOutput
}

type GetClustersClusterSoftwareInfoSoftwareArgs struct {
	// The name of the service.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The internal name of the service.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether it shows.
	OnlyDisplay pulumi.BoolInput `pulumi:"onlyDisplay"`
	// Startup type.
	StartTpe pulumi.IntInput `pulumi:"startTpe"`
	// Service version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetClustersClusterSoftwareInfoSoftwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterSoftwareInfoSoftware)(nil)).Elem()
}

func (i GetClustersClusterSoftwareInfoSoftwareArgs) ToGetClustersClusterSoftwareInfoSoftwareOutput() GetClustersClusterSoftwareInfoSoftwareOutput {
	return i.ToGetClustersClusterSoftwareInfoSoftwareOutputWithContext(context.Background())
}

func (i GetClustersClusterSoftwareInfoSoftwareArgs) ToGetClustersClusterSoftwareInfoSoftwareOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoSoftwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterSoftwareInfoSoftwareOutput)
}

// GetClustersClusterSoftwareInfoSoftwareArrayInput is an input type that accepts GetClustersClusterSoftwareInfoSoftwareArray and GetClustersClusterSoftwareInfoSoftwareArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterSoftwareInfoSoftwareArrayInput` via:
//
//	GetClustersClusterSoftwareInfoSoftwareArray{ GetClustersClusterSoftwareInfoSoftwareArgs{...} }
type GetClustersClusterSoftwareInfoSoftwareArrayInput interface {
	pulumi.Input

	ToGetClustersClusterSoftwareInfoSoftwareArrayOutput() GetClustersClusterSoftwareInfoSoftwareArrayOutput
	ToGetClustersClusterSoftwareInfoSoftwareArrayOutputWithContext(context.Context) GetClustersClusterSoftwareInfoSoftwareArrayOutput
}

type GetClustersClusterSoftwareInfoSoftwareArray []GetClustersClusterSoftwareInfoSoftwareInput

func (GetClustersClusterSoftwareInfoSoftwareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterSoftwareInfoSoftware)(nil)).Elem()
}

func (i GetClustersClusterSoftwareInfoSoftwareArray) ToGetClustersClusterSoftwareInfoSoftwareArrayOutput() GetClustersClusterSoftwareInfoSoftwareArrayOutput {
	return i.ToGetClustersClusterSoftwareInfoSoftwareArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterSoftwareInfoSoftwareArray) ToGetClustersClusterSoftwareInfoSoftwareArrayOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoSoftwareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterSoftwareInfoSoftwareArrayOutput)
}

type GetClustersClusterSoftwareInfoSoftwareOutput struct{ *pulumi.OutputState }

func (GetClustersClusterSoftwareInfoSoftwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterSoftwareInfoSoftware)(nil)).Elem()
}

func (o GetClustersClusterSoftwareInfoSoftwareOutput) ToGetClustersClusterSoftwareInfoSoftwareOutput() GetClustersClusterSoftwareInfoSoftwareOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoSoftwareOutput) ToGetClustersClusterSoftwareInfoSoftwareOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoSoftwareOutput {
	return o
}

// The name of the service.
func (o GetClustersClusterSoftwareInfoSoftwareOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfoSoftware) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The internal name of the service.
func (o GetClustersClusterSoftwareInfoSoftwareOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfoSoftware) string { return v.Name }).(pulumi.StringOutput)
}

// Whether it shows.
func (o GetClustersClusterSoftwareInfoSoftwareOutput) OnlyDisplay() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfoSoftware) bool { return v.OnlyDisplay }).(pulumi.BoolOutput)
}

// Startup type.
func (o GetClustersClusterSoftwareInfoSoftwareOutput) StartTpe() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfoSoftware) int { return v.StartTpe }).(pulumi.IntOutput)
}

// Service version.
func (o GetClustersClusterSoftwareInfoSoftwareOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterSoftwareInfoSoftware) string { return v.Version }).(pulumi.StringOutput)
}

type GetClustersClusterSoftwareInfoSoftwareArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterSoftwareInfoSoftwareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterSoftwareInfoSoftware)(nil)).Elem()
}

func (o GetClustersClusterSoftwareInfoSoftwareArrayOutput) ToGetClustersClusterSoftwareInfoSoftwareArrayOutput() GetClustersClusterSoftwareInfoSoftwareArrayOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoSoftwareArrayOutput) ToGetClustersClusterSoftwareInfoSoftwareArrayOutputWithContext(ctx context.Context) GetClustersClusterSoftwareInfoSoftwareArrayOutput {
	return o
}

func (o GetClustersClusterSoftwareInfoSoftwareArrayOutput) Index(i pulumi.IntInput) GetClustersClusterSoftwareInfoSoftwareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterSoftwareInfoSoftware {
		return vs[0].([]GetClustersClusterSoftwareInfoSoftware)[vs[1].(int)]
	}).(GetClustersClusterSoftwareInfoSoftwareOutput)
}

type GetDiskTypesType struct {
	// The maximum value of the data disk to supported the specific instance type
	Max int `pulumi:"max"`
	// The mininum value of the data disk to supported the specific instance type
	Min int `pulumi:"min"`
	// The value of the data disk or system disk
	Value string `pulumi:"value"`
}

// GetDiskTypesTypeInput is an input type that accepts GetDiskTypesTypeArgs and GetDiskTypesTypeOutput values.
// You can construct a concrete instance of `GetDiskTypesTypeInput` via:
//
//	GetDiskTypesTypeArgs{...}
type GetDiskTypesTypeInput interface {
	pulumi.Input

	ToGetDiskTypesTypeOutput() GetDiskTypesTypeOutput
	ToGetDiskTypesTypeOutputWithContext(context.Context) GetDiskTypesTypeOutput
}

type GetDiskTypesTypeArgs struct {
	// The maximum value of the data disk to supported the specific instance type
	Max pulumi.IntInput `pulumi:"max"`
	// The mininum value of the data disk to supported the specific instance type
	Min pulumi.IntInput `pulumi:"min"`
	// The value of the data disk or system disk
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDiskTypesTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskTypesType)(nil)).Elem()
}

func (i GetDiskTypesTypeArgs) ToGetDiskTypesTypeOutput() GetDiskTypesTypeOutput {
	return i.ToGetDiskTypesTypeOutputWithContext(context.Background())
}

func (i GetDiskTypesTypeArgs) ToGetDiskTypesTypeOutputWithContext(ctx context.Context) GetDiskTypesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskTypesTypeOutput)
}

// GetDiskTypesTypeArrayInput is an input type that accepts GetDiskTypesTypeArray and GetDiskTypesTypeArrayOutput values.
// You can construct a concrete instance of `GetDiskTypesTypeArrayInput` via:
//
//	GetDiskTypesTypeArray{ GetDiskTypesTypeArgs{...} }
type GetDiskTypesTypeArrayInput interface {
	pulumi.Input

	ToGetDiskTypesTypeArrayOutput() GetDiskTypesTypeArrayOutput
	ToGetDiskTypesTypeArrayOutputWithContext(context.Context) GetDiskTypesTypeArrayOutput
}

type GetDiskTypesTypeArray []GetDiskTypesTypeInput

func (GetDiskTypesTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskTypesType)(nil)).Elem()
}

func (i GetDiskTypesTypeArray) ToGetDiskTypesTypeArrayOutput() GetDiskTypesTypeArrayOutput {
	return i.ToGetDiskTypesTypeArrayOutputWithContext(context.Background())
}

func (i GetDiskTypesTypeArray) ToGetDiskTypesTypeArrayOutputWithContext(ctx context.Context) GetDiskTypesTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskTypesTypeArrayOutput)
}

type GetDiskTypesTypeOutput struct{ *pulumi.OutputState }

func (GetDiskTypesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskTypesType)(nil)).Elem()
}

func (o GetDiskTypesTypeOutput) ToGetDiskTypesTypeOutput() GetDiskTypesTypeOutput {
	return o
}

func (o GetDiskTypesTypeOutput) ToGetDiskTypesTypeOutputWithContext(ctx context.Context) GetDiskTypesTypeOutput {
	return o
}

// The maximum value of the data disk to supported the specific instance type
func (o GetDiskTypesTypeOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiskTypesType) int { return v.Max }).(pulumi.IntOutput)
}

// The mininum value of the data disk to supported the specific instance type
func (o GetDiskTypesTypeOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiskTypesType) int { return v.Min }).(pulumi.IntOutput)
}

// The value of the data disk or system disk
func (o GetDiskTypesTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskTypesType) string { return v.Value }).(pulumi.StringOutput)
}

type GetDiskTypesTypeArrayOutput struct{ *pulumi.OutputState }

func (GetDiskTypesTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskTypesType)(nil)).Elem()
}

func (o GetDiskTypesTypeArrayOutput) ToGetDiskTypesTypeArrayOutput() GetDiskTypesTypeArrayOutput {
	return o
}

func (o GetDiskTypesTypeArrayOutput) ToGetDiskTypesTypeArrayOutputWithContext(ctx context.Context) GetDiskTypesTypeArrayOutput {
	return o
}

func (o GetDiskTypesTypeArrayOutput) Index(i pulumi.IntInput) GetDiskTypesTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskTypesType {
		return vs[0].([]GetDiskTypesType)[vs[1].(int)]
	}).(GetDiskTypesTypeOutput)
}

type GetInstanceTypesType struct {
	// The ID of the instance type.
	Id string `pulumi:"id"`
	// Local capacity of the applied ecs instance for emr cluster. Unit: GB.
	LocalStorageCapacity int `pulumi:"localStorageCapacity"`
	// The supported resources of specific zoneId.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstanceTypesTypeInput is an input type that accepts GetInstanceTypesTypeArgs and GetInstanceTypesTypeOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeInput` via:
//
//	GetInstanceTypesTypeArgs{...}
type GetInstanceTypesTypeInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput
	ToGetInstanceTypesTypeOutputWithContext(context.Context) GetInstanceTypesTypeOutput
}

type GetInstanceTypesTypeArgs struct {
	// The ID of the instance type.
	Id pulumi.StringInput `pulumi:"id"`
	// Local capacity of the applied ecs instance for emr cluster. Unit: GB.
	LocalStorageCapacity pulumi.IntInput `pulumi:"localStorageCapacity"`
	// The supported resources of specific zoneId.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstanceTypesTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return i.ToGetInstanceTypesTypeOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArgs) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeOutput)
}

// GetInstanceTypesTypeArrayInput is an input type that accepts GetInstanceTypesTypeArray and GetInstanceTypesTypeArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesTypeArrayInput` via:
//
//	GetInstanceTypesTypeArray{ GetInstanceTypesTypeArgs{...} }
type GetInstanceTypesTypeArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput
	ToGetInstanceTypesTypeArrayOutputWithContext(context.Context) GetInstanceTypesTypeArrayOutput
}

type GetInstanceTypesTypeArray []GetInstanceTypesTypeInput

func (GetInstanceTypesTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return i.ToGetInstanceTypesTypeArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesTypeArray) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesTypeArrayOutput)
}

type GetInstanceTypesTypeOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutput() GetInstanceTypesTypeOutput {
	return o
}

func (o GetInstanceTypesTypeOutput) ToGetInstanceTypesTypeOutputWithContext(ctx context.Context) GetInstanceTypesTypeOutput {
	return o
}

// The ID of the instance type.
func (o GetInstanceTypesTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.Id }).(pulumi.StringOutput)
}

// Local capacity of the applied ecs instance for emr cluster. Unit: GB.
func (o GetInstanceTypesTypeOutput) LocalStorageCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesType) int { return v.LocalStorageCapacity }).(pulumi.IntOutput)
}

// The supported resources of specific zoneId.
func (o GetInstanceTypesTypeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesType) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstanceTypesTypeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesType)(nil)).Elem()
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutput() GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) ToGetInstanceTypesTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesTypeArrayOutput {
	return o
}

func (o GetInstanceTypesTypeArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesType {
		return vs[0].([]GetInstanceTypesType)[vs[1].(int)]
	}).(GetInstanceTypesTypeOutput)
}

type GetMainVersionsMainVersion struct {
	// A list of cluster types the emr cluster supported. Possible values: `HADOOP`, `ZOOKEEPER`, `KAFKA`, `DRUID`.
	ClusterTypes []string `pulumi:"clusterTypes"`
	// The version of the emr cluster instance. Possible values: `EMR-4.0.0`, `EMR-3.23.0`, `EMR-3.22.0`.
	EmrVersion string `pulumi:"emrVersion"`
	// The image id of the emr cluster instance.
	ImageId string `pulumi:"imageId"`
}

// GetMainVersionsMainVersionInput is an input type that accepts GetMainVersionsMainVersionArgs and GetMainVersionsMainVersionOutput values.
// You can construct a concrete instance of `GetMainVersionsMainVersionInput` via:
//
//	GetMainVersionsMainVersionArgs{...}
type GetMainVersionsMainVersionInput interface {
	pulumi.Input

	ToGetMainVersionsMainVersionOutput() GetMainVersionsMainVersionOutput
	ToGetMainVersionsMainVersionOutputWithContext(context.Context) GetMainVersionsMainVersionOutput
}

type GetMainVersionsMainVersionArgs struct {
	// A list of cluster types the emr cluster supported. Possible values: `HADOOP`, `ZOOKEEPER`, `KAFKA`, `DRUID`.
	ClusterTypes pulumi.StringArrayInput `pulumi:"clusterTypes"`
	// The version of the emr cluster instance. Possible values: `EMR-4.0.0`, `EMR-3.23.0`, `EMR-3.22.0`.
	EmrVersion pulumi.StringInput `pulumi:"emrVersion"`
	// The image id of the emr cluster instance.
	ImageId pulumi.StringInput `pulumi:"imageId"`
}

func (GetMainVersionsMainVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMainVersionsMainVersion)(nil)).Elem()
}

func (i GetMainVersionsMainVersionArgs) ToGetMainVersionsMainVersionOutput() GetMainVersionsMainVersionOutput {
	return i.ToGetMainVersionsMainVersionOutputWithContext(context.Background())
}

func (i GetMainVersionsMainVersionArgs) ToGetMainVersionsMainVersionOutputWithContext(ctx context.Context) GetMainVersionsMainVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMainVersionsMainVersionOutput)
}

// GetMainVersionsMainVersionArrayInput is an input type that accepts GetMainVersionsMainVersionArray and GetMainVersionsMainVersionArrayOutput values.
// You can construct a concrete instance of `GetMainVersionsMainVersionArrayInput` via:
//
//	GetMainVersionsMainVersionArray{ GetMainVersionsMainVersionArgs{...} }
type GetMainVersionsMainVersionArrayInput interface {
	pulumi.Input

	ToGetMainVersionsMainVersionArrayOutput() GetMainVersionsMainVersionArrayOutput
	ToGetMainVersionsMainVersionArrayOutputWithContext(context.Context) GetMainVersionsMainVersionArrayOutput
}

type GetMainVersionsMainVersionArray []GetMainVersionsMainVersionInput

func (GetMainVersionsMainVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMainVersionsMainVersion)(nil)).Elem()
}

func (i GetMainVersionsMainVersionArray) ToGetMainVersionsMainVersionArrayOutput() GetMainVersionsMainVersionArrayOutput {
	return i.ToGetMainVersionsMainVersionArrayOutputWithContext(context.Background())
}

func (i GetMainVersionsMainVersionArray) ToGetMainVersionsMainVersionArrayOutputWithContext(ctx context.Context) GetMainVersionsMainVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMainVersionsMainVersionArrayOutput)
}

type GetMainVersionsMainVersionOutput struct{ *pulumi.OutputState }

func (GetMainVersionsMainVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMainVersionsMainVersion)(nil)).Elem()
}

func (o GetMainVersionsMainVersionOutput) ToGetMainVersionsMainVersionOutput() GetMainVersionsMainVersionOutput {
	return o
}

func (o GetMainVersionsMainVersionOutput) ToGetMainVersionsMainVersionOutputWithContext(ctx context.Context) GetMainVersionsMainVersionOutput {
	return o
}

// A list of cluster types the emr cluster supported. Possible values: `HADOOP`, `ZOOKEEPER`, `KAFKA`, `DRUID`.
func (o GetMainVersionsMainVersionOutput) ClusterTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMainVersionsMainVersion) []string { return v.ClusterTypes }).(pulumi.StringArrayOutput)
}

// The version of the emr cluster instance. Possible values: `EMR-4.0.0`, `EMR-3.23.0`, `EMR-3.22.0`.
func (o GetMainVersionsMainVersionOutput) EmrVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMainVersionsMainVersion) string { return v.EmrVersion }).(pulumi.StringOutput)
}

// The image id of the emr cluster instance.
func (o GetMainVersionsMainVersionOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMainVersionsMainVersion) string { return v.ImageId }).(pulumi.StringOutput)
}

type GetMainVersionsMainVersionArrayOutput struct{ *pulumi.OutputState }

func (GetMainVersionsMainVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMainVersionsMainVersion)(nil)).Elem()
}

func (o GetMainVersionsMainVersionArrayOutput) ToGetMainVersionsMainVersionArrayOutput() GetMainVersionsMainVersionArrayOutput {
	return o
}

func (o GetMainVersionsMainVersionArrayOutput) ToGetMainVersionsMainVersionArrayOutputWithContext(ctx context.Context) GetMainVersionsMainVersionArrayOutput {
	return o
}

func (o GetMainVersionsMainVersionArrayOutput) Index(i pulumi.IntInput) GetMainVersionsMainVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMainVersionsMainVersion {
		return vs[0].([]GetMainVersionsMainVersion)[vs[1].(int)]
	}).(GetMainVersionsMainVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBootstrapActionInput)(nil)).Elem(), ClusterBootstrapActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBootstrapActionArrayInput)(nil)).Elem(), ClusterBootstrapActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigInput)(nil)).Elem(), ClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigArrayInput)(nil)).Elem(), ClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHostGroupInput)(nil)).Elem(), ClusterHostGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHostGroupArrayInput)(nil)).Elem(), ClusterHostGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetaStoreConfInput)(nil)).Elem(), ClusterMetaStoreConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetaStoreConfPtrInput)(nil)).Elem(), ClusterMetaStoreConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterModifyClusterServiceConfigInput)(nil)).Elem(), ClusterModifyClusterServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterModifyClusterServiceConfigPtrInput)(nil)).Elem(), ClusterModifyClusterServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterInput)(nil)).Elem(), GetClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterArrayInput)(nil)).Elem(), GetClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterAccessInfoInput)(nil)).Elem(), GetClustersClusterAccessInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterAccessInfoArrayInput)(nil)).Elem(), GetClustersClusterAccessInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterAccessInfoZkLinkInput)(nil)).Elem(), GetClustersClusterAccessInfoZkLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterAccessInfoZkLinkArrayInput)(nil)).Elem(), GetClustersClusterAccessInfoZkLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterBootstrapActionListInput)(nil)).Elem(), GetClustersClusterBootstrapActionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterBootstrapActionListArrayInput)(nil)).Elem(), GetClustersClusterBootstrapActionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListInput)(nil)).Elem(), GetClustersClusterHostGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListArrayInput)(nil)).Elem(), GetClustersClusterHostGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListNodeInput)(nil)).Elem(), GetClustersClusterHostGroupListNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListNodeArrayInput)(nil)).Elem(), GetClustersClusterHostGroupListNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListNodeDiskInfoInput)(nil)).Elem(), GetClustersClusterHostGroupListNodeDiskInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostGroupListNodeDiskInfoArrayInput)(nil)).Elem(), GetClustersClusterHostGroupListNodeDiskInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostPoolInfoInput)(nil)).Elem(), GetClustersClusterHostPoolInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterHostPoolInfoArrayInput)(nil)).Elem(), GetClustersClusterHostPoolInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterRelateClusterInfoInput)(nil)).Elem(), GetClustersClusterRelateClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterRelateClusterInfoArrayInput)(nil)).Elem(), GetClustersClusterRelateClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterSoftwareInfoInput)(nil)).Elem(), GetClustersClusterSoftwareInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterSoftwareInfoArrayInput)(nil)).Elem(), GetClustersClusterSoftwareInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterSoftwareInfoSoftwareInput)(nil)).Elem(), GetClustersClusterSoftwareInfoSoftwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterSoftwareInfoSoftwareArrayInput)(nil)).Elem(), GetClustersClusterSoftwareInfoSoftwareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskTypesTypeInput)(nil)).Elem(), GetDiskTypesTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskTypesTypeArrayInput)(nil)).Elem(), GetDiskTypesTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeInput)(nil)).Elem(), GetInstanceTypesTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesTypeArrayInput)(nil)).Elem(), GetInstanceTypesTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMainVersionsMainVersionInput)(nil)).Elem(), GetMainVersionsMainVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMainVersionsMainVersionArrayInput)(nil)).Elem(), GetMainVersionsMainVersionArray{})
	pulumi.RegisterOutputType(ClusterBootstrapActionOutput{})
	pulumi.RegisterOutputType(ClusterBootstrapActionArrayOutput{})
	pulumi.RegisterOutputType(ClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterHostGroupOutput{})
	pulumi.RegisterOutputType(ClusterHostGroupArrayOutput{})
	pulumi.RegisterOutputType(ClusterMetaStoreConfOutput{})
	pulumi.RegisterOutputType(ClusterMetaStoreConfPtrOutput{})
	pulumi.RegisterOutputType(ClusterModifyClusterServiceConfigOutput{})
	pulumi.RegisterOutputType(ClusterModifyClusterServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterAccessInfoOutput{})
	pulumi.RegisterOutputType(GetClustersClusterAccessInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterAccessInfoZkLinkOutput{})
	pulumi.RegisterOutputType(GetClustersClusterAccessInfoZkLinkArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterBootstrapActionListOutput{})
	pulumi.RegisterOutputType(GetClustersClusterBootstrapActionListArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListNodeDiskInfoOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostGroupListNodeDiskInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostPoolInfoOutput{})
	pulumi.RegisterOutputType(GetClustersClusterHostPoolInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterRelateClusterInfoOutput{})
	pulumi.RegisterOutputType(GetClustersClusterRelateClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterSoftwareInfoOutput{})
	pulumi.RegisterOutputType(GetClustersClusterSoftwareInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterSoftwareInfoSoftwareOutput{})
	pulumi.RegisterOutputType(GetClustersClusterSoftwareInfoSoftwareArrayOutput{})
	pulumi.RegisterOutputType(GetDiskTypesTypeOutput{})
	pulumi.RegisterOutputType(GetDiskTypesTypeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesTypeArrayOutput{})
	pulumi.RegisterOutputType(GetMainVersionsMainVersionOutput{})
	pulumi.RegisterOutputType(GetMainVersionsMainVersionArrayOutput{})
}
