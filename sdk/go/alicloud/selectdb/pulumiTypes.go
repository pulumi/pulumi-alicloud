// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package selectdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DbClusterDesiredParam struct {
	// Parameter name.
	Name *string `pulumi:"name"`
	// The new value of Parameter.
	Value *string `pulumi:"value"`
}

// DbClusterDesiredParamInput is an input type that accepts DbClusterDesiredParamArgs and DbClusterDesiredParamOutput values.
// You can construct a concrete instance of `DbClusterDesiredParamInput` via:
//
//	DbClusterDesiredParamArgs{...}
type DbClusterDesiredParamInput interface {
	pulumi.Input

	ToDbClusterDesiredParamOutput() DbClusterDesiredParamOutput
	ToDbClusterDesiredParamOutputWithContext(context.Context) DbClusterDesiredParamOutput
}

type DbClusterDesiredParamArgs struct {
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The new value of Parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DbClusterDesiredParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterDesiredParam)(nil)).Elem()
}

func (i DbClusterDesiredParamArgs) ToDbClusterDesiredParamOutput() DbClusterDesiredParamOutput {
	return i.ToDbClusterDesiredParamOutputWithContext(context.Background())
}

func (i DbClusterDesiredParamArgs) ToDbClusterDesiredParamOutputWithContext(ctx context.Context) DbClusterDesiredParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterDesiredParamOutput)
}

// DbClusterDesiredParamArrayInput is an input type that accepts DbClusterDesiredParamArray and DbClusterDesiredParamArrayOutput values.
// You can construct a concrete instance of `DbClusterDesiredParamArrayInput` via:
//
//	DbClusterDesiredParamArray{ DbClusterDesiredParamArgs{...} }
type DbClusterDesiredParamArrayInput interface {
	pulumi.Input

	ToDbClusterDesiredParamArrayOutput() DbClusterDesiredParamArrayOutput
	ToDbClusterDesiredParamArrayOutputWithContext(context.Context) DbClusterDesiredParamArrayOutput
}

type DbClusterDesiredParamArray []DbClusterDesiredParamInput

func (DbClusterDesiredParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterDesiredParam)(nil)).Elem()
}

func (i DbClusterDesiredParamArray) ToDbClusterDesiredParamArrayOutput() DbClusterDesiredParamArrayOutput {
	return i.ToDbClusterDesiredParamArrayOutputWithContext(context.Background())
}

func (i DbClusterDesiredParamArray) ToDbClusterDesiredParamArrayOutputWithContext(ctx context.Context) DbClusterDesiredParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterDesiredParamArrayOutput)
}

type DbClusterDesiredParamOutput struct{ *pulumi.OutputState }

func (DbClusterDesiredParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterDesiredParam)(nil)).Elem()
}

func (o DbClusterDesiredParamOutput) ToDbClusterDesiredParamOutput() DbClusterDesiredParamOutput {
	return o
}

func (o DbClusterDesiredParamOutput) ToDbClusterDesiredParamOutputWithContext(ctx context.Context) DbClusterDesiredParamOutput {
	return o
}

// Parameter name.
func (o DbClusterDesiredParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterDesiredParam) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The new value of Parameter.
func (o DbClusterDesiredParamOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterDesiredParam) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DbClusterDesiredParamArrayOutput struct{ *pulumi.OutputState }

func (DbClusterDesiredParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterDesiredParam)(nil)).Elem()
}

func (o DbClusterDesiredParamArrayOutput) ToDbClusterDesiredParamArrayOutput() DbClusterDesiredParamArrayOutput {
	return o
}

func (o DbClusterDesiredParamArrayOutput) ToDbClusterDesiredParamArrayOutputWithContext(ctx context.Context) DbClusterDesiredParamArrayOutput {
	return o
}

func (o DbClusterDesiredParamArrayOutput) Index(i pulumi.IntInput) DbClusterDesiredParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbClusterDesiredParam {
		return vs[0].([]DbClusterDesiredParam)[vs[1].(int)]
	}).(DbClusterDesiredParamOutput)
}

type DbClusterParamChangeLog struct {
	// The id of parameter change.
	ConfigId *int `pulumi:"configId"`
	// When the parameter change is created.
	GmtCreated *string `pulumi:"gmtCreated"`
	// When the parameter change is modified.
	GmtModified *string `pulumi:"gmtModified"`
	// Whether the parameter changing is applied.
	IsApplied *bool `pulumi:"isApplied"`
	// Changed parameter name.
	Name *string `pulumi:"name"`
	// The new value of parameter.
	NewValue *string `pulumi:"newValue"`
	// The old value of parameter.
	OldValue *string `pulumi:"oldValue"`
}

// DbClusterParamChangeLogInput is an input type that accepts DbClusterParamChangeLogArgs and DbClusterParamChangeLogOutput values.
// You can construct a concrete instance of `DbClusterParamChangeLogInput` via:
//
//	DbClusterParamChangeLogArgs{...}
type DbClusterParamChangeLogInput interface {
	pulumi.Input

	ToDbClusterParamChangeLogOutput() DbClusterParamChangeLogOutput
	ToDbClusterParamChangeLogOutputWithContext(context.Context) DbClusterParamChangeLogOutput
}

type DbClusterParamChangeLogArgs struct {
	// The id of parameter change.
	ConfigId pulumi.IntPtrInput `pulumi:"configId"`
	// When the parameter change is created.
	GmtCreated pulumi.StringPtrInput `pulumi:"gmtCreated"`
	// When the parameter change is modified.
	GmtModified pulumi.StringPtrInput `pulumi:"gmtModified"`
	// Whether the parameter changing is applied.
	IsApplied pulumi.BoolPtrInput `pulumi:"isApplied"`
	// Changed parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The new value of parameter.
	NewValue pulumi.StringPtrInput `pulumi:"newValue"`
	// The old value of parameter.
	OldValue pulumi.StringPtrInput `pulumi:"oldValue"`
}

func (DbClusterParamChangeLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterParamChangeLog)(nil)).Elem()
}

func (i DbClusterParamChangeLogArgs) ToDbClusterParamChangeLogOutput() DbClusterParamChangeLogOutput {
	return i.ToDbClusterParamChangeLogOutputWithContext(context.Background())
}

func (i DbClusterParamChangeLogArgs) ToDbClusterParamChangeLogOutputWithContext(ctx context.Context) DbClusterParamChangeLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterParamChangeLogOutput)
}

// DbClusterParamChangeLogArrayInput is an input type that accepts DbClusterParamChangeLogArray and DbClusterParamChangeLogArrayOutput values.
// You can construct a concrete instance of `DbClusterParamChangeLogArrayInput` via:
//
//	DbClusterParamChangeLogArray{ DbClusterParamChangeLogArgs{...} }
type DbClusterParamChangeLogArrayInput interface {
	pulumi.Input

	ToDbClusterParamChangeLogArrayOutput() DbClusterParamChangeLogArrayOutput
	ToDbClusterParamChangeLogArrayOutputWithContext(context.Context) DbClusterParamChangeLogArrayOutput
}

type DbClusterParamChangeLogArray []DbClusterParamChangeLogInput

func (DbClusterParamChangeLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterParamChangeLog)(nil)).Elem()
}

func (i DbClusterParamChangeLogArray) ToDbClusterParamChangeLogArrayOutput() DbClusterParamChangeLogArrayOutput {
	return i.ToDbClusterParamChangeLogArrayOutputWithContext(context.Background())
}

func (i DbClusterParamChangeLogArray) ToDbClusterParamChangeLogArrayOutputWithContext(ctx context.Context) DbClusterParamChangeLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterParamChangeLogArrayOutput)
}

type DbClusterParamChangeLogOutput struct{ *pulumi.OutputState }

func (DbClusterParamChangeLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterParamChangeLog)(nil)).Elem()
}

func (o DbClusterParamChangeLogOutput) ToDbClusterParamChangeLogOutput() DbClusterParamChangeLogOutput {
	return o
}

func (o DbClusterParamChangeLogOutput) ToDbClusterParamChangeLogOutputWithContext(ctx context.Context) DbClusterParamChangeLogOutput {
	return o
}

// The id of parameter change.
func (o DbClusterParamChangeLogOutput) ConfigId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *int { return v.ConfigId }).(pulumi.IntPtrOutput)
}

// When the parameter change is created.
func (o DbClusterParamChangeLogOutput) GmtCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *string { return v.GmtCreated }).(pulumi.StringPtrOutput)
}

// When the parameter change is modified.
func (o DbClusterParamChangeLogOutput) GmtModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *string { return v.GmtModified }).(pulumi.StringPtrOutput)
}

// Whether the parameter changing is applied.
func (o DbClusterParamChangeLogOutput) IsApplied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *bool { return v.IsApplied }).(pulumi.BoolPtrOutput)
}

// Changed parameter name.
func (o DbClusterParamChangeLogOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The new value of parameter.
func (o DbClusterParamChangeLogOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *string { return v.NewValue }).(pulumi.StringPtrOutput)
}

// The old value of parameter.
func (o DbClusterParamChangeLogOutput) OldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterParamChangeLog) *string { return v.OldValue }).(pulumi.StringPtrOutput)
}

type DbClusterParamChangeLogArrayOutput struct{ *pulumi.OutputState }

func (DbClusterParamChangeLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterParamChangeLog)(nil)).Elem()
}

func (o DbClusterParamChangeLogArrayOutput) ToDbClusterParamChangeLogArrayOutput() DbClusterParamChangeLogArrayOutput {
	return o
}

func (o DbClusterParamChangeLogArrayOutput) ToDbClusterParamChangeLogArrayOutputWithContext(ctx context.Context) DbClusterParamChangeLogArrayOutput {
	return o
}

func (o DbClusterParamChangeLogArrayOutput) Index(i pulumi.IntInput) DbClusterParamChangeLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbClusterParamChangeLog {
		return vs[0].([]DbClusterParamChangeLog)[vs[1].(int)]
	}).(DbClusterParamChangeLogOutput)
}

type DbInstanceDesiredSecurityIpList struct {
	// Security group name.
	GroupName *string `pulumi:"groupName"`
	// The IP list of Security group. Each single IP value should be Separated by comma.
	SecurityIpList *string `pulumi:"securityIpList"`
}

// DbInstanceDesiredSecurityIpListInput is an input type that accepts DbInstanceDesiredSecurityIpListArgs and DbInstanceDesiredSecurityIpListOutput values.
// You can construct a concrete instance of `DbInstanceDesiredSecurityIpListInput` via:
//
//	DbInstanceDesiredSecurityIpListArgs{...}
type DbInstanceDesiredSecurityIpListInput interface {
	pulumi.Input

	ToDbInstanceDesiredSecurityIpListOutput() DbInstanceDesiredSecurityIpListOutput
	ToDbInstanceDesiredSecurityIpListOutputWithContext(context.Context) DbInstanceDesiredSecurityIpListOutput
}

type DbInstanceDesiredSecurityIpListArgs struct {
	// Security group name.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The IP list of Security group. Each single IP value should be Separated by comma.
	SecurityIpList pulumi.StringPtrInput `pulumi:"securityIpList"`
}

func (DbInstanceDesiredSecurityIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceDesiredSecurityIpList)(nil)).Elem()
}

func (i DbInstanceDesiredSecurityIpListArgs) ToDbInstanceDesiredSecurityIpListOutput() DbInstanceDesiredSecurityIpListOutput {
	return i.ToDbInstanceDesiredSecurityIpListOutputWithContext(context.Background())
}

func (i DbInstanceDesiredSecurityIpListArgs) ToDbInstanceDesiredSecurityIpListOutputWithContext(ctx context.Context) DbInstanceDesiredSecurityIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceDesiredSecurityIpListOutput)
}

// DbInstanceDesiredSecurityIpListArrayInput is an input type that accepts DbInstanceDesiredSecurityIpListArray and DbInstanceDesiredSecurityIpListArrayOutput values.
// You can construct a concrete instance of `DbInstanceDesiredSecurityIpListArrayInput` via:
//
//	DbInstanceDesiredSecurityIpListArray{ DbInstanceDesiredSecurityIpListArgs{...} }
type DbInstanceDesiredSecurityIpListArrayInput interface {
	pulumi.Input

	ToDbInstanceDesiredSecurityIpListArrayOutput() DbInstanceDesiredSecurityIpListArrayOutput
	ToDbInstanceDesiredSecurityIpListArrayOutputWithContext(context.Context) DbInstanceDesiredSecurityIpListArrayOutput
}

type DbInstanceDesiredSecurityIpListArray []DbInstanceDesiredSecurityIpListInput

func (DbInstanceDesiredSecurityIpListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceDesiredSecurityIpList)(nil)).Elem()
}

func (i DbInstanceDesiredSecurityIpListArray) ToDbInstanceDesiredSecurityIpListArrayOutput() DbInstanceDesiredSecurityIpListArrayOutput {
	return i.ToDbInstanceDesiredSecurityIpListArrayOutputWithContext(context.Background())
}

func (i DbInstanceDesiredSecurityIpListArray) ToDbInstanceDesiredSecurityIpListArrayOutputWithContext(ctx context.Context) DbInstanceDesiredSecurityIpListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceDesiredSecurityIpListArrayOutput)
}

type DbInstanceDesiredSecurityIpListOutput struct{ *pulumi.OutputState }

func (DbInstanceDesiredSecurityIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceDesiredSecurityIpList)(nil)).Elem()
}

func (o DbInstanceDesiredSecurityIpListOutput) ToDbInstanceDesiredSecurityIpListOutput() DbInstanceDesiredSecurityIpListOutput {
	return o
}

func (o DbInstanceDesiredSecurityIpListOutput) ToDbInstanceDesiredSecurityIpListOutputWithContext(ctx context.Context) DbInstanceDesiredSecurityIpListOutput {
	return o
}

// Security group name.
func (o DbInstanceDesiredSecurityIpListOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceDesiredSecurityIpList) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The IP list of Security group. Each single IP value should be Separated by comma.
func (o DbInstanceDesiredSecurityIpListOutput) SecurityIpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceDesiredSecurityIpList) *string { return v.SecurityIpList }).(pulumi.StringPtrOutput)
}

type DbInstanceDesiredSecurityIpListArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceDesiredSecurityIpListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceDesiredSecurityIpList)(nil)).Elem()
}

func (o DbInstanceDesiredSecurityIpListArrayOutput) ToDbInstanceDesiredSecurityIpListArrayOutput() DbInstanceDesiredSecurityIpListArrayOutput {
	return o
}

func (o DbInstanceDesiredSecurityIpListArrayOutput) ToDbInstanceDesiredSecurityIpListArrayOutputWithContext(ctx context.Context) DbInstanceDesiredSecurityIpListArrayOutput {
	return o
}

func (o DbInstanceDesiredSecurityIpListArrayOutput) Index(i pulumi.IntInput) DbInstanceDesiredSecurityIpListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceDesiredSecurityIpList {
		return vs[0].([]DbInstanceDesiredSecurityIpList)[vs[1].(int)]
	}).(DbInstanceDesiredSecurityIpListOutput)
}

type DbInstanceInstanceNetInfo struct {
	// The connection string of the instance.
	ConnectionString *string `pulumi:"connectionString"`
	// The IP address of the instance.
	DbIp *string `pulumi:"dbIp"`
	// The network type of the instance.
	NetType *string `pulumi:"netType"`
	// A list for port provides SelectDB service.
	PortLists []DbInstanceInstanceNetInfoPortList `pulumi:"portLists"`
	// The VPC ID.
	VpcInstanceId *string `pulumi:"vpcInstanceId"`
	// The ID of vswitch for DBInstance.
	VswitchId *string `pulumi:"vswitchId"`
}

// DbInstanceInstanceNetInfoInput is an input type that accepts DbInstanceInstanceNetInfoArgs and DbInstanceInstanceNetInfoOutput values.
// You can construct a concrete instance of `DbInstanceInstanceNetInfoInput` via:
//
//	DbInstanceInstanceNetInfoArgs{...}
type DbInstanceInstanceNetInfoInput interface {
	pulumi.Input

	ToDbInstanceInstanceNetInfoOutput() DbInstanceInstanceNetInfoOutput
	ToDbInstanceInstanceNetInfoOutputWithContext(context.Context) DbInstanceInstanceNetInfoOutput
}

type DbInstanceInstanceNetInfoArgs struct {
	// The connection string of the instance.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The IP address of the instance.
	DbIp pulumi.StringPtrInput `pulumi:"dbIp"`
	// The network type of the instance.
	NetType pulumi.StringPtrInput `pulumi:"netType"`
	// A list for port provides SelectDB service.
	PortLists DbInstanceInstanceNetInfoPortListArrayInput `pulumi:"portLists"`
	// The VPC ID.
	VpcInstanceId pulumi.StringPtrInput `pulumi:"vpcInstanceId"`
	// The ID of vswitch for DBInstance.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (DbInstanceInstanceNetInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceInstanceNetInfo)(nil)).Elem()
}

func (i DbInstanceInstanceNetInfoArgs) ToDbInstanceInstanceNetInfoOutput() DbInstanceInstanceNetInfoOutput {
	return i.ToDbInstanceInstanceNetInfoOutputWithContext(context.Background())
}

func (i DbInstanceInstanceNetInfoArgs) ToDbInstanceInstanceNetInfoOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceInstanceNetInfoOutput)
}

// DbInstanceInstanceNetInfoArrayInput is an input type that accepts DbInstanceInstanceNetInfoArray and DbInstanceInstanceNetInfoArrayOutput values.
// You can construct a concrete instance of `DbInstanceInstanceNetInfoArrayInput` via:
//
//	DbInstanceInstanceNetInfoArray{ DbInstanceInstanceNetInfoArgs{...} }
type DbInstanceInstanceNetInfoArrayInput interface {
	pulumi.Input

	ToDbInstanceInstanceNetInfoArrayOutput() DbInstanceInstanceNetInfoArrayOutput
	ToDbInstanceInstanceNetInfoArrayOutputWithContext(context.Context) DbInstanceInstanceNetInfoArrayOutput
}

type DbInstanceInstanceNetInfoArray []DbInstanceInstanceNetInfoInput

func (DbInstanceInstanceNetInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceInstanceNetInfo)(nil)).Elem()
}

func (i DbInstanceInstanceNetInfoArray) ToDbInstanceInstanceNetInfoArrayOutput() DbInstanceInstanceNetInfoArrayOutput {
	return i.ToDbInstanceInstanceNetInfoArrayOutputWithContext(context.Background())
}

func (i DbInstanceInstanceNetInfoArray) ToDbInstanceInstanceNetInfoArrayOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceInstanceNetInfoArrayOutput)
}

type DbInstanceInstanceNetInfoOutput struct{ *pulumi.OutputState }

func (DbInstanceInstanceNetInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceInstanceNetInfo)(nil)).Elem()
}

func (o DbInstanceInstanceNetInfoOutput) ToDbInstanceInstanceNetInfoOutput() DbInstanceInstanceNetInfoOutput {
	return o
}

func (o DbInstanceInstanceNetInfoOutput) ToDbInstanceInstanceNetInfoOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoOutput {
	return o
}

// The connection string of the instance.
func (o DbInstanceInstanceNetInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The IP address of the instance.
func (o DbInstanceInstanceNetInfoOutput) DbIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) *string { return v.DbIp }).(pulumi.StringPtrOutput)
}

// The network type of the instance.
func (o DbInstanceInstanceNetInfoOutput) NetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) *string { return v.NetType }).(pulumi.StringPtrOutput)
}

// A list for port provides SelectDB service.
func (o DbInstanceInstanceNetInfoOutput) PortLists() DbInstanceInstanceNetInfoPortListArrayOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) []DbInstanceInstanceNetInfoPortList { return v.PortLists }).(DbInstanceInstanceNetInfoPortListArrayOutput)
}

// The VPC ID.
func (o DbInstanceInstanceNetInfoOutput) VpcInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) *string { return v.VpcInstanceId }).(pulumi.StringPtrOutput)
}

// The ID of vswitch for DBInstance.
func (o DbInstanceInstanceNetInfoOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfo) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

type DbInstanceInstanceNetInfoArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceInstanceNetInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceInstanceNetInfo)(nil)).Elem()
}

func (o DbInstanceInstanceNetInfoArrayOutput) ToDbInstanceInstanceNetInfoArrayOutput() DbInstanceInstanceNetInfoArrayOutput {
	return o
}

func (o DbInstanceInstanceNetInfoArrayOutput) ToDbInstanceInstanceNetInfoArrayOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoArrayOutput {
	return o
}

func (o DbInstanceInstanceNetInfoArrayOutput) Index(i pulumi.IntInput) DbInstanceInstanceNetInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceInstanceNetInfo {
		return vs[0].([]DbInstanceInstanceNetInfo)[vs[1].(int)]
	}).(DbInstanceInstanceNetInfoOutput)
}

type DbInstanceInstanceNetInfoPortList struct {
	// The port that is used to connect.
	Port *string `pulumi:"port"`
	// The protocol of the port.
	Protocol *string `pulumi:"protocol"`
}

// DbInstanceInstanceNetInfoPortListInput is an input type that accepts DbInstanceInstanceNetInfoPortListArgs and DbInstanceInstanceNetInfoPortListOutput values.
// You can construct a concrete instance of `DbInstanceInstanceNetInfoPortListInput` via:
//
//	DbInstanceInstanceNetInfoPortListArgs{...}
type DbInstanceInstanceNetInfoPortListInput interface {
	pulumi.Input

	ToDbInstanceInstanceNetInfoPortListOutput() DbInstanceInstanceNetInfoPortListOutput
	ToDbInstanceInstanceNetInfoPortListOutputWithContext(context.Context) DbInstanceInstanceNetInfoPortListOutput
}

type DbInstanceInstanceNetInfoPortListArgs struct {
	// The port that is used to connect.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol of the port.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (DbInstanceInstanceNetInfoPortListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceInstanceNetInfoPortList)(nil)).Elem()
}

func (i DbInstanceInstanceNetInfoPortListArgs) ToDbInstanceInstanceNetInfoPortListOutput() DbInstanceInstanceNetInfoPortListOutput {
	return i.ToDbInstanceInstanceNetInfoPortListOutputWithContext(context.Background())
}

func (i DbInstanceInstanceNetInfoPortListArgs) ToDbInstanceInstanceNetInfoPortListOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoPortListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceInstanceNetInfoPortListOutput)
}

// DbInstanceInstanceNetInfoPortListArrayInput is an input type that accepts DbInstanceInstanceNetInfoPortListArray and DbInstanceInstanceNetInfoPortListArrayOutput values.
// You can construct a concrete instance of `DbInstanceInstanceNetInfoPortListArrayInput` via:
//
//	DbInstanceInstanceNetInfoPortListArray{ DbInstanceInstanceNetInfoPortListArgs{...} }
type DbInstanceInstanceNetInfoPortListArrayInput interface {
	pulumi.Input

	ToDbInstanceInstanceNetInfoPortListArrayOutput() DbInstanceInstanceNetInfoPortListArrayOutput
	ToDbInstanceInstanceNetInfoPortListArrayOutputWithContext(context.Context) DbInstanceInstanceNetInfoPortListArrayOutput
}

type DbInstanceInstanceNetInfoPortListArray []DbInstanceInstanceNetInfoPortListInput

func (DbInstanceInstanceNetInfoPortListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceInstanceNetInfoPortList)(nil)).Elem()
}

func (i DbInstanceInstanceNetInfoPortListArray) ToDbInstanceInstanceNetInfoPortListArrayOutput() DbInstanceInstanceNetInfoPortListArrayOutput {
	return i.ToDbInstanceInstanceNetInfoPortListArrayOutputWithContext(context.Background())
}

func (i DbInstanceInstanceNetInfoPortListArray) ToDbInstanceInstanceNetInfoPortListArrayOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoPortListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceInstanceNetInfoPortListArrayOutput)
}

type DbInstanceInstanceNetInfoPortListOutput struct{ *pulumi.OutputState }

func (DbInstanceInstanceNetInfoPortListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceInstanceNetInfoPortList)(nil)).Elem()
}

func (o DbInstanceInstanceNetInfoPortListOutput) ToDbInstanceInstanceNetInfoPortListOutput() DbInstanceInstanceNetInfoPortListOutput {
	return o
}

func (o DbInstanceInstanceNetInfoPortListOutput) ToDbInstanceInstanceNetInfoPortListOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoPortListOutput {
	return o
}

// The port that is used to connect.
func (o DbInstanceInstanceNetInfoPortListOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfoPortList) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol of the port.
func (o DbInstanceInstanceNetInfoPortListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceInstanceNetInfoPortList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type DbInstanceInstanceNetInfoPortListArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceInstanceNetInfoPortListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceInstanceNetInfoPortList)(nil)).Elem()
}

func (o DbInstanceInstanceNetInfoPortListArrayOutput) ToDbInstanceInstanceNetInfoPortListArrayOutput() DbInstanceInstanceNetInfoPortListArrayOutput {
	return o
}

func (o DbInstanceInstanceNetInfoPortListArrayOutput) ToDbInstanceInstanceNetInfoPortListArrayOutputWithContext(ctx context.Context) DbInstanceInstanceNetInfoPortListArrayOutput {
	return o
}

func (o DbInstanceInstanceNetInfoPortListArrayOutput) Index(i pulumi.IntInput) DbInstanceInstanceNetInfoPortListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceInstanceNetInfoPortList {
		return vs[0].([]DbInstanceInstanceNetInfoPortList)[vs[1].(int)]
	}).(DbInstanceInstanceNetInfoPortListOutput)
}

type DbInstanceSecurityIpList struct {
	// Security group name.
	GroupName *string `pulumi:"groupName"`
	// The tag of Security group.
	GroupTag *string `pulumi:"groupTag"`
	// The network type of Security group.
	ListNetType *string `pulumi:"listNetType"`
	// The IP list of Security group. Each single IP value should be Separated by comma.
	SecurityIpList *string `pulumi:"securityIpList"`
	// The IP address type. Valid values: `ipv4`, `ipv6` (not supported).
	SecurityIpType *string `pulumi:"securityIpType"`
}

// DbInstanceSecurityIpListInput is an input type that accepts DbInstanceSecurityIpListArgs and DbInstanceSecurityIpListOutput values.
// You can construct a concrete instance of `DbInstanceSecurityIpListInput` via:
//
//	DbInstanceSecurityIpListArgs{...}
type DbInstanceSecurityIpListInput interface {
	pulumi.Input

	ToDbInstanceSecurityIpListOutput() DbInstanceSecurityIpListOutput
	ToDbInstanceSecurityIpListOutputWithContext(context.Context) DbInstanceSecurityIpListOutput
}

type DbInstanceSecurityIpListArgs struct {
	// Security group name.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The tag of Security group.
	GroupTag pulumi.StringPtrInput `pulumi:"groupTag"`
	// The network type of Security group.
	ListNetType pulumi.StringPtrInput `pulumi:"listNetType"`
	// The IP list of Security group. Each single IP value should be Separated by comma.
	SecurityIpList pulumi.StringPtrInput `pulumi:"securityIpList"`
	// The IP address type. Valid values: `ipv4`, `ipv6` (not supported).
	SecurityIpType pulumi.StringPtrInput `pulumi:"securityIpType"`
}

func (DbInstanceSecurityIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceSecurityIpList)(nil)).Elem()
}

func (i DbInstanceSecurityIpListArgs) ToDbInstanceSecurityIpListOutput() DbInstanceSecurityIpListOutput {
	return i.ToDbInstanceSecurityIpListOutputWithContext(context.Background())
}

func (i DbInstanceSecurityIpListArgs) ToDbInstanceSecurityIpListOutputWithContext(ctx context.Context) DbInstanceSecurityIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceSecurityIpListOutput)
}

// DbInstanceSecurityIpListArrayInput is an input type that accepts DbInstanceSecurityIpListArray and DbInstanceSecurityIpListArrayOutput values.
// You can construct a concrete instance of `DbInstanceSecurityIpListArrayInput` via:
//
//	DbInstanceSecurityIpListArray{ DbInstanceSecurityIpListArgs{...} }
type DbInstanceSecurityIpListArrayInput interface {
	pulumi.Input

	ToDbInstanceSecurityIpListArrayOutput() DbInstanceSecurityIpListArrayOutput
	ToDbInstanceSecurityIpListArrayOutputWithContext(context.Context) DbInstanceSecurityIpListArrayOutput
}

type DbInstanceSecurityIpListArray []DbInstanceSecurityIpListInput

func (DbInstanceSecurityIpListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceSecurityIpList)(nil)).Elem()
}

func (i DbInstanceSecurityIpListArray) ToDbInstanceSecurityIpListArrayOutput() DbInstanceSecurityIpListArrayOutput {
	return i.ToDbInstanceSecurityIpListArrayOutputWithContext(context.Background())
}

func (i DbInstanceSecurityIpListArray) ToDbInstanceSecurityIpListArrayOutputWithContext(ctx context.Context) DbInstanceSecurityIpListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceSecurityIpListArrayOutput)
}

type DbInstanceSecurityIpListOutput struct{ *pulumi.OutputState }

func (DbInstanceSecurityIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceSecurityIpList)(nil)).Elem()
}

func (o DbInstanceSecurityIpListOutput) ToDbInstanceSecurityIpListOutput() DbInstanceSecurityIpListOutput {
	return o
}

func (o DbInstanceSecurityIpListOutput) ToDbInstanceSecurityIpListOutputWithContext(ctx context.Context) DbInstanceSecurityIpListOutput {
	return o
}

// Security group name.
func (o DbInstanceSecurityIpListOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceSecurityIpList) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The tag of Security group.
func (o DbInstanceSecurityIpListOutput) GroupTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceSecurityIpList) *string { return v.GroupTag }).(pulumi.StringPtrOutput)
}

// The network type of Security group.
func (o DbInstanceSecurityIpListOutput) ListNetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceSecurityIpList) *string { return v.ListNetType }).(pulumi.StringPtrOutput)
}

// The IP list of Security group. Each single IP value should be Separated by comma.
func (o DbInstanceSecurityIpListOutput) SecurityIpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceSecurityIpList) *string { return v.SecurityIpList }).(pulumi.StringPtrOutput)
}

// The IP address type. Valid values: `ipv4`, `ipv6` (not supported).
func (o DbInstanceSecurityIpListOutput) SecurityIpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceSecurityIpList) *string { return v.SecurityIpType }).(pulumi.StringPtrOutput)
}

type DbInstanceSecurityIpListArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceSecurityIpListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceSecurityIpList)(nil)).Elem()
}

func (o DbInstanceSecurityIpListArrayOutput) ToDbInstanceSecurityIpListArrayOutput() DbInstanceSecurityIpListArrayOutput {
	return o
}

func (o DbInstanceSecurityIpListArrayOutput) ToDbInstanceSecurityIpListArrayOutputWithContext(ctx context.Context) DbInstanceSecurityIpListArrayOutput {
	return o
}

func (o DbInstanceSecurityIpListArrayOutput) Index(i pulumi.IntInput) DbInstanceSecurityIpListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceSecurityIpList {
		return vs[0].([]DbInstanceSecurityIpList)[vs[1].(int)]
	}).(DbInstanceSecurityIpListOutput)
}

type GetDbClustersCluster struct {
	// The cache size for DBCluster.
	CacheSize int `pulumi:"cacheSize"`
	// The cpu resource amount of DBCluster. Depends on `dbClusterClass`.
	Cpu int `pulumi:"cpu"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The DBCluster class. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbClusterClass string `pulumi:"dbClusterClass"`
	// The DBCluster description.
	DbClusterDescription string `pulumi:"dbClusterDescription"`
	// The cluster ID.
	DbClusterId string `pulumi:"dbClusterId"`
	// The instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The Engine of the DBCluster.
	Engine string `pulumi:"engine"`
	// The engine version of the DBCluster.
	EngineVersion string `pulumi:"engineVersion"`
	Id            string `pulumi:"id"`
	// The memory resource amount of DBCluster. Depends on `dbClusterClass`.
	Memory int `pulumi:"memory"`
	// The configuration change logs of parameters.
	ParamChangeLogs []GetDbClustersClusterParamChangeLog `pulumi:"paramChangeLogs"`
	// The details about each parameter in DBCluster returned.
	Params []GetDbClustersClusterParam `pulumi:"params"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// The ID of region for the cluster.
	RegionId string `pulumi:"regionId"`
	// The status of the DBCluster. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
	Status string `pulumi:"status"`
	// The ID of the VPC for the cluster.
	VpcId string `pulumi:"vpcId"`
	// The ID of zone for the cluster.
	ZoneId string `pulumi:"zoneId"`
}

// GetDbClustersClusterInput is an input type that accepts GetDbClustersClusterArgs and GetDbClustersClusterOutput values.
// You can construct a concrete instance of `GetDbClustersClusterInput` via:
//
//	GetDbClustersClusterArgs{...}
type GetDbClustersClusterInput interface {
	pulumi.Input

	ToGetDbClustersClusterOutput() GetDbClustersClusterOutput
	ToGetDbClustersClusterOutputWithContext(context.Context) GetDbClustersClusterOutput
}

type GetDbClustersClusterArgs struct {
	// The cache size for DBCluster.
	CacheSize pulumi.IntInput `pulumi:"cacheSize"`
	// The cpu resource amount of DBCluster. Depends on `dbClusterClass`.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The DBCluster class. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbClusterClass pulumi.StringInput `pulumi:"dbClusterClass"`
	// The DBCluster description.
	DbClusterDescription pulumi.StringInput `pulumi:"dbClusterDescription"`
	// The cluster ID.
	DbClusterId pulumi.StringInput `pulumi:"dbClusterId"`
	// The instance ID.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// The Engine of the DBCluster.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The engine version of the DBCluster.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	Id            pulumi.StringInput `pulumi:"id"`
	// The memory resource amount of DBCluster. Depends on `dbClusterClass`.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The configuration change logs of parameters.
	ParamChangeLogs GetDbClustersClusterParamChangeLogArrayInput `pulumi:"paramChangeLogs"`
	// The details about each parameter in DBCluster returned.
	Params GetDbClustersClusterParamArrayInput `pulumi:"params"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The ID of region for the cluster.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The status of the DBCluster. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VPC for the cluster.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of zone for the cluster.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetDbClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersCluster)(nil)).Elem()
}

func (i GetDbClustersClusterArgs) ToGetDbClustersClusterOutput() GetDbClustersClusterOutput {
	return i.ToGetDbClustersClusterOutputWithContext(context.Background())
}

func (i GetDbClustersClusterArgs) ToGetDbClustersClusterOutputWithContext(ctx context.Context) GetDbClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterOutput)
}

// GetDbClustersClusterArrayInput is an input type that accepts GetDbClustersClusterArray and GetDbClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetDbClustersClusterArrayInput` via:
//
//	GetDbClustersClusterArray{ GetDbClustersClusterArgs{...} }
type GetDbClustersClusterArrayInput interface {
	pulumi.Input

	ToGetDbClustersClusterArrayOutput() GetDbClustersClusterArrayOutput
	ToGetDbClustersClusterArrayOutputWithContext(context.Context) GetDbClustersClusterArrayOutput
}

type GetDbClustersClusterArray []GetDbClustersClusterInput

func (GetDbClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersCluster)(nil)).Elem()
}

func (i GetDbClustersClusterArray) ToGetDbClustersClusterArrayOutput() GetDbClustersClusterArrayOutput {
	return i.ToGetDbClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetDbClustersClusterArray) ToGetDbClustersClusterArrayOutputWithContext(ctx context.Context) GetDbClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterArrayOutput)
}

type GetDbClustersClusterOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersCluster)(nil)).Elem()
}

func (o GetDbClustersClusterOutput) ToGetDbClustersClusterOutput() GetDbClustersClusterOutput {
	return o
}

func (o GetDbClustersClusterOutput) ToGetDbClustersClusterOutputWithContext(ctx context.Context) GetDbClustersClusterOutput {
	return o
}

// The cache size for DBCluster.
func (o GetDbClustersClusterOutput) CacheSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersCluster) int { return v.CacheSize }).(pulumi.IntOutput)
}

// The cpu resource amount of DBCluster. Depends on `dbClusterClass`.
func (o GetDbClustersClusterOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersCluster) int { return v.Cpu }).(pulumi.IntOutput)
}

// The creation time of the resource.
func (o GetDbClustersClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The DBCluster class. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
func (o GetDbClustersClusterOutput) DbClusterClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.DbClusterClass }).(pulumi.StringOutput)
}

// The DBCluster description.
func (o GetDbClustersClusterOutput) DbClusterDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.DbClusterDescription }).(pulumi.StringOutput)
}

// The cluster ID.
func (o GetDbClustersClusterOutput) DbClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.DbClusterId }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetDbClustersClusterOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The Engine of the DBCluster.
func (o GetDbClustersClusterOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.Engine }).(pulumi.StringOutput)
}

// The engine version of the DBCluster.
func (o GetDbClustersClusterOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o GetDbClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The memory resource amount of DBCluster. Depends on `dbClusterClass`.
func (o GetDbClustersClusterOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersCluster) int { return v.Memory }).(pulumi.IntOutput)
}

// The configuration change logs of parameters.
func (o GetDbClustersClusterOutput) ParamChangeLogs() GetDbClustersClusterParamChangeLogArrayOutput {
	return o.ApplyT(func(v GetDbClustersCluster) []GetDbClustersClusterParamChangeLog { return v.ParamChangeLogs }).(GetDbClustersClusterParamChangeLogArrayOutput)
}

// The details about each parameter in DBCluster returned.
func (o GetDbClustersClusterOutput) Params() GetDbClustersClusterParamArrayOutput {
	return o.ApplyT(func(v GetDbClustersCluster) []GetDbClustersClusterParam { return v.Params }).(GetDbClustersClusterParamArrayOutput)
}

// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
func (o GetDbClustersClusterOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The ID of region for the cluster.
func (o GetDbClustersClusterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.RegionId }).(pulumi.StringOutput)
}

// The status of the DBCluster. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
func (o GetDbClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC for the cluster.
func (o GetDbClustersClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of zone for the cluster.
func (o GetDbClustersClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersCluster) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetDbClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersCluster)(nil)).Elem()
}

func (o GetDbClustersClusterArrayOutput) ToGetDbClustersClusterArrayOutput() GetDbClustersClusterArrayOutput {
	return o
}

func (o GetDbClustersClusterArrayOutput) ToGetDbClustersClusterArrayOutputWithContext(ctx context.Context) GetDbClustersClusterArrayOutput {
	return o
}

func (o GetDbClustersClusterArrayOutput) Index(i pulumi.IntInput) GetDbClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbClustersCluster {
		return vs[0].([]GetDbClustersCluster)[vs[1].(int)]
	}).(GetDbClustersClusterOutput)
}

type GetDbClustersClusterParam struct {
	// The comments on the parameter.
	Comment string `pulumi:"comment"`
	// The default value of the parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// Indicates whether the parameter immediately takes effect without requiring a restart.
	IsDynamic int `pulumi:"isDynamic"`
	// Indicates whether the parameter is modifiable.
	IsUserModifiable int `pulumi:"isUserModifiable"`
	// Changed parameter name.
	Name string `pulumi:"name"`
	// The value range of the parameter.
	Optional string `pulumi:"optional"`
	// The category of the parameter.
	ParamCategory string `pulumi:"paramCategory"`
	// The new value of Parameter.
	Value string `pulumi:"value"`
}

// GetDbClustersClusterParamInput is an input type that accepts GetDbClustersClusterParamArgs and GetDbClustersClusterParamOutput values.
// You can construct a concrete instance of `GetDbClustersClusterParamInput` via:
//
//	GetDbClustersClusterParamArgs{...}
type GetDbClustersClusterParamInput interface {
	pulumi.Input

	ToGetDbClustersClusterParamOutput() GetDbClustersClusterParamOutput
	ToGetDbClustersClusterParamOutputWithContext(context.Context) GetDbClustersClusterParamOutput
}

type GetDbClustersClusterParamArgs struct {
	// The comments on the parameter.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The default value of the parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Indicates whether the parameter immediately takes effect without requiring a restart.
	IsDynamic pulumi.IntInput `pulumi:"isDynamic"`
	// Indicates whether the parameter is modifiable.
	IsUserModifiable pulumi.IntInput `pulumi:"isUserModifiable"`
	// Changed parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The value range of the parameter.
	Optional pulumi.StringInput `pulumi:"optional"`
	// The category of the parameter.
	ParamCategory pulumi.StringInput `pulumi:"paramCategory"`
	// The new value of Parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDbClustersClusterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersClusterParam)(nil)).Elem()
}

func (i GetDbClustersClusterParamArgs) ToGetDbClustersClusterParamOutput() GetDbClustersClusterParamOutput {
	return i.ToGetDbClustersClusterParamOutputWithContext(context.Background())
}

func (i GetDbClustersClusterParamArgs) ToGetDbClustersClusterParamOutputWithContext(ctx context.Context) GetDbClustersClusterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterParamOutput)
}

// GetDbClustersClusterParamArrayInput is an input type that accepts GetDbClustersClusterParamArray and GetDbClustersClusterParamArrayOutput values.
// You can construct a concrete instance of `GetDbClustersClusterParamArrayInput` via:
//
//	GetDbClustersClusterParamArray{ GetDbClustersClusterParamArgs{...} }
type GetDbClustersClusterParamArrayInput interface {
	pulumi.Input

	ToGetDbClustersClusterParamArrayOutput() GetDbClustersClusterParamArrayOutput
	ToGetDbClustersClusterParamArrayOutputWithContext(context.Context) GetDbClustersClusterParamArrayOutput
}

type GetDbClustersClusterParamArray []GetDbClustersClusterParamInput

func (GetDbClustersClusterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersClusterParam)(nil)).Elem()
}

func (i GetDbClustersClusterParamArray) ToGetDbClustersClusterParamArrayOutput() GetDbClustersClusterParamArrayOutput {
	return i.ToGetDbClustersClusterParamArrayOutputWithContext(context.Background())
}

func (i GetDbClustersClusterParamArray) ToGetDbClustersClusterParamArrayOutputWithContext(ctx context.Context) GetDbClustersClusterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterParamArrayOutput)
}

type GetDbClustersClusterParamOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersClusterParam)(nil)).Elem()
}

func (o GetDbClustersClusterParamOutput) ToGetDbClustersClusterParamOutput() GetDbClustersClusterParamOutput {
	return o
}

func (o GetDbClustersClusterParamOutput) ToGetDbClustersClusterParamOutputWithContext(ctx context.Context) GetDbClustersClusterParamOutput {
	return o
}

// The comments on the parameter.
func (o GetDbClustersClusterParamOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.Comment }).(pulumi.StringOutput)
}

// The default value of the parameter.
func (o GetDbClustersClusterParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Indicates whether the parameter immediately takes effect without requiring a restart.
func (o GetDbClustersClusterParamOutput) IsDynamic() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) int { return v.IsDynamic }).(pulumi.IntOutput)
}

// Indicates whether the parameter is modifiable.
func (o GetDbClustersClusterParamOutput) IsUserModifiable() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) int { return v.IsUserModifiable }).(pulumi.IntOutput)
}

// Changed parameter name.
func (o GetDbClustersClusterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.Name }).(pulumi.StringOutput)
}

// The value range of the parameter.
func (o GetDbClustersClusterParamOutput) Optional() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.Optional }).(pulumi.StringOutput)
}

// The category of the parameter.
func (o GetDbClustersClusterParamOutput) ParamCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.ParamCategory }).(pulumi.StringOutput)
}

// The new value of Parameter.
func (o GetDbClustersClusterParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParam) string { return v.Value }).(pulumi.StringOutput)
}

type GetDbClustersClusterParamArrayOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersClusterParam)(nil)).Elem()
}

func (o GetDbClustersClusterParamArrayOutput) ToGetDbClustersClusterParamArrayOutput() GetDbClustersClusterParamArrayOutput {
	return o
}

func (o GetDbClustersClusterParamArrayOutput) ToGetDbClustersClusterParamArrayOutputWithContext(ctx context.Context) GetDbClustersClusterParamArrayOutput {
	return o
}

func (o GetDbClustersClusterParamArrayOutput) Index(i pulumi.IntInput) GetDbClustersClusterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbClustersClusterParam {
		return vs[0].([]GetDbClustersClusterParam)[vs[1].(int)]
	}).(GetDbClustersClusterParamOutput)
}

type GetDbClustersClusterParamChangeLog struct {
	// The id of parameter change.
	ConfigId int `pulumi:"configId"`
	// When the parameter change is created.
	GmtCreated string `pulumi:"gmtCreated"`
	// When the parameter change is modified.
	GmtModified string `pulumi:"gmtModified"`
	// Whether the parameter changing is applied.
	IsApplied int `pulumi:"isApplied"`
	// Changed parameter name.
	Name string `pulumi:"name"`
	// The new value of parameter.
	NewValue string `pulumi:"newValue"`
	// The old value of parameter.
	OldValue string `pulumi:"oldValue"`
}

// GetDbClustersClusterParamChangeLogInput is an input type that accepts GetDbClustersClusterParamChangeLogArgs and GetDbClustersClusterParamChangeLogOutput values.
// You can construct a concrete instance of `GetDbClustersClusterParamChangeLogInput` via:
//
//	GetDbClustersClusterParamChangeLogArgs{...}
type GetDbClustersClusterParamChangeLogInput interface {
	pulumi.Input

	ToGetDbClustersClusterParamChangeLogOutput() GetDbClustersClusterParamChangeLogOutput
	ToGetDbClustersClusterParamChangeLogOutputWithContext(context.Context) GetDbClustersClusterParamChangeLogOutput
}

type GetDbClustersClusterParamChangeLogArgs struct {
	// The id of parameter change.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// When the parameter change is created.
	GmtCreated pulumi.StringInput `pulumi:"gmtCreated"`
	// When the parameter change is modified.
	GmtModified pulumi.StringInput `pulumi:"gmtModified"`
	// Whether the parameter changing is applied.
	IsApplied pulumi.IntInput `pulumi:"isApplied"`
	// Changed parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The new value of parameter.
	NewValue pulumi.StringInput `pulumi:"newValue"`
	// The old value of parameter.
	OldValue pulumi.StringInput `pulumi:"oldValue"`
}

func (GetDbClustersClusterParamChangeLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersClusterParamChangeLog)(nil)).Elem()
}

func (i GetDbClustersClusterParamChangeLogArgs) ToGetDbClustersClusterParamChangeLogOutput() GetDbClustersClusterParamChangeLogOutput {
	return i.ToGetDbClustersClusterParamChangeLogOutputWithContext(context.Background())
}

func (i GetDbClustersClusterParamChangeLogArgs) ToGetDbClustersClusterParamChangeLogOutputWithContext(ctx context.Context) GetDbClustersClusterParamChangeLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterParamChangeLogOutput)
}

// GetDbClustersClusterParamChangeLogArrayInput is an input type that accepts GetDbClustersClusterParamChangeLogArray and GetDbClustersClusterParamChangeLogArrayOutput values.
// You can construct a concrete instance of `GetDbClustersClusterParamChangeLogArrayInput` via:
//
//	GetDbClustersClusterParamChangeLogArray{ GetDbClustersClusterParamChangeLogArgs{...} }
type GetDbClustersClusterParamChangeLogArrayInput interface {
	pulumi.Input

	ToGetDbClustersClusterParamChangeLogArrayOutput() GetDbClustersClusterParamChangeLogArrayOutput
	ToGetDbClustersClusterParamChangeLogArrayOutputWithContext(context.Context) GetDbClustersClusterParamChangeLogArrayOutput
}

type GetDbClustersClusterParamChangeLogArray []GetDbClustersClusterParamChangeLogInput

func (GetDbClustersClusterParamChangeLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersClusterParamChangeLog)(nil)).Elem()
}

func (i GetDbClustersClusterParamChangeLogArray) ToGetDbClustersClusterParamChangeLogArrayOutput() GetDbClustersClusterParamChangeLogArrayOutput {
	return i.ToGetDbClustersClusterParamChangeLogArrayOutputWithContext(context.Background())
}

func (i GetDbClustersClusterParamChangeLogArray) ToGetDbClustersClusterParamChangeLogArrayOutputWithContext(ctx context.Context) GetDbClustersClusterParamChangeLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbClustersClusterParamChangeLogArrayOutput)
}

type GetDbClustersClusterParamChangeLogOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterParamChangeLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbClustersClusterParamChangeLog)(nil)).Elem()
}

func (o GetDbClustersClusterParamChangeLogOutput) ToGetDbClustersClusterParamChangeLogOutput() GetDbClustersClusterParamChangeLogOutput {
	return o
}

func (o GetDbClustersClusterParamChangeLogOutput) ToGetDbClustersClusterParamChangeLogOutputWithContext(ctx context.Context) GetDbClustersClusterParamChangeLogOutput {
	return o
}

// The id of parameter change.
func (o GetDbClustersClusterParamChangeLogOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) int { return v.ConfigId }).(pulumi.IntOutput)
}

// When the parameter change is created.
func (o GetDbClustersClusterParamChangeLogOutput) GmtCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) string { return v.GmtCreated }).(pulumi.StringOutput)
}

// When the parameter change is modified.
func (o GetDbClustersClusterParamChangeLogOutput) GmtModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) string { return v.GmtModified }).(pulumi.StringOutput)
}

// Whether the parameter changing is applied.
func (o GetDbClustersClusterParamChangeLogOutput) IsApplied() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) int { return v.IsApplied }).(pulumi.IntOutput)
}

// Changed parameter name.
func (o GetDbClustersClusterParamChangeLogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) string { return v.Name }).(pulumi.StringOutput)
}

// The new value of parameter.
func (o GetDbClustersClusterParamChangeLogOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) string { return v.NewValue }).(pulumi.StringOutput)
}

// The old value of parameter.
func (o GetDbClustersClusterParamChangeLogOutput) OldValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbClustersClusterParamChangeLog) string { return v.OldValue }).(pulumi.StringOutput)
}

type GetDbClustersClusterParamChangeLogArrayOutput struct{ *pulumi.OutputState }

func (GetDbClustersClusterParamChangeLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbClustersClusterParamChangeLog)(nil)).Elem()
}

func (o GetDbClustersClusterParamChangeLogArrayOutput) ToGetDbClustersClusterParamChangeLogArrayOutput() GetDbClustersClusterParamChangeLogArrayOutput {
	return o
}

func (o GetDbClustersClusterParamChangeLogArrayOutput) ToGetDbClustersClusterParamChangeLogArrayOutputWithContext(ctx context.Context) GetDbClustersClusterParamChangeLogArrayOutput {
	return o
}

func (o GetDbClustersClusterParamChangeLogArrayOutput) Index(i pulumi.IntInput) GetDbClustersClusterParamChangeLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbClustersClusterParamChangeLog {
		return vs[0].([]GetDbClustersClusterParamChangeLog)[vs[1].(int)]
	}).(GetDbClustersClusterParamChangeLogOutput)
}

type GetDbInstancesInstance struct {
	// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
	CacheSizePostpaid int `pulumi:"cacheSizePostpaid"`
	// The sum of cache size for every `Subscription` clusters in DBInstance.
	CacheSizePrepaid int `pulumi:"cacheSizePrepaid"`
	// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
	ClusterCountPostpaid int `pulumi:"clusterCountPostpaid"`
	// The sum of cluster counts for `Subscription` clusters in DBInstance.
	ClusterCountPrepaid int `pulumi:"clusterCountPrepaid"`
	// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
	CpuPostpaid int `pulumi:"cpuPostpaid"`
	// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
	CpuPrepaid int `pulumi:"cpuPrepaid"`
	// The DBInstance description.
	DbInstanceDescription string `pulumi:"dbInstanceDescription"`
	// The instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The Engine of the DBInstance.
	Engine string `pulumi:"engine"`
	// The engine minor version of the DBInstance.
	EngineMinorVersion string `pulumi:"engineMinorVersion"`
	// The engine version of the DBInstance.
	EngineVersion string `pulumi:"engineVersion"`
	// The time when DBInstance is created.
	GmtCreated string `pulumi:"gmtCreated"`
	// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
	GmtExpired string `pulumi:"gmtExpired"`
	// The time when DBInstance is modified.
	GmtModified string `pulumi:"gmtModified"`
	Id          string `pulumi:"id"`
	// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
	LockMode string `pulumi:"lockMode"`
	// The reason why the instance is locked.
	LockReason string `pulumi:"lockReason"`
	// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
	MemoryPostpaid int `pulumi:"memoryPostpaid"`
	// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
	MemoryPrepaid int `pulumi:"memoryPrepaid"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// The ID of region for DBInstance.
	RegionId string `pulumi:"regionId"`
	// The status of the DBInstance. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
	Status string `pulumi:"status"`
	// The sub domain of DBInstance.
	SubDomain string `pulumi:"subDomain"`
	// The ID of the VPC for DBInstance.
	VpcId string `pulumi:"vpcId"`
	// The ID of vswitch for DBInstance.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of zone for DBInstance.
	ZoneId string `pulumi:"zoneId"`
}

// GetDbInstancesInstanceInput is an input type that accepts GetDbInstancesInstanceArgs and GetDbInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDbInstancesInstanceInput` via:
//
//	GetDbInstancesInstanceArgs{...}
type GetDbInstancesInstanceInput interface {
	pulumi.Input

	ToGetDbInstancesInstanceOutput() GetDbInstancesInstanceOutput
	ToGetDbInstancesInstanceOutputWithContext(context.Context) GetDbInstancesInstanceOutput
}

type GetDbInstancesInstanceArgs struct {
	// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
	CacheSizePostpaid pulumi.IntInput `pulumi:"cacheSizePostpaid"`
	// The sum of cache size for every `Subscription` clusters in DBInstance.
	CacheSizePrepaid pulumi.IntInput `pulumi:"cacheSizePrepaid"`
	// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
	ClusterCountPostpaid pulumi.IntInput `pulumi:"clusterCountPostpaid"`
	// The sum of cluster counts for `Subscription` clusters in DBInstance.
	ClusterCountPrepaid pulumi.IntInput `pulumi:"clusterCountPrepaid"`
	// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
	CpuPostpaid pulumi.IntInput `pulumi:"cpuPostpaid"`
	// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
	CpuPrepaid pulumi.IntInput `pulumi:"cpuPrepaid"`
	// The DBInstance description.
	DbInstanceDescription pulumi.StringInput `pulumi:"dbInstanceDescription"`
	// The instance ID.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// The Engine of the DBInstance.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The engine minor version of the DBInstance.
	EngineMinorVersion pulumi.StringInput `pulumi:"engineMinorVersion"`
	// The engine version of the DBInstance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The time when DBInstance is created.
	GmtCreated pulumi.StringInput `pulumi:"gmtCreated"`
	// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
	GmtExpired pulumi.StringInput `pulumi:"gmtExpired"`
	// The time when DBInstance is modified.
	GmtModified pulumi.StringInput `pulumi:"gmtModified"`
	Id          pulumi.StringInput `pulumi:"id"`
	// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
	LockMode pulumi.StringInput `pulumi:"lockMode"`
	// The reason why the instance is locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
	MemoryPostpaid pulumi.IntInput `pulumi:"memoryPostpaid"`
	// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
	MemoryPrepaid pulumi.IntInput `pulumi:"memoryPrepaid"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The ID of region for DBInstance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The status of the DBInstance. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
	Status pulumi.StringInput `pulumi:"status"`
	// The sub domain of DBInstance.
	SubDomain pulumi.StringInput `pulumi:"subDomain"`
	// The ID of the VPC for DBInstance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of vswitch for DBInstance.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The ID of zone for DBInstance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetDbInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancesInstance)(nil)).Elem()
}

func (i GetDbInstancesInstanceArgs) ToGetDbInstancesInstanceOutput() GetDbInstancesInstanceOutput {
	return i.ToGetDbInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDbInstancesInstanceArgs) ToGetDbInstancesInstanceOutputWithContext(ctx context.Context) GetDbInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancesInstanceOutput)
}

// GetDbInstancesInstanceArrayInput is an input type that accepts GetDbInstancesInstanceArray and GetDbInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDbInstancesInstanceArrayInput` via:
//
//	GetDbInstancesInstanceArray{ GetDbInstancesInstanceArgs{...} }
type GetDbInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDbInstancesInstanceArrayOutput() GetDbInstancesInstanceArrayOutput
	ToGetDbInstancesInstanceArrayOutputWithContext(context.Context) GetDbInstancesInstanceArrayOutput
}

type GetDbInstancesInstanceArray []GetDbInstancesInstanceInput

func (GetDbInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancesInstance)(nil)).Elem()
}

func (i GetDbInstancesInstanceArray) ToGetDbInstancesInstanceArrayOutput() GetDbInstancesInstanceArrayOutput {
	return i.ToGetDbInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDbInstancesInstanceArray) ToGetDbInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDbInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancesInstanceArrayOutput)
}

type GetDbInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDbInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancesInstance)(nil)).Elem()
}

func (o GetDbInstancesInstanceOutput) ToGetDbInstancesInstanceOutput() GetDbInstancesInstanceOutput {
	return o
}

func (o GetDbInstancesInstanceOutput) ToGetDbInstancesInstanceOutputWithContext(ctx context.Context) GetDbInstancesInstanceOutput {
	return o
}

// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) CacheSizePostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.CacheSizePostpaid }).(pulumi.IntOutput)
}

// The sum of cache size for every `Subscription` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) CacheSizePrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.CacheSizePrepaid }).(pulumi.IntOutput)
}

// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) ClusterCountPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.ClusterCountPostpaid }).(pulumi.IntOutput)
}

// The sum of cluster counts for `Subscription` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) ClusterCountPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.ClusterCountPrepaid }).(pulumi.IntOutput)
}

// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) CpuPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.CpuPostpaid }).(pulumi.IntOutput)
}

// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) CpuPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.CpuPrepaid }).(pulumi.IntOutput)
}

// The DBInstance description.
func (o GetDbInstancesInstanceOutput) DbInstanceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.DbInstanceDescription }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetDbInstancesInstanceOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The Engine of the DBInstance.
func (o GetDbInstancesInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.Engine }).(pulumi.StringOutput)
}

// The engine minor version of the DBInstance.
func (o GetDbInstancesInstanceOutput) EngineMinorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.EngineMinorVersion }).(pulumi.StringOutput)
}

// The engine version of the DBInstance.
func (o GetDbInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The time when DBInstance is created.
func (o GetDbInstancesInstanceOutput) GmtCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.GmtCreated }).(pulumi.StringOutput)
}

// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
func (o GetDbInstancesInstanceOutput) GmtExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.GmtExpired }).(pulumi.StringOutput)
}

// The time when DBInstance is modified.
func (o GetDbInstancesInstanceOutput) GmtModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.GmtModified }).(pulumi.StringOutput)
}

func (o GetDbInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
func (o GetDbInstancesInstanceOutput) LockMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.LockMode }).(pulumi.StringOutput)
}

// The reason why the instance is locked.
func (o GetDbInstancesInstanceOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.LockReason }).(pulumi.StringOutput)
}

// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) MemoryPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.MemoryPostpaid }).(pulumi.IntOutput)
}

// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
func (o GetDbInstancesInstanceOutput) MemoryPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) int { return v.MemoryPrepaid }).(pulumi.IntOutput)
}

// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
func (o GetDbInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The ID of region for DBInstance.
func (o GetDbInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// The status of the DBInstance. Valid values: `ACTIVATION`,`CREATING`,`DELETING`,`RESTARTING`,`ORDER_PREPARING`.
func (o GetDbInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The sub domain of DBInstance.
func (o GetDbInstancesInstanceOutput) SubDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.SubDomain }).(pulumi.StringOutput)
}

// The ID of the VPC for DBInstance.
func (o GetDbInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of vswitch for DBInstance.
func (o GetDbInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of zone for DBInstance.
func (o GetDbInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetDbInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancesInstance)(nil)).Elem()
}

func (o GetDbInstancesInstanceArrayOutput) ToGetDbInstancesInstanceArrayOutput() GetDbInstancesInstanceArrayOutput {
	return o
}

func (o GetDbInstancesInstanceArrayOutput) ToGetDbInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDbInstancesInstanceArrayOutput {
	return o
}

func (o GetDbInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDbInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancesInstance {
		return vs[0].([]GetDbInstancesInstance)[vs[1].(int)]
	}).(GetDbInstancesInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterDesiredParamInput)(nil)).Elem(), DbClusterDesiredParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterDesiredParamArrayInput)(nil)).Elem(), DbClusterDesiredParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterParamChangeLogInput)(nil)).Elem(), DbClusterParamChangeLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterParamChangeLogArrayInput)(nil)).Elem(), DbClusterParamChangeLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceDesiredSecurityIpListInput)(nil)).Elem(), DbInstanceDesiredSecurityIpListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceDesiredSecurityIpListArrayInput)(nil)).Elem(), DbInstanceDesiredSecurityIpListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInstanceNetInfoInput)(nil)).Elem(), DbInstanceInstanceNetInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInstanceNetInfoArrayInput)(nil)).Elem(), DbInstanceInstanceNetInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInstanceNetInfoPortListInput)(nil)).Elem(), DbInstanceInstanceNetInfoPortListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInstanceNetInfoPortListArrayInput)(nil)).Elem(), DbInstanceInstanceNetInfoPortListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceSecurityIpListInput)(nil)).Elem(), DbInstanceSecurityIpListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceSecurityIpListArrayInput)(nil)).Elem(), DbInstanceSecurityIpListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterInput)(nil)).Elem(), GetDbClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterArrayInput)(nil)).Elem(), GetDbClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterParamInput)(nil)).Elem(), GetDbClustersClusterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterParamArrayInput)(nil)).Elem(), GetDbClustersClusterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterParamChangeLogInput)(nil)).Elem(), GetDbClustersClusterParamChangeLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbClustersClusterParamChangeLogArrayInput)(nil)).Elem(), GetDbClustersClusterParamChangeLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancesInstanceInput)(nil)).Elem(), GetDbInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancesInstanceArrayInput)(nil)).Elem(), GetDbInstancesInstanceArray{})
	pulumi.RegisterOutputType(DbClusterDesiredParamOutput{})
	pulumi.RegisterOutputType(DbClusterDesiredParamArrayOutput{})
	pulumi.RegisterOutputType(DbClusterParamChangeLogOutput{})
	pulumi.RegisterOutputType(DbClusterParamChangeLogArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceDesiredSecurityIpListOutput{})
	pulumi.RegisterOutputType(DbInstanceDesiredSecurityIpListArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceInstanceNetInfoOutput{})
	pulumi.RegisterOutputType(DbInstanceInstanceNetInfoArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceInstanceNetInfoPortListOutput{})
	pulumi.RegisterOutputType(DbInstanceInstanceNetInfoPortListArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceSecurityIpListOutput{})
	pulumi.RegisterOutputType(DbInstanceSecurityIpListArrayOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterParamOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterParamArrayOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterParamChangeLogOutput{})
	pulumi.RegisterOutputType(GetDbClustersClusterParamChangeLogArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDbInstancesInstanceArrayOutput{})
}
