// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package selectdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a SelectDB DBInstance resource.
//
// For information about SelectDB DBInstance and how to use it, see [What is DBInstance](https://www.alibabacloud.com/help/zh/selectdb/latest/api-selectdb-2023-05-22-createdbinstance).
//
// > **NOTE:** Available since v1.229.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/selectdb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("^default-NODELETING$"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
//				VpcId:  pulumi.StringRef(defaultGetNetworks.Ids[0]),
//				ZoneId: pulumi.StringRef(_default.Zones[0].Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = selectdb.NewDbInstance(ctx, "default", &selectdb.DbInstanceArgs{
//				DbInstanceClass:       pulumi.String("selectdb.xlarge"),
//				DbInstanceDescription: pulumi.String(name),
//				CacheSize:             pulumi.Int(200),
//				PaymentType:           pulumi.String("PayAsYouGo"),
//				VpcId:                 pulumi.String(defaultGetSwitches.Vswitches[0].VpcId),
//				ZoneId:                pulumi.String(defaultGetSwitches.Vswitches[0].ZoneId),
//				VswitchId:             pulumi.String(defaultGetSwitches.Vswitches[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SelectDB DBInstance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:selectdb/dbInstance:DbInstance example <id>
// ```
type DbInstance struct {
	pulumi.CustomResourceState

	// The password for DBInstance using admin account.
	AdminPass pulumi.StringPtrOutput `pulumi:"adminPass"`
	// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
	CacheSize pulumi.IntOutput `pulumi:"cacheSize"`
	// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
	CacheSizePostpaid pulumi.IntOutput `pulumi:"cacheSizePostpaid"`
	// The sum of cache size for every `Subscription` clusters in DBInstance.
	CacheSizePrepaid pulumi.IntOutput `pulumi:"cacheSizePrepaid"`
	// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
	ClusterCountPostpaid pulumi.IntOutput `pulumi:"clusterCountPostpaid"`
	// The sum of cluster counts for `Subscription` clusters in DBInstance.
	ClusterCountPrepaid pulumi.IntOutput `pulumi:"clusterCountPrepaid"`
	// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
	CpuPostpaid pulumi.IntOutput `pulumi:"cpuPostpaid"`
	// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
	CpuPrepaid pulumi.IntOutput `pulumi:"cpuPrepaid"`
	// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbInstanceClass pulumi.StringOutput `pulumi:"dbInstanceClass"`
	// The DBInstance description.
	DbInstanceDescription pulumi.StringOutput `pulumi:"dbInstanceDescription"`
	// The modified IP address whitelists. See `desiredSecurityIpLists` below.
	DesiredSecurityIpLists DbInstanceDesiredSecurityIpListArrayOutput `pulumi:"desiredSecurityIpLists"`
	// If DBInstance need to open public network, set it to `true`.
	EnablePublicNetwork pulumi.BoolPtrOutput `pulumi:"enablePublicNetwork"`
	// The engine of DBInstance. Always `selectdb`.
	Engine pulumi.StringOutput `pulumi:"engine"`
	// The current DBInstance minor version.
	EngineMinorVersion pulumi.StringOutput `pulumi:"engineMinorVersion"`
	// The time when DBInstance is created.
	GmtCreated pulumi.StringOutput `pulumi:"gmtCreated"`
	// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
	GmtExpired pulumi.StringOutput `pulumi:"gmtExpired"`
	// The time when DBInstance is modified.
	GmtModified pulumi.StringOutput `pulumi:"gmtModified"`
	// The net infos for instances.
	InstanceNetInfos DbInstanceInstanceNetInfoArrayOutput `pulumi:"instanceNetInfos"`
	// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
	LockMode pulumi.StringOutput `pulumi:"lockMode"`
	// The reason why the instance is locked.
	LockReason pulumi.StringOutput `pulumi:"lockReason"`
	// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
	MemoryPostpaid pulumi.IntOutput `pulumi:"memoryPostpaid"`
	// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
	MemoryPrepaid pulumi.IntOutput `pulumi:"memoryPrepaid"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
	PeriodTime pulumi.IntPtrOutput `pulumi:"periodTime"`
	// The region ID of the instance.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The details about each IP address whitelist returned.
	SecurityIpLists DbInstanceSecurityIpListArrayOutput `pulumi:"securityIpLists"`
	// The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The sub domain of DBInstance.
	SubDomain pulumi.StringOutput `pulumi:"subDomain"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
	UpgradedEngineMinorVersion pulumi.StringPtrOutput `pulumi:"upgradedEngineMinorVersion"`
	// The ID of the VPC for DBInstance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ID of vswitch for DBInstance.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
	// The ID of zone for DBInstance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewDbInstance registers a new resource with the given unique name, arguments, and options.
func NewDbInstance(ctx *pulumi.Context,
	name string, args *DbInstanceArgs, opts ...pulumi.ResourceOption) (*DbInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CacheSize == nil {
		return nil, errors.New("invalid value for required argument 'CacheSize'")
	}
	if args.DbInstanceClass == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceClass'")
	}
	if args.DbInstanceDescription == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceDescription'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	if args.AdminPass != nil {
		args.AdminPass = pulumi.ToSecret(args.AdminPass).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPass",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbInstance
	err := ctx.RegisterResource("alicloud:selectdb/dbInstance:DbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbInstance gets an existing DbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbInstanceState, opts ...pulumi.ResourceOption) (*DbInstance, error) {
	var resource DbInstance
	err := ctx.ReadResource("alicloud:selectdb/dbInstance:DbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbInstance resources.
type dbInstanceState struct {
	// The password for DBInstance using admin account.
	AdminPass *string `pulumi:"adminPass"`
	// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
	CacheSize *int `pulumi:"cacheSize"`
	// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
	CacheSizePostpaid *int `pulumi:"cacheSizePostpaid"`
	// The sum of cache size for every `Subscription` clusters in DBInstance.
	CacheSizePrepaid *int `pulumi:"cacheSizePrepaid"`
	// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
	ClusterCountPostpaid *int `pulumi:"clusterCountPostpaid"`
	// The sum of cluster counts for `Subscription` clusters in DBInstance.
	ClusterCountPrepaid *int `pulumi:"clusterCountPrepaid"`
	// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
	CpuPostpaid *int `pulumi:"cpuPostpaid"`
	// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
	CpuPrepaid *int `pulumi:"cpuPrepaid"`
	// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbInstanceClass *string `pulumi:"dbInstanceClass"`
	// The DBInstance description.
	DbInstanceDescription *string `pulumi:"dbInstanceDescription"`
	// The modified IP address whitelists. See `desiredSecurityIpLists` below.
	DesiredSecurityIpLists []DbInstanceDesiredSecurityIpList `pulumi:"desiredSecurityIpLists"`
	// If DBInstance need to open public network, set it to `true`.
	EnablePublicNetwork *bool `pulumi:"enablePublicNetwork"`
	// The engine of DBInstance. Always `selectdb`.
	Engine *string `pulumi:"engine"`
	// The current DBInstance minor version.
	EngineMinorVersion *string `pulumi:"engineMinorVersion"`
	// The time when DBInstance is created.
	GmtCreated *string `pulumi:"gmtCreated"`
	// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
	GmtExpired *string `pulumi:"gmtExpired"`
	// The time when DBInstance is modified.
	GmtModified *string `pulumi:"gmtModified"`
	// The net infos for instances.
	InstanceNetInfos []DbInstanceInstanceNetInfo `pulumi:"instanceNetInfos"`
	// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
	LockMode *string `pulumi:"lockMode"`
	// The reason why the instance is locked.
	LockReason *string `pulumi:"lockReason"`
	// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
	MemoryPostpaid *int `pulumi:"memoryPostpaid"`
	// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
	MemoryPrepaid *int `pulumi:"memoryPrepaid"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
	Period *string `pulumi:"period"`
	// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
	PeriodTime *int `pulumi:"periodTime"`
	// The region ID of the instance.
	RegionId *string `pulumi:"regionId"`
	// The details about each IP address whitelist returned.
	SecurityIpLists []DbInstanceSecurityIpList `pulumi:"securityIpLists"`
	// The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
	Status *string `pulumi:"status"`
	// The sub domain of DBInstance.
	SubDomain *string `pulumi:"subDomain"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]string `pulumi:"tags"`
	// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
	UpgradedEngineMinorVersion *string `pulumi:"upgradedEngineMinorVersion"`
	// The ID of the VPC for DBInstance.
	VpcId *string `pulumi:"vpcId"`
	// The ID of vswitch for DBInstance.
	VswitchId *string `pulumi:"vswitchId"`
	// The ID of zone for DBInstance.
	ZoneId *string `pulumi:"zoneId"`
}

type DbInstanceState struct {
	// The password for DBInstance using admin account.
	AdminPass pulumi.StringPtrInput
	// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
	CacheSize pulumi.IntPtrInput
	// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
	CacheSizePostpaid pulumi.IntPtrInput
	// The sum of cache size for every `Subscription` clusters in DBInstance.
	CacheSizePrepaid pulumi.IntPtrInput
	// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
	ClusterCountPostpaid pulumi.IntPtrInput
	// The sum of cluster counts for `Subscription` clusters in DBInstance.
	ClusterCountPrepaid pulumi.IntPtrInput
	// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
	CpuPostpaid pulumi.IntPtrInput
	// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
	CpuPrepaid pulumi.IntPtrInput
	// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbInstanceClass pulumi.StringPtrInput
	// The DBInstance description.
	DbInstanceDescription pulumi.StringPtrInput
	// The modified IP address whitelists. See `desiredSecurityIpLists` below.
	DesiredSecurityIpLists DbInstanceDesiredSecurityIpListArrayInput
	// If DBInstance need to open public network, set it to `true`.
	EnablePublicNetwork pulumi.BoolPtrInput
	// The engine of DBInstance. Always `selectdb`.
	Engine pulumi.StringPtrInput
	// The current DBInstance minor version.
	EngineMinorVersion pulumi.StringPtrInput
	// The time when DBInstance is created.
	GmtCreated pulumi.StringPtrInput
	// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
	GmtExpired pulumi.StringPtrInput
	// The time when DBInstance is modified.
	GmtModified pulumi.StringPtrInput
	// The net infos for instances.
	InstanceNetInfos DbInstanceInstanceNetInfoArrayInput
	// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
	LockMode pulumi.StringPtrInput
	// The reason why the instance is locked.
	LockReason pulumi.StringPtrInput
	// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
	MemoryPostpaid pulumi.IntPtrInput
	// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
	MemoryPrepaid pulumi.IntPtrInput
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType pulumi.StringPtrInput
	// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
	Period pulumi.StringPtrInput
	// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
	PeriodTime pulumi.IntPtrInput
	// The region ID of the instance.
	RegionId pulumi.StringPtrInput
	// The details about each IP address whitelist returned.
	SecurityIpLists DbInstanceSecurityIpListArrayInput
	// The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
	Status pulumi.StringPtrInput
	// The sub domain of DBInstance.
	SubDomain pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.StringMapInput
	// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
	UpgradedEngineMinorVersion pulumi.StringPtrInput
	// The ID of the VPC for DBInstance.
	VpcId pulumi.StringPtrInput
	// The ID of vswitch for DBInstance.
	VswitchId pulumi.StringPtrInput
	// The ID of zone for DBInstance.
	ZoneId pulumi.StringPtrInput
}

func (DbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbInstanceState)(nil)).Elem()
}

type dbInstanceArgs struct {
	// The password for DBInstance using admin account.
	AdminPass *string `pulumi:"adminPass"`
	// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
	CacheSize int `pulumi:"cacheSize"`
	// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbInstanceClass string `pulumi:"dbInstanceClass"`
	// The DBInstance description.
	DbInstanceDescription string `pulumi:"dbInstanceDescription"`
	// The modified IP address whitelists. See `desiredSecurityIpLists` below.
	DesiredSecurityIpLists []DbInstanceDesiredSecurityIpList `pulumi:"desiredSecurityIpLists"`
	// If DBInstance need to open public network, set it to `true`.
	EnablePublicNetwork *bool `pulumi:"enablePublicNetwork"`
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
	Period *string `pulumi:"period"`
	// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
	PeriodTime *int `pulumi:"periodTime"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]string `pulumi:"tags"`
	// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
	UpgradedEngineMinorVersion *string `pulumi:"upgradedEngineMinorVersion"`
	// The ID of the VPC for DBInstance.
	VpcId string `pulumi:"vpcId"`
	// The ID of vswitch for DBInstance.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of zone for DBInstance.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a DbInstance resource.
type DbInstanceArgs struct {
	// The password for DBInstance using admin account.
	AdminPass pulumi.StringPtrInput
	// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
	CacheSize pulumi.IntInput
	// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
	DbInstanceClass pulumi.StringInput
	// The DBInstance description.
	DbInstanceDescription pulumi.StringInput
	// The modified IP address whitelists. See `desiredSecurityIpLists` below.
	DesiredSecurityIpLists DbInstanceDesiredSecurityIpListArrayInput
	// If DBInstance need to open public network, set it to `true`.
	EnablePublicNetwork pulumi.BoolPtrInput
	// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
	PaymentType pulumi.StringInput
	// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
	Period pulumi.StringPtrInput
	// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
	PeriodTime pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.StringMapInput
	// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
	UpgradedEngineMinorVersion pulumi.StringPtrInput
	// The ID of the VPC for DBInstance.
	VpcId pulumi.StringInput
	// The ID of vswitch for DBInstance.
	VswitchId pulumi.StringInput
	// The ID of zone for DBInstance.
	ZoneId pulumi.StringInput
}

func (DbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbInstanceArgs)(nil)).Elem()
}

type DbInstanceInput interface {
	pulumi.Input

	ToDbInstanceOutput() DbInstanceOutput
	ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput
}

func (*DbInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstance)(nil)).Elem()
}

func (i *DbInstance) ToDbInstanceOutput() DbInstanceOutput {
	return i.ToDbInstanceOutputWithContext(context.Background())
}

func (i *DbInstance) ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceOutput)
}

// DbInstanceArrayInput is an input type that accepts DbInstanceArray and DbInstanceArrayOutput values.
// You can construct a concrete instance of `DbInstanceArrayInput` via:
//
//	DbInstanceArray{ DbInstanceArgs{...} }
type DbInstanceArrayInput interface {
	pulumi.Input

	ToDbInstanceArrayOutput() DbInstanceArrayOutput
	ToDbInstanceArrayOutputWithContext(context.Context) DbInstanceArrayOutput
}

type DbInstanceArray []DbInstanceInput

func (DbInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbInstance)(nil)).Elem()
}

func (i DbInstanceArray) ToDbInstanceArrayOutput() DbInstanceArrayOutput {
	return i.ToDbInstanceArrayOutputWithContext(context.Background())
}

func (i DbInstanceArray) ToDbInstanceArrayOutputWithContext(ctx context.Context) DbInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceArrayOutput)
}

// DbInstanceMapInput is an input type that accepts DbInstanceMap and DbInstanceMapOutput values.
// You can construct a concrete instance of `DbInstanceMapInput` via:
//
//	DbInstanceMap{ "key": DbInstanceArgs{...} }
type DbInstanceMapInput interface {
	pulumi.Input

	ToDbInstanceMapOutput() DbInstanceMapOutput
	ToDbInstanceMapOutputWithContext(context.Context) DbInstanceMapOutput
}

type DbInstanceMap map[string]DbInstanceInput

func (DbInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbInstance)(nil)).Elem()
}

func (i DbInstanceMap) ToDbInstanceMapOutput() DbInstanceMapOutput {
	return i.ToDbInstanceMapOutputWithContext(context.Background())
}

func (i DbInstanceMap) ToDbInstanceMapOutputWithContext(ctx context.Context) DbInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceMapOutput)
}

type DbInstanceOutput struct{ *pulumi.OutputState }

func (DbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstance)(nil)).Elem()
}

func (o DbInstanceOutput) ToDbInstanceOutput() DbInstanceOutput {
	return o
}

func (o DbInstanceOutput) ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput {
	return o
}

// The password for DBInstance using admin account.
func (o DbInstanceOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.AdminPass }).(pulumi.StringPtrOutput)
}

// The cache size in DBInstance on creating default cluster. The number should be divided by 100.
func (o DbInstanceOutput) CacheSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.CacheSize }).(pulumi.IntOutput)
}

// The sum of cache size for every `PayAsYouGo` clusters in DBInstance.
func (o DbInstanceOutput) CacheSizePostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.CacheSizePostpaid }).(pulumi.IntOutput)
}

// The sum of cache size for every `Subscription` clusters in DBInstance.
func (o DbInstanceOutput) CacheSizePrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.CacheSizePrepaid }).(pulumi.IntOutput)
}

// The sum of cluster counts for `PayAsYouGo` clusters in DBInstance.
func (o DbInstanceOutput) ClusterCountPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.ClusterCountPostpaid }).(pulumi.IntOutput)
}

// The sum of cluster counts for `Subscription` clusters in DBInstance.
func (o DbInstanceOutput) ClusterCountPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.ClusterCountPrepaid }).(pulumi.IntOutput)
}

// The sum of cpu resource amount for every `PayAsYouGo` clusters in DBInstance.
func (o DbInstanceOutput) CpuPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.CpuPostpaid }).(pulumi.IntOutput)
}

// The sum of cpu resource amount for every `Subscription` clusters in DBInstance.
func (o DbInstanceOutput) CpuPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.CpuPrepaid }).(pulumi.IntOutput)
}

// The class for default cluster in DBInstance. dbClusterClass has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
func (o DbInstanceOutput) DbInstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.DbInstanceClass }).(pulumi.StringOutput)
}

// The DBInstance description.
func (o DbInstanceOutput) DbInstanceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.DbInstanceDescription }).(pulumi.StringOutput)
}

// The modified IP address whitelists. See `desiredSecurityIpLists` below.
func (o DbInstanceOutput) DesiredSecurityIpLists() DbInstanceDesiredSecurityIpListArrayOutput {
	return o.ApplyT(func(v *DbInstance) DbInstanceDesiredSecurityIpListArrayOutput { return v.DesiredSecurityIpLists }).(DbInstanceDesiredSecurityIpListArrayOutput)
}

// If DBInstance need to open public network, set it to `true`.
func (o DbInstanceOutput) EnablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.BoolPtrOutput { return v.EnablePublicNetwork }).(pulumi.BoolPtrOutput)
}

// The engine of DBInstance. Always `selectdb`.
func (o DbInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// The current DBInstance minor version.
func (o DbInstanceOutput) EngineMinorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.EngineMinorVersion }).(pulumi.StringOutput)
}

// The time when DBInstance is created.
func (o DbInstanceOutput) GmtCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.GmtCreated }).(pulumi.StringOutput)
}

// The time when DBInstance will be expired. Available on `Subscription` DBInstance.
func (o DbInstanceOutput) GmtExpired() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.GmtExpired }).(pulumi.StringOutput)
}

// The time when DBInstance is modified.
func (o DbInstanceOutput) GmtModified() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.GmtModified }).(pulumi.StringOutput)
}

// The net infos for instances.
func (o DbInstanceOutput) InstanceNetInfos() DbInstanceInstanceNetInfoArrayOutput {
	return o.ApplyT(func(v *DbInstance) DbInstanceInstanceNetInfoArrayOutput { return v.InstanceNetInfos }).(DbInstanceInstanceNetInfoArrayOutput)
}

// The lock mode of the instance. Set the value to lock, which specifies that the instance is locked when it automatically expires or has an overdue payment.
func (o DbInstanceOutput) LockMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.LockMode }).(pulumi.StringOutput)
}

// The reason why the instance is locked.
func (o DbInstanceOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.LockReason }).(pulumi.StringOutput)
}

// The sum of memory resource amount offor every `PayAsYouGo` clusters in DBInstance.
func (o DbInstanceOutput) MemoryPostpaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.MemoryPostpaid }).(pulumi.IntOutput)
}

// The sum of memory resource amount offor every `Subscription` clusters in DBInstance.
func (o DbInstanceOutput) MemoryPrepaid() pulumi.IntOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntOutput { return v.MemoryPrepaid }).(pulumi.IntOutput)
}

// The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
func (o DbInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// It is valid when paymentType is `Subscription`. Valid values are `Year`, `Month`.
func (o DbInstanceOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.Period }).(pulumi.StringPtrOutput)
}

// The duration that you will buy DBInstance. It is valid when paymentType is `Subscription`. Valid values: [1~9], 12, 24, 36.
func (o DbInstanceOutput) PeriodTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.IntPtrOutput { return v.PeriodTime }).(pulumi.IntPtrOutput)
}

// The region ID of the instance.
func (o DbInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The details about each IP address whitelist returned.
func (o DbInstanceOutput) SecurityIpLists() DbInstanceSecurityIpListArrayOutput {
	return o.ApplyT(func(v *DbInstance) DbInstanceSecurityIpListArrayOutput { return v.SecurityIpLists }).(DbInstanceSecurityIpListArrayOutput)
}

// The status of the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
func (o DbInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The sub domain of DBInstance.
func (o DbInstanceOutput) SubDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.SubDomain }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
func (o DbInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The DBInstance minor version want to upgraded to. (Available since 1.245.0) Can be set to `4.0` in creating SelectDB 4.0 DBInstance.
func (o DbInstanceOutput) UpgradedEngineMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.UpgradedEngineMinorVersion }).(pulumi.StringPtrOutput)
}

// The ID of the VPC for DBInstance.
func (o DbInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of vswitch for DBInstance.
func (o DbInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of zone for DBInstance.
func (o DbInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type DbInstanceArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbInstance)(nil)).Elem()
}

func (o DbInstanceArrayOutput) ToDbInstanceArrayOutput() DbInstanceArrayOutput {
	return o
}

func (o DbInstanceArrayOutput) ToDbInstanceArrayOutputWithContext(ctx context.Context) DbInstanceArrayOutput {
	return o
}

func (o DbInstanceArrayOutput) Index(i pulumi.IntInput) DbInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbInstance {
		return vs[0].([]*DbInstance)[vs[1].(int)]
	}).(DbInstanceOutput)
}

type DbInstanceMapOutput struct{ *pulumi.OutputState }

func (DbInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbInstance)(nil)).Elem()
}

func (o DbInstanceMapOutput) ToDbInstanceMapOutput() DbInstanceMapOutput {
	return o
}

func (o DbInstanceMapOutput) ToDbInstanceMapOutputWithContext(ctx context.Context) DbInstanceMapOutput {
	return o
}

func (o DbInstanceMapOutput) MapIndex(k pulumi.StringInput) DbInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbInstance {
		return vs[0].(map[string]*DbInstance)[vs[1].(string)]
	}).(DbInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInput)(nil)).Elem(), &DbInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceArrayInput)(nil)).Elem(), DbInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceMapInput)(nil)).Elem(), DbInstanceMap{})
	pulumi.RegisterOutputType(DbInstanceOutput{})
	pulumi.RegisterOutputType(DbInstanceArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceMapOutput{})
}
