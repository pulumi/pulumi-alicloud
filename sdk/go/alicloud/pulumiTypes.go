// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alicloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ProviderAssumeRole struct {
	ExternalId *string `pulumi:"externalId"`
	// The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the, role that is being assumed.
	Policy *string `pulumi:"policy"`
	// The ARN of a RAM role to assume prior to making API calls.
	RoleArn string `pulumi:"roleArn"`
	// The time after which the established session for assuming role expires. Valid value range: [900-3600] seconds. Default to 0 (in this case Alicloud use own default value).
	SessionExpiration *int    `pulumi:"sessionExpiration"`
	SessionName       *string `pulumi:"sessionName"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the, role that is being assumed.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The ARN of a RAM role to assume prior to making API calls.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The time after which the established session for assuming role expires. Valid value range: [900-3600] seconds. Default to 0 (in this case Alicloud use own default value).
	SessionExpiration pulumi.IntPtrInput    `pulumi:"sessionExpiration"`
	SessionName       pulumi.StringPtrInput `pulumi:"sessionName"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the, role that is being assumed.
func (o ProviderAssumeRoleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The ARN of a RAM role to assume prior to making API calls.
func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The time after which the established session for assuming role expires. Valid value range: [900-3600] seconds. Default to 0 (in this case Alicloud use own default value).
func (o ProviderAssumeRoleOutput) SessionExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *int { return v.SessionExpiration }).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

func (o ProviderAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The permissions applied when assuming a role. You cannot use, this policy to grant further permissions that are in excess to those of the, role that is being assumed.
func (o ProviderAssumeRolePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// The ARN of a RAM role to assume prior to making API calls.
func (o ProviderAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The time after which the established session for assuming role expires. Valid value range: [900-3600] seconds. Default to 0 (in this case Alicloud use own default value).
func (o ProviderAssumeRolePtrOutput) SessionExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *int {
		if v == nil {
			return nil
		}
		return v.SessionExpiration
	}).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

type ProviderEndpoint struct {
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom acr endpoints.
	Acr *string `pulumi:"acr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Actiontrail endpoints.
	Actiontrail *string `pulumi:"actiontrail"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom AnalyticDB endpoints.
	Adb *string `pulumi:"adb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alb endpoints.
	Alb *string `pulumi:"alb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidfs endpoints.
	Alidfs *string `pulumi:"alidfs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidns endpoints.
	Alidns *string `pulumi:"alidns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ALIKAFKA endpoints.
	Alikafka *string `pulumi:"alikafka"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Api Gateway endpoints.
	Apigateway *string `pulumi:"apigateway"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom arms endpoints.
	Arms *string `pulumi:"arms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bastionhost endpoints.
	Bastionhost *string `pulumi:"bastionhost"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom beebot endpoints.
	Beebot *string `pulumi:"beebot"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bpstudio endpoints.
	Bpstudio *string `pulumi:"bpstudio"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom brainIndustrial endpoints.
	BrainIndustrial *string `pulumi:"brainIndustrial"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BSSOPENAPI endpoints.
	Bssopenapi *string `pulumi:"bssopenapi"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CAS endpoints.
	Cas *string `pulumi:"cas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cassandra endpoints.
	Cassandra *string `pulumi:"cassandra"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbn endpoints.
	Cbn *string `pulumi:"cbn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbs endpoints.
	Cbs *string `pulumi:"cbs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cddc endpoints.
	Cddc *string `pulumi:"cddc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CDN endpoints.
	Cdn *string `pulumi:"cdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cds endpoints.
	Cds *string `pulumi:"cds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom clickhouse endpoints.
	Clickhouse *string `pulumi:"clickhouse"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudauth endpoints.
	Cloudauth *string `pulumi:"cloudauth"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfirewall endpoints.
	Cloudfirewall *string `pulumi:"cloudfirewall"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfw endpoints.
	Cloudfw *string `pulumi:"cloudfw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudphone endpoints.
	Cloudphone *string `pulumi:"cloudphone"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudsso endpoints.
	Cloudsso *string `pulumi:"cloudsso"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Cloud Monitor endpoints.
	Cms *string `pulumi:"cms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom computenest endpoints.
	Computenest *string `pulumi:"computenest"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom config endpoints.
	Config *string `pulumi:"config"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Registry endpoints.
	Cr *string `pulumi:"cr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Service endpoints.
	Cs *string `pulumi:"cs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom das endpoints.
	Das *string `pulumi:"das"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Datahub endpoints.
	Datahub *string `pulumi:"datahub"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dataworkspublic endpoints.
	Dataworkspublic *string `pulumi:"dataworkspublic"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dbfs endpoints.
	Dbfs *string `pulumi:"dbfs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dcdn endpoints.
	Dcdn *string `pulumi:"dcdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ddosbasic endpoints.
	Ddosbasic *string `pulumi:"ddosbasic"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSBGP endpoints.
	Ddosbgp *string `pulumi:"ddosbgp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSCOO endpoints.
	Ddoscoo *string `pulumi:"ddoscoo"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MongoDB endpoints.
	Dds *string `pulumi:"dds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom devopsrdc endpoints.
	Devopsrdc *string `pulumi:"devopsrdc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dg endpoints.
	Dg *string `pulumi:"dg"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dm endpoints.
	Dm *string `pulumi:"dm"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsEnterprise endpoints.
	DmsEnterprise *string `pulumi:"dmsEnterprise"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsenterprise endpoints.
	Dmsenterprise *string `pulumi:"dmsenterprise"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DNS endpoints.
	Dns *string `pulumi:"dns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DRDS endpoints.
	Drds *string `pulumi:"drds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dts endpoints.
	Dts   *string `pulumi:"dts"`
	Dysms *string `pulumi:"dysms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eais endpoints.
	Eais *string `pulumi:"eais"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ebs endpoints.
	Ebs *string `pulumi:"ebs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eci endpoints.
	Eci *string `pulumi:"eci"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ECS endpoints.
	Ecs *string `pulumi:"ecs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edas endpoints.
	Edas *string `pulumi:"edas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edasschedulerx endpoints.
	Edasschedulerx *string `pulumi:"edasschedulerx"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edsuser endpoints.
	Edsuser *string `pulumi:"edsuser"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eflo endpoints.
	Eflo *string `pulumi:"eflo"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehpc endpoints.
	Ehpc *string `pulumi:"ehpc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehs endpoints.
	Ehs *string `pulumi:"ehs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eipanycast endpoints.
	Eipanycast *string `pulumi:"eipanycast"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Elasticsearch endpoints.
	Elasticsearch *string `pulumi:"elasticsearch"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom EMR endpoints.
	Emr *string `pulumi:"emr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ens endpoints.
	Ens *string `pulumi:"ens"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Autoscaling endpoints.
	Ess *string `pulumi:"ess"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eventbridgeShare endpoints.
	Eventbridge *string `pulumi:"eventbridge"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Function Computing endpoints.
	Fc *string `pulumi:"fc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom fnf endpoints.
	Fnf *string `pulumi:"fnf"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ga endpoints.
	Ga *string `pulumi:"ga"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gaplus endpoints.
	Gaplus *string `pulumi:"gaplus"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gds endpoints.
	Gds *string `pulumi:"gds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom GPDB endpoints.
	Gpdb *string `pulumi:"gpdb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gwsecd endpoints.
	Gwsecd *string `pulumi:"gwsecd"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hbr endpoints.
	Hbr *string `pulumi:"hbr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hcsSgw endpoints.
	HcsSgw *string `pulumi:"hcsSgw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hitsdb endpoints.
	Hitsdb *string `pulumi:"hitsdb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imm endpoints.
	Imm *string `pulumi:"imm"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imp endpoints.
	Imp *string `pulumi:"imp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ims endpoints.
	Ims *string `pulumi:"ims"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom iot endpoints.
	Iot *string `pulumi:"iot"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom KMS endpoints.
	Kms *string `pulumi:"kms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom R-KVStore endpoints.
	Kvstore *string `pulumi:"kvstore"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Location Service endpoints.
	Location *string `pulumi:"location"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Log Service endpoints.
	Log *string `pulumi:"log"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Market Place endpoints.
	Market *string `pulumi:"market"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MaxCompute endpoints.
	Maxcompute *string `pulumi:"maxcompute"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mhub endpoints.
	Mhub *string `pulumi:"mhub"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MNS endpoints.
	Mns *string `pulumi:"mns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mscopensubscription endpoints.
	Mscopensubscription *string `pulumi:"mscopensubscription"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mse endpoints.
	Mse *string `pulumi:"mse"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom NAS endpoints.
	Nas *string `pulumi:"nas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom nlb endpoints.
	Nlb *string `pulumi:"nlb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oceanbase endpoints.
	Oceanbase *string `pulumi:"oceanbase"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ONS endpoints.
	Ons *string `pulumi:"ons"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom onsproxy endpoints.
	Onsproxy *string `pulumi:"onsproxy"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oos endpoints.
	Oos *string `pulumi:"oos"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom opensearch endpoints.
	Opensearch *string `pulumi:"opensearch"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom OSS endpoints.
	Oss *string `pulumi:"oss"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Table Store endpoints.
	Ots *string `pulumi:"ots"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom PolarDB endpoints.
	Polardb *string `pulumi:"polardb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom privatelink endpoints.
	Privatelink *string `pulumi:"privatelink"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Private Zone endpoints.
	Pvtz *string `pulumi:"pvtz"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quickbi endpoints.
	Quickbi *string `pulumi:"quickbi"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quotas endpoints.
	Quotas *string `pulumi:"quotas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom rKvstore endpoints.
	RKvstore *string `pulumi:"rKvstore"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RAM endpoints.
	Ram *string `pulumi:"ram"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RDS endpoints.
	Rds *string `pulumi:"rds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom redisa endpoints.
	Redisa *string `pulumi:"redisa"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcemanager endpoints.
	Resourcemanager *string `pulumi:"resourcemanager"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcesharing endpoints.
	Resourcesharing *string `pulumi:"resourcesharing"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ros endpoints.
	Ros *string `pulumi:"ros"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sas endpoints.
	Sas *string `pulumi:"sas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom scdn endpoints.
	Scdn *string `pulumi:"scdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sddp endpoints.
	Sddp *string `pulumi:"sddp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom serverless endpoints.
	Serverless *string `pulumi:"serverless"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom servicemesh endpoints.
	Servicemesh *string `pulumi:"servicemesh"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sgw endpoints.
	Sgw *string `pulumi:"sgw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom SLB endpoints.
	Slb *string `pulumi:"slb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom smartag endpoints.
	Smartag *string `pulumi:"smartag"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom srvcatalog endpoints.
	Srvcatalog *string `pulumi:"srvcatalog"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom STS endpoints.
	Sts *string `pulumi:"sts"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom swas endpoints.
	Swas *string `pulumi:"swas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom tag endpoints.
	Tag *string `pulumi:"tag"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vod endpoints.
	Vod *string `pulumi:"vod"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom VPC and VPN endpoints.
	Vpc *string `pulumi:"vpc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vpcpeer endpoints.
	Vpcpeer *string `pulumi:"vpcpeer"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vs endpoints.
	Vs *string `pulumi:"vs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom waf endpoints.
	Waf *string `pulumi:"waf"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom wafOpenapi endpoints.
	WafOpenapi *string `pulumi:"wafOpenapi"`
}

// ProviderEndpointInput is an input type that accepts ProviderEndpointArgs and ProviderEndpointOutput values.
// You can construct a concrete instance of `ProviderEndpointInput` via:
//
//	ProviderEndpointArgs{...}
type ProviderEndpointInput interface {
	pulumi.Input

	ToProviderEndpointOutput() ProviderEndpointOutput
	ToProviderEndpointOutputWithContext(context.Context) ProviderEndpointOutput
}

type ProviderEndpointArgs struct {
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom acr endpoints.
	Acr pulumi.StringPtrInput `pulumi:"acr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Actiontrail endpoints.
	Actiontrail pulumi.StringPtrInput `pulumi:"actiontrail"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom AnalyticDB endpoints.
	Adb pulumi.StringPtrInput `pulumi:"adb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alb endpoints.
	Alb pulumi.StringPtrInput `pulumi:"alb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidfs endpoints.
	Alidfs pulumi.StringPtrInput `pulumi:"alidfs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidns endpoints.
	Alidns pulumi.StringPtrInput `pulumi:"alidns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ALIKAFKA endpoints.
	Alikafka pulumi.StringPtrInput `pulumi:"alikafka"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Api Gateway endpoints.
	Apigateway pulumi.StringPtrInput `pulumi:"apigateway"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom arms endpoints.
	Arms pulumi.StringPtrInput `pulumi:"arms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bastionhost endpoints.
	Bastionhost pulumi.StringPtrInput `pulumi:"bastionhost"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom beebot endpoints.
	Beebot pulumi.StringPtrInput `pulumi:"beebot"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bpstudio endpoints.
	Bpstudio pulumi.StringPtrInput `pulumi:"bpstudio"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom brainIndustrial endpoints.
	BrainIndustrial pulumi.StringPtrInput `pulumi:"brainIndustrial"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BSSOPENAPI endpoints.
	Bssopenapi pulumi.StringPtrInput `pulumi:"bssopenapi"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CAS endpoints.
	Cas pulumi.StringPtrInput `pulumi:"cas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cassandra endpoints.
	Cassandra pulumi.StringPtrInput `pulumi:"cassandra"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbn endpoints.
	Cbn pulumi.StringPtrInput `pulumi:"cbn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbs endpoints.
	Cbs pulumi.StringPtrInput `pulumi:"cbs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cddc endpoints.
	Cddc pulumi.StringPtrInput `pulumi:"cddc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CDN endpoints.
	Cdn pulumi.StringPtrInput `pulumi:"cdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cds endpoints.
	Cds pulumi.StringPtrInput `pulumi:"cds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom clickhouse endpoints.
	Clickhouse pulumi.StringPtrInput `pulumi:"clickhouse"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudauth endpoints.
	Cloudauth pulumi.StringPtrInput `pulumi:"cloudauth"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfirewall endpoints.
	Cloudfirewall pulumi.StringPtrInput `pulumi:"cloudfirewall"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfw endpoints.
	Cloudfw pulumi.StringPtrInput `pulumi:"cloudfw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudphone endpoints.
	Cloudphone pulumi.StringPtrInput `pulumi:"cloudphone"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudsso endpoints.
	Cloudsso pulumi.StringPtrInput `pulumi:"cloudsso"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Cloud Monitor endpoints.
	Cms pulumi.StringPtrInput `pulumi:"cms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom computenest endpoints.
	Computenest pulumi.StringPtrInput `pulumi:"computenest"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom config endpoints.
	Config pulumi.StringPtrInput `pulumi:"config"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Registry endpoints.
	Cr pulumi.StringPtrInput `pulumi:"cr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Service endpoints.
	Cs pulumi.StringPtrInput `pulumi:"cs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom das endpoints.
	Das pulumi.StringPtrInput `pulumi:"das"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Datahub endpoints.
	Datahub pulumi.StringPtrInput `pulumi:"datahub"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dataworkspublic endpoints.
	Dataworkspublic pulumi.StringPtrInput `pulumi:"dataworkspublic"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dbfs endpoints.
	Dbfs pulumi.StringPtrInput `pulumi:"dbfs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dcdn endpoints.
	Dcdn pulumi.StringPtrInput `pulumi:"dcdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ddosbasic endpoints.
	Ddosbasic pulumi.StringPtrInput `pulumi:"ddosbasic"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSBGP endpoints.
	Ddosbgp pulumi.StringPtrInput `pulumi:"ddosbgp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSCOO endpoints.
	Ddoscoo pulumi.StringPtrInput `pulumi:"ddoscoo"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MongoDB endpoints.
	Dds pulumi.StringPtrInput `pulumi:"dds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom devopsrdc endpoints.
	Devopsrdc pulumi.StringPtrInput `pulumi:"devopsrdc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dg endpoints.
	Dg pulumi.StringPtrInput `pulumi:"dg"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dm endpoints.
	Dm pulumi.StringPtrInput `pulumi:"dm"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsEnterprise endpoints.
	DmsEnterprise pulumi.StringPtrInput `pulumi:"dmsEnterprise"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsenterprise endpoints.
	Dmsenterprise pulumi.StringPtrInput `pulumi:"dmsenterprise"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DNS endpoints.
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DRDS endpoints.
	Drds pulumi.StringPtrInput `pulumi:"drds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dts endpoints.
	Dts   pulumi.StringPtrInput `pulumi:"dts"`
	Dysms pulumi.StringPtrInput `pulumi:"dysms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eais endpoints.
	Eais pulumi.StringPtrInput `pulumi:"eais"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ebs endpoints.
	Ebs pulumi.StringPtrInput `pulumi:"ebs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eci endpoints.
	Eci pulumi.StringPtrInput `pulumi:"eci"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ECS endpoints.
	Ecs pulumi.StringPtrInput `pulumi:"ecs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edas endpoints.
	Edas pulumi.StringPtrInput `pulumi:"edas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edasschedulerx endpoints.
	Edasschedulerx pulumi.StringPtrInput `pulumi:"edasschedulerx"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edsuser endpoints.
	Edsuser pulumi.StringPtrInput `pulumi:"edsuser"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eflo endpoints.
	Eflo pulumi.StringPtrInput `pulumi:"eflo"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehpc endpoints.
	Ehpc pulumi.StringPtrInput `pulumi:"ehpc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehs endpoints.
	Ehs pulumi.StringPtrInput `pulumi:"ehs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eipanycast endpoints.
	Eipanycast pulumi.StringPtrInput `pulumi:"eipanycast"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Elasticsearch endpoints.
	Elasticsearch pulumi.StringPtrInput `pulumi:"elasticsearch"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom EMR endpoints.
	Emr pulumi.StringPtrInput `pulumi:"emr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ens endpoints.
	Ens pulumi.StringPtrInput `pulumi:"ens"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Autoscaling endpoints.
	Ess pulumi.StringPtrInput `pulumi:"ess"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eventbridgeShare endpoints.
	Eventbridge pulumi.StringPtrInput `pulumi:"eventbridge"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Function Computing endpoints.
	Fc pulumi.StringPtrInput `pulumi:"fc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom fnf endpoints.
	Fnf pulumi.StringPtrInput `pulumi:"fnf"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ga endpoints.
	Ga pulumi.StringPtrInput `pulumi:"ga"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gaplus endpoints.
	Gaplus pulumi.StringPtrInput `pulumi:"gaplus"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gds endpoints.
	Gds pulumi.StringPtrInput `pulumi:"gds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom GPDB endpoints.
	Gpdb pulumi.StringPtrInput `pulumi:"gpdb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gwsecd endpoints.
	Gwsecd pulumi.StringPtrInput `pulumi:"gwsecd"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hbr endpoints.
	Hbr pulumi.StringPtrInput `pulumi:"hbr"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hcsSgw endpoints.
	HcsSgw pulumi.StringPtrInput `pulumi:"hcsSgw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hitsdb endpoints.
	Hitsdb pulumi.StringPtrInput `pulumi:"hitsdb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imm endpoints.
	Imm pulumi.StringPtrInput `pulumi:"imm"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imp endpoints.
	Imp pulumi.StringPtrInput `pulumi:"imp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ims endpoints.
	Ims pulumi.StringPtrInput `pulumi:"ims"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom iot endpoints.
	Iot pulumi.StringPtrInput `pulumi:"iot"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom KMS endpoints.
	Kms pulumi.StringPtrInput `pulumi:"kms"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom R-KVStore endpoints.
	Kvstore pulumi.StringPtrInput `pulumi:"kvstore"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Location Service endpoints.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Log Service endpoints.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Market Place endpoints.
	Market pulumi.StringPtrInput `pulumi:"market"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MaxCompute endpoints.
	Maxcompute pulumi.StringPtrInput `pulumi:"maxcompute"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mhub endpoints.
	Mhub pulumi.StringPtrInput `pulumi:"mhub"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MNS endpoints.
	Mns pulumi.StringPtrInput `pulumi:"mns"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mscopensubscription endpoints.
	Mscopensubscription pulumi.StringPtrInput `pulumi:"mscopensubscription"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mse endpoints.
	Mse pulumi.StringPtrInput `pulumi:"mse"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom NAS endpoints.
	Nas pulumi.StringPtrInput `pulumi:"nas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom nlb endpoints.
	Nlb pulumi.StringPtrInput `pulumi:"nlb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oceanbase endpoints.
	Oceanbase pulumi.StringPtrInput `pulumi:"oceanbase"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ONS endpoints.
	Ons pulumi.StringPtrInput `pulumi:"ons"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom onsproxy endpoints.
	Onsproxy pulumi.StringPtrInput `pulumi:"onsproxy"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oos endpoints.
	Oos pulumi.StringPtrInput `pulumi:"oos"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom opensearch endpoints.
	Opensearch pulumi.StringPtrInput `pulumi:"opensearch"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom OSS endpoints.
	Oss pulumi.StringPtrInput `pulumi:"oss"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Table Store endpoints.
	Ots pulumi.StringPtrInput `pulumi:"ots"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom PolarDB endpoints.
	Polardb pulumi.StringPtrInput `pulumi:"polardb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom privatelink endpoints.
	Privatelink pulumi.StringPtrInput `pulumi:"privatelink"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Private Zone endpoints.
	Pvtz pulumi.StringPtrInput `pulumi:"pvtz"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quickbi endpoints.
	Quickbi pulumi.StringPtrInput `pulumi:"quickbi"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quotas endpoints.
	Quotas pulumi.StringPtrInput `pulumi:"quotas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom rKvstore endpoints.
	RKvstore pulumi.StringPtrInput `pulumi:"rKvstore"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RAM endpoints.
	Ram pulumi.StringPtrInput `pulumi:"ram"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RDS endpoints.
	Rds pulumi.StringPtrInput `pulumi:"rds"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom redisa endpoints.
	Redisa pulumi.StringPtrInput `pulumi:"redisa"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcemanager endpoints.
	Resourcemanager pulumi.StringPtrInput `pulumi:"resourcemanager"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcesharing endpoints.
	Resourcesharing pulumi.StringPtrInput `pulumi:"resourcesharing"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ros endpoints.
	Ros pulumi.StringPtrInput `pulumi:"ros"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sas endpoints.
	Sas pulumi.StringPtrInput `pulumi:"sas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom scdn endpoints.
	Scdn pulumi.StringPtrInput `pulumi:"scdn"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sddp endpoints.
	Sddp pulumi.StringPtrInput `pulumi:"sddp"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom serverless endpoints.
	Serverless pulumi.StringPtrInput `pulumi:"serverless"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom servicemesh endpoints.
	Servicemesh pulumi.StringPtrInput `pulumi:"servicemesh"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sgw endpoints.
	Sgw pulumi.StringPtrInput `pulumi:"sgw"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom SLB endpoints.
	Slb pulumi.StringPtrInput `pulumi:"slb"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom smartag endpoints.
	Smartag pulumi.StringPtrInput `pulumi:"smartag"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom srvcatalog endpoints.
	Srvcatalog pulumi.StringPtrInput `pulumi:"srvcatalog"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom STS endpoints.
	Sts pulumi.StringPtrInput `pulumi:"sts"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom swas endpoints.
	Swas pulumi.StringPtrInput `pulumi:"swas"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom tag endpoints.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vod endpoints.
	Vod pulumi.StringPtrInput `pulumi:"vod"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom VPC and VPN endpoints.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vpcpeer endpoints.
	Vpcpeer pulumi.StringPtrInput `pulumi:"vpcpeer"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vs endpoints.
	Vs pulumi.StringPtrInput `pulumi:"vs"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom waf endpoints.
	Waf pulumi.StringPtrInput `pulumi:"waf"`
	// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom wafOpenapi endpoints.
	WafOpenapi pulumi.StringPtrInput `pulumi:"wafOpenapi"`
}

func (ProviderEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArgs) ToProviderEndpointOutput() ProviderEndpointOutput {
	return i.ToProviderEndpointOutputWithContext(context.Background())
}

func (i ProviderEndpointArgs) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointOutput)
}

// ProviderEndpointArrayInput is an input type that accepts ProviderEndpointArray and ProviderEndpointArrayOutput values.
// You can construct a concrete instance of `ProviderEndpointArrayInput` via:
//
//	ProviderEndpointArray{ ProviderEndpointArgs{...} }
type ProviderEndpointArrayInput interface {
	pulumi.Input

	ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput
	ToProviderEndpointArrayOutputWithContext(context.Context) ProviderEndpointArrayOutput
}

type ProviderEndpointArray []ProviderEndpointInput

func (ProviderEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return i.ToProviderEndpointArrayOutputWithContext(context.Background())
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointArrayOutput)
}

type ProviderEndpointOutput struct{ *pulumi.OutputState }

func (ProviderEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointOutput) ToProviderEndpointOutput() ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return o
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom acr endpoints.
func (o ProviderEndpointOutput) Acr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Acr }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Actiontrail endpoints.
func (o ProviderEndpointOutput) Actiontrail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Actiontrail }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom AnalyticDB endpoints.
func (o ProviderEndpointOutput) Adb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Adb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alb endpoints.
func (o ProviderEndpointOutput) Alb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Alb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidfs endpoints.
func (o ProviderEndpointOutput) Alidfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Alidfs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom alidns endpoints.
func (o ProviderEndpointOutput) Alidns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Alidns }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ALIKAFKA endpoints.
func (o ProviderEndpointOutput) Alikafka() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Alikafka }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Api Gateway endpoints.
func (o ProviderEndpointOutput) Apigateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Apigateway }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom arms endpoints.
func (o ProviderEndpointOutput) Arms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Arms }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bastionhost endpoints.
func (o ProviderEndpointOutput) Bastionhost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Bastionhost }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom beebot endpoints.
func (o ProviderEndpointOutput) Beebot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Beebot }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom bpstudio endpoints.
func (o ProviderEndpointOutput) Bpstudio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Bpstudio }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom brainIndustrial endpoints.
func (o ProviderEndpointOutput) BrainIndustrial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.BrainIndustrial }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom BSSOPENAPI endpoints.
func (o ProviderEndpointOutput) Bssopenapi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Bssopenapi }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CAS endpoints.
func (o ProviderEndpointOutput) Cas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cassandra endpoints.
func (o ProviderEndpointOutput) Cassandra() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cassandra }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbn endpoints.
func (o ProviderEndpointOutput) Cbn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cbn }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cbs endpoints.
func (o ProviderEndpointOutput) Cbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cbs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cddc endpoints.
func (o ProviderEndpointOutput) Cddc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cddc }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom CDN endpoints.
func (o ProviderEndpointOutput) Cdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cdn }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cds endpoints.
func (o ProviderEndpointOutput) Cds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cds }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom clickhouse endpoints.
func (o ProviderEndpointOutput) Clickhouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Clickhouse }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudauth endpoints.
func (o ProviderEndpointOutput) Cloudauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudauth }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfirewall endpoints.
func (o ProviderEndpointOutput) Cloudfirewall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudfirewall }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudfw endpoints.
func (o ProviderEndpointOutput) Cloudfw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudfw }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudphone endpoints.
func (o ProviderEndpointOutput) Cloudphone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudphone }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom cloudsso endpoints.
func (o ProviderEndpointOutput) Cloudsso() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudsso }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Cloud Monitor endpoints.
func (o ProviderEndpointOutput) Cms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cms }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom computenest endpoints.
func (o ProviderEndpointOutput) Computenest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Computenest }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom config endpoints.
func (o ProviderEndpointOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Registry endpoints.
func (o ProviderEndpointOutput) Cr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cr }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Container Service endpoints.
func (o ProviderEndpointOutput) Cs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom das endpoints.
func (o ProviderEndpointOutput) Das() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Das }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Datahub endpoints.
func (o ProviderEndpointOutput) Datahub() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Datahub }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dataworkspublic endpoints.
func (o ProviderEndpointOutput) Dataworkspublic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dataworkspublic }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dbfs endpoints.
func (o ProviderEndpointOutput) Dbfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dbfs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dcdn endpoints.
func (o ProviderEndpointOutput) Dcdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dcdn }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ddosbasic endpoints.
func (o ProviderEndpointOutput) Ddosbasic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ddosbasic }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSBGP endpoints.
func (o ProviderEndpointOutput) Ddosbgp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ddosbgp }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DDOSCOO endpoints.
func (o ProviderEndpointOutput) Ddoscoo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ddoscoo }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MongoDB endpoints.
func (o ProviderEndpointOutput) Dds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dds }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom devopsrdc endpoints.
func (o ProviderEndpointOutput) Devopsrdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Devopsrdc }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dg endpoints.
func (o ProviderEndpointOutput) Dg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dg }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dm endpoints.
func (o ProviderEndpointOutput) Dm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dm }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsEnterprise endpoints.
func (o ProviderEndpointOutput) DmsEnterprise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.DmsEnterprise }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dmsenterprise endpoints.
func (o ProviderEndpointOutput) Dmsenterprise() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dmsenterprise }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DNS endpoints.
func (o ProviderEndpointOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom DRDS endpoints.
func (o ProviderEndpointOutput) Drds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Drds }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom dts endpoints.
func (o ProviderEndpointOutput) Dts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dts }).(pulumi.StringPtrOutput)
}

func (o ProviderEndpointOutput) Dysms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Dysms }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eais endpoints.
func (o ProviderEndpointOutput) Eais() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Eais }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ebs endpoints.
func (o ProviderEndpointOutput) Ebs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ebs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eci endpoints.
func (o ProviderEndpointOutput) Eci() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Eci }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ECS endpoints.
func (o ProviderEndpointOutput) Ecs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ecs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edas endpoints.
func (o ProviderEndpointOutput) Edas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Edas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edasschedulerx endpoints.
func (o ProviderEndpointOutput) Edasschedulerx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Edasschedulerx }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom edsuser endpoints.
func (o ProviderEndpointOutput) Edsuser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Edsuser }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eflo endpoints.
func (o ProviderEndpointOutput) Eflo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Eflo }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehpc endpoints.
func (o ProviderEndpointOutput) Ehpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ehpc }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ehs endpoints.
func (o ProviderEndpointOutput) Ehs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ehs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eipanycast endpoints.
func (o ProviderEndpointOutput) Eipanycast() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Eipanycast }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Elasticsearch endpoints.
func (o ProviderEndpointOutput) Elasticsearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Elasticsearch }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom EMR endpoints.
func (o ProviderEndpointOutput) Emr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Emr }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ens endpoints.
func (o ProviderEndpointOutput) Ens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ens }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Autoscaling endpoints.
func (o ProviderEndpointOutput) Ess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ess }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom eventbridgeShare endpoints.
func (o ProviderEndpointOutput) Eventbridge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Eventbridge }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Function Computing endpoints.
func (o ProviderEndpointOutput) Fc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Fc }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom fnf endpoints.
func (o ProviderEndpointOutput) Fnf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Fnf }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ga endpoints.
func (o ProviderEndpointOutput) Ga() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ga }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gaplus endpoints.
func (o ProviderEndpointOutput) Gaplus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Gaplus }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gds endpoints.
func (o ProviderEndpointOutput) Gds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Gds }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom GPDB endpoints.
func (o ProviderEndpointOutput) Gpdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Gpdb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom gwsecd endpoints.
func (o ProviderEndpointOutput) Gwsecd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Gwsecd }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hbr endpoints.
func (o ProviderEndpointOutput) Hbr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Hbr }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hcsSgw endpoints.
func (o ProviderEndpointOutput) HcsSgw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.HcsSgw }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom hitsdb endpoints.
func (o ProviderEndpointOutput) Hitsdb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Hitsdb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imm endpoints.
func (o ProviderEndpointOutput) Imm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Imm }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom imp endpoints.
func (o ProviderEndpointOutput) Imp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Imp }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ims endpoints.
func (o ProviderEndpointOutput) Ims() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ims }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom iot endpoints.
func (o ProviderEndpointOutput) Iot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Iot }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom KMS endpoints.
func (o ProviderEndpointOutput) Kms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Kms }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom R-KVStore endpoints.
func (o ProviderEndpointOutput) Kvstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Kvstore }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Location Service endpoints.
func (o ProviderEndpointOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Log Service endpoints.
func (o ProviderEndpointOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Market Place endpoints.
func (o ProviderEndpointOutput) Market() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Market }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MaxCompute endpoints.
func (o ProviderEndpointOutput) Maxcompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Maxcompute }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mhub endpoints.
func (o ProviderEndpointOutput) Mhub() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Mhub }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom MNS endpoints.
func (o ProviderEndpointOutput) Mns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Mns }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mscopensubscription endpoints.
func (o ProviderEndpointOutput) Mscopensubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Mscopensubscription }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom mse endpoints.
func (o ProviderEndpointOutput) Mse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Mse }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom NAS endpoints.
func (o ProviderEndpointOutput) Nas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Nas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom nlb endpoints.
func (o ProviderEndpointOutput) Nlb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Nlb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oceanbase endpoints.
func (o ProviderEndpointOutput) Oceanbase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Oceanbase }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ONS endpoints.
func (o ProviderEndpointOutput) Ons() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ons }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom onsproxy endpoints.
func (o ProviderEndpointOutput) Onsproxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Onsproxy }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom oos endpoints.
func (o ProviderEndpointOutput) Oos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Oos }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom opensearch endpoints.
func (o ProviderEndpointOutput) Opensearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Opensearch }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom OSS endpoints.
func (o ProviderEndpointOutput) Oss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Oss }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Table Store endpoints.
func (o ProviderEndpointOutput) Ots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ots }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom PolarDB endpoints.
func (o ProviderEndpointOutput) Polardb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Polardb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom privatelink endpoints.
func (o ProviderEndpointOutput) Privatelink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Privatelink }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom Private Zone endpoints.
func (o ProviderEndpointOutput) Pvtz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Pvtz }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quickbi endpoints.
func (o ProviderEndpointOutput) Quickbi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Quickbi }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom quotas endpoints.
func (o ProviderEndpointOutput) Quotas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Quotas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom rKvstore endpoints.
func (o ProviderEndpointOutput) RKvstore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.RKvstore }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RAM endpoints.
func (o ProviderEndpointOutput) Ram() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ram }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom RDS endpoints.
func (o ProviderEndpointOutput) Rds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Rds }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom redisa endpoints.
func (o ProviderEndpointOutput) Redisa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Redisa }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcemanager endpoints.
func (o ProviderEndpointOutput) Resourcemanager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Resourcemanager }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom resourcesharing endpoints.
func (o ProviderEndpointOutput) Resourcesharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Resourcesharing }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom ros endpoints.
func (o ProviderEndpointOutput) Ros() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ros }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sas endpoints.
func (o ProviderEndpointOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Sas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom scdn endpoints.
func (o ProviderEndpointOutput) Scdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Scdn }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sddp endpoints.
func (o ProviderEndpointOutput) Sddp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Sddp }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom serverless endpoints.
func (o ProviderEndpointOutput) Serverless() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Serverless }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom servicemesh endpoints.
func (o ProviderEndpointOutput) Servicemesh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Servicemesh }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom sgw endpoints.
func (o ProviderEndpointOutput) Sgw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Sgw }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom SLB endpoints.
func (o ProviderEndpointOutput) Slb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Slb }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom smartag endpoints.
func (o ProviderEndpointOutput) Smartag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Smartag }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom srvcatalog endpoints.
func (o ProviderEndpointOutput) Srvcatalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Srvcatalog }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom STS endpoints.
func (o ProviderEndpointOutput) Sts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Sts }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom swas endpoints.
func (o ProviderEndpointOutput) Swas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Swas }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom tag endpoints.
func (o ProviderEndpointOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vod endpoints.
func (o ProviderEndpointOutput) Vod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Vod }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom VPC and VPN endpoints.
func (o ProviderEndpointOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vpcpeer endpoints.
func (o ProviderEndpointOutput) Vpcpeer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Vpcpeer }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom vs endpoints.
func (o ProviderEndpointOutput) Vs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Vs }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom waf endpoints.
func (o ProviderEndpointOutput) Waf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Waf }).(pulumi.StringPtrOutput)
}

// Use this to override the default endpoint URL constructed from the `region`. It's typically used to connect to custom wafOpenapi endpoints.
func (o ProviderEndpointOutput) WafOpenapi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.WafOpenapi }).(pulumi.StringPtrOutput)
}

type ProviderEndpointArrayOutput struct{ *pulumi.OutputState }

func (ProviderEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) Index(i pulumi.IntInput) ProviderEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderEndpoint {
		return vs[0].([]ProviderEndpoint)[vs[1].(int)]
	}).(ProviderEndpointOutput)
}

type ProviderSignVersion struct {
	Oss *string `pulumi:"oss"`
	Sls *string `pulumi:"sls"`
}

// ProviderSignVersionInput is an input type that accepts ProviderSignVersionArgs and ProviderSignVersionOutput values.
// You can construct a concrete instance of `ProviderSignVersionInput` via:
//
//	ProviderSignVersionArgs{...}
type ProviderSignVersionInput interface {
	pulumi.Input

	ToProviderSignVersionOutput() ProviderSignVersionOutput
	ToProviderSignVersionOutputWithContext(context.Context) ProviderSignVersionOutput
}

type ProviderSignVersionArgs struct {
	Oss pulumi.StringPtrInput `pulumi:"oss"`
	Sls pulumi.StringPtrInput `pulumi:"sls"`
}

func (ProviderSignVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSignVersion)(nil)).Elem()
}

func (i ProviderSignVersionArgs) ToProviderSignVersionOutput() ProviderSignVersionOutput {
	return i.ToProviderSignVersionOutputWithContext(context.Background())
}

func (i ProviderSignVersionArgs) ToProviderSignVersionOutputWithContext(ctx context.Context) ProviderSignVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSignVersionOutput)
}

func (i ProviderSignVersionArgs) ToProviderSignVersionPtrOutput() ProviderSignVersionPtrOutput {
	return i.ToProviderSignVersionPtrOutputWithContext(context.Background())
}

func (i ProviderSignVersionArgs) ToProviderSignVersionPtrOutputWithContext(ctx context.Context) ProviderSignVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSignVersionOutput).ToProviderSignVersionPtrOutputWithContext(ctx)
}

// ProviderSignVersionPtrInput is an input type that accepts ProviderSignVersionArgs, ProviderSignVersionPtr and ProviderSignVersionPtrOutput values.
// You can construct a concrete instance of `ProviderSignVersionPtrInput` via:
//
//	        ProviderSignVersionArgs{...}
//
//	or:
//
//	        nil
type ProviderSignVersionPtrInput interface {
	pulumi.Input

	ToProviderSignVersionPtrOutput() ProviderSignVersionPtrOutput
	ToProviderSignVersionPtrOutputWithContext(context.Context) ProviderSignVersionPtrOutput
}

type providerSignVersionPtrType ProviderSignVersionArgs

func ProviderSignVersionPtr(v *ProviderSignVersionArgs) ProviderSignVersionPtrInput {
	return (*providerSignVersionPtrType)(v)
}

func (*providerSignVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSignVersion)(nil)).Elem()
}

func (i *providerSignVersionPtrType) ToProviderSignVersionPtrOutput() ProviderSignVersionPtrOutput {
	return i.ToProviderSignVersionPtrOutputWithContext(context.Background())
}

func (i *providerSignVersionPtrType) ToProviderSignVersionPtrOutputWithContext(ctx context.Context) ProviderSignVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSignVersionPtrOutput)
}

type ProviderSignVersionOutput struct{ *pulumi.OutputState }

func (ProviderSignVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSignVersion)(nil)).Elem()
}

func (o ProviderSignVersionOutput) ToProviderSignVersionOutput() ProviderSignVersionOutput {
	return o
}

func (o ProviderSignVersionOutput) ToProviderSignVersionOutputWithContext(ctx context.Context) ProviderSignVersionOutput {
	return o
}

func (o ProviderSignVersionOutput) ToProviderSignVersionPtrOutput() ProviderSignVersionPtrOutput {
	return o.ToProviderSignVersionPtrOutputWithContext(context.Background())
}

func (o ProviderSignVersionOutput) ToProviderSignVersionPtrOutputWithContext(ctx context.Context) ProviderSignVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSignVersion) *ProviderSignVersion {
		return &v
	}).(ProviderSignVersionPtrOutput)
}

func (o ProviderSignVersionOutput) Oss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSignVersion) *string { return v.Oss }).(pulumi.StringPtrOutput)
}

func (o ProviderSignVersionOutput) Sls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSignVersion) *string { return v.Sls }).(pulumi.StringPtrOutput)
}

type ProviderSignVersionPtrOutput struct{ *pulumi.OutputState }

func (ProviderSignVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSignVersion)(nil)).Elem()
}

func (o ProviderSignVersionPtrOutput) ToProviderSignVersionPtrOutput() ProviderSignVersionPtrOutput {
	return o
}

func (o ProviderSignVersionPtrOutput) ToProviderSignVersionPtrOutputWithContext(ctx context.Context) ProviderSignVersionPtrOutput {
	return o
}

func (o ProviderSignVersionPtrOutput) Elem() ProviderSignVersionOutput {
	return o.ApplyT(func(v *ProviderSignVersion) ProviderSignVersion {
		if v != nil {
			return *v
		}
		var ret ProviderSignVersion
		return ret
	}).(ProviderSignVersionOutput)
}

func (o ProviderSignVersionPtrOutput) Oss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSignVersion) *string {
		if v == nil {
			return nil
		}
		return v.Oss
	}).(pulumi.StringPtrOutput)
}

func (o ProviderSignVersionPtrOutput) Sls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSignVersion) *string {
		if v == nil {
			return nil
		}
		return v.Sls
	}).(pulumi.StringPtrOutput)
}

type GetMscSubContactsContact struct {
	// UID.
	AccountUid string `pulumi:"accountUid"`
	// The first ID of the resource.
	ContactId string `pulumi:"contactId"`
	// The User's Contact Name. **Note:** The name must be 2 to 12 characters in length, and can contain uppercase and lowercase letters.
	ContactName string `pulumi:"contactName"`
	// The User's Contact Email Address.
	Email string `pulumi:"email"`
	// The ID of the Contact.
	Id string `pulumi:"id"`
	// Indicates Whether the BGP Group Is the Account Itself.
	IsAccount bool `pulumi:"isAccount"`
	// Whether They Have Expired Or Not.
	IsObsolete bool `pulumi:"isObsolete"`
	// Email Validation for.
	IsVerifiedEmail bool `pulumi:"isVerifiedEmail"`
	// If the Phone Verification.
	IsVerifiedMobile bool `pulumi:"isVerifiedMobile"`
	// Last Verification Email Transmission Time.
	LastEmailVerificationTimeStamp string `pulumi:"lastEmailVerificationTimeStamp"`
	// The Pieces of Authentication SMS Sending Time.
	LastMobileVerificationTimeStamp string `pulumi:"lastMobileVerificationTimeStamp"`
	// The User's Telephone.
	Mobile string `pulumi:"mobile"`
	// The User's Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
	Position string `pulumi:"position"`
}

// GetMscSubContactsContactInput is an input type that accepts GetMscSubContactsContactArgs and GetMscSubContactsContactOutput values.
// You can construct a concrete instance of `GetMscSubContactsContactInput` via:
//
//	GetMscSubContactsContactArgs{...}
type GetMscSubContactsContactInput interface {
	pulumi.Input

	ToGetMscSubContactsContactOutput() GetMscSubContactsContactOutput
	ToGetMscSubContactsContactOutputWithContext(context.Context) GetMscSubContactsContactOutput
}

type GetMscSubContactsContactArgs struct {
	// UID.
	AccountUid pulumi.StringInput `pulumi:"accountUid"`
	// The first ID of the resource.
	ContactId pulumi.StringInput `pulumi:"contactId"`
	// The User's Contact Name. **Note:** The name must be 2 to 12 characters in length, and can contain uppercase and lowercase letters.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// The User's Contact Email Address.
	Email pulumi.StringInput `pulumi:"email"`
	// The ID of the Contact.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates Whether the BGP Group Is the Account Itself.
	IsAccount pulumi.BoolInput `pulumi:"isAccount"`
	// Whether They Have Expired Or Not.
	IsObsolete pulumi.BoolInput `pulumi:"isObsolete"`
	// Email Validation for.
	IsVerifiedEmail pulumi.BoolInput `pulumi:"isVerifiedEmail"`
	// If the Phone Verification.
	IsVerifiedMobile pulumi.BoolInput `pulumi:"isVerifiedMobile"`
	// Last Verification Email Transmission Time.
	LastEmailVerificationTimeStamp pulumi.StringInput `pulumi:"lastEmailVerificationTimeStamp"`
	// The Pieces of Authentication SMS Sending Time.
	LastMobileVerificationTimeStamp pulumi.StringInput `pulumi:"lastMobileVerificationTimeStamp"`
	// The User's Telephone.
	Mobile pulumi.StringInput `pulumi:"mobile"`
	// The User's Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
	Position pulumi.StringInput `pulumi:"position"`
}

func (GetMscSubContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubContactsContact)(nil)).Elem()
}

func (i GetMscSubContactsContactArgs) ToGetMscSubContactsContactOutput() GetMscSubContactsContactOutput {
	return i.ToGetMscSubContactsContactOutputWithContext(context.Background())
}

func (i GetMscSubContactsContactArgs) ToGetMscSubContactsContactOutputWithContext(ctx context.Context) GetMscSubContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubContactsContactOutput)
}

// GetMscSubContactsContactArrayInput is an input type that accepts GetMscSubContactsContactArray and GetMscSubContactsContactArrayOutput values.
// You can construct a concrete instance of `GetMscSubContactsContactArrayInput` via:
//
//	GetMscSubContactsContactArray{ GetMscSubContactsContactArgs{...} }
type GetMscSubContactsContactArrayInput interface {
	pulumi.Input

	ToGetMscSubContactsContactArrayOutput() GetMscSubContactsContactArrayOutput
	ToGetMscSubContactsContactArrayOutputWithContext(context.Context) GetMscSubContactsContactArrayOutput
}

type GetMscSubContactsContactArray []GetMscSubContactsContactInput

func (GetMscSubContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubContactsContact)(nil)).Elem()
}

func (i GetMscSubContactsContactArray) ToGetMscSubContactsContactArrayOutput() GetMscSubContactsContactArrayOutput {
	return i.ToGetMscSubContactsContactArrayOutputWithContext(context.Background())
}

func (i GetMscSubContactsContactArray) ToGetMscSubContactsContactArrayOutputWithContext(ctx context.Context) GetMscSubContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubContactsContactArrayOutput)
}

type GetMscSubContactsContactOutput struct{ *pulumi.OutputState }

func (GetMscSubContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubContactsContact)(nil)).Elem()
}

func (o GetMscSubContactsContactOutput) ToGetMscSubContactsContactOutput() GetMscSubContactsContactOutput {
	return o
}

func (o GetMscSubContactsContactOutput) ToGetMscSubContactsContactOutputWithContext(ctx context.Context) GetMscSubContactsContactOutput {
	return o
}

// UID.
func (o GetMscSubContactsContactOutput) AccountUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.AccountUid }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetMscSubContactsContactOutput) ContactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.ContactId }).(pulumi.StringOutput)
}

// The User's Contact Name. **Note:** The name must be 2 to 12 characters in length, and can contain uppercase and lowercase letters.
func (o GetMscSubContactsContactOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.ContactName }).(pulumi.StringOutput)
}

// The User's Contact Email Address.
func (o GetMscSubContactsContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.Email }).(pulumi.StringOutput)
}

// The ID of the Contact.
func (o GetMscSubContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates Whether the BGP Group Is the Account Itself.
func (o GetMscSubContactsContactOutput) IsAccount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) bool { return v.IsAccount }).(pulumi.BoolOutput)
}

// Whether They Have Expired Or Not.
func (o GetMscSubContactsContactOutput) IsObsolete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) bool { return v.IsObsolete }).(pulumi.BoolOutput)
}

// Email Validation for.
func (o GetMscSubContactsContactOutput) IsVerifiedEmail() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) bool { return v.IsVerifiedEmail }).(pulumi.BoolOutput)
}

// If the Phone Verification.
func (o GetMscSubContactsContactOutput) IsVerifiedMobile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) bool { return v.IsVerifiedMobile }).(pulumi.BoolOutput)
}

// Last Verification Email Transmission Time.
func (o GetMscSubContactsContactOutput) LastEmailVerificationTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.LastEmailVerificationTimeStamp }).(pulumi.StringOutput)
}

// The Pieces of Authentication SMS Sending Time.
func (o GetMscSubContactsContactOutput) LastMobileVerificationTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.LastMobileVerificationTimeStamp }).(pulumi.StringOutput)
}

// The User's Telephone.
func (o GetMscSubContactsContactOutput) Mobile() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.Mobile }).(pulumi.StringOutput)
}

// The User's Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
func (o GetMscSubContactsContactOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubContactsContact) string { return v.Position }).(pulumi.StringOutput)
}

type GetMscSubContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetMscSubContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubContactsContact)(nil)).Elem()
}

func (o GetMscSubContactsContactArrayOutput) ToGetMscSubContactsContactArrayOutput() GetMscSubContactsContactArrayOutput {
	return o
}

func (o GetMscSubContactsContactArrayOutput) ToGetMscSubContactsContactArrayOutputWithContext(ctx context.Context) GetMscSubContactsContactArrayOutput {
	return o
}

func (o GetMscSubContactsContactArrayOutput) Index(i pulumi.IntInput) GetMscSubContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMscSubContactsContact {
		return vs[0].([]GetMscSubContactsContact)[vs[1].(int)]
	}).(GetMscSubContactsContactOutput)
}

type GetMscSubSubscriptionsSubscription struct {
	// The channel the Subscription.
	Channel string `pulumi:"channel"`
	// The ids of subscribed contacts.
	ContactIds []int `pulumi:"contactIds"`
	// The description of the Subscription.
	Description string `pulumi:"description"`
	// The status of email subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	EmailStatus int `pulumi:"emailStatus"`
	// The ID of the Subscription.
	Id string `pulumi:"id"`
	// The ID of the Subscription.
	ItemId string `pulumi:"itemId"`
	// The name of the Subscription.
	ItemName string `pulumi:"itemName"`
	// The status of pmsg subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	PmsgStatus int `pulumi:"pmsgStatus"`
	// The status of sms subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	SmsStatus int `pulumi:"smsStatus"`
	// The status of tts subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	TtsStatus int `pulumi:"ttsStatus"`
	// The ids of subscribed webhooks.
	WebhookIds []int `pulumi:"webhookIds"`
	// The status of webhook subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	WebhookStatus int `pulumi:"webhookStatus"`
}

// GetMscSubSubscriptionsSubscriptionInput is an input type that accepts GetMscSubSubscriptionsSubscriptionArgs and GetMscSubSubscriptionsSubscriptionOutput values.
// You can construct a concrete instance of `GetMscSubSubscriptionsSubscriptionInput` via:
//
//	GetMscSubSubscriptionsSubscriptionArgs{...}
type GetMscSubSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetMscSubSubscriptionsSubscriptionOutput() GetMscSubSubscriptionsSubscriptionOutput
	ToGetMscSubSubscriptionsSubscriptionOutputWithContext(context.Context) GetMscSubSubscriptionsSubscriptionOutput
}

type GetMscSubSubscriptionsSubscriptionArgs struct {
	// The channel the Subscription.
	Channel pulumi.StringInput `pulumi:"channel"`
	// The ids of subscribed contacts.
	ContactIds pulumi.IntArrayInput `pulumi:"contactIds"`
	// The description of the Subscription.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of email subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	EmailStatus pulumi.IntInput `pulumi:"emailStatus"`
	// The ID of the Subscription.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Subscription.
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// The name of the Subscription.
	ItemName pulumi.StringInput `pulumi:"itemName"`
	// The status of pmsg subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	PmsgStatus pulumi.IntInput `pulumi:"pmsgStatus"`
	// The status of sms subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	SmsStatus pulumi.IntInput `pulumi:"smsStatus"`
	// The status of tts subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	TtsStatus pulumi.IntInput `pulumi:"ttsStatus"`
	// The ids of subscribed webhooks.
	WebhookIds pulumi.IntArrayInput `pulumi:"webhookIds"`
	// The status of webhook subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
	WebhookStatus pulumi.IntInput `pulumi:"webhookStatus"`
}

func (GetMscSubSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubSubscriptionsSubscription)(nil)).Elem()
}

func (i GetMscSubSubscriptionsSubscriptionArgs) ToGetMscSubSubscriptionsSubscriptionOutput() GetMscSubSubscriptionsSubscriptionOutput {
	return i.ToGetMscSubSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetMscSubSubscriptionsSubscriptionArgs) ToGetMscSubSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetMscSubSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubSubscriptionsSubscriptionOutput)
}

// GetMscSubSubscriptionsSubscriptionArrayInput is an input type that accepts GetMscSubSubscriptionsSubscriptionArray and GetMscSubSubscriptionsSubscriptionArrayOutput values.
// You can construct a concrete instance of `GetMscSubSubscriptionsSubscriptionArrayInput` via:
//
//	GetMscSubSubscriptionsSubscriptionArray{ GetMscSubSubscriptionsSubscriptionArgs{...} }
type GetMscSubSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetMscSubSubscriptionsSubscriptionArrayOutput() GetMscSubSubscriptionsSubscriptionArrayOutput
	ToGetMscSubSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetMscSubSubscriptionsSubscriptionArrayOutput
}

type GetMscSubSubscriptionsSubscriptionArray []GetMscSubSubscriptionsSubscriptionInput

func (GetMscSubSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubSubscriptionsSubscription)(nil)).Elem()
}

func (i GetMscSubSubscriptionsSubscriptionArray) ToGetMscSubSubscriptionsSubscriptionArrayOutput() GetMscSubSubscriptionsSubscriptionArrayOutput {
	return i.ToGetMscSubSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetMscSubSubscriptionsSubscriptionArray) ToGetMscSubSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetMscSubSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubSubscriptionsSubscriptionArrayOutput)
}

type GetMscSubSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetMscSubSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubSubscriptionsSubscription)(nil)).Elem()
}

func (o GetMscSubSubscriptionsSubscriptionOutput) ToGetMscSubSubscriptionsSubscriptionOutput() GetMscSubSubscriptionsSubscriptionOutput {
	return o
}

func (o GetMscSubSubscriptionsSubscriptionOutput) ToGetMscSubSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetMscSubSubscriptionsSubscriptionOutput {
	return o
}

// The channel the Subscription.
func (o GetMscSubSubscriptionsSubscriptionOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) string { return v.Channel }).(pulumi.StringOutput)
}

// The ids of subscribed contacts.
func (o GetMscSubSubscriptionsSubscriptionOutput) ContactIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) []int { return v.ContactIds }).(pulumi.IntArrayOutput)
}

// The description of the Subscription.
func (o GetMscSubSubscriptionsSubscriptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) string { return v.Description }).(pulumi.StringOutput)
}

// The status of email subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
func (o GetMscSubSubscriptionsSubscriptionOutput) EmailStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) int { return v.EmailStatus }).(pulumi.IntOutput)
}

// The ID of the Subscription.
func (o GetMscSubSubscriptionsSubscriptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Subscription.
func (o GetMscSubSubscriptionsSubscriptionOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) string { return v.ItemId }).(pulumi.StringOutput)
}

// The name of the Subscription.
func (o GetMscSubSubscriptionsSubscriptionOutput) ItemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) string { return v.ItemName }).(pulumi.StringOutput)
}

// The status of pmsg subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
func (o GetMscSubSubscriptionsSubscriptionOutput) PmsgStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) int { return v.PmsgStatus }).(pulumi.IntOutput)
}

// The status of sms subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
func (o GetMscSubSubscriptionsSubscriptionOutput) SmsStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) int { return v.SmsStatus }).(pulumi.IntOutput)
}

// The status of tts subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
func (o GetMscSubSubscriptionsSubscriptionOutput) TtsStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) int { return v.TtsStatus }).(pulumi.IntOutput)
}

// The ids of subscribed webhooks.
func (o GetMscSubSubscriptionsSubscriptionOutput) WebhookIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) []int { return v.WebhookIds }).(pulumi.IntArrayOutput)
}

// The status of webhook subscription. Valid values: `-1`, `-2`, `0`, `1`. `-1` means required, `-2` means banned; `1` means subscribed; `0` means not subscribed.
func (o GetMscSubSubscriptionsSubscriptionOutput) WebhookStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMscSubSubscriptionsSubscription) int { return v.WebhookStatus }).(pulumi.IntOutput)
}

type GetMscSubSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetMscSubSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubSubscriptionsSubscription)(nil)).Elem()
}

func (o GetMscSubSubscriptionsSubscriptionArrayOutput) ToGetMscSubSubscriptionsSubscriptionArrayOutput() GetMscSubSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetMscSubSubscriptionsSubscriptionArrayOutput) ToGetMscSubSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetMscSubSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetMscSubSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetMscSubSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMscSubSubscriptionsSubscription {
		return vs[0].([]GetMscSubSubscriptionsSubscription)[vs[1].(int)]
	}).(GetMscSubSubscriptionsSubscriptionOutput)
}

type GetMscSubWebhooksWebhook struct {
	// The ID of the Webhook.
	Id string `pulumi:"id"`
	// The serverUrl of the Subscription.
	ServerUrl string `pulumi:"serverUrl"`
	// The first ID of the resource.
	WebhookId string `pulumi:"webhookId"`
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName string `pulumi:"webhookName"`
}

// GetMscSubWebhooksWebhookInput is an input type that accepts GetMscSubWebhooksWebhookArgs and GetMscSubWebhooksWebhookOutput values.
// You can construct a concrete instance of `GetMscSubWebhooksWebhookInput` via:
//
//	GetMscSubWebhooksWebhookArgs{...}
type GetMscSubWebhooksWebhookInput interface {
	pulumi.Input

	ToGetMscSubWebhooksWebhookOutput() GetMscSubWebhooksWebhookOutput
	ToGetMscSubWebhooksWebhookOutputWithContext(context.Context) GetMscSubWebhooksWebhookOutput
}

type GetMscSubWebhooksWebhookArgs struct {
	// The ID of the Webhook.
	Id pulumi.StringInput `pulumi:"id"`
	// The serverUrl of the Subscription.
	ServerUrl pulumi.StringInput `pulumi:"serverUrl"`
	// The first ID of the resource.
	WebhookId pulumi.StringInput `pulumi:"webhookId"`
	// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
	WebhookName pulumi.StringInput `pulumi:"webhookName"`
}

func (GetMscSubWebhooksWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubWebhooksWebhook)(nil)).Elem()
}

func (i GetMscSubWebhooksWebhookArgs) ToGetMscSubWebhooksWebhookOutput() GetMscSubWebhooksWebhookOutput {
	return i.ToGetMscSubWebhooksWebhookOutputWithContext(context.Background())
}

func (i GetMscSubWebhooksWebhookArgs) ToGetMscSubWebhooksWebhookOutputWithContext(ctx context.Context) GetMscSubWebhooksWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubWebhooksWebhookOutput)
}

// GetMscSubWebhooksWebhookArrayInput is an input type that accepts GetMscSubWebhooksWebhookArray and GetMscSubWebhooksWebhookArrayOutput values.
// You can construct a concrete instance of `GetMscSubWebhooksWebhookArrayInput` via:
//
//	GetMscSubWebhooksWebhookArray{ GetMscSubWebhooksWebhookArgs{...} }
type GetMscSubWebhooksWebhookArrayInput interface {
	pulumi.Input

	ToGetMscSubWebhooksWebhookArrayOutput() GetMscSubWebhooksWebhookArrayOutput
	ToGetMscSubWebhooksWebhookArrayOutputWithContext(context.Context) GetMscSubWebhooksWebhookArrayOutput
}

type GetMscSubWebhooksWebhookArray []GetMscSubWebhooksWebhookInput

func (GetMscSubWebhooksWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubWebhooksWebhook)(nil)).Elem()
}

func (i GetMscSubWebhooksWebhookArray) ToGetMscSubWebhooksWebhookArrayOutput() GetMscSubWebhooksWebhookArrayOutput {
	return i.ToGetMscSubWebhooksWebhookArrayOutputWithContext(context.Background())
}

func (i GetMscSubWebhooksWebhookArray) ToGetMscSubWebhooksWebhookArrayOutputWithContext(ctx context.Context) GetMscSubWebhooksWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMscSubWebhooksWebhookArrayOutput)
}

type GetMscSubWebhooksWebhookOutput struct{ *pulumi.OutputState }

func (GetMscSubWebhooksWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMscSubWebhooksWebhook)(nil)).Elem()
}

func (o GetMscSubWebhooksWebhookOutput) ToGetMscSubWebhooksWebhookOutput() GetMscSubWebhooksWebhookOutput {
	return o
}

func (o GetMscSubWebhooksWebhookOutput) ToGetMscSubWebhooksWebhookOutputWithContext(ctx context.Context) GetMscSubWebhooksWebhookOutput {
	return o
}

// The ID of the Webhook.
func (o GetMscSubWebhooksWebhookOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubWebhooksWebhook) string { return v.Id }).(pulumi.StringOutput)
}

// The serverUrl of the Subscription.
func (o GetMscSubWebhooksWebhookOutput) ServerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubWebhooksWebhook) string { return v.ServerUrl }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetMscSubWebhooksWebhookOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubWebhooksWebhook) string { return v.WebhookId }).(pulumi.StringOutput)
}

// The name of the Webhook. **Note:** The name must be `2` to `12` characters in length, and can contain uppercase and lowercase letters.
func (o GetMscSubWebhooksWebhookOutput) WebhookName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMscSubWebhooksWebhook) string { return v.WebhookName }).(pulumi.StringOutput)
}

type GetMscSubWebhooksWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetMscSubWebhooksWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMscSubWebhooksWebhook)(nil)).Elem()
}

func (o GetMscSubWebhooksWebhookArrayOutput) ToGetMscSubWebhooksWebhookArrayOutput() GetMscSubWebhooksWebhookArrayOutput {
	return o
}

func (o GetMscSubWebhooksWebhookArrayOutput) ToGetMscSubWebhooksWebhookArrayOutputWithContext(ctx context.Context) GetMscSubWebhooksWebhookArrayOutput {
	return o
}

func (o GetMscSubWebhooksWebhookArrayOutput) Index(i pulumi.IntInput) GetMscSubWebhooksWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMscSubWebhooksWebhook {
		return vs[0].([]GetMscSubWebhooksWebhook)[vs[1].(int)]
	}).(GetMscSubWebhooksWebhookOutput)
}

type GetRegionsRegion struct {
	// ID of the region.
	Id string `pulumi:"id"`
	// Name of the region in the local language.
	LocalName string `pulumi:"localName"`
	RegionId  string `pulumi:"regionId"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// ID of the region.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the region in the local language.
	LocalName pulumi.StringInput `pulumi:"localName"`
	RegionId  pulumi.StringInput `pulumi:"regionId"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// ID of the region.
func (o GetRegionsRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the region in the local language.
func (o GetRegionsRegionOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.LocalName }).(pulumi.StringOutput)
}

func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetZonesZone struct {
	// Set of supported disk categories.
	AvailableDiskCategories []string `pulumi:"availableDiskCategories"`
	// Allowed instance types.
	AvailableInstanceTypes []string `pulumi:"availableInstanceTypes"`
	// Filter the results by a specific resource type.
	// Valid values: `Instance`, `Disk`, `VSwitch`, `Rds`, `KVStore`, `FunctionCompute`, `Elasticsearch`, `Slb`.
	//
	// > **NOTE:** From version 1.134.0, the `availableResourceCreation` value "Rds" has been deprecated.
	// If you want to fetch the available zones for RDS instance, you can use datasource alicloud_db_zones
	AvailableResourceCreations []string `pulumi:"availableResourceCreations"`
	// ID of the zone.
	Id string `pulumi:"id"`
	// Name of the zone in the local language.
	LocalName string `pulumi:"localName"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds []string `pulumi:"multiZoneIds"`
	// A list of slb slave zone ids in which the slb master zone.
	SlbSlaveZoneIds []string `pulumi:"slbSlaveZoneIds"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// Set of supported disk categories.
	AvailableDiskCategories pulumi.StringArrayInput `pulumi:"availableDiskCategories"`
	// Allowed instance types.
	AvailableInstanceTypes pulumi.StringArrayInput `pulumi:"availableInstanceTypes"`
	// Filter the results by a specific resource type.
	// Valid values: `Instance`, `Disk`, `VSwitch`, `Rds`, `KVStore`, `FunctionCompute`, `Elasticsearch`, `Slb`.
	//
	// > **NOTE:** From version 1.134.0, the `availableResourceCreation` value "Rds" has been deprecated.
	// If you want to fetch the available zones for RDS instance, you can use datasource alicloud_db_zones
	AvailableResourceCreations pulumi.StringArrayInput `pulumi:"availableResourceCreations"`
	// ID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the zone in the local language.
	LocalName pulumi.StringInput `pulumi:"localName"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds pulumi.StringArrayInput `pulumi:"multiZoneIds"`
	// A list of slb slave zone ids in which the slb master zone.
	SlbSlaveZoneIds pulumi.StringArrayInput `pulumi:"slbSlaveZoneIds"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// Set of supported disk categories.
func (o GetZonesZoneOutput) AvailableDiskCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.AvailableDiskCategories }).(pulumi.StringArrayOutput)
}

// Allowed instance types.
func (o GetZonesZoneOutput) AvailableInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.AvailableInstanceTypes }).(pulumi.StringArrayOutput)
}

// Filter the results by a specific resource type.
// Valid values: `Instance`, `Disk`, `VSwitch`, `Rds`, `KVStore`, `FunctionCompute`, `Elasticsearch`, `Slb`.
//
// > **NOTE:** From version 1.134.0, the `availableResourceCreation` value "Rds" has been deprecated.
// If you want to fetch the available zones for RDS instance, you can use datasource alicloud_db_zones
func (o GetZonesZoneOutput) AvailableResourceCreations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.AvailableResourceCreations }).(pulumi.StringArrayOutput)
}

// ID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the zone in the local language.
func (o GetZonesZoneOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.LocalName }).(pulumi.StringOutput)
}

// A list of zone ids in which the multi zone.
func (o GetZonesZoneOutput) MultiZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.MultiZoneIds }).(pulumi.StringArrayOutput)
}

// A list of slb slave zone ids in which the slb master zone.
func (o GetZonesZoneOutput) SlbSlaveZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.SlbSlaveZoneIds }).(pulumi.StringArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointInput)(nil)).Elem(), ProviderEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointArrayInput)(nil)).Elem(), ProviderEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSignVersionInput)(nil)).Elem(), ProviderSignVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSignVersionPtrInput)(nil)).Elem(), ProviderSignVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubContactsContactInput)(nil)).Elem(), GetMscSubContactsContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubContactsContactArrayInput)(nil)).Elem(), GetMscSubContactsContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubSubscriptionsSubscriptionInput)(nil)).Elem(), GetMscSubSubscriptionsSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubSubscriptionsSubscriptionArrayInput)(nil)).Elem(), GetMscSubSubscriptionsSubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubWebhooksWebhookInput)(nil)).Elem(), GetMscSubWebhooksWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMscSubWebhooksWebhookArrayInput)(nil)).Elem(), GetMscSubWebhooksWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(ProviderEndpointOutput{})
	pulumi.RegisterOutputType(ProviderEndpointArrayOutput{})
	pulumi.RegisterOutputType(ProviderSignVersionOutput{})
	pulumi.RegisterOutputType(ProviderSignVersionPtrOutput{})
	pulumi.RegisterOutputType(GetMscSubContactsContactOutput{})
	pulumi.RegisterOutputType(GetMscSubContactsContactArrayOutput{})
	pulumi.RegisterOutputType(GetMscSubSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetMscSubSubscriptionsSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(GetMscSubWebhooksWebhookOutput{})
	pulumi.RegisterOutputType(GetMscSubWebhooksWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
