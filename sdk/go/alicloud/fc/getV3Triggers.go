// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
//
// > **NOTE:** Available since v1.250.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/fc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-exampleTriggerResourceAPI";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// functionName := "terraform-exampleTriggerResourceAPI";
// if param := cfg.Get("functionName"); param != ""{
// functionName = param
// }
// triggerName := "exampleTrigger_HTTP";
// if param := cfg.Get("triggerName"); param != ""{
// triggerName = param
// }
// function, err := fc.NewV3Function(ctx, "function", &fc.V3FunctionArgs{
// MemorySize: pulumi.Int(512),
// Cpu: pulumi.Float64(0.5),
// Handler: pulumi.String("index.Handler"),
// Code: &fc.V3FunctionCodeArgs{
// ZipFile: pulumi.String("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA="),
// },
// FunctionName: pulumi.String(name),
// Runtime: pulumi.String("python3.9"),
// DiskSize: pulumi.Int(512),
// LogConfig: &fc.V3FunctionLogConfigArgs{
// LogBeginRule: pulumi.String("None"),
// },
// })
// if err != nil {
// return err
// }
// tmpJSON0, err := json.Marshal(map[string]interface{}{
// "authType": "anonymous",
// "methods": []string{
// "GET",
// "POST",
// },
// })
// if err != nil {
// return err
// }
// json0 := string(tmpJSON0)
// defaultV3Trigger, err := fc.NewV3Trigger(ctx, "default", &fc.V3TriggerArgs{
// FunctionName: function.FunctionName,
// TriggerType: pulumi.String("http"),
// TriggerName: pulumi.String("tf-exampleacceu-central-1fcv3trigger28547"),
// Description: pulumi.String("create"),
// Qualifier: pulumi.String("LATEST"),
// TriggerConfig: pulumi.String(json0),
// })
// if err != nil {
// return err
// }
// _default := fc.GetV3TriggersOutput(ctx, fc.GetV3TriggersOutputArgs{
// Ids: pulumi.StringArray{
// defaultV3Trigger.ID(),
// },
// NameRegex: defaultV3Trigger.TriggerName,
// FunctionName: pulumi.String(functionName),
// }, nil);
// ctx.Export("alicloudFcv3TriggerExampleId", _default.ApplyT(func(_default fc.GetV3TriggersResult) (*string, error) {
// return &default.Triggers[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetV3Triggers(ctx *pulumi.Context, args *GetV3TriggersArgs, opts ...pulumi.InvokeOption) (*GetV3TriggersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetV3TriggersResult
	err := ctx.Invoke("alicloud:fc/getV3Triggers:getV3Triggers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getV3Triggers.
type GetV3TriggersArgs struct {
	// Function Name
	FunctionName string `pulumi:"functionName"`
	// A list of Trigger IDs. The value is formulated as `<function_name>:<trigger_name>`.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getV3Triggers.
type GetV3TriggersResult struct {
	FunctionName string `pulumi:"functionName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Trigger IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of name of Triggers.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Trigger Entries. Each element contains the following attributes:
	Triggers []GetV3TriggersTrigger `pulumi:"triggers"`
}

func GetV3TriggersOutput(ctx *pulumi.Context, args GetV3TriggersOutputArgs, opts ...pulumi.InvokeOption) GetV3TriggersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetV3TriggersResultOutput, error) {
			args := v.(GetV3TriggersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:fc/getV3Triggers:getV3Triggers", args, GetV3TriggersResultOutput{}, options).(GetV3TriggersResultOutput), nil
		}).(GetV3TriggersResultOutput)
}

// A collection of arguments for invoking getV3Triggers.
type GetV3TriggersOutputArgs struct {
	// Function Name
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// A list of Trigger IDs. The value is formulated as `<function_name>:<trigger_name>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Group Metric Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetV3TriggersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetV3TriggersArgs)(nil)).Elem()
}

// A collection of values returned by getV3Triggers.
type GetV3TriggersResultOutput struct{ *pulumi.OutputState }

func (GetV3TriggersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetV3TriggersResult)(nil)).Elem()
}

func (o GetV3TriggersResultOutput) ToGetV3TriggersResultOutput() GetV3TriggersResultOutput {
	return o
}

func (o GetV3TriggersResultOutput) ToGetV3TriggersResultOutputWithContext(ctx context.Context) GetV3TriggersResultOutput {
	return o
}

func (o GetV3TriggersResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetV3TriggersResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetV3TriggersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetV3TriggersResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Trigger IDs.
func (o GetV3TriggersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetV3TriggersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetV3TriggersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetV3TriggersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of name of Triggers.
func (o GetV3TriggersResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetV3TriggersResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetV3TriggersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetV3TriggersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Trigger Entries. Each element contains the following attributes:
func (o GetV3TriggersResultOutput) Triggers() GetV3TriggersTriggerArrayOutput {
	return o.ApplyT(func(v GetV3TriggersResult) []GetV3TriggersTrigger { return v.Triggers }).(GetV3TriggersTriggerArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetV3TriggersResultOutput{})
}
