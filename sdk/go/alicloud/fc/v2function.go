// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type V2Function struct {
	pulumi.CustomResourceState

	CaPort                  pulumi.IntOutput                           `pulumi:"caPort"`
	Code                    V2FunctionCodePtrOutput                    `pulumi:"code"`
	CodeChecksum            pulumi.StringOutput                        `pulumi:"codeChecksum"`
	Cpu                     pulumi.Float64PtrOutput                    `pulumi:"cpu"`
	CreateTime              pulumi.StringOutput                        `pulumi:"createTime"`
	CustomContainerConfig   V2FunctionCustomContainerConfigPtrOutput   `pulumi:"customContainerConfig"`
	CustomDns               V2FunctionCustomDnsPtrOutput               `pulumi:"customDns"`
	CustomHealthCheckConfig V2FunctionCustomHealthCheckConfigPtrOutput `pulumi:"customHealthCheckConfig"`
	CustomRuntimeConfig     V2FunctionCustomRuntimeConfigPtrOutput     `pulumi:"customRuntimeConfig"`
	Description             pulumi.StringPtrOutput                     `pulumi:"description"`
	DiskSize                pulumi.IntPtrOutput                        `pulumi:"diskSize"`
	EnvironmentVariables    pulumi.MapOutput                           `pulumi:"environmentVariables"`
	FunctionName            pulumi.StringOutput                        `pulumi:"functionName"`
	GpuMemorySize           pulumi.IntPtrOutput                        `pulumi:"gpuMemorySize"`
	Handler                 pulumi.StringOutput                        `pulumi:"handler"`
	InitializationTimeout   pulumi.IntOutput                           `pulumi:"initializationTimeout"`
	Initializer             pulumi.StringPtrOutput                     `pulumi:"initializer"`
	InstanceConcurrency     pulumi.IntOutput                           `pulumi:"instanceConcurrency"`
	InstanceLifecycleConfig V2FunctionInstanceLifecycleConfigPtrOutput `pulumi:"instanceLifecycleConfig"`
	InstanceType            pulumi.StringOutput                        `pulumi:"instanceType"`
	Layers                  pulumi.StringArrayOutput                   `pulumi:"layers"`
	MemorySize              pulumi.IntOutput                           `pulumi:"memorySize"`
	Runtime                 pulumi.StringOutput                        `pulumi:"runtime"`
	ServiceName             pulumi.StringOutput                        `pulumi:"serviceName"`
	Timeout                 pulumi.IntOutput                           `pulumi:"timeout"`
}

// NewV2Function registers a new resource with the given unique name, arguments, and options.
func NewV2Function(ctx *pulumi.Context,
	name string, args *V2FunctionArgs, opts ...pulumi.ResourceOption) (*V2Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	if args.Handler == nil {
		return nil, errors.New("invalid value for required argument 'Handler'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V2Function
	err := ctx.RegisterResource("alicloud:fc/v2Function:V2Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV2Function gets an existing V2Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV2Function(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V2FunctionState, opts ...pulumi.ResourceOption) (*V2Function, error) {
	var resource V2Function
	err := ctx.ReadResource("alicloud:fc/v2Function:V2Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V2Function resources.
type v2functionState struct {
	CaPort                  *int                               `pulumi:"caPort"`
	Code                    *V2FunctionCode                    `pulumi:"code"`
	CodeChecksum            *string                            `pulumi:"codeChecksum"`
	Cpu                     *float64                           `pulumi:"cpu"`
	CreateTime              *string                            `pulumi:"createTime"`
	CustomContainerConfig   *V2FunctionCustomContainerConfig   `pulumi:"customContainerConfig"`
	CustomDns               *V2FunctionCustomDns               `pulumi:"customDns"`
	CustomHealthCheckConfig *V2FunctionCustomHealthCheckConfig `pulumi:"customHealthCheckConfig"`
	CustomRuntimeConfig     *V2FunctionCustomRuntimeConfig     `pulumi:"customRuntimeConfig"`
	Description             *string                            `pulumi:"description"`
	DiskSize                *int                               `pulumi:"diskSize"`
	EnvironmentVariables    map[string]interface{}             `pulumi:"environmentVariables"`
	FunctionName            *string                            `pulumi:"functionName"`
	GpuMemorySize           *int                               `pulumi:"gpuMemorySize"`
	Handler                 *string                            `pulumi:"handler"`
	InitializationTimeout   *int                               `pulumi:"initializationTimeout"`
	Initializer             *string                            `pulumi:"initializer"`
	InstanceConcurrency     *int                               `pulumi:"instanceConcurrency"`
	InstanceLifecycleConfig *V2FunctionInstanceLifecycleConfig `pulumi:"instanceLifecycleConfig"`
	InstanceType            *string                            `pulumi:"instanceType"`
	Layers                  []string                           `pulumi:"layers"`
	MemorySize              *int                               `pulumi:"memorySize"`
	Runtime                 *string                            `pulumi:"runtime"`
	ServiceName             *string                            `pulumi:"serviceName"`
	Timeout                 *int                               `pulumi:"timeout"`
}

type V2FunctionState struct {
	CaPort                  pulumi.IntPtrInput
	Code                    V2FunctionCodePtrInput
	CodeChecksum            pulumi.StringPtrInput
	Cpu                     pulumi.Float64PtrInput
	CreateTime              pulumi.StringPtrInput
	CustomContainerConfig   V2FunctionCustomContainerConfigPtrInput
	CustomDns               V2FunctionCustomDnsPtrInput
	CustomHealthCheckConfig V2FunctionCustomHealthCheckConfigPtrInput
	CustomRuntimeConfig     V2FunctionCustomRuntimeConfigPtrInput
	Description             pulumi.StringPtrInput
	DiskSize                pulumi.IntPtrInput
	EnvironmentVariables    pulumi.MapInput
	FunctionName            pulumi.StringPtrInput
	GpuMemorySize           pulumi.IntPtrInput
	Handler                 pulumi.StringPtrInput
	InitializationTimeout   pulumi.IntPtrInput
	Initializer             pulumi.StringPtrInput
	InstanceConcurrency     pulumi.IntPtrInput
	InstanceLifecycleConfig V2FunctionInstanceLifecycleConfigPtrInput
	InstanceType            pulumi.StringPtrInput
	Layers                  pulumi.StringArrayInput
	MemorySize              pulumi.IntPtrInput
	Runtime                 pulumi.StringPtrInput
	ServiceName             pulumi.StringPtrInput
	Timeout                 pulumi.IntPtrInput
}

func (V2FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*v2functionState)(nil)).Elem()
}

type v2functionArgs struct {
	CaPort                  *int                               `pulumi:"caPort"`
	Code                    *V2FunctionCode                    `pulumi:"code"`
	CodeChecksum            *string                            `pulumi:"codeChecksum"`
	Cpu                     *float64                           `pulumi:"cpu"`
	CustomContainerConfig   *V2FunctionCustomContainerConfig   `pulumi:"customContainerConfig"`
	CustomDns               *V2FunctionCustomDns               `pulumi:"customDns"`
	CustomHealthCheckConfig *V2FunctionCustomHealthCheckConfig `pulumi:"customHealthCheckConfig"`
	CustomRuntimeConfig     *V2FunctionCustomRuntimeConfig     `pulumi:"customRuntimeConfig"`
	Description             *string                            `pulumi:"description"`
	DiskSize                *int                               `pulumi:"diskSize"`
	EnvironmentVariables    map[string]interface{}             `pulumi:"environmentVariables"`
	FunctionName            string                             `pulumi:"functionName"`
	GpuMemorySize           *int                               `pulumi:"gpuMemorySize"`
	Handler                 string                             `pulumi:"handler"`
	InitializationTimeout   *int                               `pulumi:"initializationTimeout"`
	Initializer             *string                            `pulumi:"initializer"`
	InstanceConcurrency     *int                               `pulumi:"instanceConcurrency"`
	InstanceLifecycleConfig *V2FunctionInstanceLifecycleConfig `pulumi:"instanceLifecycleConfig"`
	InstanceType            *string                            `pulumi:"instanceType"`
	Layers                  []string                           `pulumi:"layers"`
	MemorySize              *int                               `pulumi:"memorySize"`
	Runtime                 string                             `pulumi:"runtime"`
	ServiceName             string                             `pulumi:"serviceName"`
	Timeout                 *int                               `pulumi:"timeout"`
}

// The set of arguments for constructing a V2Function resource.
type V2FunctionArgs struct {
	CaPort                  pulumi.IntPtrInput
	Code                    V2FunctionCodePtrInput
	CodeChecksum            pulumi.StringPtrInput
	Cpu                     pulumi.Float64PtrInput
	CustomContainerConfig   V2FunctionCustomContainerConfigPtrInput
	CustomDns               V2FunctionCustomDnsPtrInput
	CustomHealthCheckConfig V2FunctionCustomHealthCheckConfigPtrInput
	CustomRuntimeConfig     V2FunctionCustomRuntimeConfigPtrInput
	Description             pulumi.StringPtrInput
	DiskSize                pulumi.IntPtrInput
	EnvironmentVariables    pulumi.MapInput
	FunctionName            pulumi.StringInput
	GpuMemorySize           pulumi.IntPtrInput
	Handler                 pulumi.StringInput
	InitializationTimeout   pulumi.IntPtrInput
	Initializer             pulumi.StringPtrInput
	InstanceConcurrency     pulumi.IntPtrInput
	InstanceLifecycleConfig V2FunctionInstanceLifecycleConfigPtrInput
	InstanceType            pulumi.StringPtrInput
	Layers                  pulumi.StringArrayInput
	MemorySize              pulumi.IntPtrInput
	Runtime                 pulumi.StringInput
	ServiceName             pulumi.StringInput
	Timeout                 pulumi.IntPtrInput
}

func (V2FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v2functionArgs)(nil)).Elem()
}

type V2FunctionInput interface {
	pulumi.Input

	ToV2FunctionOutput() V2FunctionOutput
	ToV2FunctionOutputWithContext(ctx context.Context) V2FunctionOutput
}

func (*V2Function) ElementType() reflect.Type {
	return reflect.TypeOf((**V2Function)(nil)).Elem()
}

func (i *V2Function) ToV2FunctionOutput() V2FunctionOutput {
	return i.ToV2FunctionOutputWithContext(context.Background())
}

func (i *V2Function) ToV2FunctionOutputWithContext(ctx context.Context) V2FunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FunctionOutput)
}

// V2FunctionArrayInput is an input type that accepts V2FunctionArray and V2FunctionArrayOutput values.
// You can construct a concrete instance of `V2FunctionArrayInput` via:
//
//	V2FunctionArray{ V2FunctionArgs{...} }
type V2FunctionArrayInput interface {
	pulumi.Input

	ToV2FunctionArrayOutput() V2FunctionArrayOutput
	ToV2FunctionArrayOutputWithContext(context.Context) V2FunctionArrayOutput
}

type V2FunctionArray []V2FunctionInput

func (V2FunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2Function)(nil)).Elem()
}

func (i V2FunctionArray) ToV2FunctionArrayOutput() V2FunctionArrayOutput {
	return i.ToV2FunctionArrayOutputWithContext(context.Background())
}

func (i V2FunctionArray) ToV2FunctionArrayOutputWithContext(ctx context.Context) V2FunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FunctionArrayOutput)
}

// V2FunctionMapInput is an input type that accepts V2FunctionMap and V2FunctionMapOutput values.
// You can construct a concrete instance of `V2FunctionMapInput` via:
//
//	V2FunctionMap{ "key": V2FunctionArgs{...} }
type V2FunctionMapInput interface {
	pulumi.Input

	ToV2FunctionMapOutput() V2FunctionMapOutput
	ToV2FunctionMapOutputWithContext(context.Context) V2FunctionMapOutput
}

type V2FunctionMap map[string]V2FunctionInput

func (V2FunctionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2Function)(nil)).Elem()
}

func (i V2FunctionMap) ToV2FunctionMapOutput() V2FunctionMapOutput {
	return i.ToV2FunctionMapOutputWithContext(context.Background())
}

func (i V2FunctionMap) ToV2FunctionMapOutputWithContext(ctx context.Context) V2FunctionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FunctionMapOutput)
}

type V2FunctionOutput struct{ *pulumi.OutputState }

func (V2FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2Function)(nil)).Elem()
}

func (o V2FunctionOutput) ToV2FunctionOutput() V2FunctionOutput {
	return o
}

func (o V2FunctionOutput) ToV2FunctionOutputWithContext(ctx context.Context) V2FunctionOutput {
	return o
}

func (o V2FunctionOutput) CaPort() pulumi.IntOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntOutput { return v.CaPort }).(pulumi.IntOutput)
}

func (o V2FunctionOutput) Code() V2FunctionCodePtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionCodePtrOutput { return v.Code }).(V2FunctionCodePtrOutput)
}

func (o V2FunctionOutput) CodeChecksum() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.CodeChecksum }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *V2Function) pulumi.Float64PtrOutput { return v.Cpu }).(pulumi.Float64PtrOutput)
}

func (o V2FunctionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) CustomContainerConfig() V2FunctionCustomContainerConfigPtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionCustomContainerConfigPtrOutput { return v.CustomContainerConfig }).(V2FunctionCustomContainerConfigPtrOutput)
}

func (o V2FunctionOutput) CustomDns() V2FunctionCustomDnsPtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionCustomDnsPtrOutput { return v.CustomDns }).(V2FunctionCustomDnsPtrOutput)
}

func (o V2FunctionOutput) CustomHealthCheckConfig() V2FunctionCustomHealthCheckConfigPtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionCustomHealthCheckConfigPtrOutput { return v.CustomHealthCheckConfig }).(V2FunctionCustomHealthCheckConfigPtrOutput)
}

func (o V2FunctionOutput) CustomRuntimeConfig() V2FunctionCustomRuntimeConfigPtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionCustomRuntimeConfigPtrOutput { return v.CustomRuntimeConfig }).(V2FunctionCustomRuntimeConfigPtrOutput)
}

func (o V2FunctionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o V2FunctionOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntPtrOutput { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o V2FunctionOutput) EnvironmentVariables() pulumi.MapOutput {
	return o.ApplyT(func(v *V2Function) pulumi.MapOutput { return v.EnvironmentVariables }).(pulumi.MapOutput)
}

func (o V2FunctionOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) GpuMemorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntPtrOutput { return v.GpuMemorySize }).(pulumi.IntPtrOutput)
}

func (o V2FunctionOutput) Handler() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.Handler }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) InitializationTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntOutput { return v.InitializationTimeout }).(pulumi.IntOutput)
}

func (o V2FunctionOutput) Initializer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringPtrOutput { return v.Initializer }).(pulumi.StringPtrOutput)
}

func (o V2FunctionOutput) InstanceConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntOutput { return v.InstanceConcurrency }).(pulumi.IntOutput)
}

func (o V2FunctionOutput) InstanceLifecycleConfig() V2FunctionInstanceLifecycleConfigPtrOutput {
	return o.ApplyT(func(v *V2Function) V2FunctionInstanceLifecycleConfigPtrOutput { return v.InstanceLifecycleConfig }).(V2FunctionInstanceLifecycleConfigPtrOutput)
}

func (o V2FunctionOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) Layers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringArrayOutput { return v.Layers }).(pulumi.StringArrayOutput)
}

func (o V2FunctionOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntOutput { return v.MemorySize }).(pulumi.IntOutput)
}

func (o V2FunctionOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *V2Function) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o V2FunctionOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *V2Function) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

type V2FunctionArrayOutput struct{ *pulumi.OutputState }

func (V2FunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2Function)(nil)).Elem()
}

func (o V2FunctionArrayOutput) ToV2FunctionArrayOutput() V2FunctionArrayOutput {
	return o
}

func (o V2FunctionArrayOutput) ToV2FunctionArrayOutputWithContext(ctx context.Context) V2FunctionArrayOutput {
	return o
}

func (o V2FunctionArrayOutput) Index(i pulumi.IntInput) V2FunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V2Function {
		return vs[0].([]*V2Function)[vs[1].(int)]
	}).(V2FunctionOutput)
}

type V2FunctionMapOutput struct{ *pulumi.OutputState }

func (V2FunctionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2Function)(nil)).Elem()
}

func (o V2FunctionMapOutput) ToV2FunctionMapOutput() V2FunctionMapOutput {
	return o
}

func (o V2FunctionMapOutput) ToV2FunctionMapOutputWithContext(ctx context.Context) V2FunctionMapOutput {
	return o
}

func (o V2FunctionMapOutput) MapIndex(k pulumi.StringInput) V2FunctionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V2Function {
		return vs[0].(map[string]*V2Function)[vs[1].(string)]
	}).(V2FunctionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2FunctionInput)(nil)).Elem(), &V2Function{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2FunctionArrayInput)(nil)).Elem(), V2FunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2FunctionMapInput)(nil)).Elem(), V2FunctionMap{})
	pulumi.RegisterOutputType(V2FunctionOutput{})
	pulumi.RegisterOutputType(V2FunctionArrayOutput{})
	pulumi.RegisterOutputType(V2FunctionMapOutput{})
}
