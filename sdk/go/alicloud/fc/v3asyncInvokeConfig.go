// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a FCV3 Async Invoke Config resource.
//
// Function Asynchronous Configuration.
//
// For information about FCV3 Async Invoke Config and how to use it, see [What is Async Invoke Config](https://www.alibabacloud.com/help/en/functioncompute/developer-reference/api-fc-2023-03-30-getasyncinvokeconfig).
//
// > **NOTE:** Available since v1.228.0.
//
// ## Import
//
// FCV3 Async Invoke Config can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig example <id>
// ```
type V3AsyncInvokeConfig struct {
	pulumi.CustomResourceState

	// Whether to enable an asynchronous task
	AsyncTask pulumi.BoolPtrOutput `pulumi:"asyncTask"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Target Configuration See `destinationConfig` below.
	DestinationConfig V3AsyncInvokeConfigDestinationConfigPtrOutput `pulumi:"destinationConfig"`
	// (Available since v1.234.0) Function resource identification
	FunctionArn pulumi.StringOutput `pulumi:"functionArn"`
	// Function Name
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// (Available since v1.234.0) Last modification time
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// Event maximum survival time
	MaxAsyncEventAgeInSeconds pulumi.IntPtrOutput `pulumi:"maxAsyncEventAgeInSeconds"`
	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts pulumi.IntPtrOutput `pulumi:"maxAsyncRetryAttempts"`
	// Function version or alias
	Qualifier pulumi.StringPtrOutput `pulumi:"qualifier"`
}

// NewV3AsyncInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewV3AsyncInvokeConfig(ctx *pulumi.Context,
	name string, args *V3AsyncInvokeConfigArgs, opts ...pulumi.ResourceOption) (*V3AsyncInvokeConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V3AsyncInvokeConfig
	err := ctx.RegisterResource("alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV3AsyncInvokeConfig gets an existing V3AsyncInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV3AsyncInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V3AsyncInvokeConfigState, opts ...pulumi.ResourceOption) (*V3AsyncInvokeConfig, error) {
	var resource V3AsyncInvokeConfig
	err := ctx.ReadResource("alicloud:fc/v3AsyncInvokeConfig:V3AsyncInvokeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V3AsyncInvokeConfig resources.
type v3asyncInvokeConfigState struct {
	// Whether to enable an asynchronous task
	AsyncTask *bool `pulumi:"asyncTask"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// Target Configuration See `destinationConfig` below.
	DestinationConfig *V3AsyncInvokeConfigDestinationConfig `pulumi:"destinationConfig"`
	// (Available since v1.234.0) Function resource identification
	FunctionArn *string `pulumi:"functionArn"`
	// Function Name
	FunctionName *string `pulumi:"functionName"`
	// (Available since v1.234.0) Last modification time
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Event maximum survival time
	MaxAsyncEventAgeInSeconds *int `pulumi:"maxAsyncEventAgeInSeconds"`
	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts *int `pulumi:"maxAsyncRetryAttempts"`
	// Function version or alias
	Qualifier *string `pulumi:"qualifier"`
}

type V3AsyncInvokeConfigState struct {
	// Whether to enable an asynchronous task
	AsyncTask pulumi.BoolPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// Target Configuration See `destinationConfig` below.
	DestinationConfig V3AsyncInvokeConfigDestinationConfigPtrInput
	// (Available since v1.234.0) Function resource identification
	FunctionArn pulumi.StringPtrInput
	// Function Name
	FunctionName pulumi.StringPtrInput
	// (Available since v1.234.0) Last modification time
	LastModifiedTime pulumi.StringPtrInput
	// Event maximum survival time
	MaxAsyncEventAgeInSeconds pulumi.IntPtrInput
	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts pulumi.IntPtrInput
	// Function version or alias
	Qualifier pulumi.StringPtrInput
}

func (V3AsyncInvokeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*v3asyncInvokeConfigState)(nil)).Elem()
}

type v3asyncInvokeConfigArgs struct {
	// Whether to enable an asynchronous task
	AsyncTask *bool `pulumi:"asyncTask"`
	// Target Configuration See `destinationConfig` below.
	DestinationConfig *V3AsyncInvokeConfigDestinationConfig `pulumi:"destinationConfig"`
	// Function Name
	FunctionName string `pulumi:"functionName"`
	// Event maximum survival time
	MaxAsyncEventAgeInSeconds *int `pulumi:"maxAsyncEventAgeInSeconds"`
	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts *int `pulumi:"maxAsyncRetryAttempts"`
	// Function version or alias
	Qualifier *string `pulumi:"qualifier"`
}

// The set of arguments for constructing a V3AsyncInvokeConfig resource.
type V3AsyncInvokeConfigArgs struct {
	// Whether to enable an asynchronous task
	AsyncTask pulumi.BoolPtrInput
	// Target Configuration See `destinationConfig` below.
	DestinationConfig V3AsyncInvokeConfigDestinationConfigPtrInput
	// Function Name
	FunctionName pulumi.StringInput
	// Event maximum survival time
	MaxAsyncEventAgeInSeconds pulumi.IntPtrInput
	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts pulumi.IntPtrInput
	// Function version or alias
	Qualifier pulumi.StringPtrInput
}

func (V3AsyncInvokeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v3asyncInvokeConfigArgs)(nil)).Elem()
}

type V3AsyncInvokeConfigInput interface {
	pulumi.Input

	ToV3AsyncInvokeConfigOutput() V3AsyncInvokeConfigOutput
	ToV3AsyncInvokeConfigOutputWithContext(ctx context.Context) V3AsyncInvokeConfigOutput
}

func (*V3AsyncInvokeConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**V3AsyncInvokeConfig)(nil)).Elem()
}

func (i *V3AsyncInvokeConfig) ToV3AsyncInvokeConfigOutput() V3AsyncInvokeConfigOutput {
	return i.ToV3AsyncInvokeConfigOutputWithContext(context.Background())
}

func (i *V3AsyncInvokeConfig) ToV3AsyncInvokeConfigOutputWithContext(ctx context.Context) V3AsyncInvokeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V3AsyncInvokeConfigOutput)
}

// V3AsyncInvokeConfigArrayInput is an input type that accepts V3AsyncInvokeConfigArray and V3AsyncInvokeConfigArrayOutput values.
// You can construct a concrete instance of `V3AsyncInvokeConfigArrayInput` via:
//
//	V3AsyncInvokeConfigArray{ V3AsyncInvokeConfigArgs{...} }
type V3AsyncInvokeConfigArrayInput interface {
	pulumi.Input

	ToV3AsyncInvokeConfigArrayOutput() V3AsyncInvokeConfigArrayOutput
	ToV3AsyncInvokeConfigArrayOutputWithContext(context.Context) V3AsyncInvokeConfigArrayOutput
}

type V3AsyncInvokeConfigArray []V3AsyncInvokeConfigInput

func (V3AsyncInvokeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V3AsyncInvokeConfig)(nil)).Elem()
}

func (i V3AsyncInvokeConfigArray) ToV3AsyncInvokeConfigArrayOutput() V3AsyncInvokeConfigArrayOutput {
	return i.ToV3AsyncInvokeConfigArrayOutputWithContext(context.Background())
}

func (i V3AsyncInvokeConfigArray) ToV3AsyncInvokeConfigArrayOutputWithContext(ctx context.Context) V3AsyncInvokeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V3AsyncInvokeConfigArrayOutput)
}

// V3AsyncInvokeConfigMapInput is an input type that accepts V3AsyncInvokeConfigMap and V3AsyncInvokeConfigMapOutput values.
// You can construct a concrete instance of `V3AsyncInvokeConfigMapInput` via:
//
//	V3AsyncInvokeConfigMap{ "key": V3AsyncInvokeConfigArgs{...} }
type V3AsyncInvokeConfigMapInput interface {
	pulumi.Input

	ToV3AsyncInvokeConfigMapOutput() V3AsyncInvokeConfigMapOutput
	ToV3AsyncInvokeConfigMapOutputWithContext(context.Context) V3AsyncInvokeConfigMapOutput
}

type V3AsyncInvokeConfigMap map[string]V3AsyncInvokeConfigInput

func (V3AsyncInvokeConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V3AsyncInvokeConfig)(nil)).Elem()
}

func (i V3AsyncInvokeConfigMap) ToV3AsyncInvokeConfigMapOutput() V3AsyncInvokeConfigMapOutput {
	return i.ToV3AsyncInvokeConfigMapOutputWithContext(context.Background())
}

func (i V3AsyncInvokeConfigMap) ToV3AsyncInvokeConfigMapOutputWithContext(ctx context.Context) V3AsyncInvokeConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V3AsyncInvokeConfigMapOutput)
}

type V3AsyncInvokeConfigOutput struct{ *pulumi.OutputState }

func (V3AsyncInvokeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V3AsyncInvokeConfig)(nil)).Elem()
}

func (o V3AsyncInvokeConfigOutput) ToV3AsyncInvokeConfigOutput() V3AsyncInvokeConfigOutput {
	return o
}

func (o V3AsyncInvokeConfigOutput) ToV3AsyncInvokeConfigOutputWithContext(ctx context.Context) V3AsyncInvokeConfigOutput {
	return o
}

// Whether to enable an asynchronous task
func (o V3AsyncInvokeConfigOutput) AsyncTask() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.BoolPtrOutput { return v.AsyncTask }).(pulumi.BoolPtrOutput)
}

// The creation time of the resource
func (o V3AsyncInvokeConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Target Configuration See `destinationConfig` below.
func (o V3AsyncInvokeConfigOutput) DestinationConfig() V3AsyncInvokeConfigDestinationConfigPtrOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) V3AsyncInvokeConfigDestinationConfigPtrOutput { return v.DestinationConfig }).(V3AsyncInvokeConfigDestinationConfigPtrOutput)
}

// (Available since v1.234.0) Function resource identification
func (o V3AsyncInvokeConfigOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.StringOutput { return v.FunctionArn }).(pulumi.StringOutput)
}

// Function Name
func (o V3AsyncInvokeConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// (Available since v1.234.0) Last modification time
func (o V3AsyncInvokeConfigOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Event maximum survival time
func (o V3AsyncInvokeConfigOutput) MaxAsyncEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.IntPtrOutput { return v.MaxAsyncEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

// Number of Asynchronous call retries
func (o V3AsyncInvokeConfigOutput) MaxAsyncRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.IntPtrOutput { return v.MaxAsyncRetryAttempts }).(pulumi.IntPtrOutput)
}

// Function version or alias
func (o V3AsyncInvokeConfigOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V3AsyncInvokeConfig) pulumi.StringPtrOutput { return v.Qualifier }).(pulumi.StringPtrOutput)
}

type V3AsyncInvokeConfigArrayOutput struct{ *pulumi.OutputState }

func (V3AsyncInvokeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V3AsyncInvokeConfig)(nil)).Elem()
}

func (o V3AsyncInvokeConfigArrayOutput) ToV3AsyncInvokeConfigArrayOutput() V3AsyncInvokeConfigArrayOutput {
	return o
}

func (o V3AsyncInvokeConfigArrayOutput) ToV3AsyncInvokeConfigArrayOutputWithContext(ctx context.Context) V3AsyncInvokeConfigArrayOutput {
	return o
}

func (o V3AsyncInvokeConfigArrayOutput) Index(i pulumi.IntInput) V3AsyncInvokeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V3AsyncInvokeConfig {
		return vs[0].([]*V3AsyncInvokeConfig)[vs[1].(int)]
	}).(V3AsyncInvokeConfigOutput)
}

type V3AsyncInvokeConfigMapOutput struct{ *pulumi.OutputState }

func (V3AsyncInvokeConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V3AsyncInvokeConfig)(nil)).Elem()
}

func (o V3AsyncInvokeConfigMapOutput) ToV3AsyncInvokeConfigMapOutput() V3AsyncInvokeConfigMapOutput {
	return o
}

func (o V3AsyncInvokeConfigMapOutput) ToV3AsyncInvokeConfigMapOutputWithContext(ctx context.Context) V3AsyncInvokeConfigMapOutput {
	return o
}

func (o V3AsyncInvokeConfigMapOutput) MapIndex(k pulumi.StringInput) V3AsyncInvokeConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V3AsyncInvokeConfig {
		return vs[0].(map[string]*V3AsyncInvokeConfig)[vs[1].(string)]
	}).(V3AsyncInvokeConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V3AsyncInvokeConfigInput)(nil)).Elem(), &V3AsyncInvokeConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*V3AsyncInvokeConfigArrayInput)(nil)).Elem(), V3AsyncInvokeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V3AsyncInvokeConfigMapInput)(nil)).Elem(), V3AsyncInvokeConfigMap{})
	pulumi.RegisterOutputType(V3AsyncInvokeConfigOutput{})
	pulumi.RegisterOutputType(V3AsyncInvokeConfigArrayOutput{})
	pulumi.RegisterOutputType(V3AsyncInvokeConfigMapOutput{})
}
