// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package adb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Adb DBClusters of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.121.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/adb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := adb.GetDBClusters(ctx, &adb.GetDBClustersArgs{
//				DescriptionRegex: pulumi.StringRef("example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("firstAdbDbClusterId", example.Clusters[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetDBClusters(ctx *pulumi.Context, args *GetDBClustersArgs, opts ...pulumi.InvokeOption) (*GetDBClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDBClustersResult
	err := ctx.Invoke("alicloud:adb/getDBClusters:getDBClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDBClusters.
type GetDBClustersArgs struct {
	// The description of DBCluster.
	Description *string `pulumi:"description"`
	// A regex string to filter results by DBCluster description.
	DescriptionRegex *string `pulumi:"descriptionRegex"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of DBCluster IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// A map of tags assigned to the cluster.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getDBClusters.
type GetDBClustersResult struct {
	// A list of Adb Db Clusters. Each element contains the following attributes:
	Clusters []GetDBClustersCluster `pulumi:"clusters"`
	// The description of DBCluster.
	Description      *string `pulumi:"description"`
	DescriptionRegex *string `pulumi:"descriptionRegex"`
	// A list of DBCluster descriptions.
	Descriptions  []string `pulumi:"descriptions"`
	EnableDetails *bool    `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	PageNumber *int     `pulumi:"pageNumber"`
	PageSize   *int     `pulumi:"pageSize"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags       map[string]interface{} `pulumi:"tags"`
	TotalCount int                    `pulumi:"totalCount"`
}

func GetDBClustersOutput(ctx *pulumi.Context, args GetDBClustersOutputArgs, opts ...pulumi.InvokeOption) GetDBClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDBClustersResult, error) {
			args := v.(GetDBClustersArgs)
			r, err := GetDBClusters(ctx, &args, opts...)
			var s GetDBClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDBClustersResultOutput)
}

// A collection of arguments for invoking getDBClusters.
type GetDBClustersOutputArgs struct {
	// The description of DBCluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A regex string to filter results by DBCluster description.
	DescriptionRegex pulumi.StringPtrInput `pulumi:"descriptionRegex"`
	// Default to `false`. Set it to `true` can output more details about resource attributes.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of DBCluster IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A map of tags assigned to the cluster.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetDBClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDBClustersArgs)(nil)).Elem()
}

// A collection of values returned by getDBClusters.
type GetDBClustersResultOutput struct{ *pulumi.OutputState }

func (GetDBClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDBClustersResult)(nil)).Elem()
}

func (o GetDBClustersResultOutput) ToGetDBClustersResultOutput() GetDBClustersResultOutput {
	return o
}

func (o GetDBClustersResultOutput) ToGetDBClustersResultOutputWithContext(ctx context.Context) GetDBClustersResultOutput {
	return o
}

func (o GetDBClustersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDBClustersResult] {
	return pulumix.Output[GetDBClustersResult]{
		OutputState: o.OutputState,
	}
}

// A list of Adb Db Clusters. Each element contains the following attributes:
func (o GetDBClustersResultOutput) Clusters() GetDBClustersClusterArrayOutput {
	return o.ApplyT(func(v GetDBClustersResult) []GetDBClustersCluster { return v.Clusters }).(GetDBClustersClusterArrayOutput)
}

// The description of DBCluster.
func (o GetDBClustersResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetDBClustersResultOutput) DescriptionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *string { return v.DescriptionRegex }).(pulumi.StringPtrOutput)
}

// A list of DBCluster descriptions.
func (o GetDBClustersResultOutput) Descriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDBClustersResult) []string { return v.Descriptions }).(pulumi.StringArrayOutput)
}

func (o GetDBClustersResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDBClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDBClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDBClustersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDBClustersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetDBClustersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDBClustersResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetDBClustersResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The ID of the resource group.
func (o GetDBClustersResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o GetDBClustersResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDBClustersResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o GetDBClustersResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDBClustersResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetDBClustersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDBClustersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDBClustersResultOutput{})
}
