// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Firewall Vpc Firewall resource.
//
// For information about Cloud Firewall Vpc Firewall and how to use it, see [What is Vpc Firewall](https://help.aliyun.com/document_detail/342893.html).
//
// > **NOTE:** Available in v1.194.0+.
//
// ## Import
//
// Cloud Firewall Vpc Firewall can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:cloudfirewall/firewallVpcFirewall:FirewallVpcFirewall example <id>
//
// ```
type FirewallVpcFirewall struct {
	pulumi.CustomResourceState

	// Bandwidth specifications for high-speed channels. Unit: Mbps.
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// The communication type of the VPC firewall. Valid value: **expressconnect**, which indicates Express Connect.
	ConnectType pulumi.StringOutput `pulumi:"connectType"`
	// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
	Lang pulumi.StringOutput `pulumi:"lang"`
	// The details of the local VPC. See the following `Block LocalVpc`.
	LocalVpc FirewallVpcFirewallLocalVpcOutput `pulumi:"localVpc"`
	// The UID of the Alibaba Cloud member account.
	MemberUid pulumi.StringPtrOutput `pulumi:"memberUid"`
	// The details of the peer VPC. See the following `Block PeerVpc`.
	PeerVpc FirewallVpcFirewallPeerVpcOutput `pulumi:"peerVpc"`
	// The region is open. Value:-**enable**: is enabled, indicating that VPC firewall can be configured in this region.-**disable**: indicates that VPC firewall cannot be configured in this region.
	RegionStatus pulumi.StringOutput `pulumi:"regionStatus"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the VPC firewall instance.
	VpcFirewallId pulumi.StringOutput `pulumi:"vpcFirewallId"`
	// The name of the VPC firewall instance.
	VpcFirewallName pulumi.StringOutput `pulumi:"vpcFirewallName"`
}

// NewFirewallVpcFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewallVpcFirewall(ctx *pulumi.Context,
	name string, args *FirewallVpcFirewallArgs, opts ...pulumi.ResourceOption) (*FirewallVpcFirewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocalVpc == nil {
		return nil, errors.New("invalid value for required argument 'LocalVpc'")
	}
	if args.PeerVpc == nil {
		return nil, errors.New("invalid value for required argument 'PeerVpc'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.VpcFirewallName == nil {
		return nil, errors.New("invalid value for required argument 'VpcFirewallName'")
	}
	var resource FirewallVpcFirewall
	err := ctx.RegisterResource("alicloud:cloudfirewall/firewallVpcFirewall:FirewallVpcFirewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallVpcFirewall gets an existing FirewallVpcFirewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallVpcFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallVpcFirewallState, opts ...pulumi.ResourceOption) (*FirewallVpcFirewall, error) {
	var resource FirewallVpcFirewall
	err := ctx.ReadResource("alicloud:cloudfirewall/firewallVpcFirewall:FirewallVpcFirewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallVpcFirewall resources.
type firewallVpcFirewallState struct {
	// Bandwidth specifications for high-speed channels. Unit: Mbps.
	Bandwidth *int `pulumi:"bandwidth"`
	// The communication type of the VPC firewall. Valid value: **expressconnect**, which indicates Express Connect.
	ConnectType *string `pulumi:"connectType"`
	// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
	Lang *string `pulumi:"lang"`
	// The details of the local VPC. See the following `Block LocalVpc`.
	LocalVpc *FirewallVpcFirewallLocalVpc `pulumi:"localVpc"`
	// The UID of the Alibaba Cloud member account.
	MemberUid *string `pulumi:"memberUid"`
	// The details of the peer VPC. See the following `Block PeerVpc`.
	PeerVpc *FirewallVpcFirewallPeerVpc `pulumi:"peerVpc"`
	// The region is open. Value:-**enable**: is enabled, indicating that VPC firewall can be configured in this region.-**disable**: indicates that VPC firewall cannot be configured in this region.
	RegionStatus *string `pulumi:"regionStatus"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The ID of the VPC firewall instance.
	VpcFirewallId *string `pulumi:"vpcFirewallId"`
	// The name of the VPC firewall instance.
	VpcFirewallName *string `pulumi:"vpcFirewallName"`
}

type FirewallVpcFirewallState struct {
	// Bandwidth specifications for high-speed channels. Unit: Mbps.
	Bandwidth pulumi.IntPtrInput
	// The communication type of the VPC firewall. Valid value: **expressconnect**, which indicates Express Connect.
	ConnectType pulumi.StringPtrInput
	// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
	Lang pulumi.StringPtrInput
	// The details of the local VPC. See the following `Block LocalVpc`.
	LocalVpc FirewallVpcFirewallLocalVpcPtrInput
	// The UID of the Alibaba Cloud member account.
	MemberUid pulumi.StringPtrInput
	// The details of the peer VPC. See the following `Block PeerVpc`.
	PeerVpc FirewallVpcFirewallPeerVpcPtrInput
	// The region is open. Value:-**enable**: is enabled, indicating that VPC firewall can be configured in this region.-**disable**: indicates that VPC firewall cannot be configured in this region.
	RegionStatus pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The ID of the VPC firewall instance.
	VpcFirewallId pulumi.StringPtrInput
	// The name of the VPC firewall instance.
	VpcFirewallName pulumi.StringPtrInput
}

func (FirewallVpcFirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVpcFirewallState)(nil)).Elem()
}

type firewallVpcFirewallArgs struct {
	// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
	Lang *string `pulumi:"lang"`
	// The details of the local VPC. See the following `Block LocalVpc`.
	LocalVpc FirewallVpcFirewallLocalVpc `pulumi:"localVpc"`
	// The UID of the Alibaba Cloud member account.
	MemberUid *string `pulumi:"memberUid"`
	// The details of the peer VPC. See the following `Block PeerVpc`.
	PeerVpc FirewallVpcFirewallPeerVpc `pulumi:"peerVpc"`
	// The status of the resource
	Status string `pulumi:"status"`
	// The name of the VPC firewall instance.
	VpcFirewallName string `pulumi:"vpcFirewallName"`
}

// The set of arguments for constructing a FirewallVpcFirewall resource.
type FirewallVpcFirewallArgs struct {
	// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
	Lang pulumi.StringPtrInput
	// The details of the local VPC. See the following `Block LocalVpc`.
	LocalVpc FirewallVpcFirewallLocalVpcInput
	// The UID of the Alibaba Cloud member account.
	MemberUid pulumi.StringPtrInput
	// The details of the peer VPC. See the following `Block PeerVpc`.
	PeerVpc FirewallVpcFirewallPeerVpcInput
	// The status of the resource
	Status pulumi.StringInput
	// The name of the VPC firewall instance.
	VpcFirewallName pulumi.StringInput
}

func (FirewallVpcFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallVpcFirewallArgs)(nil)).Elem()
}

type FirewallVpcFirewallInput interface {
	pulumi.Input

	ToFirewallVpcFirewallOutput() FirewallVpcFirewallOutput
	ToFirewallVpcFirewallOutputWithContext(ctx context.Context) FirewallVpcFirewallOutput
}

func (*FirewallVpcFirewall) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVpcFirewall)(nil)).Elem()
}

func (i *FirewallVpcFirewall) ToFirewallVpcFirewallOutput() FirewallVpcFirewallOutput {
	return i.ToFirewallVpcFirewallOutputWithContext(context.Background())
}

func (i *FirewallVpcFirewall) ToFirewallVpcFirewallOutputWithContext(ctx context.Context) FirewallVpcFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVpcFirewallOutput)
}

// FirewallVpcFirewallArrayInput is an input type that accepts FirewallVpcFirewallArray and FirewallVpcFirewallArrayOutput values.
// You can construct a concrete instance of `FirewallVpcFirewallArrayInput` via:
//
//	FirewallVpcFirewallArray{ FirewallVpcFirewallArgs{...} }
type FirewallVpcFirewallArrayInput interface {
	pulumi.Input

	ToFirewallVpcFirewallArrayOutput() FirewallVpcFirewallArrayOutput
	ToFirewallVpcFirewallArrayOutputWithContext(context.Context) FirewallVpcFirewallArrayOutput
}

type FirewallVpcFirewallArray []FirewallVpcFirewallInput

func (FirewallVpcFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVpcFirewall)(nil)).Elem()
}

func (i FirewallVpcFirewallArray) ToFirewallVpcFirewallArrayOutput() FirewallVpcFirewallArrayOutput {
	return i.ToFirewallVpcFirewallArrayOutputWithContext(context.Background())
}

func (i FirewallVpcFirewallArray) ToFirewallVpcFirewallArrayOutputWithContext(ctx context.Context) FirewallVpcFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVpcFirewallArrayOutput)
}

// FirewallVpcFirewallMapInput is an input type that accepts FirewallVpcFirewallMap and FirewallVpcFirewallMapOutput values.
// You can construct a concrete instance of `FirewallVpcFirewallMapInput` via:
//
//	FirewallVpcFirewallMap{ "key": FirewallVpcFirewallArgs{...} }
type FirewallVpcFirewallMapInput interface {
	pulumi.Input

	ToFirewallVpcFirewallMapOutput() FirewallVpcFirewallMapOutput
	ToFirewallVpcFirewallMapOutputWithContext(context.Context) FirewallVpcFirewallMapOutput
}

type FirewallVpcFirewallMap map[string]FirewallVpcFirewallInput

func (FirewallVpcFirewallMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVpcFirewall)(nil)).Elem()
}

func (i FirewallVpcFirewallMap) ToFirewallVpcFirewallMapOutput() FirewallVpcFirewallMapOutput {
	return i.ToFirewallVpcFirewallMapOutputWithContext(context.Background())
}

func (i FirewallVpcFirewallMap) ToFirewallVpcFirewallMapOutputWithContext(ctx context.Context) FirewallVpcFirewallMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVpcFirewallMapOutput)
}

type FirewallVpcFirewallOutput struct{ *pulumi.OutputState }

func (FirewallVpcFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVpcFirewall)(nil)).Elem()
}

func (o FirewallVpcFirewallOutput) ToFirewallVpcFirewallOutput() FirewallVpcFirewallOutput {
	return o
}

func (o FirewallVpcFirewallOutput) ToFirewallVpcFirewallOutputWithContext(ctx context.Context) FirewallVpcFirewallOutput {
	return o
}

// Bandwidth specifications for high-speed channels. Unit: Mbps.
func (o FirewallVpcFirewallOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// The communication type of the VPC firewall. Valid value: **expressconnect**, which indicates Express Connect.
func (o FirewallVpcFirewallOutput) ConnectType() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.ConnectType }).(pulumi.StringOutput)
}

// The language type of the requested and received messages. Value:**zh** (default): Chinese.**en**: English.
func (o FirewallVpcFirewallOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.Lang }).(pulumi.StringOutput)
}

// The details of the local VPC. See the following `Block LocalVpc`.
func (o FirewallVpcFirewallOutput) LocalVpc() FirewallVpcFirewallLocalVpcOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) FirewallVpcFirewallLocalVpcOutput { return v.LocalVpc }).(FirewallVpcFirewallLocalVpcOutput)
}

// The UID of the Alibaba Cloud member account.
func (o FirewallVpcFirewallOutput) MemberUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringPtrOutput { return v.MemberUid }).(pulumi.StringPtrOutput)
}

// The details of the peer VPC. See the following `Block PeerVpc`.
func (o FirewallVpcFirewallOutput) PeerVpc() FirewallVpcFirewallPeerVpcOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) FirewallVpcFirewallPeerVpcOutput { return v.PeerVpc }).(FirewallVpcFirewallPeerVpcOutput)
}

// The region is open. Value:-**enable**: is enabled, indicating that VPC firewall can be configured in this region.-**disable**: indicates that VPC firewall cannot be configured in this region.
func (o FirewallVpcFirewallOutput) RegionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.RegionStatus }).(pulumi.StringOutput)
}

// The status of the resource
func (o FirewallVpcFirewallOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC firewall instance.
func (o FirewallVpcFirewallOutput) VpcFirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.VpcFirewallId }).(pulumi.StringOutput)
}

// The name of the VPC firewall instance.
func (o FirewallVpcFirewallOutput) VpcFirewallName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallVpcFirewall) pulumi.StringOutput { return v.VpcFirewallName }).(pulumi.StringOutput)
}

type FirewallVpcFirewallArrayOutput struct{ *pulumi.OutputState }

func (FirewallVpcFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallVpcFirewall)(nil)).Elem()
}

func (o FirewallVpcFirewallArrayOutput) ToFirewallVpcFirewallArrayOutput() FirewallVpcFirewallArrayOutput {
	return o
}

func (o FirewallVpcFirewallArrayOutput) ToFirewallVpcFirewallArrayOutputWithContext(ctx context.Context) FirewallVpcFirewallArrayOutput {
	return o
}

func (o FirewallVpcFirewallArrayOutput) Index(i pulumi.IntInput) FirewallVpcFirewallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallVpcFirewall {
		return vs[0].([]*FirewallVpcFirewall)[vs[1].(int)]
	}).(FirewallVpcFirewallOutput)
}

type FirewallVpcFirewallMapOutput struct{ *pulumi.OutputState }

func (FirewallVpcFirewallMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallVpcFirewall)(nil)).Elem()
}

func (o FirewallVpcFirewallMapOutput) ToFirewallVpcFirewallMapOutput() FirewallVpcFirewallMapOutput {
	return o
}

func (o FirewallVpcFirewallMapOutput) ToFirewallVpcFirewallMapOutputWithContext(ctx context.Context) FirewallVpcFirewallMapOutput {
	return o
}

func (o FirewallVpcFirewallMapOutput) MapIndex(k pulumi.StringInput) FirewallVpcFirewallOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallVpcFirewall {
		return vs[0].(map[string]*FirewallVpcFirewall)[vs[1].(string)]
	}).(FirewallVpcFirewallOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVpcFirewallInput)(nil)).Elem(), &FirewallVpcFirewall{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVpcFirewallArrayInput)(nil)).Elem(), FirewallVpcFirewallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVpcFirewallMapInput)(nil)).Elem(), FirewallVpcFirewallMap{})
	pulumi.RegisterOutputType(FirewallVpcFirewallOutput{})
	pulumi.RegisterOutputType(FirewallVpcFirewallArrayOutput{})
	pulumi.RegisterOutputType(FirewallVpcFirewallMapOutput{})
}
