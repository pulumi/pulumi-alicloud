// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Firewall Control Policy resource.
//
// For information about Cloud Firewall Control Policy and how to use it, see [What is Control Policy](https://www.alibabacloud.com/help/doc-detail/138867.htm).
//
// > **NOTE:** Available since v1.129.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := cloudfirewall.NewControlPolicy(ctx, "default", &cloudfirewall.ControlPolicyArgs{
//				Direction:       pulumi.String("in"),
//				ApplicationName: pulumi.String("ANY"),
//				Description:     pulumi.String(name),
//				AclAction:       pulumi.String("accept"),
//				Source:          pulumi.String("127.0.0.1/32"),
//				SourceType:      pulumi.String("net"),
//				Destination:     pulumi.String("127.0.0.2/32"),
//				DestinationType: pulumi.String("net"),
//				Proto:           pulumi.String("ANY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Firewall Control Policy can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudfirewall/controlPolicy:ControlPolicy example <acl_uuid>:<direction>
// ```
type ControlPolicy struct {
	pulumi.CustomResourceState

	// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
	AclAction pulumi.StringOutput `pulumi:"aclAction"`
	// (Available since v1.148.0) The unique ID of the access control policy.
	AclUuid pulumi.StringOutput `pulumi:"aclUuid"`
	// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
	ApplicationName pulumi.StringPtrOutput `pulumi:"applicationName"`
	// The application types supported by the access control policy.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
	ApplicationNameLists pulumi.StringArrayOutput `pulumi:"applicationNameLists"`
	// (Available since v1.232.0) The time when the access control policy was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the access control policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
	DestPort pulumi.StringOutput `pulumi:"destPort"`
	// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
	DestPortGroup pulumi.StringPtrOutput `pulumi:"destPortGroup"`
	// The type of the destination port in the access control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringOutput `pulumi:"destPortType"`
	// The destination address in the access control policy.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
	DestinationType pulumi.StringOutput `pulumi:"destinationType"`
	// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// The domain name resolution method of the access control policy. Valid values:
	// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
	// - `DNS`: DNS-based dynamic resolution.
	// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
	DomainResolveType pulumi.StringPtrOutput `pulumi:"domainResolveType"`
	// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
	EndTime pulumi.IntPtrOutput `pulumi:"endTime"`
	// The IP version supported by the access control policy. Default value: `4`. Valid values:
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// The language of the content within the request and response. Valid values: `zh`, `en`.
	Lang pulumi.StringPtrOutput `pulumi:"lang"`
	// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
	Proto pulumi.StringOutput `pulumi:"proto"`
	// The status of the access control policy. Valid values: `true`, `false`.
	Release pulumi.StringOutput `pulumi:"release"`
	// The days of a week or of a month on which the access control policy takes effect. Valid values:
	// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
	// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
	// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
	RepeatDays pulumi.IntArrayOutput `pulumi:"repeatDays"`
	// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
	RepeatEndTime pulumi.StringPtrOutput `pulumi:"repeatEndTime"`
	// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	RepeatStartTime pulumi.StringPtrOutput `pulumi:"repeatStartTime"`
	// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
	// - `Permanent`: The policy always takes effect.
	// - `None`: The policy takes effect for only once.
	// - `Daily`: The policy takes effect on a daily basis.
	// - `Weekly`: The policy takes effect on a weekly basis.
	// - `Monthly`: The policy takes effect on a monthly basis.
	RepeatType pulumi.StringOutput `pulumi:"repeatType"`
	// The source address in the access control policy.
	Source pulumi.StringOutput `pulumi:"source"`
	// The source IP address of the request.
	SourceIp pulumi.StringPtrOutput `pulumi:"sourceIp"`
	// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	StartTime pulumi.IntPtrOutput `pulumi:"startTime"`
}

// NewControlPolicy registers a new resource with the given unique name, arguments, and options.
func NewControlPolicy(ctx *pulumi.Context,
	name string, args *ControlPolicyArgs, opts ...pulumi.ResourceOption) (*ControlPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AclAction == nil {
		return nil, errors.New("invalid value for required argument 'AclAction'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.DestinationType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationType'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.Proto == nil {
		return nil, errors.New("invalid value for required argument 'Proto'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.SourceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ControlPolicy
	err := ctx.RegisterResource("alicloud:cloudfirewall/controlPolicy:ControlPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetControlPolicy gets an existing ControlPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetControlPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ControlPolicyState, opts ...pulumi.ResourceOption) (*ControlPolicy, error) {
	var resource ControlPolicy
	err := ctx.ReadResource("alicloud:cloudfirewall/controlPolicy:ControlPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ControlPolicy resources.
type controlPolicyState struct {
	// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
	AclAction *string `pulumi:"aclAction"`
	// (Available since v1.148.0) The unique ID of the access control policy.
	AclUuid *string `pulumi:"aclUuid"`
	// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
	ApplicationName *string `pulumi:"applicationName"`
	// The application types supported by the access control policy.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
	ApplicationNameLists []string `pulumi:"applicationNameLists"`
	// (Available since v1.232.0) The time when the access control policy was created.
	CreateTime *string `pulumi:"createTime"`
	// The description of the access control policy.
	Description *string `pulumi:"description"`
	// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
	DestPort *string `pulumi:"destPort"`
	// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
	DestPortGroup *string `pulumi:"destPortGroup"`
	// The type of the destination port in the access control policy. Valid values: `port`, `group`.
	DestPortType *string `pulumi:"destPortType"`
	// The destination address in the access control policy.
	Destination *string `pulumi:"destination"`
	// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
	DestinationType *string `pulumi:"destinationType"`
	// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// The domain name resolution method of the access control policy. Valid values:
	// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
	// - `DNS`: DNS-based dynamic resolution.
	// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
	DomainResolveType *string `pulumi:"domainResolveType"`
	// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
	EndTime *int `pulumi:"endTime"`
	// The IP version supported by the access control policy. Default value: `4`. Valid values:
	IpVersion *string `pulumi:"ipVersion"`
	// The language of the content within the request and response. Valid values: `zh`, `en`.
	Lang *string `pulumi:"lang"`
	// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
	Proto *string `pulumi:"proto"`
	// The status of the access control policy. Valid values: `true`, `false`.
	Release *string `pulumi:"release"`
	// The days of a week or of a month on which the access control policy takes effect. Valid values:
	// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
	// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
	// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
	RepeatDays []int `pulumi:"repeatDays"`
	// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
	// - `Permanent`: The policy always takes effect.
	// - `None`: The policy takes effect for only once.
	// - `Daily`: The policy takes effect on a daily basis.
	// - `Weekly`: The policy takes effect on a weekly basis.
	// - `Monthly`: The policy takes effect on a monthly basis.
	RepeatType *string `pulumi:"repeatType"`
	// The source address in the access control policy.
	Source *string `pulumi:"source"`
	// The source IP address of the request.
	SourceIp *string `pulumi:"sourceIp"`
	// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
	SourceType *string `pulumi:"sourceType"`
	// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	StartTime *int `pulumi:"startTime"`
}

type ControlPolicyState struct {
	// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
	AclAction pulumi.StringPtrInput
	// (Available since v1.148.0) The unique ID of the access control policy.
	AclUuid pulumi.StringPtrInput
	// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
	ApplicationName pulumi.StringPtrInput
	// The application types supported by the access control policy.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
	ApplicationNameLists pulumi.StringArrayInput
	// (Available since v1.232.0) The time when the access control policy was created.
	CreateTime pulumi.StringPtrInput
	// The description of the access control policy.
	Description pulumi.StringPtrInput
	// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
	DestPort pulumi.StringPtrInput
	// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
	DestPortGroup pulumi.StringPtrInput
	// The type of the destination port in the access control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringPtrInput
	// The destination address in the access control policy.
	Destination pulumi.StringPtrInput
	// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
	DestinationType pulumi.StringPtrInput
	// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput
	// The domain name resolution method of the access control policy. Valid values:
	// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
	// - `DNS`: DNS-based dynamic resolution.
	// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
	DomainResolveType pulumi.StringPtrInput
	// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
	EndTime pulumi.IntPtrInput
	// The IP version supported by the access control policy. Default value: `4`. Valid values:
	IpVersion pulumi.StringPtrInput
	// The language of the content within the request and response. Valid values: `zh`, `en`.
	Lang pulumi.StringPtrInput
	// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
	Proto pulumi.StringPtrInput
	// The status of the access control policy. Valid values: `true`, `false`.
	Release pulumi.StringPtrInput
	// The days of a week or of a month on which the access control policy takes effect. Valid values:
	// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
	// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
	// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
	RepeatDays pulumi.IntArrayInput
	// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
	RepeatEndTime pulumi.StringPtrInput
	// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	RepeatStartTime pulumi.StringPtrInput
	// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
	// - `Permanent`: The policy always takes effect.
	// - `None`: The policy takes effect for only once.
	// - `Daily`: The policy takes effect on a daily basis.
	// - `Weekly`: The policy takes effect on a weekly basis.
	// - `Monthly`: The policy takes effect on a monthly basis.
	RepeatType pulumi.StringPtrInput
	// The source address in the access control policy.
	Source pulumi.StringPtrInput
	// The source IP address of the request.
	SourceIp pulumi.StringPtrInput
	// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
	SourceType pulumi.StringPtrInput
	// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	StartTime pulumi.IntPtrInput
}

func (ControlPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*controlPolicyState)(nil)).Elem()
}

type controlPolicyArgs struct {
	// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
	AclAction string `pulumi:"aclAction"`
	// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
	ApplicationName *string `pulumi:"applicationName"`
	// The application types supported by the access control policy.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
	ApplicationNameLists []string `pulumi:"applicationNameLists"`
	// The description of the access control policy.
	Description string `pulumi:"description"`
	// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
	DestPort *string `pulumi:"destPort"`
	// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
	DestPortGroup *string `pulumi:"destPortGroup"`
	// The type of the destination port in the access control policy. Valid values: `port`, `group`.
	DestPortType *string `pulumi:"destPortType"`
	// The destination address in the access control policy.
	Destination string `pulumi:"destination"`
	// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
	DestinationType string `pulumi:"destinationType"`
	// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
	Direction string `pulumi:"direction"`
	// The domain name resolution method of the access control policy. Valid values:
	// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
	// - `DNS`: DNS-based dynamic resolution.
	// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
	DomainResolveType *string `pulumi:"domainResolveType"`
	// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
	EndTime *int `pulumi:"endTime"`
	// The IP version supported by the access control policy. Default value: `4`. Valid values:
	IpVersion *string `pulumi:"ipVersion"`
	// The language of the content within the request and response. Valid values: `zh`, `en`.
	Lang *string `pulumi:"lang"`
	// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
	Proto string `pulumi:"proto"`
	// The status of the access control policy. Valid values: `true`, `false`.
	Release *string `pulumi:"release"`
	// The days of a week or of a month on which the access control policy takes effect. Valid values:
	// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
	// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
	// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
	RepeatDays []int `pulumi:"repeatDays"`
	// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
	// - `Permanent`: The policy always takes effect.
	// - `None`: The policy takes effect for only once.
	// - `Daily`: The policy takes effect on a daily basis.
	// - `Weekly`: The policy takes effect on a weekly basis.
	// - `Monthly`: The policy takes effect on a monthly basis.
	RepeatType *string `pulumi:"repeatType"`
	// The source address in the access control policy.
	Source string `pulumi:"source"`
	// The source IP address of the request.
	SourceIp *string `pulumi:"sourceIp"`
	// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
	SourceType string `pulumi:"sourceType"`
	// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	StartTime *int `pulumi:"startTime"`
}

// The set of arguments for constructing a ControlPolicy resource.
type ControlPolicyArgs struct {
	// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
	AclAction pulumi.StringInput
	// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
	ApplicationName pulumi.StringPtrInput
	// The application types supported by the access control policy.
	// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
	ApplicationNameLists pulumi.StringArrayInput
	// The description of the access control policy.
	Description pulumi.StringInput
	// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
	DestPort pulumi.StringPtrInput
	// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
	DestPortGroup pulumi.StringPtrInput
	// The type of the destination port in the access control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringPtrInput
	// The destination address in the access control policy.
	Destination pulumi.StringInput
	// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
	DestinationType pulumi.StringInput
	// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
	Direction pulumi.StringInput
	// The domain name resolution method of the access control policy. Valid values:
	// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
	// - `DNS`: DNS-based dynamic resolution.
	// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
	DomainResolveType pulumi.StringPtrInput
	// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
	EndTime pulumi.IntPtrInput
	// The IP version supported by the access control policy. Default value: `4`. Valid values:
	IpVersion pulumi.StringPtrInput
	// The language of the content within the request and response. Valid values: `zh`, `en`.
	Lang pulumi.StringPtrInput
	// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
	Proto pulumi.StringInput
	// The status of the access control policy. Valid values: `true`, `false`.
	Release pulumi.StringPtrInput
	// The days of a week or of a month on which the access control policy takes effect. Valid values:
	// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
	// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
	// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
	RepeatDays pulumi.IntArrayInput
	// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
	// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
	RepeatEndTime pulumi.StringPtrInput
	// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	RepeatStartTime pulumi.StringPtrInput
	// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
	// - `Permanent`: The policy always takes effect.
	// - `None`: The policy takes effect for only once.
	// - `Daily`: The policy takes effect on a daily basis.
	// - `Weekly`: The policy takes effect on a weekly basis.
	// - `Monthly`: The policy takes effect on a monthly basis.
	RepeatType pulumi.StringPtrInput
	// The source address in the access control policy.
	Source pulumi.StringInput
	// The source IP address of the request.
	SourceIp pulumi.StringPtrInput
	// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
	SourceType pulumi.StringInput
	// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
	StartTime pulumi.IntPtrInput
}

func (ControlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*controlPolicyArgs)(nil)).Elem()
}

type ControlPolicyInput interface {
	pulumi.Input

	ToControlPolicyOutput() ControlPolicyOutput
	ToControlPolicyOutputWithContext(ctx context.Context) ControlPolicyOutput
}

func (*ControlPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPolicy)(nil)).Elem()
}

func (i *ControlPolicy) ToControlPolicyOutput() ControlPolicyOutput {
	return i.ToControlPolicyOutputWithContext(context.Background())
}

func (i *ControlPolicy) ToControlPolicyOutputWithContext(ctx context.Context) ControlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPolicyOutput)
}

// ControlPolicyArrayInput is an input type that accepts ControlPolicyArray and ControlPolicyArrayOutput values.
// You can construct a concrete instance of `ControlPolicyArrayInput` via:
//
//	ControlPolicyArray{ ControlPolicyArgs{...} }
type ControlPolicyArrayInput interface {
	pulumi.Input

	ToControlPolicyArrayOutput() ControlPolicyArrayOutput
	ToControlPolicyArrayOutputWithContext(context.Context) ControlPolicyArrayOutput
}

type ControlPolicyArray []ControlPolicyInput

func (ControlPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlPolicy)(nil)).Elem()
}

func (i ControlPolicyArray) ToControlPolicyArrayOutput() ControlPolicyArrayOutput {
	return i.ToControlPolicyArrayOutputWithContext(context.Background())
}

func (i ControlPolicyArray) ToControlPolicyArrayOutputWithContext(ctx context.Context) ControlPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPolicyArrayOutput)
}

// ControlPolicyMapInput is an input type that accepts ControlPolicyMap and ControlPolicyMapOutput values.
// You can construct a concrete instance of `ControlPolicyMapInput` via:
//
//	ControlPolicyMap{ "key": ControlPolicyArgs{...} }
type ControlPolicyMapInput interface {
	pulumi.Input

	ToControlPolicyMapOutput() ControlPolicyMapOutput
	ToControlPolicyMapOutputWithContext(context.Context) ControlPolicyMapOutput
}

type ControlPolicyMap map[string]ControlPolicyInput

func (ControlPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlPolicy)(nil)).Elem()
}

func (i ControlPolicyMap) ToControlPolicyMapOutput() ControlPolicyMapOutput {
	return i.ToControlPolicyMapOutputWithContext(context.Background())
}

func (i ControlPolicyMap) ToControlPolicyMapOutputWithContext(ctx context.Context) ControlPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPolicyMapOutput)
}

type ControlPolicyOutput struct{ *pulumi.OutputState }

func (ControlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPolicy)(nil)).Elem()
}

func (o ControlPolicyOutput) ToControlPolicyOutput() ControlPolicyOutput {
	return o
}

func (o ControlPolicyOutput) ToControlPolicyOutputWithContext(ctx context.Context) ControlPolicyOutput {
	return o
}

// The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
func (o ControlPolicyOutput) AclAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.AclAction }).(pulumi.StringOutput)
}

// (Available since v1.148.0) The unique ID of the access control policy.
func (o ControlPolicyOutput) AclUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.AclUuid }).(pulumi.StringOutput)
}

// The application type supported by the access control policy. Valid values: `ANY`, `HTTP`, `HTTPS`, `MQTT`, `Memcache`, `MongoDB`, `MySQL`, `RDP`, `Redis`, `SMTP`, `SMTPS`, `SSH`, `SSL`, `VNC`.
// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationName` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationName` to `ANY`.
func (o ControlPolicyOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// The application types supported by the access control policy.
// > **NOTE:** If `proto` is set to `TCP`, you can set `applicationNameList` to any valid value. If `proto` is set to `UDP`, `ICMP`, or `ANY`, you can only set `applicationNameList` to `["ANY"]`. From version 1.232.0, You must specify at least one of the `applicationNameList` and `applicationName`. If you specify both `applicationNameList` and `applicationName`, only the `applicationNameList` takes effect.
func (o ControlPolicyOutput) ApplicationNameLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringArrayOutput { return v.ApplicationNameLists }).(pulumi.StringArrayOutput)
}

// (Available since v1.232.0) The time when the access control policy was created.
func (o ControlPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the access control policy.
func (o ControlPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The destination port in the access control policy. **Note:** If `destPortType` is set to `port`, you must specify `destPort`.
func (o ControlPolicyOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.DestPort }).(pulumi.StringOutput)
}

// The name of the destination port address book in the access control policy. **Note:** If `destPortType` is set to `group`, you must specify `destPortGroup`.
func (o ControlPolicyOutput) DestPortGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.DestPortGroup }).(pulumi.StringPtrOutput)
}

// The type of the destination port in the access control policy. Valid values: `port`, `group`.
func (o ControlPolicyOutput) DestPortType() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.DestPortType }).(pulumi.StringOutput)
}

// The destination address in the access control policy.
func (o ControlPolicyOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// The type of the destination address in the access control policy. Valid values: `net`, `group`, `domain`, `location`.
func (o ControlPolicyOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

// The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
func (o ControlPolicyOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// The domain name resolution method of the access control policy. Valid values:
// - `FQDN`: Fully qualified domain name (FQDN)-based resolution.
// - `DNS`: DNS-based dynamic resolution.
// - `FQDN_AND_DNS`: FQDN and DNS-based dynamic resolution.
func (o ControlPolicyOutput) DomainResolveType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.DomainResolveType }).(pulumi.StringPtrOutput)
}

// The time when the access control policy stops taking effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes later than the start time.
// > **NOTE:** If `repeatType` is set to `None`, `Daily`, `Weekly`, or `Monthly`, `startTime` and `endTime` must be set.
func (o ControlPolicyOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.IntPtrOutput { return v.EndTime }).(pulumi.IntPtrOutput)
}

// The IP version supported by the access control policy. Default value: `4`. Valid values:
func (o ControlPolicyOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// The language of the content within the request and response. Valid values: `zh`, `en`.
func (o ControlPolicyOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.Lang }).(pulumi.StringPtrOutput)
}

// The protocol type supported by the access control policy. Valid values: `ANY`, `  TCP `, `UDP`, `ICMP`.
func (o ControlPolicyOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Proto }).(pulumi.StringOutput)
}

// The status of the access control policy. Valid values: `true`, `false`.
func (o ControlPolicyOutput) Release() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Release }).(pulumi.StringOutput)
}

// The days of a week or of a month on which the access control policy takes effect. Valid values:
// - If `repeatType` is set to `Weekly`. Valid values: `0` to `6`.
// - If `repeatType` is set to `Monthly`. Valid values: `1` to `31`.
// > **NOTE:** If `repeatType` is set to `Weekly`, or `Monthly`, `repeatDays` must be set.
func (o ControlPolicyOutput) RepeatDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.IntArrayOutput { return v.RepeatDays }).(pulumi.IntArrayOutput)
}

// The point in time when the recurrence ends. Example: `23:30`. The end time must be on the hour or on the half hour, and at least 30 minutes later than the start time.
// > **NOTE:** If `repeatType` is set to `Daily`, `Weekly`, or `Monthly`, `repeatStartTime` and `repeatEndTime` must be set.
func (o ControlPolicyOutput) RepeatEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.RepeatEndTime }).(pulumi.StringPtrOutput)
}

// The point in time when the recurrence starts. Example: `08:00`. The start time must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
func (o ControlPolicyOutput) RepeatStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.RepeatStartTime }).(pulumi.StringPtrOutput)
}

// The recurrence type for the access control policy to take effect. Default value: `Permanent`. Valid values:
// - `Permanent`: The policy always takes effect.
// - `None`: The policy takes effect for only once.
// - `Daily`: The policy takes effect on a daily basis.
// - `Weekly`: The policy takes effect on a weekly basis.
// - `Monthly`: The policy takes effect on a monthly basis.
func (o ControlPolicyOutput) RepeatType() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.RepeatType }).(pulumi.StringOutput)
}

// The source address in the access control policy.
func (o ControlPolicyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The source IP address of the request.
func (o ControlPolicyOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringPtrOutput { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// The type of the source address in the access control policy. Valid values: `net`, `group`, `location`.
func (o ControlPolicyOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The time when the access control policy starts to take effect. The value is a UNIX timestamp. Unit: seconds. The value must be on the hour or on the half hour, and at least 30 minutes earlier than the end time.
func (o ControlPolicyOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPolicy) pulumi.IntPtrOutput { return v.StartTime }).(pulumi.IntPtrOutput)
}

type ControlPolicyArrayOutput struct{ *pulumi.OutputState }

func (ControlPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlPolicy)(nil)).Elem()
}

func (o ControlPolicyArrayOutput) ToControlPolicyArrayOutput() ControlPolicyArrayOutput {
	return o
}

func (o ControlPolicyArrayOutput) ToControlPolicyArrayOutputWithContext(ctx context.Context) ControlPolicyArrayOutput {
	return o
}

func (o ControlPolicyArrayOutput) Index(i pulumi.IntInput) ControlPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ControlPolicy {
		return vs[0].([]*ControlPolicy)[vs[1].(int)]
	}).(ControlPolicyOutput)
}

type ControlPolicyMapOutput struct{ *pulumi.OutputState }

func (ControlPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlPolicy)(nil)).Elem()
}

func (o ControlPolicyMapOutput) ToControlPolicyMapOutput() ControlPolicyMapOutput {
	return o
}

func (o ControlPolicyMapOutput) ToControlPolicyMapOutputWithContext(ctx context.Context) ControlPolicyMapOutput {
	return o
}

func (o ControlPolicyMapOutput) MapIndex(k pulumi.StringInput) ControlPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ControlPolicy {
		return vs[0].(map[string]*ControlPolicy)[vs[1].(string)]
	}).(ControlPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ControlPolicyInput)(nil)).Elem(), &ControlPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlPolicyArrayInput)(nil)).Elem(), ControlPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlPolicyMapInput)(nil)).Elem(), ControlPolicyMap{})
	pulumi.RegisterOutputType(ControlPolicyOutput{})
	pulumi.RegisterOutputType(ControlPolicyArrayOutput{})
	pulumi.RegisterOutputType(ControlPolicyMapOutput{})
}
