// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Firewall Nat Firewall Control Policy resource. Nat firewall access control policy.
//
// For information about Cloud Firewall Nat Firewall Control Policy and how to use it, see [What is Nat Firewall Control Policy](https://www.alibabacloud.com/help/en/cloud-firewall/developer-reference/api-cloudfw-2017-12-07-createnatfirewallcontrolpolicy).
//
// > **NOTE:** Available since v1.224.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudfirewall"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			direction := "out"
//			if param := cfg.Get("direction"); param != "" {
//				direction = param
//			}
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultDEiWfM, err := vpc.NewNetwork(ctx, "defaultDEiWfM", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("172.16.0.0/12"),
//				VpcName:   pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultFHDM3F, err := vpc.NewSwitch(ctx, "defaultFHDM3F", &vpc.SwitchArgs{
//				VpcId:     defaultDEiWfM.ID(),
//				ZoneId:    pulumi.String(_default.Zones[0].Id),
//				CidrBlock: pulumi.String("172.16.2.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultMbS2Ts, err := vpc.NewNatGateway(ctx, "defaultMbS2Ts", &vpc.NatGatewayArgs{
//				VpcId:          defaultDEiWfM.ID(),
//				NatGatewayName: pulumi.String(name),
//				PaymentType:    pulumi.String("PayAsYouGo"),
//				VswitchId:      defaultFHDM3F.ID(),
//				NatType:        pulumi.String("Enhanced"),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"port",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeFormat1, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"port",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			port, err := cloudfirewall.NewAddressBook(ctx, "port", &cloudfirewall.AddressBookArgs{
//				Description: pulumi.String(invokeFormat.Result),
//				GroupName:   pulumi.String(invokeFormat1.Result),
//				GroupType:   pulumi.String("port"),
//				AddressLists: pulumi.StringArray{
//					pulumi.String("22/22"),
//					pulumi.String("23/23"),
//					pulumi.String("24/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat2, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"port-update",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeFormat3, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"port-update",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = cloudfirewall.NewAddressBook(ctx, "port-update", &cloudfirewall.AddressBookArgs{
//				Description: pulumi.String(invokeFormat2.Result),
//				GroupName:   pulumi.String(invokeFormat3.Result),
//				GroupType:   pulumi.String("port"),
//				AddressLists: pulumi.StringArray{
//					pulumi.String("22/22"),
//					pulumi.String("23/23"),
//					pulumi.String("24/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat4, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"domain",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeFormat5, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s%s",
//				Args: []string{
//					name,
//					"domain",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = cloudfirewall.NewAddressBook(ctx, "domain", &cloudfirewall.AddressBookArgs{
//				Description: pulumi.String(invokeFormat4.Result),
//				GroupName:   pulumi.String(invokeFormat5.Result),
//				GroupType:   pulumi.String("domain"),
//				AddressLists: pulumi.StringArray{
//					pulumi.String("alibaba.com"),
//					pulumi.String("aliyun.com"),
//					pulumi.String("alicloud.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudfirewall.NewAddressBook(ctx, "ip", &cloudfirewall.AddressBookArgs{
//				Description: pulumi.String(name),
//				GroupName:   pulumi.String(name),
//				GroupType:   pulumi.String("ip"),
//				AddressLists: pulumi.StringArray{
//					pulumi.String("1.1.1.1/32"),
//					pulumi.String("2.2.2.2/32"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudfirewall.NewNatFirewallControlPolicy(ctx, "default", &cloudfirewall.NatFirewallControlPolicyArgs{
//				ApplicationNameLists: pulumi.StringArray{
//					pulumi.String("ANY"),
//				},
//				Description: pulumi.String(name),
//				Release:     pulumi.String("false"),
//				IpVersion:   pulumi.String("4"),
//				RepeatDays: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//				},
//				RepeatStartTime:   pulumi.String("21:00"),
//				AclAction:         pulumi.String("log"),
//				DestPortGroup:     port.GroupName,
//				RepeatType:        pulumi.String("Weekly"),
//				NatGatewayId:      defaultMbS2Ts.ID(),
//				Source:            pulumi.String("1.1.1.1/32"),
//				Direction:         pulumi.String("out"),
//				RepeatEndTime:     pulumi.String("21:30"),
//				StartTime:         pulumi.Int(1699156800),
//				Destination:       pulumi.String("1.1.1.1/32"),
//				EndTime:           pulumi.Int(1888545600),
//				SourceType:        pulumi.String("net"),
//				Proto:             pulumi.String("TCP"),
//				NewOrder:          pulumi.String("1"),
//				DestinationType:   pulumi.String("net"),
//				DestPortType:      pulumi.String("group"),
//				DomainResolveType: pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Firewall Nat Firewall Control Policy can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy example <acl_uuid>:<nat_gateway_id>:<direction>
// ```
type NatFirewallControlPolicy struct {
	pulumi.CustomResourceState

	// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
	// - **accept**: Release
	// - **drop**: Refused
	// - **log**: Observation.
	AclAction pulumi.StringOutput `pulumi:"aclAction"`
	// The unique ID of the security access control policy.
	// > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
	AclUuid pulumi.StringOutput `pulumi:"aclUuid"`
	// The list of application types supported by the access control policy.
	ApplicationNameLists pulumi.StringArrayOutput `pulumi:"applicationNameLists"`
	// The time when the policy was created.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// The description of the access control policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// The destination port of traffic access in the access control policy. Value:
	// - When the protocol type is set to ICMP, the value of DestPort is null.
	// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
	// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
	DestPort pulumi.StringOutput `pulumi:"destPort"`
	// The address book name of the destination port of the access traffic in the access control policy.
	// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
	DestPortGroup pulumi.StringPtrOutput `pulumi:"destPortGroup"`
	// The destination port type of the access traffic in the security access control policy.
	// - **port**: port
	// - **group**: Port Address Book.
	DestPortType pulumi.StringOutput `pulumi:"destPortType"`
	// The destination address segment in the access control policy. Valid values:
	// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
	// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
	// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
	// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
	Destination pulumi.StringOutput `pulumi:"destination"`
	// The destination address type in the access control policy. Valid values:
	// - **net**: Destination Network segment (CIDR address)
	// - **group**: Destination Address Book
	// - **domain**: the destination domain name.
	DestinationType pulumi.StringOutput `pulumi:"destinationType"`
	// The traffic direction of the access control policy. Valid values:
	// - **out**: Internal and external traffic access control.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
	// - **0**: Based on FQDN
	// - **1**: DNS-based dynamic resolution
	// - **2**: dynamic resolution based on FQDN and DNS.
	DomainResolveType pulumi.IntPtrOutput `pulumi:"domainResolveType"`
	// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
	// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
	EndTime pulumi.IntPtrOutput `pulumi:"endTime"`
	// Supported IP address version. Value:
	// - **4** (default): indicates the IPv4 address.
	IpVersion pulumi.StringPtrOutput `pulumi:"ipVersion"`
	// The ID of the NAT gateway instance.
	NatGatewayId pulumi.StringOutput `pulumi:"natGatewayId"`
	// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
	NewOrder pulumi.StringOutput `pulumi:"newOrder"`
	// The security protocol type for traffic access in the access control policy. Valid values:
	// - ANY (indicates that all protocol types are queried)
	// - TCP
	// - UDP
	// - ICMP.
	Proto pulumi.StringOutput `pulumi:"proto"`
	// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
	// - **true**: Enable access control policy
	// - **false**: Do not enable access control policies.
	Release pulumi.StringOutput `pulumi:"release"`
	// Collection of recurring dates for the policy validity period of the access control policy.
	// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
	// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
	// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
	RepeatDays pulumi.IntArrayOutput `pulumi:"repeatDays"`
	// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
	// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
	RepeatEndTime pulumi.StringPtrOutput `pulumi:"repeatEndTime"`
	// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
	// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
	RepeatStartTime pulumi.StringPtrOutput `pulumi:"repeatStartTime"`
	// The type of repetition for the policy validity period of the access control policy. Value:
	// - **Permit** (default): Always
	// - **None**: Specify a single time
	// - **Daily**: Daily
	// - **Weekly**: Weekly
	// - **Monthly**: Monthly.
	RepeatType pulumi.StringOutput `pulumi:"repeatType"`
	// The source address in the access control policy. Valid values:
	// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
	// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
	Source pulumi.StringOutput `pulumi:"source"`
	// The source address type in the access control policy. Valid values:
	// - **net**: the source network segment (CIDR address)
	// - **group**: source address book
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
	// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
	StartTime pulumi.IntPtrOutput `pulumi:"startTime"`
}

// NewNatFirewallControlPolicy registers a new resource with the given unique name, arguments, and options.
func NewNatFirewallControlPolicy(ctx *pulumi.Context,
	name string, args *NatFirewallControlPolicyArgs, opts ...pulumi.ResourceOption) (*NatFirewallControlPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AclAction == nil {
		return nil, errors.New("invalid value for required argument 'AclAction'")
	}
	if args.ApplicationNameLists == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationNameLists'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.DestinationType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationType'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.NatGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'NatGatewayId'")
	}
	if args.NewOrder == nil {
		return nil, errors.New("invalid value for required argument 'NewOrder'")
	}
	if args.Proto == nil {
		return nil, errors.New("invalid value for required argument 'Proto'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.SourceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NatFirewallControlPolicy
	err := ctx.RegisterResource("alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNatFirewallControlPolicy gets an existing NatFirewallControlPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatFirewallControlPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NatFirewallControlPolicyState, opts ...pulumi.ResourceOption) (*NatFirewallControlPolicy, error) {
	var resource NatFirewallControlPolicy
	err := ctx.ReadResource("alicloud:cloudfirewall/natFirewallControlPolicy:NatFirewallControlPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NatFirewallControlPolicy resources.
type natFirewallControlPolicyState struct {
	// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
	// - **accept**: Release
	// - **drop**: Refused
	// - **log**: Observation.
	AclAction *string `pulumi:"aclAction"`
	// The unique ID of the security access control policy.
	// > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
	AclUuid *string `pulumi:"aclUuid"`
	// The list of application types supported by the access control policy.
	ApplicationNameLists []string `pulumi:"applicationNameLists"`
	// The time when the policy was created.
	CreateTime *int `pulumi:"createTime"`
	// The description of the access control policy.
	Description *string `pulumi:"description"`
	// The destination port of traffic access in the access control policy. Value:
	// - When the protocol type is set to ICMP, the value of DestPort is null.
	// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
	// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
	DestPort *string `pulumi:"destPort"`
	// The address book name of the destination port of the access traffic in the access control policy.
	// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
	DestPortGroup *string `pulumi:"destPortGroup"`
	// The destination port type of the access traffic in the security access control policy.
	// - **port**: port
	// - **group**: Port Address Book.
	DestPortType *string `pulumi:"destPortType"`
	// The destination address segment in the access control policy. Valid values:
	// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
	// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
	// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
	// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
	Destination *string `pulumi:"destination"`
	// The destination address type in the access control policy. Valid values:
	// - **net**: Destination Network segment (CIDR address)
	// - **group**: Destination Address Book
	// - **domain**: the destination domain name.
	DestinationType *string `pulumi:"destinationType"`
	// The traffic direction of the access control policy. Valid values:
	// - **out**: Internal and external traffic access control.
	Direction *string `pulumi:"direction"`
	// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
	// - **0**: Based on FQDN
	// - **1**: DNS-based dynamic resolution
	// - **2**: dynamic resolution based on FQDN and DNS.
	DomainResolveType *int `pulumi:"domainResolveType"`
	// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
	// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
	EndTime *int `pulumi:"endTime"`
	// Supported IP address version. Value:
	// - **4** (default): indicates the IPv4 address.
	IpVersion *string `pulumi:"ipVersion"`
	// The ID of the NAT gateway instance.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
	NewOrder *string `pulumi:"newOrder"`
	// The security protocol type for traffic access in the access control policy. Valid values:
	// - ANY (indicates that all protocol types are queried)
	// - TCP
	// - UDP
	// - ICMP.
	Proto *string `pulumi:"proto"`
	// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
	// - **true**: Enable access control policy
	// - **false**: Do not enable access control policies.
	Release *string `pulumi:"release"`
	// Collection of recurring dates for the policy validity period of the access control policy.
	// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
	// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
	// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
	RepeatDays []int `pulumi:"repeatDays"`
	// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
	// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
	// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The type of repetition for the policy validity period of the access control policy. Value:
	// - **Permit** (default): Always
	// - **None**: Specify a single time
	// - **Daily**: Daily
	// - **Weekly**: Weekly
	// - **Monthly**: Monthly.
	RepeatType *string `pulumi:"repeatType"`
	// The source address in the access control policy. Valid values:
	// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
	// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
	Source *string `pulumi:"source"`
	// The source address type in the access control policy. Valid values:
	// - **net**: the source network segment (CIDR address)
	// - **group**: source address book
	SourceType *string `pulumi:"sourceType"`
	// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
	// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
	StartTime *int `pulumi:"startTime"`
}

type NatFirewallControlPolicyState struct {
	// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
	// - **accept**: Release
	// - **drop**: Refused
	// - **log**: Observation.
	AclAction pulumi.StringPtrInput
	// The unique ID of the security access control policy.
	// > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
	AclUuid pulumi.StringPtrInput
	// The list of application types supported by the access control policy.
	ApplicationNameLists pulumi.StringArrayInput
	// The time when the policy was created.
	CreateTime pulumi.IntPtrInput
	// The description of the access control policy.
	Description pulumi.StringPtrInput
	// The destination port of traffic access in the access control policy. Value:
	// - When the protocol type is set to ICMP, the value of DestPort is null.
	// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
	// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
	DestPort pulumi.StringPtrInput
	// The address book name of the destination port of the access traffic in the access control policy.
	// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
	DestPortGroup pulumi.StringPtrInput
	// The destination port type of the access traffic in the security access control policy.
	// - **port**: port
	// - **group**: Port Address Book.
	DestPortType pulumi.StringPtrInput
	// The destination address segment in the access control policy. Valid values:
	// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
	// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
	// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
	// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
	Destination pulumi.StringPtrInput
	// The destination address type in the access control policy. Valid values:
	// - **net**: Destination Network segment (CIDR address)
	// - **group**: Destination Address Book
	// - **domain**: the destination domain name.
	DestinationType pulumi.StringPtrInput
	// The traffic direction of the access control policy. Valid values:
	// - **out**: Internal and external traffic access control.
	Direction pulumi.StringPtrInput
	// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
	// - **0**: Based on FQDN
	// - **1**: DNS-based dynamic resolution
	// - **2**: dynamic resolution based on FQDN and DNS.
	DomainResolveType pulumi.IntPtrInput
	// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
	// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
	EndTime pulumi.IntPtrInput
	// Supported IP address version. Value:
	// - **4** (default): indicates the IPv4 address.
	IpVersion pulumi.StringPtrInput
	// The ID of the NAT gateway instance.
	NatGatewayId pulumi.StringPtrInput
	// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
	NewOrder pulumi.StringPtrInput
	// The security protocol type for traffic access in the access control policy. Valid values:
	// - ANY (indicates that all protocol types are queried)
	// - TCP
	// - UDP
	// - ICMP.
	Proto pulumi.StringPtrInput
	// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
	// - **true**: Enable access control policy
	// - **false**: Do not enable access control policies.
	Release pulumi.StringPtrInput
	// Collection of recurring dates for the policy validity period of the access control policy.
	// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
	// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
	// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
	RepeatDays pulumi.IntArrayInput
	// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
	// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
	RepeatEndTime pulumi.StringPtrInput
	// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
	// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
	RepeatStartTime pulumi.StringPtrInput
	// The type of repetition for the policy validity period of the access control policy. Value:
	// - **Permit** (default): Always
	// - **None**: Specify a single time
	// - **Daily**: Daily
	// - **Weekly**: Weekly
	// - **Monthly**: Monthly.
	RepeatType pulumi.StringPtrInput
	// The source address in the access control policy. Valid values:
	// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
	// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
	Source pulumi.StringPtrInput
	// The source address type in the access control policy. Valid values:
	// - **net**: the source network segment (CIDR address)
	// - **group**: source address book
	SourceType pulumi.StringPtrInput
	// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
	// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
	StartTime pulumi.IntPtrInput
}

func (NatFirewallControlPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*natFirewallControlPolicyState)(nil)).Elem()
}

type natFirewallControlPolicyArgs struct {
	// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
	// - **accept**: Release
	// - **drop**: Refused
	// - **log**: Observation.
	AclAction string `pulumi:"aclAction"`
	// The list of application types supported by the access control policy.
	ApplicationNameLists []string `pulumi:"applicationNameLists"`
	// The description of the access control policy.
	Description string `pulumi:"description"`
	// The destination port of traffic access in the access control policy. Value:
	// - When the protocol type is set to ICMP, the value of DestPort is null.
	// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
	// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
	DestPort *string `pulumi:"destPort"`
	// The address book name of the destination port of the access traffic in the access control policy.
	// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
	DestPortGroup *string `pulumi:"destPortGroup"`
	// The destination port type of the access traffic in the security access control policy.
	// - **port**: port
	// - **group**: Port Address Book.
	DestPortType *string `pulumi:"destPortType"`
	// The destination address segment in the access control policy. Valid values:
	// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
	// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
	// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
	// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
	Destination string `pulumi:"destination"`
	// The destination address type in the access control policy. Valid values:
	// - **net**: Destination Network segment (CIDR address)
	// - **group**: Destination Address Book
	// - **domain**: the destination domain name.
	DestinationType string `pulumi:"destinationType"`
	// The traffic direction of the access control policy. Valid values:
	// - **out**: Internal and external traffic access control.
	Direction string `pulumi:"direction"`
	// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
	// - **0**: Based on FQDN
	// - **1**: DNS-based dynamic resolution
	// - **2**: dynamic resolution based on FQDN and DNS.
	DomainResolveType *int `pulumi:"domainResolveType"`
	// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
	// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
	EndTime *int `pulumi:"endTime"`
	// Supported IP address version. Value:
	// - **4** (default): indicates the IPv4 address.
	IpVersion *string `pulumi:"ipVersion"`
	// The ID of the NAT gateway instance.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
	NewOrder string `pulumi:"newOrder"`
	// The security protocol type for traffic access in the access control policy. Valid values:
	// - ANY (indicates that all protocol types are queried)
	// - TCP
	// - UDP
	// - ICMP.
	Proto string `pulumi:"proto"`
	// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
	// - **true**: Enable access control policy
	// - **false**: Do not enable access control policies.
	Release *string `pulumi:"release"`
	// Collection of recurring dates for the policy validity period of the access control policy.
	// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
	// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
	// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
	RepeatDays []int `pulumi:"repeatDays"`
	// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
	// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
	// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The type of repetition for the policy validity period of the access control policy. Value:
	// - **Permit** (default): Always
	// - **None**: Specify a single time
	// - **Daily**: Daily
	// - **Weekly**: Weekly
	// - **Monthly**: Monthly.
	RepeatType *string `pulumi:"repeatType"`
	// The source address in the access control policy. Valid values:
	// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
	// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
	Source string `pulumi:"source"`
	// The source address type in the access control policy. Valid values:
	// - **net**: the source network segment (CIDR address)
	// - **group**: source address book
	SourceType string `pulumi:"sourceType"`
	// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
	// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
	StartTime *int `pulumi:"startTime"`
}

// The set of arguments for constructing a NatFirewallControlPolicy resource.
type NatFirewallControlPolicyArgs struct {
	// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
	// - **accept**: Release
	// - **drop**: Refused
	// - **log**: Observation.
	AclAction pulumi.StringInput
	// The list of application types supported by the access control policy.
	ApplicationNameLists pulumi.StringArrayInput
	// The description of the access control policy.
	Description pulumi.StringInput
	// The destination port of traffic access in the access control policy. Value:
	// - When the protocol type is set to ICMP, the value of DestPort is null.
	// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
	// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
	// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
	DestPort pulumi.StringPtrInput
	// The address book name of the destination port of the access traffic in the access control policy.
	// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
	DestPortGroup pulumi.StringPtrInput
	// The destination port type of the access traffic in the security access control policy.
	// - **port**: port
	// - **group**: Port Address Book.
	DestPortType pulumi.StringPtrInput
	// The destination address segment in the access control policy. Valid values:
	// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
	// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
	// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
	// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
	Destination pulumi.StringInput
	// The destination address type in the access control policy. Valid values:
	// - **net**: Destination Network segment (CIDR address)
	// - **group**: Destination Address Book
	// - **domain**: the destination domain name.
	DestinationType pulumi.StringInput
	// The traffic direction of the access control policy. Valid values:
	// - **out**: Internal and external traffic access control.
	Direction pulumi.StringInput
	// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
	// - **0**: Based on FQDN
	// - **1**: DNS-based dynamic resolution
	// - **2**: dynamic resolution based on FQDN and DNS.
	DomainResolveType pulumi.IntPtrInput
	// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
	// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
	EndTime pulumi.IntPtrInput
	// Supported IP address version. Value:
	// - **4** (default): indicates the IPv4 address.
	IpVersion pulumi.StringPtrInput
	// The ID of the NAT gateway instance.
	NatGatewayId pulumi.StringInput
	// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
	NewOrder pulumi.StringInput
	// The security protocol type for traffic access in the access control policy. Valid values:
	// - ANY (indicates that all protocol types are queried)
	// - TCP
	// - UDP
	// - ICMP.
	Proto pulumi.StringInput
	// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
	// - **true**: Enable access control policy
	// - **false**: Do not enable access control policies.
	Release pulumi.StringPtrInput
	// Collection of recurring dates for the policy validity period of the access control policy.
	// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
	// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
	// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
	RepeatDays pulumi.IntArrayInput
	// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
	// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
	RepeatEndTime pulumi.StringPtrInput
	// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
	// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
	RepeatStartTime pulumi.StringPtrInput
	// The type of repetition for the policy validity period of the access control policy. Value:
	// - **Permit** (default): Always
	// - **None**: Specify a single time
	// - **Daily**: Daily
	// - **Weekly**: Weekly
	// - **Monthly**: Monthly.
	RepeatType pulumi.StringPtrInput
	// The source address in the access control policy. Valid values:
	// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
	// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
	Source pulumi.StringInput
	// The source address type in the access control policy. Valid values:
	// - **net**: the source network segment (CIDR address)
	// - **group**: source address book
	SourceType pulumi.StringInput
	// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
	// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
	StartTime pulumi.IntPtrInput
}

func (NatFirewallControlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*natFirewallControlPolicyArgs)(nil)).Elem()
}

type NatFirewallControlPolicyInput interface {
	pulumi.Input

	ToNatFirewallControlPolicyOutput() NatFirewallControlPolicyOutput
	ToNatFirewallControlPolicyOutputWithContext(ctx context.Context) NatFirewallControlPolicyOutput
}

func (*NatFirewallControlPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NatFirewallControlPolicy)(nil)).Elem()
}

func (i *NatFirewallControlPolicy) ToNatFirewallControlPolicyOutput() NatFirewallControlPolicyOutput {
	return i.ToNatFirewallControlPolicyOutputWithContext(context.Background())
}

func (i *NatFirewallControlPolicy) ToNatFirewallControlPolicyOutputWithContext(ctx context.Context) NatFirewallControlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatFirewallControlPolicyOutput)
}

// NatFirewallControlPolicyArrayInput is an input type that accepts NatFirewallControlPolicyArray and NatFirewallControlPolicyArrayOutput values.
// You can construct a concrete instance of `NatFirewallControlPolicyArrayInput` via:
//
//	NatFirewallControlPolicyArray{ NatFirewallControlPolicyArgs{...} }
type NatFirewallControlPolicyArrayInput interface {
	pulumi.Input

	ToNatFirewallControlPolicyArrayOutput() NatFirewallControlPolicyArrayOutput
	ToNatFirewallControlPolicyArrayOutputWithContext(context.Context) NatFirewallControlPolicyArrayOutput
}

type NatFirewallControlPolicyArray []NatFirewallControlPolicyInput

func (NatFirewallControlPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatFirewallControlPolicy)(nil)).Elem()
}

func (i NatFirewallControlPolicyArray) ToNatFirewallControlPolicyArrayOutput() NatFirewallControlPolicyArrayOutput {
	return i.ToNatFirewallControlPolicyArrayOutputWithContext(context.Background())
}

func (i NatFirewallControlPolicyArray) ToNatFirewallControlPolicyArrayOutputWithContext(ctx context.Context) NatFirewallControlPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatFirewallControlPolicyArrayOutput)
}

// NatFirewallControlPolicyMapInput is an input type that accepts NatFirewallControlPolicyMap and NatFirewallControlPolicyMapOutput values.
// You can construct a concrete instance of `NatFirewallControlPolicyMapInput` via:
//
//	NatFirewallControlPolicyMap{ "key": NatFirewallControlPolicyArgs{...} }
type NatFirewallControlPolicyMapInput interface {
	pulumi.Input

	ToNatFirewallControlPolicyMapOutput() NatFirewallControlPolicyMapOutput
	ToNatFirewallControlPolicyMapOutputWithContext(context.Context) NatFirewallControlPolicyMapOutput
}

type NatFirewallControlPolicyMap map[string]NatFirewallControlPolicyInput

func (NatFirewallControlPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatFirewallControlPolicy)(nil)).Elem()
}

func (i NatFirewallControlPolicyMap) ToNatFirewallControlPolicyMapOutput() NatFirewallControlPolicyMapOutput {
	return i.ToNatFirewallControlPolicyMapOutputWithContext(context.Background())
}

func (i NatFirewallControlPolicyMap) ToNatFirewallControlPolicyMapOutputWithContext(ctx context.Context) NatFirewallControlPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatFirewallControlPolicyMapOutput)
}

type NatFirewallControlPolicyOutput struct{ *pulumi.OutputState }

func (NatFirewallControlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatFirewallControlPolicy)(nil)).Elem()
}

func (o NatFirewallControlPolicyOutput) ToNatFirewallControlPolicyOutput() NatFirewallControlPolicyOutput {
	return o
}

func (o NatFirewallControlPolicyOutput) ToNatFirewallControlPolicyOutputWithContext(ctx context.Context) NatFirewallControlPolicyOutput {
	return o
}

// The method (action) of access traffic passing through Cloud Firewall in the security access control policy. Valid values:
// - **accept**: Release
// - **drop**: Refused
// - **log**: Observation.
func (o NatFirewallControlPolicyOutput) AclAction() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.AclAction }).(pulumi.StringOutput)
}

// The unique ID of the security access control policy.
// > **NOTE:**  To modify a security access control policy, you need to provide the unique ID of the policy. You can call the DescribeNatFirewallControlPolicy interface to obtain the ID.
func (o NatFirewallControlPolicyOutput) AclUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.AclUuid }).(pulumi.StringOutput)
}

// The list of application types supported by the access control policy.
func (o NatFirewallControlPolicyOutput) ApplicationNameLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringArrayOutput { return v.ApplicationNameLists }).(pulumi.StringArrayOutput)
}

// The time when the policy was created.
func (o NatFirewallControlPolicyOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of the access control policy.
func (o NatFirewallControlPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The destination port of traffic access in the access control policy. Value:
// - When the protocol type is set to ICMP, the value of DestPort is null.
// > **NOTE:**  When the protocol type is ICMP, access control on the destination port is not supported.
// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) IS group, the value of DestPort is null.
// > **NOTE:**  When you select group (destination port address book) for the destination port type of the access control policy, you do not need to set a specific destination port number. All ports that need to be controlled by this access control policy are included in the destination port address book.
// - When the protocol type is TCP, UDP, or ANY, and the destination port type (DestPortType) is port, the value of DestPort is the destination port number.
func (o NatFirewallControlPolicyOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.DestPort }).(pulumi.StringOutput)
}

// The address book name of the destination port of the access traffic in the access control policy.
// > **NOTE:**  When DestPortType is set to group, you need to set the destination port address book name.
func (o NatFirewallControlPolicyOutput) DestPortGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringPtrOutput { return v.DestPortGroup }).(pulumi.StringPtrOutput)
}

// The destination port type of the access traffic in the security access control policy.
// - **port**: port
// - **group**: Port Address Book.
func (o NatFirewallControlPolicyOutput) DestPortType() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.DestPortType }).(pulumi.StringOutput)
}

// The destination address segment in the access control policy. Valid values:
// - When DestinationType is net, Destination is the Destination CIDR. For example: 1.2.XX.XX/24
// - When DestinationType IS group, Destination is the name of the Destination address book. For example: dbGroup
// - When DestinationType is domain, Destination is the Destination domain name. For example: * .aliyuncs.com
// - When DestinationType is location, Destination is the Destination region. For example: \["BJ11", "ZB"\].
func (o NatFirewallControlPolicyOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// The destination address type in the access control policy. Valid values:
// - **net**: Destination Network segment (CIDR address)
// - **group**: Destination Address Book
// - **domain**: the destination domain name.
func (o NatFirewallControlPolicyOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

// The traffic direction of the access control policy. Valid values:
// - **out**: Internal and external traffic access control.
func (o NatFirewallControlPolicyOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// The domain name resolution method of the access control policy. The policy is enabled by default after it is created. Valid values:
// - **0**: Based on FQDN
// - **1**: DNS-based dynamic resolution
// - **2**: dynamic resolution based on FQDN and DNS.
func (o NatFirewallControlPolicyOutput) DomainResolveType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.IntPtrOutput { return v.DomainResolveType }).(pulumi.IntPtrOutput)
}

// The end time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. Must be full or half time and at least half an hour greater than the start time.
// > **NOTE:**  When RepeatType is set to permit, EndTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, EndTime must have a value and you need to set the end time.
func (o NatFirewallControlPolicyOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.IntPtrOutput { return v.EndTime }).(pulumi.IntPtrOutput)
}

// Supported IP address version. Value:
// - **4** (default): indicates the IPv4 address.
func (o NatFirewallControlPolicyOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringPtrOutput { return v.IpVersion }).(pulumi.StringPtrOutput)
}

// The ID of the NAT gateway instance.
func (o NatFirewallControlPolicyOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The priority for the access control policy to take effect. The priority number increases sequentially from 1, and the smaller the priority number, the higher the priority.
func (o NatFirewallControlPolicyOutput) NewOrder() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.NewOrder }).(pulumi.StringOutput)
}

// The security protocol type for traffic access in the access control policy. Valid values:
// - ANY (indicates that all protocol types are queried)
// - TCP
// - UDP
// - ICMP.
func (o NatFirewallControlPolicyOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Proto }).(pulumi.StringOutput)
}

// The enabled status of the access control policy. The policy is enabled by default after it is created. Value:
// - **true**: Enable access control policy
// - **false**: Do not enable access control policies.
func (o NatFirewallControlPolicyOutput) Release() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Release }).(pulumi.StringOutput)
}

// Collection of recurring dates for the policy validity period of the access control policy.
// - When RepeatType is 'Permanent', 'None', 'Daily', RepeatDays is an empty collection. For example:[]
// - When RepeatType is Weekly, RepeatDays cannot be empty. For example:["0", "6"]. When the RepeatType is set to Weekly, RepeatDays cannot be repeated.
// - RepeatDays cannot be empty when RepeatType is 'Monthly. For example:[1, 31]. When RepeatType is set to Monthly, RepeatDays cannot be repeated.
func (o NatFirewallControlPolicyOutput) RepeatDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.IntArrayOutput { return v.RepeatDays }).(pulumi.IntArrayOutput)
}

// The recurring end time of the policy validity period of the access control policy. For example: 23:30, it must be the whole point or half point time, and at least half an hour greater than the repeat start time.
// > **NOTE:**  When RepeatType is set to normal or None, RepeatEndTime is null. When the RepeatType is Daily, Weekly, or Monthly, the RepeatEndTime must have a value, and you need to set the repeat end time.
func (o NatFirewallControlPolicyOutput) RepeatEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringPtrOutput { return v.RepeatEndTime }).(pulumi.StringPtrOutput)
}

// The recurring start time of the policy validity period of the access control policy. For example: 08:00, it must be the whole point or half point time, and at least half an hour less than the repeat end time.
// > **NOTE:**  When RepeatType is set to permit or None, RepeatStartTime is empty. When the RepeatType is Daily, Weekly, or Monthly, the RepeatStartTime must have a value and you need to set the repeat start time.
func (o NatFirewallControlPolicyOutput) RepeatStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringPtrOutput { return v.RepeatStartTime }).(pulumi.StringPtrOutput)
}

// The type of repetition for the policy validity period of the access control policy. Value:
// - **Permit** (default): Always
// - **None**: Specify a single time
// - **Daily**: Daily
// - **Weekly**: Weekly
// - **Monthly**: Monthly.
func (o NatFirewallControlPolicyOutput) RepeatType() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.RepeatType }).(pulumi.StringOutput)
}

// The source address in the access control policy. Valid values:
// - When **SourceType** is set to 'net', Source is the Source CIDR address. For example: 10.2.4.0/24
// - When **SourceType** is set to 'group', Source is the name of the Source address book. For example: db_group.
func (o NatFirewallControlPolicyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The source address type in the access control policy. Valid values:
// - **net**: the source network segment (CIDR address)
// - **group**: source address book
func (o NatFirewallControlPolicyOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The start time of the policy validity period of the access control policy. Expresses using the second-level timestamp format. It must be a full or half hour and at least half an hour less than the end time.
// > **NOTE:**  When RepeatType is set to normal, StartTime is null. When the RepeatType is None, Daily, Weekly, or Monthly, StartTime must have a value and you need to set the start time.
func (o NatFirewallControlPolicyOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatFirewallControlPolicy) pulumi.IntPtrOutput { return v.StartTime }).(pulumi.IntPtrOutput)
}

type NatFirewallControlPolicyArrayOutput struct{ *pulumi.OutputState }

func (NatFirewallControlPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatFirewallControlPolicy)(nil)).Elem()
}

func (o NatFirewallControlPolicyArrayOutput) ToNatFirewallControlPolicyArrayOutput() NatFirewallControlPolicyArrayOutput {
	return o
}

func (o NatFirewallControlPolicyArrayOutput) ToNatFirewallControlPolicyArrayOutputWithContext(ctx context.Context) NatFirewallControlPolicyArrayOutput {
	return o
}

func (o NatFirewallControlPolicyArrayOutput) Index(i pulumi.IntInput) NatFirewallControlPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NatFirewallControlPolicy {
		return vs[0].([]*NatFirewallControlPolicy)[vs[1].(int)]
	}).(NatFirewallControlPolicyOutput)
}

type NatFirewallControlPolicyMapOutput struct{ *pulumi.OutputState }

func (NatFirewallControlPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatFirewallControlPolicy)(nil)).Elem()
}

func (o NatFirewallControlPolicyMapOutput) ToNatFirewallControlPolicyMapOutput() NatFirewallControlPolicyMapOutput {
	return o
}

func (o NatFirewallControlPolicyMapOutput) ToNatFirewallControlPolicyMapOutputWithContext(ctx context.Context) NatFirewallControlPolicyMapOutput {
	return o
}

func (o NatFirewallControlPolicyMapOutput) MapIndex(k pulumi.StringInput) NatFirewallControlPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NatFirewallControlPolicy {
		return vs[0].(map[string]*NatFirewallControlPolicy)[vs[1].(string)]
	}).(NatFirewallControlPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NatFirewallControlPolicyInput)(nil)).Elem(), &NatFirewallControlPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatFirewallControlPolicyArrayInput)(nil)).Elem(), NatFirewallControlPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatFirewallControlPolicyMapInput)(nil)).Elem(), NatFirewallControlPolicyMap{})
	pulumi.RegisterOutputType(NatFirewallControlPolicyOutput{})
	pulumi.RegisterOutputType(NatFirewallControlPolicyArrayOutput{})
	pulumi.RegisterOutputType(NatFirewallControlPolicyMapOutput{})
}
