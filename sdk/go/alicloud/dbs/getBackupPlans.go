// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Dbs Backup Plans of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.185.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/dbs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := dbs.GetBackupPlans(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("dbsBackupPlanId1", ids.Plans[0].Id)
//			nameRegex, err := dbs.GetBackupPlans(ctx, &dbs.GetBackupPlansArgs{
//				NameRegex: pulumi.StringRef("^my-BackupPlan"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("dbsBackupPlanId2", nameRegex.Plans[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetBackupPlans(ctx *pulumi.Context, args *GetBackupPlansArgs, opts ...pulumi.InvokeOption) (*GetBackupPlansResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBackupPlansResult
	err := ctx.Invoke("alicloud:dbs/getBackupPlans:getBackupPlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupPlans.
type GetBackupPlansArgs struct {
	// The name of the resource.
	BackupPlanName *string `pulumi:"backupPlanName"`
	// Default to `true`. Set it to `false` can hide the `paymentType` to output.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Backup Plan IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Backup Plan name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getBackupPlans.
type GetBackupPlansResult struct {
	BackupPlanName *string `pulumi:"backupPlanName"`
	EnableDetails  *bool   `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id         string               `pulumi:"id"`
	Ids        []string             `pulumi:"ids"`
	NameRegex  *string              `pulumi:"nameRegex"`
	Names      []string             `pulumi:"names"`
	OutputFile *string              `pulumi:"outputFile"`
	PageNumber *int                 `pulumi:"pageNumber"`
	PageSize   *int                 `pulumi:"pageSize"`
	Plans      []GetBackupPlansPlan `pulumi:"plans"`
	Status     *string              `pulumi:"status"`
}

func GetBackupPlansOutput(ctx *pulumi.Context, args GetBackupPlansOutputArgs, opts ...pulumi.InvokeOption) GetBackupPlansResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBackupPlansResult, error) {
			args := v.(GetBackupPlansArgs)
			r, err := GetBackupPlans(ctx, &args, opts...)
			var s GetBackupPlansResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBackupPlansResultOutput)
}

// A collection of arguments for invoking getBackupPlans.
type GetBackupPlansOutputArgs struct {
	// The name of the resource.
	BackupPlanName pulumi.StringPtrInput `pulumi:"backupPlanName"`
	// Default to `true`. Set it to `false` can hide the `paymentType` to output.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Backup Plan IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Backup Plan name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetBackupPlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPlansArgs)(nil)).Elem()
}

// A collection of values returned by getBackupPlans.
type GetBackupPlansResultOutput struct{ *pulumi.OutputState }

func (GetBackupPlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupPlansResult)(nil)).Elem()
}

func (o GetBackupPlansResultOutput) ToGetBackupPlansResultOutput() GetBackupPlansResultOutput {
	return o
}

func (o GetBackupPlansResultOutput) ToGetBackupPlansResultOutputWithContext(ctx context.Context) GetBackupPlansResultOutput {
	return o
}

func (o GetBackupPlansResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupPlansResult] {
	return pulumix.Output[GetBackupPlansResult]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupPlansResultOutput) BackupPlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *string { return v.BackupPlanName }).(pulumi.StringPtrOutput)
}

func (o GetBackupPlansResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBackupPlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupPlansResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBackupPlansResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupPlansResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetBackupPlansResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetBackupPlansResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupPlansResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetBackupPlansResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetBackupPlansResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetBackupPlansResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

func (o GetBackupPlansResultOutput) Plans() GetBackupPlansPlanArrayOutput {
	return o.ApplyT(func(v GetBackupPlansResult) []GetBackupPlansPlan { return v.Plans }).(GetBackupPlansPlanArrayOutput)
}

func (o GetBackupPlansResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBackupPlansResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackupPlansResultOutput{})
}
