// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a DBS Backup Plan resource.
//
// For information about DBS Backup Plan and how to use it, see [What is Backup Plan](https://www.alibabacloud.com/help/zh/database-backup-service/latest/api-doc-dbs-2019-03-06-api-doc-createandstartbackupplan).
//
// > **NOTE:** Available in v1.185.0+.
//
// ## Import
//
// DBS Backup Plan can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:dbs/backupPlan:BackupPlan example <id>
//
// ```
type BackupPlan struct {
	pulumi.CustomResourceState

	// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
	BackupGatewayId pulumi.StringOutput `pulumi:"backupGatewayId"`
	// The backup log interval seconds.
	BackupLogIntervalSeconds pulumi.IntPtrOutput `pulumi:"backupLogIntervalSeconds"`
	// Backup method. Valid values: `duplication`, `logical`, `physical`.
	BackupMethod pulumi.StringOutput `pulumi:"backupMethod"`
	// The backup object.
	BackupObjects pulumi.StringOutput `pulumi:"backupObjects"`
	// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
	BackupPeriod pulumi.StringOutput `pulumi:"backupPeriod"`
	// The name of the resource.
	BackupPlanName pulumi.StringOutput `pulumi:"backupPlanName"`
	// The backup rate limit.
	BackupRateLimit pulumi.StringPtrOutput `pulumi:"backupRateLimit"`
	// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
	BackupRetentionPeriod pulumi.IntOutput `pulumi:"backupRetentionPeriod"`
	// The backup speed limit.
	BackupSpeedLimit pulumi.StringPtrOutput `pulumi:"backupSpeedLimit"`
	// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
	BackupStartTime pulumi.StringOutput `pulumi:"backupStartTime"`
	// Built-in storage type, Valid values: `system`.
	BackupStorageType pulumi.StringOutput `pulumi:"backupStorageType"`
	// The backup strategy type. Valid values: `simple`, `manual`.
	BackupStrategyType pulumi.StringPtrOutput `pulumi:"backupStrategyType"`
	// The UID that is backed up across Alibaba cloud accounts.
	CrossAliyunId pulumi.StringOutput `pulumi:"crossAliyunId"`
	// The name of the RAM role that is backed up across Alibaba cloud accounts.
	CrossRoleName pulumi.StringOutput `pulumi:"crossRoleName"`
	// The database region.
	DatabaseRegion pulumi.StringPtrOutput `pulumi:"databaseRegion"`
	// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
	DatabaseType pulumi.StringOutput `pulumi:"databaseType"`
	// The storage time for conversion to archive cold standby is 365 days by default.
	DuplicationArchivePeriod pulumi.IntOutput `pulumi:"duplicationArchivePeriod"`
	// The storage time is converted to low-frequency access. The default time is 180 days.
	DuplicationInfrequentAccessPeriod pulumi.IntOutput `pulumi:"duplicationInfrequentAccessPeriod"`
	// Whether to enable incremental log Backup.
	EnableBackupLog pulumi.BoolOutput `pulumi:"enableBackupLog"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
	InstanceClass pulumi.StringOutput `pulumi:"instanceClass"`
	// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// The OSS Bucket name. The system automatically generates a new name by default.
	OssBucketName pulumi.StringOutput `pulumi:"ossBucketName"`
	// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
	SourceEndpointDatabaseName pulumi.StringOutput `pulumi:"sourceEndpointDatabaseName"`
	// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
	SourceEndpointInstanceId pulumi.StringOutput `pulumi:"sourceEndpointInstanceId"`
	// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
	SourceEndpointInstanceType pulumi.StringOutput `pulumi:"sourceEndpointInstanceType"`
	// The source endpoint ip.
	SourceEndpointIp pulumi.StringPtrOutput `pulumi:"sourceEndpointIp"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointOracleSid pulumi.StringPtrOutput `pulumi:"sourceEndpointOracleSid"`
	// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointPassword pulumi.StringPtrOutput `pulumi:"sourceEndpointPassword"`
	// The source endpoint port.
	SourceEndpointPort pulumi.IntPtrOutput `pulumi:"sourceEndpointPort"`
	// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
	SourceEndpointRegion pulumi.StringOutput `pulumi:"sourceEndpointRegion"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointSid pulumi.StringOutput `pulumi:"sourceEndpointSid"`
	// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointUserName pulumi.StringOutput `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `pause`, `running`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The storage region.
	StorageRegion pulumi.StringPtrOutput `pulumi:"storageRegion"`
	// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
	UsedTime pulumi.IntPtrOutput `pulumi:"usedTime"`
}

// NewBackupPlan registers a new resource with the given unique name, arguments, and options.
func NewBackupPlan(ctx *pulumi.Context,
	name string, args *BackupPlanArgs, opts ...pulumi.ResourceOption) (*BackupPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupMethod == nil {
		return nil, errors.New("invalid value for required argument 'BackupMethod'")
	}
	if args.BackupPlanName == nil {
		return nil, errors.New("invalid value for required argument 'BackupPlanName'")
	}
	if args.DatabaseType == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseType'")
	}
	if args.InstanceClass == nil {
		return nil, errors.New("invalid value for required argument 'InstanceClass'")
	}
	if args.SourceEndpointInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpointInstanceType'")
	}
	if args.SourceEndpointPassword != nil {
		args.SourceEndpointPassword = pulumi.ToSecret(args.SourceEndpointPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sourceEndpointPassword",
	})
	opts = append(opts, secrets)
	var resource BackupPlan
	err := ctx.RegisterResource("alicloud:dbs/backupPlan:BackupPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPlan gets an existing BackupPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPlanState, opts ...pulumi.ResourceOption) (*BackupPlan, error) {
	var resource BackupPlan
	err := ctx.ReadResource("alicloud:dbs/backupPlan:BackupPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPlan resources.
type backupPlanState struct {
	// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
	BackupGatewayId *string `pulumi:"backupGatewayId"`
	// The backup log interval seconds.
	BackupLogIntervalSeconds *int `pulumi:"backupLogIntervalSeconds"`
	// Backup method. Valid values: `duplication`, `logical`, `physical`.
	BackupMethod *string `pulumi:"backupMethod"`
	// The backup object.
	BackupObjects *string `pulumi:"backupObjects"`
	// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
	BackupPeriod *string `pulumi:"backupPeriod"`
	// The name of the resource.
	BackupPlanName *string `pulumi:"backupPlanName"`
	// The backup rate limit.
	BackupRateLimit *string `pulumi:"backupRateLimit"`
	// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The backup speed limit.
	BackupSpeedLimit *string `pulumi:"backupSpeedLimit"`
	// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
	BackupStartTime *string `pulumi:"backupStartTime"`
	// Built-in storage type, Valid values: `system`.
	BackupStorageType *string `pulumi:"backupStorageType"`
	// The backup strategy type. Valid values: `simple`, `manual`.
	BackupStrategyType *string `pulumi:"backupStrategyType"`
	// The UID that is backed up across Alibaba cloud accounts.
	CrossAliyunId *string `pulumi:"crossAliyunId"`
	// The name of the RAM role that is backed up across Alibaba cloud accounts.
	CrossRoleName *string `pulumi:"crossRoleName"`
	// The database region.
	DatabaseRegion *string `pulumi:"databaseRegion"`
	// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
	DatabaseType *string `pulumi:"databaseType"`
	// The storage time for conversion to archive cold standby is 365 days by default.
	DuplicationArchivePeriod *int `pulumi:"duplicationArchivePeriod"`
	// The storage time is converted to low-frequency access. The default time is 180 days.
	DuplicationInfrequentAccessPeriod *int `pulumi:"duplicationInfrequentAccessPeriod"`
	// Whether to enable incremental log Backup.
	EnableBackupLog *bool `pulumi:"enableBackupLog"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
	InstanceClass *string `pulumi:"instanceClass"`
	// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
	InstanceType *string `pulumi:"instanceType"`
	// The OSS Bucket name. The system automatically generates a new name by default.
	OssBucketName *string `pulumi:"ossBucketName"`
	// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
	Period *string `pulumi:"period"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
	SourceEndpointInstanceType *string `pulumi:"sourceEndpointInstanceType"`
	// The source endpoint ip.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The source endpoint port.
	SourceEndpointPort *int `pulumi:"sourceEndpointPort"`
	// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointSid *string `pulumi:"sourceEndpointSid"`
	// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `pause`, `running`.
	Status *string `pulumi:"status"`
	// The storage region.
	StorageRegion *string `pulumi:"storageRegion"`
	// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
	UsedTime *int `pulumi:"usedTime"`
}

type BackupPlanState struct {
	// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
	BackupGatewayId pulumi.StringPtrInput
	// The backup log interval seconds.
	BackupLogIntervalSeconds pulumi.IntPtrInput
	// Backup method. Valid values: `duplication`, `logical`, `physical`.
	BackupMethod pulumi.StringPtrInput
	// The backup object.
	BackupObjects pulumi.StringPtrInput
	// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
	BackupPeriod pulumi.StringPtrInput
	// The name of the resource.
	BackupPlanName pulumi.StringPtrInput
	// The backup rate limit.
	BackupRateLimit pulumi.StringPtrInput
	// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
	BackupRetentionPeriod pulumi.IntPtrInput
	// The backup speed limit.
	BackupSpeedLimit pulumi.StringPtrInput
	// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
	BackupStartTime pulumi.StringPtrInput
	// Built-in storage type, Valid values: `system`.
	BackupStorageType pulumi.StringPtrInput
	// The backup strategy type. Valid values: `simple`, `manual`.
	BackupStrategyType pulumi.StringPtrInput
	// The UID that is backed up across Alibaba cloud accounts.
	CrossAliyunId pulumi.StringPtrInput
	// The name of the RAM role that is backed up across Alibaba cloud accounts.
	CrossRoleName pulumi.StringPtrInput
	// The database region.
	DatabaseRegion pulumi.StringPtrInput
	// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
	DatabaseType pulumi.StringPtrInput
	// The storage time for conversion to archive cold standby is 365 days by default.
	DuplicationArchivePeriod pulumi.IntPtrInput
	// The storage time is converted to low-frequency access. The default time is 180 days.
	DuplicationInfrequentAccessPeriod pulumi.IntPtrInput
	// Whether to enable incremental log Backup.
	EnableBackupLog pulumi.BoolPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
	InstanceClass pulumi.StringPtrInput
	// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
	InstanceType pulumi.StringPtrInput
	// The OSS Bucket name. The system automatically generates a new name by default.
	OssBucketName pulumi.StringPtrInput
	// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringPtrInput
	// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
	Period pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
	SourceEndpointInstanceType pulumi.StringPtrInput
	// The source endpoint ip.
	SourceEndpointIp pulumi.StringPtrInput
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointPassword pulumi.StringPtrInput
	// The source endpoint port.
	SourceEndpointPort pulumi.IntPtrInput
	// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
	SourceEndpointRegion pulumi.StringPtrInput
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointSid pulumi.StringPtrInput
	// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the resource. Valid values: `pause`, `running`.
	Status pulumi.StringPtrInput
	// The storage region.
	StorageRegion pulumi.StringPtrInput
	// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
	UsedTime pulumi.IntPtrInput
}

func (BackupPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanState)(nil)).Elem()
}

type backupPlanArgs struct {
	// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
	BackupGatewayId *string `pulumi:"backupGatewayId"`
	// The backup log interval seconds.
	BackupLogIntervalSeconds *int `pulumi:"backupLogIntervalSeconds"`
	// Backup method. Valid values: `duplication`, `logical`, `physical`.
	BackupMethod string `pulumi:"backupMethod"`
	// The backup object.
	BackupObjects *string `pulumi:"backupObjects"`
	// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
	BackupPeriod *string `pulumi:"backupPeriod"`
	// The name of the resource.
	BackupPlanName string `pulumi:"backupPlanName"`
	// The backup rate limit.
	BackupRateLimit *string `pulumi:"backupRateLimit"`
	// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The backup speed limit.
	BackupSpeedLimit *string `pulumi:"backupSpeedLimit"`
	// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
	BackupStartTime *string `pulumi:"backupStartTime"`
	// Built-in storage type, Valid values: `system`.
	BackupStorageType *string `pulumi:"backupStorageType"`
	// The backup strategy type. Valid values: `simple`, `manual`.
	BackupStrategyType *string `pulumi:"backupStrategyType"`
	// The UID that is backed up across Alibaba cloud accounts.
	CrossAliyunId *string `pulumi:"crossAliyunId"`
	// The name of the RAM role that is backed up across Alibaba cloud accounts.
	CrossRoleName *string `pulumi:"crossRoleName"`
	// The database region.
	DatabaseRegion *string `pulumi:"databaseRegion"`
	// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
	DatabaseType string `pulumi:"databaseType"`
	// The storage time for conversion to archive cold standby is 365 days by default.
	DuplicationArchivePeriod *int `pulumi:"duplicationArchivePeriod"`
	// The storage time is converted to low-frequency access. The default time is 180 days.
	DuplicationInfrequentAccessPeriod *int `pulumi:"duplicationInfrequentAccessPeriod"`
	// Whether to enable incremental log Backup.
	EnableBackupLog *bool `pulumi:"enableBackupLog"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
	InstanceClass string `pulumi:"instanceClass"`
	// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
	InstanceType *string `pulumi:"instanceType"`
	// The OSS Bucket name. The system automatically generates a new name by default.
	OssBucketName *string `pulumi:"ossBucketName"`
	// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
	Period *string `pulumi:"period"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
	SourceEndpointInstanceType string `pulumi:"sourceEndpointInstanceType"`
	// The source endpoint ip.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The source endpoint port.
	SourceEndpointPort *int `pulumi:"sourceEndpointPort"`
	// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointSid *string `pulumi:"sourceEndpointSid"`
	// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `pause`, `running`.
	Status *string `pulumi:"status"`
	// The storage region.
	StorageRegion *string `pulumi:"storageRegion"`
	// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
	UsedTime *int `pulumi:"usedTime"`
}

// The set of arguments for constructing a BackupPlan resource.
type BackupPlanArgs struct {
	// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
	BackupGatewayId pulumi.StringPtrInput
	// The backup log interval seconds.
	BackupLogIntervalSeconds pulumi.IntPtrInput
	// Backup method. Valid values: `duplication`, `logical`, `physical`.
	BackupMethod pulumi.StringInput
	// The backup object.
	BackupObjects pulumi.StringPtrInput
	// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
	BackupPeriod pulumi.StringPtrInput
	// The name of the resource.
	BackupPlanName pulumi.StringInput
	// The backup rate limit.
	BackupRateLimit pulumi.StringPtrInput
	// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
	BackupRetentionPeriod pulumi.IntPtrInput
	// The backup speed limit.
	BackupSpeedLimit pulumi.StringPtrInput
	// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
	BackupStartTime pulumi.StringPtrInput
	// Built-in storage type, Valid values: `system`.
	BackupStorageType pulumi.StringPtrInput
	// The backup strategy type. Valid values: `simple`, `manual`.
	BackupStrategyType pulumi.StringPtrInput
	// The UID that is backed up across Alibaba cloud accounts.
	CrossAliyunId pulumi.StringPtrInput
	// The name of the RAM role that is backed up across Alibaba cloud accounts.
	CrossRoleName pulumi.StringPtrInput
	// The database region.
	DatabaseRegion pulumi.StringPtrInput
	// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
	DatabaseType pulumi.StringInput
	// The storage time for conversion to archive cold standby is 365 days by default.
	DuplicationArchivePeriod pulumi.IntPtrInput
	// The storage time is converted to low-frequency access. The default time is 180 days.
	DuplicationInfrequentAccessPeriod pulumi.IntPtrInput
	// Whether to enable incremental log Backup.
	EnableBackupLog pulumi.BoolPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
	InstanceClass pulumi.StringInput
	// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
	InstanceType pulumi.StringPtrInput
	// The OSS Bucket name. The system automatically generates a new name by default.
	OssBucketName pulumi.StringPtrInput
	// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
	PaymentType pulumi.StringPtrInput
	// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
	Period pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
	SourceEndpointInstanceType pulumi.StringInput
	// The source endpoint ip.
	SourceEndpointIp pulumi.StringPtrInput
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointPassword pulumi.StringPtrInput
	// The source endpoint port.
	SourceEndpointPort pulumi.IntPtrInput
	// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
	SourceEndpointRegion pulumi.StringPtrInput
	// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
	SourceEndpointSid pulumi.StringPtrInput
	// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the resource. Valid values: `pause`, `running`.
	Status pulumi.StringPtrInput
	// The storage region.
	StorageRegion pulumi.StringPtrInput
	// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
	UsedTime pulumi.IntPtrInput
}

func (BackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanArgs)(nil)).Elem()
}

type BackupPlanInput interface {
	pulumi.Input

	ToBackupPlanOutput() BackupPlanOutput
	ToBackupPlanOutputWithContext(ctx context.Context) BackupPlanOutput
}

func (*BackupPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlan)(nil)).Elem()
}

func (i *BackupPlan) ToBackupPlanOutput() BackupPlanOutput {
	return i.ToBackupPlanOutputWithContext(context.Background())
}

func (i *BackupPlan) ToBackupPlanOutputWithContext(ctx context.Context) BackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanOutput)
}

// BackupPlanArrayInput is an input type that accepts BackupPlanArray and BackupPlanArrayOutput values.
// You can construct a concrete instance of `BackupPlanArrayInput` via:
//
//	BackupPlanArray{ BackupPlanArgs{...} }
type BackupPlanArrayInput interface {
	pulumi.Input

	ToBackupPlanArrayOutput() BackupPlanArrayOutput
	ToBackupPlanArrayOutputWithContext(context.Context) BackupPlanArrayOutput
}

type BackupPlanArray []BackupPlanInput

func (BackupPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlan)(nil)).Elem()
}

func (i BackupPlanArray) ToBackupPlanArrayOutput() BackupPlanArrayOutput {
	return i.ToBackupPlanArrayOutputWithContext(context.Background())
}

func (i BackupPlanArray) ToBackupPlanArrayOutputWithContext(ctx context.Context) BackupPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanArrayOutput)
}

// BackupPlanMapInput is an input type that accepts BackupPlanMap and BackupPlanMapOutput values.
// You can construct a concrete instance of `BackupPlanMapInput` via:
//
//	BackupPlanMap{ "key": BackupPlanArgs{...} }
type BackupPlanMapInput interface {
	pulumi.Input

	ToBackupPlanMapOutput() BackupPlanMapOutput
	ToBackupPlanMapOutputWithContext(context.Context) BackupPlanMapOutput
}

type BackupPlanMap map[string]BackupPlanInput

func (BackupPlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlan)(nil)).Elem()
}

func (i BackupPlanMap) ToBackupPlanMapOutput() BackupPlanMapOutput {
	return i.ToBackupPlanMapOutputWithContext(context.Background())
}

func (i BackupPlanMap) ToBackupPlanMapOutputWithContext(ctx context.Context) BackupPlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanMapOutput)
}

type BackupPlanOutput struct{ *pulumi.OutputState }

func (BackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlan)(nil)).Elem()
}

func (o BackupPlanOutput) ToBackupPlanOutput() BackupPlanOutput {
	return o
}

func (o BackupPlanOutput) ToBackupPlanOutputWithContext(ctx context.Context) BackupPlanOutput {
	return o
}

// The ID of the backup gateway. This parameter is required when the `sourceEndpointInstanceType` is `Agent`.
func (o BackupPlanOutput) BackupGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupGatewayId }).(pulumi.StringOutput)
}

// The backup log interval seconds.
func (o BackupPlanOutput) BackupLogIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntPtrOutput { return v.BackupLogIntervalSeconds }).(pulumi.IntPtrOutput)
}

// Backup method. Valid values: `duplication`, `logical`, `physical`.
func (o BackupPlanOutput) BackupMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupMethod }).(pulumi.StringOutput)
}

// The backup object.
func (o BackupPlanOutput) BackupObjects() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupObjects }).(pulumi.StringOutput)
}

// Full backup cycle, Valid values: `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`. supports the selection of multiple fetch values, separated by English commas (,).
func (o BackupPlanOutput) BackupPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupPeriod }).(pulumi.StringOutput)
}

// The name of the resource.
func (o BackupPlanOutput) BackupPlanName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupPlanName }).(pulumi.StringOutput)
}

// The backup rate limit.
func (o BackupPlanOutput) BackupRateLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.BackupRateLimit }).(pulumi.StringPtrOutput)
}

// The retention time of backup data. Valid values: 0 to 1825. Default value: 730 days.
func (o BackupPlanOutput) BackupRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntOutput { return v.BackupRetentionPeriod }).(pulumi.IntOutput)
}

// The backup speed limit.
func (o BackupPlanOutput) BackupSpeedLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.BackupSpeedLimit }).(pulumi.StringPtrOutput)
}

// The start time of full Backup. The format is `<I> HH:mm</I>` Z(UTC time).
func (o BackupPlanOutput) BackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupStartTime }).(pulumi.StringOutput)
}

// Built-in storage type, Valid values: `system`.
func (o BackupPlanOutput) BackupStorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.BackupStorageType }).(pulumi.StringOutput)
}

// The backup strategy type. Valid values: `simple`, `manual`.
func (o BackupPlanOutput) BackupStrategyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.BackupStrategyType }).(pulumi.StringPtrOutput)
}

// The UID that is backed up across Alibaba cloud accounts.
func (o BackupPlanOutput) CrossAliyunId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.CrossAliyunId }).(pulumi.StringOutput)
}

// The name of the RAM role that is backed up across Alibaba cloud accounts.
func (o BackupPlanOutput) CrossRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.CrossRoleName }).(pulumi.StringOutput)
}

// The database region.
func (o BackupPlanOutput) DatabaseRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.DatabaseRegion }).(pulumi.StringPtrOutput)
}

// Database type. Valid values: `DRDS`, `FIle`, `MSSQL`, `MariaDB`, `MongoDB`, `MySQL`, `Oracle`, `PPAS`, `PostgreSQL`, `Redis`.
func (o BackupPlanOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.DatabaseType }).(pulumi.StringOutput)
}

// The storage time for conversion to archive cold standby is 365 days by default.
func (o BackupPlanOutput) DuplicationArchivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntOutput { return v.DuplicationArchivePeriod }).(pulumi.IntOutput)
}

// The storage time is converted to low-frequency access. The default time is 180 days.
func (o BackupPlanOutput) DuplicationInfrequentAccessPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntOutput { return v.DuplicationInfrequentAccessPeriod }).(pulumi.IntOutput)
}

// Whether to enable incremental log Backup.
func (o BackupPlanOutput) EnableBackupLog() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.BoolOutput { return v.EnableBackupLog }).(pulumi.BoolOutput)
}

// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`.
func (o BackupPlanOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.InstanceClass }).(pulumi.StringOutput)
}

// The instance type. Valid values: `RDS`, `PolarDB`, `DDS`, `Kvstore`, `Other`.
func (o BackupPlanOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The OSS Bucket name. The system automatically generates a new name by default.
func (o BackupPlanOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.OssBucketName }).(pulumi.StringOutput)
}

// The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`.
func (o BackupPlanOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Specify that the prepaid instance is of the package year or monthly type. Valid values: `Month`, `Year`.
func (o BackupPlanOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.Period }).(pulumi.StringPtrOutput)
}

// The ID of the resource group.
func (o BackupPlanOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The name of the database. This parameter is required when the `databaseType` is `PostgreSQL` or `MongoDB`.
func (o BackupPlanOutput) SourceEndpointDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointDatabaseName }).(pulumi.StringOutput)
}

// The ID of the database instance. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, or `Express`.
func (o BackupPlanOutput) SourceEndpointInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointInstanceId }).(pulumi.StringOutput)
}

// The location of the database. Valid values: `RDS`, `ECS`, `Express`, `Agent`, `DDS`, `Other`.
func (o BackupPlanOutput) SourceEndpointInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointInstanceType }).(pulumi.StringOutput)
}

// The source endpoint ip.
func (o BackupPlanOutput) SourceEndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.SourceEndpointIp }).(pulumi.StringPtrOutput)
}

// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
func (o BackupPlanOutput) SourceEndpointOracleSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.SourceEndpointOracleSid }).(pulumi.StringPtrOutput)
}

// The source endpoint password.  This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
func (o BackupPlanOutput) SourceEndpointPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.SourceEndpointPassword }).(pulumi.StringPtrOutput)
}

// The source endpoint port.
func (o BackupPlanOutput) SourceEndpointPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntPtrOutput { return v.SourceEndpointPort }).(pulumi.IntPtrOutput)
}

// The region of the database. This parameter is required when the `sourceEndpointInstanceType` is `RDS`, `ECS`, `DDS`, `Express`, or `Agent`.
func (o BackupPlanOutput) SourceEndpointRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointRegion }).(pulumi.StringOutput)
}

// Oracle SID name. This parameter is required when the `databaseType` is `Oracle`.
func (o BackupPlanOutput) SourceEndpointSid() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointSid }).(pulumi.StringOutput)
}

// The source endpoint username. This parameter is not required when the `databaseType` is `Redis`, or when the `sourceEndpointInstanceType` is `Agent` and the `databaseType` is `MSSQL`. This parameter is required in other scenarios.
func (o BackupPlanOutput) SourceEndpointUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.SourceEndpointUserName }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `pause`, `running`.
func (o BackupPlanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The storage region.
func (o BackupPlanOutput) StorageRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.StringPtrOutput { return v.StorageRegion }).(pulumi.StringPtrOutput)
}

// Specify purchase duration. When the parameter `period` is `Year`, the `usedTime` value is 1 to 9. When the parameter `period` is `Month`, the `usedTime` value is 1 to 11.
func (o BackupPlanOutput) UsedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPlan) pulumi.IntPtrOutput { return v.UsedTime }).(pulumi.IntPtrOutput)
}

type BackupPlanArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlan)(nil)).Elem()
}

func (o BackupPlanArrayOutput) ToBackupPlanArrayOutput() BackupPlanArrayOutput {
	return o
}

func (o BackupPlanArrayOutput) ToBackupPlanArrayOutputWithContext(ctx context.Context) BackupPlanArrayOutput {
	return o
}

func (o BackupPlanArrayOutput) Index(i pulumi.IntInput) BackupPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPlan {
		return vs[0].([]*BackupPlan)[vs[1].(int)]
	}).(BackupPlanOutput)
}

type BackupPlanMapOutput struct{ *pulumi.OutputState }

func (BackupPlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlan)(nil)).Elem()
}

func (o BackupPlanMapOutput) ToBackupPlanMapOutput() BackupPlanMapOutput {
	return o
}

func (o BackupPlanMapOutput) ToBackupPlanMapOutputWithContext(ctx context.Context) BackupPlanMapOutput {
	return o
}

func (o BackupPlanMapOutput) MapIndex(k pulumi.StringInput) BackupPlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPlan {
		return vs[0].(map[string]*BackupPlan)[vs[1].(string)]
	}).(BackupPlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanInput)(nil)).Elem(), &BackupPlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanArrayInput)(nil)).Elem(), BackupPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanMapInput)(nil)).Elem(), BackupPlanMap{})
	pulumi.RegisterOutputType(BackupPlanOutput{})
	pulumi.RegisterOutputType(BackupPlanArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanMapOutput{})
}
