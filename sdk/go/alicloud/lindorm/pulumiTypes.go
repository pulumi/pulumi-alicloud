// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lindorm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceV2EngineList struct {
	// Connect Address List
	ConnectAddressLists []InstanceV2EngineListConnectAddressList `pulumi:"connectAddressLists"`
	// Engine
	EngineType string `pulumi:"engineType"`
	// Whether it is the latest version
	IsLastVersion *bool `pulumi:"isLastVersion"`
	// Latest Version
	LatestVersion *string `pulumi:"latestVersion"`
	// Node Group List See `nodeGroup` below.
	NodeGroups []InstanceV2EngineListNodeGroup `pulumi:"nodeGroups"`
	// Engine Version
	Version *string `pulumi:"version"`
}

// InstanceV2EngineListInput is an input type that accepts InstanceV2EngineListArgs and InstanceV2EngineListOutput values.
// You can construct a concrete instance of `InstanceV2EngineListInput` via:
//
//	InstanceV2EngineListArgs{...}
type InstanceV2EngineListInput interface {
	pulumi.Input

	ToInstanceV2EngineListOutput() InstanceV2EngineListOutput
	ToInstanceV2EngineListOutputWithContext(context.Context) InstanceV2EngineListOutput
}

type InstanceV2EngineListArgs struct {
	// Connect Address List
	ConnectAddressLists InstanceV2EngineListConnectAddressListArrayInput `pulumi:"connectAddressLists"`
	// Engine
	EngineType pulumi.StringInput `pulumi:"engineType"`
	// Whether it is the latest version
	IsLastVersion pulumi.BoolPtrInput `pulumi:"isLastVersion"`
	// Latest Version
	LatestVersion pulumi.StringPtrInput `pulumi:"latestVersion"`
	// Node Group List See `nodeGroup` below.
	NodeGroups InstanceV2EngineListNodeGroupArrayInput `pulumi:"nodeGroups"`
	// Engine Version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (InstanceV2EngineListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineList)(nil)).Elem()
}

func (i InstanceV2EngineListArgs) ToInstanceV2EngineListOutput() InstanceV2EngineListOutput {
	return i.ToInstanceV2EngineListOutputWithContext(context.Background())
}

func (i InstanceV2EngineListArgs) ToInstanceV2EngineListOutputWithContext(ctx context.Context) InstanceV2EngineListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListOutput)
}

// InstanceV2EngineListArrayInput is an input type that accepts InstanceV2EngineListArray and InstanceV2EngineListArrayOutput values.
// You can construct a concrete instance of `InstanceV2EngineListArrayInput` via:
//
//	InstanceV2EngineListArray{ InstanceV2EngineListArgs{...} }
type InstanceV2EngineListArrayInput interface {
	pulumi.Input

	ToInstanceV2EngineListArrayOutput() InstanceV2EngineListArrayOutput
	ToInstanceV2EngineListArrayOutputWithContext(context.Context) InstanceV2EngineListArrayOutput
}

type InstanceV2EngineListArray []InstanceV2EngineListInput

func (InstanceV2EngineListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineList)(nil)).Elem()
}

func (i InstanceV2EngineListArray) ToInstanceV2EngineListArrayOutput() InstanceV2EngineListArrayOutput {
	return i.ToInstanceV2EngineListArrayOutputWithContext(context.Background())
}

func (i InstanceV2EngineListArray) ToInstanceV2EngineListArrayOutputWithContext(ctx context.Context) InstanceV2EngineListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListArrayOutput)
}

type InstanceV2EngineListOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineList)(nil)).Elem()
}

func (o InstanceV2EngineListOutput) ToInstanceV2EngineListOutput() InstanceV2EngineListOutput {
	return o
}

func (o InstanceV2EngineListOutput) ToInstanceV2EngineListOutputWithContext(ctx context.Context) InstanceV2EngineListOutput {
	return o
}

// Connect Address List
func (o InstanceV2EngineListOutput) ConnectAddressLists() InstanceV2EngineListConnectAddressListArrayOutput {
	return o.ApplyT(func(v InstanceV2EngineList) []InstanceV2EngineListConnectAddressList { return v.ConnectAddressLists }).(InstanceV2EngineListConnectAddressListArrayOutput)
}

// Engine
func (o InstanceV2EngineListOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceV2EngineList) string { return v.EngineType }).(pulumi.StringOutput)
}

// Whether it is the latest version
func (o InstanceV2EngineListOutput) IsLastVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineList) *bool { return v.IsLastVersion }).(pulumi.BoolPtrOutput)
}

// Latest Version
func (o InstanceV2EngineListOutput) LatestVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineList) *string { return v.LatestVersion }).(pulumi.StringPtrOutput)
}

// Node Group List See `nodeGroup` below.
func (o InstanceV2EngineListOutput) NodeGroups() InstanceV2EngineListNodeGroupArrayOutput {
	return o.ApplyT(func(v InstanceV2EngineList) []InstanceV2EngineListNodeGroup { return v.NodeGroups }).(InstanceV2EngineListNodeGroupArrayOutput)
}

// Engine Version
func (o InstanceV2EngineListOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineList) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type InstanceV2EngineListArrayOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineList)(nil)).Elem()
}

func (o InstanceV2EngineListArrayOutput) ToInstanceV2EngineListArrayOutput() InstanceV2EngineListArrayOutput {
	return o
}

func (o InstanceV2EngineListArrayOutput) ToInstanceV2EngineListArrayOutputWithContext(ctx context.Context) InstanceV2EngineListArrayOutput {
	return o
}

func (o InstanceV2EngineListArrayOutput) Index(i pulumi.IntInput) InstanceV2EngineListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceV2EngineList {
		return vs[0].([]InstanceV2EngineList)[vs[1].(int)]
	}).(InstanceV2EngineListOutput)
}

type InstanceV2EngineListConnectAddressList struct {
	// Connect Address
	Address *string `pulumi:"address"`
	// Connect Port
	Port *string `pulumi:"port"`
	// Connect Type:
	Type *string `pulumi:"type"`
}

// InstanceV2EngineListConnectAddressListInput is an input type that accepts InstanceV2EngineListConnectAddressListArgs and InstanceV2EngineListConnectAddressListOutput values.
// You can construct a concrete instance of `InstanceV2EngineListConnectAddressListInput` via:
//
//	InstanceV2EngineListConnectAddressListArgs{...}
type InstanceV2EngineListConnectAddressListInput interface {
	pulumi.Input

	ToInstanceV2EngineListConnectAddressListOutput() InstanceV2EngineListConnectAddressListOutput
	ToInstanceV2EngineListConnectAddressListOutputWithContext(context.Context) InstanceV2EngineListConnectAddressListOutput
}

type InstanceV2EngineListConnectAddressListArgs struct {
	// Connect Address
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Connect Port
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Connect Type:
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InstanceV2EngineListConnectAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineListConnectAddressList)(nil)).Elem()
}

func (i InstanceV2EngineListConnectAddressListArgs) ToInstanceV2EngineListConnectAddressListOutput() InstanceV2EngineListConnectAddressListOutput {
	return i.ToInstanceV2EngineListConnectAddressListOutputWithContext(context.Background())
}

func (i InstanceV2EngineListConnectAddressListArgs) ToInstanceV2EngineListConnectAddressListOutputWithContext(ctx context.Context) InstanceV2EngineListConnectAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListConnectAddressListOutput)
}

// InstanceV2EngineListConnectAddressListArrayInput is an input type that accepts InstanceV2EngineListConnectAddressListArray and InstanceV2EngineListConnectAddressListArrayOutput values.
// You can construct a concrete instance of `InstanceV2EngineListConnectAddressListArrayInput` via:
//
//	InstanceV2EngineListConnectAddressListArray{ InstanceV2EngineListConnectAddressListArgs{...} }
type InstanceV2EngineListConnectAddressListArrayInput interface {
	pulumi.Input

	ToInstanceV2EngineListConnectAddressListArrayOutput() InstanceV2EngineListConnectAddressListArrayOutput
	ToInstanceV2EngineListConnectAddressListArrayOutputWithContext(context.Context) InstanceV2EngineListConnectAddressListArrayOutput
}

type InstanceV2EngineListConnectAddressListArray []InstanceV2EngineListConnectAddressListInput

func (InstanceV2EngineListConnectAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineListConnectAddressList)(nil)).Elem()
}

func (i InstanceV2EngineListConnectAddressListArray) ToInstanceV2EngineListConnectAddressListArrayOutput() InstanceV2EngineListConnectAddressListArrayOutput {
	return i.ToInstanceV2EngineListConnectAddressListArrayOutputWithContext(context.Background())
}

func (i InstanceV2EngineListConnectAddressListArray) ToInstanceV2EngineListConnectAddressListArrayOutputWithContext(ctx context.Context) InstanceV2EngineListConnectAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListConnectAddressListArrayOutput)
}

type InstanceV2EngineListConnectAddressListOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListConnectAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineListConnectAddressList)(nil)).Elem()
}

func (o InstanceV2EngineListConnectAddressListOutput) ToInstanceV2EngineListConnectAddressListOutput() InstanceV2EngineListConnectAddressListOutput {
	return o
}

func (o InstanceV2EngineListConnectAddressListOutput) ToInstanceV2EngineListConnectAddressListOutputWithContext(ctx context.Context) InstanceV2EngineListConnectAddressListOutput {
	return o
}

// Connect Address
func (o InstanceV2EngineListConnectAddressListOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListConnectAddressList) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Connect Port
func (o InstanceV2EngineListConnectAddressListOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListConnectAddressList) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Connect Type:
func (o InstanceV2EngineListConnectAddressListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListConnectAddressList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InstanceV2EngineListConnectAddressListArrayOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListConnectAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineListConnectAddressList)(nil)).Elem()
}

func (o InstanceV2EngineListConnectAddressListArrayOutput) ToInstanceV2EngineListConnectAddressListArrayOutput() InstanceV2EngineListConnectAddressListArrayOutput {
	return o
}

func (o InstanceV2EngineListConnectAddressListArrayOutput) ToInstanceV2EngineListConnectAddressListArrayOutputWithContext(ctx context.Context) InstanceV2EngineListConnectAddressListArrayOutput {
	return o
}

func (o InstanceV2EngineListConnectAddressListArrayOutput) Index(i pulumi.IntInput) InstanceV2EngineListConnectAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceV2EngineListConnectAddressList {
		return vs[0].([]InstanceV2EngineListConnectAddressList)[vs[1].(int)]
	}).(InstanceV2EngineListConnectAddressListOutput)
}

type InstanceV2EngineListNodeGroup struct {
	// Node Type
	Category *string `pulumi:"category"`
	// Number of CPU cores
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// Whether to mount  local cloud disks
	EnableAttachLocalDisk *bool `pulumi:"enableAttachLocalDisk"`
	// Node memory size
	MemorySizeGiB *int `pulumi:"memorySizeGiB"`
	// Number of nodes
	NodeCount int `pulumi:"nodeCount"`
	// Local cloud disk storage capacity
	NodeDiskSize *int `pulumi:"nodeDiskSize"`
	// Node Disk Type
	NodeDiskType *string `pulumi:"nodeDiskType"`
	// Node Specifications
	NodeSpec string `pulumi:"nodeSpec"`
	// Resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Spec Id
	SpecId *string `pulumi:"specId"`
	// Node Status
	Status *string `pulumi:"status"`
}

// InstanceV2EngineListNodeGroupInput is an input type that accepts InstanceV2EngineListNodeGroupArgs and InstanceV2EngineListNodeGroupOutput values.
// You can construct a concrete instance of `InstanceV2EngineListNodeGroupInput` via:
//
//	InstanceV2EngineListNodeGroupArgs{...}
type InstanceV2EngineListNodeGroupInput interface {
	pulumi.Input

	ToInstanceV2EngineListNodeGroupOutput() InstanceV2EngineListNodeGroupOutput
	ToInstanceV2EngineListNodeGroupOutputWithContext(context.Context) InstanceV2EngineListNodeGroupOutput
}

type InstanceV2EngineListNodeGroupArgs struct {
	// Node Type
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Number of CPU cores
	CpuCoreCount pulumi.IntPtrInput `pulumi:"cpuCoreCount"`
	// Whether to mount  local cloud disks
	EnableAttachLocalDisk pulumi.BoolPtrInput `pulumi:"enableAttachLocalDisk"`
	// Node memory size
	MemorySizeGiB pulumi.IntPtrInput `pulumi:"memorySizeGiB"`
	// Number of nodes
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Local cloud disk storage capacity
	NodeDiskSize pulumi.IntPtrInput `pulumi:"nodeDiskSize"`
	// Node Disk Type
	NodeDiskType pulumi.StringPtrInput `pulumi:"nodeDiskType"`
	// Node Specifications
	NodeSpec pulumi.StringInput `pulumi:"nodeSpec"`
	// Resource group name
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Spec Id
	SpecId pulumi.StringPtrInput `pulumi:"specId"`
	// Node Status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InstanceV2EngineListNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineListNodeGroup)(nil)).Elem()
}

func (i InstanceV2EngineListNodeGroupArgs) ToInstanceV2EngineListNodeGroupOutput() InstanceV2EngineListNodeGroupOutput {
	return i.ToInstanceV2EngineListNodeGroupOutputWithContext(context.Background())
}

func (i InstanceV2EngineListNodeGroupArgs) ToInstanceV2EngineListNodeGroupOutputWithContext(ctx context.Context) InstanceV2EngineListNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListNodeGroupOutput)
}

// InstanceV2EngineListNodeGroupArrayInput is an input type that accepts InstanceV2EngineListNodeGroupArray and InstanceV2EngineListNodeGroupArrayOutput values.
// You can construct a concrete instance of `InstanceV2EngineListNodeGroupArrayInput` via:
//
//	InstanceV2EngineListNodeGroupArray{ InstanceV2EngineListNodeGroupArgs{...} }
type InstanceV2EngineListNodeGroupArrayInput interface {
	pulumi.Input

	ToInstanceV2EngineListNodeGroupArrayOutput() InstanceV2EngineListNodeGroupArrayOutput
	ToInstanceV2EngineListNodeGroupArrayOutputWithContext(context.Context) InstanceV2EngineListNodeGroupArrayOutput
}

type InstanceV2EngineListNodeGroupArray []InstanceV2EngineListNodeGroupInput

func (InstanceV2EngineListNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineListNodeGroup)(nil)).Elem()
}

func (i InstanceV2EngineListNodeGroupArray) ToInstanceV2EngineListNodeGroupArrayOutput() InstanceV2EngineListNodeGroupArrayOutput {
	return i.ToInstanceV2EngineListNodeGroupArrayOutputWithContext(context.Background())
}

func (i InstanceV2EngineListNodeGroupArray) ToInstanceV2EngineListNodeGroupArrayOutputWithContext(ctx context.Context) InstanceV2EngineListNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2EngineListNodeGroupArrayOutput)
}

type InstanceV2EngineListNodeGroupOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceV2EngineListNodeGroup)(nil)).Elem()
}

func (o InstanceV2EngineListNodeGroupOutput) ToInstanceV2EngineListNodeGroupOutput() InstanceV2EngineListNodeGroupOutput {
	return o
}

func (o InstanceV2EngineListNodeGroupOutput) ToInstanceV2EngineListNodeGroupOutputWithContext(ctx context.Context) InstanceV2EngineListNodeGroupOutput {
	return o
}

// Node Type
func (o InstanceV2EngineListNodeGroupOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Number of CPU cores
func (o InstanceV2EngineListNodeGroupOutput) CpuCoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *int { return v.CpuCoreCount }).(pulumi.IntPtrOutput)
}

// Whether to mount  local cloud disks
func (o InstanceV2EngineListNodeGroupOutput) EnableAttachLocalDisk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *bool { return v.EnableAttachLocalDisk }).(pulumi.BoolPtrOutput)
}

// Node memory size
func (o InstanceV2EngineListNodeGroupOutput) MemorySizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *int { return v.MemorySizeGiB }).(pulumi.IntPtrOutput)
}

// Number of nodes
func (o InstanceV2EngineListNodeGroupOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Local cloud disk storage capacity
func (o InstanceV2EngineListNodeGroupOutput) NodeDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *int { return v.NodeDiskSize }).(pulumi.IntPtrOutput)
}

// Node Disk Type
func (o InstanceV2EngineListNodeGroupOutput) NodeDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *string { return v.NodeDiskType }).(pulumi.StringPtrOutput)
}

// Node Specifications
func (o InstanceV2EngineListNodeGroupOutput) NodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) string { return v.NodeSpec }).(pulumi.StringOutput)
}

// Resource group name
func (o InstanceV2EngineListNodeGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Spec Id
func (o InstanceV2EngineListNodeGroupOutput) SpecId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *string { return v.SpecId }).(pulumi.StringPtrOutput)
}

// Node Status
func (o InstanceV2EngineListNodeGroupOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceV2EngineListNodeGroup) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InstanceV2EngineListNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceV2EngineListNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceV2EngineListNodeGroup)(nil)).Elem()
}

func (o InstanceV2EngineListNodeGroupArrayOutput) ToInstanceV2EngineListNodeGroupArrayOutput() InstanceV2EngineListNodeGroupArrayOutput {
	return o
}

func (o InstanceV2EngineListNodeGroupArrayOutput) ToInstanceV2EngineListNodeGroupArrayOutputWithContext(ctx context.Context) InstanceV2EngineListNodeGroupArrayOutput {
	return o
}

func (o InstanceV2EngineListNodeGroupArrayOutput) Index(i pulumi.IntInput) InstanceV2EngineListNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceV2EngineListNodeGroup {
		return vs[0].([]InstanceV2EngineListNodeGroup)[vs[1].(int)]
	}).(InstanceV2EngineListNodeGroupOutput)
}

type GetInstancesInstance struct {
	// AutoRenew.
	AutoRenew string `pulumi:"autoRenew"`
	// The cold storage capacity of the instance. Unit: GB.
	ColdStorage int `pulumi:"coldStorage"`
	// The creation date of Instance.
	CreateTime string `pulumi:"createTime"`
	// The deletion protection of instance.
	DeletionProection bool `pulumi:"deletionProection"`
	// The disk type of instance. Valid values: `capacityCloudStorage`, `cloudEfficiency`, `cloudEssd`, `cloudSsd`.
	DiskCategory string `pulumi:"diskCategory"`
	// The usage of disk.
	DiskUsage string `pulumi:"diskUsage"`
	// The threshold of disk.
	DiskWarningThreshold string `pulumi:"diskWarningThreshold"`
	// The type of Instance engine .
	EngineType int `pulumi:"engineType"`
	// The expiration time of Instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// The count of file engine.
	FileEngineNodeCount int `pulumi:"fileEngineNodeCount"`
	// The specification of file engine. Valid values: `lindorm.c.xlarge`.
	FileEngineSpecification string `pulumi:"fileEngineSpecification"`
	// The ID of the Instance.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName string `pulumi:"instanceName"`
	// The storage capacity of the instance. Unit: GB. For example, the value 50 indicates 50 GB.
	InstanceStorage string `pulumi:"instanceStorage"`
	// The ip white list of instance.
	IpWhiteLists []string `pulumi:"ipWhiteLists"`
	// The count of lindorm tunnel service.
	LtsNodeCount int `pulumi:"ltsNodeCount"`
	// The specification of lindorm tunnel service. Valid values: `lindorm.g.2xlarge`, `lindorm.g.xlarge`.
	LtsNodeSpecification string `pulumi:"ltsNodeSpecification"`
	// Instance network type, enumerative.VPC.
	NetworkType string `pulumi:"networkType"`
	// The billing method. Valid values: `PayAsYouGo` and `Subscription`.
	PaymentType string `pulumi:"paymentType"`
	// The count of phoenix.
	PhoenixNodeCount int `pulumi:"phoenixNodeCount"`
	// The specification of phoenix. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	PhoenixNodeSpecification string `pulumi:"phoenixNodeSpecification"`
	// The owner id of resource.
	ResourceOwnerId string `pulumi:"resourceOwnerId"`
	// The count of search engine.
	SearchEngineNodeCount int `pulumi:"searchEngineNodeCount"`
	// The specification of search engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	SearchEngineSpecification string `pulumi:"searchEngineSpecification"`
	// The service type of Instance, Valid values:  `lindorm`, `serverlessLindorm`, `lindormStandalone`.
	ServiceType string `pulumi:"serviceType"`
	// The status of Instance, enumerative: Valid values: `ACTIVATION`, `DELETED`, `CREATING`, `CLASS_CHANGING`, `LOCKED`, `INSTANCE_LEVEL_MODIFY`, `NET_MODIFYING`, `RESIZING`, `RESTARTING`, `MINOR_VERSION_TRANSING`.
	Status string `pulumi:"status"`
	// The count of table engine.
	TableEngineNodeCount int `pulumi:"tableEngineNodeCount"`
	// The specification of  table engine. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	TableEngineSpecification string `pulumi:"tableEngineSpecification"`
	// The count of time series engine.
	TimeSeriesEngineNodeCount int `pulumi:"timeSeriesEngineNodeCount"`
	// The specification of time series engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	TimeSeriresEngineSpecification string `pulumi:"timeSeriresEngineSpecification"`
	// The ID of the virtual private cloud (VPC) that is connected to the instance.
	VpcId string `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The zone ID of the instance.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// AutoRenew.
	AutoRenew pulumi.StringInput `pulumi:"autoRenew"`
	// The cold storage capacity of the instance. Unit: GB.
	ColdStorage pulumi.IntInput `pulumi:"coldStorage"`
	// The creation date of Instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The deletion protection of instance.
	DeletionProection pulumi.BoolInput `pulumi:"deletionProection"`
	// The disk type of instance. Valid values: `capacityCloudStorage`, `cloudEfficiency`, `cloudEssd`, `cloudSsd`.
	DiskCategory pulumi.StringInput `pulumi:"diskCategory"`
	// The usage of disk.
	DiskUsage pulumi.StringInput `pulumi:"diskUsage"`
	// The threshold of disk.
	DiskWarningThreshold pulumi.StringInput `pulumi:"diskWarningThreshold"`
	// The type of Instance engine .
	EngineType pulumi.IntInput `pulumi:"engineType"`
	// The expiration time of Instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The count of file engine.
	FileEngineNodeCount pulumi.IntInput `pulumi:"fileEngineNodeCount"`
	// The specification of file engine. Valid values: `lindorm.c.xlarge`.
	FileEngineSpecification pulumi.StringInput `pulumi:"fileEngineSpecification"`
	// The ID of the Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The storage capacity of the instance. Unit: GB. For example, the value 50 indicates 50 GB.
	InstanceStorage pulumi.StringInput `pulumi:"instanceStorage"`
	// The ip white list of instance.
	IpWhiteLists pulumi.StringArrayInput `pulumi:"ipWhiteLists"`
	// The count of lindorm tunnel service.
	LtsNodeCount pulumi.IntInput `pulumi:"ltsNodeCount"`
	// The specification of lindorm tunnel service. Valid values: `lindorm.g.2xlarge`, `lindorm.g.xlarge`.
	LtsNodeSpecification pulumi.StringInput `pulumi:"ltsNodeSpecification"`
	// Instance network type, enumerative.VPC.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The billing method. Valid values: `PayAsYouGo` and `Subscription`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The count of phoenix.
	PhoenixNodeCount pulumi.IntInput `pulumi:"phoenixNodeCount"`
	// The specification of phoenix. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	PhoenixNodeSpecification pulumi.StringInput `pulumi:"phoenixNodeSpecification"`
	// The owner id of resource.
	ResourceOwnerId pulumi.StringInput `pulumi:"resourceOwnerId"`
	// The count of search engine.
	SearchEngineNodeCount pulumi.IntInput `pulumi:"searchEngineNodeCount"`
	// The specification of search engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	SearchEngineSpecification pulumi.StringInput `pulumi:"searchEngineSpecification"`
	// The service type of Instance, Valid values:  `lindorm`, `serverlessLindorm`, `lindormStandalone`.
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The status of Instance, enumerative: Valid values: `ACTIVATION`, `DELETED`, `CREATING`, `CLASS_CHANGING`, `LOCKED`, `INSTANCE_LEVEL_MODIFY`, `NET_MODIFYING`, `RESIZING`, `RESTARTING`, `MINOR_VERSION_TRANSING`.
	Status pulumi.StringInput `pulumi:"status"`
	// The count of table engine.
	TableEngineNodeCount pulumi.IntInput `pulumi:"tableEngineNodeCount"`
	// The specification of  table engine. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	TableEngineSpecification pulumi.StringInput `pulumi:"tableEngineSpecification"`
	// The count of time series engine.
	TimeSeriesEngineNodeCount pulumi.IntInput `pulumi:"timeSeriesEngineNodeCount"`
	// The specification of time series engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
	TimeSeriresEngineSpecification pulumi.StringInput `pulumi:"timeSeriresEngineSpecification"`
	// The ID of the virtual private cloud (VPC) that is connected to the instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The zone ID of the instance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// AutoRenew.
func (o GetInstancesInstanceOutput) AutoRenew() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.AutoRenew }).(pulumi.StringOutput)
}

// The cold storage capacity of the instance. Unit: GB.
func (o GetInstancesInstanceOutput) ColdStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ColdStorage }).(pulumi.IntOutput)
}

// The creation date of Instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The deletion protection of instance.
func (o GetInstancesInstanceOutput) DeletionProection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.DeletionProection }).(pulumi.BoolOutput)
}

// The disk type of instance. Valid values: `capacityCloudStorage`, `cloudEfficiency`, `cloudEssd`, `cloudSsd`.
func (o GetInstancesInstanceOutput) DiskCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DiskCategory }).(pulumi.StringOutput)
}

// The usage of disk.
func (o GetInstancesInstanceOutput) DiskUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DiskUsage }).(pulumi.StringOutput)
}

// The threshold of disk.
func (o GetInstancesInstanceOutput) DiskWarningThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DiskWarningThreshold }).(pulumi.StringOutput)
}

// The type of Instance engine .
func (o GetInstancesInstanceOutput) EngineType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.EngineType }).(pulumi.IntOutput)
}

// The expiration time of Instance.
func (o GetInstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The count of file engine.
func (o GetInstancesInstanceOutput) FileEngineNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.FileEngineNodeCount }).(pulumi.IntOutput)
}

// The specification of file engine. Valid values: `lindorm.c.xlarge`.
func (o GetInstancesInstanceOutput) FileEngineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.FileEngineSpecification }).(pulumi.StringOutput)
}

// The ID of the Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the instance.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The storage capacity of the instance. Unit: GB. For example, the value 50 indicates 50 GB.
func (o GetInstancesInstanceOutput) InstanceStorage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceStorage }).(pulumi.StringOutput)
}

// The ip white list of instance.
func (o GetInstancesInstanceOutput) IpWhiteLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.IpWhiteLists }).(pulumi.StringArrayOutput)
}

// The count of lindorm tunnel service.
func (o GetInstancesInstanceOutput) LtsNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.LtsNodeCount }).(pulumi.IntOutput)
}

// The specification of lindorm tunnel service. Valid values: `lindorm.g.2xlarge`, `lindorm.g.xlarge`.
func (o GetInstancesInstanceOutput) LtsNodeSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.LtsNodeSpecification }).(pulumi.StringOutput)
}

// Instance network type, enumerative.VPC.
func (o GetInstancesInstanceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The billing method. Valid values: `PayAsYouGo` and `Subscription`.
func (o GetInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The count of phoenix.
func (o GetInstancesInstanceOutput) PhoenixNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.PhoenixNodeCount }).(pulumi.IntOutput)
}

// The specification of phoenix. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
func (o GetInstancesInstanceOutput) PhoenixNodeSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PhoenixNodeSpecification }).(pulumi.StringOutput)
}

// The owner id of resource.
func (o GetInstancesInstanceOutput) ResourceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ResourceOwnerId }).(pulumi.StringOutput)
}

// The count of search engine.
func (o GetInstancesInstanceOutput) SearchEngineNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.SearchEngineNodeCount }).(pulumi.IntOutput)
}

// The specification of search engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
func (o GetInstancesInstanceOutput) SearchEngineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SearchEngineSpecification }).(pulumi.StringOutput)
}

// The service type of Instance, Valid values:  `lindorm`, `serverlessLindorm`, `lindormStandalone`.
func (o GetInstancesInstanceOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The status of Instance, enumerative: Valid values: `ACTIVATION`, `DELETED`, `CREATING`, `CLASS_CHANGING`, `LOCKED`, `INSTANCE_LEVEL_MODIFY`, `NET_MODIFYING`, `RESIZING`, `RESTARTING`, `MINOR_VERSION_TRANSING`.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The count of table engine.
func (o GetInstancesInstanceOutput) TableEngineNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.TableEngineNodeCount }).(pulumi.IntOutput)
}

// The specification of  table engine. Valid values: `lindorm.c.2xlarge`, `lindorm.c.4xlarge`, `lindorm.c.8xlarge`, `lindorm.c.xlarge`, `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
func (o GetInstancesInstanceOutput) TableEngineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TableEngineSpecification }).(pulumi.StringOutput)
}

// The count of time series engine.
func (o GetInstancesInstanceOutput) TimeSeriesEngineNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.TimeSeriesEngineNodeCount }).(pulumi.IntOutput)
}

// The specification of time series engine. Valid values: `lindorm.g.2xlarge`, `lindorm.g.4xlarge`, `lindorm.g.8xlarge`, `lindorm.g.xlarge`.
func (o GetInstancesInstanceOutput) TimeSeriresEngineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TimeSeriresEngineSpecification }).(pulumi.StringOutput)
}

// The ID of the virtual private cloud (VPC) that is connected to the instance.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The zone ID of the instance.
func (o GetInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListInput)(nil)).Elem(), InstanceV2EngineListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListArrayInput)(nil)).Elem(), InstanceV2EngineListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListConnectAddressListInput)(nil)).Elem(), InstanceV2EngineListConnectAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListConnectAddressListArrayInput)(nil)).Elem(), InstanceV2EngineListConnectAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListNodeGroupInput)(nil)).Elem(), InstanceV2EngineListNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2EngineListNodeGroupArrayInput)(nil)).Elem(), InstanceV2EngineListNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterOutputType(InstanceV2EngineListOutput{})
	pulumi.RegisterOutputType(InstanceV2EngineListArrayOutput{})
	pulumi.RegisterOutputType(InstanceV2EngineListConnectAddressListOutput{})
	pulumi.RegisterOutputType(InstanceV2EngineListConnectAddressListArrayOutput{})
	pulumi.RegisterOutputType(InstanceV2EngineListNodeGroupOutput{})
	pulumi.RegisterOutputType(InstanceV2EngineListNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
}
