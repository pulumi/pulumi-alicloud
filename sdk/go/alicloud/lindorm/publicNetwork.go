// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lindorm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Lindorm Public Network can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:lindorm/publicNetwork:PublicNetwork example <id>
// ```
type PublicNetwork struct {
	pulumi.CustomResourceState

	// Open or close the public connection. Value:
	EnablePublicNetwork pulumi.IntPtrOutput `pulumi:"enablePublicNetwork"`
	// Engine type, value:
	EngineType pulumi.StringOutput `pulumi:"engineType"`
	// Instance ID
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewPublicNetwork registers a new resource with the given unique name, arguments, and options.
func NewPublicNetwork(ctx *pulumi.Context,
	name string, args *PublicNetworkArgs, opts ...pulumi.ResourceOption) (*PublicNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineType == nil {
		return nil, errors.New("invalid value for required argument 'EngineType'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicNetwork
	err := ctx.RegisterResource("alicloud:lindorm/publicNetwork:PublicNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicNetwork gets an existing PublicNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicNetworkState, opts ...pulumi.ResourceOption) (*PublicNetwork, error) {
	var resource PublicNetwork
	err := ctx.ReadResource("alicloud:lindorm/publicNetwork:PublicNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicNetwork resources.
type publicNetworkState struct {
	// Open or close the public connection. Value:
	EnablePublicNetwork *int `pulumi:"enablePublicNetwork"`
	// Engine type, value:
	EngineType *string `pulumi:"engineType"`
	// Instance ID
	InstanceId *string `pulumi:"instanceId"`
	// Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
	Status *string `pulumi:"status"`
}

type PublicNetworkState struct {
	// Open or close the public connection. Value:
	EnablePublicNetwork pulumi.IntPtrInput
	// Engine type, value:
	EngineType pulumi.StringPtrInput
	// Instance ID
	InstanceId pulumi.StringPtrInput
	// Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
	Status pulumi.StringPtrInput
}

func (PublicNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicNetworkState)(nil)).Elem()
}

type publicNetworkArgs struct {
	// Open or close the public connection. Value:
	EnablePublicNetwork *int `pulumi:"enablePublicNetwork"`
	// Engine type, value:
	EngineType string `pulumi:"engineType"`
	// Instance ID
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a PublicNetwork resource.
type PublicNetworkArgs struct {
	// Open or close the public connection. Value:
	EnablePublicNetwork pulumi.IntPtrInput
	// Engine type, value:
	EngineType pulumi.StringInput
	// Instance ID
	InstanceId pulumi.StringInput
}

func (PublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicNetworkArgs)(nil)).Elem()
}

type PublicNetworkInput interface {
	pulumi.Input

	ToPublicNetworkOutput() PublicNetworkOutput
	ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput
}

func (*PublicNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetwork)(nil)).Elem()
}

func (i *PublicNetwork) ToPublicNetworkOutput() PublicNetworkOutput {
	return i.ToPublicNetworkOutputWithContext(context.Background())
}

func (i *PublicNetwork) ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkOutput)
}

// PublicNetworkArrayInput is an input type that accepts PublicNetworkArray and PublicNetworkArrayOutput values.
// You can construct a concrete instance of `PublicNetworkArrayInput` via:
//
//	PublicNetworkArray{ PublicNetworkArgs{...} }
type PublicNetworkArrayInput interface {
	pulumi.Input

	ToPublicNetworkArrayOutput() PublicNetworkArrayOutput
	ToPublicNetworkArrayOutputWithContext(context.Context) PublicNetworkArrayOutput
}

type PublicNetworkArray []PublicNetworkInput

func (PublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicNetwork)(nil)).Elem()
}

func (i PublicNetworkArray) ToPublicNetworkArrayOutput() PublicNetworkArrayOutput {
	return i.ToPublicNetworkArrayOutputWithContext(context.Background())
}

func (i PublicNetworkArray) ToPublicNetworkArrayOutputWithContext(ctx context.Context) PublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkArrayOutput)
}

// PublicNetworkMapInput is an input type that accepts PublicNetworkMap and PublicNetworkMapOutput values.
// You can construct a concrete instance of `PublicNetworkMapInput` via:
//
//	PublicNetworkMap{ "key": PublicNetworkArgs{...} }
type PublicNetworkMapInput interface {
	pulumi.Input

	ToPublicNetworkMapOutput() PublicNetworkMapOutput
	ToPublicNetworkMapOutputWithContext(context.Context) PublicNetworkMapOutput
}

type PublicNetworkMap map[string]PublicNetworkInput

func (PublicNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicNetwork)(nil)).Elem()
}

func (i PublicNetworkMap) ToPublicNetworkMapOutput() PublicNetworkMapOutput {
	return i.ToPublicNetworkMapOutputWithContext(context.Background())
}

func (i PublicNetworkMap) ToPublicNetworkMapOutputWithContext(ctx context.Context) PublicNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkMapOutput)
}

type PublicNetworkOutput struct{ *pulumi.OutputState }

func (PublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkOutput) ToPublicNetworkOutput() PublicNetworkOutput {
	return o
}

func (o PublicNetworkOutput) ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput {
	return o
}

// Open or close the public connection. Value:
func (o PublicNetworkOutput) EnablePublicNetwork() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.IntPtrOutput { return v.EnablePublicNetwork }).(pulumi.IntPtrOutput)
}

// Engine type, value:
func (o PublicNetworkOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.EngineType }).(pulumi.StringOutput)
}

// Instance ID
func (o PublicNetworkOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance status, returns:_EXPANDING`: Capacity-based cloud storage is being expanded._version_transing`: The minor version is being upgraded._CHANGING`: The specification is being upgraded or downgraded._SWITCHING`:SSL is being changed._OPENING`: The data subscription function is being activated._TRANSFER`: migrates data to the database._CREATING`: in the production disaster recovery instance._RECOVERING`: The backup is being restored._IMPORTING`: Data is being imported._MODIFYING`: The network is being changed._SWITCHING`: The internal network and the external network are being switched._CREATING`: creates a network link._DELETING`: deletes a network link.
func (o PublicNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type PublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (PublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkArrayOutput) ToPublicNetworkArrayOutput() PublicNetworkArrayOutput {
	return o
}

func (o PublicNetworkArrayOutput) ToPublicNetworkArrayOutputWithContext(ctx context.Context) PublicNetworkArrayOutput {
	return o
}

func (o PublicNetworkArrayOutput) Index(i pulumi.IntInput) PublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicNetwork {
		return vs[0].([]*PublicNetwork)[vs[1].(int)]
	}).(PublicNetworkOutput)
}

type PublicNetworkMapOutput struct{ *pulumi.OutputState }

func (PublicNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkMapOutput) ToPublicNetworkMapOutput() PublicNetworkMapOutput {
	return o
}

func (o PublicNetworkMapOutput) ToPublicNetworkMapOutputWithContext(ctx context.Context) PublicNetworkMapOutput {
	return o
}

func (o PublicNetworkMapOutput) MapIndex(k pulumi.StringInput) PublicNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicNetwork {
		return vs[0].(map[string]*PublicNetwork)[vs[1].(string)]
	}).(PublicNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkInput)(nil)).Elem(), &PublicNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkArrayInput)(nil)).Elem(), PublicNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkMapInput)(nil)).Elem(), PublicNetworkMap{})
	pulumi.RegisterOutputType(PublicNetworkOutput{})
	pulumi.RegisterOutputType(PublicNetworkArrayOutput{})
	pulumi.RegisterOutputType(PublicNetworkMapOutput{})
}
