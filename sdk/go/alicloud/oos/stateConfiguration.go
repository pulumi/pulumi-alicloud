// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a OOS State Configuration resource.
//
// For information about OOS State Configuration and how to use it, see [What is State Configuration](https://www.alibabacloud.com/help/en/doc-detail/208728.html).
//
// > **NOTE:** Available in v1.147.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oos"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultResourceGroups, err := resourcemanager.GetResourceGroups(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = oos.NewStateConfiguration(ctx, "defaultStateConfiguration", &oos.StateConfigurationArgs{
// 			TemplateName:       pulumi.String("ACS-ECS-InventoryDataCollection"),
// 			ConfigureMode:      pulumi.String("ApplyOnly"),
// 			Description:        pulumi.Any(_var.Name),
// 			ScheduleType:       pulumi.String("rate"),
// 			ScheduleExpression: pulumi.String("1 hour"),
// 			ResourceGroupId:    pulumi.String(defaultResourceGroups.Ids[0]),
// 			Targets:            pulumi.String("{\"Filters\": [{\"Type\": \"All\", \"Parameters\": {\"InstanceChargeType\": \"PrePaid\"}}], \"ResourceType\": \"ALIYUN::ECS::Instance\"}"),
// 			Parameters:         pulumi.String("{\"policy\": {\"ACS:Application\": {\"Collection\": \"Enabled\"}}}"),
// 			Tags: pulumi.AnyMap{
// 				"Created": pulumi.Any("TF"),
// 				"For":     pulumi.Any("Test"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// OOS State Configuration can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:oos/stateConfiguration:StateConfiguration example <id>
// ```
type StateConfiguration struct {
	pulumi.CustomResourceState

	// Configuration mode. Valid values: `ApplyAndAutoCorrect`, `ApplyAndMonitor`, `ApplyOnly`.
	ConfigureMode pulumi.StringOutput `pulumi:"configureMode"`
	// The description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The parameter of the Template. This field is in the format of JSON strings. For detailed definition instructions, please refer to [Metadata types that are supported by a configuration list](https://www.alibabacloud.com/help/en/doc-detail/208276.html).
	Parameters pulumi.StringPtrOutput `pulumi:"parameters"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Timing expression.
	ScheduleExpression pulumi.StringOutput `pulumi:"scheduleExpression"`
	// Timing type. Valid values: `rate`.
	ScheduleType pulumi.StringOutput `pulumi:"scheduleType"`
	// The tag of the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The Target resources.  This field is in the format of JSON strings. For detailed definition instructions, please refer to [Parameter](https://www.alibabacloud.com/help/en/doc-detail/120674.html).
	Targets pulumi.StringOutput `pulumi:"targets"`
	// The name of the template.
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
	// The version number. If you do not specify this parameter, the system uses the latest version.
	TemplateVersion pulumi.StringOutput `pulumi:"templateVersion"`
}

// NewStateConfiguration registers a new resource with the given unique name, arguments, and options.
func NewStateConfiguration(ctx *pulumi.Context,
	name string, args *StateConfigurationArgs, opts ...pulumi.ResourceOption) (*StateConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScheduleExpression == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleExpression'")
	}
	if args.ScheduleType == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleType'")
	}
	if args.Targets == nil {
		return nil, errors.New("invalid value for required argument 'Targets'")
	}
	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	var resource StateConfiguration
	err := ctx.RegisterResource("alicloud:oos/stateConfiguration:StateConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStateConfiguration gets an existing StateConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStateConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StateConfigurationState, opts ...pulumi.ResourceOption) (*StateConfiguration, error) {
	var resource StateConfiguration
	err := ctx.ReadResource("alicloud:oos/stateConfiguration:StateConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StateConfiguration resources.
type stateConfigurationState struct {
	// Configuration mode. Valid values: `ApplyAndAutoCorrect`, `ApplyAndMonitor`, `ApplyOnly`.
	ConfigureMode *string `pulumi:"configureMode"`
	// The description of the resource.
	Description *string `pulumi:"description"`
	// The parameter of the Template. This field is in the format of JSON strings. For detailed definition instructions, please refer to [Metadata types that are supported by a configuration list](https://www.alibabacloud.com/help/en/doc-detail/208276.html).
	Parameters *string `pulumi:"parameters"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Timing expression.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// Timing type. Valid values: `rate`.
	ScheduleType *string `pulumi:"scheduleType"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The Target resources.  This field is in the format of JSON strings. For detailed definition instructions, please refer to [Parameter](https://www.alibabacloud.com/help/en/doc-detail/120674.html).
	Targets *string `pulumi:"targets"`
	// The name of the template.
	TemplateName *string `pulumi:"templateName"`
	// The version number. If you do not specify this parameter, the system uses the latest version.
	TemplateVersion *string `pulumi:"templateVersion"`
}

type StateConfigurationState struct {
	// Configuration mode. Valid values: `ApplyAndAutoCorrect`, `ApplyAndMonitor`, `ApplyOnly`.
	ConfigureMode pulumi.StringPtrInput
	// The description of the resource.
	Description pulumi.StringPtrInput
	// The parameter of the Template. This field is in the format of JSON strings. For detailed definition instructions, please refer to [Metadata types that are supported by a configuration list](https://www.alibabacloud.com/help/en/doc-detail/208276.html).
	Parameters pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Timing expression.
	ScheduleExpression pulumi.StringPtrInput
	// Timing type. Valid values: `rate`.
	ScheduleType pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.MapInput
	// The Target resources.  This field is in the format of JSON strings. For detailed definition instructions, please refer to [Parameter](https://www.alibabacloud.com/help/en/doc-detail/120674.html).
	Targets pulumi.StringPtrInput
	// The name of the template.
	TemplateName pulumi.StringPtrInput
	// The version number. If you do not specify this parameter, the system uses the latest version.
	TemplateVersion pulumi.StringPtrInput
}

func (StateConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*stateConfigurationState)(nil)).Elem()
}

type stateConfigurationArgs struct {
	// Configuration mode. Valid values: `ApplyAndAutoCorrect`, `ApplyAndMonitor`, `ApplyOnly`.
	ConfigureMode *string `pulumi:"configureMode"`
	// The description of the resource.
	Description *string `pulumi:"description"`
	// The parameter of the Template. This field is in the format of JSON strings. For detailed definition instructions, please refer to [Metadata types that are supported by a configuration list](https://www.alibabacloud.com/help/en/doc-detail/208276.html).
	Parameters *string `pulumi:"parameters"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Timing expression.
	ScheduleExpression string `pulumi:"scheduleExpression"`
	// Timing type. Valid values: `rate`.
	ScheduleType string `pulumi:"scheduleType"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The Target resources.  This field is in the format of JSON strings. For detailed definition instructions, please refer to [Parameter](https://www.alibabacloud.com/help/en/doc-detail/120674.html).
	Targets string `pulumi:"targets"`
	// The name of the template.
	TemplateName string `pulumi:"templateName"`
	// The version number. If you do not specify this parameter, the system uses the latest version.
	TemplateVersion *string `pulumi:"templateVersion"`
}

// The set of arguments for constructing a StateConfiguration resource.
type StateConfigurationArgs struct {
	// Configuration mode. Valid values: `ApplyAndAutoCorrect`, `ApplyAndMonitor`, `ApplyOnly`.
	ConfigureMode pulumi.StringPtrInput
	// The description of the resource.
	Description pulumi.StringPtrInput
	// The parameter of the Template. This field is in the format of JSON strings. For detailed definition instructions, please refer to [Metadata types that are supported by a configuration list](https://www.alibabacloud.com/help/en/doc-detail/208276.html).
	Parameters pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Timing expression.
	ScheduleExpression pulumi.StringInput
	// Timing type. Valid values: `rate`.
	ScheduleType pulumi.StringInput
	// The tag of the resource.
	Tags pulumi.MapInput
	// The Target resources.  This field is in the format of JSON strings. For detailed definition instructions, please refer to [Parameter](https://www.alibabacloud.com/help/en/doc-detail/120674.html).
	Targets pulumi.StringInput
	// The name of the template.
	TemplateName pulumi.StringInput
	// The version number. If you do not specify this parameter, the system uses the latest version.
	TemplateVersion pulumi.StringPtrInput
}

func (StateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stateConfigurationArgs)(nil)).Elem()
}

type StateConfigurationInput interface {
	pulumi.Input

	ToStateConfigurationOutput() StateConfigurationOutput
	ToStateConfigurationOutputWithContext(ctx context.Context) StateConfigurationOutput
}

func (*StateConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**StateConfiguration)(nil)).Elem()
}

func (i *StateConfiguration) ToStateConfigurationOutput() StateConfigurationOutput {
	return i.ToStateConfigurationOutputWithContext(context.Background())
}

func (i *StateConfiguration) ToStateConfigurationOutputWithContext(ctx context.Context) StateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateConfigurationOutput)
}

// StateConfigurationArrayInput is an input type that accepts StateConfigurationArray and StateConfigurationArrayOutput values.
// You can construct a concrete instance of `StateConfigurationArrayInput` via:
//
//          StateConfigurationArray{ StateConfigurationArgs{...} }
type StateConfigurationArrayInput interface {
	pulumi.Input

	ToStateConfigurationArrayOutput() StateConfigurationArrayOutput
	ToStateConfigurationArrayOutputWithContext(context.Context) StateConfigurationArrayOutput
}

type StateConfigurationArray []StateConfigurationInput

func (StateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StateConfiguration)(nil)).Elem()
}

func (i StateConfigurationArray) ToStateConfigurationArrayOutput() StateConfigurationArrayOutput {
	return i.ToStateConfigurationArrayOutputWithContext(context.Background())
}

func (i StateConfigurationArray) ToStateConfigurationArrayOutputWithContext(ctx context.Context) StateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateConfigurationArrayOutput)
}

// StateConfigurationMapInput is an input type that accepts StateConfigurationMap and StateConfigurationMapOutput values.
// You can construct a concrete instance of `StateConfigurationMapInput` via:
//
//          StateConfigurationMap{ "key": StateConfigurationArgs{...} }
type StateConfigurationMapInput interface {
	pulumi.Input

	ToStateConfigurationMapOutput() StateConfigurationMapOutput
	ToStateConfigurationMapOutputWithContext(context.Context) StateConfigurationMapOutput
}

type StateConfigurationMap map[string]StateConfigurationInput

func (StateConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StateConfiguration)(nil)).Elem()
}

func (i StateConfigurationMap) ToStateConfigurationMapOutput() StateConfigurationMapOutput {
	return i.ToStateConfigurationMapOutputWithContext(context.Background())
}

func (i StateConfigurationMap) ToStateConfigurationMapOutputWithContext(ctx context.Context) StateConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateConfigurationMapOutput)
}

type StateConfigurationOutput struct{ *pulumi.OutputState }

func (StateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateConfiguration)(nil)).Elem()
}

func (o StateConfigurationOutput) ToStateConfigurationOutput() StateConfigurationOutput {
	return o
}

func (o StateConfigurationOutput) ToStateConfigurationOutputWithContext(ctx context.Context) StateConfigurationOutput {
	return o
}

type StateConfigurationArrayOutput struct{ *pulumi.OutputState }

func (StateConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StateConfiguration)(nil)).Elem()
}

func (o StateConfigurationArrayOutput) ToStateConfigurationArrayOutput() StateConfigurationArrayOutput {
	return o
}

func (o StateConfigurationArrayOutput) ToStateConfigurationArrayOutputWithContext(ctx context.Context) StateConfigurationArrayOutput {
	return o
}

func (o StateConfigurationArrayOutput) Index(i pulumi.IntInput) StateConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StateConfiguration {
		return vs[0].([]*StateConfiguration)[vs[1].(int)]
	}).(StateConfigurationOutput)
}

type StateConfigurationMapOutput struct{ *pulumi.OutputState }

func (StateConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StateConfiguration)(nil)).Elem()
}

func (o StateConfigurationMapOutput) ToStateConfigurationMapOutput() StateConfigurationMapOutput {
	return o
}

func (o StateConfigurationMapOutput) ToStateConfigurationMapOutputWithContext(ctx context.Context) StateConfigurationMapOutput {
	return o
}

func (o StateConfigurationMapOutput) MapIndex(k pulumi.StringInput) StateConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StateConfiguration {
		return vs[0].(map[string]*StateConfiguration)[vs[1].(string)]
	}).(StateConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StateConfigurationInput)(nil)).Elem(), &StateConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateConfigurationArrayInput)(nil)).Elem(), StateConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateConfigurationMapInput)(nil)).Elem(), StateConfigurationMap{})
	pulumi.RegisterOutputType(StateConfigurationOutput{})
	pulumi.RegisterOutputType(StateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(StateConfigurationMapOutput{})
}
