// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetApplicationGroupsGroup struct {
	// The name of the Application group.
	ApplicationGroupName string `pulumi:"applicationGroupName"`
	// The name of the Application.
	ApplicationName string `pulumi:"applicationName"`
	// The ID of the cloud monitor group.
	CmsGroupId string `pulumi:"cmsGroupId"`
	// The Creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The region ID of the deployment.
	DeployRegionId string `pulumi:"deployRegionId"`
	// Application group description information.
	Description string `pulumi:"description"`
	// The ID of the Application Group. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// Label key.
	ImportTagKey string `pulumi:"importTagKey"`
	// Label value.
	ImportTagValue string `pulumi:"importTagValue"`
	// The Update time of the resource.
	UpdateTime string `pulumi:"updateTime"`
}

// GetApplicationGroupsGroupInput is an input type that accepts GetApplicationGroupsGroupArgs and GetApplicationGroupsGroupOutput values.
// You can construct a concrete instance of `GetApplicationGroupsGroupInput` via:
//
//          GetApplicationGroupsGroupArgs{...}
type GetApplicationGroupsGroupInput interface {
	pulumi.Input

	ToGetApplicationGroupsGroupOutput() GetApplicationGroupsGroupOutput
	ToGetApplicationGroupsGroupOutputWithContext(context.Context) GetApplicationGroupsGroupOutput
}

type GetApplicationGroupsGroupArgs struct {
	// The name of the Application group.
	ApplicationGroupName pulumi.StringInput `pulumi:"applicationGroupName"`
	// The name of the Application.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// The ID of the cloud monitor group.
	CmsGroupId pulumi.StringInput `pulumi:"cmsGroupId"`
	// The Creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The region ID of the deployment.
	DeployRegionId pulumi.StringInput `pulumi:"deployRegionId"`
	// Application group description information.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Application Group. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// Label key.
	ImportTagKey pulumi.StringInput `pulumi:"importTagKey"`
	// Label value.
	ImportTagValue pulumi.StringInput `pulumi:"importTagValue"`
	// The Update time of the resource.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetApplicationGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGroupsGroup)(nil)).Elem()
}

func (i GetApplicationGroupsGroupArgs) ToGetApplicationGroupsGroupOutput() GetApplicationGroupsGroupOutput {
	return i.ToGetApplicationGroupsGroupOutputWithContext(context.Background())
}

func (i GetApplicationGroupsGroupArgs) ToGetApplicationGroupsGroupOutputWithContext(ctx context.Context) GetApplicationGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGroupsGroupOutput)
}

// GetApplicationGroupsGroupArrayInput is an input type that accepts GetApplicationGroupsGroupArray and GetApplicationGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetApplicationGroupsGroupArrayInput` via:
//
//          GetApplicationGroupsGroupArray{ GetApplicationGroupsGroupArgs{...} }
type GetApplicationGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetApplicationGroupsGroupArrayOutput() GetApplicationGroupsGroupArrayOutput
	ToGetApplicationGroupsGroupArrayOutputWithContext(context.Context) GetApplicationGroupsGroupArrayOutput
}

type GetApplicationGroupsGroupArray []GetApplicationGroupsGroupInput

func (GetApplicationGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGroupsGroup)(nil)).Elem()
}

func (i GetApplicationGroupsGroupArray) ToGetApplicationGroupsGroupArrayOutput() GetApplicationGroupsGroupArrayOutput {
	return i.ToGetApplicationGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetApplicationGroupsGroupArray) ToGetApplicationGroupsGroupArrayOutputWithContext(ctx context.Context) GetApplicationGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGroupsGroupArrayOutput)
}

type GetApplicationGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetApplicationGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGroupsGroup)(nil)).Elem()
}

func (o GetApplicationGroupsGroupOutput) ToGetApplicationGroupsGroupOutput() GetApplicationGroupsGroupOutput {
	return o
}

func (o GetApplicationGroupsGroupOutput) ToGetApplicationGroupsGroupOutputWithContext(ctx context.Context) GetApplicationGroupsGroupOutput {
	return o
}

// The name of the Application group.
func (o GetApplicationGroupsGroupOutput) ApplicationGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.ApplicationGroupName }).(pulumi.StringOutput)
}

// The name of the Application.
func (o GetApplicationGroupsGroupOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// The ID of the cloud monitor group.
func (o GetApplicationGroupsGroupOutput) CmsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.CmsGroupId }).(pulumi.StringOutput)
}

// The Creation time of the resource.
func (o GetApplicationGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The region ID of the deployment.
func (o GetApplicationGroupsGroupOutput) DeployRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.DeployRegionId }).(pulumi.StringOutput)
}

// Application group description information.
func (o GetApplicationGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Application Group. Its value is same as Queue Name.
func (o GetApplicationGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Label key.
func (o GetApplicationGroupsGroupOutput) ImportTagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.ImportTagKey }).(pulumi.StringOutput)
}

// Label value.
func (o GetApplicationGroupsGroupOutput) ImportTagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.ImportTagValue }).(pulumi.StringOutput)
}

// The Update time of the resource.
func (o GetApplicationGroupsGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGroupsGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetApplicationGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGroupsGroup)(nil)).Elem()
}

func (o GetApplicationGroupsGroupArrayOutput) ToGetApplicationGroupsGroupArrayOutput() GetApplicationGroupsGroupArrayOutput {
	return o
}

func (o GetApplicationGroupsGroupArrayOutput) ToGetApplicationGroupsGroupArrayOutputWithContext(ctx context.Context) GetApplicationGroupsGroupArrayOutput {
	return o
}

func (o GetApplicationGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetApplicationGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGroupsGroup {
		return vs[0].([]GetApplicationGroupsGroup)[vs[1].(int)]
	}).(GetApplicationGroupsGroupOutput)
}

type GetApplicationsApplication struct {
	// The name of the application.
	ApplicationName string `pulumi:"applicationName"`
	// The Created time of the application.
	CreateTime string `pulumi:"createTime"`
	// Application group description information.
	Description string `pulumi:"description"`
	// The ID of the Application. The value is formate as <application_name>.
	Id string `pulumi:"id"`
	// The ID of the resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The Updated time of the application.
	UpdateTime string `pulumi:"updateTime"`
}

// GetApplicationsApplicationInput is an input type that accepts GetApplicationsApplicationArgs and GetApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationInput` via:
//
//          GetApplicationsApplicationArgs{...}
type GetApplicationsApplicationInput interface {
	pulumi.Input

	ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput
	ToGetApplicationsApplicationOutputWithContext(context.Context) GetApplicationsApplicationOutput
}

type GetApplicationsApplicationArgs struct {
	// The name of the application.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// The Created time of the application.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Application group description information.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Application. The value is formate as <application_name>.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The Updated time of the application.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return i.ToGetApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationOutput)
}

// GetApplicationsApplicationArrayInput is an input type that accepts GetApplicationsApplicationArray and GetApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationArrayInput` via:
//
//          GetApplicationsApplicationArray{ GetApplicationsApplicationArgs{...} }
type GetApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput
	ToGetApplicationsApplicationArrayOutputWithContext(context.Context) GetApplicationsApplicationArrayOutput
}

type GetApplicationsApplicationArray []GetApplicationsApplicationInput

func (GetApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return i.ToGetApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationArrayOutput)
}

type GetApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return o
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return o
}

// The name of the application.
func (o GetApplicationsApplicationOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// The Created time of the application.
func (o GetApplicationsApplicationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Application group description information.
func (o GetApplicationsApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Application. The value is formate as <application_name>.
func (o GetApplicationsApplicationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o GetApplicationsApplicationOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetApplicationsApplicationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApplicationsApplication) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The Updated time of the application.
func (o GetApplicationsApplicationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplication {
		return vs[0].([]GetApplicationsApplication)[vs[1].(int)]
	}).(GetApplicationsApplicationOutput)
}

type GetExecutionsExecution struct {
	// The category of template. Valid: `AlarmTrigger`, `EventTrigger`, `Other` and `TimerTrigger`.
	Category string `pulumi:"category"`
	// The counters of OOS Execution.
	Counters string `pulumi:"counters"`
	// The time when the execution was created.
	CreateDate string `pulumi:"createDate"`
	// The time when the execution was ended.
	EndDate string `pulumi:"endDate"`
	// The user who execute the template.
	ExecutedBy string `pulumi:"executedBy"`
	// ID of the OOS Executions.
	ExecutionId string `pulumi:"executionId"`
	// ID of the OOS Executions.
	Id string `pulumi:"id"`
	// Whether to include subtasks.
	IsParent bool `pulumi:"isParent"`
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`.
	Mode string `pulumi:"mode"`
	// The outputs of OOS Executions.
	Outputs string `pulumi:"outputs"`
	// The parameters required by the template
	Parameters string `pulumi:"parameters"`
	// The id of parent OOS Execution.
	ParentExecutionId string `pulumi:"parentExecutionId"`
	// The role that executes the current template.
	RamRole string `pulumi:"ramRole"`
	// The time when the template was started.
	StartDate string `pulumi:"startDate"`
	// The Status of OOS Execution. Valid: `Cancelled`, `Failed`, `Queued`, `Running`, `Started`, `Success`, `Waiting`.
	Status string `pulumi:"status"`
	// The message of status.
	StatusMessage string `pulumi:"statusMessage"`
	// The reason of status.
	StatusReason string `pulumi:"statusReason"`
	// The id of execution template.
	TemplateId string `pulumi:"templateId"`
	// The name of execution template.
	TemplateName string `pulumi:"templateName"`
	// The version of execution template.
	TemplateVersion string `pulumi:"templateVersion"`
	// The time when the template was updated.
	UpdateDate string `pulumi:"updateDate"`
}

// GetExecutionsExecutionInput is an input type that accepts GetExecutionsExecutionArgs and GetExecutionsExecutionOutput values.
// You can construct a concrete instance of `GetExecutionsExecutionInput` via:
//
//          GetExecutionsExecutionArgs{...}
type GetExecutionsExecutionInput interface {
	pulumi.Input

	ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput
	ToGetExecutionsExecutionOutputWithContext(context.Context) GetExecutionsExecutionOutput
}

type GetExecutionsExecutionArgs struct {
	// The category of template. Valid: `AlarmTrigger`, `EventTrigger`, `Other` and `TimerTrigger`.
	Category pulumi.StringInput `pulumi:"category"`
	// The counters of OOS Execution.
	Counters pulumi.StringInput `pulumi:"counters"`
	// The time when the execution was created.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// The time when the execution was ended.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The user who execute the template.
	ExecutedBy pulumi.StringInput `pulumi:"executedBy"`
	// ID of the OOS Executions.
	ExecutionId pulumi.StringInput `pulumi:"executionId"`
	// ID of the OOS Executions.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether to include subtasks.
	IsParent pulumi.BoolInput `pulumi:"isParent"`
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The outputs of OOS Executions.
	Outputs pulumi.StringInput `pulumi:"outputs"`
	// The parameters required by the template
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// The id of parent OOS Execution.
	ParentExecutionId pulumi.StringInput `pulumi:"parentExecutionId"`
	// The role that executes the current template.
	RamRole pulumi.StringInput `pulumi:"ramRole"`
	// The time when the template was started.
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// The Status of OOS Execution. Valid: `Cancelled`, `Failed`, `Queued`, `Running`, `Started`, `Success`, `Waiting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The message of status.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// The reason of status.
	StatusReason pulumi.StringInput `pulumi:"statusReason"`
	// The id of execution template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The name of execution template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The version of execution template.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
	// The time when the template was updated.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
}

func (GetExecutionsExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionsExecution)(nil)).Elem()
}

func (i GetExecutionsExecutionArgs) ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput {
	return i.ToGetExecutionsExecutionOutputWithContext(context.Background())
}

func (i GetExecutionsExecutionArgs) ToGetExecutionsExecutionOutputWithContext(ctx context.Context) GetExecutionsExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExecutionsExecutionOutput)
}

// GetExecutionsExecutionArrayInput is an input type that accepts GetExecutionsExecutionArray and GetExecutionsExecutionArrayOutput values.
// You can construct a concrete instance of `GetExecutionsExecutionArrayInput` via:
//
//          GetExecutionsExecutionArray{ GetExecutionsExecutionArgs{...} }
type GetExecutionsExecutionArrayInput interface {
	pulumi.Input

	ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput
	ToGetExecutionsExecutionArrayOutputWithContext(context.Context) GetExecutionsExecutionArrayOutput
}

type GetExecutionsExecutionArray []GetExecutionsExecutionInput

func (GetExecutionsExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExecutionsExecution)(nil)).Elem()
}

func (i GetExecutionsExecutionArray) ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput {
	return i.ToGetExecutionsExecutionArrayOutputWithContext(context.Background())
}

func (i GetExecutionsExecutionArray) ToGetExecutionsExecutionArrayOutputWithContext(ctx context.Context) GetExecutionsExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExecutionsExecutionArrayOutput)
}

type GetExecutionsExecutionOutput struct{ *pulumi.OutputState }

func (GetExecutionsExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionsExecution)(nil)).Elem()
}

func (o GetExecutionsExecutionOutput) ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput {
	return o
}

func (o GetExecutionsExecutionOutput) ToGetExecutionsExecutionOutputWithContext(ctx context.Context) GetExecutionsExecutionOutput {
	return o
}

// The category of template. Valid: `AlarmTrigger`, `EventTrigger`, `Other` and `TimerTrigger`.
func (o GetExecutionsExecutionOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Category }).(pulumi.StringOutput)
}

// The counters of OOS Execution.
func (o GetExecutionsExecutionOutput) Counters() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Counters }).(pulumi.StringOutput)
}

// The time when the execution was created.
func (o GetExecutionsExecutionOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.CreateDate }).(pulumi.StringOutput)
}

// The time when the execution was ended.
func (o GetExecutionsExecutionOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.EndDate }).(pulumi.StringOutput)
}

// The user who execute the template.
func (o GetExecutionsExecutionOutput) ExecutedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.ExecutedBy }).(pulumi.StringOutput)
}

// ID of the OOS Executions.
func (o GetExecutionsExecutionOutput) ExecutionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.ExecutionId }).(pulumi.StringOutput)
}

// ID of the OOS Executions.
func (o GetExecutionsExecutionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to include subtasks.
func (o GetExecutionsExecutionOutput) IsParent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetExecutionsExecution) bool { return v.IsParent }).(pulumi.BoolOutput)
}

// The mode of OOS Execution. Valid: `Automatic`, `Debug`.
func (o GetExecutionsExecutionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Mode }).(pulumi.StringOutput)
}

// The outputs of OOS Executions.
func (o GetExecutionsExecutionOutput) Outputs() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Outputs }).(pulumi.StringOutput)
}

// The parameters required by the template
func (o GetExecutionsExecutionOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Parameters }).(pulumi.StringOutput)
}

// The id of parent OOS Execution.
func (o GetExecutionsExecutionOutput) ParentExecutionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.ParentExecutionId }).(pulumi.StringOutput)
}

// The role that executes the current template.
func (o GetExecutionsExecutionOutput) RamRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.RamRole }).(pulumi.StringOutput)
}

// The time when the template was started.
func (o GetExecutionsExecutionOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.StartDate }).(pulumi.StringOutput)
}

// The Status of OOS Execution. Valid: `Cancelled`, `Failed`, `Queued`, `Running`, `Started`, `Success`, `Waiting`.
func (o GetExecutionsExecutionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Status }).(pulumi.StringOutput)
}

// The message of status.
func (o GetExecutionsExecutionOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// The reason of status.
func (o GetExecutionsExecutionOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.StatusReason }).(pulumi.StringOutput)
}

// The id of execution template.
func (o GetExecutionsExecutionOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The name of execution template.
func (o GetExecutionsExecutionOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The version of execution template.
func (o GetExecutionsExecutionOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

// The time when the template was updated.
func (o GetExecutionsExecutionOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.UpdateDate }).(pulumi.StringOutput)
}

type GetExecutionsExecutionArrayOutput struct{ *pulumi.OutputState }

func (GetExecutionsExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExecutionsExecution)(nil)).Elem()
}

func (o GetExecutionsExecutionArrayOutput) ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput {
	return o
}

func (o GetExecutionsExecutionArrayOutput) ToGetExecutionsExecutionArrayOutputWithContext(ctx context.Context) GetExecutionsExecutionArrayOutput {
	return o
}

func (o GetExecutionsExecutionArrayOutput) Index(i pulumi.IntInput) GetExecutionsExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExecutionsExecution {
		return vs[0].([]GetExecutionsExecution)[vs[1].(int)]
	}).(GetExecutionsExecutionOutput)
}

type GetParametersParameter struct {
	// The constraints of the common parameter.
	Constraints string `pulumi:"constraints"`
	// The time when the common parameter was created.
	CreateTime string `pulumi:"createTime"`
	// The user who created the common parameter.
	CreatedBy string `pulumi:"createdBy"`
	// The description of the common parameter.
	Description string `pulumi:"description"`
	// The ID of the Parameter. Its value is same as `parameterName`.
	Id string `pulumi:"id"`
	// The ID of the common parameter.
	ParameterId string `pulumi:"parameterId"`
	// The name of the common parameter.
	ParameterName string `pulumi:"parameterName"`
	// The version number of the common parameter.
	ParameterVersion int `pulumi:"parameterVersion"`
	// The ID of the Resource Group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The share type of the common parameter.
	ShareType string `pulumi:"shareType"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The data type of the common parameter.
	Type string `pulumi:"type"`
	// The user who updated the common parameter.
	UpdatedBy string `pulumi:"updatedBy"`
	// The time when the common parameter was updated.
	UpdatedDate string `pulumi:"updatedDate"`
	// The value of the common parameter.
	Value string `pulumi:"value"`
}

// GetParametersParameterInput is an input type that accepts GetParametersParameterArgs and GetParametersParameterOutput values.
// You can construct a concrete instance of `GetParametersParameterInput` via:
//
//          GetParametersParameterArgs{...}
type GetParametersParameterInput interface {
	pulumi.Input

	ToGetParametersParameterOutput() GetParametersParameterOutput
	ToGetParametersParameterOutputWithContext(context.Context) GetParametersParameterOutput
}

type GetParametersParameterArgs struct {
	// The constraints of the common parameter.
	Constraints pulumi.StringInput `pulumi:"constraints"`
	// The time when the common parameter was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The user who created the common parameter.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The description of the common parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Parameter. Its value is same as `parameterName`.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the common parameter.
	ParameterId pulumi.StringInput `pulumi:"parameterId"`
	// The name of the common parameter.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// The version number of the common parameter.
	ParameterVersion pulumi.IntInput `pulumi:"parameterVersion"`
	// The ID of the Resource Group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The share type of the common parameter.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The data type of the common parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The user who updated the common parameter.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
	// The time when the common parameter was updated.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
	// The value of the common parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetParametersParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParametersParameter)(nil)).Elem()
}

func (i GetParametersParameterArgs) ToGetParametersParameterOutput() GetParametersParameterOutput {
	return i.ToGetParametersParameterOutputWithContext(context.Background())
}

func (i GetParametersParameterArgs) ToGetParametersParameterOutputWithContext(ctx context.Context) GetParametersParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParametersParameterOutput)
}

// GetParametersParameterArrayInput is an input type that accepts GetParametersParameterArray and GetParametersParameterArrayOutput values.
// You can construct a concrete instance of `GetParametersParameterArrayInput` via:
//
//          GetParametersParameterArray{ GetParametersParameterArgs{...} }
type GetParametersParameterArrayInput interface {
	pulumi.Input

	ToGetParametersParameterArrayOutput() GetParametersParameterArrayOutput
	ToGetParametersParameterArrayOutputWithContext(context.Context) GetParametersParameterArrayOutput
}

type GetParametersParameterArray []GetParametersParameterInput

func (GetParametersParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParametersParameter)(nil)).Elem()
}

func (i GetParametersParameterArray) ToGetParametersParameterArrayOutput() GetParametersParameterArrayOutput {
	return i.ToGetParametersParameterArrayOutputWithContext(context.Background())
}

func (i GetParametersParameterArray) ToGetParametersParameterArrayOutputWithContext(ctx context.Context) GetParametersParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParametersParameterArrayOutput)
}

type GetParametersParameterOutput struct{ *pulumi.OutputState }

func (GetParametersParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParametersParameter)(nil)).Elem()
}

func (o GetParametersParameterOutput) ToGetParametersParameterOutput() GetParametersParameterOutput {
	return o
}

func (o GetParametersParameterOutput) ToGetParametersParameterOutputWithContext(ctx context.Context) GetParametersParameterOutput {
	return o
}

// The constraints of the common parameter.
func (o GetParametersParameterOutput) Constraints() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.Constraints }).(pulumi.StringOutput)
}

// The time when the common parameter was created.
func (o GetParametersParameterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The user who created the common parameter.
func (o GetParametersParameterOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of the common parameter.
func (o GetParametersParameterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Parameter. Its value is same as `parameterName`.
func (o GetParametersParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the common parameter.
func (o GetParametersParameterOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.ParameterId }).(pulumi.StringOutput)
}

// The name of the common parameter.
func (o GetParametersParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// The version number of the common parameter.
func (o GetParametersParameterOutput) ParameterVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetParametersParameter) int { return v.ParameterVersion }).(pulumi.IntOutput)
}

// The ID of the Resource Group.
func (o GetParametersParameterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The share type of the common parameter.
func (o GetParametersParameterOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.ShareType }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetParametersParameterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetParametersParameter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The data type of the common parameter.
func (o GetParametersParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The user who updated the common parameter.
func (o GetParametersParameterOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// The time when the common parameter was updated.
func (o GetParametersParameterOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

// The value of the common parameter.
func (o GetParametersParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetParametersParameter) string { return v.Value }).(pulumi.StringOutput)
}

type GetParametersParameterArrayOutput struct{ *pulumi.OutputState }

func (GetParametersParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParametersParameter)(nil)).Elem()
}

func (o GetParametersParameterArrayOutput) ToGetParametersParameterArrayOutput() GetParametersParameterArrayOutput {
	return o
}

func (o GetParametersParameterArrayOutput) ToGetParametersParameterArrayOutputWithContext(ctx context.Context) GetParametersParameterArrayOutput {
	return o
}

func (o GetParametersParameterArrayOutput) Index(i pulumi.IntInput) GetParametersParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetParametersParameter {
		return vs[0].([]GetParametersParameter)[vs[1].(int)]
	}).(GetParametersParameterOutput)
}

type GetPatchBaselinesBaseline struct {
	// Accept the rules.
	ApprovalRules string `pulumi:"approvalRules"`
	// The create time of patch baselines.
	CreateTime string `pulumi:"createTime"`
	// The user who created the patch baselines.
	CreatedBy string `pulumi:"createdBy"`
	// Patches baseline description information.
	Description string `pulumi:"description"`
	// The ID of the Patch Baseline. Its value is same as `patchBaselineName`.
	Id string `pulumi:"id"`
	// Whether it is the default patch baseline.
	IsDefault bool `pulumi:"isDefault"`
	// Operating system type.
	OperationSystem string `pulumi:"operationSystem"`
	// Patch baseline ID.
	PatchBaselineId string `pulumi:"patchBaselineId"`
	// The name of the patch baseline.
	PatchBaselineName string `pulumi:"patchBaselineName"`
	// Patch baseline sharing type.
	ShareType string `pulumi:"shareType"`
	// The user who updated the patch baselines.
	UpdatedBy string `pulumi:"updatedBy"`
	// The update time of patch baselines.
	UpdatedDate string `pulumi:"updatedDate"`
}

// GetPatchBaselinesBaselineInput is an input type that accepts GetPatchBaselinesBaselineArgs and GetPatchBaselinesBaselineOutput values.
// You can construct a concrete instance of `GetPatchBaselinesBaselineInput` via:
//
//          GetPatchBaselinesBaselineArgs{...}
type GetPatchBaselinesBaselineInput interface {
	pulumi.Input

	ToGetPatchBaselinesBaselineOutput() GetPatchBaselinesBaselineOutput
	ToGetPatchBaselinesBaselineOutputWithContext(context.Context) GetPatchBaselinesBaselineOutput
}

type GetPatchBaselinesBaselineArgs struct {
	// Accept the rules.
	ApprovalRules pulumi.StringInput `pulumi:"approvalRules"`
	// The create time of patch baselines.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The user who created the patch baselines.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// Patches baseline description information.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Patch Baseline. Its value is same as `patchBaselineName`.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether it is the default patch baseline.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Operating system type.
	OperationSystem pulumi.StringInput `pulumi:"operationSystem"`
	// Patch baseline ID.
	PatchBaselineId pulumi.StringInput `pulumi:"patchBaselineId"`
	// The name of the patch baseline.
	PatchBaselineName pulumi.StringInput `pulumi:"patchBaselineName"`
	// Patch baseline sharing type.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The user who updated the patch baselines.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
	// The update time of patch baselines.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
}

func (GetPatchBaselinesBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesBaseline)(nil)).Elem()
}

func (i GetPatchBaselinesBaselineArgs) ToGetPatchBaselinesBaselineOutput() GetPatchBaselinesBaselineOutput {
	return i.ToGetPatchBaselinesBaselineOutputWithContext(context.Background())
}

func (i GetPatchBaselinesBaselineArgs) ToGetPatchBaselinesBaselineOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesBaselineOutput)
}

// GetPatchBaselinesBaselineArrayInput is an input type that accepts GetPatchBaselinesBaselineArray and GetPatchBaselinesBaselineArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselinesBaselineArrayInput` via:
//
//          GetPatchBaselinesBaselineArray{ GetPatchBaselinesBaselineArgs{...} }
type GetPatchBaselinesBaselineArrayInput interface {
	pulumi.Input

	ToGetPatchBaselinesBaselineArrayOutput() GetPatchBaselinesBaselineArrayOutput
	ToGetPatchBaselinesBaselineArrayOutputWithContext(context.Context) GetPatchBaselinesBaselineArrayOutput
}

type GetPatchBaselinesBaselineArray []GetPatchBaselinesBaselineInput

func (GetPatchBaselinesBaselineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesBaseline)(nil)).Elem()
}

func (i GetPatchBaselinesBaselineArray) ToGetPatchBaselinesBaselineArrayOutput() GetPatchBaselinesBaselineArrayOutput {
	return i.ToGetPatchBaselinesBaselineArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselinesBaselineArray) ToGetPatchBaselinesBaselineArrayOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesBaselineArrayOutput)
}

type GetPatchBaselinesBaselineOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesBaseline)(nil)).Elem()
}

func (o GetPatchBaselinesBaselineOutput) ToGetPatchBaselinesBaselineOutput() GetPatchBaselinesBaselineOutput {
	return o
}

func (o GetPatchBaselinesBaselineOutput) ToGetPatchBaselinesBaselineOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineOutput {
	return o
}

// Accept the rules.
func (o GetPatchBaselinesBaselineOutput) ApprovalRules() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.ApprovalRules }).(pulumi.StringOutput)
}

// The create time of patch baselines.
func (o GetPatchBaselinesBaselineOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The user who created the patch baselines.
func (o GetPatchBaselinesBaselineOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Patches baseline description information.
func (o GetPatchBaselinesBaselineOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Patch Baseline. Its value is same as `patchBaselineName`.
func (o GetPatchBaselinesBaselineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.Id }).(pulumi.StringOutput)
}

// Whether it is the default patch baseline.
func (o GetPatchBaselinesBaselineOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Operating system type.
func (o GetPatchBaselinesBaselineOutput) OperationSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.OperationSystem }).(pulumi.StringOutput)
}

// Patch baseline ID.
func (o GetPatchBaselinesBaselineOutput) PatchBaselineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.PatchBaselineId }).(pulumi.StringOutput)
}

// The name of the patch baseline.
func (o GetPatchBaselinesBaselineOutput) PatchBaselineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.PatchBaselineName }).(pulumi.StringOutput)
}

// Patch baseline sharing type.
func (o GetPatchBaselinesBaselineOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.ShareType }).(pulumi.StringOutput)
}

// The user who updated the patch baselines.
func (o GetPatchBaselinesBaselineOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// The update time of patch baselines.
func (o GetPatchBaselinesBaselineOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaseline) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

type GetPatchBaselinesBaselineArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesBaselineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesBaseline)(nil)).Elem()
}

func (o GetPatchBaselinesBaselineArrayOutput) ToGetPatchBaselinesBaselineArrayOutput() GetPatchBaselinesBaselineArrayOutput {
	return o
}

func (o GetPatchBaselinesBaselineArrayOutput) ToGetPatchBaselinesBaselineArrayOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineArrayOutput {
	return o
}

func (o GetPatchBaselinesBaselineArrayOutput) Index(i pulumi.IntInput) GetPatchBaselinesBaselineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselinesBaseline {
		return vs[0].([]GetPatchBaselinesBaseline)[vs[1].(int)]
	}).(GetPatchBaselinesBaselineOutput)
}

type GetSecretParametersParameter struct {
	// The constraints of the encryption parameter.
	Constraints string `pulumi:"constraints"`
	// The time when the encryption parameter was created.
	CreateTime string `pulumi:"createTime"`
	// The user who created the encryption parameter.
	CreatedBy string `pulumi:"createdBy"`
	// The description of the encryption parameter.
	Description string `pulumi:"description"`
	// The ID of the Secret Parameter.
	Id string `pulumi:"id"`
	// KeyId of KMS used for encryption.
	KeyId string `pulumi:"keyId"`
	// The version number of the encryption parameter.
	ParameterVersion int `pulumi:"parameterVersion"`
	// The ID of the Resource Group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The ID of the encryption parameter.
	SecretParameterId string `pulumi:"secretParameterId"`
	// The name of the encryption parameter.
	SecretParameterName string `pulumi:"secretParameterName"`
	// The share type of the encryption parameter.
	ShareType string `pulumi:"shareType"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The data type of the encryption parameter.
	Type string `pulumi:"type"`
	// The user who updated the encryption parameter.
	UpdatedBy string `pulumi:"updatedBy"`
	// The time when the encryption parameter was updated.
	UpdatedDate string `pulumi:"updatedDate"`
}

// GetSecretParametersParameterInput is an input type that accepts GetSecretParametersParameterArgs and GetSecretParametersParameterOutput values.
// You can construct a concrete instance of `GetSecretParametersParameterInput` via:
//
//          GetSecretParametersParameterArgs{...}
type GetSecretParametersParameterInput interface {
	pulumi.Input

	ToGetSecretParametersParameterOutput() GetSecretParametersParameterOutput
	ToGetSecretParametersParameterOutputWithContext(context.Context) GetSecretParametersParameterOutput
}

type GetSecretParametersParameterArgs struct {
	// The constraints of the encryption parameter.
	Constraints pulumi.StringInput `pulumi:"constraints"`
	// The time when the encryption parameter was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The user who created the encryption parameter.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The description of the encryption parameter.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Secret Parameter.
	Id pulumi.StringInput `pulumi:"id"`
	// KeyId of KMS used for encryption.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The version number of the encryption parameter.
	ParameterVersion pulumi.IntInput `pulumi:"parameterVersion"`
	// The ID of the Resource Group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The ID of the encryption parameter.
	SecretParameterId pulumi.StringInput `pulumi:"secretParameterId"`
	// The name of the encryption parameter.
	SecretParameterName pulumi.StringInput `pulumi:"secretParameterName"`
	// The share type of the encryption parameter.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The data type of the encryption parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The user who updated the encryption parameter.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
	// The time when the encryption parameter was updated.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
}

func (GetSecretParametersParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretParametersParameter)(nil)).Elem()
}

func (i GetSecretParametersParameterArgs) ToGetSecretParametersParameterOutput() GetSecretParametersParameterOutput {
	return i.ToGetSecretParametersParameterOutputWithContext(context.Background())
}

func (i GetSecretParametersParameterArgs) ToGetSecretParametersParameterOutputWithContext(ctx context.Context) GetSecretParametersParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretParametersParameterOutput)
}

// GetSecretParametersParameterArrayInput is an input type that accepts GetSecretParametersParameterArray and GetSecretParametersParameterArrayOutput values.
// You can construct a concrete instance of `GetSecretParametersParameterArrayInput` via:
//
//          GetSecretParametersParameterArray{ GetSecretParametersParameterArgs{...} }
type GetSecretParametersParameterArrayInput interface {
	pulumi.Input

	ToGetSecretParametersParameterArrayOutput() GetSecretParametersParameterArrayOutput
	ToGetSecretParametersParameterArrayOutputWithContext(context.Context) GetSecretParametersParameterArrayOutput
}

type GetSecretParametersParameterArray []GetSecretParametersParameterInput

func (GetSecretParametersParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretParametersParameter)(nil)).Elem()
}

func (i GetSecretParametersParameterArray) ToGetSecretParametersParameterArrayOutput() GetSecretParametersParameterArrayOutput {
	return i.ToGetSecretParametersParameterArrayOutputWithContext(context.Background())
}

func (i GetSecretParametersParameterArray) ToGetSecretParametersParameterArrayOutputWithContext(ctx context.Context) GetSecretParametersParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretParametersParameterArrayOutput)
}

type GetSecretParametersParameterOutput struct{ *pulumi.OutputState }

func (GetSecretParametersParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretParametersParameter)(nil)).Elem()
}

func (o GetSecretParametersParameterOutput) ToGetSecretParametersParameterOutput() GetSecretParametersParameterOutput {
	return o
}

func (o GetSecretParametersParameterOutput) ToGetSecretParametersParameterOutputWithContext(ctx context.Context) GetSecretParametersParameterOutput {
	return o
}

// The constraints of the encryption parameter.
func (o GetSecretParametersParameterOutput) Constraints() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.Constraints }).(pulumi.StringOutput)
}

// The time when the encryption parameter was created.
func (o GetSecretParametersParameterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The user who created the encryption parameter.
func (o GetSecretParametersParameterOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of the encryption parameter.
func (o GetSecretParametersParameterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Secret Parameter.
func (o GetSecretParametersParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.Id }).(pulumi.StringOutput)
}

// KeyId of KMS used for encryption.
func (o GetSecretParametersParameterOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.KeyId }).(pulumi.StringOutput)
}

// The version number of the encryption parameter.
func (o GetSecretParametersParameterOutput) ParameterVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) int { return v.ParameterVersion }).(pulumi.IntOutput)
}

// The ID of the Resource Group.
func (o GetSecretParametersParameterOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of the encryption parameter.
func (o GetSecretParametersParameterOutput) SecretParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.SecretParameterId }).(pulumi.StringOutput)
}

// The name of the encryption parameter.
func (o GetSecretParametersParameterOutput) SecretParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.SecretParameterName }).(pulumi.StringOutput)
}

// The share type of the encryption parameter.
func (o GetSecretParametersParameterOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.ShareType }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetSecretParametersParameterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The data type of the encryption parameter.
func (o GetSecretParametersParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The user who updated the encryption parameter.
func (o GetSecretParametersParameterOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// The time when the encryption parameter was updated.
func (o GetSecretParametersParameterOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretParametersParameter) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

type GetSecretParametersParameterArrayOutput struct{ *pulumi.OutputState }

func (GetSecretParametersParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretParametersParameter)(nil)).Elem()
}

func (o GetSecretParametersParameterArrayOutput) ToGetSecretParametersParameterArrayOutput() GetSecretParametersParameterArrayOutput {
	return o
}

func (o GetSecretParametersParameterArrayOutput) ToGetSecretParametersParameterArrayOutputWithContext(ctx context.Context) GetSecretParametersParameterArrayOutput {
	return o
}

func (o GetSecretParametersParameterArrayOutput) Index(i pulumi.IntInput) GetSecretParametersParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretParametersParameter {
		return vs[0].([]GetSecretParametersParameter)[vs[1].(int)]
	}).(GetSecretParametersParameterOutput)
}

type GetStateConfigurationsConfiguration struct {
	// The configuration mode.
	ConfigureMode string `pulumi:"configureMode"`
	// The creation time.
	CreateTime string `pulumi:"createTime"`
	// The description.
	Description string `pulumi:"description"`
	// The ID of the State Configuration.
	Id string `pulumi:"id"`
	// The parameters.
	Parameters string `pulumi:"parameters"`
	// The ID of the resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The schedule expression.
	ScheduleExpression string `pulumi:"scheduleExpression"`
	// The schedule type.
	ScheduleType string `pulumi:"scheduleType"`
	// The ID of the final state configuration.
	StateConfigurationId string `pulumi:"stateConfigurationId"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The target resource.
	Targets string `pulumi:"targets"`
	// The ID of the template.
	TemplateId string `pulumi:"templateId"`
	// The name of the template.
	TemplateName string `pulumi:"templateName"`
	// The version of the template.
	TemplateVersion string `pulumi:"templateVersion"`
	// The time when the configuration is updated.
	UpdateTime string `pulumi:"updateTime"`
}

// GetStateConfigurationsConfigurationInput is an input type that accepts GetStateConfigurationsConfigurationArgs and GetStateConfigurationsConfigurationOutput values.
// You can construct a concrete instance of `GetStateConfigurationsConfigurationInput` via:
//
//          GetStateConfigurationsConfigurationArgs{...}
type GetStateConfigurationsConfigurationInput interface {
	pulumi.Input

	ToGetStateConfigurationsConfigurationOutput() GetStateConfigurationsConfigurationOutput
	ToGetStateConfigurationsConfigurationOutputWithContext(context.Context) GetStateConfigurationsConfigurationOutput
}

type GetStateConfigurationsConfigurationArgs struct {
	// The configuration mode.
	ConfigureMode pulumi.StringInput `pulumi:"configureMode"`
	// The creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the State Configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The schedule expression.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// The schedule type.
	ScheduleType pulumi.StringInput `pulumi:"scheduleType"`
	// The ID of the final state configuration.
	StateConfigurationId pulumi.StringInput `pulumi:"stateConfigurationId"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The target resource.
	Targets pulumi.StringInput `pulumi:"targets"`
	// The ID of the template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The name of the template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The version of the template.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
	// The time when the configuration is updated.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetStateConfigurationsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStateConfigurationsConfiguration)(nil)).Elem()
}

func (i GetStateConfigurationsConfigurationArgs) ToGetStateConfigurationsConfigurationOutput() GetStateConfigurationsConfigurationOutput {
	return i.ToGetStateConfigurationsConfigurationOutputWithContext(context.Background())
}

func (i GetStateConfigurationsConfigurationArgs) ToGetStateConfigurationsConfigurationOutputWithContext(ctx context.Context) GetStateConfigurationsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStateConfigurationsConfigurationOutput)
}

// GetStateConfigurationsConfigurationArrayInput is an input type that accepts GetStateConfigurationsConfigurationArray and GetStateConfigurationsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetStateConfigurationsConfigurationArrayInput` via:
//
//          GetStateConfigurationsConfigurationArray{ GetStateConfigurationsConfigurationArgs{...} }
type GetStateConfigurationsConfigurationArrayInput interface {
	pulumi.Input

	ToGetStateConfigurationsConfigurationArrayOutput() GetStateConfigurationsConfigurationArrayOutput
	ToGetStateConfigurationsConfigurationArrayOutputWithContext(context.Context) GetStateConfigurationsConfigurationArrayOutput
}

type GetStateConfigurationsConfigurationArray []GetStateConfigurationsConfigurationInput

func (GetStateConfigurationsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStateConfigurationsConfiguration)(nil)).Elem()
}

func (i GetStateConfigurationsConfigurationArray) ToGetStateConfigurationsConfigurationArrayOutput() GetStateConfigurationsConfigurationArrayOutput {
	return i.ToGetStateConfigurationsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetStateConfigurationsConfigurationArray) ToGetStateConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetStateConfigurationsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStateConfigurationsConfigurationArrayOutput)
}

type GetStateConfigurationsConfigurationOutput struct{ *pulumi.OutputState }

func (GetStateConfigurationsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStateConfigurationsConfiguration)(nil)).Elem()
}

func (o GetStateConfigurationsConfigurationOutput) ToGetStateConfigurationsConfigurationOutput() GetStateConfigurationsConfigurationOutput {
	return o
}

func (o GetStateConfigurationsConfigurationOutput) ToGetStateConfigurationsConfigurationOutputWithContext(ctx context.Context) GetStateConfigurationsConfigurationOutput {
	return o
}

// The configuration mode.
func (o GetStateConfigurationsConfigurationOutput) ConfigureMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.ConfigureMode }).(pulumi.StringOutput)
}

// The creation time.
func (o GetStateConfigurationsConfigurationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description.
func (o GetStateConfigurationsConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the State Configuration.
func (o GetStateConfigurationsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters.
func (o GetStateConfigurationsConfigurationOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.Parameters }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o GetStateConfigurationsConfigurationOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The schedule expression.
func (o GetStateConfigurationsConfigurationOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

// The schedule type.
func (o GetStateConfigurationsConfigurationOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.ScheduleType }).(pulumi.StringOutput)
}

// The ID of the final state configuration.
func (o GetStateConfigurationsConfigurationOutput) StateConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.StateConfigurationId }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetStateConfigurationsConfigurationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The target resource.
func (o GetStateConfigurationsConfigurationOutput) Targets() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.Targets }).(pulumi.StringOutput)
}

// The ID of the template.
func (o GetStateConfigurationsConfigurationOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The name of the template.
func (o GetStateConfigurationsConfigurationOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The version of the template.
func (o GetStateConfigurationsConfigurationOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

// The time when the configuration is updated.
func (o GetStateConfigurationsConfigurationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateConfigurationsConfiguration) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetStateConfigurationsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetStateConfigurationsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStateConfigurationsConfiguration)(nil)).Elem()
}

func (o GetStateConfigurationsConfigurationArrayOutput) ToGetStateConfigurationsConfigurationArrayOutput() GetStateConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetStateConfigurationsConfigurationArrayOutput) ToGetStateConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetStateConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetStateConfigurationsConfigurationArrayOutput) Index(i pulumi.IntInput) GetStateConfigurationsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStateConfigurationsConfiguration {
		return vs[0].([]GetStateConfigurationsConfiguration)[vs[1].(int)]
	}).(GetStateConfigurationsConfigurationOutput)
}

type GetTemplatesTemplate struct {
	// The category of template.
	Category string `pulumi:"category"`
	// The creator of the template.
	CreatedBy string `pulumi:"createdBy"`
	// The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
	CreatedDate string `pulumi:"createdDate"`
	// Description of the OOS Template.
	Description string `pulumi:"description"`
	// Is it triggered successfully.
	HasTrigger bool `pulumi:"hasTrigger"`
	// ID of the OOS Template. The value is same as template_name.
	Id string `pulumi:"id"`
	// The sharing type of the template. Valid values: `Private`, `Public`.
	ShareType string `pulumi:"shareType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The format of the template. Valid values: `JSON`, `YAML`.
	TemplateFormat string `pulumi:"templateFormat"`
	// ID of the OOS Template resource.
	TemplateId string `pulumi:"templateId"`
	// Name of the OOS Template.
	TemplateName string `pulumi:"templateName"`
	// The type of OOS Template.
	TemplateType string `pulumi:"templateType"`
	// Version of the OOS Template.
	TemplateVersion string `pulumi:"templateVersion"`
	// The user who updated the template.
	UpdatedBy string `pulumi:"updatedBy"`
	// The time when the template was updated.
	UpdatedDate string `pulumi:"updatedDate"`
}

// GetTemplatesTemplateInput is an input type that accepts GetTemplatesTemplateArgs and GetTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateInput` via:
//
//          GetTemplatesTemplateArgs{...}
type GetTemplatesTemplateInput interface {
	pulumi.Input

	ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput
	ToGetTemplatesTemplateOutputWithContext(context.Context) GetTemplatesTemplateOutput
}

type GetTemplatesTemplateArgs struct {
	// The category of template.
	Category pulumi.StringInput `pulumi:"category"`
	// The creator of the template.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Description of the OOS Template.
	Description pulumi.StringInput `pulumi:"description"`
	// Is it triggered successfully.
	HasTrigger pulumi.BoolInput `pulumi:"hasTrigger"`
	// ID of the OOS Template. The value is same as template_name.
	Id pulumi.StringInput `pulumi:"id"`
	// The sharing type of the template. Valid values: `Private`, `Public`.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The format of the template. Valid values: `JSON`, `YAML`.
	TemplateFormat pulumi.StringInput `pulumi:"templateFormat"`
	// ID of the OOS Template resource.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// Name of the OOS Template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The type of OOS Template.
	TemplateType pulumi.StringInput `pulumi:"templateType"`
	// Version of the OOS Template.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
	// The user who updated the template.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
	// The time when the template was updated.
	UpdatedDate pulumi.StringInput `pulumi:"updatedDate"`
}

func (GetTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return i.ToGetTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateOutput)
}

// GetTemplatesTemplateArrayInput is an input type that accepts GetTemplatesTemplateArray and GetTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateArrayInput` via:
//
//          GetTemplatesTemplateArray{ GetTemplatesTemplateArgs{...} }
type GetTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput
	ToGetTemplatesTemplateArrayOutputWithContext(context.Context) GetTemplatesTemplateArrayOutput
}

type GetTemplatesTemplateArray []GetTemplatesTemplateInput

func (GetTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return i.ToGetTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateArrayOutput)
}

type GetTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return o
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return o
}

// The category of template.
func (o GetTemplatesTemplateOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Category }).(pulumi.StringOutput)
}

// The creator of the template.
func (o GetTemplatesTemplateOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
func (o GetTemplatesTemplateOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of the OOS Template.
func (o GetTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// Is it triggered successfully.
func (o GetTemplatesTemplateOutput) HasTrigger() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) bool { return v.HasTrigger }).(pulumi.BoolOutput)
}

// ID of the OOS Template. The value is same as template_name.
func (o GetTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The sharing type of the template. Valid values: `Private`, `Public`.
func (o GetTemplatesTemplateOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.ShareType }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetTemplatesTemplateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The format of the template. Valid values: `JSON`, `YAML`.
func (o GetTemplatesTemplateOutput) TemplateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateFormat }).(pulumi.StringOutput)
}

// ID of the OOS Template resource.
func (o GetTemplatesTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

// Name of the OOS Template.
func (o GetTemplatesTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The type of OOS Template.
func (o GetTemplatesTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Version of the OOS Template.
func (o GetTemplatesTemplateOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

// The user who updated the template.
func (o GetTemplatesTemplateOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// The time when the template was updated.
func (o GetTemplatesTemplateOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

type GetTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplatesTemplate {
		return vs[0].([]GetTemplatesTemplate)[vs[1].(int)]
	}).(GetTemplatesTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGroupsGroupInput)(nil)).Elem(), GetApplicationGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGroupsGroupArrayInput)(nil)).Elem(), GetApplicationGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationInput)(nil)).Elem(), GetApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationArrayInput)(nil)).Elem(), GetApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExecutionsExecutionInput)(nil)).Elem(), GetExecutionsExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExecutionsExecutionArrayInput)(nil)).Elem(), GetExecutionsExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParametersParameterInput)(nil)).Elem(), GetParametersParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParametersParameterArrayInput)(nil)).Elem(), GetParametersParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesBaselineInput)(nil)).Elem(), GetPatchBaselinesBaselineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesBaselineArrayInput)(nil)).Elem(), GetPatchBaselinesBaselineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretParametersParameterInput)(nil)).Elem(), GetSecretParametersParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretParametersParameterArrayInput)(nil)).Elem(), GetSecretParametersParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStateConfigurationsConfigurationInput)(nil)).Elem(), GetStateConfigurationsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStateConfigurationsConfigurationArrayInput)(nil)).Elem(), GetStateConfigurationsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesTemplateInput)(nil)).Elem(), GetTemplatesTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatesTemplateArrayInput)(nil)).Elem(), GetTemplatesTemplateArray{})
	pulumi.RegisterOutputType(GetApplicationGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetApplicationGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetExecutionsExecutionOutput{})
	pulumi.RegisterOutputType(GetExecutionsExecutionArrayOutput{})
	pulumi.RegisterOutputType(GetParametersParameterOutput{})
	pulumi.RegisterOutputType(GetParametersParameterArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesBaselineOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesBaselineArrayOutput{})
	pulumi.RegisterOutputType(GetSecretParametersParameterOutput{})
	pulumi.RegisterOutputType(GetSecretParametersParameterArrayOutput{})
	pulumi.RegisterOutputType(GetStateConfigurationsConfigurationOutput{})
	pulumi.RegisterOutputType(GetStateConfigurationsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateArrayOutput{})
}
