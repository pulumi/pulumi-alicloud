// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a OOS Service Setting resource.
//
// For information about OOS Service Setting and how to use it, see [What is Service Setting](https://www.alibabacloud.com/help/en/doc-detail/268700.html).
//
// > **NOTE:** Available in v1.147.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oos"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/oss"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "tf-testaccoossetting"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		defaultBucket, err := oss.NewBucket(ctx, "defaultBucket", &oss.BucketArgs{
// 			Bucket: pulumi.String(name),
// 			Acl:    pulumi.String("public-read-write"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultProject, err := log.NewProject(ctx, "defaultProject", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = oos.NewServiceSetting(ctx, "defaultServiceSetting", &oos.ServiceSettingArgs{
// 			DeliveryOssEnabled:     pulumi.Bool(true),
// 			DeliveryOssKeyPrefix:   pulumi.String("path1/"),
// 			DeliveryOssBucketName:  defaultBucket.Bucket,
// 			DeliverySlsEnabled:     pulumi.Bool(true),
// 			DeliverySlsProjectName: defaultProject.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// OOS Service Setting can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:oos/serviceSetting:ServiceSetting example <id>
// ```
type ServiceSetting struct {
	pulumi.CustomResourceState

	// The name of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssBucketName pulumi.StringPtrOutput `pulumi:"deliveryOssBucketName"`
	// Is the recording function for the OSS delivery template enabled.
	DeliveryOssEnabled pulumi.BoolPtrOutput `pulumi:"deliveryOssEnabled"`
	// The Directory of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssKeyPrefix pulumi.StringPtrOutput `pulumi:"deliveryOssKeyPrefix"`
	// Is the execution record function to SLS delivery Template turned on.
	DeliverySlsEnabled pulumi.BoolPtrOutput `pulumi:"deliverySlsEnabled"`
	// The name of SLS  Project. **NOTE:** When the `deliverySlsEnabled` is `true`, The `deliverySlsProjectName` is valid.
	DeliverySlsProjectName pulumi.StringPtrOutput `pulumi:"deliverySlsProjectName"`
}

// NewServiceSetting registers a new resource with the given unique name, arguments, and options.
func NewServiceSetting(ctx *pulumi.Context,
	name string, args *ServiceSettingArgs, opts ...pulumi.ResourceOption) (*ServiceSetting, error) {
	if args == nil {
		args = &ServiceSettingArgs{}
	}

	var resource ServiceSetting
	err := ctx.RegisterResource("alicloud:oos/serviceSetting:ServiceSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceSetting gets an existing ServiceSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceSettingState, opts ...pulumi.ResourceOption) (*ServiceSetting, error) {
	var resource ServiceSetting
	err := ctx.ReadResource("alicloud:oos/serviceSetting:ServiceSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceSetting resources.
type serviceSettingState struct {
	// The name of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssBucketName *string `pulumi:"deliveryOssBucketName"`
	// Is the recording function for the OSS delivery template enabled.
	DeliveryOssEnabled *bool `pulumi:"deliveryOssEnabled"`
	// The Directory of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssKeyPrefix *string `pulumi:"deliveryOssKeyPrefix"`
	// Is the execution record function to SLS delivery Template turned on.
	DeliverySlsEnabled *bool `pulumi:"deliverySlsEnabled"`
	// The name of SLS  Project. **NOTE:** When the `deliverySlsEnabled` is `true`, The `deliverySlsProjectName` is valid.
	DeliverySlsProjectName *string `pulumi:"deliverySlsProjectName"`
}

type ServiceSettingState struct {
	// The name of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssBucketName pulumi.StringPtrInput
	// Is the recording function for the OSS delivery template enabled.
	DeliveryOssEnabled pulumi.BoolPtrInput
	// The Directory of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssKeyPrefix pulumi.StringPtrInput
	// Is the execution record function to SLS delivery Template turned on.
	DeliverySlsEnabled pulumi.BoolPtrInput
	// The name of SLS  Project. **NOTE:** When the `deliverySlsEnabled` is `true`, The `deliverySlsProjectName` is valid.
	DeliverySlsProjectName pulumi.StringPtrInput
}

func (ServiceSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceSettingState)(nil)).Elem()
}

type serviceSettingArgs struct {
	// The name of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssBucketName *string `pulumi:"deliveryOssBucketName"`
	// Is the recording function for the OSS delivery template enabled.
	DeliveryOssEnabled *bool `pulumi:"deliveryOssEnabled"`
	// The Directory of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssKeyPrefix *string `pulumi:"deliveryOssKeyPrefix"`
	// Is the execution record function to SLS delivery Template turned on.
	DeliverySlsEnabled *bool `pulumi:"deliverySlsEnabled"`
	// The name of SLS  Project. **NOTE:** When the `deliverySlsEnabled` is `true`, The `deliverySlsProjectName` is valid.
	DeliverySlsProjectName *string `pulumi:"deliverySlsProjectName"`
}

// The set of arguments for constructing a ServiceSetting resource.
type ServiceSettingArgs struct {
	// The name of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssBucketName pulumi.StringPtrInput
	// Is the recording function for the OSS delivery template enabled.
	DeliveryOssEnabled pulumi.BoolPtrInput
	// The Directory of the OSS bucket. **NOTE:** When the `deliveryOssEnabled` is `true`, The `deliveryOssBucketName` is valid.
	DeliveryOssKeyPrefix pulumi.StringPtrInput
	// Is the execution record function to SLS delivery Template turned on.
	DeliverySlsEnabled pulumi.BoolPtrInput
	// The name of SLS  Project. **NOTE:** When the `deliverySlsEnabled` is `true`, The `deliverySlsProjectName` is valid.
	DeliverySlsProjectName pulumi.StringPtrInput
}

func (ServiceSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceSettingArgs)(nil)).Elem()
}

type ServiceSettingInput interface {
	pulumi.Input

	ToServiceSettingOutput() ServiceSettingOutput
	ToServiceSettingOutputWithContext(ctx context.Context) ServiceSettingOutput
}

func (*ServiceSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSetting)(nil)).Elem()
}

func (i *ServiceSetting) ToServiceSettingOutput() ServiceSettingOutput {
	return i.ToServiceSettingOutputWithContext(context.Background())
}

func (i *ServiceSetting) ToServiceSettingOutputWithContext(ctx context.Context) ServiceSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSettingOutput)
}

// ServiceSettingArrayInput is an input type that accepts ServiceSettingArray and ServiceSettingArrayOutput values.
// You can construct a concrete instance of `ServiceSettingArrayInput` via:
//
//          ServiceSettingArray{ ServiceSettingArgs{...} }
type ServiceSettingArrayInput interface {
	pulumi.Input

	ToServiceSettingArrayOutput() ServiceSettingArrayOutput
	ToServiceSettingArrayOutputWithContext(context.Context) ServiceSettingArrayOutput
}

type ServiceSettingArray []ServiceSettingInput

func (ServiceSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceSetting)(nil)).Elem()
}

func (i ServiceSettingArray) ToServiceSettingArrayOutput() ServiceSettingArrayOutput {
	return i.ToServiceSettingArrayOutputWithContext(context.Background())
}

func (i ServiceSettingArray) ToServiceSettingArrayOutputWithContext(ctx context.Context) ServiceSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSettingArrayOutput)
}

// ServiceSettingMapInput is an input type that accepts ServiceSettingMap and ServiceSettingMapOutput values.
// You can construct a concrete instance of `ServiceSettingMapInput` via:
//
//          ServiceSettingMap{ "key": ServiceSettingArgs{...} }
type ServiceSettingMapInput interface {
	pulumi.Input

	ToServiceSettingMapOutput() ServiceSettingMapOutput
	ToServiceSettingMapOutputWithContext(context.Context) ServiceSettingMapOutput
}

type ServiceSettingMap map[string]ServiceSettingInput

func (ServiceSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceSetting)(nil)).Elem()
}

func (i ServiceSettingMap) ToServiceSettingMapOutput() ServiceSettingMapOutput {
	return i.ToServiceSettingMapOutputWithContext(context.Background())
}

func (i ServiceSettingMap) ToServiceSettingMapOutputWithContext(ctx context.Context) ServiceSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSettingMapOutput)
}

type ServiceSettingOutput struct{ *pulumi.OutputState }

func (ServiceSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSetting)(nil)).Elem()
}

func (o ServiceSettingOutput) ToServiceSettingOutput() ServiceSettingOutput {
	return o
}

func (o ServiceSettingOutput) ToServiceSettingOutputWithContext(ctx context.Context) ServiceSettingOutput {
	return o
}

type ServiceSettingArrayOutput struct{ *pulumi.OutputState }

func (ServiceSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceSetting)(nil)).Elem()
}

func (o ServiceSettingArrayOutput) ToServiceSettingArrayOutput() ServiceSettingArrayOutput {
	return o
}

func (o ServiceSettingArrayOutput) ToServiceSettingArrayOutputWithContext(ctx context.Context) ServiceSettingArrayOutput {
	return o
}

func (o ServiceSettingArrayOutput) Index(i pulumi.IntInput) ServiceSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceSetting {
		return vs[0].([]*ServiceSetting)[vs[1].(int)]
	}).(ServiceSettingOutput)
}

type ServiceSettingMapOutput struct{ *pulumi.OutputState }

func (ServiceSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceSetting)(nil)).Elem()
}

func (o ServiceSettingMapOutput) ToServiceSettingMapOutput() ServiceSettingMapOutput {
	return o
}

func (o ServiceSettingMapOutput) ToServiceSettingMapOutputWithContext(ctx context.Context) ServiceSettingMapOutput {
	return o
}

func (o ServiceSettingMapOutput) MapIndex(k pulumi.StringInput) ServiceSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceSetting {
		return vs[0].(map[string]*ServiceSetting)[vs[1].(string)]
	}).(ServiceSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSettingInput)(nil)).Elem(), &ServiceSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSettingArrayInput)(nil)).Elem(), ServiceSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSettingMapInput)(nil)).Elem(), ServiceSettingMap{})
	pulumi.RegisterOutputType(ServiceSettingOutput{})
	pulumi.RegisterOutputType(ServiceSettingArrayOutput{})
	pulumi.RegisterOutputType(ServiceSettingMapOutput{})
}
