// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oos

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a OOS Execution resource. For information about Alicloud OOS Execution and how to use it, see [What is Resource Alicloud OOS Execution](https://www.alibabacloud.com/help/doc-detail/120771.htm).
//
// > **NOTE:** Available in 1.93.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/oos"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := oos.NewTemplate(ctx, "_default", &oos.TemplateArgs{
// 			Content:      pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "  {\n", "    \"FormatVersion\": \"OOS-2019-06-01\",\n", "    \"Description\": \"Update Describe instances of given status\",\n", "    \"Parameters\":{\n", "      \"Status\":{\n", "        \"Type\": \"String\",\n", "        \"Description\": \"(Required) The status of the Ecs instance.\"\n", "      }\n", "    },\n", "    \"Tasks\": [\n", "      {\n", "        \"Properties\" :{\n", "          \"Parameters\":{\n", "            \"Status\": \"{{ Status }}\"\n", "          },\n", "          \"API\": \"DescribeInstances\",\n", "          \"Service\": \"Ecs\"\n", "        },\n", "        \"Name\": \"foo\",\n", "        \"Action\": \"ACS::ExecuteApi\"\n", "      }]\n", "  }\n")),
// 			TemplateName: pulumi.String("test-name"),
// 			VersionName:  pulumi.String("test"),
// 			Tags: pulumi.StringMap{
// 				"Created": pulumi.String("TF"),
// 				"For":     pulumi.String("acceptance Test"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = oos.NewExecution(ctx, "example", &oos.ExecutionArgs{
// 			TemplateName: _default.TemplateName,
// 			Description:  pulumi.String("From TF Test"),
// 			Parameters: pulumi.String("				{\"Status\":\"Running\"}\n"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// OOS Execution can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:oos/execution:Execution example exec-ef6xxxx
// ```
type Execution struct {
	pulumi.CustomResourceState

	// The counters of OOS Execution.
	Counters pulumi.StringOutput `pulumi:"counters"`
	// The time when the execution was created.
	CreateDate pulumi.StringOutput `pulumi:"createDate"`
	// The description of OOS Execution.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The time when the execution was ended.
	EndDate pulumi.StringOutput `pulumi:"endDate"`
	// The user who execute the template.
	ExecutedBy pulumi.StringOutput `pulumi:"executedBy"`
	// Whether to include subtasks.
	IsParent pulumi.BoolOutput `pulumi:"isParent"`
	// The loop mode of OOS Execution.
	LoopMode pulumi.StringPtrOutput `pulumi:"loopMode"`
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The outputs of OOS Execution.
	Outputs pulumi.StringOutput `pulumi:"outputs"`
	// The parameters required by the template. Default to `{}`.
	Parameters pulumi.StringPtrOutput `pulumi:"parameters"`
	// The id of parent execution.
	ParentExecutionId pulumi.StringPtrOutput `pulumi:"parentExecutionId"`
	// The role that executes the current template.
	RamRole pulumi.StringOutput `pulumi:"ramRole"`
	// The mode of safety check.
	SafetyCheck pulumi.StringPtrOutput `pulumi:"safetyCheck"`
	// The time when the execution was started.
	StartDate pulumi.StringOutput `pulumi:"startDate"`
	// The status of OOS Execution.
	Status pulumi.StringOutput `pulumi:"status"`
	// The message of status.
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
	// The id of template.
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// The name of execution template.
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
	// The version of execution template.
	TemplateVersion pulumi.StringOutput `pulumi:"templateVersion"`
	// The time when the execution was updated.
	UpdateDate pulumi.StringOutput `pulumi:"updateDate"`
}

// NewExecution registers a new resource with the given unique name, arguments, and options.
func NewExecution(ctx *pulumi.Context,
	name string, args *ExecutionArgs, opts ...pulumi.ResourceOption) (*Execution, error) {
	if args == nil || args.TemplateName == nil {
		return nil, errors.New("missing required argument 'TemplateName'")
	}
	if args == nil {
		args = &ExecutionArgs{}
	}
	var resource Execution
	err := ctx.RegisterResource("alicloud:oos/execution:Execution", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExecution gets an existing Execution resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExecution(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExecutionState, opts ...pulumi.ResourceOption) (*Execution, error) {
	var resource Execution
	err := ctx.ReadResource("alicloud:oos/execution:Execution", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Execution resources.
type executionState struct {
	// The counters of OOS Execution.
	Counters *string `pulumi:"counters"`
	// The time when the execution was created.
	CreateDate *string `pulumi:"createDate"`
	// The description of OOS Execution.
	Description *string `pulumi:"description"`
	// The time when the execution was ended.
	EndDate *string `pulumi:"endDate"`
	// The user who execute the template.
	ExecutedBy *string `pulumi:"executedBy"`
	// Whether to include subtasks.
	IsParent *bool `pulumi:"isParent"`
	// The loop mode of OOS Execution.
	LoopMode *string `pulumi:"loopMode"`
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
	Mode *string `pulumi:"mode"`
	// The outputs of OOS Execution.
	Outputs *string `pulumi:"outputs"`
	// The parameters required by the template. Default to `{}`.
	Parameters *string `pulumi:"parameters"`
	// The id of parent execution.
	ParentExecutionId *string `pulumi:"parentExecutionId"`
	// The role that executes the current template.
	RamRole *string `pulumi:"ramRole"`
	// The mode of safety check.
	SafetyCheck *string `pulumi:"safetyCheck"`
	// The time when the execution was started.
	StartDate *string `pulumi:"startDate"`
	// The status of OOS Execution.
	Status *string `pulumi:"status"`
	// The message of status.
	StatusMessage *string `pulumi:"statusMessage"`
	// The id of template.
	TemplateId *string `pulumi:"templateId"`
	// The name of execution template.
	TemplateName *string `pulumi:"templateName"`
	// The version of execution template.
	TemplateVersion *string `pulumi:"templateVersion"`
	// The time when the execution was updated.
	UpdateDate *string `pulumi:"updateDate"`
}

type ExecutionState struct {
	// The counters of OOS Execution.
	Counters pulumi.StringPtrInput
	// The time when the execution was created.
	CreateDate pulumi.StringPtrInput
	// The description of OOS Execution.
	Description pulumi.StringPtrInput
	// The time when the execution was ended.
	EndDate pulumi.StringPtrInput
	// The user who execute the template.
	ExecutedBy pulumi.StringPtrInput
	// Whether to include subtasks.
	IsParent pulumi.BoolPtrInput
	// The loop mode of OOS Execution.
	LoopMode pulumi.StringPtrInput
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
	Mode pulumi.StringPtrInput
	// The outputs of OOS Execution.
	Outputs pulumi.StringPtrInput
	// The parameters required by the template. Default to `{}`.
	Parameters pulumi.StringPtrInput
	// The id of parent execution.
	ParentExecutionId pulumi.StringPtrInput
	// The role that executes the current template.
	RamRole pulumi.StringPtrInput
	// The mode of safety check.
	SafetyCheck pulumi.StringPtrInput
	// The time when the execution was started.
	StartDate pulumi.StringPtrInput
	// The status of OOS Execution.
	Status pulumi.StringPtrInput
	// The message of status.
	StatusMessage pulumi.StringPtrInput
	// The id of template.
	TemplateId pulumi.StringPtrInput
	// The name of execution template.
	TemplateName pulumi.StringPtrInput
	// The version of execution template.
	TemplateVersion pulumi.StringPtrInput
	// The time when the execution was updated.
	UpdateDate pulumi.StringPtrInput
}

func (ExecutionState) ElementType() reflect.Type {
	return reflect.TypeOf((*executionState)(nil)).Elem()
}

type executionArgs struct {
	// The description of OOS Execution.
	Description *string `pulumi:"description"`
	// The loop mode of OOS Execution.
	LoopMode *string `pulumi:"loopMode"`
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
	Mode *string `pulumi:"mode"`
	// The parameters required by the template. Default to `{}`.
	Parameters *string `pulumi:"parameters"`
	// The id of parent execution.
	ParentExecutionId *string `pulumi:"parentExecutionId"`
	// The mode of safety check.
	SafetyCheck *string `pulumi:"safetyCheck"`
	// The name of execution template.
	TemplateName string `pulumi:"templateName"`
	// The version of execution template.
	TemplateVersion *string `pulumi:"templateVersion"`
}

// The set of arguments for constructing a Execution resource.
type ExecutionArgs struct {
	// The description of OOS Execution.
	Description pulumi.StringPtrInput
	// The loop mode of OOS Execution.
	LoopMode pulumi.StringPtrInput
	// The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
	Mode pulumi.StringPtrInput
	// The parameters required by the template. Default to `{}`.
	Parameters pulumi.StringPtrInput
	// The id of parent execution.
	ParentExecutionId pulumi.StringPtrInput
	// The mode of safety check.
	SafetyCheck pulumi.StringPtrInput
	// The name of execution template.
	TemplateName pulumi.StringInput
	// The version of execution template.
	TemplateVersion pulumi.StringPtrInput
}

func (ExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*executionArgs)(nil)).Elem()
}

type ExecutionInput interface {
	pulumi.Input

	ToExecutionOutput() ExecutionOutput
	ToExecutionOutputWithContext(ctx context.Context) ExecutionOutput
}

func (Execution) ElementType() reflect.Type {
	return reflect.TypeOf((*Execution)(nil)).Elem()
}

func (i Execution) ToExecutionOutput() ExecutionOutput {
	return i.ToExecutionOutputWithContext(context.Background())
}

func (i Execution) ToExecutionOutputWithContext(ctx context.Context) ExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionOutput)
}

type ExecutionOutput struct {
	*pulumi.OutputState
}

func (ExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionOutput)(nil)).Elem()
}

func (o ExecutionOutput) ToExecutionOutput() ExecutionOutput {
	return o
}

func (o ExecutionOutput) ToExecutionOutputWithContext(ctx context.Context) ExecutionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ExecutionOutput{})
}
