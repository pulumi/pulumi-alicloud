// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESS alarm task resource.
//
// For information about ess alarm, see [CreateAlarm](https://www.alibabacloud.com/help/en/auto-scaling/latest/createalarm).
//
// > **NOTE:** Available since v1.15.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ess"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultRandomInteger, err := random.NewRandomInteger(ctx, "defaultRandomInteger", &random.RandomIntegerArgs{
//				Min: pulumi.Int(10000),
//				Max: pulumi.Int(99999),
//			})
//			if err != nil {
//				return err
//			}
//			myName := defaultRandomInteger.Result.ApplyT(func(result int) (string, error) {
//				return fmt.Sprintf("%v-%v", name, result), nil
//			}).(pulumi.StringOutput)
//			defaultZones, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableDiskCategory:     pulumi.StringRef("cloud_efficiency"),
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
//				AvailabilityZone: pulumi.StringRef(defaultZones.Zones[0].Id),
//				CpuCoreCount:     pulumi.IntRef(2),
//				MemorySize:       pulumi.Float64Ref(4),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				NameRegex:  pulumi.StringRef("^ubuntu_18.*64"),
//				MostRecent: pulumi.BoolRef(true),
//				Owners:     pulumi.StringRef("system"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(myName),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "defaultSwitch", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/24"),
//				ZoneId:      *pulumi.String(defaultZones.Zones[0].Id),
//				VswitchName: pulumi.String(myName),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "defaultSecurityGroup", &ecs.SecurityGroupArgs{
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewSecurityGroupRule(ctx, "defaultSecurityGroupRule", &ecs.SecurityGroupRuleArgs{
//				Type:            pulumi.String("ingress"),
//				IpProtocol:      pulumi.String("tcp"),
//				NicType:         pulumi.String("intranet"),
//				Policy:          pulumi.String("accept"),
//				PortRange:       pulumi.String("22/22"),
//				Priority:        pulumi.Int(1),
//				SecurityGroupId: defaultSecurityGroup.ID(),
//				CidrIp:          pulumi.String("172.16.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			default2, err := vpc.NewSwitch(ctx, "default2", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.1.0/24"),
//				ZoneId:      *pulumi.String(defaultZones.Zones[0].Id),
//				VswitchName: pulumi.String(fmt.Sprintf("%v-bar", name)),
//			})
//			if err != nil {
//				return err
//			}
//			defaultScalingGroup, err := ess.NewScalingGroup(ctx, "defaultScalingGroup", &ess.ScalingGroupArgs{
//				MinSize:          pulumi.Int(1),
//				MaxSize:          pulumi.Int(1),
//				ScalingGroupName: pulumi.String(myName),
//				DefaultCooldown:  pulumi.Int(20),
//				VswitchIds: pulumi.StringArray{
//					defaultSwitch.ID(),
//					default2.ID(),
//				},
//				RemovalPolicies: pulumi.StringArray{
//					pulumi.String("OldestInstance"),
//					pulumi.String("NewestInstance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultScalingRule, err := ess.NewScalingRule(ctx, "defaultScalingRule", &ess.ScalingRuleArgs{
//				ScalingRuleName: pulumi.String(myName),
//				ScalingGroupId:  defaultScalingGroup.ID(),
//				AdjustmentType:  pulumi.String("TotalCapacity"),
//				AdjustmentValue: pulumi.Int(2),
//				Cooldown:        pulumi.Int(60),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ess.NewAlarm(ctx, "defaultAlarm", &ess.AlarmArgs{
//				Description: pulumi.String(name),
//				AlarmActions: pulumi.StringArray{
//					defaultScalingRule.Ari,
//				},
//				ScalingGroupId:     defaultScalingGroup.ID(),
//				MetricType:         pulumi.String("system"),
//				MetricName:         pulumi.String("CpuUtilization"),
//				Period:             pulumi.Int(300),
//				Statistics:         pulumi.String("Average"),
//				Threshold:          pulumi.String("200.3"),
//				ComparisonOperator: pulumi.String(">="),
//				EvaluationCount:    pulumi.Int(2),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Module Support
//
// You can use to the existing autoscaling-rule module
// to create alarm task, different type rules and scheduled task one-click.
//
// ## Import
//
// Ess alarm can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ess/alarm:Alarm example asg-2ze500_045efffe-4d05
// ```
type Alarm struct {
	pulumi.CustomResourceState

	// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
	AlarmActions pulumi.StringArrayOutput `pulumi:"alarmActions"`
	// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
	CloudMonitorGroupId pulumi.IntPtrOutput `pulumi:"cloudMonitorGroupId"`
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
	ComparisonOperator pulumi.StringPtrOutput `pulumi:"comparisonOperator"`
	// The description for the alarm.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
	Dimensions pulumi.MapOutput `pulumi:"dimensions"`
	// Whether to enable specific ess alarm. Default to true.
	Enable pulumi.BoolPtrOutput `pulumi:"enable"`
	// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
	EvaluationCount pulumi.IntPtrOutput `pulumi:"evaluationCount"`
	// The name for the alarm's associated metric. See `dimensions` below for details.
	MetricName pulumi.StringOutput `pulumi:"metricName"`
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType pulumi.StringPtrOutput `pulumi:"metricType"`
	// The name for ess alarm.
	Name pulumi.StringOutput `pulumi:"name"`
	// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
	// The status of the event-triggered task. Valid values:
	// - ALARM: The alert condition is met and an alert is triggered.
	// - OK: The alert condition is not met.
	// - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
	State pulumi.StringOutput `pulumi:"state"`
	// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
	Statistics pulumi.StringPtrOutput `pulumi:"statistics"`
	// The value against which the specified statistics is compared.
	Threshold pulumi.StringOutput `pulumi:"threshold"`
}

// NewAlarm registers a new resource with the given unique name, arguments, and options.
func NewAlarm(ctx *pulumi.Context,
	name string, args *AlarmArgs, opts ...pulumi.ResourceOption) (*Alarm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlarmActions == nil {
		return nil, errors.New("invalid value for required argument 'AlarmActions'")
	}
	if args.MetricName == nil {
		return nil, errors.New("invalid value for required argument 'MetricName'")
	}
	if args.ScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupId'")
	}
	if args.Threshold == nil {
		return nil, errors.New("invalid value for required argument 'Threshold'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Alarm
	err := ctx.RegisterResource("alicloud:ess/alarm:Alarm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlarm gets an existing Alarm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlarm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlarmState, opts ...pulumi.ResourceOption) (*Alarm, error) {
	var resource Alarm
	err := ctx.ReadResource("alicloud:ess/alarm:Alarm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alarm resources.
type alarmState struct {
	// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
	AlarmActions []string `pulumi:"alarmActions"`
	// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
	CloudMonitorGroupId *int `pulumi:"cloudMonitorGroupId"`
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The description for the alarm.
	Description *string `pulumi:"description"`
	// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
	// Whether to enable specific ess alarm. Default to true.
	Enable *bool `pulumi:"enable"`
	// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
	EvaluationCount *int `pulumi:"evaluationCount"`
	// The name for the alarm's associated metric. See `dimensions` below for details.
	MetricName *string `pulumi:"metricName"`
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType *string `pulumi:"metricType"`
	// The name for ess alarm.
	Name *string `pulumi:"name"`
	// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
	Period *int `pulumi:"period"`
	// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// The status of the event-triggered task. Valid values:
	// - ALARM: The alert condition is met and an alert is triggered.
	// - OK: The alert condition is not met.
	// - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
	State *string `pulumi:"state"`
	// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
	Statistics *string `pulumi:"statistics"`
	// The value against which the specified statistics is compared.
	Threshold *string `pulumi:"threshold"`
}

type AlarmState struct {
	// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
	AlarmActions pulumi.StringArrayInput
	// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
	CloudMonitorGroupId pulumi.IntPtrInput
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
	ComparisonOperator pulumi.StringPtrInput
	// The description for the alarm.
	Description pulumi.StringPtrInput
	// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
	Dimensions pulumi.MapInput
	// Whether to enable specific ess alarm. Default to true.
	Enable pulumi.BoolPtrInput
	// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
	EvaluationCount pulumi.IntPtrInput
	// The name for the alarm's associated metric. See `dimensions` below for details.
	MetricName pulumi.StringPtrInput
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType pulumi.StringPtrInput
	// The name for ess alarm.
	Name pulumi.StringPtrInput
	// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
	Period pulumi.IntPtrInput
	// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
	ScalingGroupId pulumi.StringPtrInput
	// The status of the event-triggered task. Valid values:
	// - ALARM: The alert condition is met and an alert is triggered.
	// - OK: The alert condition is not met.
	// - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
	State pulumi.StringPtrInput
	// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
	Statistics pulumi.StringPtrInput
	// The value against which the specified statistics is compared.
	Threshold pulumi.StringPtrInput
}

func (AlarmState) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmState)(nil)).Elem()
}

type alarmArgs struct {
	// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
	AlarmActions []string `pulumi:"alarmActions"`
	// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
	CloudMonitorGroupId *int `pulumi:"cloudMonitorGroupId"`
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The description for the alarm.
	Description *string `pulumi:"description"`
	// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
	// Whether to enable specific ess alarm. Default to true.
	Enable *bool `pulumi:"enable"`
	// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
	EvaluationCount *int `pulumi:"evaluationCount"`
	// The name for the alarm's associated metric. See `dimensions` below for details.
	MetricName string `pulumi:"metricName"`
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType *string `pulumi:"metricType"`
	// The name for ess alarm.
	Name *string `pulumi:"name"`
	// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
	Period *int `pulumi:"period"`
	// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
	Statistics *string `pulumi:"statistics"`
	// The value against which the specified statistics is compared.
	Threshold string `pulumi:"threshold"`
}

// The set of arguments for constructing a Alarm resource.
type AlarmArgs struct {
	// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
	AlarmActions pulumi.StringArrayInput
	// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
	CloudMonitorGroupId pulumi.IntPtrInput
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
	ComparisonOperator pulumi.StringPtrInput
	// The description for the alarm.
	Description pulumi.StringPtrInput
	// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
	Dimensions pulumi.MapInput
	// Whether to enable specific ess alarm. Default to true.
	Enable pulumi.BoolPtrInput
	// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
	EvaluationCount pulumi.IntPtrInput
	// The name for the alarm's associated metric. See `dimensions` below for details.
	MetricName pulumi.StringInput
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType pulumi.StringPtrInput
	// The name for ess alarm.
	Name pulumi.StringPtrInput
	// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
	Period pulumi.IntPtrInput
	// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
	ScalingGroupId pulumi.StringInput
	// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
	Statistics pulumi.StringPtrInput
	// The value against which the specified statistics is compared.
	Threshold pulumi.StringInput
}

func (AlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmArgs)(nil)).Elem()
}

type AlarmInput interface {
	pulumi.Input

	ToAlarmOutput() AlarmOutput
	ToAlarmOutputWithContext(ctx context.Context) AlarmOutput
}

func (*Alarm) ElementType() reflect.Type {
	return reflect.TypeOf((**Alarm)(nil)).Elem()
}

func (i *Alarm) ToAlarmOutput() AlarmOutput {
	return i.ToAlarmOutputWithContext(context.Background())
}

func (i *Alarm) ToAlarmOutputWithContext(ctx context.Context) AlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmOutput)
}

// AlarmArrayInput is an input type that accepts AlarmArray and AlarmArrayOutput values.
// You can construct a concrete instance of `AlarmArrayInput` via:
//
//	AlarmArray{ AlarmArgs{...} }
type AlarmArrayInput interface {
	pulumi.Input

	ToAlarmArrayOutput() AlarmArrayOutput
	ToAlarmArrayOutputWithContext(context.Context) AlarmArrayOutput
}

type AlarmArray []AlarmInput

func (AlarmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alarm)(nil)).Elem()
}

func (i AlarmArray) ToAlarmArrayOutput() AlarmArrayOutput {
	return i.ToAlarmArrayOutputWithContext(context.Background())
}

func (i AlarmArray) ToAlarmArrayOutputWithContext(ctx context.Context) AlarmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmArrayOutput)
}

// AlarmMapInput is an input type that accepts AlarmMap and AlarmMapOutput values.
// You can construct a concrete instance of `AlarmMapInput` via:
//
//	AlarmMap{ "key": AlarmArgs{...} }
type AlarmMapInput interface {
	pulumi.Input

	ToAlarmMapOutput() AlarmMapOutput
	ToAlarmMapOutputWithContext(context.Context) AlarmMapOutput
}

type AlarmMap map[string]AlarmInput

func (AlarmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alarm)(nil)).Elem()
}

func (i AlarmMap) ToAlarmMapOutput() AlarmMapOutput {
	return i.ToAlarmMapOutputWithContext(context.Background())
}

func (i AlarmMap) ToAlarmMapOutputWithContext(ctx context.Context) AlarmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmMapOutput)
}

type AlarmOutput struct{ *pulumi.OutputState }

func (AlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alarm)(nil)).Elem()
}

func (o AlarmOutput) ToAlarmOutput() AlarmOutput {
	return o
}

func (o AlarmOutput) ToAlarmOutputWithContext(ctx context.Context) AlarmOutput {
	return o
}

// The list of actions to execute when this alarm transition into an ALARM state. Each action is specified as ess scaling rule ari.
func (o AlarmOutput) AlarmActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringArrayOutput { return v.AlarmActions }).(pulumi.StringArrayOutput)
}

// Defines the application group id defined by CMS which is assigned when you upload custom metric to CMS, only available for custom metirc.
func (o AlarmOutput) CloudMonitorGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.IntPtrOutput { return v.CloudMonitorGroupId }).(pulumi.IntPtrOutput)
}

// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Supported value: >=, <=, >, <. Defaults to >=.
func (o AlarmOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringPtrOutput { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The description for the alarm.
func (o AlarmOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The dimension map for the alarm's associated metric. For all metrics, you can not set the dimension key as "scalingGroup" or "userId", which is set by default, the second dimension for metric, such as "device" for "PackagesNetIn", need to be set by users. See `dimensions` below.
func (o AlarmOutput) Dimensions() pulumi.MapOutput {
	return o.ApplyT(func(v *Alarm) pulumi.MapOutput { return v.Dimensions }).(pulumi.MapOutput)
}

// Whether to enable specific ess alarm. Default to true.
func (o AlarmOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.BoolPtrOutput { return v.Enable }).(pulumi.BoolPtrOutput)
}

// The number of times that needs to satisfies comparison condition before transition into ALARM state. Defaults to 3.
func (o AlarmOutput) EvaluationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.IntPtrOutput { return v.EvaluationCount }).(pulumi.IntPtrOutput)
}

// The name for the alarm's associated metric. See `dimensions` below for details.
func (o AlarmOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringOutput { return v.MetricName }).(pulumi.StringOutput)
}

// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
func (o AlarmOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringPtrOutput { return v.MetricType }).(pulumi.StringPtrOutput)
}

// The name for ess alarm.
func (o AlarmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The period in seconds over which the specified statistic is applied. Supported value: 60, 120, 300, 900. Defaults to 300.
func (o AlarmOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The scaling group associated with this alarm, the 'ForceNew' attribute is available in 1.56.0+.
func (o AlarmOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringOutput { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// The status of the event-triggered task. Valid values:
// - ALARM: The alert condition is met and an alert is triggered.
// - OK: The alert condition is not met.
// - INSUFFICIENT_DATA: Auto Scaling cannot determine whether the alert condition is met due to insufficient data.
func (o AlarmOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The statistic to apply to the alarm's associated metric. Supported value: Average, Minimum, Maximum. Defaults to Average.
func (o AlarmOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringPtrOutput { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The value against which the specified statistics is compared.
func (o AlarmOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v *Alarm) pulumi.StringOutput { return v.Threshold }).(pulumi.StringOutput)
}

type AlarmArrayOutput struct{ *pulumi.OutputState }

func (AlarmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alarm)(nil)).Elem()
}

func (o AlarmArrayOutput) ToAlarmArrayOutput() AlarmArrayOutput {
	return o
}

func (o AlarmArrayOutput) ToAlarmArrayOutputWithContext(ctx context.Context) AlarmArrayOutput {
	return o
}

func (o AlarmArrayOutput) Index(i pulumi.IntInput) AlarmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Alarm {
		return vs[0].([]*Alarm)[vs[1].(int)]
	}).(AlarmOutput)
}

type AlarmMapOutput struct{ *pulumi.OutputState }

func (AlarmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alarm)(nil)).Elem()
}

func (o AlarmMapOutput) ToAlarmMapOutput() AlarmMapOutput {
	return o
}

func (o AlarmMapOutput) ToAlarmMapOutputWithContext(ctx context.Context) AlarmMapOutput {
	return o
}

func (o AlarmMapOutput) MapIndex(k pulumi.StringInput) AlarmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Alarm {
		return vs[0].(map[string]*Alarm)[vs[1].(string)]
	}).(AlarmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmInput)(nil)).Elem(), &Alarm{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmArrayInput)(nil)).Elem(), AlarmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmMapInput)(nil)).Elem(), AlarmMap{})
	pulumi.RegisterOutputType(AlarmOutput{})
	pulumi.RegisterOutputType(AlarmArrayOutput{})
	pulumi.RegisterOutputType(AlarmMapOutput{})
}
