// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ESS scaling rule resource.
//
// For information about ess scaling rule, see [CreateScalingRule](https://www.alibabacloud.com/help/en/auto-scaling/latest/createscalingrule).
//
// > **NOTE:** Available since v1.39.0.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ess"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			myName := fmt.Sprintf("%v-%v", name, defaultInteger.Result)
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableDiskCategory:     pulumi.StringRef("cloud_efficiency"),
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceTypes, err := ecs.GetInstanceTypes(ctx, &ecs.GetInstanceTypesArgs{
//				AvailabilityZone: pulumi.StringRef(_default.Zones[0].Id),
//				CpuCoreCount:     pulumi.IntRef(2),
//				MemorySize:       pulumi.Float64Ref(4),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				NameRegex:  pulumi.StringRef("^ubuntu_18.*64"),
//				MostRecent: pulumi.BoolRef(true),
//				Owners:     pulumi.StringRef("system"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(myName),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("172.16.0.0/24"),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//				VswitchName: pulumi.String(myName),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String(myName),
//				VpcId:             defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewSecurityGroupRule(ctx, "default", &ecs.SecurityGroupRuleArgs{
//				Type:            pulumi.String("ingress"),
//				IpProtocol:      pulumi.String("tcp"),
//				NicType:         pulumi.String("intranet"),
//				Policy:          pulumi.String("accept"),
//				PortRange:       pulumi.String("22/22"),
//				Priority:        pulumi.Int(1),
//				SecurityGroupId: defaultSecurityGroup.ID(),
//				CidrIp:          pulumi.String("172.16.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultScalingGroup, err := ess.NewScalingGroup(ctx, "default", &ess.ScalingGroupArgs{
//				MinSize:          pulumi.Int(1),
//				MaxSize:          pulumi.Int(1),
//				ScalingGroupName: pulumi.String(myName),
//				VswitchIds: pulumi.StringArray{
//					defaultSwitch.ID(),
//				},
//				RemovalPolicies: pulumi.StringArray{
//					pulumi.String("OldestInstance"),
//					pulumi.String("NewestInstance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ess.NewScalingConfiguration(ctx, "default", &ess.ScalingConfigurationArgs{
//				ScalingGroupId:  defaultScalingGroup.ID(),
//				ImageId:         pulumi.String(defaultGetImages.Images[0].Id),
//				InstanceType:    pulumi.String(defaultGetInstanceTypes.InstanceTypes[0].Id),
//				SecurityGroupId: defaultSecurityGroup.ID(),
//				ForceDelete:     pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ess.NewScalingRule(ctx, "default", &ess.ScalingRuleArgs{
//				ScalingGroupId:  defaultScalingGroup.ID(),
//				AdjustmentType:  pulumi.String("TotalCapacity"),
//				AdjustmentValue: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Module Support
//
// You can use to the existing autoscaling-rule module
// to create different type rules, alarm task and scheduled task one-click.
//
// ## Import
//
// ESS scaling rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ess/scalingRule:ScalingRule example abc123456
// ```
type ScalingRule struct {
	pulumi.CustomResourceState

	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType pulumi.StringPtrOutput `pulumi:"adjustmentType"`
	// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
	// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
	// - TotalCapacity：[0, 1000]
	AdjustmentValue pulumi.IntPtrOutput `pulumi:"adjustmentValue"`
	// AlarmDimension for StepScalingRule. See `alarmDimension` below.
	AlarmDimension ScalingRuleAlarmDimensionPtrOutput `pulumi:"alarmDimension"`
	// The unique identifier of the scaling rule.
	Ari pulumi.StringOutput `pulumi:"ari"`
	// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
	Cooldown pulumi.IntPtrOutput `pulumi:"cooldown"`
	// Indicates whether scale in by the target tracking policy is disabled. Default to false.
	DisableScaleIn pulumi.BoolPtrOutput `pulumi:"disableScaleIn"`
	// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
	EstimatedInstanceWarmup pulumi.IntOutput `pulumi:"estimatedInstanceWarmup"`
	// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
	HybridMetrics ScalingRuleHybridMetricArrayOutput `pulumi:"hybridMetrics"`
	// The ID of the Hybrid Cloud Monitoring metric repository.
	HybridMonitorNamespace pulumi.StringPtrOutput `pulumi:"hybridMonitorNamespace"`
	// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
	InitialMaxSize pulumi.IntOutput `pulumi:"initialMaxSize"`
	// A CloudMonitor metric name.
	MetricName pulumi.StringPtrOutput `pulumi:"metricName"`
	// The type of the metric. Valid values: system, custom, hybrid.
	MetricType pulumi.StringOutput `pulumi:"metricType"`
	// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
	MinAdjustmentMagnitude pulumi.IntPtrOutput `pulumi:"minAdjustmentMagnitude"`
	// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
	PredictiveScalingMode pulumi.StringOutput `pulumi:"predictiveScalingMode"`
	// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
	PredictiveTaskBufferTime pulumi.IntOutput `pulumi:"predictiveTaskBufferTime"`
	// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
	PredictiveValueBehavior pulumi.StringOutput `pulumi:"predictiveValueBehavior"`
	// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
	PredictiveValueBuffer pulumi.IntOutput `pulumi:"predictiveValueBuffer"`
	// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleInEvaluationCount pulumi.IntOutput `pulumi:"scaleInEvaluationCount"`
	// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleOutEvaluationCount pulumi.IntOutput `pulumi:"scaleOutEvaluationCount"`
	// ID of the scaling group of a scaling rule.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
	// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
	ScalingRuleName pulumi.StringOutput `pulumi:"scalingRuleName"`
	// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
	ScalingRuleType pulumi.StringPtrOutput `pulumi:"scalingRuleType"`
	// Steps for StepScalingRule. See `stepAdjustment` below.
	StepAdjustments ScalingRuleStepAdjustmentArrayOutput `pulumi:"stepAdjustments"`
	// The target value for the metric.
	TargetValue pulumi.Float64PtrOutput `pulumi:"targetValue"`
}

// NewScalingRule registers a new resource with the given unique name, arguments, and options.
func NewScalingRule(ctx *pulumi.Context,
	name string, args *ScalingRuleArgs, opts ...pulumi.ResourceOption) (*ScalingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScalingRule
	err := ctx.RegisterResource("alicloud:ess/scalingRule:ScalingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalingRule gets an existing ScalingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalingRuleState, opts ...pulumi.ResourceOption) (*ScalingRule, error) {
	var resource ScalingRule
	err := ctx.ReadResource("alicloud:ess/scalingRule:ScalingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalingRule resources.
type scalingRuleState struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
	// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
	// - TotalCapacity：[0, 1000]
	AdjustmentValue *int `pulumi:"adjustmentValue"`
	// AlarmDimension for StepScalingRule. See `alarmDimension` below.
	AlarmDimension *ScalingRuleAlarmDimension `pulumi:"alarmDimension"`
	// The unique identifier of the scaling rule.
	Ari *string `pulumi:"ari"`
	// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
	Cooldown *int `pulumi:"cooldown"`
	// Indicates whether scale in by the target tracking policy is disabled. Default to false.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
	EstimatedInstanceWarmup *int `pulumi:"estimatedInstanceWarmup"`
	// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
	HybridMetrics []ScalingRuleHybridMetric `pulumi:"hybridMetrics"`
	// The ID of the Hybrid Cloud Monitoring metric repository.
	HybridMonitorNamespace *string `pulumi:"hybridMonitorNamespace"`
	// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
	InitialMaxSize *int `pulumi:"initialMaxSize"`
	// A CloudMonitor metric name.
	MetricName *string `pulumi:"metricName"`
	// The type of the metric. Valid values: system, custom, hybrid.
	MetricType *string `pulumi:"metricType"`
	// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
	PredictiveScalingMode *string `pulumi:"predictiveScalingMode"`
	// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
	PredictiveTaskBufferTime *int `pulumi:"predictiveTaskBufferTime"`
	// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
	PredictiveValueBehavior *string `pulumi:"predictiveValueBehavior"`
	// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
	PredictiveValueBuffer *int `pulumi:"predictiveValueBuffer"`
	// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleInEvaluationCount *int `pulumi:"scaleInEvaluationCount"`
	// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleOutEvaluationCount *int `pulumi:"scaleOutEvaluationCount"`
	// ID of the scaling group of a scaling rule.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
	ScalingRuleName *string `pulumi:"scalingRuleName"`
	// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
	ScalingRuleType *string `pulumi:"scalingRuleType"`
	// Steps for StepScalingRule. See `stepAdjustment` below.
	StepAdjustments []ScalingRuleStepAdjustment `pulumi:"stepAdjustments"`
	// The target value for the metric.
	TargetValue *float64 `pulumi:"targetValue"`
}

type ScalingRuleState struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType pulumi.StringPtrInput
	// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
	// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
	// - TotalCapacity：[0, 1000]
	AdjustmentValue pulumi.IntPtrInput
	// AlarmDimension for StepScalingRule. See `alarmDimension` below.
	AlarmDimension ScalingRuleAlarmDimensionPtrInput
	// The unique identifier of the scaling rule.
	Ari pulumi.StringPtrInput
	// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
	Cooldown pulumi.IntPtrInput
	// Indicates whether scale in by the target tracking policy is disabled. Default to false.
	DisableScaleIn pulumi.BoolPtrInput
	// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
	EstimatedInstanceWarmup pulumi.IntPtrInput
	// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
	HybridMetrics ScalingRuleHybridMetricArrayInput
	// The ID of the Hybrid Cloud Monitoring metric repository.
	HybridMonitorNamespace pulumi.StringPtrInput
	// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
	InitialMaxSize pulumi.IntPtrInput
	// A CloudMonitor metric name.
	MetricName pulumi.StringPtrInput
	// The type of the metric. Valid values: system, custom, hybrid.
	MetricType pulumi.StringPtrInput
	// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
	MinAdjustmentMagnitude pulumi.IntPtrInput
	// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
	PredictiveScalingMode pulumi.StringPtrInput
	// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
	PredictiveTaskBufferTime pulumi.IntPtrInput
	// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
	PredictiveValueBehavior pulumi.StringPtrInput
	// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
	PredictiveValueBuffer pulumi.IntPtrInput
	// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleInEvaluationCount pulumi.IntPtrInput
	// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleOutEvaluationCount pulumi.IntPtrInput
	// ID of the scaling group of a scaling rule.
	ScalingGroupId pulumi.StringPtrInput
	// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
	ScalingRuleName pulumi.StringPtrInput
	// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
	ScalingRuleType pulumi.StringPtrInput
	// Steps for StepScalingRule. See `stepAdjustment` below.
	StepAdjustments ScalingRuleStepAdjustmentArrayInput
	// The target value for the metric.
	TargetValue pulumi.Float64PtrInput
}

func (ScalingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingRuleState)(nil)).Elem()
}

type scalingRuleArgs struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
	// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
	// - TotalCapacity：[0, 1000]
	AdjustmentValue *int `pulumi:"adjustmentValue"`
	// AlarmDimension for StepScalingRule. See `alarmDimension` below.
	AlarmDimension *ScalingRuleAlarmDimension `pulumi:"alarmDimension"`
	// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
	Cooldown *int `pulumi:"cooldown"`
	// Indicates whether scale in by the target tracking policy is disabled. Default to false.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
	EstimatedInstanceWarmup *int `pulumi:"estimatedInstanceWarmup"`
	// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
	HybridMetrics []ScalingRuleHybridMetric `pulumi:"hybridMetrics"`
	// The ID of the Hybrid Cloud Monitoring metric repository.
	HybridMonitorNamespace *string `pulumi:"hybridMonitorNamespace"`
	// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
	InitialMaxSize *int `pulumi:"initialMaxSize"`
	// A CloudMonitor metric name.
	MetricName *string `pulumi:"metricName"`
	// The type of the metric. Valid values: system, custom, hybrid.
	MetricType *string `pulumi:"metricType"`
	// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
	PredictiveScalingMode *string `pulumi:"predictiveScalingMode"`
	// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
	PredictiveTaskBufferTime *int `pulumi:"predictiveTaskBufferTime"`
	// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
	PredictiveValueBehavior *string `pulumi:"predictiveValueBehavior"`
	// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
	PredictiveValueBuffer *int `pulumi:"predictiveValueBuffer"`
	// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleInEvaluationCount *int `pulumi:"scaleInEvaluationCount"`
	// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleOutEvaluationCount *int `pulumi:"scaleOutEvaluationCount"`
	// ID of the scaling group of a scaling rule.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
	ScalingRuleName *string `pulumi:"scalingRuleName"`
	// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
	ScalingRuleType *string `pulumi:"scalingRuleType"`
	// Steps for StepScalingRule. See `stepAdjustment` below.
	StepAdjustments []ScalingRuleStepAdjustment `pulumi:"stepAdjustments"`
	// The target value for the metric.
	TargetValue *float64 `pulumi:"targetValue"`
}

// The set of arguments for constructing a ScalingRule resource.
type ScalingRuleArgs struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType pulumi.StringPtrInput
	// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
	// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
	// - TotalCapacity：[0, 1000]
	AdjustmentValue pulumi.IntPtrInput
	// AlarmDimension for StepScalingRule. See `alarmDimension` below.
	AlarmDimension ScalingRuleAlarmDimensionPtrInput
	// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
	Cooldown pulumi.IntPtrInput
	// Indicates whether scale in by the target tracking policy is disabled. Default to false.
	DisableScaleIn pulumi.BoolPtrInput
	// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
	EstimatedInstanceWarmup pulumi.IntPtrInput
	// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
	HybridMetrics ScalingRuleHybridMetricArrayInput
	// The ID of the Hybrid Cloud Monitoring metric repository.
	HybridMonitorNamespace pulumi.StringPtrInput
	// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
	InitialMaxSize pulumi.IntPtrInput
	// A CloudMonitor metric name.
	MetricName pulumi.StringPtrInput
	// The type of the metric. Valid values: system, custom, hybrid.
	MetricType pulumi.StringPtrInput
	// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
	MinAdjustmentMagnitude pulumi.IntPtrInput
	// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
	PredictiveScalingMode pulumi.StringPtrInput
	// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
	PredictiveTaskBufferTime pulumi.IntPtrInput
	// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
	PredictiveValueBehavior pulumi.StringPtrInput
	// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
	PredictiveValueBuffer pulumi.IntPtrInput
	// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleInEvaluationCount pulumi.IntPtrInput
	// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
	ScaleOutEvaluationCount pulumi.IntPtrInput
	// ID of the scaling group of a scaling rule.
	ScalingGroupId pulumi.StringInput
	// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
	ScalingRuleName pulumi.StringPtrInput
	// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
	ScalingRuleType pulumi.StringPtrInput
	// Steps for StepScalingRule. See `stepAdjustment` below.
	StepAdjustments ScalingRuleStepAdjustmentArrayInput
	// The target value for the metric.
	TargetValue pulumi.Float64PtrInput
}

func (ScalingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingRuleArgs)(nil)).Elem()
}

type ScalingRuleInput interface {
	pulumi.Input

	ToScalingRuleOutput() ScalingRuleOutput
	ToScalingRuleOutputWithContext(ctx context.Context) ScalingRuleOutput
}

func (*ScalingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingRule)(nil)).Elem()
}

func (i *ScalingRule) ToScalingRuleOutput() ScalingRuleOutput {
	return i.ToScalingRuleOutputWithContext(context.Background())
}

func (i *ScalingRule) ToScalingRuleOutputWithContext(ctx context.Context) ScalingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingRuleOutput)
}

// ScalingRuleArrayInput is an input type that accepts ScalingRuleArray and ScalingRuleArrayOutput values.
// You can construct a concrete instance of `ScalingRuleArrayInput` via:
//
//	ScalingRuleArray{ ScalingRuleArgs{...} }
type ScalingRuleArrayInput interface {
	pulumi.Input

	ToScalingRuleArrayOutput() ScalingRuleArrayOutput
	ToScalingRuleArrayOutputWithContext(context.Context) ScalingRuleArrayOutput
}

type ScalingRuleArray []ScalingRuleInput

func (ScalingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingRule)(nil)).Elem()
}

func (i ScalingRuleArray) ToScalingRuleArrayOutput() ScalingRuleArrayOutput {
	return i.ToScalingRuleArrayOutputWithContext(context.Background())
}

func (i ScalingRuleArray) ToScalingRuleArrayOutputWithContext(ctx context.Context) ScalingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingRuleArrayOutput)
}

// ScalingRuleMapInput is an input type that accepts ScalingRuleMap and ScalingRuleMapOutput values.
// You can construct a concrete instance of `ScalingRuleMapInput` via:
//
//	ScalingRuleMap{ "key": ScalingRuleArgs{...} }
type ScalingRuleMapInput interface {
	pulumi.Input

	ToScalingRuleMapOutput() ScalingRuleMapOutput
	ToScalingRuleMapOutputWithContext(context.Context) ScalingRuleMapOutput
}

type ScalingRuleMap map[string]ScalingRuleInput

func (ScalingRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingRule)(nil)).Elem()
}

func (i ScalingRuleMap) ToScalingRuleMapOutput() ScalingRuleMapOutput {
	return i.ToScalingRuleMapOutputWithContext(context.Background())
}

func (i ScalingRuleMap) ToScalingRuleMapOutputWithContext(ctx context.Context) ScalingRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingRuleMapOutput)
}

type ScalingRuleOutput struct{ *pulumi.OutputState }

func (ScalingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingRule)(nil)).Elem()
}

func (o ScalingRuleOutput) ToScalingRuleOutput() ScalingRuleOutput {
	return o
}

func (o ScalingRuleOutput) ToScalingRuleOutputWithContext(ctx context.Context) ScalingRuleOutput {
	return o
}

// Adjustment mode of a scaling rule. Optional values:
// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
func (o ScalingRuleOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringPtrOutput { return v.AdjustmentType }).(pulumi.StringPtrOutput)
}

// The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
// - QuantityChangeInCapacity：(0, 500] U (-500, 0]
// - PercentChangeInCapacity：[0, 10000] U [-100, 0]
// - TotalCapacity：[0, 1000]
func (o ScalingRuleOutput) AdjustmentValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntPtrOutput { return v.AdjustmentValue }).(pulumi.IntPtrOutput)
}

// AlarmDimension for StepScalingRule. See `alarmDimension` below.
func (o ScalingRuleOutput) AlarmDimension() ScalingRuleAlarmDimensionPtrOutput {
	return o.ApplyT(func(v *ScalingRule) ScalingRuleAlarmDimensionPtrOutput { return v.AlarmDimension }).(ScalingRuleAlarmDimensionPtrOutput)
}

// The unique identifier of the scaling rule.
func (o ScalingRuleOutput) Ari() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.Ari }).(pulumi.StringOutput)
}

// The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
func (o ScalingRuleOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntPtrOutput { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// Indicates whether scale in by the target tracking policy is disabled. Default to false.
func (o ScalingRuleOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.BoolPtrOutput { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
func (o ScalingRuleOutput) EstimatedInstanceWarmup() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.EstimatedInstanceWarmup }).(pulumi.IntOutput)
}

// The Hybrid Cloud Monitoring metrics. See `hybridMetrics` below.
func (o ScalingRuleOutput) HybridMetrics() ScalingRuleHybridMetricArrayOutput {
	return o.ApplyT(func(v *ScalingRule) ScalingRuleHybridMetricArrayOutput { return v.HybridMetrics }).(ScalingRuleHybridMetricArrayOutput)
}

// The ID of the Hybrid Cloud Monitoring metric repository.
func (o ScalingRuleOutput) HybridMonitorNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringPtrOutput { return v.HybridMonitorNamespace }).(pulumi.StringPtrOutput)
}

// The maximum number of ECS instances that can be added to the scaling group. If you specify InitialMaxSize, you must also specify PredictiveValueBehavior.
func (o ScalingRuleOutput) InitialMaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.InitialMaxSize }).(pulumi.IntOutput)
}

// A CloudMonitor metric name.
func (o ScalingRuleOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringPtrOutput { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The type of the metric. Valid values: system, custom, hybrid.
func (o ScalingRuleOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.MetricType }).(pulumi.StringOutput)
}

// The minimum number of instances that must be scaled. This parameter takes effect if you set ScalingRuleType to SimpleScalingRule or StepScalingRule, and AdjustmentType to PercentChangeInCapacity.
func (o ScalingRuleOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntPtrOutput { return v.MinAdjustmentMagnitude }).(pulumi.IntPtrOutput)
}

// The mode of the predictive scaling rule. Valid values: PredictAndScale, PredictOnly.
func (o ScalingRuleOutput) PredictiveScalingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.PredictiveScalingMode }).(pulumi.StringOutput)
}

// The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.
func (o ScalingRuleOutput) PredictiveTaskBufferTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.PredictiveTaskBufferTime }).(pulumi.IntOutput)
}

// The action on the predicted maximum value. Valid values: MaxOverridePredictiveValue, PredictiveValueOverrideMax, PredictiveValueOverrideMaxWithBuffer.
func (o ScalingRuleOutput) PredictiveValueBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.PredictiveValueBehavior }).(pulumi.StringOutput)
}

// The ratio based on which the predicted value is increased if you set PredictiveValueBehavior to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.
func (o ScalingRuleOutput) PredictiveValueBuffer() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.PredictiveValueBuffer }).(pulumi.IntOutput)
}

// The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
func (o ScalingRuleOutput) ScaleInEvaluationCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.ScaleInEvaluationCount }).(pulumi.IntOutput)
}

// The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.
func (o ScalingRuleOutput) ScaleOutEvaluationCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.IntOutput { return v.ScaleOutEvaluationCount }).(pulumi.IntOutput)
}

// ID of the scaling group of a scaling rule.
func (o ScalingRuleOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
func (o ScalingRuleOutput) ScalingRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringOutput { return v.ScalingRuleName }).(pulumi.StringOutput)
}

// The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule", "PredictiveScalingRule". Default to "SimpleScalingRule".
func (o ScalingRuleOutput) ScalingRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.StringPtrOutput { return v.ScalingRuleType }).(pulumi.StringPtrOutput)
}

// Steps for StepScalingRule. See `stepAdjustment` below.
func (o ScalingRuleOutput) StepAdjustments() ScalingRuleStepAdjustmentArrayOutput {
	return o.ApplyT(func(v *ScalingRule) ScalingRuleStepAdjustmentArrayOutput { return v.StepAdjustments }).(ScalingRuleStepAdjustmentArrayOutput)
}

// The target value for the metric.
func (o ScalingRuleOutput) TargetValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalingRule) pulumi.Float64PtrOutput { return v.TargetValue }).(pulumi.Float64PtrOutput)
}

type ScalingRuleArrayOutput struct{ *pulumi.OutputState }

func (ScalingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingRule)(nil)).Elem()
}

func (o ScalingRuleArrayOutput) ToScalingRuleArrayOutput() ScalingRuleArrayOutput {
	return o
}

func (o ScalingRuleArrayOutput) ToScalingRuleArrayOutputWithContext(ctx context.Context) ScalingRuleArrayOutput {
	return o
}

func (o ScalingRuleArrayOutput) Index(i pulumi.IntInput) ScalingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScalingRule {
		return vs[0].([]*ScalingRule)[vs[1].(int)]
	}).(ScalingRuleOutput)
}

type ScalingRuleMapOutput struct{ *pulumi.OutputState }

func (ScalingRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingRule)(nil)).Elem()
}

func (o ScalingRuleMapOutput) ToScalingRuleMapOutput() ScalingRuleMapOutput {
	return o
}

func (o ScalingRuleMapOutput) ToScalingRuleMapOutputWithContext(ctx context.Context) ScalingRuleMapOutput {
	return o
}

func (o ScalingRuleMapOutput) MapIndex(k pulumi.StringInput) ScalingRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScalingRule {
		return vs[0].(map[string]*ScalingRule)[vs[1].(string)]
	}).(ScalingRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingRuleInput)(nil)).Elem(), &ScalingRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingRuleArrayInput)(nil)).Elem(), ScalingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingRuleMapInput)(nil)).Elem(), ScalingRuleMap{})
	pulumi.RegisterOutputType(ScalingRuleOutput{})
	pulumi.RegisterOutputType(ScalingRuleArrayOutput{})
	pulumi.RegisterOutputType(ScalingRuleMapOutput{})
}
