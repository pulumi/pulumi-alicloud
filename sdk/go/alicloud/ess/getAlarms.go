// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides available alarm resources.
//
// > **NOTE** Available in 1.72.0+
func GetAlarms(ctx *pulumi.Context, args *GetAlarmsArgs, opts ...pulumi.InvokeOption) (*GetAlarmsResult, error) {
	var rv GetAlarmsResult
	err := ctx.Invoke("alicloud:ess/getAlarms:getAlarms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlarms.
type GetAlarmsArgs struct {
	// A list of alarm IDs.
	Ids []string `pulumi:"ids"`
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType *string `pulumi:"metricType"`
	// A regex string to filter resulting alarms by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// Scaling group id the alarms belong to.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

// A collection of values returned by getAlarms.
type GetAlarmsResult struct {
	// A list of alarms. Each element contains the following attributes:
	Alarms []GetAlarmsAlarm `pulumi:"alarms"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of alarm ids.
	Ids []string `pulumi:"ids"`
	// The type for the alarm's associated metric.
	MetricType *string `pulumi:"metricType"`
	NameRegex  *string `pulumi:"nameRegex"`
	// A list of alarm names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The scaling group associated with this alarm.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

func GetAlarmsOutput(ctx *pulumi.Context, args GetAlarmsOutputArgs, opts ...pulumi.InvokeOption) GetAlarmsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlarmsResult, error) {
			args := v.(GetAlarmsArgs)
			r, err := GetAlarms(ctx, &args, opts...)
			var s GetAlarmsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlarmsResultOutput)
}

// A collection of arguments for invoking getAlarms.
type GetAlarmsOutputArgs struct {
	// A list of alarm IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The type for the alarm's associated metric. Supported value: system, custom. "system" means the metric data is collected by Aliyun Cloud Monitor Service(CMS), "custom" means the metric data is upload to CMS by users. Defaults to system.
	MetricType pulumi.StringPtrInput `pulumi:"metricType"`
	// A regex string to filter resulting alarms by name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Scaling group id the alarms belong to.
	ScalingGroupId pulumi.StringPtrInput `pulumi:"scalingGroupId"`
}

func (GetAlarmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmsArgs)(nil)).Elem()
}

// A collection of values returned by getAlarms.
type GetAlarmsResultOutput struct{ *pulumi.OutputState }

func (GetAlarmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmsResult)(nil)).Elem()
}

func (o GetAlarmsResultOutput) ToGetAlarmsResultOutput() GetAlarmsResultOutput {
	return o
}

func (o GetAlarmsResultOutput) ToGetAlarmsResultOutputWithContext(ctx context.Context) GetAlarmsResultOutput {
	return o
}

// A list of alarms. Each element contains the following attributes:
func (o GetAlarmsResultOutput) Alarms() GetAlarmsAlarmArrayOutput {
	return o.ApplyT(func(v GetAlarmsResult) []GetAlarmsAlarm { return v.Alarms }).(GetAlarmsAlarmArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlarmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of alarm ids.
func (o GetAlarmsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The type for the alarm's associated metric.
func (o GetAlarmsResultOutput) MetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmsResult) *string { return v.MetricType }).(pulumi.StringPtrOutput)
}

func (o GetAlarmsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of alarm names.
func (o GetAlarmsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetAlarmsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The scaling group associated with this alarm.
func (o GetAlarmsResultOutput) ScalingGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmsResult) *string { return v.ScalingGroupId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlarmsResultOutput{})
}
