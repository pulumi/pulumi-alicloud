// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// Ess lifecycle hook can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:ess/lifecycleHook:LifecycleHook example ash-l12345
// ```
type LifecycleHook struct {
	pulumi.CustomResourceState

	// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses. Applicable value: CONTINUE, ABANDON, default value: CONTINUE.
	DefaultResult pulumi.StringPtrOutput `pulumi:"defaultResult"`
	// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the defaultResult parameter. Default value: 600.
	HeartbeatTimeout pulumi.IntPtrOutput `pulumi:"heartbeatTimeout"`
	// Type of Scaling activity attached to lifecycle hook. Supported value: SCALE_OUT, SCALE_IN.
	LifecycleTransition pulumi.StringOutput `pulumi:"lifecycleTransition"`
	// The name of the lifecycle hook, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is lifecycle hook id.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Arn of notification target.
	NotificationArn pulumi.StringOutput `pulumi:"notificationArn"`
	// Additional information that you want to include when Auto Scaling sends a message to the notification target.
	NotificationMetadata pulumi.StringOutput `pulumi:"notificationMetadata"`
	// The ID of the Auto Scaling group to which you want to assign the lifecycle hook.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
}

// NewLifecycleHook registers a new resource with the given unique name, arguments, and options.
func NewLifecycleHook(ctx *pulumi.Context,
	name string, args *LifecycleHookArgs, opts ...pulumi.ResourceOption) (*LifecycleHook, error) {
	if args == nil || args.LifecycleTransition == nil {
		return nil, errors.New("missing required argument 'LifecycleTransition'")
	}
	if args == nil || args.ScalingGroupId == nil {
		return nil, errors.New("missing required argument 'ScalingGroupId'")
	}
	if args == nil {
		args = &LifecycleHookArgs{}
	}
	var resource LifecycleHook
	err := ctx.RegisterResource("alicloud:ess/lifecycleHook:LifecycleHook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleHook gets an existing LifecycleHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleHook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleHookState, opts ...pulumi.ResourceOption) (*LifecycleHook, error) {
	var resource LifecycleHook
	err := ctx.ReadResource("alicloud:ess/lifecycleHook:LifecycleHook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleHook resources.
type lifecycleHookState struct {
	// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses. Applicable value: CONTINUE, ABANDON, default value: CONTINUE.
	DefaultResult *string `pulumi:"defaultResult"`
	// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the defaultResult parameter. Default value: 600.
	HeartbeatTimeout *int `pulumi:"heartbeatTimeout"`
	// Type of Scaling activity attached to lifecycle hook. Supported value: SCALE_OUT, SCALE_IN.
	LifecycleTransition *string `pulumi:"lifecycleTransition"`
	// The name of the lifecycle hook, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is lifecycle hook id.
	Name *string `pulumi:"name"`
	// The Arn of notification target.
	NotificationArn *string `pulumi:"notificationArn"`
	// Additional information that you want to include when Auto Scaling sends a message to the notification target.
	NotificationMetadata *string `pulumi:"notificationMetadata"`
	// The ID of the Auto Scaling group to which you want to assign the lifecycle hook.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

type LifecycleHookState struct {
	// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses. Applicable value: CONTINUE, ABANDON, default value: CONTINUE.
	DefaultResult pulumi.StringPtrInput
	// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the defaultResult parameter. Default value: 600.
	HeartbeatTimeout pulumi.IntPtrInput
	// Type of Scaling activity attached to lifecycle hook. Supported value: SCALE_OUT, SCALE_IN.
	LifecycleTransition pulumi.StringPtrInput
	// The name of the lifecycle hook, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is lifecycle hook id.
	Name pulumi.StringPtrInput
	// The Arn of notification target.
	NotificationArn pulumi.StringPtrInput
	// Additional information that you want to include when Auto Scaling sends a message to the notification target.
	NotificationMetadata pulumi.StringPtrInput
	// The ID of the Auto Scaling group to which you want to assign the lifecycle hook.
	ScalingGroupId pulumi.StringPtrInput
}

func (LifecycleHookState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleHookState)(nil)).Elem()
}

type lifecycleHookArgs struct {
	// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses. Applicable value: CONTINUE, ABANDON, default value: CONTINUE.
	DefaultResult *string `pulumi:"defaultResult"`
	// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the defaultResult parameter. Default value: 600.
	HeartbeatTimeout *int `pulumi:"heartbeatTimeout"`
	// Type of Scaling activity attached to lifecycle hook. Supported value: SCALE_OUT, SCALE_IN.
	LifecycleTransition string `pulumi:"lifecycleTransition"`
	// The name of the lifecycle hook, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is lifecycle hook id.
	Name *string `pulumi:"name"`
	// The Arn of notification target.
	NotificationArn *string `pulumi:"notificationArn"`
	// Additional information that you want to include when Auto Scaling sends a message to the notification target.
	NotificationMetadata *string `pulumi:"notificationMetadata"`
	// The ID of the Auto Scaling group to which you want to assign the lifecycle hook.
	ScalingGroupId string `pulumi:"scalingGroupId"`
}

// The set of arguments for constructing a LifecycleHook resource.
type LifecycleHookArgs struct {
	// Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses. Applicable value: CONTINUE, ABANDON, default value: CONTINUE.
	DefaultResult pulumi.StringPtrInput
	// Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the defaultResult parameter. Default value: 600.
	HeartbeatTimeout pulumi.IntPtrInput
	// Type of Scaling activity attached to lifecycle hook. Supported value: SCALE_OUT, SCALE_IN.
	LifecycleTransition pulumi.StringInput
	// The name of the lifecycle hook, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is lifecycle hook id.
	Name pulumi.StringPtrInput
	// The Arn of notification target.
	NotificationArn pulumi.StringPtrInput
	// Additional information that you want to include when Auto Scaling sends a message to the notification target.
	NotificationMetadata pulumi.StringPtrInput
	// The ID of the Auto Scaling group to which you want to assign the lifecycle hook.
	ScalingGroupId pulumi.StringInput
}

func (LifecycleHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleHookArgs)(nil)).Elem()
}

type LifecycleHookInput interface {
	pulumi.Input

	ToLifecycleHookOutput() LifecycleHookOutput
	ToLifecycleHookOutputWithContext(ctx context.Context) LifecycleHookOutput
}

func (LifecycleHook) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleHook)(nil)).Elem()
}

func (i LifecycleHook) ToLifecycleHookOutput() LifecycleHookOutput {
	return i.ToLifecycleHookOutputWithContext(context.Background())
}

func (i LifecycleHook) ToLifecycleHookOutputWithContext(ctx context.Context) LifecycleHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleHookOutput)
}

type LifecycleHookOutput struct {
	*pulumi.OutputState
}

func (LifecycleHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleHookOutput)(nil)).Elem()
}

func (o LifecycleHookOutput) ToLifecycleHookOutput() LifecycleHookOutput {
	return o
}

func (o LifecycleHookOutput) ToLifecycleHookOutputWithContext(ctx context.Context) LifecycleHookOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LifecycleHookOutput{})
}
