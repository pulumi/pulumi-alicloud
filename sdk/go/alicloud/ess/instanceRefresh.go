// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ESS instance refresh can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ess/instanceRefresh:InstanceRefresh example ir-abc123456
// ```
type InstanceRefresh struct {
	pulumi.CustomResourceState

	// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
	CheckpointPauseTime pulumi.IntOutput `pulumi:"checkpointPauseTime"`
	// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
	Checkpoints InstanceRefreshCheckpointArrayOutput `pulumi:"checkpoints"`
	// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
	DesiredConfigurationContainers InstanceRefreshDesiredConfigurationContainerArrayOutput `pulumi:"desiredConfigurationContainers"`
	// The ID of the image file. This is the image resource used for automatic instance creation.
	DesiredConfigurationImageId pulumi.StringPtrOutput `pulumi:"desiredConfigurationImageId"`
	// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
	DesiredConfigurationLaunchTemplateId pulumi.StringPtrOutput `pulumi:"desiredConfigurationLaunchTemplateId"`
	// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
	DesiredConfigurationLaunchTemplateOverrides InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayOutput `pulumi:"desiredConfigurationLaunchTemplateOverrides"`
	// The version of the launch template.
	DesiredConfigurationLaunchTemplateVersion pulumi.StringPtrOutput `pulumi:"desiredConfigurationLaunchTemplateVersion"`
	// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
	MaxHealthyPercentage pulumi.IntOutput `pulumi:"maxHealthyPercentage"`
	// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
	MinHealthyPercentage pulumi.IntOutput `pulumi:"minHealthyPercentage"`
	// The ID of the scaling group.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
	// Indicates whether to skip instances that match the desired configuration.
	SkipMatching pulumi.BoolOutput `pulumi:"skipMatching"`
	// The current status of the instance refresh task. Possible values:
	// - Pending: The instance refresh task is created and waiting to be scheduled.
	// - InProgress: The instance refresh task is in progress.
	// - Paused: The instance refresh task is paused.
	// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
	// - Failed: The instance refresh task failed.
	// - Successful: The instance refresh task was successful.
	// - Cancelling: The instance refresh task is being canceled.
	// - RollbackInProgress: The instance refresh task is being rolled back.
	// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
	// - RollbackFailed: The rollback of the instance refresh task failed.
	// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewInstanceRefresh registers a new resource with the given unique name, arguments, and options.
func NewInstanceRefresh(ctx *pulumi.Context,
	name string, args *InstanceRefreshArgs, opts ...pulumi.ResourceOption) (*InstanceRefresh, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceRefresh
	err := ctx.RegisterResource("alicloud:ess/instanceRefresh:InstanceRefresh", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceRefresh gets an existing InstanceRefresh resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceRefresh(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceRefreshState, opts ...pulumi.ResourceOption) (*InstanceRefresh, error) {
	var resource InstanceRefresh
	err := ctx.ReadResource("alicloud:ess/instanceRefresh:InstanceRefresh", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceRefresh resources.
type instanceRefreshState struct {
	// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
	CheckpointPauseTime *int `pulumi:"checkpointPauseTime"`
	// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
	Checkpoints []InstanceRefreshCheckpoint `pulumi:"checkpoints"`
	// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
	DesiredConfigurationContainers []InstanceRefreshDesiredConfigurationContainer `pulumi:"desiredConfigurationContainers"`
	// The ID of the image file. This is the image resource used for automatic instance creation.
	DesiredConfigurationImageId *string `pulumi:"desiredConfigurationImageId"`
	// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
	DesiredConfigurationLaunchTemplateId *string `pulumi:"desiredConfigurationLaunchTemplateId"`
	// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
	DesiredConfigurationLaunchTemplateOverrides []InstanceRefreshDesiredConfigurationLaunchTemplateOverride `pulumi:"desiredConfigurationLaunchTemplateOverrides"`
	// The version of the launch template.
	DesiredConfigurationLaunchTemplateVersion *string `pulumi:"desiredConfigurationLaunchTemplateVersion"`
	// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
	MaxHealthyPercentage *int `pulumi:"maxHealthyPercentage"`
	// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
	MinHealthyPercentage *int `pulumi:"minHealthyPercentage"`
	// The ID of the scaling group.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// Indicates whether to skip instances that match the desired configuration.
	SkipMatching *bool `pulumi:"skipMatching"`
	// The current status of the instance refresh task. Possible values:
	// - Pending: The instance refresh task is created and waiting to be scheduled.
	// - InProgress: The instance refresh task is in progress.
	// - Paused: The instance refresh task is paused.
	// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
	// - Failed: The instance refresh task failed.
	// - Successful: The instance refresh task was successful.
	// - Cancelling: The instance refresh task is being canceled.
	// - RollbackInProgress: The instance refresh task is being rolled back.
	// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
	// - RollbackFailed: The rollback of the instance refresh task failed.
	// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
	Status *string `pulumi:"status"`
}

type InstanceRefreshState struct {
	// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
	CheckpointPauseTime pulumi.IntPtrInput
	// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
	Checkpoints InstanceRefreshCheckpointArrayInput
	// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
	DesiredConfigurationContainers InstanceRefreshDesiredConfigurationContainerArrayInput
	// The ID of the image file. This is the image resource used for automatic instance creation.
	DesiredConfigurationImageId pulumi.StringPtrInput
	// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
	DesiredConfigurationLaunchTemplateId pulumi.StringPtrInput
	// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
	DesiredConfigurationLaunchTemplateOverrides InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayInput
	// The version of the launch template.
	DesiredConfigurationLaunchTemplateVersion pulumi.StringPtrInput
	// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
	MaxHealthyPercentage pulumi.IntPtrInput
	// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
	MinHealthyPercentage pulumi.IntPtrInput
	// The ID of the scaling group.
	ScalingGroupId pulumi.StringPtrInput
	// Indicates whether to skip instances that match the desired configuration.
	SkipMatching pulumi.BoolPtrInput
	// The current status of the instance refresh task. Possible values:
	// - Pending: The instance refresh task is created and waiting to be scheduled.
	// - InProgress: The instance refresh task is in progress.
	// - Paused: The instance refresh task is paused.
	// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
	// - Failed: The instance refresh task failed.
	// - Successful: The instance refresh task was successful.
	// - Cancelling: The instance refresh task is being canceled.
	// - RollbackInProgress: The instance refresh task is being rolled back.
	// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
	// - RollbackFailed: The rollback of the instance refresh task failed.
	// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
	Status pulumi.StringPtrInput
}

func (InstanceRefreshState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceRefreshState)(nil)).Elem()
}

type instanceRefreshArgs struct {
	// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
	CheckpointPauseTime *int `pulumi:"checkpointPauseTime"`
	// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
	Checkpoints []InstanceRefreshCheckpoint `pulumi:"checkpoints"`
	// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
	DesiredConfigurationContainers []InstanceRefreshDesiredConfigurationContainer `pulumi:"desiredConfigurationContainers"`
	// The ID of the image file. This is the image resource used for automatic instance creation.
	DesiredConfigurationImageId *string `pulumi:"desiredConfigurationImageId"`
	// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
	DesiredConfigurationLaunchTemplateId *string `pulumi:"desiredConfigurationLaunchTemplateId"`
	// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
	DesiredConfigurationLaunchTemplateOverrides []InstanceRefreshDesiredConfigurationLaunchTemplateOverride `pulumi:"desiredConfigurationLaunchTemplateOverrides"`
	// The version of the launch template.
	DesiredConfigurationLaunchTemplateVersion *string `pulumi:"desiredConfigurationLaunchTemplateVersion"`
	// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
	MaxHealthyPercentage *int `pulumi:"maxHealthyPercentage"`
	// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
	MinHealthyPercentage *int `pulumi:"minHealthyPercentage"`
	// The ID of the scaling group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// Indicates whether to skip instances that match the desired configuration.
	SkipMatching *bool `pulumi:"skipMatching"`
	// The current status of the instance refresh task. Possible values:
	// - Pending: The instance refresh task is created and waiting to be scheduled.
	// - InProgress: The instance refresh task is in progress.
	// - Paused: The instance refresh task is paused.
	// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
	// - Failed: The instance refresh task failed.
	// - Successful: The instance refresh task was successful.
	// - Cancelling: The instance refresh task is being canceled.
	// - RollbackInProgress: The instance refresh task is being rolled back.
	// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
	// - RollbackFailed: The rollback of the instance refresh task failed.
	// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a InstanceRefresh resource.
type InstanceRefreshArgs struct {
	// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
	CheckpointPauseTime pulumi.IntPtrInput
	// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
	Checkpoints InstanceRefreshCheckpointArrayInput
	// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
	DesiredConfigurationContainers InstanceRefreshDesiredConfigurationContainerArrayInput
	// The ID of the image file. This is the image resource used for automatic instance creation.
	DesiredConfigurationImageId pulumi.StringPtrInput
	// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
	DesiredConfigurationLaunchTemplateId pulumi.StringPtrInput
	// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
	DesiredConfigurationLaunchTemplateOverrides InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayInput
	// The version of the launch template.
	DesiredConfigurationLaunchTemplateVersion pulumi.StringPtrInput
	// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
	MaxHealthyPercentage pulumi.IntPtrInput
	// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
	MinHealthyPercentage pulumi.IntPtrInput
	// The ID of the scaling group.
	ScalingGroupId pulumi.StringInput
	// Indicates whether to skip instances that match the desired configuration.
	SkipMatching pulumi.BoolPtrInput
	// The current status of the instance refresh task. Possible values:
	// - Pending: The instance refresh task is created and waiting to be scheduled.
	// - InProgress: The instance refresh task is in progress.
	// - Paused: The instance refresh task is paused.
	// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
	// - Failed: The instance refresh task failed.
	// - Successful: The instance refresh task was successful.
	// - Cancelling: The instance refresh task is being canceled.
	// - RollbackInProgress: The instance refresh task is being rolled back.
	// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
	// - RollbackFailed: The rollback of the instance refresh task failed.
	// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
	Status pulumi.StringPtrInput
}

func (InstanceRefreshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceRefreshArgs)(nil)).Elem()
}

type InstanceRefreshInput interface {
	pulumi.Input

	ToInstanceRefreshOutput() InstanceRefreshOutput
	ToInstanceRefreshOutputWithContext(ctx context.Context) InstanceRefreshOutput
}

func (*InstanceRefresh) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRefresh)(nil)).Elem()
}

func (i *InstanceRefresh) ToInstanceRefreshOutput() InstanceRefreshOutput {
	return i.ToInstanceRefreshOutputWithContext(context.Background())
}

func (i *InstanceRefresh) ToInstanceRefreshOutputWithContext(ctx context.Context) InstanceRefreshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRefreshOutput)
}

// InstanceRefreshArrayInput is an input type that accepts InstanceRefreshArray and InstanceRefreshArrayOutput values.
// You can construct a concrete instance of `InstanceRefreshArrayInput` via:
//
//	InstanceRefreshArray{ InstanceRefreshArgs{...} }
type InstanceRefreshArrayInput interface {
	pulumi.Input

	ToInstanceRefreshArrayOutput() InstanceRefreshArrayOutput
	ToInstanceRefreshArrayOutputWithContext(context.Context) InstanceRefreshArrayOutput
}

type InstanceRefreshArray []InstanceRefreshInput

func (InstanceRefreshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceRefresh)(nil)).Elem()
}

func (i InstanceRefreshArray) ToInstanceRefreshArrayOutput() InstanceRefreshArrayOutput {
	return i.ToInstanceRefreshArrayOutputWithContext(context.Background())
}

func (i InstanceRefreshArray) ToInstanceRefreshArrayOutputWithContext(ctx context.Context) InstanceRefreshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRefreshArrayOutput)
}

// InstanceRefreshMapInput is an input type that accepts InstanceRefreshMap and InstanceRefreshMapOutput values.
// You can construct a concrete instance of `InstanceRefreshMapInput` via:
//
//	InstanceRefreshMap{ "key": InstanceRefreshArgs{...} }
type InstanceRefreshMapInput interface {
	pulumi.Input

	ToInstanceRefreshMapOutput() InstanceRefreshMapOutput
	ToInstanceRefreshMapOutputWithContext(context.Context) InstanceRefreshMapOutput
}

type InstanceRefreshMap map[string]InstanceRefreshInput

func (InstanceRefreshMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceRefresh)(nil)).Elem()
}

func (i InstanceRefreshMap) ToInstanceRefreshMapOutput() InstanceRefreshMapOutput {
	return i.ToInstanceRefreshMapOutputWithContext(context.Background())
}

func (i InstanceRefreshMap) ToInstanceRefreshMapOutputWithContext(ctx context.Context) InstanceRefreshMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRefreshMapOutput)
}

type InstanceRefreshOutput struct{ *pulumi.OutputState }

func (InstanceRefreshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRefresh)(nil)).Elem()
}

func (o InstanceRefreshOutput) ToInstanceRefreshOutput() InstanceRefreshOutput {
	return o
}

func (o InstanceRefreshOutput) ToInstanceRefreshOutputWithContext(ctx context.Context) InstanceRefreshOutput {
	return o
}

// The duration of the pause when the task reaches a checkpoint. Unit: minutes.
func (o InstanceRefreshOutput) CheckpointPauseTime() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.IntOutput { return v.CheckpointPauseTime }).(pulumi.IntOutput)
}

// The checkpoints for the refresh task. The task automatically pauses for the duration specified by CheckpointPauseTime when the percentage of new instances reaches a specified value. See `checkpoints` below for details.
func (o InstanceRefreshOutput) Checkpoints() InstanceRefreshCheckpointArrayOutput {
	return o.ApplyT(func(v *InstanceRefresh) InstanceRefreshCheckpointArrayOutput { return v.Checkpoints }).(InstanceRefreshCheckpointArrayOutput)
}

// The list of containers in the instance. See `desiredConfigurationContainers` below for details.
func (o InstanceRefreshOutput) DesiredConfigurationContainers() InstanceRefreshDesiredConfigurationContainerArrayOutput {
	return o.ApplyT(func(v *InstanceRefresh) InstanceRefreshDesiredConfigurationContainerArrayOutput {
		return v.DesiredConfigurationContainers
	}).(InstanceRefreshDesiredConfigurationContainerArrayOutput)
}

// The ID of the image file. This is the image resource used for automatic instance creation.
func (o InstanceRefreshOutput) DesiredConfigurationImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.StringPtrOutput { return v.DesiredConfigurationImageId }).(pulumi.StringPtrOutput)
}

// The ID of the launch template. The scaling group uses this template to obtain launch configuration information.
func (o InstanceRefreshOutput) DesiredConfigurationLaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.StringPtrOutput { return v.DesiredConfigurationLaunchTemplateId }).(pulumi.StringPtrOutput)
}

// The instance type information in the launch template overrides. See `desiredConfigurationLaunchTemplateOverrides` below for details.
func (o InstanceRefreshOutput) DesiredConfigurationLaunchTemplateOverrides() InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayOutput {
	return o.ApplyT(func(v *InstanceRefresh) InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayOutput {
		return v.DesiredConfigurationLaunchTemplateOverrides
	}).(InstanceRefreshDesiredConfigurationLaunchTemplateOverrideArrayOutput)
}

// The version of the launch template.
func (o InstanceRefreshOutput) DesiredConfigurationLaunchTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.StringPtrOutput { return v.DesiredConfigurationLaunchTemplateVersion }).(pulumi.StringPtrOutput)
}

// The percentage by which the number of instances in the scaling group can exceed the group's capacity during the instance refresh.
func (o InstanceRefreshOutput) MaxHealthyPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.IntOutput { return v.MaxHealthyPercentage }).(pulumi.IntOutput)
}

// The percentage of instances that must be healthy in the scaling group during the instance refresh. The value is a percentage of the scaling group's capacity.
func (o InstanceRefreshOutput) MinHealthyPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.IntOutput { return v.MinHealthyPercentage }).(pulumi.IntOutput)
}

// The ID of the scaling group.
func (o InstanceRefreshOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.StringOutput { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// Indicates whether to skip instances that match the desired configuration.
func (o InstanceRefreshOutput) SkipMatching() pulumi.BoolOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.BoolOutput { return v.SkipMatching }).(pulumi.BoolOutput)
}

// The current status of the instance refresh task. Possible values:
// - Pending: The instance refresh task is created and waiting to be scheduled.
// - InProgress: The instance refresh task is in progress.
// - Paused: The instance refresh task is paused.
// - CheckpointPause: The task is paused because it has reached a checkpoint (Checkpoint.Percentage).
// - Failed: The instance refresh task failed.
// - Successful: The instance refresh task was successful.
// - Cancelling: The instance refresh task is being canceled.
// - RollbackInProgress: The instance refresh task is being rolled back.
// - RollbackSuccessful: The instance refresh task was rolled back successfully. Set RollbackSuccessful to rollback the instance refresh task.
// - RollbackFailed: The rollback of the instance refresh task failed.
// - Cancelled:  The instance refresh task is canceled. Set Cancelled to cancel the instance refresh task.
func (o InstanceRefreshOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceRefresh) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type InstanceRefreshArrayOutput struct{ *pulumi.OutputState }

func (InstanceRefreshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceRefresh)(nil)).Elem()
}

func (o InstanceRefreshArrayOutput) ToInstanceRefreshArrayOutput() InstanceRefreshArrayOutput {
	return o
}

func (o InstanceRefreshArrayOutput) ToInstanceRefreshArrayOutputWithContext(ctx context.Context) InstanceRefreshArrayOutput {
	return o
}

func (o InstanceRefreshArrayOutput) Index(i pulumi.IntInput) InstanceRefreshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceRefresh {
		return vs[0].([]*InstanceRefresh)[vs[1].(int)]
	}).(InstanceRefreshOutput)
}

type InstanceRefreshMapOutput struct{ *pulumi.OutputState }

func (InstanceRefreshMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceRefresh)(nil)).Elem()
}

func (o InstanceRefreshMapOutput) ToInstanceRefreshMapOutput() InstanceRefreshMapOutput {
	return o
}

func (o InstanceRefreshMapOutput) ToInstanceRefreshMapOutputWithContext(ctx context.Context) InstanceRefreshMapOutput {
	return o
}

func (o InstanceRefreshMapOutput) MapIndex(k pulumi.StringInput) InstanceRefreshOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceRefresh {
		return vs[0].(map[string]*InstanceRefresh)[vs[1].(string)]
	}).(InstanceRefreshOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRefreshInput)(nil)).Elem(), &InstanceRefresh{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRefreshArrayInput)(nil)).Elem(), InstanceRefreshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRefreshMapInput)(nil)).Elem(), InstanceRefreshMap{})
	pulumi.RegisterOutputType(InstanceRefreshOutput{})
	pulumi.RegisterOutputType(InstanceRefreshArrayOutput{})
	pulumi.RegisterOutputType(InstanceRefreshMapOutput{})
}
