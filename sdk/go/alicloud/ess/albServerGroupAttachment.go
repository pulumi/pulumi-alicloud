// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Attaches/Detaches alb server group to a specified scaling group.
//
// For information about alb server group attachment, see [AttachAlbServerGroups](https://www.alibabacloud.com/help/en/doc-detail/266800.html).
//
// > **NOTE:** If scaling group's network type is `VPC`, the alb server groups must be in the same `VPC`.
//
// > **NOTE:** Alb server group attachment is defined uniquely by `scalingGroupId`, `albServerGroupId`, `port`.
//
// > **NOTE:** Resource `ess.AlbServerGroupAttachment` don't support modification.
//
// > **NOTE:** Resource `ess.AlbServerGroupAttachment` is available in 1.158.0+.
//
// ## Import
//
// ESS alb server groups can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:ess/albServerGroupAttachment:AlbServerGroupAttachment example asg-xxx:sgp-xxx:5000
// ```
type AlbServerGroupAttachment struct {
	pulumi.CustomResourceState

	// ID of Alb Server Group.
	AlbServerGroupId pulumi.StringOutput `pulumi:"albServerGroupId"`
	// If instances of scaling group are attached/removed from slb backend server when attach/detach alb
	// server group from scaling group. Default to false.
	ForceAttach pulumi.BoolPtrOutput `pulumi:"forceAttach"`
	// - The port will be used for Alb Server Group backend server.
	Port pulumi.IntOutput `pulumi:"port"`
	// ID of the scaling group.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
	// The weight of an ECS instance attached to the Alb Server Group.
	Weight pulumi.IntOutput `pulumi:"weight"`
}

// NewAlbServerGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewAlbServerGroupAttachment(ctx *pulumi.Context,
	name string, args *AlbServerGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*AlbServerGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlbServerGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AlbServerGroupId'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupId'")
	}
	if args.Weight == nil {
		return nil, errors.New("invalid value for required argument 'Weight'")
	}
	var resource AlbServerGroupAttachment
	err := ctx.RegisterResource("alicloud:ess/albServerGroupAttachment:AlbServerGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlbServerGroupAttachment gets an existing AlbServerGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlbServerGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlbServerGroupAttachmentState, opts ...pulumi.ResourceOption) (*AlbServerGroupAttachment, error) {
	var resource AlbServerGroupAttachment
	err := ctx.ReadResource("alicloud:ess/albServerGroupAttachment:AlbServerGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlbServerGroupAttachment resources.
type albServerGroupAttachmentState struct {
	// ID of Alb Server Group.
	AlbServerGroupId *string `pulumi:"albServerGroupId"`
	// If instances of scaling group are attached/removed from slb backend server when attach/detach alb
	// server group from scaling group. Default to false.
	ForceAttach *bool `pulumi:"forceAttach"`
	// - The port will be used for Alb Server Group backend server.
	Port *int `pulumi:"port"`
	// ID of the scaling group.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// The weight of an ECS instance attached to the Alb Server Group.
	Weight *int `pulumi:"weight"`
}

type AlbServerGroupAttachmentState struct {
	// ID of Alb Server Group.
	AlbServerGroupId pulumi.StringPtrInput
	// If instances of scaling group are attached/removed from slb backend server when attach/detach alb
	// server group from scaling group. Default to false.
	ForceAttach pulumi.BoolPtrInput
	// - The port will be used for Alb Server Group backend server.
	Port pulumi.IntPtrInput
	// ID of the scaling group.
	ScalingGroupId pulumi.StringPtrInput
	// The weight of an ECS instance attached to the Alb Server Group.
	Weight pulumi.IntPtrInput
}

func (AlbServerGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*albServerGroupAttachmentState)(nil)).Elem()
}

type albServerGroupAttachmentArgs struct {
	// ID of Alb Server Group.
	AlbServerGroupId string `pulumi:"albServerGroupId"`
	// If instances of scaling group are attached/removed from slb backend server when attach/detach alb
	// server group from scaling group. Default to false.
	ForceAttach *bool `pulumi:"forceAttach"`
	// - The port will be used for Alb Server Group backend server.
	Port int `pulumi:"port"`
	// ID of the scaling group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// The weight of an ECS instance attached to the Alb Server Group.
	Weight int `pulumi:"weight"`
}

// The set of arguments for constructing a AlbServerGroupAttachment resource.
type AlbServerGroupAttachmentArgs struct {
	// ID of Alb Server Group.
	AlbServerGroupId pulumi.StringInput
	// If instances of scaling group are attached/removed from slb backend server when attach/detach alb
	// server group from scaling group. Default to false.
	ForceAttach pulumi.BoolPtrInput
	// - The port will be used for Alb Server Group backend server.
	Port pulumi.IntInput
	// ID of the scaling group.
	ScalingGroupId pulumi.StringInput
	// The weight of an ECS instance attached to the Alb Server Group.
	Weight pulumi.IntInput
}

func (AlbServerGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*albServerGroupAttachmentArgs)(nil)).Elem()
}

type AlbServerGroupAttachmentInput interface {
	pulumi.Input

	ToAlbServerGroupAttachmentOutput() AlbServerGroupAttachmentOutput
	ToAlbServerGroupAttachmentOutputWithContext(ctx context.Context) AlbServerGroupAttachmentOutput
}

func (*AlbServerGroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbServerGroupAttachment)(nil)).Elem()
}

func (i *AlbServerGroupAttachment) ToAlbServerGroupAttachmentOutput() AlbServerGroupAttachmentOutput {
	return i.ToAlbServerGroupAttachmentOutputWithContext(context.Background())
}

func (i *AlbServerGroupAttachment) ToAlbServerGroupAttachmentOutputWithContext(ctx context.Context) AlbServerGroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbServerGroupAttachmentOutput)
}

// AlbServerGroupAttachmentArrayInput is an input type that accepts AlbServerGroupAttachmentArray and AlbServerGroupAttachmentArrayOutput values.
// You can construct a concrete instance of `AlbServerGroupAttachmentArrayInput` via:
//
//          AlbServerGroupAttachmentArray{ AlbServerGroupAttachmentArgs{...} }
type AlbServerGroupAttachmentArrayInput interface {
	pulumi.Input

	ToAlbServerGroupAttachmentArrayOutput() AlbServerGroupAttachmentArrayOutput
	ToAlbServerGroupAttachmentArrayOutputWithContext(context.Context) AlbServerGroupAttachmentArrayOutput
}

type AlbServerGroupAttachmentArray []AlbServerGroupAttachmentInput

func (AlbServerGroupAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlbServerGroupAttachment)(nil)).Elem()
}

func (i AlbServerGroupAttachmentArray) ToAlbServerGroupAttachmentArrayOutput() AlbServerGroupAttachmentArrayOutput {
	return i.ToAlbServerGroupAttachmentArrayOutputWithContext(context.Background())
}

func (i AlbServerGroupAttachmentArray) ToAlbServerGroupAttachmentArrayOutputWithContext(ctx context.Context) AlbServerGroupAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbServerGroupAttachmentArrayOutput)
}

// AlbServerGroupAttachmentMapInput is an input type that accepts AlbServerGroupAttachmentMap and AlbServerGroupAttachmentMapOutput values.
// You can construct a concrete instance of `AlbServerGroupAttachmentMapInput` via:
//
//          AlbServerGroupAttachmentMap{ "key": AlbServerGroupAttachmentArgs{...} }
type AlbServerGroupAttachmentMapInput interface {
	pulumi.Input

	ToAlbServerGroupAttachmentMapOutput() AlbServerGroupAttachmentMapOutput
	ToAlbServerGroupAttachmentMapOutputWithContext(context.Context) AlbServerGroupAttachmentMapOutput
}

type AlbServerGroupAttachmentMap map[string]AlbServerGroupAttachmentInput

func (AlbServerGroupAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlbServerGroupAttachment)(nil)).Elem()
}

func (i AlbServerGroupAttachmentMap) ToAlbServerGroupAttachmentMapOutput() AlbServerGroupAttachmentMapOutput {
	return i.ToAlbServerGroupAttachmentMapOutputWithContext(context.Background())
}

func (i AlbServerGroupAttachmentMap) ToAlbServerGroupAttachmentMapOutputWithContext(ctx context.Context) AlbServerGroupAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbServerGroupAttachmentMapOutput)
}

type AlbServerGroupAttachmentOutput struct{ *pulumi.OutputState }

func (AlbServerGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbServerGroupAttachment)(nil)).Elem()
}

func (o AlbServerGroupAttachmentOutput) ToAlbServerGroupAttachmentOutput() AlbServerGroupAttachmentOutput {
	return o
}

func (o AlbServerGroupAttachmentOutput) ToAlbServerGroupAttachmentOutputWithContext(ctx context.Context) AlbServerGroupAttachmentOutput {
	return o
}

type AlbServerGroupAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AlbServerGroupAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlbServerGroupAttachment)(nil)).Elem()
}

func (o AlbServerGroupAttachmentArrayOutput) ToAlbServerGroupAttachmentArrayOutput() AlbServerGroupAttachmentArrayOutput {
	return o
}

func (o AlbServerGroupAttachmentArrayOutput) ToAlbServerGroupAttachmentArrayOutputWithContext(ctx context.Context) AlbServerGroupAttachmentArrayOutput {
	return o
}

func (o AlbServerGroupAttachmentArrayOutput) Index(i pulumi.IntInput) AlbServerGroupAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlbServerGroupAttachment {
		return vs[0].([]*AlbServerGroupAttachment)[vs[1].(int)]
	}).(AlbServerGroupAttachmentOutput)
}

type AlbServerGroupAttachmentMapOutput struct{ *pulumi.OutputState }

func (AlbServerGroupAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlbServerGroupAttachment)(nil)).Elem()
}

func (o AlbServerGroupAttachmentMapOutput) ToAlbServerGroupAttachmentMapOutput() AlbServerGroupAttachmentMapOutput {
	return o
}

func (o AlbServerGroupAttachmentMapOutput) ToAlbServerGroupAttachmentMapOutputWithContext(ctx context.Context) AlbServerGroupAttachmentMapOutput {
	return o
}

func (o AlbServerGroupAttachmentMapOutput) MapIndex(k pulumi.StringInput) AlbServerGroupAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlbServerGroupAttachment {
		return vs[0].(map[string]*AlbServerGroupAttachment)[vs[1].(string)]
	}).(AlbServerGroupAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlbServerGroupAttachmentInput)(nil)).Elem(), &AlbServerGroupAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbServerGroupAttachmentArrayInput)(nil)).Elem(), AlbServerGroupAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbServerGroupAttachmentMapInput)(nil)).Elem(), AlbServerGroupAttachmentMap{})
	pulumi.RegisterOutputType(AlbServerGroupAttachmentOutput{})
	pulumi.RegisterOutputType(AlbServerGroupAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AlbServerGroupAttachmentMapOutput{})
}
