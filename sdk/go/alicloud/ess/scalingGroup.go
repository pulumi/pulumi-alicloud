// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ESS scaling group can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:ess/scalingGroup:ScalingGroup example asg-abc123456
//
// ```
type ScalingGroup struct {
	pulumi.CustomResourceState

	// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
	// - The specified RDS instance must be in running status.
	// - The specified RDS instance’s whitelist must have room for more IP addresses.
	DbInstanceIds pulumi.StringArrayOutput `pulumi:"dbInstanceIds"`
	// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
	DefaultCooldown pulumi.IntPtrOutput `pulumi:"defaultCooldown"`
	// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
	DesiredCapacity pulumi.IntPtrOutput `pulumi:"desiredCapacity"`
	// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
	GroupDeletionProtection pulumi.BoolPtrOutput `pulumi:"groupDeletionProtection"`
	// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
	HealthCheckType pulumi.StringOutput `pulumi:"healthCheckType"`
	// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
	LaunchTemplateId pulumi.StringPtrOutput `pulumi:"launchTemplateId"`
	// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
	LaunchTemplateVersion pulumi.StringPtrOutput `pulumi:"launchTemplateVersion"`
	// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
	// - The Server Load Balancer instance must be enabled.
	// - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
	//   targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
	// - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
	// - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
	LoadbalancerIds pulumi.StringArrayOutput `pulumi:"loadbalancerIds"`
	// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
	MaxSize pulumi.IntOutput `pulumi:"maxSize"`
	// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
	MinSize pulumi.IntOutput `pulumi:"minSize"`
	// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
	MultiAzPolicy pulumi.StringPtrOutput `pulumi:"multiAzPolicy"`
	// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
	OnDemandBaseCapacity pulumi.IntOutput `pulumi:"onDemandBaseCapacity"`
	// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
	OnDemandPercentageAboveBaseCapacity pulumi.IntOutput `pulumi:"onDemandPercentageAboveBaseCapacity"`
	// Set or unset instances within group into protected status.
	ProtectedInstances pulumi.StringArrayOutput `pulumi:"protectedInstances"`
	// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
	// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
	// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
	// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
	// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
	RemovalPolicies pulumi.StringArrayOutput `pulumi:"removalPolicies"`
	// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
	ScalingGroupName pulumi.StringPtrOutput `pulumi:"scalingGroupName"`
	// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
	SpotInstancePools pulumi.IntOutput `pulumi:"spotInstancePools"`
	// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
	SpotInstanceRemedy pulumi.BoolOutput `pulumi:"spotInstanceRemedy"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
	//
	// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
	VswitchId pulumi.StringPtrOutput `pulumi:"vswitchId"`
	// List of virtual switch IDs in which the ecs instances to be launched.
	VswitchIds pulumi.StringArrayOutput `pulumi:"vswitchIds"`
}

// NewScalingGroup registers a new resource with the given unique name, arguments, and options.
func NewScalingGroup(ctx *pulumi.Context,
	name string, args *ScalingGroupArgs, opts ...pulumi.ResourceOption) (*ScalingGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaxSize == nil {
		return nil, errors.New("invalid value for required argument 'MaxSize'")
	}
	if args.MinSize == nil {
		return nil, errors.New("invalid value for required argument 'MinSize'")
	}
	var resource ScalingGroup
	err := ctx.RegisterResource("alicloud:ess/scalingGroup:ScalingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalingGroup gets an existing ScalingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalingGroupState, opts ...pulumi.ResourceOption) (*ScalingGroup, error) {
	var resource ScalingGroup
	err := ctx.ReadResource("alicloud:ess/scalingGroup:ScalingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalingGroup resources.
type scalingGroupState struct {
	// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
	// - The specified RDS instance must be in running status.
	// - The specified RDS instance’s whitelist must have room for more IP addresses.
	DbInstanceIds []string `pulumi:"dbInstanceIds"`
	// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
	DefaultCooldown *int `pulumi:"defaultCooldown"`
	// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
	DesiredCapacity *int `pulumi:"desiredCapacity"`
	// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
	GroupDeletionProtection *bool `pulumi:"groupDeletionProtection"`
	// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
	GroupType *string `pulumi:"groupType"`
	// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
	HealthCheckType *string `pulumi:"healthCheckType"`
	// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
	LaunchTemplateVersion *string `pulumi:"launchTemplateVersion"`
	// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
	// - The Server Load Balancer instance must be enabled.
	// - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
	//   targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
	// - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
	// - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
	LoadbalancerIds []string `pulumi:"loadbalancerIds"`
	// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
	MaxSize *int `pulumi:"maxSize"`
	// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
	MinSize *int `pulumi:"minSize"`
	// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
	MultiAzPolicy *string `pulumi:"multiAzPolicy"`
	// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
	OnDemandBaseCapacity *int `pulumi:"onDemandBaseCapacity"`
	// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
	OnDemandPercentageAboveBaseCapacity *int `pulumi:"onDemandPercentageAboveBaseCapacity"`
	// Set or unset instances within group into protected status.
	ProtectedInstances []string `pulumi:"protectedInstances"`
	// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
	// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
	// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
	// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
	// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
	RemovalPolicies []string `pulumi:"removalPolicies"`
	// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
	ScalingGroupName *string `pulumi:"scalingGroupName"`
	// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
	SpotInstancePools *int `pulumi:"spotInstancePools"`
	// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
	SpotInstanceRemedy *bool `pulumi:"spotInstanceRemedy"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
	//
	// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
	VswitchId *string `pulumi:"vswitchId"`
	// List of virtual switch IDs in which the ecs instances to be launched.
	VswitchIds []string `pulumi:"vswitchIds"`
}

type ScalingGroupState struct {
	// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
	// - The specified RDS instance must be in running status.
	// - The specified RDS instance’s whitelist must have room for more IP addresses.
	DbInstanceIds pulumi.StringArrayInput
	// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
	DefaultCooldown pulumi.IntPtrInput
	// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
	DesiredCapacity pulumi.IntPtrInput
	// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
	GroupDeletionProtection pulumi.BoolPtrInput
	// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
	GroupType pulumi.StringPtrInput
	// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
	HealthCheckType pulumi.StringPtrInput
	// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
	LaunchTemplateId pulumi.StringPtrInput
	// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
	LaunchTemplateVersion pulumi.StringPtrInput
	// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
	// - The Server Load Balancer instance must be enabled.
	// - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
	//   targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
	// - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
	// - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
	LoadbalancerIds pulumi.StringArrayInput
	// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
	MaxSize pulumi.IntPtrInput
	// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
	MinSize pulumi.IntPtrInput
	// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
	MultiAzPolicy pulumi.StringPtrInput
	// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
	OnDemandBaseCapacity pulumi.IntPtrInput
	// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
	OnDemandPercentageAboveBaseCapacity pulumi.IntPtrInput
	// Set or unset instances within group into protected status.
	ProtectedInstances pulumi.StringArrayInput
	// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
	// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
	// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
	// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
	// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
	RemovalPolicies pulumi.StringArrayInput
	// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
	ScalingGroupName pulumi.StringPtrInput
	// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
	SpotInstancePools pulumi.IntPtrInput
	// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
	SpotInstanceRemedy pulumi.BoolPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
	//
	// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
	VswitchId pulumi.StringPtrInput
	// List of virtual switch IDs in which the ecs instances to be launched.
	VswitchIds pulumi.StringArrayInput
}

func (ScalingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingGroupState)(nil)).Elem()
}

type scalingGroupArgs struct {
	// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
	// - The specified RDS instance must be in running status.
	// - The specified RDS instance’s whitelist must have room for more IP addresses.
	DbInstanceIds []string `pulumi:"dbInstanceIds"`
	// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
	DefaultCooldown *int `pulumi:"defaultCooldown"`
	// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
	DesiredCapacity *int `pulumi:"desiredCapacity"`
	// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
	GroupDeletionProtection *bool `pulumi:"groupDeletionProtection"`
	// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
	GroupType *string `pulumi:"groupType"`
	// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
	HealthCheckType *string `pulumi:"healthCheckType"`
	// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
	LaunchTemplateVersion *string `pulumi:"launchTemplateVersion"`
	// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
	// - The Server Load Balancer instance must be enabled.
	// - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
	//   targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
	// - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
	// - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
	LoadbalancerIds []string `pulumi:"loadbalancerIds"`
	// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
	MaxSize int `pulumi:"maxSize"`
	// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
	MinSize int `pulumi:"minSize"`
	// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
	MultiAzPolicy *string `pulumi:"multiAzPolicy"`
	// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
	OnDemandBaseCapacity *int `pulumi:"onDemandBaseCapacity"`
	// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
	OnDemandPercentageAboveBaseCapacity *int `pulumi:"onDemandPercentageAboveBaseCapacity"`
	// Set or unset instances within group into protected status.
	ProtectedInstances []string `pulumi:"protectedInstances"`
	// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
	// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
	// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
	// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
	// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
	RemovalPolicies []string `pulumi:"removalPolicies"`
	// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
	ScalingGroupName *string `pulumi:"scalingGroupName"`
	// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
	SpotInstancePools *int `pulumi:"spotInstancePools"`
	// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
	SpotInstanceRemedy *bool `pulumi:"spotInstanceRemedy"`
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags map[string]interface{} `pulumi:"tags"`
	// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
	//
	// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
	VswitchId *string `pulumi:"vswitchId"`
	// List of virtual switch IDs in which the ecs instances to be launched.
	VswitchIds []string `pulumi:"vswitchIds"`
}

// The set of arguments for constructing a ScalingGroup resource.
type ScalingGroupArgs struct {
	// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
	// - The specified RDS instance must be in running status.
	// - The specified RDS instance’s whitelist must have room for more IP addresses.
	DbInstanceIds pulumi.StringArrayInput
	// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
	DefaultCooldown pulumi.IntPtrInput
	// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
	DesiredCapacity pulumi.IntPtrInput
	// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
	GroupDeletionProtection pulumi.BoolPtrInput
	// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
	GroupType pulumi.StringPtrInput
	// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
	HealthCheckType pulumi.StringPtrInput
	// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
	LaunchTemplateId pulumi.StringPtrInput
	// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
	LaunchTemplateVersion pulumi.StringPtrInput
	// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
	// - The Server Load Balancer instance must be enabled.
	// - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
	//   targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
	// - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
	// - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
	LoadbalancerIds pulumi.StringArrayInput
	// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
	MaxSize pulumi.IntInput
	// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
	MinSize pulumi.IntInput
	// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
	MultiAzPolicy pulumi.StringPtrInput
	// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
	OnDemandBaseCapacity pulumi.IntPtrInput
	// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
	OnDemandPercentageAboveBaseCapacity pulumi.IntPtrInput
	// Set or unset instances within group into protected status.
	ProtectedInstances pulumi.StringArrayInput
	// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
	// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
	// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
	// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
	// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
	RemovalPolicies pulumi.StringArrayInput
	// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
	ScalingGroupName pulumi.StringPtrInput
	// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
	SpotInstancePools pulumi.IntPtrInput
	// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
	SpotInstanceRemedy pulumi.BoolPtrInput
	// A mapping of tags to assign to the resource.
	// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
	// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
	Tags pulumi.MapInput
	// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
	//
	// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
	VswitchId pulumi.StringPtrInput
	// List of virtual switch IDs in which the ecs instances to be launched.
	VswitchIds pulumi.StringArrayInput
}

func (ScalingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingGroupArgs)(nil)).Elem()
}

type ScalingGroupInput interface {
	pulumi.Input

	ToScalingGroupOutput() ScalingGroupOutput
	ToScalingGroupOutputWithContext(ctx context.Context) ScalingGroupOutput
}

func (*ScalingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingGroup)(nil)).Elem()
}

func (i *ScalingGroup) ToScalingGroupOutput() ScalingGroupOutput {
	return i.ToScalingGroupOutputWithContext(context.Background())
}

func (i *ScalingGroup) ToScalingGroupOutputWithContext(ctx context.Context) ScalingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupOutput)
}

// ScalingGroupArrayInput is an input type that accepts ScalingGroupArray and ScalingGroupArrayOutput values.
// You can construct a concrete instance of `ScalingGroupArrayInput` via:
//
//	ScalingGroupArray{ ScalingGroupArgs{...} }
type ScalingGroupArrayInput interface {
	pulumi.Input

	ToScalingGroupArrayOutput() ScalingGroupArrayOutput
	ToScalingGroupArrayOutputWithContext(context.Context) ScalingGroupArrayOutput
}

type ScalingGroupArray []ScalingGroupInput

func (ScalingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingGroup)(nil)).Elem()
}

func (i ScalingGroupArray) ToScalingGroupArrayOutput() ScalingGroupArrayOutput {
	return i.ToScalingGroupArrayOutputWithContext(context.Background())
}

func (i ScalingGroupArray) ToScalingGroupArrayOutputWithContext(ctx context.Context) ScalingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupArrayOutput)
}

// ScalingGroupMapInput is an input type that accepts ScalingGroupMap and ScalingGroupMapOutput values.
// You can construct a concrete instance of `ScalingGroupMapInput` via:
//
//	ScalingGroupMap{ "key": ScalingGroupArgs{...} }
type ScalingGroupMapInput interface {
	pulumi.Input

	ToScalingGroupMapOutput() ScalingGroupMapOutput
	ToScalingGroupMapOutputWithContext(context.Context) ScalingGroupMapOutput
}

type ScalingGroupMap map[string]ScalingGroupInput

func (ScalingGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingGroup)(nil)).Elem()
}

func (i ScalingGroupMap) ToScalingGroupMapOutput() ScalingGroupMapOutput {
	return i.ToScalingGroupMapOutputWithContext(context.Background())
}

func (i ScalingGroupMap) ToScalingGroupMapOutputWithContext(ctx context.Context) ScalingGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupMapOutput)
}

type ScalingGroupOutput struct{ *pulumi.OutputState }

func (ScalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingGroup)(nil)).Elem()
}

func (o ScalingGroupOutput) ToScalingGroupOutput() ScalingGroupOutput {
	return o
}

func (o ScalingGroupOutput) ToScalingGroupOutputWithContext(ctx context.Context) ScalingGroupOutput {
	return o
}

// If an RDS instance is specified in the scaling group, the scaling group automatically attaches the Intranet IP addresses of its ECS instances to the RDS access whitelist.
// - The specified RDS instance must be in running status.
// - The specified RDS instance’s whitelist must have room for more IP addresses.
func (o ScalingGroupOutput) DbInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringArrayOutput { return v.DbInstanceIds }).(pulumi.StringArrayOutput)
}

// Default cool-down time (in seconds) of the scaling group. Value range: [0, 86400]. The default value is 300s.
func (o ScalingGroupOutput) DefaultCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntPtrOutput { return v.DefaultCooldown }).(pulumi.IntPtrOutput)
}

// Expected number of ECS instances in the scaling group. Value range: [min_size, maxSize].
func (o ScalingGroupOutput) DesiredCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntPtrOutput { return v.DesiredCapacity }).(pulumi.IntPtrOutput)
}

// Specifies whether the scaling group deletion protection is enabled. `true` or `false`, Default value: `false`.
func (o ScalingGroupOutput) GroupDeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.BoolPtrOutput { return v.GroupDeletionProtection }).(pulumi.BoolPtrOutput)
}

// Resource type within scaling group. Optional values: ECS, ECI. Default to ECS.
func (o ScalingGroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// Resource type within scaling group. Optional values: ECS, NONE. Default to ECS.
func (o ScalingGroupOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringOutput { return v.HealthCheckType }).(pulumi.StringOutput)
}

// Instance launch template ID, scaling group obtains launch configuration from instance launch template, see [Launch Template](https://www.alibabacloud.com/help/doc-detail/73916.html). Creating scaling group from launch template enable group automatically.
func (o ScalingGroupOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringPtrOutput { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// The version number of the launch template. Valid values are the version number, `Latest`, or `Default`, Default value: `Default`.
func (o ScalingGroupOutput) LaunchTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringPtrOutput { return v.LaunchTemplateVersion }).(pulumi.StringPtrOutput)
}

// If a Server Load Balancer instance is specified in the scaling group, the scaling group automatically attaches its ECS instances to the Server Load Balancer instance.
//   - The Server Load Balancer instance must be enabled.
//   - At least one listener must be configured for each Server Load Balancer and it HealthCheck must be on. Otherwise, creation will fail (it may be useful to add a `dependsOn` argument
//     targeting your `slb.Listener` in order to make sure the listener with its HealthCheck configuration is ready before creating your scaling group).
//   - The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.
//   - The default weight of an ECS instance attached to the Server Load Balancer instance is 50.
func (o ScalingGroupOutput) LoadbalancerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringArrayOutput { return v.LoadbalancerIds }).(pulumi.StringArrayOutput)
}

// Maximum number of ECS instances in the scaling group. Value range: [0, 1000].
func (o ScalingGroupOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntOutput { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum number of ECS instances in the scaling group. Value range: [0, 1000].
func (o ScalingGroupOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntOutput { return v.MinSize }).(pulumi.IntOutput)
}

// Multi-AZ scaling group ECS instance expansion and contraction strategy. PRIORITY, BALANCE or COST_OPTIMIZED(Available in 1.54.0+).
func (o ScalingGroupOutput) MultiAzPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringPtrOutput { return v.MultiAzPolicy }).(pulumi.StringPtrOutput)
}

// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is provisioned first as your group scales.
func (o ScalingGroupOutput) OnDemandBaseCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntOutput { return v.OnDemandBaseCapacity }).(pulumi.IntOutput)
}

// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity.
func (o ScalingGroupOutput) OnDemandPercentageAboveBaseCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntOutput { return v.OnDemandPercentageAboveBaseCapacity }).(pulumi.IntOutput)
}

// Set or unset instances within group into protected status.
func (o ScalingGroupOutput) ProtectedInstances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringArrayOutput { return v.ProtectedInstances }).(pulumi.StringArrayOutput)
}

// RemovalPolicy is used to select the ECS instances you want to remove from the scaling group when multiple candidates for removal exist. Optional values:
// - OldestInstance: removes the ECS instance that is added to the scaling group at the earliest point in time.
// - NewestInstance: removes the ECS instance that is added to the scaling group at the latest point in time.
// - OldestScalingConfiguration: removes the ECS instance that is created based on the earliest scaling configuration.
// - Default values: Default value of RemovalPolicy.1: OldestScalingConfiguration. Default value of RemovalPolicy.2: OldestInstance.
func (o ScalingGroupOutput) RemovalPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringArrayOutput { return v.RemovalPolicies }).(pulumi.StringArrayOutput)
}

// Name shown for the scaling group, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain numbers, underscores `_`, hyphens `-`, and decimal points `.`. If this parameter is not specified, the default value is ScalingGroupId.
func (o ScalingGroupOutput) ScalingGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringPtrOutput { return v.ScalingGroupName }).(pulumi.StringPtrOutput)
}

// The number of Spot pools to use to allocate your Spot capacity. The Spot pools is composed of instance types of lowest price.
func (o ScalingGroupOutput) SpotInstancePools() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.IntOutput { return v.SpotInstancePools }).(pulumi.IntOutput)
}

// Whether to replace spot instances with newly created spot/onDemand instance when receive a spot recycling message.
func (o ScalingGroupOutput) SpotInstanceRemedy() pulumi.BoolOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.BoolOutput { return v.SpotInstanceRemedy }).(pulumi.BoolOutput)
}

// A mapping of tags to assign to the resource.
// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
func (o ScalingGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// It has been deprecated from version 1.7.1 and new field 'vswitch_ids' replaces it.
//
// Deprecated: Field 'vswitch_id' has been deprecated from provider version 1.7.1, and new field 'vswitch_ids' can replace it.
func (o ScalingGroupOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringPtrOutput { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// List of virtual switch IDs in which the ecs instances to be launched.
func (o ScalingGroupOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingGroup) pulumi.StringArrayOutput { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

type ScalingGroupArrayOutput struct{ *pulumi.OutputState }

func (ScalingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingGroup)(nil)).Elem()
}

func (o ScalingGroupArrayOutput) ToScalingGroupArrayOutput() ScalingGroupArrayOutput {
	return o
}

func (o ScalingGroupArrayOutput) ToScalingGroupArrayOutputWithContext(ctx context.Context) ScalingGroupArrayOutput {
	return o
}

func (o ScalingGroupArrayOutput) Index(i pulumi.IntInput) ScalingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScalingGroup {
		return vs[0].([]*ScalingGroup)[vs[1].(int)]
	}).(ScalingGroupOutput)
}

type ScalingGroupMapOutput struct{ *pulumi.OutputState }

func (ScalingGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingGroup)(nil)).Elem()
}

func (o ScalingGroupMapOutput) ToScalingGroupMapOutput() ScalingGroupMapOutput {
	return o
}

func (o ScalingGroupMapOutput) ToScalingGroupMapOutputWithContext(ctx context.Context) ScalingGroupMapOutput {
	return o
}

func (o ScalingGroupMapOutput) MapIndex(k pulumi.StringInput) ScalingGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScalingGroup {
		return vs[0].(map[string]*ScalingGroup)[vs[1].(string)]
	}).(ScalingGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupInput)(nil)).Elem(), &ScalingGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupArrayInput)(nil)).Elem(), ScalingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupMapInput)(nil)).Elem(), ScalingGroupMap{})
	pulumi.RegisterOutputType(ScalingGroupOutput{})
	pulumi.RegisterOutputType(ScalingGroupArrayOutput{})
	pulumi.RegisterOutputType(ScalingGroupMapOutput{})
}
