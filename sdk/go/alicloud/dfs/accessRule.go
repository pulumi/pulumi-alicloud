// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dfs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a DFS Access Rule resource.
//
// For information about DFS Access Rule and how to use it, see [What is Access Rule](https://www.alibabacloud.com/help/en/aibaba-cloud-storage-services/latest/apsara-file-storage-for-hdfs).
//
// > **NOTE:** Available since v1.140.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/dfs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "example_name"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := dfs.NewAccessGroup(ctx, "default", &dfs.AccessGroupArgs{
//				NetworkType:     pulumi.String("VPC"),
//				AccessGroupName: pulumi.String(name),
//				Description:     pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dfs.NewAccessRule(ctx, "default", &dfs.AccessRuleArgs{
//				NetworkSegment: pulumi.String("192.0.2.0/24"),
//				AccessGroupId:  _default.ID(),
//				Description:    pulumi.String(name),
//				RwAccessType:   pulumi.String("RDWR"),
//				Priority:       pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DFS Access Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:dfs/accessRule:AccessRule example <access_group_id>:<access_rule_id>
// ```
type AccessRule struct {
	pulumi.CustomResourceState

	// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
	AccessGroupId pulumi.StringOutput `pulumi:"accessGroupId"`
	// The unique identity of the permission rule, which is used to retrieve the permission rule for a specific day in the permission group.
	AccessRuleId pulumi.StringOutput `pulumi:"accessRuleId"`
	// Permission rule resource creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Permission rule description.  No more than 32 characters in length.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The IP address or network segment of the authorized object.
	NetworkSegment pulumi.StringOutput `pulumi:"networkSegment"`
	// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
	RwAccessType pulumi.StringOutput `pulumi:"rwAccessType"`
}

// NewAccessRule registers a new resource with the given unique name, arguments, and options.
func NewAccessRule(ctx *pulumi.Context,
	name string, args *AccessRuleArgs, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AccessGroupId'")
	}
	if args.NetworkSegment == nil {
		return nil, errors.New("invalid value for required argument 'NetworkSegment'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.RwAccessType == nil {
		return nil, errors.New("invalid value for required argument 'RwAccessType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessRule
	err := ctx.RegisterResource("alicloud:dfs/accessRule:AccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessRule gets an existing AccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessRuleState, opts ...pulumi.ResourceOption) (*AccessRule, error) {
	var resource AccessRule
	err := ctx.ReadResource("alicloud:dfs/accessRule:AccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessRule resources.
type accessRuleState struct {
	// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
	AccessGroupId *string `pulumi:"accessGroupId"`
	// The unique identity of the permission rule, which is used to retrieve the permission rule for a specific day in the permission group.
	AccessRuleId *string `pulumi:"accessRuleId"`
	// Permission rule resource creation time.
	CreateTime *string `pulumi:"createTime"`
	// Permission rule description.  No more than 32 characters in length.
	Description *string `pulumi:"description"`
	// The IP address or network segment of the authorized object.
	NetworkSegment *string `pulumi:"networkSegment"`
	// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
	Priority *int `pulumi:"priority"`
	// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
	RwAccessType *string `pulumi:"rwAccessType"`
}

type AccessRuleState struct {
	// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
	AccessGroupId pulumi.StringPtrInput
	// The unique identity of the permission rule, which is used to retrieve the permission rule for a specific day in the permission group.
	AccessRuleId pulumi.StringPtrInput
	// Permission rule resource creation time.
	CreateTime pulumi.StringPtrInput
	// Permission rule description.  No more than 32 characters in length.
	Description pulumi.StringPtrInput
	// The IP address or network segment of the authorized object.
	NetworkSegment pulumi.StringPtrInput
	// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
	Priority pulumi.IntPtrInput
	// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
	RwAccessType pulumi.StringPtrInput
}

func (AccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleState)(nil)).Elem()
}

type accessRuleArgs struct {
	// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
	AccessGroupId string `pulumi:"accessGroupId"`
	// Permission rule description.  No more than 32 characters in length.
	Description *string `pulumi:"description"`
	// The IP address or network segment of the authorized object.
	NetworkSegment string `pulumi:"networkSegment"`
	// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
	Priority int `pulumi:"priority"`
	// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
	RwAccessType string `pulumi:"rwAccessType"`
}

// The set of arguments for constructing a AccessRule resource.
type AccessRuleArgs struct {
	// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
	AccessGroupId pulumi.StringInput
	// Permission rule description.  No more than 32 characters in length.
	Description pulumi.StringPtrInput
	// The IP address or network segment of the authorized object.
	NetworkSegment pulumi.StringInput
	// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
	Priority pulumi.IntInput
	// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
	RwAccessType pulumi.StringInput
}

func (AccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessRuleArgs)(nil)).Elem()
}

type AccessRuleInput interface {
	pulumi.Input

	ToAccessRuleOutput() AccessRuleOutput
	ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput
}

func (*AccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRule)(nil)).Elem()
}

func (i *AccessRule) ToAccessRuleOutput() AccessRuleOutput {
	return i.ToAccessRuleOutputWithContext(context.Background())
}

func (i *AccessRule) ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleOutput)
}

// AccessRuleArrayInput is an input type that accepts AccessRuleArray and AccessRuleArrayOutput values.
// You can construct a concrete instance of `AccessRuleArrayInput` via:
//
//	AccessRuleArray{ AccessRuleArgs{...} }
type AccessRuleArrayInput interface {
	pulumi.Input

	ToAccessRuleArrayOutput() AccessRuleArrayOutput
	ToAccessRuleArrayOutputWithContext(context.Context) AccessRuleArrayOutput
}

type AccessRuleArray []AccessRuleInput

func (AccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessRule)(nil)).Elem()
}

func (i AccessRuleArray) ToAccessRuleArrayOutput() AccessRuleArrayOutput {
	return i.ToAccessRuleArrayOutputWithContext(context.Background())
}

func (i AccessRuleArray) ToAccessRuleArrayOutputWithContext(ctx context.Context) AccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleArrayOutput)
}

// AccessRuleMapInput is an input type that accepts AccessRuleMap and AccessRuleMapOutput values.
// You can construct a concrete instance of `AccessRuleMapInput` via:
//
//	AccessRuleMap{ "key": AccessRuleArgs{...} }
type AccessRuleMapInput interface {
	pulumi.Input

	ToAccessRuleMapOutput() AccessRuleMapOutput
	ToAccessRuleMapOutputWithContext(context.Context) AccessRuleMapOutput
}

type AccessRuleMap map[string]AccessRuleInput

func (AccessRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessRule)(nil)).Elem()
}

func (i AccessRuleMap) ToAccessRuleMapOutput() AccessRuleMapOutput {
	return i.ToAccessRuleMapOutputWithContext(context.Background())
}

func (i AccessRuleMap) ToAccessRuleMapOutputWithContext(ctx context.Context) AccessRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessRuleMapOutput)
}

type AccessRuleOutput struct{ *pulumi.OutputState }

func (AccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessRule)(nil)).Elem()
}

func (o AccessRuleOutput) ToAccessRuleOutput() AccessRuleOutput {
	return o
}

func (o AccessRuleOutput) ToAccessRuleOutputWithContext(ctx context.Context) AccessRuleOutput {
	return o
}

// Permission group resource ID. You must specify the permission group ID when creating a permission rule.
func (o AccessRuleOutput) AccessGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.AccessGroupId }).(pulumi.StringOutput)
}

// The unique identity of the permission rule, which is used to retrieve the permission rule for a specific day in the permission group.
func (o AccessRuleOutput) AccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.AccessRuleId }).(pulumi.StringOutput)
}

// Permission rule resource creation time.
func (o AccessRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Permission rule description.  No more than 32 characters in length.
func (o AccessRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The IP address or network segment of the authorized object.
func (o AccessRuleOutput) NetworkSegment() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.NetworkSegment }).(pulumi.StringOutput)
}

// Permission rule priority. When the same authorization object matches multiple rules, the high-priority rule takes effect. Value range: 1~100,1 is the highest priority.
func (o AccessRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The read and write permissions of the authorized object on the file system. Value: RDWR: readable and writable RDONLY: Read only.
func (o AccessRuleOutput) RwAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessRule) pulumi.StringOutput { return v.RwAccessType }).(pulumi.StringOutput)
}

type AccessRuleArrayOutput struct{ *pulumi.OutputState }

func (AccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessRule)(nil)).Elem()
}

func (o AccessRuleArrayOutput) ToAccessRuleArrayOutput() AccessRuleArrayOutput {
	return o
}

func (o AccessRuleArrayOutput) ToAccessRuleArrayOutputWithContext(ctx context.Context) AccessRuleArrayOutput {
	return o
}

func (o AccessRuleArrayOutput) Index(i pulumi.IntInput) AccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessRule {
		return vs[0].([]*AccessRule)[vs[1].(int)]
	}).(AccessRuleOutput)
}

type AccessRuleMapOutput struct{ *pulumi.OutputState }

func (AccessRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessRule)(nil)).Elem()
}

func (o AccessRuleMapOutput) ToAccessRuleMapOutput() AccessRuleMapOutput {
	return o
}

func (o AccessRuleMapOutput) ToAccessRuleMapOutputWithContext(ctx context.Context) AccessRuleMapOutput {
	return o
}

func (o AccessRuleMapOutput) MapIndex(k pulumi.StringInput) AccessRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessRule {
		return vs[0].(map[string]*AccessRule)[vs[1].(string)]
	}).(AccessRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleInput)(nil)).Elem(), &AccessRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleArrayInput)(nil)).Elem(), AccessRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessRuleMapInput)(nil)).Elem(), AccessRuleMap{})
	pulumi.RegisterOutputType(AccessRuleOutput{})
	pulumi.RegisterOutputType(AccessRuleArrayOutput{})
	pulumi.RegisterOutputType(AccessRuleMapOutput{})
}
