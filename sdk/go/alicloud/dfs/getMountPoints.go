// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Dfs Mount Points of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.140.0+.
func GetMountPoints(ctx *pulumi.Context, args *GetMountPointsArgs, opts ...pulumi.InvokeOption) (*GetMountPointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMountPointsResult
	err := ctx.Invoke("alicloud:dfs/getMountPoints:getMountPoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMountPoints.
type GetMountPointsArgs struct {
	// The ID of the File System.
	FileSystemId string `pulumi:"fileSystemId"`
	// A list of Mount Point IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the Mount Point. Valid values: `Active`, `Inactive`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getMountPoints.
type GetMountPointsResult struct {
	FileSystemId string `pulumi:"fileSystemId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                `pulumi:"id"`
	Ids        []string              `pulumi:"ids"`
	OutputFile *string               `pulumi:"outputFile"`
	Points     []GetMountPointsPoint `pulumi:"points"`
	Status     *string               `pulumi:"status"`
}

func GetMountPointsOutput(ctx *pulumi.Context, args GetMountPointsOutputArgs, opts ...pulumi.InvokeOption) GetMountPointsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMountPointsResult, error) {
			args := v.(GetMountPointsArgs)
			r, err := GetMountPoints(ctx, &args, opts...)
			var s GetMountPointsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMountPointsResultOutput)
}

// A collection of arguments for invoking getMountPoints.
type GetMountPointsOutputArgs struct {
	// The ID of the File System.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// A list of Mount Point IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the Mount Point. Valid values: `Active`, `Inactive`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetMountPointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountPointsArgs)(nil)).Elem()
}

// A collection of values returned by getMountPoints.
type GetMountPointsResultOutput struct{ *pulumi.OutputState }

func (GetMountPointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountPointsResult)(nil)).Elem()
}

func (o GetMountPointsResultOutput) ToGetMountPointsResultOutput() GetMountPointsResultOutput {
	return o
}

func (o GetMountPointsResultOutput) ToGetMountPointsResultOutputWithContext(ctx context.Context) GetMountPointsResultOutput {
	return o
}

func (o GetMountPointsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetMountPointsResult] {
	return pulumix.Output[GetMountPointsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetMountPointsResultOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsResult) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMountPointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountPointsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMountPointsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMountPointsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetMountPointsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMountPointsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetMountPointsResultOutput) Points() GetMountPointsPointArrayOutput {
	return o.ApplyT(func(v GetMountPointsResult) []GetMountPointsPoint { return v.Points }).(GetMountPointsPointArrayOutput)
}

func (o GetMountPointsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMountPointsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMountPointsResultOutput{})
}
