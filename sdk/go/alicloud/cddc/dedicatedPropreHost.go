// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cddc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// CDDC Dedicated Propre Host can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost example <dedicated_host_group_id>:<ecs_instance_id>
// ```
type DedicatedPropreHost struct {
	pulumi.CustomResourceState

	// Whether to pay automatically when the host is created.
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// Whether to enable automatic renewal. Valid values:
	// - **true**: On
	// - **false** (default): Off
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// You have a dedicated cluster ID.
	DedicatedHostGroupId pulumi.StringOutput `pulumi:"dedicatedHostGroupId"`
	// ECS specifications. See `ecsClassList` below.
	EcsClassLists DedicatedPropreHostEcsClassListArrayOutput `pulumi:"ecsClassLists"`
	// The ID of the cloud server deployment set.
	EcsDeploymentSetId pulumi.StringPtrOutput `pulumi:"ecsDeploymentSetId"`
	// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
	EcsHostName pulumi.StringPtrOutput `pulumi:"ecsHostName"`
	// ECS instance ID.
	EcsInstanceId pulumi.StringOutput `pulumi:"ecsInstanceId"`
	// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
	EcsInstanceName pulumi.StringPtrOutput `pulumi:"ecsInstanceName"`
	// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
	// - **true**: added.
	// - **false** (default): Do not add.
	//   When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
	EcsUniqueSuffix pulumi.StringPtrOutput `pulumi:"ecsUniqueSuffix"`
	// The ID of the zone.
	EcsZoneId pulumi.StringOutput `pulumi:"ecsZoneId"`
	// Database type, value:
	// - **alisql**
	// - **tair**
	// - **mssql**
	//   Must be consistent with the parent resource cluster engine attributes.
	Engine pulumi.StringOutput `pulumi:"engine"`
	// The ID of the custom image.
	// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
	ImageId pulumi.StringPtrOutput `pulumi:"imageId"`
	// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
	InternetChargeType pulumi.StringPtrOutput `pulumi:"internetChargeType"`
	// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
	InternetMaxBandwidthOut pulumi.IntPtrOutput `pulumi:"internetMaxBandwidthOut"`
	// The key pair name.
	KeyPairName pulumi.StringPtrOutput `pulumi:"keyPairName"`
	// Host login password, which can be set later. The password must meet the following requirements:
	// - Length is 8~30 characters.
	// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
	// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
	// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
	OsPassword pulumi.StringPtrOutput `pulumi:"osPassword"`
	// Whether to use the default password of the image.
	// - **false**: (default)Do not use
	// - **true**: Use
	// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
	PasswordInherit pulumi.StringPtrOutput `pulumi:"passwordInherit"`
	// The Payment type. Currently, only **Subscription** is supported.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Duration of purchase.
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// The subscription type. Currently, only **Monthly** (subscription) is supported.
	PeriodType pulumi.StringPtrOutput `pulumi:"periodType"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Host tag information.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// User-defined script data. The maximum size of the original data is 16kB.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// Whether custom data is encoded in Base64 format.
	UserDataEncoded pulumi.BoolPtrOutput `pulumi:"userDataEncoded"`
	// VPCID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ID of the virtual switch.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
}

// NewDedicatedPropreHost registers a new resource with the given unique name, arguments, and options.
func NewDedicatedPropreHost(ctx *pulumi.Context,
	name string, args *DedicatedPropreHostArgs, opts ...pulumi.ResourceOption) (*DedicatedPropreHost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EcsClassLists == nil {
		return nil, errors.New("invalid value for required argument 'EcsClassLists'")
	}
	if args.EcsZoneId == nil {
		return nil, errors.New("invalid value for required argument 'EcsZoneId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DedicatedPropreHost
	err := ctx.RegisterResource("alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedPropreHost gets an existing DedicatedPropreHost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedPropreHost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedPropreHostState, opts ...pulumi.ResourceOption) (*DedicatedPropreHost, error) {
	var resource DedicatedPropreHost
	err := ctx.ReadResource("alicloud:cddc/dedicatedPropreHost:DedicatedPropreHost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedPropreHost resources.
type dedicatedPropreHostState struct {
	// Whether to pay automatically when the host is created.
	AutoPay *bool `pulumi:"autoPay"`
	// Whether to enable automatic renewal. Valid values:
	// - **true**: On
	// - **false** (default): Off
	AutoRenew *string `pulumi:"autoRenew"`
	// You have a dedicated cluster ID.
	DedicatedHostGroupId *string `pulumi:"dedicatedHostGroupId"`
	// ECS specifications. See `ecsClassList` below.
	EcsClassLists []DedicatedPropreHostEcsClassList `pulumi:"ecsClassLists"`
	// The ID of the cloud server deployment set.
	EcsDeploymentSetId *string `pulumi:"ecsDeploymentSetId"`
	// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
	EcsHostName *string `pulumi:"ecsHostName"`
	// ECS instance ID.
	EcsInstanceId *string `pulumi:"ecsInstanceId"`
	// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
	EcsInstanceName *string `pulumi:"ecsInstanceName"`
	// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
	// - **true**: added.
	// - **false** (default): Do not add.
	//   When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
	EcsUniqueSuffix *string `pulumi:"ecsUniqueSuffix"`
	// The ID of the zone.
	EcsZoneId *string `pulumi:"ecsZoneId"`
	// Database type, value:
	// - **alisql**
	// - **tair**
	// - **mssql**
	//   Must be consistent with the parent resource cluster engine attributes.
	Engine *string `pulumi:"engine"`
	// The ID of the custom image.
	// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
	ImageId *string `pulumi:"imageId"`
	// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// The key pair name.
	KeyPairName *string `pulumi:"keyPairName"`
	// Host login password, which can be set later. The password must meet the following requirements:
	// - Length is 8~30 characters.
	// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
	// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
	// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
	OsPassword *string `pulumi:"osPassword"`
	// Whether to use the default password of the image.
	// - **false**: (default)Do not use
	// - **true**: Use
	// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
	PasswordInherit *string `pulumi:"passwordInherit"`
	// The Payment type. Currently, only **Subscription** is supported.
	PaymentType *string `pulumi:"paymentType"`
	// Duration of purchase.
	Period *string `pulumi:"period"`
	// The subscription type. Currently, only **Monthly** (subscription) is supported.
	PeriodType *string `pulumi:"periodType"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Host tag information.
	Tags map[string]interface{} `pulumi:"tags"`
	// User-defined script data. The maximum size of the original data is 16kB.
	UserData *string `pulumi:"userData"`
	// Whether custom data is encoded in Base64 format.
	UserDataEncoded *bool `pulumi:"userDataEncoded"`
	// VPCID of the VPC.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the virtual switch.
	VswitchId *string `pulumi:"vswitchId"`
}

type DedicatedPropreHostState struct {
	// Whether to pay automatically when the host is created.
	AutoPay pulumi.BoolPtrInput
	// Whether to enable automatic renewal. Valid values:
	// - **true**: On
	// - **false** (default): Off
	AutoRenew pulumi.StringPtrInput
	// You have a dedicated cluster ID.
	DedicatedHostGroupId pulumi.StringPtrInput
	// ECS specifications. See `ecsClassList` below.
	EcsClassLists DedicatedPropreHostEcsClassListArrayInput
	// The ID of the cloud server deployment set.
	EcsDeploymentSetId pulumi.StringPtrInput
	// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
	EcsHostName pulumi.StringPtrInput
	// ECS instance ID.
	EcsInstanceId pulumi.StringPtrInput
	// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
	EcsInstanceName pulumi.StringPtrInput
	// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
	// - **true**: added.
	// - **false** (default): Do not add.
	//   When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
	EcsUniqueSuffix pulumi.StringPtrInput
	// The ID of the zone.
	EcsZoneId pulumi.StringPtrInput
	// Database type, value:
	// - **alisql**
	// - **tair**
	// - **mssql**
	//   Must be consistent with the parent resource cluster engine attributes.
	Engine pulumi.StringPtrInput
	// The ID of the custom image.
	// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
	ImageId pulumi.StringPtrInput
	// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
	InternetChargeType pulumi.StringPtrInput
	// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
	InternetMaxBandwidthOut pulumi.IntPtrInput
	// The key pair name.
	KeyPairName pulumi.StringPtrInput
	// Host login password, which can be set later. The password must meet the following requirements:
	// - Length is 8~30 characters.
	// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
	// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
	// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
	OsPassword pulumi.StringPtrInput
	// Whether to use the default password of the image.
	// - **false**: (default)Do not use
	// - **true**: Use
	// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
	PasswordInherit pulumi.StringPtrInput
	// The Payment type. Currently, only **Subscription** is supported.
	PaymentType pulumi.StringPtrInput
	// Duration of purchase.
	Period pulumi.StringPtrInput
	// The subscription type. Currently, only **Monthly** (subscription) is supported.
	PeriodType pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput
	// Host tag information.
	Tags pulumi.MapInput
	// User-defined script data. The maximum size of the original data is 16kB.
	UserData pulumi.StringPtrInput
	// Whether custom data is encoded in Base64 format.
	UserDataEncoded pulumi.BoolPtrInput
	// VPCID of the VPC.
	VpcId pulumi.StringPtrInput
	// The ID of the virtual switch.
	VswitchId pulumi.StringPtrInput
}

func (DedicatedPropreHostState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedPropreHostState)(nil)).Elem()
}

type dedicatedPropreHostArgs struct {
	// Whether to pay automatically when the host is created.
	AutoPay *bool `pulumi:"autoPay"`
	// Whether to enable automatic renewal. Valid values:
	// - **true**: On
	// - **false** (default): Off
	AutoRenew *string `pulumi:"autoRenew"`
	// You have a dedicated cluster ID.
	DedicatedHostGroupId *string `pulumi:"dedicatedHostGroupId"`
	// ECS specifications. See `ecsClassList` below.
	EcsClassLists []DedicatedPropreHostEcsClassList `pulumi:"ecsClassLists"`
	// The ID of the cloud server deployment set.
	EcsDeploymentSetId *string `pulumi:"ecsDeploymentSetId"`
	// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
	EcsHostName *string `pulumi:"ecsHostName"`
	// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
	EcsInstanceName *string `pulumi:"ecsInstanceName"`
	// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
	// - **true**: added.
	// - **false** (default): Do not add.
	//   When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
	EcsUniqueSuffix *string `pulumi:"ecsUniqueSuffix"`
	// The ID of the zone.
	EcsZoneId string `pulumi:"ecsZoneId"`
	// Database type, value:
	// - **alisql**
	// - **tair**
	// - **mssql**
	//   Must be consistent with the parent resource cluster engine attributes.
	Engine string `pulumi:"engine"`
	// The ID of the custom image.
	// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
	ImageId *string `pulumi:"imageId"`
	// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
	InternetChargeType *string `pulumi:"internetChargeType"`
	// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
	InternetMaxBandwidthOut *int `pulumi:"internetMaxBandwidthOut"`
	// The key pair name.
	KeyPairName *string `pulumi:"keyPairName"`
	// Host login password, which can be set later. The password must meet the following requirements:
	// - Length is 8~30 characters.
	// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
	// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
	// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
	OsPassword *string `pulumi:"osPassword"`
	// Whether to use the default password of the image.
	// - **false**: (default)Do not use
	// - **true**: Use
	// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
	PasswordInherit *string `pulumi:"passwordInherit"`
	// The Payment type. Currently, only **Subscription** is supported.
	PaymentType string `pulumi:"paymentType"`
	// Duration of purchase.
	Period *string `pulumi:"period"`
	// The subscription type. Currently, only **Monthly** (subscription) is supported.
	PeriodType *string `pulumi:"periodType"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Host tag information.
	Tags map[string]interface{} `pulumi:"tags"`
	// User-defined script data. The maximum size of the original data is 16kB.
	UserData *string `pulumi:"userData"`
	// Whether custom data is encoded in Base64 format.
	UserDataEncoded *bool `pulumi:"userDataEncoded"`
	// VPCID of the VPC.
	VpcId string `pulumi:"vpcId"`
	// The ID of the virtual switch.
	VswitchId string `pulumi:"vswitchId"`
}

// The set of arguments for constructing a DedicatedPropreHost resource.
type DedicatedPropreHostArgs struct {
	// Whether to pay automatically when the host is created.
	AutoPay pulumi.BoolPtrInput
	// Whether to enable automatic renewal. Valid values:
	// - **true**: On
	// - **false** (default): Off
	AutoRenew pulumi.StringPtrInput
	// You have a dedicated cluster ID.
	DedicatedHostGroupId pulumi.StringPtrInput
	// ECS specifications. See `ecsClassList` below.
	EcsClassLists DedicatedPropreHostEcsClassListArrayInput
	// The ID of the cloud server deployment set.
	EcsDeploymentSetId pulumi.StringPtrInput
	// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
	EcsHostName pulumi.StringPtrInput
	// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
	EcsInstanceName pulumi.StringPtrInput
	// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
	// - **true**: added.
	// - **false** (default): Do not add.
	//   When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
	EcsUniqueSuffix pulumi.StringPtrInput
	// The ID of the zone.
	EcsZoneId pulumi.StringInput
	// Database type, value:
	// - **alisql**
	// - **tair**
	// - **mssql**
	//   Must be consistent with the parent resource cluster engine attributes.
	Engine pulumi.StringInput
	// The ID of the custom image.
	// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
	ImageId pulumi.StringPtrInput
	// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
	InternetChargeType pulumi.StringPtrInput
	// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
	InternetMaxBandwidthOut pulumi.IntPtrInput
	// The key pair name.
	KeyPairName pulumi.StringPtrInput
	// Host login password, which can be set later. The password must meet the following requirements:
	// - Length is 8~30 characters.
	// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
	// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
	// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
	OsPassword pulumi.StringPtrInput
	// Whether to use the default password of the image.
	// - **false**: (default)Do not use
	// - **true**: Use
	// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
	PasswordInherit pulumi.StringPtrInput
	// The Payment type. Currently, only **Subscription** is supported.
	PaymentType pulumi.StringInput
	// Duration of purchase.
	Period pulumi.StringPtrInput
	// The subscription type. Currently, only **Monthly** (subscription) is supported.
	PeriodType pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput
	// Host tag information.
	Tags pulumi.MapInput
	// User-defined script data. The maximum size of the original data is 16kB.
	UserData pulumi.StringPtrInput
	// Whether custom data is encoded in Base64 format.
	UserDataEncoded pulumi.BoolPtrInput
	// VPCID of the VPC.
	VpcId pulumi.StringInput
	// The ID of the virtual switch.
	VswitchId pulumi.StringInput
}

func (DedicatedPropreHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedPropreHostArgs)(nil)).Elem()
}

type DedicatedPropreHostInput interface {
	pulumi.Input

	ToDedicatedPropreHostOutput() DedicatedPropreHostOutput
	ToDedicatedPropreHostOutputWithContext(ctx context.Context) DedicatedPropreHostOutput
}

func (*DedicatedPropreHost) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedPropreHost)(nil)).Elem()
}

func (i *DedicatedPropreHost) ToDedicatedPropreHostOutput() DedicatedPropreHostOutput {
	return i.ToDedicatedPropreHostOutputWithContext(context.Background())
}

func (i *DedicatedPropreHost) ToDedicatedPropreHostOutputWithContext(ctx context.Context) DedicatedPropreHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedPropreHostOutput)
}

// DedicatedPropreHostArrayInput is an input type that accepts DedicatedPropreHostArray and DedicatedPropreHostArrayOutput values.
// You can construct a concrete instance of `DedicatedPropreHostArrayInput` via:
//
//	DedicatedPropreHostArray{ DedicatedPropreHostArgs{...} }
type DedicatedPropreHostArrayInput interface {
	pulumi.Input

	ToDedicatedPropreHostArrayOutput() DedicatedPropreHostArrayOutput
	ToDedicatedPropreHostArrayOutputWithContext(context.Context) DedicatedPropreHostArrayOutput
}

type DedicatedPropreHostArray []DedicatedPropreHostInput

func (DedicatedPropreHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedPropreHost)(nil)).Elem()
}

func (i DedicatedPropreHostArray) ToDedicatedPropreHostArrayOutput() DedicatedPropreHostArrayOutput {
	return i.ToDedicatedPropreHostArrayOutputWithContext(context.Background())
}

func (i DedicatedPropreHostArray) ToDedicatedPropreHostArrayOutputWithContext(ctx context.Context) DedicatedPropreHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedPropreHostArrayOutput)
}

// DedicatedPropreHostMapInput is an input type that accepts DedicatedPropreHostMap and DedicatedPropreHostMapOutput values.
// You can construct a concrete instance of `DedicatedPropreHostMapInput` via:
//
//	DedicatedPropreHostMap{ "key": DedicatedPropreHostArgs{...} }
type DedicatedPropreHostMapInput interface {
	pulumi.Input

	ToDedicatedPropreHostMapOutput() DedicatedPropreHostMapOutput
	ToDedicatedPropreHostMapOutputWithContext(context.Context) DedicatedPropreHostMapOutput
}

type DedicatedPropreHostMap map[string]DedicatedPropreHostInput

func (DedicatedPropreHostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedPropreHost)(nil)).Elem()
}

func (i DedicatedPropreHostMap) ToDedicatedPropreHostMapOutput() DedicatedPropreHostMapOutput {
	return i.ToDedicatedPropreHostMapOutputWithContext(context.Background())
}

func (i DedicatedPropreHostMap) ToDedicatedPropreHostMapOutputWithContext(ctx context.Context) DedicatedPropreHostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedPropreHostMapOutput)
}

type DedicatedPropreHostOutput struct{ *pulumi.OutputState }

func (DedicatedPropreHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedPropreHost)(nil)).Elem()
}

func (o DedicatedPropreHostOutput) ToDedicatedPropreHostOutput() DedicatedPropreHostOutput {
	return o
}

func (o DedicatedPropreHostOutput) ToDedicatedPropreHostOutputWithContext(ctx context.Context) DedicatedPropreHostOutput {
	return o
}

// Whether to pay automatically when the host is created.
func (o DedicatedPropreHostOutput) AutoPay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.BoolPtrOutput { return v.AutoPay }).(pulumi.BoolPtrOutput)
}

// Whether to enable automatic renewal. Valid values:
// - **true**: On
// - **false** (default): Off
func (o DedicatedPropreHostOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// You have a dedicated cluster ID.
func (o DedicatedPropreHostOutput) DedicatedHostGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.DedicatedHostGroupId }).(pulumi.StringOutput)
}

// ECS specifications. See `ecsClassList` below.
func (o DedicatedPropreHostOutput) EcsClassLists() DedicatedPropreHostEcsClassListArrayOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) DedicatedPropreHostEcsClassListArrayOutput { return v.EcsClassLists }).(DedicatedPropreHostEcsClassListArrayOutput)
}

// The ID of the cloud server deployment set.
func (o DedicatedPropreHostOutput) EcsDeploymentSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.EcsDeploymentSetId }).(pulumi.StringPtrOutput)
}

// Windows system: length of 2 to 15 characters, allowing the use of upper and lower case letters, numbers. You cannot use only numbers. Other operating systems (such as Linux): the length of 2 to 64 characters, allowing the use of dot (.) to separate characters into multiple segments, each segment allows the use of upper and lower case letters, numbers, but can not use continuous dot (.). Cannot start or end with a dot (.).
func (o DedicatedPropreHostOutput) EcsHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.EcsHostName }).(pulumi.StringPtrOutput)
}

// ECS instance ID.
func (o DedicatedPropreHostOutput) EcsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.EcsInstanceId }).(pulumi.StringOutput)
}

// The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. Can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of the instance.
func (o DedicatedPropreHostOutput) EcsInstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.EcsInstanceName }).(pulumi.StringPtrOutput)
}

// Whether to automatically add an ordered suffix for HostName and InstanceName when creating multiple instances. The ordered suffix starts from 001 and cannot exceed 999. Value Description:
//   - **true**: added.
//   - **false** (default): Do not add.
//     When the HostName or InstanceName is set according to the specified sorting format, and the naming suffix nameSuffix is not set, that is, when the naming format is name_prefix[begin_number,bits], the UniqueSuffix does not take effect, and the names are only sorted according to the specified order.
func (o DedicatedPropreHostOutput) EcsUniqueSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.EcsUniqueSuffix }).(pulumi.StringPtrOutput)
}

// The ID of the zone.
func (o DedicatedPropreHostOutput) EcsZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.EcsZoneId }).(pulumi.StringOutput)
}

// Database type, value:
//   - **alisql**
//   - **tair**
//   - **mssql**
//     Must be consistent with the parent resource cluster engine attributes.
func (o DedicatedPropreHostOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// The ID of the custom image.
// > **NOTE:**  If you need to use the default image, you do not need to fill it in.
func (o DedicatedPropreHostOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.ImageId }).(pulumi.StringPtrOutput)
}

// Network billing type. Value range: PayByBandwidth: Billing based on fixed bandwidth. PayByTraffic: charges by using the flow meter.
func (o DedicatedPropreHostOutput) InternetChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.InternetChargeType }).(pulumi.StringPtrOutput)
}

// The maximum outbound bandwidth of the public network, in Mbit/s. Value range: 0~100.  Default value: 0. When set to greater than 0, a public IP is automatically created.
func (o DedicatedPropreHostOutput) InternetMaxBandwidthOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.IntPtrOutput { return v.InternetMaxBandwidthOut }).(pulumi.IntPtrOutput)
}

// The key pair name.
func (o DedicatedPropreHostOutput) KeyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.KeyPairName }).(pulumi.StringPtrOutput)
}

// Host login password, which can be set later. The password must meet the following requirements:
// - Length is 8~30 characters.
// - Must contain at least three items: uppercase letters, lowercase letters, numbers, and special characters.
// - Special symbol '()\' ~! @#$%^& *-_+ =|{}[]:;',.? /'
// > **NOTE:** - If you need to set the host login password later, fill in an empty string for this parameter. If you need to set a host login password, we recommend that you use the HTTPS protocol to send requests to avoid password leakage.
func (o DedicatedPropreHostOutput) OsPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.OsPassword }).(pulumi.StringPtrOutput)
}

// Whether to use the default password of the image.
// - **false**: (default)Do not use
// - **true**: Use
// > **NOTE:**  If the default password of the image is used, the **OSPassword** parameter is not required.
func (o DedicatedPropreHostOutput) PasswordInherit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.PasswordInherit }).(pulumi.StringPtrOutput)
}

// The Payment type. Currently, only **Subscription** is supported.
func (o DedicatedPropreHostOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Duration of purchase.
func (o DedicatedPropreHostOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.Period }).(pulumi.StringPtrOutput)
}

// The subscription type. Currently, only **Monthly** (subscription) is supported.
func (o DedicatedPropreHostOutput) PeriodType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.PeriodType }).(pulumi.StringPtrOutput)
}

// The ID of the resource group.
func (o DedicatedPropreHostOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o DedicatedPropreHostOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Host tag information.
func (o DedicatedPropreHostOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// User-defined script data. The maximum size of the original data is 16kB.
func (o DedicatedPropreHostOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// Whether custom data is encoded in Base64 format.
func (o DedicatedPropreHostOutput) UserDataEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.BoolPtrOutput { return v.UserDataEncoded }).(pulumi.BoolPtrOutput)
}

// VPCID of the VPC.
func (o DedicatedPropreHostOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of the virtual switch.
func (o DedicatedPropreHostOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedPropreHost) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

type DedicatedPropreHostArrayOutput struct{ *pulumi.OutputState }

func (DedicatedPropreHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedPropreHost)(nil)).Elem()
}

func (o DedicatedPropreHostArrayOutput) ToDedicatedPropreHostArrayOutput() DedicatedPropreHostArrayOutput {
	return o
}

func (o DedicatedPropreHostArrayOutput) ToDedicatedPropreHostArrayOutputWithContext(ctx context.Context) DedicatedPropreHostArrayOutput {
	return o
}

func (o DedicatedPropreHostArrayOutput) Index(i pulumi.IntInput) DedicatedPropreHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DedicatedPropreHost {
		return vs[0].([]*DedicatedPropreHost)[vs[1].(int)]
	}).(DedicatedPropreHostOutput)
}

type DedicatedPropreHostMapOutput struct{ *pulumi.OutputState }

func (DedicatedPropreHostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedPropreHost)(nil)).Elem()
}

func (o DedicatedPropreHostMapOutput) ToDedicatedPropreHostMapOutput() DedicatedPropreHostMapOutput {
	return o
}

func (o DedicatedPropreHostMapOutput) ToDedicatedPropreHostMapOutputWithContext(ctx context.Context) DedicatedPropreHostMapOutput {
	return o
}

func (o DedicatedPropreHostMapOutput) MapIndex(k pulumi.StringInput) DedicatedPropreHostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DedicatedPropreHost {
		return vs[0].(map[string]*DedicatedPropreHost)[vs[1].(string)]
	}).(DedicatedPropreHostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedPropreHostInput)(nil)).Elem(), &DedicatedPropreHost{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedPropreHostArrayInput)(nil)).Elem(), DedicatedPropreHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedPropreHostMapInput)(nil)).Elem(), DedicatedPropreHostMap{})
	pulumi.RegisterOutputType(DedicatedPropreHostOutput{})
	pulumi.RegisterOutputType(DedicatedPropreHostArrayOutput{})
	pulumi.RegisterOutputType(DedicatedPropreHostMapOutput{})
}
