// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConsumerGroupConsumeRetryPolicy struct {
	// Maximum number of retries.
	MaxRetryTimes *int `pulumi:"maxRetryTimes"`
	// Consume retry policy.
	RetryPolicy *string `pulumi:"retryPolicy"`
}

// ConsumerGroupConsumeRetryPolicyInput is an input type that accepts ConsumerGroupConsumeRetryPolicyArgs and ConsumerGroupConsumeRetryPolicyOutput values.
// You can construct a concrete instance of `ConsumerGroupConsumeRetryPolicyInput` via:
//
//	ConsumerGroupConsumeRetryPolicyArgs{...}
type ConsumerGroupConsumeRetryPolicyInput interface {
	pulumi.Input

	ToConsumerGroupConsumeRetryPolicyOutput() ConsumerGroupConsumeRetryPolicyOutput
	ToConsumerGroupConsumeRetryPolicyOutputWithContext(context.Context) ConsumerGroupConsumeRetryPolicyOutput
}

type ConsumerGroupConsumeRetryPolicyArgs struct {
	// Maximum number of retries.
	MaxRetryTimes pulumi.IntPtrInput `pulumi:"maxRetryTimes"`
	// Consume retry policy.
	RetryPolicy pulumi.StringPtrInput `pulumi:"retryPolicy"`
}

func (ConsumerGroupConsumeRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupConsumeRetryPolicy)(nil)).Elem()
}

func (i ConsumerGroupConsumeRetryPolicyArgs) ToConsumerGroupConsumeRetryPolicyOutput() ConsumerGroupConsumeRetryPolicyOutput {
	return i.ToConsumerGroupConsumeRetryPolicyOutputWithContext(context.Background())
}

func (i ConsumerGroupConsumeRetryPolicyArgs) ToConsumerGroupConsumeRetryPolicyOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupConsumeRetryPolicyOutput)
}

func (i ConsumerGroupConsumeRetryPolicyArgs) ToConsumerGroupConsumeRetryPolicyPtrOutput() ConsumerGroupConsumeRetryPolicyPtrOutput {
	return i.ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(context.Background())
}

func (i ConsumerGroupConsumeRetryPolicyArgs) ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupConsumeRetryPolicyOutput).ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(ctx)
}

// ConsumerGroupConsumeRetryPolicyPtrInput is an input type that accepts ConsumerGroupConsumeRetryPolicyArgs, ConsumerGroupConsumeRetryPolicyPtr and ConsumerGroupConsumeRetryPolicyPtrOutput values.
// You can construct a concrete instance of `ConsumerGroupConsumeRetryPolicyPtrInput` via:
//
//	        ConsumerGroupConsumeRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type ConsumerGroupConsumeRetryPolicyPtrInput interface {
	pulumi.Input

	ToConsumerGroupConsumeRetryPolicyPtrOutput() ConsumerGroupConsumeRetryPolicyPtrOutput
	ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(context.Context) ConsumerGroupConsumeRetryPolicyPtrOutput
}

type consumerGroupConsumeRetryPolicyPtrType ConsumerGroupConsumeRetryPolicyArgs

func ConsumerGroupConsumeRetryPolicyPtr(v *ConsumerGroupConsumeRetryPolicyArgs) ConsumerGroupConsumeRetryPolicyPtrInput {
	return (*consumerGroupConsumeRetryPolicyPtrType)(v)
}

func (*consumerGroupConsumeRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupConsumeRetryPolicy)(nil)).Elem()
}

func (i *consumerGroupConsumeRetryPolicyPtrType) ToConsumerGroupConsumeRetryPolicyPtrOutput() ConsumerGroupConsumeRetryPolicyPtrOutput {
	return i.ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *consumerGroupConsumeRetryPolicyPtrType) ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupConsumeRetryPolicyPtrOutput)
}

type ConsumerGroupConsumeRetryPolicyOutput struct{ *pulumi.OutputState }

func (ConsumerGroupConsumeRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupConsumeRetryPolicy)(nil)).Elem()
}

func (o ConsumerGroupConsumeRetryPolicyOutput) ToConsumerGroupConsumeRetryPolicyOutput() ConsumerGroupConsumeRetryPolicyOutput {
	return o
}

func (o ConsumerGroupConsumeRetryPolicyOutput) ToConsumerGroupConsumeRetryPolicyOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyOutput {
	return o
}

func (o ConsumerGroupConsumeRetryPolicyOutput) ToConsumerGroupConsumeRetryPolicyPtrOutput() ConsumerGroupConsumeRetryPolicyPtrOutput {
	return o.ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(context.Background())
}

func (o ConsumerGroupConsumeRetryPolicyOutput) ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConsumerGroupConsumeRetryPolicy) *ConsumerGroupConsumeRetryPolicy {
		return &v
	}).(ConsumerGroupConsumeRetryPolicyPtrOutput)
}

// Maximum number of retries.
func (o ConsumerGroupConsumeRetryPolicyOutput) MaxRetryTimes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsumerGroupConsumeRetryPolicy) *int { return v.MaxRetryTimes }).(pulumi.IntPtrOutput)
}

// Consume retry policy.
func (o ConsumerGroupConsumeRetryPolicyOutput) RetryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsumerGroupConsumeRetryPolicy) *string { return v.RetryPolicy }).(pulumi.StringPtrOutput)
}

type ConsumerGroupConsumeRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConsumerGroupConsumeRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupConsumeRetryPolicy)(nil)).Elem()
}

func (o ConsumerGroupConsumeRetryPolicyPtrOutput) ToConsumerGroupConsumeRetryPolicyPtrOutput() ConsumerGroupConsumeRetryPolicyPtrOutput {
	return o
}

func (o ConsumerGroupConsumeRetryPolicyPtrOutput) ToConsumerGroupConsumeRetryPolicyPtrOutputWithContext(ctx context.Context) ConsumerGroupConsumeRetryPolicyPtrOutput {
	return o
}

func (o ConsumerGroupConsumeRetryPolicyPtrOutput) Elem() ConsumerGroupConsumeRetryPolicyOutput {
	return o.ApplyT(func(v *ConsumerGroupConsumeRetryPolicy) ConsumerGroupConsumeRetryPolicy {
		if v != nil {
			return *v
		}
		var ret ConsumerGroupConsumeRetryPolicy
		return ret
	}).(ConsumerGroupConsumeRetryPolicyOutput)
}

// Maximum number of retries.
func (o ConsumerGroupConsumeRetryPolicyPtrOutput) MaxRetryTimes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupConsumeRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetryTimes
	}).(pulumi.IntPtrOutput)
}

// Consume retry policy.
func (o ConsumerGroupConsumeRetryPolicyPtrOutput) RetryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupConsumeRetryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(pulumi.StringPtrOutput)
}

type RocketMQInstanceNetworkInfo struct {
	// Access point list.
	Endpoints []RocketMQInstanceNetworkInfoEndpoint `pulumi:"endpoints"`
	// instance internet info. See `internetInfo` below.
	InternetInfo RocketMQInstanceNetworkInfoInternetInfo `pulumi:"internetInfo"`
	// Proprietary network information. See `vpcInfo` below.
	VpcInfo RocketMQInstanceNetworkInfoVpcInfo `pulumi:"vpcInfo"`
}

// RocketMQInstanceNetworkInfoInput is an input type that accepts RocketMQInstanceNetworkInfoArgs and RocketMQInstanceNetworkInfoOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoInput` via:
//
//	RocketMQInstanceNetworkInfoArgs{...}
type RocketMQInstanceNetworkInfoInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoOutput() RocketMQInstanceNetworkInfoOutput
	ToRocketMQInstanceNetworkInfoOutputWithContext(context.Context) RocketMQInstanceNetworkInfoOutput
}

type RocketMQInstanceNetworkInfoArgs struct {
	// Access point list.
	Endpoints RocketMQInstanceNetworkInfoEndpointArrayInput `pulumi:"endpoints"`
	// instance internet info. See `internetInfo` below.
	InternetInfo RocketMQInstanceNetworkInfoInternetInfoInput `pulumi:"internetInfo"`
	// Proprietary network information. See `vpcInfo` below.
	VpcInfo RocketMQInstanceNetworkInfoVpcInfoInput `pulumi:"vpcInfo"`
}

func (RocketMQInstanceNetworkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfo)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoArgs) ToRocketMQInstanceNetworkInfoOutput() RocketMQInstanceNetworkInfoOutput {
	return i.ToRocketMQInstanceNetworkInfoOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoArgs) ToRocketMQInstanceNetworkInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoOutput)
}

func (i RocketMQInstanceNetworkInfoArgs) ToRocketMQInstanceNetworkInfoPtrOutput() RocketMQInstanceNetworkInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoPtrOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoArgs) ToRocketMQInstanceNetworkInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoOutput).ToRocketMQInstanceNetworkInfoPtrOutputWithContext(ctx)
}

// RocketMQInstanceNetworkInfoPtrInput is an input type that accepts RocketMQInstanceNetworkInfoArgs, RocketMQInstanceNetworkInfoPtr and RocketMQInstanceNetworkInfoPtrOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoPtrInput` via:
//
//	        RocketMQInstanceNetworkInfoArgs{...}
//
//	or:
//
//	        nil
type RocketMQInstanceNetworkInfoPtrInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoPtrOutput() RocketMQInstanceNetworkInfoPtrOutput
	ToRocketMQInstanceNetworkInfoPtrOutputWithContext(context.Context) RocketMQInstanceNetworkInfoPtrOutput
}

type rocketMQInstanceNetworkInfoPtrType RocketMQInstanceNetworkInfoArgs

func RocketMQInstanceNetworkInfoPtr(v *RocketMQInstanceNetworkInfoArgs) RocketMQInstanceNetworkInfoPtrInput {
	return (*rocketMQInstanceNetworkInfoPtrType)(v)
}

func (*rocketMQInstanceNetworkInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfo)(nil)).Elem()
}

func (i *rocketMQInstanceNetworkInfoPtrType) ToRocketMQInstanceNetworkInfoPtrOutput() RocketMQInstanceNetworkInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoPtrOutputWithContext(context.Background())
}

func (i *rocketMQInstanceNetworkInfoPtrType) ToRocketMQInstanceNetworkInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoPtrOutput)
}

type RocketMQInstanceNetworkInfoOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoOutput) ToRocketMQInstanceNetworkInfoOutput() RocketMQInstanceNetworkInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoOutput) ToRocketMQInstanceNetworkInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoOutput) ToRocketMQInstanceNetworkInfoPtrOutput() RocketMQInstanceNetworkInfoPtrOutput {
	return o.ToRocketMQInstanceNetworkInfoPtrOutputWithContext(context.Background())
}

func (o RocketMQInstanceNetworkInfoOutput) ToRocketMQInstanceNetworkInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RocketMQInstanceNetworkInfo) *RocketMQInstanceNetworkInfo {
		return &v
	}).(RocketMQInstanceNetworkInfoPtrOutput)
}

// Access point list.
func (o RocketMQInstanceNetworkInfoOutput) Endpoints() RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfo) []RocketMQInstanceNetworkInfoEndpoint { return v.Endpoints }).(RocketMQInstanceNetworkInfoEndpointArrayOutput)
}

// instance internet info. See `internetInfo` below.
func (o RocketMQInstanceNetworkInfoOutput) InternetInfo() RocketMQInstanceNetworkInfoInternetInfoOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfo) RocketMQInstanceNetworkInfoInternetInfo { return v.InternetInfo }).(RocketMQInstanceNetworkInfoInternetInfoOutput)
}

// Proprietary network information. See `vpcInfo` below.
func (o RocketMQInstanceNetworkInfoOutput) VpcInfo() RocketMQInstanceNetworkInfoVpcInfoOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfo) RocketMQInstanceNetworkInfoVpcInfo { return v.VpcInfo }).(RocketMQInstanceNetworkInfoVpcInfoOutput)
}

type RocketMQInstanceNetworkInfoPtrOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoPtrOutput) ToRocketMQInstanceNetworkInfoPtrOutput() RocketMQInstanceNetworkInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoPtrOutput) ToRocketMQInstanceNetworkInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoPtrOutput) Elem() RocketMQInstanceNetworkInfoOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfo) RocketMQInstanceNetworkInfo {
		if v != nil {
			return *v
		}
		var ret RocketMQInstanceNetworkInfo
		return ret
	}).(RocketMQInstanceNetworkInfoOutput)
}

// Access point list.
func (o RocketMQInstanceNetworkInfoPtrOutput) Endpoints() RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfo) []RocketMQInstanceNetworkInfoEndpoint {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RocketMQInstanceNetworkInfoEndpointArrayOutput)
}

// instance internet info. See `internetInfo` below.
func (o RocketMQInstanceNetworkInfoPtrOutput) InternetInfo() RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfo) *RocketMQInstanceNetworkInfoInternetInfo {
		if v == nil {
			return nil
		}
		return &v.InternetInfo
	}).(RocketMQInstanceNetworkInfoInternetInfoPtrOutput)
}

// Proprietary network information. See `vpcInfo` below.
func (o RocketMQInstanceNetworkInfoPtrOutput) VpcInfo() RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfo) *RocketMQInstanceNetworkInfoVpcInfo {
		if v == nil {
			return nil
		}
		return &v.VpcInfo
	}).(RocketMQInstanceNetworkInfoVpcInfoPtrOutput)
}

type RocketMQInstanceNetworkInfoEndpoint struct {
	// Access point type.
	EndpointType *string `pulumi:"endpointType"`
	// Access point address.
	EndpointUrl *string `pulumi:"endpointUrl"`
	// White list of access addresses.
	IpWhiteLists []string `pulumi:"ipWhiteLists"`
}

// RocketMQInstanceNetworkInfoEndpointInput is an input type that accepts RocketMQInstanceNetworkInfoEndpointArgs and RocketMQInstanceNetworkInfoEndpointOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoEndpointInput` via:
//
//	RocketMQInstanceNetworkInfoEndpointArgs{...}
type RocketMQInstanceNetworkInfoEndpointInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoEndpointOutput() RocketMQInstanceNetworkInfoEndpointOutput
	ToRocketMQInstanceNetworkInfoEndpointOutputWithContext(context.Context) RocketMQInstanceNetworkInfoEndpointOutput
}

type RocketMQInstanceNetworkInfoEndpointArgs struct {
	// Access point type.
	EndpointType pulumi.StringPtrInput `pulumi:"endpointType"`
	// Access point address.
	EndpointUrl pulumi.StringPtrInput `pulumi:"endpointUrl"`
	// White list of access addresses.
	IpWhiteLists pulumi.StringArrayInput `pulumi:"ipWhiteLists"`
}

func (RocketMQInstanceNetworkInfoEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoEndpoint)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoEndpointArgs) ToRocketMQInstanceNetworkInfoEndpointOutput() RocketMQInstanceNetworkInfoEndpointOutput {
	return i.ToRocketMQInstanceNetworkInfoEndpointOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoEndpointArgs) ToRocketMQInstanceNetworkInfoEndpointOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoEndpointOutput)
}

// RocketMQInstanceNetworkInfoEndpointArrayInput is an input type that accepts RocketMQInstanceNetworkInfoEndpointArray and RocketMQInstanceNetworkInfoEndpointArrayOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoEndpointArrayInput` via:
//
//	RocketMQInstanceNetworkInfoEndpointArray{ RocketMQInstanceNetworkInfoEndpointArgs{...} }
type RocketMQInstanceNetworkInfoEndpointArrayInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoEndpointArrayOutput() RocketMQInstanceNetworkInfoEndpointArrayOutput
	ToRocketMQInstanceNetworkInfoEndpointArrayOutputWithContext(context.Context) RocketMQInstanceNetworkInfoEndpointArrayOutput
}

type RocketMQInstanceNetworkInfoEndpointArray []RocketMQInstanceNetworkInfoEndpointInput

func (RocketMQInstanceNetworkInfoEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketMQInstanceNetworkInfoEndpoint)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoEndpointArray) ToRocketMQInstanceNetworkInfoEndpointArrayOutput() RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return i.ToRocketMQInstanceNetworkInfoEndpointArrayOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoEndpointArray) ToRocketMQInstanceNetworkInfoEndpointArrayOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoEndpointArrayOutput)
}

type RocketMQInstanceNetworkInfoEndpointOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoEndpoint)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoEndpointOutput) ToRocketMQInstanceNetworkInfoEndpointOutput() RocketMQInstanceNetworkInfoEndpointOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoEndpointOutput) ToRocketMQInstanceNetworkInfoEndpointOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoEndpointOutput {
	return o
}

// Access point type.
func (o RocketMQInstanceNetworkInfoEndpointOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoEndpoint) *string { return v.EndpointType }).(pulumi.StringPtrOutput)
}

// Access point address.
func (o RocketMQInstanceNetworkInfoEndpointOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoEndpoint) *string { return v.EndpointUrl }).(pulumi.StringPtrOutput)
}

// White list of access addresses.
func (o RocketMQInstanceNetworkInfoEndpointOutput) IpWhiteLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoEndpoint) []string { return v.IpWhiteLists }).(pulumi.StringArrayOutput)
}

type RocketMQInstanceNetworkInfoEndpointArrayOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketMQInstanceNetworkInfoEndpoint)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoEndpointArrayOutput) ToRocketMQInstanceNetworkInfoEndpointArrayOutput() RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoEndpointArrayOutput) ToRocketMQInstanceNetworkInfoEndpointArrayOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoEndpointArrayOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoEndpointArrayOutput) Index(i pulumi.IntInput) RocketMQInstanceNetworkInfoEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RocketMQInstanceNetworkInfoEndpoint {
		return vs[0].([]RocketMQInstanceNetworkInfoEndpoint)[vs[1].(int)]
	}).(RocketMQInstanceNetworkInfoEndpointOutput)
}

type RocketMQInstanceNetworkInfoInternetInfo struct {
	// Public network bandwidth specification. Unit: Mb/s.  This field should only be filled when the public network billing type is set to payByBandwidth.  The value range is [1 - 1000].
	FlowOutBandwidth *int `pulumi:"flowOutBandwidth"`
	// Public network billing type.  Parameter values are as follows:
	// - payByBandwidth: Fixed bandwidth billing. This parameter must be set to the value when public network access is enabled.
	// - uninvolved: Not involved. This parameter must be set to the value when public network access is disabled.
	FlowOutType string `pulumi:"flowOutType"`
	// Whether to enable public network access.  The parameter values are as follows:
	// - enable: Enable public network access
	// - disable: Disable public network access   Instances by default support VPC access. If public network access is enabled, Alibaba Cloud Message Queue RocketMQ version will incur charges for public network outbound bandwidth. For specific billing information, please refer to [Public Network Access Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/internet-access-fee).
	InternetSpec string `pulumi:"internetSpec"`
	// internet ip whitelist.
	IpWhitelists []string `pulumi:"ipWhitelists"`
}

// RocketMQInstanceNetworkInfoInternetInfoInput is an input type that accepts RocketMQInstanceNetworkInfoInternetInfoArgs and RocketMQInstanceNetworkInfoInternetInfoOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoInternetInfoInput` via:
//
//	RocketMQInstanceNetworkInfoInternetInfoArgs{...}
type RocketMQInstanceNetworkInfoInternetInfoInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoInternetInfoOutput() RocketMQInstanceNetworkInfoInternetInfoOutput
	ToRocketMQInstanceNetworkInfoInternetInfoOutputWithContext(context.Context) RocketMQInstanceNetworkInfoInternetInfoOutput
}

type RocketMQInstanceNetworkInfoInternetInfoArgs struct {
	// Public network bandwidth specification. Unit: Mb/s.  This field should only be filled when the public network billing type is set to payByBandwidth.  The value range is [1 - 1000].
	FlowOutBandwidth pulumi.IntPtrInput `pulumi:"flowOutBandwidth"`
	// Public network billing type.  Parameter values are as follows:
	// - payByBandwidth: Fixed bandwidth billing. This parameter must be set to the value when public network access is enabled.
	// - uninvolved: Not involved. This parameter must be set to the value when public network access is disabled.
	FlowOutType pulumi.StringInput `pulumi:"flowOutType"`
	// Whether to enable public network access.  The parameter values are as follows:
	// - enable: Enable public network access
	// - disable: Disable public network access   Instances by default support VPC access. If public network access is enabled, Alibaba Cloud Message Queue RocketMQ version will incur charges for public network outbound bandwidth. For specific billing information, please refer to [Public Network Access Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/internet-access-fee).
	InternetSpec pulumi.StringInput `pulumi:"internetSpec"`
	// internet ip whitelist.
	IpWhitelists pulumi.StringArrayInput `pulumi:"ipWhitelists"`
}

func (RocketMQInstanceNetworkInfoInternetInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoInternetInfo)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoInternetInfoArgs) ToRocketMQInstanceNetworkInfoInternetInfoOutput() RocketMQInstanceNetworkInfoInternetInfoOutput {
	return i.ToRocketMQInstanceNetworkInfoInternetInfoOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoInternetInfoArgs) ToRocketMQInstanceNetworkInfoInternetInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoInternetInfoOutput)
}

func (i RocketMQInstanceNetworkInfoInternetInfoArgs) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutput() RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoInternetInfoArgs) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoInternetInfoOutput).ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(ctx)
}

// RocketMQInstanceNetworkInfoInternetInfoPtrInput is an input type that accepts RocketMQInstanceNetworkInfoInternetInfoArgs, RocketMQInstanceNetworkInfoInternetInfoPtr and RocketMQInstanceNetworkInfoInternetInfoPtrOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoInternetInfoPtrInput` via:
//
//	        RocketMQInstanceNetworkInfoInternetInfoArgs{...}
//
//	or:
//
//	        nil
type RocketMQInstanceNetworkInfoInternetInfoPtrInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoInternetInfoPtrOutput() RocketMQInstanceNetworkInfoInternetInfoPtrOutput
	ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(context.Context) RocketMQInstanceNetworkInfoInternetInfoPtrOutput
}

type rocketMQInstanceNetworkInfoInternetInfoPtrType RocketMQInstanceNetworkInfoInternetInfoArgs

func RocketMQInstanceNetworkInfoInternetInfoPtr(v *RocketMQInstanceNetworkInfoInternetInfoArgs) RocketMQInstanceNetworkInfoInternetInfoPtrInput {
	return (*rocketMQInstanceNetworkInfoInternetInfoPtrType)(v)
}

func (*rocketMQInstanceNetworkInfoInternetInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfoInternetInfo)(nil)).Elem()
}

func (i *rocketMQInstanceNetworkInfoInternetInfoPtrType) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutput() RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(context.Background())
}

func (i *rocketMQInstanceNetworkInfoInternetInfoPtrType) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoInternetInfoPtrOutput)
}

type RocketMQInstanceNetworkInfoInternetInfoOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoInternetInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoInternetInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoInternetInfoOutput) ToRocketMQInstanceNetworkInfoInternetInfoOutput() RocketMQInstanceNetworkInfoInternetInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoInternetInfoOutput) ToRocketMQInstanceNetworkInfoInternetInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoInternetInfoOutput) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutput() RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return o.ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(context.Background())
}

func (o RocketMQInstanceNetworkInfoInternetInfoOutput) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RocketMQInstanceNetworkInfoInternetInfo) *RocketMQInstanceNetworkInfoInternetInfo {
		return &v
	}).(RocketMQInstanceNetworkInfoInternetInfoPtrOutput)
}

// Public network bandwidth specification. Unit: Mb/s.  This field should only be filled when the public network billing type is set to payByBandwidth.  The value range is [1 - 1000].
func (o RocketMQInstanceNetworkInfoInternetInfoOutput) FlowOutBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoInternetInfo) *int { return v.FlowOutBandwidth }).(pulumi.IntPtrOutput)
}

// Public network billing type.  Parameter values are as follows:
// - payByBandwidth: Fixed bandwidth billing. This parameter must be set to the value when public network access is enabled.
// - uninvolved: Not involved. This parameter must be set to the value when public network access is disabled.
func (o RocketMQInstanceNetworkInfoInternetInfoOutput) FlowOutType() pulumi.StringOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoInternetInfo) string { return v.FlowOutType }).(pulumi.StringOutput)
}

// Whether to enable public network access.  The parameter values are as follows:
// - enable: Enable public network access
// - disable: Disable public network access   Instances by default support VPC access. If public network access is enabled, Alibaba Cloud Message Queue RocketMQ version will incur charges for public network outbound bandwidth. For specific billing information, please refer to [Public Network Access Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/internet-access-fee).
func (o RocketMQInstanceNetworkInfoInternetInfoOutput) InternetSpec() pulumi.StringOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoInternetInfo) string { return v.InternetSpec }).(pulumi.StringOutput)
}

// internet ip whitelist.
func (o RocketMQInstanceNetworkInfoInternetInfoOutput) IpWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoInternetInfo) []string { return v.IpWhitelists }).(pulumi.StringArrayOutput)
}

type RocketMQInstanceNetworkInfoInternetInfoPtrOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoInternetInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfoInternetInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutput() RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) ToRocketMQInstanceNetworkInfoInternetInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoInternetInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) Elem() RocketMQInstanceNetworkInfoInternetInfoOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoInternetInfo) RocketMQInstanceNetworkInfoInternetInfo {
		if v != nil {
			return *v
		}
		var ret RocketMQInstanceNetworkInfoInternetInfo
		return ret
	}).(RocketMQInstanceNetworkInfoInternetInfoOutput)
}

// Public network bandwidth specification. Unit: Mb/s.  This field should only be filled when the public network billing type is set to payByBandwidth.  The value range is [1 - 1000].
func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) FlowOutBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoInternetInfo) *int {
		if v == nil {
			return nil
		}
		return v.FlowOutBandwidth
	}).(pulumi.IntPtrOutput)
}

// Public network billing type.  Parameter values are as follows:
// - payByBandwidth: Fixed bandwidth billing. This parameter must be set to the value when public network access is enabled.
// - uninvolved: Not involved. This parameter must be set to the value when public network access is disabled.
func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) FlowOutType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoInternetInfo) *string {
		if v == nil {
			return nil
		}
		return &v.FlowOutType
	}).(pulumi.StringPtrOutput)
}

// Whether to enable public network access.  The parameter values are as follows:
// - enable: Enable public network access
// - disable: Disable public network access   Instances by default support VPC access. If public network access is enabled, Alibaba Cloud Message Queue RocketMQ version will incur charges for public network outbound bandwidth. For specific billing information, please refer to [Public Network Access Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/internet-access-fee).
func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) InternetSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoInternetInfo) *string {
		if v == nil {
			return nil
		}
		return &v.InternetSpec
	}).(pulumi.StringPtrOutput)
}

// internet ip whitelist.
func (o RocketMQInstanceNetworkInfoInternetInfoPtrOutput) IpWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoInternetInfo) []string {
		if v == nil {
			return nil
		}
		return v.IpWhitelists
	}).(pulumi.StringArrayOutput)
}

type RocketMQInstanceNetworkInfoVpcInfo struct {
	// Security group id.
	SecurityGroupIds *string `pulumi:"securityGroupIds"`
	// Proprietary Network.
	VpcId string `pulumi:"vpcId"`
	// VPC switch id.
	VswitchId *string `pulumi:"vswitchId"`
	// Multiple VSwitches. At least two VSwitches are required for a serverless instance. See `vswitches` below.
	Vswitches []RocketMQInstanceNetworkInfoVpcInfoVswitch `pulumi:"vswitches"`
}

// RocketMQInstanceNetworkInfoVpcInfoInput is an input type that accepts RocketMQInstanceNetworkInfoVpcInfoArgs and RocketMQInstanceNetworkInfoVpcInfoOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoVpcInfoInput` via:
//
//	RocketMQInstanceNetworkInfoVpcInfoArgs{...}
type RocketMQInstanceNetworkInfoVpcInfoInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoVpcInfoOutput() RocketMQInstanceNetworkInfoVpcInfoOutput
	ToRocketMQInstanceNetworkInfoVpcInfoOutputWithContext(context.Context) RocketMQInstanceNetworkInfoVpcInfoOutput
}

type RocketMQInstanceNetworkInfoVpcInfoArgs struct {
	// Security group id.
	SecurityGroupIds pulumi.StringPtrInput `pulumi:"securityGroupIds"`
	// Proprietary Network.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// VPC switch id.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
	// Multiple VSwitches. At least two VSwitches are required for a serverless instance. See `vswitches` below.
	Vswitches RocketMQInstanceNetworkInfoVpcInfoVswitchArrayInput `pulumi:"vswitches"`
}

func (RocketMQInstanceNetworkInfoVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfo)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoVpcInfoArgs) ToRocketMQInstanceNetworkInfoVpcInfoOutput() RocketMQInstanceNetworkInfoVpcInfoOutput {
	return i.ToRocketMQInstanceNetworkInfoVpcInfoOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoVpcInfoArgs) ToRocketMQInstanceNetworkInfoVpcInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoVpcInfoOutput)
}

func (i RocketMQInstanceNetworkInfoVpcInfoArgs) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutput() RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoVpcInfoArgs) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoVpcInfoOutput).ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(ctx)
}

// RocketMQInstanceNetworkInfoVpcInfoPtrInput is an input type that accepts RocketMQInstanceNetworkInfoVpcInfoArgs, RocketMQInstanceNetworkInfoVpcInfoPtr and RocketMQInstanceNetworkInfoVpcInfoPtrOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoVpcInfoPtrInput` via:
//
//	        RocketMQInstanceNetworkInfoVpcInfoArgs{...}
//
//	or:
//
//	        nil
type RocketMQInstanceNetworkInfoVpcInfoPtrInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoVpcInfoPtrOutput() RocketMQInstanceNetworkInfoVpcInfoPtrOutput
	ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(context.Context) RocketMQInstanceNetworkInfoVpcInfoPtrOutput
}

type rocketMQInstanceNetworkInfoVpcInfoPtrType RocketMQInstanceNetworkInfoVpcInfoArgs

func RocketMQInstanceNetworkInfoVpcInfoPtr(v *RocketMQInstanceNetworkInfoVpcInfoArgs) RocketMQInstanceNetworkInfoVpcInfoPtrInput {
	return (*rocketMQInstanceNetworkInfoVpcInfoPtrType)(v)
}

func (*rocketMQInstanceNetworkInfoVpcInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfoVpcInfo)(nil)).Elem()
}

func (i *rocketMQInstanceNetworkInfoVpcInfoPtrType) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutput() RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return i.ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(context.Background())
}

func (i *rocketMQInstanceNetworkInfoVpcInfoPtrType) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoVpcInfoPtrOutput)
}

type RocketMQInstanceNetworkInfoVpcInfoOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoVpcInfoOutput) ToRocketMQInstanceNetworkInfoVpcInfoOutput() RocketMQInstanceNetworkInfoVpcInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoOutput) ToRocketMQInstanceNetworkInfoVpcInfoOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoOutput) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutput() RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return o.ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(context.Background())
}

func (o RocketMQInstanceNetworkInfoVpcInfoOutput) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RocketMQInstanceNetworkInfoVpcInfo) *RocketMQInstanceNetworkInfoVpcInfo {
		return &v
	}).(RocketMQInstanceNetworkInfoVpcInfoPtrOutput)
}

// Security group id.
func (o RocketMQInstanceNetworkInfoVpcInfoOutput) SecurityGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoVpcInfo) *string { return v.SecurityGroupIds }).(pulumi.StringPtrOutput)
}

// Proprietary Network.
func (o RocketMQInstanceNetworkInfoVpcInfoOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoVpcInfo) string { return v.VpcId }).(pulumi.StringOutput)
}

// VPC switch id.
func (o RocketMQInstanceNetworkInfoVpcInfoOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoVpcInfo) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

// Multiple VSwitches. At least two VSwitches are required for a serverless instance. See `vswitches` below.
func (o RocketMQInstanceNetworkInfoVpcInfoOutput) Vswitches() RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoVpcInfo) []RocketMQInstanceNetworkInfoVpcInfoVswitch {
		return v.Vswitches
	}).(RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput)
}

type RocketMQInstanceNetworkInfoVpcInfoPtrOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoVpcInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceNetworkInfoVpcInfo)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutput() RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) ToRocketMQInstanceNetworkInfoVpcInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoPtrOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) Elem() RocketMQInstanceNetworkInfoVpcInfoOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoVpcInfo) RocketMQInstanceNetworkInfoVpcInfo {
		if v != nil {
			return *v
		}
		var ret RocketMQInstanceNetworkInfoVpcInfo
		return ret
	}).(RocketMQInstanceNetworkInfoVpcInfoOutput)
}

// Security group id.
func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) SecurityGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoVpcInfo) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringPtrOutput)
}

// Proprietary Network.
func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoVpcInfo) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

// VPC switch id.
func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoVpcInfo) *string {
		if v == nil {
			return nil
		}
		return v.VswitchId
	}).(pulumi.StringPtrOutput)
}

// Multiple VSwitches. At least two VSwitches are required for a serverless instance. See `vswitches` below.
func (o RocketMQInstanceNetworkInfoVpcInfoPtrOutput) Vswitches() RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return o.ApplyT(func(v *RocketMQInstanceNetworkInfoVpcInfo) []RocketMQInstanceNetworkInfoVpcInfoVswitch {
		if v == nil {
			return nil
		}
		return v.Vswitches
	}).(RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput)
}

type RocketMQInstanceNetworkInfoVpcInfoVswitch struct {
	// VPC switch id.
	VswitchId *string `pulumi:"vswitchId"`
}

// RocketMQInstanceNetworkInfoVpcInfoVswitchInput is an input type that accepts RocketMQInstanceNetworkInfoVpcInfoVswitchArgs and RocketMQInstanceNetworkInfoVpcInfoVswitchOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoVpcInfoVswitchInput` via:
//
//	RocketMQInstanceNetworkInfoVpcInfoVswitchArgs{...}
type RocketMQInstanceNetworkInfoVpcInfoVswitchInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchOutput
	ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutputWithContext(context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchOutput
}

type RocketMQInstanceNetworkInfoVpcInfoVswitchArgs struct {
	// VPC switch id.
	VswitchId pulumi.StringPtrInput `pulumi:"vswitchId"`
}

func (RocketMQInstanceNetworkInfoVpcInfoVswitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoVswitch)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoVpcInfoVswitchArgs) ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchOutput {
	return i.ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoVpcInfoVswitchArgs) ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoVpcInfoVswitchOutput)
}

// RocketMQInstanceNetworkInfoVpcInfoVswitchArrayInput is an input type that accepts RocketMQInstanceNetworkInfoVpcInfoVswitchArray and RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput values.
// You can construct a concrete instance of `RocketMQInstanceNetworkInfoVpcInfoVswitchArrayInput` via:
//
//	RocketMQInstanceNetworkInfoVpcInfoVswitchArray{ RocketMQInstanceNetworkInfoVpcInfoVswitchArgs{...} }
type RocketMQInstanceNetworkInfoVpcInfoVswitchArrayInput interface {
	pulumi.Input

	ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput
	ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutputWithContext(context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput
}

type RocketMQInstanceNetworkInfoVpcInfoVswitchArray []RocketMQInstanceNetworkInfoVpcInfoVswitchInput

func (RocketMQInstanceNetworkInfoVpcInfoVswitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketMQInstanceNetworkInfoVpcInfoVswitch)(nil)).Elem()
}

func (i RocketMQInstanceNetworkInfoVpcInfoVswitchArray) ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return i.ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutputWithContext(context.Background())
}

func (i RocketMQInstanceNetworkInfoVpcInfoVswitchArray) ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput)
}

type RocketMQInstanceNetworkInfoVpcInfoVswitchOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoVpcInfoVswitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoVswitch)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoVpcInfoVswitchOutput) ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoVswitchOutput) ToRocketMQInstanceNetworkInfoVpcInfoVswitchOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchOutput {
	return o
}

// VPC switch id.
func (o RocketMQInstanceNetworkInfoVpcInfoVswitchOutput) VswitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceNetworkInfoVpcInfoVswitch) *string { return v.VswitchId }).(pulumi.StringPtrOutput)
}

type RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RocketMQInstanceNetworkInfoVpcInfoVswitch)(nil)).Elem()
}

func (o RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput) ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput() RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput) ToRocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutputWithContext(ctx context.Context) RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput {
	return o
}

func (o RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput) Index(i pulumi.IntInput) RocketMQInstanceNetworkInfoVpcInfoVswitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RocketMQInstanceNetworkInfoVpcInfoVswitch {
		return vs[0].([]RocketMQInstanceNetworkInfoVpcInfoVswitch)[vs[1].(int)]
	}).(RocketMQInstanceNetworkInfoVpcInfoVswitchOutput)
}

type RocketMQInstanceProductInfo struct {
	// is open auto scaling.
	AutoScaling *bool `pulumi:"autoScaling"`
	// Duration of message retention. Unit: hours.  For the range of values, please refer to [Usage Limits](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/usage-limits)>Resource Quotas>Limitations on Message Retention.  The message storage in AlibabaCloud RocketMQ is fully implemented in a serverless and elastic manner, with charges based on the actual storage space. You can control the storage capacity of messages by adjusting the duration of message retention. For more information, please see [Storage Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/storage-fees).
	MessageRetentionTime *int `pulumi:"messageRetentionTime"`
	// Message sending and receiving calculation specifications. For details about the upper limit for sending and receiving messages, see [Instance Specifications](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/instance-specifications).
	MsgProcessSpec string `pulumi:"msgProcessSpec"`
	// message send receive ratio.  Value range: [0.2, 0.5].
	SendReceiveRatio *float64 `pulumi:"sendReceiveRatio"`
	// is support auto scaling.
	SupportAutoScaling *bool `pulumi:"supportAutoScaling"`
}

// RocketMQInstanceProductInfoInput is an input type that accepts RocketMQInstanceProductInfoArgs and RocketMQInstanceProductInfoOutput values.
// You can construct a concrete instance of `RocketMQInstanceProductInfoInput` via:
//
//	RocketMQInstanceProductInfoArgs{...}
type RocketMQInstanceProductInfoInput interface {
	pulumi.Input

	ToRocketMQInstanceProductInfoOutput() RocketMQInstanceProductInfoOutput
	ToRocketMQInstanceProductInfoOutputWithContext(context.Context) RocketMQInstanceProductInfoOutput
}

type RocketMQInstanceProductInfoArgs struct {
	// is open auto scaling.
	AutoScaling pulumi.BoolPtrInput `pulumi:"autoScaling"`
	// Duration of message retention. Unit: hours.  For the range of values, please refer to [Usage Limits](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/usage-limits)>Resource Quotas>Limitations on Message Retention.  The message storage in AlibabaCloud RocketMQ is fully implemented in a serverless and elastic manner, with charges based on the actual storage space. You can control the storage capacity of messages by adjusting the duration of message retention. For more information, please see [Storage Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/storage-fees).
	MessageRetentionTime pulumi.IntPtrInput `pulumi:"messageRetentionTime"`
	// Message sending and receiving calculation specifications. For details about the upper limit for sending and receiving messages, see [Instance Specifications](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/instance-specifications).
	MsgProcessSpec pulumi.StringInput `pulumi:"msgProcessSpec"`
	// message send receive ratio.  Value range: [0.2, 0.5].
	SendReceiveRatio pulumi.Float64PtrInput `pulumi:"sendReceiveRatio"`
	// is support auto scaling.
	SupportAutoScaling pulumi.BoolPtrInput `pulumi:"supportAutoScaling"`
}

func (RocketMQInstanceProductInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceProductInfo)(nil)).Elem()
}

func (i RocketMQInstanceProductInfoArgs) ToRocketMQInstanceProductInfoOutput() RocketMQInstanceProductInfoOutput {
	return i.ToRocketMQInstanceProductInfoOutputWithContext(context.Background())
}

func (i RocketMQInstanceProductInfoArgs) ToRocketMQInstanceProductInfoOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceProductInfoOutput)
}

func (i RocketMQInstanceProductInfoArgs) ToRocketMQInstanceProductInfoPtrOutput() RocketMQInstanceProductInfoPtrOutput {
	return i.ToRocketMQInstanceProductInfoPtrOutputWithContext(context.Background())
}

func (i RocketMQInstanceProductInfoArgs) ToRocketMQInstanceProductInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceProductInfoOutput).ToRocketMQInstanceProductInfoPtrOutputWithContext(ctx)
}

// RocketMQInstanceProductInfoPtrInput is an input type that accepts RocketMQInstanceProductInfoArgs, RocketMQInstanceProductInfoPtr and RocketMQInstanceProductInfoPtrOutput values.
// You can construct a concrete instance of `RocketMQInstanceProductInfoPtrInput` via:
//
//	        RocketMQInstanceProductInfoArgs{...}
//
//	or:
//
//	        nil
type RocketMQInstanceProductInfoPtrInput interface {
	pulumi.Input

	ToRocketMQInstanceProductInfoPtrOutput() RocketMQInstanceProductInfoPtrOutput
	ToRocketMQInstanceProductInfoPtrOutputWithContext(context.Context) RocketMQInstanceProductInfoPtrOutput
}

type rocketMQInstanceProductInfoPtrType RocketMQInstanceProductInfoArgs

func RocketMQInstanceProductInfoPtr(v *RocketMQInstanceProductInfoArgs) RocketMQInstanceProductInfoPtrInput {
	return (*rocketMQInstanceProductInfoPtrType)(v)
}

func (*rocketMQInstanceProductInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceProductInfo)(nil)).Elem()
}

func (i *rocketMQInstanceProductInfoPtrType) ToRocketMQInstanceProductInfoPtrOutput() RocketMQInstanceProductInfoPtrOutput {
	return i.ToRocketMQInstanceProductInfoPtrOutputWithContext(context.Background())
}

func (i *rocketMQInstanceProductInfoPtrType) ToRocketMQInstanceProductInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceProductInfoPtrOutput)
}

type RocketMQInstanceProductInfoOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceProductInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceProductInfo)(nil)).Elem()
}

func (o RocketMQInstanceProductInfoOutput) ToRocketMQInstanceProductInfoOutput() RocketMQInstanceProductInfoOutput {
	return o
}

func (o RocketMQInstanceProductInfoOutput) ToRocketMQInstanceProductInfoOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoOutput {
	return o
}

func (o RocketMQInstanceProductInfoOutput) ToRocketMQInstanceProductInfoPtrOutput() RocketMQInstanceProductInfoPtrOutput {
	return o.ToRocketMQInstanceProductInfoPtrOutputWithContext(context.Background())
}

func (o RocketMQInstanceProductInfoOutput) ToRocketMQInstanceProductInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RocketMQInstanceProductInfo) *RocketMQInstanceProductInfo {
		return &v
	}).(RocketMQInstanceProductInfoPtrOutput)
}

// is open auto scaling.
func (o RocketMQInstanceProductInfoOutput) AutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceProductInfo) *bool { return v.AutoScaling }).(pulumi.BoolPtrOutput)
}

// Duration of message retention. Unit: hours.  For the range of values, please refer to [Usage Limits](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/usage-limits)>Resource Quotas>Limitations on Message Retention.  The message storage in AlibabaCloud RocketMQ is fully implemented in a serverless and elastic manner, with charges based on the actual storage space. You can control the storage capacity of messages by adjusting the duration of message retention. For more information, please see [Storage Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/storage-fees).
func (o RocketMQInstanceProductInfoOutput) MessageRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceProductInfo) *int { return v.MessageRetentionTime }).(pulumi.IntPtrOutput)
}

// Message sending and receiving calculation specifications. For details about the upper limit for sending and receiving messages, see [Instance Specifications](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/instance-specifications).
func (o RocketMQInstanceProductInfoOutput) MsgProcessSpec() pulumi.StringOutput {
	return o.ApplyT(func(v RocketMQInstanceProductInfo) string { return v.MsgProcessSpec }).(pulumi.StringOutput)
}

// message send receive ratio.  Value range: [0.2, 0.5].
func (o RocketMQInstanceProductInfoOutput) SendReceiveRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RocketMQInstanceProductInfo) *float64 { return v.SendReceiveRatio }).(pulumi.Float64PtrOutput)
}

// is support auto scaling.
func (o RocketMQInstanceProductInfoOutput) SupportAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceProductInfo) *bool { return v.SupportAutoScaling }).(pulumi.BoolPtrOutput)
}

type RocketMQInstanceProductInfoPtrOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceProductInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceProductInfo)(nil)).Elem()
}

func (o RocketMQInstanceProductInfoPtrOutput) ToRocketMQInstanceProductInfoPtrOutput() RocketMQInstanceProductInfoPtrOutput {
	return o
}

func (o RocketMQInstanceProductInfoPtrOutput) ToRocketMQInstanceProductInfoPtrOutputWithContext(ctx context.Context) RocketMQInstanceProductInfoPtrOutput {
	return o
}

func (o RocketMQInstanceProductInfoPtrOutput) Elem() RocketMQInstanceProductInfoOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) RocketMQInstanceProductInfo {
		if v != nil {
			return *v
		}
		var ret RocketMQInstanceProductInfo
		return ret
	}).(RocketMQInstanceProductInfoOutput)
}

// is open auto scaling.
func (o RocketMQInstanceProductInfoPtrOutput) AutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) *bool {
		if v == nil {
			return nil
		}
		return v.AutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Duration of message retention. Unit: hours.  For the range of values, please refer to [Usage Limits](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/usage-limits)>Resource Quotas>Limitations on Message Retention.  The message storage in AlibabaCloud RocketMQ is fully implemented in a serverless and elastic manner, with charges based on the actual storage space. You can control the storage capacity of messages by adjusting the duration of message retention. For more information, please see [Storage Fees](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/storage-fees).
func (o RocketMQInstanceProductInfoPtrOutput) MessageRetentionTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) *int {
		if v == nil {
			return nil
		}
		return v.MessageRetentionTime
	}).(pulumi.IntPtrOutput)
}

// Message sending and receiving calculation specifications. For details about the upper limit for sending and receiving messages, see [Instance Specifications](https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/instance-specifications).
func (o RocketMQInstanceProductInfoPtrOutput) MsgProcessSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) *string {
		if v == nil {
			return nil
		}
		return &v.MsgProcessSpec
	}).(pulumi.StringPtrOutput)
}

// message send receive ratio.  Value range: [0.2, 0.5].
func (o RocketMQInstanceProductInfoPtrOutput) SendReceiveRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.SendReceiveRatio
	}).(pulumi.Float64PtrOutput)
}

// is support auto scaling.
func (o RocketMQInstanceProductInfoPtrOutput) SupportAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceProductInfo) *bool {
		if v == nil {
			return nil
		}
		return v.SupportAutoScaling
	}).(pulumi.BoolPtrOutput)
}

type RocketMQInstanceSoftware struct {
	// Upgrade time period.
	MaintainTime *string `pulumi:"maintainTime"`
	// Software version.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// Upgrade method.
	UpgradeMethod *string `pulumi:"upgradeMethod"`
}

// RocketMQInstanceSoftwareInput is an input type that accepts RocketMQInstanceSoftwareArgs and RocketMQInstanceSoftwareOutput values.
// You can construct a concrete instance of `RocketMQInstanceSoftwareInput` via:
//
//	RocketMQInstanceSoftwareArgs{...}
type RocketMQInstanceSoftwareInput interface {
	pulumi.Input

	ToRocketMQInstanceSoftwareOutput() RocketMQInstanceSoftwareOutput
	ToRocketMQInstanceSoftwareOutputWithContext(context.Context) RocketMQInstanceSoftwareOutput
}

type RocketMQInstanceSoftwareArgs struct {
	// Upgrade time period.
	MaintainTime pulumi.StringPtrInput `pulumi:"maintainTime"`
	// Software version.
	SoftwareVersion pulumi.StringPtrInput `pulumi:"softwareVersion"`
	// Upgrade method.
	UpgradeMethod pulumi.StringPtrInput `pulumi:"upgradeMethod"`
}

func (RocketMQInstanceSoftwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceSoftware)(nil)).Elem()
}

func (i RocketMQInstanceSoftwareArgs) ToRocketMQInstanceSoftwareOutput() RocketMQInstanceSoftwareOutput {
	return i.ToRocketMQInstanceSoftwareOutputWithContext(context.Background())
}

func (i RocketMQInstanceSoftwareArgs) ToRocketMQInstanceSoftwareOutputWithContext(ctx context.Context) RocketMQInstanceSoftwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceSoftwareOutput)
}

func (i RocketMQInstanceSoftwareArgs) ToRocketMQInstanceSoftwarePtrOutput() RocketMQInstanceSoftwarePtrOutput {
	return i.ToRocketMQInstanceSoftwarePtrOutputWithContext(context.Background())
}

func (i RocketMQInstanceSoftwareArgs) ToRocketMQInstanceSoftwarePtrOutputWithContext(ctx context.Context) RocketMQInstanceSoftwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceSoftwareOutput).ToRocketMQInstanceSoftwarePtrOutputWithContext(ctx)
}

// RocketMQInstanceSoftwarePtrInput is an input type that accepts RocketMQInstanceSoftwareArgs, RocketMQInstanceSoftwarePtr and RocketMQInstanceSoftwarePtrOutput values.
// You can construct a concrete instance of `RocketMQInstanceSoftwarePtrInput` via:
//
//	        RocketMQInstanceSoftwareArgs{...}
//
//	or:
//
//	        nil
type RocketMQInstanceSoftwarePtrInput interface {
	pulumi.Input

	ToRocketMQInstanceSoftwarePtrOutput() RocketMQInstanceSoftwarePtrOutput
	ToRocketMQInstanceSoftwarePtrOutputWithContext(context.Context) RocketMQInstanceSoftwarePtrOutput
}

type rocketMQInstanceSoftwarePtrType RocketMQInstanceSoftwareArgs

func RocketMQInstanceSoftwarePtr(v *RocketMQInstanceSoftwareArgs) RocketMQInstanceSoftwarePtrInput {
	return (*rocketMQInstanceSoftwarePtrType)(v)
}

func (*rocketMQInstanceSoftwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceSoftware)(nil)).Elem()
}

func (i *rocketMQInstanceSoftwarePtrType) ToRocketMQInstanceSoftwarePtrOutput() RocketMQInstanceSoftwarePtrOutput {
	return i.ToRocketMQInstanceSoftwarePtrOutputWithContext(context.Background())
}

func (i *rocketMQInstanceSoftwarePtrType) ToRocketMQInstanceSoftwarePtrOutputWithContext(ctx context.Context) RocketMQInstanceSoftwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQInstanceSoftwarePtrOutput)
}

type RocketMQInstanceSoftwareOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceSoftwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RocketMQInstanceSoftware)(nil)).Elem()
}

func (o RocketMQInstanceSoftwareOutput) ToRocketMQInstanceSoftwareOutput() RocketMQInstanceSoftwareOutput {
	return o
}

func (o RocketMQInstanceSoftwareOutput) ToRocketMQInstanceSoftwareOutputWithContext(ctx context.Context) RocketMQInstanceSoftwareOutput {
	return o
}

func (o RocketMQInstanceSoftwareOutput) ToRocketMQInstanceSoftwarePtrOutput() RocketMQInstanceSoftwarePtrOutput {
	return o.ToRocketMQInstanceSoftwarePtrOutputWithContext(context.Background())
}

func (o RocketMQInstanceSoftwareOutput) ToRocketMQInstanceSoftwarePtrOutputWithContext(ctx context.Context) RocketMQInstanceSoftwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RocketMQInstanceSoftware) *RocketMQInstanceSoftware {
		return &v
	}).(RocketMQInstanceSoftwarePtrOutput)
}

// Upgrade time period.
func (o RocketMQInstanceSoftwareOutput) MaintainTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceSoftware) *string { return v.MaintainTime }).(pulumi.StringPtrOutput)
}

// Software version.
func (o RocketMQInstanceSoftwareOutput) SoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceSoftware) *string { return v.SoftwareVersion }).(pulumi.StringPtrOutput)
}

// Upgrade method.
func (o RocketMQInstanceSoftwareOutput) UpgradeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RocketMQInstanceSoftware) *string { return v.UpgradeMethod }).(pulumi.StringPtrOutput)
}

type RocketMQInstanceSoftwarePtrOutput struct{ *pulumi.OutputState }

func (RocketMQInstanceSoftwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQInstanceSoftware)(nil)).Elem()
}

func (o RocketMQInstanceSoftwarePtrOutput) ToRocketMQInstanceSoftwarePtrOutput() RocketMQInstanceSoftwarePtrOutput {
	return o
}

func (o RocketMQInstanceSoftwarePtrOutput) ToRocketMQInstanceSoftwarePtrOutputWithContext(ctx context.Context) RocketMQInstanceSoftwarePtrOutput {
	return o
}

func (o RocketMQInstanceSoftwarePtrOutput) Elem() RocketMQInstanceSoftwareOutput {
	return o.ApplyT(func(v *RocketMQInstanceSoftware) RocketMQInstanceSoftware {
		if v != nil {
			return *v
		}
		var ret RocketMQInstanceSoftware
		return ret
	}).(RocketMQInstanceSoftwareOutput)
}

// Upgrade time period.
func (o RocketMQInstanceSoftwarePtrOutput) MaintainTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceSoftware) *string {
		if v == nil {
			return nil
		}
		return v.MaintainTime
	}).(pulumi.StringPtrOutput)
}

// Software version.
func (o RocketMQInstanceSoftwarePtrOutput) SoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceSoftware) *string {
		if v == nil {
			return nil
		}
		return v.SoftwareVersion
	}).(pulumi.StringPtrOutput)
}

// Upgrade method.
func (o RocketMQInstanceSoftwarePtrOutput) UpgradeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQInstanceSoftware) *string {
		if v == nil {
			return nil
		}
		return v.UpgradeMethod
	}).(pulumi.StringPtrOutput)
}

type GetGroupsGroup struct {
	// The name of the group.
	GroupName string `pulumi:"groupName"`
	// Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
	GroupType string `pulumi:"groupType"`
	// The name of the group.
	Id string `pulumi:"id"`
	// Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
	IndependentNaming bool `pulumi:"independentNaming"`
	// ID of the ONS Instance that owns the groups.
	InstanceId string `pulumi:"instanceId"`
	// The ID of the group owner, which is the Alibaba Cloud UID.
	Owner string `pulumi:"owner"`
	// Remark of the group.
	Remark string `pulumi:"remark"`
	// A map of tags assigned to the Ons instance.
	Tags map[string]string `pulumi:"tags"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//	GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// The name of the group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The name of the group.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
	IndependentNaming pulumi.BoolInput `pulumi:"independentNaming"`
	// ID of the ONS Instance that owns the groups.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The ID of the group owner, which is the Alibaba Cloud UID.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Remark of the group.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A map of tags assigned to the Ons instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//	GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// The name of the group.
func (o GetGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
func (o GetGroupsGroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupType }).(pulumi.StringOutput)
}

// The name of the group.
func (o GetGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
func (o GetGroupsGroupOutput) IndependentNaming() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupsGroup) bool { return v.IndependentNaming }).(pulumi.BoolOutput)
}

// ID of the ONS Instance that owns the groups.
func (o GetGroupsGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the group owner, which is the Alibaba Cloud UID.
func (o GetGroupsGroupOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Owner }).(pulumi.StringOutput)
}

// Remark of the group.
func (o GetGroupsGroupOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Remark }).(pulumi.StringOutput)
}

// A map of tags assigned to the Ons instance.
func (o GetGroupsGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGroupsGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetInstancesInstance struct {
	// The internal HTTP endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternalEndpoint string `pulumi:"httpInternalEndpoint"`
	// The public HTTP endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternetEndpoint string `pulumi:"httpInternetEndpoint"`
	// The public HTTPS endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternetSecureEndpoint string `pulumi:"httpInternetSecureEndpoint"`
	// ID of the instance.
	Id string `pulumi:"id"`
	// Indicates whether any namespace is configured for the Message Queue for Apache RocketMQ instance.
	IndependentNaming bool `pulumi:"independentNaming"`
	// ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of the instance.
	InstanceName string `pulumi:"instanceName"`
	// The status of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
	InstanceStatus int `pulumi:"instanceStatus"`
	// The type of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
	InstanceType int `pulumi:"instanceType"`
	// The automatic release time of an Enterprise Platinum Edition instance.
	ReleaseTime string `pulumi:"releaseTime"`
	// This attribute is a concise description of instance.
	Remark string `pulumi:"remark"`
	// The status of Ons instance. Valid values: `0` deploying, `2` arrears, `5` running, `7` upgrading.
	Status int `pulumi:"status"`
	// A map of tags assigned to the Ons instance.
	Tags map[string]string `pulumi:"tags"`
	// The TCP endpoint for the Message Queue for Apache RocketMQ instance.
	TcpEndpoint string `pulumi:"tcpEndpoint"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The internal HTTP endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternalEndpoint pulumi.StringInput `pulumi:"httpInternalEndpoint"`
	// The public HTTP endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternetEndpoint pulumi.StringInput `pulumi:"httpInternetEndpoint"`
	// The public HTTPS endpoint for the Message Queue for Apache RocketMQ instance.
	HttpInternetSecureEndpoint pulumi.StringInput `pulumi:"httpInternetSecureEndpoint"`
	// ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether any namespace is configured for the Message Queue for Apache RocketMQ instance.
	IndependentNaming pulumi.BoolInput `pulumi:"independentNaming"`
	// ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of the instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The status of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
	InstanceStatus pulumi.IntInput `pulumi:"instanceStatus"`
	// The type of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
	InstanceType pulumi.IntInput `pulumi:"instanceType"`
	// The automatic release time of an Enterprise Platinum Edition instance.
	ReleaseTime pulumi.StringInput `pulumi:"releaseTime"`
	// This attribute is a concise description of instance.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The status of Ons instance. Valid values: `0` deploying, `2` arrears, `5` running, `7` upgrading.
	Status pulumi.IntInput `pulumi:"status"`
	// A map of tags assigned to the Ons instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The TCP endpoint for the Message Queue for Apache RocketMQ instance.
	TcpEndpoint pulumi.StringInput `pulumi:"tcpEndpoint"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The internal HTTP endpoint for the Message Queue for Apache RocketMQ instance.
func (o GetInstancesInstanceOutput) HttpInternalEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HttpInternalEndpoint }).(pulumi.StringOutput)
}

// The public HTTP endpoint for the Message Queue for Apache RocketMQ instance.
func (o GetInstancesInstanceOutput) HttpInternetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HttpInternetEndpoint }).(pulumi.StringOutput)
}

// The public HTTPS endpoint for the Message Queue for Apache RocketMQ instance.
func (o GetInstancesInstanceOutput) HttpInternetSecureEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HttpInternetSecureEndpoint }).(pulumi.StringOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether any namespace is configured for the Message Queue for Apache RocketMQ instance.
func (o GetInstancesInstanceOutput) IndependentNaming() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.IndependentNaming }).(pulumi.BoolOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of the instance.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The status of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
func (o GetInstancesInstanceOutput) InstanceStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.InstanceStatus }).(pulumi.IntOutput)
}

// The type of the instance. Read [Fields in InstanceVO](https://www.alibabacloud.com/help/doc-detail/106351.html) for further details.
func (o GetInstancesInstanceOutput) InstanceType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.InstanceType }).(pulumi.IntOutput)
}

// The automatic release time of an Enterprise Platinum Edition instance.
func (o GetInstancesInstanceOutput) ReleaseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ReleaseTime }).(pulumi.StringOutput)
}

// This attribute is a concise description of instance.
func (o GetInstancesInstanceOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Remark }).(pulumi.StringOutput)
}

// The status of Ons instance. Valid values: `0` deploying, `2` arrears, `5` running, `7` upgrading.
func (o GetInstancesInstanceOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.Status }).(pulumi.IntOutput)
}

// A map of tags assigned to the Ons instance.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The TCP endpoint for the Message Queue for Apache RocketMQ instance.
func (o GetInstancesInstanceOutput) TcpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TcpEndpoint }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetTopicsTopic struct {
	// The id of the topic.
	Id string `pulumi:"id"`
	// Indicates whether namespaces are available. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	IndependentNaming bool `pulumi:"independentNaming"`
	// ID of the ONS Instance that owns the topics.
	InstanceId string `pulumi:"instanceId"`
	// The type of the message. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	MessageType int `pulumi:"messageType"`
	// The ID of the topic owner, which is the Alibaba Cloud UID.
	Owner string `pulumi:"owner"`
	// This attribute is used to set the read-write mode for the topic.
	Perm int `pulumi:"perm"`
	// The relation ID. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	Relation int `pulumi:"relation"`
	// The name of the relation, for example, owner, publishable, subscribable, and publishable and subscribable.
	RelationName string `pulumi:"relationName"`
	// Remark of the topic.
	Remark string `pulumi:"remark"`
	// A map of tags assigned to the Ons instance.
	Tags map[string]string `pulumi:"tags"`
	// The name of the topic.
	Topic string `pulumi:"topic"`
	// The name of the topic.
	TopicName string `pulumi:"topicName"`
}

// GetTopicsTopicInput is an input type that accepts GetTopicsTopicArgs and GetTopicsTopicOutput values.
// You can construct a concrete instance of `GetTopicsTopicInput` via:
//
//	GetTopicsTopicArgs{...}
type GetTopicsTopicInput interface {
	pulumi.Input

	ToGetTopicsTopicOutput() GetTopicsTopicOutput
	ToGetTopicsTopicOutputWithContext(context.Context) GetTopicsTopicOutput
}

type GetTopicsTopicArgs struct {
	// The id of the topic.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether namespaces are available. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	IndependentNaming pulumi.BoolInput `pulumi:"independentNaming"`
	// ID of the ONS Instance that owns the topics.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the message. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	MessageType pulumi.IntInput `pulumi:"messageType"`
	// The ID of the topic owner, which is the Alibaba Cloud UID.
	Owner pulumi.StringInput `pulumi:"owner"`
	// This attribute is used to set the read-write mode for the topic.
	Perm pulumi.IntInput `pulumi:"perm"`
	// The relation ID. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
	Relation pulumi.IntInput `pulumi:"relation"`
	// The name of the relation, for example, owner, publishable, subscribable, and publishable and subscribable.
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// Remark of the topic.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A map of tags assigned to the Ons instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The name of the topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// The name of the topic.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (GetTopicsTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return i.ToGetTopicsTopicOutputWithContext(context.Background())
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicOutput)
}

// GetTopicsTopicArrayInput is an input type that accepts GetTopicsTopicArray and GetTopicsTopicArrayOutput values.
// You can construct a concrete instance of `GetTopicsTopicArrayInput` via:
//
//	GetTopicsTopicArray{ GetTopicsTopicArgs{...} }
type GetTopicsTopicArrayInput interface {
	pulumi.Input

	ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput
	ToGetTopicsTopicArrayOutputWithContext(context.Context) GetTopicsTopicArrayOutput
}

type GetTopicsTopicArray []GetTopicsTopicInput

func (GetTopicsTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return i.ToGetTopicsTopicArrayOutputWithContext(context.Background())
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicArrayOutput)
}

type GetTopicsTopicOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return o
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return o
}

// The id of the topic.
func (o GetTopicsTopicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether namespaces are available. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
func (o GetTopicsTopicOutput) IndependentNaming() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsTopic) bool { return v.IndependentNaming }).(pulumi.BoolOutput)
}

// ID of the ONS Instance that owns the topics.
func (o GetTopicsTopicOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the message. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
func (o GetTopicsTopicOutput) MessageType() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.MessageType }).(pulumi.IntOutput)
}

// The ID of the topic owner, which is the Alibaba Cloud UID.
func (o GetTopicsTopicOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Owner }).(pulumi.StringOutput)
}

// This attribute is used to set the read-write mode for the topic.
func (o GetTopicsTopicOutput) Perm() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.Perm }).(pulumi.IntOutput)
}

// The relation ID. Read [Fields in PublishInfoDo](https://www.alibabacloud.com/help/doc-detail/29590.html) for further details.
func (o GetTopicsTopicOutput) Relation() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.Relation }).(pulumi.IntOutput)
}

// The name of the relation, for example, owner, publishable, subscribable, and publishable and subscribable.
func (o GetTopicsTopicOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.RelationName }).(pulumi.StringOutput)
}

// Remark of the topic.
func (o GetTopicsTopicOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Remark }).(pulumi.StringOutput)
}

// A map of tags assigned to the Ons instance.
func (o GetTopicsTopicOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTopicsTopic) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The name of the topic.
func (o GetTopicsTopicOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Topic }).(pulumi.StringOutput)
}

// The name of the topic.
func (o GetTopicsTopicOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.TopicName }).(pulumi.StringOutput)
}

type GetTopicsTopicArrayOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) Index(i pulumi.IntInput) GetTopicsTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicsTopic {
		return vs[0].([]GetTopicsTopic)[vs[1].(int)]
	}).(GetTopicsTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConsumerGroupConsumeRetryPolicyInput)(nil)).Elem(), ConsumerGroupConsumeRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConsumerGroupConsumeRetryPolicyPtrInput)(nil)).Elem(), ConsumerGroupConsumeRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoInput)(nil)).Elem(), RocketMQInstanceNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoPtrInput)(nil)).Elem(), RocketMQInstanceNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoEndpointInput)(nil)).Elem(), RocketMQInstanceNetworkInfoEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoEndpointArrayInput)(nil)).Elem(), RocketMQInstanceNetworkInfoEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoInternetInfoInput)(nil)).Elem(), RocketMQInstanceNetworkInfoInternetInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoInternetInfoPtrInput)(nil)).Elem(), RocketMQInstanceNetworkInfoInternetInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoInput)(nil)).Elem(), RocketMQInstanceNetworkInfoVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoPtrInput)(nil)).Elem(), RocketMQInstanceNetworkInfoVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoVswitchInput)(nil)).Elem(), RocketMQInstanceNetworkInfoVpcInfoVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceNetworkInfoVpcInfoVswitchArrayInput)(nil)).Elem(), RocketMQInstanceNetworkInfoVpcInfoVswitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceProductInfoInput)(nil)).Elem(), RocketMQInstanceProductInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceProductInfoPtrInput)(nil)).Elem(), RocketMQInstanceProductInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceSoftwareInput)(nil)).Elem(), RocketMQInstanceSoftwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQInstanceSoftwarePtrInput)(nil)).Elem(), RocketMQInstanceSoftwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicInput)(nil)).Elem(), GetTopicsTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicArrayInput)(nil)).Elem(), GetTopicsTopicArray{})
	pulumi.RegisterOutputType(ConsumerGroupConsumeRetryPolicyOutput{})
	pulumi.RegisterOutputType(ConsumerGroupConsumeRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoPtrOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoEndpointOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoEndpointArrayOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoInternetInfoOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoInternetInfoPtrOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoVpcInfoOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoVpcInfoPtrOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoVpcInfoVswitchOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceNetworkInfoVpcInfoVswitchArrayOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceProductInfoOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceProductInfoPtrOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceSoftwareOutput{})
	pulumi.RegisterOutputType(RocketMQInstanceSoftwarePtrOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetTopicsTopicOutput{})
	pulumi.RegisterOutputType(GetTopicsTopicArrayOutput{})
}
