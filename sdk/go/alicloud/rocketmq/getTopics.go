// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
//
// > **NOTE:** Available in 1.53.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/rocketmq"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "onsInstanceName"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		topic := "onsTopicDatasourceName"
// 		if param := cfg.Get("topic"); param != "" {
// 			topic = param
// 		}
// 		defaultInstance, err := rocketmq.NewInstance(ctx, "defaultInstance", &rocketmq.InstanceArgs{
// 			InstanceName: pulumi.String(name),
// 			Remark:       pulumi.String("default_ons_instance_remark"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultTopic, err := rocketmq.NewTopic(ctx, "defaultTopic", &rocketmq.TopicArgs{
// 			TopicName:   pulumi.String(topic),
// 			InstanceId:  defaultInstance.ID(),
// 			MessageType: pulumi.Int(0),
// 			Remark:      pulumi.String("dafault_ons_topic_remark"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstTopicName", topicsDs.ApplyT(func(topicsDs rocketmq.GetTopicsResult) (string, error) {
// 			return topicsDs.Topics[0].TopicName, nil
// 		}).(pulumi.StringOutput))
// 		return nil
// 	})
// }
// ```
func GetTopics(ctx *pulumi.Context, args *GetTopicsArgs, opts ...pulumi.InvokeOption) (*GetTopicsResult, error) {
	var rv GetTopicsResult
	err := ctx.Invoke("alicloud:rocketmq/getTopics:getTopics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopics.
type GetTopicsArgs struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of topic IDs to filter results.
	Ids []string `pulumi:"ids"`
	// ID of the ONS Instance that owns the topics.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by the topic name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// A map of tags assigned to the Ons instance.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getTopics.
type GetTopicsResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	InstanceId string   `pulumi:"instanceId"`
	NameRegex  *string  `pulumi:"nameRegex"`
	// A list of topic names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A map of tags assigned to the Ons instance.
	Tags map[string]interface{} `pulumi:"tags"`
	// A list of topics. Each element contains the following attributes:
	Topics []GetTopicsTopic `pulumi:"topics"`
}
