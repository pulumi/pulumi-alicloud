// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides a list of available addons that the cluster can install.
//
// > **NOTE:** Available since v1.150.0.
// **NOTE:** From version v1.166.0, support for returning custom configuration of kubernetes cluster addon.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.4.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				CidrBlock:   pulumi.String("10.4.0.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			invokeCidrsubnet, err := std.Cidrsubnet(ctx, &std.CidrsubnetArgs{
//				Input:   "10.0.0.0/8",
//				Newbits: 8,
//				Netnum:  36,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeCidrsubnet1, err := std.Cidrsubnet(ctx, &std.CidrsubnetArgs{
//				Input:   "172.16.0.0/16",
//				Newbits: 4,
//				Netnum:  7,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultManagedKubernetes, err := cs.NewManagedKubernetes(ctx, "default", &cs.ManagedKubernetesArgs{
//				NamePrefix:  pulumi.String(name),
//				ClusterSpec: pulumi.String("ack.pro.small"),
//				WorkerVswitchIds: pulumi.StringArray{
//					defaultSwitch.ID(),
//				},
//				NewNatGateway:      pulumi.Bool(false),
//				PodCidr:            pulumi.String(invokeCidrsubnet.Result),
//				ServiceCidr:        pulumi.String(invokeCidrsubnet1.Result),
//				SlbInternetEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGetKubernetesAddons := cs.GetKubernetesAddonsOutput(ctx, cs.GetKubernetesAddonsOutputArgs{
//				ClusterId: defaultManagedKubernetes.ID(),
//			}, nil)
//			ctx.Export("addons", defaultGetKubernetesAddons.ApplyT(func(defaultGetKubernetesAddons cs.GetKubernetesAddonsResult) ([]cs.GetKubernetesAddonsAddon, error) {
//				return []cs.GetKubernetesAddonsAddon(defaultGetKubernetesAddons.Addons), nil
//			}).([]cs.GetKubernetesAddonsAddonOutput))
//			return nil
//		})
//	}
//
// ```
func GetKubernetesAddons(ctx *pulumi.Context, args *GetKubernetesAddonsArgs, opts ...pulumi.InvokeOption) (*GetKubernetesAddonsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKubernetesAddonsResult
	err := ctx.Invoke("alicloud:cs/getKubernetesAddons:getKubernetesAddons", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesAddons.
type GetKubernetesAddonsArgs struct {
	// The id of kubernetes cluster.
	ClusterId string `pulumi:"clusterId"`
	// A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure <cluster_ud>:<addon_name>.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by addon name.
	NameRegex *string `pulumi:"nameRegex"`
}

// A collection of values returned by getKubernetesAddons.
type GetKubernetesAddonsResult struct {
	// A list of addons.
	Addons []GetKubernetesAddonsAddon `pulumi:"addons"`
	// The id of kubernetes cluster.
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of addon names.
	Names []string `pulumi:"names"`
}

func GetKubernetesAddonsOutput(ctx *pulumi.Context, args GetKubernetesAddonsOutputArgs, opts ...pulumi.InvokeOption) GetKubernetesAddonsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKubernetesAddonsResultOutput, error) {
			args := v.(GetKubernetesAddonsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:cs/getKubernetesAddons:getKubernetesAddons", args, GetKubernetesAddonsResultOutput{}, options).(GetKubernetesAddonsResultOutput), nil
		}).(GetKubernetesAddonsResultOutput)
}

// A collection of arguments for invoking getKubernetesAddons.
type GetKubernetesAddonsOutputArgs struct {
	// The id of kubernetes cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure <cluster_ud>:<addon_name>.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by addon name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
}

func (GetKubernetesAddonsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesAddonsArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesAddons.
type GetKubernetesAddonsResultOutput struct{ *pulumi.OutputState }

func (GetKubernetesAddonsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesAddonsResult)(nil)).Elem()
}

func (o GetKubernetesAddonsResultOutput) ToGetKubernetesAddonsResultOutput() GetKubernetesAddonsResultOutput {
	return o
}

func (o GetKubernetesAddonsResultOutput) ToGetKubernetesAddonsResultOutputWithContext(ctx context.Context) GetKubernetesAddonsResultOutput {
	return o
}

// A list of addons.
func (o GetKubernetesAddonsResultOutput) Addons() GetKubernetesAddonsAddonArrayOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) []GetKubernetesAddonsAddon { return v.Addons }).(GetKubernetesAddonsAddonArrayOutput)
}

// The id of kubernetes cluster.
func (o GetKubernetesAddonsResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKubernetesAddonsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKubernetesAddonsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesAddonsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of addon names.
func (o GetKubernetesAddonsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesAddonsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKubernetesAddonsResultOutput{})
}
