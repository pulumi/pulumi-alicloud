// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides metadata of kubernetes cluster addons.
//
// > **NOTE:** Available in 1.166.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.4.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				CidrBlock:   pulumi.String("10.4.0.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			invokeCidrsubnet, err := std.Cidrsubnet(ctx, &std.CidrsubnetArgs{
//				Input:   "10.0.0.0/8",
//				Newbits: 8,
//				Netnum:  36,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeCidrsubnet1, err := std.Cidrsubnet(ctx, &std.CidrsubnetArgs{
//				Input:   "172.16.0.0/16",
//				Newbits: 4,
//				Netnum:  7,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultManagedKubernetes, err := cs.NewManagedKubernetes(ctx, "default", &cs.ManagedKubernetesArgs{
//				NamePrefix:  pulumi.String(name),
//				ClusterSpec: pulumi.String("ack.pro.small"),
//				WorkerVswitchIds: pulumi.StringArray{
//					defaultSwitch.ID(),
//				},
//				NewNatGateway:      pulumi.Bool(false),
//				PodCidr:            pulumi.String(invokeCidrsubnet.Result),
//				ServiceCidr:        pulumi.String(invokeCidrsubnet1.Result),
//				SlbInternetEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			clusterId := defaultManagedKubernetes.ID()
//			defaultGetKubernetesAddonMetadata := cs.GetKubernetesAddonMetadataOutput(ctx, cs.GetKubernetesAddonMetadataOutputArgs{
//				ClusterId: pulumi.String(clusterId),
//				Name:      pulumi.String("nginx-ingress-controller"),
//				Version:   pulumi.String("v1.1.2-aliyun.2"),
//			}, nil)
//			ctx.Export("addonConfigSchema", defaultGetKubernetesAddonMetadata.ApplyT(func(defaultGetKubernetesAddonMetadata cs.GetKubernetesAddonMetadataResult) (*string, error) {
//				return &defaultGetKubernetesAddonMetadata.ConfigSchema, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetKubernetesAddonMetadata(ctx *pulumi.Context, args *GetKubernetesAddonMetadataArgs, opts ...pulumi.InvokeOption) (*GetKubernetesAddonMetadataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKubernetesAddonMetadataResult
	err := ctx.Invoke("alicloud:cs/getKubernetesAddonMetadata:getKubernetesAddonMetadata", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesAddonMetadata.
type GetKubernetesAddonMetadataArgs struct {
	// The id of kubernetes cluster.
	ClusterId string `pulumi:"clusterId"`
	// The name of the cluster addon. You can get a list of available addons that the cluster can install by using data source `cs.getKubernetesAddons`.
	Name string `pulumi:"name"`
	// The version of the cluster addon.
	Version string `pulumi:"version"`
}

// A collection of values returned by getKubernetesAddonMetadata.
type GetKubernetesAddonMetadataResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The addon configuration that can be customized. The returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet.
	ConfigSchema string `pulumi:"configSchema"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	Version string `pulumi:"version"`
}

func GetKubernetesAddonMetadataOutput(ctx *pulumi.Context, args GetKubernetesAddonMetadataOutputArgs, opts ...pulumi.InvokeOption) GetKubernetesAddonMetadataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKubernetesAddonMetadataResultOutput, error) {
			args := v.(GetKubernetesAddonMetadataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:cs/getKubernetesAddonMetadata:getKubernetesAddonMetadata", args, GetKubernetesAddonMetadataResultOutput{}, options).(GetKubernetesAddonMetadataResultOutput), nil
		}).(GetKubernetesAddonMetadataResultOutput)
}

// A collection of arguments for invoking getKubernetesAddonMetadata.
type GetKubernetesAddonMetadataOutputArgs struct {
	// The id of kubernetes cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the cluster addon. You can get a list of available addons that the cluster can install by using data source `cs.getKubernetesAddons`.
	Name pulumi.StringInput `pulumi:"name"`
	// The version of the cluster addon.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetKubernetesAddonMetadataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesAddonMetadataArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesAddonMetadata.
type GetKubernetesAddonMetadataResultOutput struct{ *pulumi.OutputState }

func (GetKubernetesAddonMetadataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesAddonMetadataResult)(nil)).Elem()
}

func (o GetKubernetesAddonMetadataResultOutput) ToGetKubernetesAddonMetadataResultOutput() GetKubernetesAddonMetadataResultOutput {
	return o
}

func (o GetKubernetesAddonMetadataResultOutput) ToGetKubernetesAddonMetadataResultOutputWithContext(ctx context.Context) GetKubernetesAddonMetadataResultOutput {
	return o
}

func (o GetKubernetesAddonMetadataResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonMetadataResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The addon configuration that can be customized. The returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet.
func (o GetKubernetesAddonMetadataResultOutput) ConfigSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonMetadataResult) string { return v.ConfigSchema }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKubernetesAddonMetadataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonMetadataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKubernetesAddonMetadataResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonMetadataResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKubernetesAddonMetadataResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesAddonMetadataResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKubernetesAddonMetadataResultOutput{})
}
