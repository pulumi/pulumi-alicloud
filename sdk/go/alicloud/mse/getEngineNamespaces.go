// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Mse Engine Namespaces of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.166.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/mse"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetwork, err := vpc.NewNetwork(ctx, "example", &vpc.NetworkArgs{
//				VpcName:   pulumi.String("terraform-example"),
//				CidrBlock: pulumi.String("172.17.3.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSwitch, err := vpc.NewSwitch(ctx, "example", &vpc.SwitchArgs{
//				VswitchName: pulumi.String("terraform-example"),
//				CidrBlock:   pulumi.String("172.17.3.0/24"),
//				VpcId:       exampleNetwork.ID(),
//				ZoneId:      pulumi.String(example.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			exampleCluster, err := mse.NewCluster(ctx, "example", &mse.ClusterArgs{
//				ClusterSpecification: pulumi.String("MSE_SC_1_2_60_c"),
//				ClusterType:          pulumi.String("Nacos-Ans"),
//				ClusterVersion:       pulumi.String("NACOS_2_0_0"),
//				InstanceCount:        pulumi.Int(3),
//				NetType:              pulumi.String("privatenet"),
//				PubNetworkFlow:       pulumi.String("1"),
//				ConnectionType:       pulumi.String("slb"),
//				ClusterAliasName:     pulumi.String("terraform-example"),
//				MseVersion:           pulumi.String("mse_pro"),
//				VswitchId:            exampleSwitch.ID(),
//				VpcId:                exampleNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEngineNamespace, err := mse.NewEngineNamespace(ctx, "example", &mse.EngineNamespaceArgs{
//				InstanceId:        exampleCluster.ID(),
//				NamespaceShowName: pulumi.String("terraform-example"),
//				NamespaceId:       pulumi.String("terraform-example"),
//				NamespaceDesc:     pulumi.String("description"),
//			})
//			if err != nil {
//				return err
//			}
//			// Declare the data source
//			exampleGetEngineNamespaces := mse.GetEngineNamespacesOutput(ctx, mse.GetEngineNamespacesOutputArgs{
//				InstanceId: exampleEngineNamespace.InstanceId,
//			}, nil)
//			ctx.Export("mseEngineNamespaceIdPublic", exampleGetEngineNamespaces.ApplyT(func(exampleGetEngineNamespaces mse.GetEngineNamespacesResult) (*string, error) {
//				return &exampleGetEngineNamespaces.Namespaces[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			ctx.Export("mseEngineNamespaceIdExample", exampleGetEngineNamespaces.ApplyT(func(exampleGetEngineNamespaces mse.GetEngineNamespacesResult) (*string, error) {
//				return &exampleGetEngineNamespaces.Namespaces[1].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetEngineNamespaces(ctx *pulumi.Context, args *GetEngineNamespacesArgs, opts ...pulumi.InvokeOption) (*GetEngineNamespacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEngineNamespacesResult
	err := ctx.Invoke("alicloud:mse/getEngineNamespaces:getEngineNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEngineNamespaces.
type GetEngineNamespacesArgs struct {
	// The language type of the returned information. Valid values: `zh`, `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// The ID of the cluster.
	ClusterId *string `pulumi:"clusterId"`
	// A list of Engine Namespace IDs. It is formatted to `<instance_id>:<namespace_id>`.
	Ids []string `pulumi:"ids"`
	// The ID of the MSE Cluster Instance.It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0
	InstanceId *string `pulumi:"instanceId"`
	// File name where to save data source results (after running `pulumi preview`).
	//
	// **NOTE:** You must set `clusterId` or `instanceId` or both.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getEngineNamespaces.
type GetEngineNamespacesResult struct {
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	ClusterId      *string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	InstanceId *string  `pulumi:"instanceId"`
	// A list of Mse Engine Namespaces. Each element contains the following attributes:
	Namespaces []GetEngineNamespacesNamespace `pulumi:"namespaces"`
	OutputFile *string                        `pulumi:"outputFile"`
}

func GetEngineNamespacesOutput(ctx *pulumi.Context, args GetEngineNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetEngineNamespacesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEngineNamespacesResultOutput, error) {
			args := v.(GetEngineNamespacesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:mse/getEngineNamespaces:getEngineNamespaces", args, GetEngineNamespacesResultOutput{}, options).(GetEngineNamespacesResultOutput), nil
		}).(GetEngineNamespacesResultOutput)
}

// A collection of arguments for invoking getEngineNamespaces.
type GetEngineNamespacesOutputArgs struct {
	// The language type of the returned information. Valid values: `zh`, `en`.
	AcceptLanguage pulumi.StringPtrInput `pulumi:"acceptLanguage"`
	// The ID of the cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// A list of Engine Namespace IDs. It is formatted to `<instance_id>:<namespace_id>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID of the MSE Cluster Instance.It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// File name where to save data source results (after running `pulumi preview`).
	//
	// **NOTE:** You must set `clusterId` or `instanceId` or both.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetEngineNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getEngineNamespaces.
type GetEngineNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetEngineNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineNamespacesResult)(nil)).Elem()
}

func (o GetEngineNamespacesResultOutput) ToGetEngineNamespacesResultOutput() GetEngineNamespacesResultOutput {
	return o
}

func (o GetEngineNamespacesResultOutput) ToGetEngineNamespacesResultOutputWithContext(ctx context.Context) GetEngineNamespacesResultOutput {
	return o
}

func (o GetEngineNamespacesResultOutput) AcceptLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) *string { return v.AcceptLanguage }).(pulumi.StringPtrOutput)
}

func (o GetEngineNamespacesResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEngineNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEngineNamespacesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEngineNamespacesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// A list of Mse Engine Namespaces. Each element contains the following attributes:
func (o GetEngineNamespacesResultOutput) Namespaces() GetEngineNamespacesNamespaceArrayOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) []GetEngineNamespacesNamespace { return v.Namespaces }).(GetEngineNamespacesNamespaceArrayOutput)
}

func (o GetEngineNamespacesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineNamespacesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEngineNamespacesResultOutput{})
}
