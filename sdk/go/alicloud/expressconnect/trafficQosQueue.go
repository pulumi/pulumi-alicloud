// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package expressconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Express Connect Traffic Qos Queue resource. Express Connect Traffic QoS Queue.
//
// For information about Express Connect Traffic Qos Queue and how to use it, see [What is Traffic Qos Queue](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosQueue).
//
// > **NOTE:** Available since v1.224.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/expressconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := expressconnect.GetPhysicalConnections(ctx, &expressconnect.GetPhysicalConnectionsArgs{
//				NameRegex: pulumi.StringRef("preserved-NODELETING"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			createQos, err := expressconnect.NewTrafficQos(ctx, "createQos", &expressconnect.TrafficQosArgs{
//				QosName:        pulumi.String(name),
//				QosDescription: pulumi.String("terraform-example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = expressconnect.NewTrafficQosAssociation(ctx, "associateQos", &expressconnect.TrafficQosAssociationArgs{
//				InstanceId:   pulumi.String(_default.Ids[1]),
//				QosId:        createQos.ID(),
//				InstanceType: pulumi.String("PHYSICALCONNECTION"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = expressconnect.NewTrafficQosQueue(ctx, "createQosQueue", &expressconnect.TrafficQosQueueArgs{
//				QosId:            createQos.ID(),
//				BandwidthPercent: pulumi.String("60"),
//				QueueDescription: pulumi.String("terraform-example"),
//				QueueName:        pulumi.String(name),
//				QueueType:        pulumi.String("Medium"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Express Connect Traffic Qos Queue can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:expressconnect/trafficQosQueue:TrafficQosQueue example <qos_id>:<queue_id>
// ```
type TrafficQosQueue struct {
	pulumi.CustomResourceState

	// QoS queue bandwidth percentage.
	//
	// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
	// - When the QoS queue type is **Default**, this field is "-".
	BandwidthPercent pulumi.StringOutput `pulumi:"bandwidthPercent"`
	// The QoS policy ID.
	QosId pulumi.StringOutput `pulumi:"qosId"`
	// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	QueueDescription pulumi.StringPtrOutput `pulumi:"queueDescription"`
	// The QoS queue ID.
	QueueId pulumi.StringOutput `pulumi:"queueId"`
	// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	QueueName pulumi.StringPtrOutput `pulumi:"queueName"`
	// QoS queue type, value:
	// - **High**: High priority queue.
	// - **Medium**: Normal priority queue.
	// - **Default**: the Default priority queue.
	// > **NOTE:**  Default priority queue cannot be created.
	QueueType pulumi.StringOutput `pulumi:"queueType"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewTrafficQosQueue registers a new resource with the given unique name, arguments, and options.
func NewTrafficQosQueue(ctx *pulumi.Context,
	name string, args *TrafficQosQueueArgs, opts ...pulumi.ResourceOption) (*TrafficQosQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QosId == nil {
		return nil, errors.New("invalid value for required argument 'QosId'")
	}
	if args.QueueType == nil {
		return nil, errors.New("invalid value for required argument 'QueueType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficQosQueue
	err := ctx.RegisterResource("alicloud:expressconnect/trafficQosQueue:TrafficQosQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficQosQueue gets an existing TrafficQosQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficQosQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficQosQueueState, opts ...pulumi.ResourceOption) (*TrafficQosQueue, error) {
	var resource TrafficQosQueue
	err := ctx.ReadResource("alicloud:expressconnect/trafficQosQueue:TrafficQosQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficQosQueue resources.
type trafficQosQueueState struct {
	// QoS queue bandwidth percentage.
	//
	// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
	// - When the QoS queue type is **Default**, this field is "-".
	BandwidthPercent *string `pulumi:"bandwidthPercent"`
	// The QoS policy ID.
	QosId *string `pulumi:"qosId"`
	// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	QueueDescription *string `pulumi:"queueDescription"`
	// The QoS queue ID.
	QueueId *string `pulumi:"queueId"`
	// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	QueueName *string `pulumi:"queueName"`
	// QoS queue type, value:
	// - **High**: High priority queue.
	// - **Medium**: Normal priority queue.
	// - **Default**: the Default priority queue.
	// > **NOTE:**  Default priority queue cannot be created.
	QueueType *string `pulumi:"queueType"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

type TrafficQosQueueState struct {
	// QoS queue bandwidth percentage.
	//
	// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
	// - When the QoS queue type is **Default**, this field is "-".
	BandwidthPercent pulumi.StringPtrInput
	// The QoS policy ID.
	QosId pulumi.StringPtrInput
	// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	QueueDescription pulumi.StringPtrInput
	// The QoS queue ID.
	QueueId pulumi.StringPtrInput
	// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	QueueName pulumi.StringPtrInput
	// QoS queue type, value:
	// - **High**: High priority queue.
	// - **Medium**: Normal priority queue.
	// - **Default**: the Default priority queue.
	// > **NOTE:**  Default priority queue cannot be created.
	QueueType pulumi.StringPtrInput
	// The status of the resource.
	Status pulumi.StringPtrInput
}

func (TrafficQosQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficQosQueueState)(nil)).Elem()
}

type trafficQosQueueArgs struct {
	// QoS queue bandwidth percentage.
	//
	// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
	// - When the QoS queue type is **Default**, this field is "-".
	BandwidthPercent *string `pulumi:"bandwidthPercent"`
	// The QoS policy ID.
	QosId string `pulumi:"qosId"`
	// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	QueueDescription *string `pulumi:"queueDescription"`
	// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	QueueName *string `pulumi:"queueName"`
	// QoS queue type, value:
	// - **High**: High priority queue.
	// - **Medium**: Normal priority queue.
	// - **Default**: the Default priority queue.
	// > **NOTE:**  Default priority queue cannot be created.
	QueueType string `pulumi:"queueType"`
}

// The set of arguments for constructing a TrafficQosQueue resource.
type TrafficQosQueueArgs struct {
	// QoS queue bandwidth percentage.
	//
	// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
	// - When the QoS queue type is **Default**, this field is "-".
	BandwidthPercent pulumi.StringPtrInput
	// The QoS policy ID.
	QosId pulumi.StringInput
	// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	QueueDescription pulumi.StringPtrInput
	// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	QueueName pulumi.StringPtrInput
	// QoS queue type, value:
	// - **High**: High priority queue.
	// - **Medium**: Normal priority queue.
	// - **Default**: the Default priority queue.
	// > **NOTE:**  Default priority queue cannot be created.
	QueueType pulumi.StringInput
}

func (TrafficQosQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficQosQueueArgs)(nil)).Elem()
}

type TrafficQosQueueInput interface {
	pulumi.Input

	ToTrafficQosQueueOutput() TrafficQosQueueOutput
	ToTrafficQosQueueOutputWithContext(ctx context.Context) TrafficQosQueueOutput
}

func (*TrafficQosQueue) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficQosQueue)(nil)).Elem()
}

func (i *TrafficQosQueue) ToTrafficQosQueueOutput() TrafficQosQueueOutput {
	return i.ToTrafficQosQueueOutputWithContext(context.Background())
}

func (i *TrafficQosQueue) ToTrafficQosQueueOutputWithContext(ctx context.Context) TrafficQosQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosQueueOutput)
}

// TrafficQosQueueArrayInput is an input type that accepts TrafficQosQueueArray and TrafficQosQueueArrayOutput values.
// You can construct a concrete instance of `TrafficQosQueueArrayInput` via:
//
//	TrafficQosQueueArray{ TrafficQosQueueArgs{...} }
type TrafficQosQueueArrayInput interface {
	pulumi.Input

	ToTrafficQosQueueArrayOutput() TrafficQosQueueArrayOutput
	ToTrafficQosQueueArrayOutputWithContext(context.Context) TrafficQosQueueArrayOutput
}

type TrafficQosQueueArray []TrafficQosQueueInput

func (TrafficQosQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficQosQueue)(nil)).Elem()
}

func (i TrafficQosQueueArray) ToTrafficQosQueueArrayOutput() TrafficQosQueueArrayOutput {
	return i.ToTrafficQosQueueArrayOutputWithContext(context.Background())
}

func (i TrafficQosQueueArray) ToTrafficQosQueueArrayOutputWithContext(ctx context.Context) TrafficQosQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosQueueArrayOutput)
}

// TrafficQosQueueMapInput is an input type that accepts TrafficQosQueueMap and TrafficQosQueueMapOutput values.
// You can construct a concrete instance of `TrafficQosQueueMapInput` via:
//
//	TrafficQosQueueMap{ "key": TrafficQosQueueArgs{...} }
type TrafficQosQueueMapInput interface {
	pulumi.Input

	ToTrafficQosQueueMapOutput() TrafficQosQueueMapOutput
	ToTrafficQosQueueMapOutputWithContext(context.Context) TrafficQosQueueMapOutput
}

type TrafficQosQueueMap map[string]TrafficQosQueueInput

func (TrafficQosQueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficQosQueue)(nil)).Elem()
}

func (i TrafficQosQueueMap) ToTrafficQosQueueMapOutput() TrafficQosQueueMapOutput {
	return i.ToTrafficQosQueueMapOutputWithContext(context.Background())
}

func (i TrafficQosQueueMap) ToTrafficQosQueueMapOutputWithContext(ctx context.Context) TrafficQosQueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosQueueMapOutput)
}

type TrafficQosQueueOutput struct{ *pulumi.OutputState }

func (TrafficQosQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficQosQueue)(nil)).Elem()
}

func (o TrafficQosQueueOutput) ToTrafficQosQueueOutput() TrafficQosQueueOutput {
	return o
}

func (o TrafficQosQueueOutput) ToTrafficQosQueueOutputWithContext(ctx context.Context) TrafficQosQueueOutput {
	return o
}

// QoS queue bandwidth percentage.
//
// - When the QoS queue type is **Medium**, this field must be entered. Valid values: 1 to 100.
// - When the QoS queue type is **Default**, this field is "-".
func (o TrafficQosQueueOutput) BandwidthPercent() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringOutput { return v.BandwidthPercent }).(pulumi.StringOutput)
}

// The QoS policy ID.
func (o TrafficQosQueueOutput) QosId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringOutput { return v.QosId }).(pulumi.StringOutput)
}

// The description of the QoS queue.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
func (o TrafficQosQueueOutput) QueueDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringPtrOutput { return v.QueueDescription }).(pulumi.StringPtrOutput)
}

// The QoS queue ID.
func (o TrafficQosQueueOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringOutput { return v.QueueId }).(pulumi.StringOutput)
}

// The name of the QoS queue.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
func (o TrafficQosQueueOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringPtrOutput { return v.QueueName }).(pulumi.StringPtrOutput)
}

// QoS queue type, value:
// - **High**: High priority queue.
// - **Medium**: Normal priority queue.
// - **Default**: the Default priority queue.
// > **NOTE:**  Default priority queue cannot be created.
func (o TrafficQosQueueOutput) QueueType() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringOutput { return v.QueueType }).(pulumi.StringOutput)
}

// The status of the resource.
func (o TrafficQosQueueOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosQueue) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type TrafficQosQueueArrayOutput struct{ *pulumi.OutputState }

func (TrafficQosQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficQosQueue)(nil)).Elem()
}

func (o TrafficQosQueueArrayOutput) ToTrafficQosQueueArrayOutput() TrafficQosQueueArrayOutput {
	return o
}

func (o TrafficQosQueueArrayOutput) ToTrafficQosQueueArrayOutputWithContext(ctx context.Context) TrafficQosQueueArrayOutput {
	return o
}

func (o TrafficQosQueueArrayOutput) Index(i pulumi.IntInput) TrafficQosQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficQosQueue {
		return vs[0].([]*TrafficQosQueue)[vs[1].(int)]
	}).(TrafficQosQueueOutput)
}

type TrafficQosQueueMapOutput struct{ *pulumi.OutputState }

func (TrafficQosQueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficQosQueue)(nil)).Elem()
}

func (o TrafficQosQueueMapOutput) ToTrafficQosQueueMapOutput() TrafficQosQueueMapOutput {
	return o
}

func (o TrafficQosQueueMapOutput) ToTrafficQosQueueMapOutputWithContext(ctx context.Context) TrafficQosQueueMapOutput {
	return o
}

func (o TrafficQosQueueMapOutput) MapIndex(k pulumi.StringInput) TrafficQosQueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficQosQueue {
		return vs[0].(map[string]*TrafficQosQueue)[vs[1].(string)]
	}).(TrafficQosQueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosQueueInput)(nil)).Elem(), &TrafficQosQueue{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosQueueArrayInput)(nil)).Elem(), TrafficQosQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosQueueMapInput)(nil)).Elem(), TrafficQosQueueMap{})
	pulumi.RegisterOutputType(TrafficQosQueueOutput{})
	pulumi.RegisterOutputType(TrafficQosQueueArrayOutput{})
	pulumi.RegisterOutputType(TrafficQosQueueMapOutput{})
}
