// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package expressconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Express Connect Router Grant Association resource.
//
// Network instances authorized to the leased line Gateway.
//
// For information about Express Connect Router Grant Association and how to use it, see [What is Grant Association](https://www.alibabacloud.com/help/en/express-connect/developer-reference/api-expressconnectrouter-2023-09-01-grantinstancetoexpressconnectrouter).
//
// > **NOTE:** Available since v1.239.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/expressconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			vpcId := "vpc-xxx"
//			if param := cfg.Get("vpcId"); param != "" {
//				vpcId = param
//			}
//			ecrOwnerUid := "18xxx"
//			if param := cfg.Get("ecrOwnerUid"); param != "" {
//				ecrOwnerUid = param
//			}
//			ecrId := "ecr-xxx"
//			if param := cfg.Get("ecrId"); param != "" {
//				ecrId = param
//			}
//			region := "cn-hangzhou"
//			if param := cfg.Get("region"); param != "" {
//				region = param
//			}
//			_, err := expressconnect.NewRouterGrantAssociation(ctx, "default", &expressconnect.RouterGrantAssociationArgs{
//				EcrId:            pulumi.String(ecrId),
//				InstanceRegionId: pulumi.String(region),
//				InstanceId:       pulumi.String(vpcId),
//				EcrOwnerAliUid:   pulumi.String(ecrOwnerUid),
//				InstanceType:     pulumi.String("VPC"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Express Connect Router Grant Association can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:expressconnect/routerGrantAssociation:RouterGrantAssociation example <ecr_id>:<instance_id>:<instance_region_id>:<ecr_owner_ali_uid>:<instance_type>
// ```
type RouterGrantAssociation struct {
	pulumi.CustomResourceState

	// The ID of the associated Leased Line Gateway instance.
	EcrId pulumi.StringOutput `pulumi:"ecrId"`
	// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
	EcrOwnerAliUid pulumi.IntOutput `pulumi:"ecrOwnerAliUid"`
	// The ID of the network instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the region where the authorized network instance is located.
	InstanceRegionId pulumi.StringOutput `pulumi:"instanceRegionId"`
	// The type of the network instance. Value:
	// - `VBR`: the VBR instance.
	// - `VPC`: VPC instance.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewRouterGrantAssociation registers a new resource with the given unique name, arguments, and options.
func NewRouterGrantAssociation(ctx *pulumi.Context,
	name string, args *RouterGrantAssociationArgs, opts ...pulumi.ResourceOption) (*RouterGrantAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EcrId == nil {
		return nil, errors.New("invalid value for required argument 'EcrId'")
	}
	if args.EcrOwnerAliUid == nil {
		return nil, errors.New("invalid value for required argument 'EcrOwnerAliUid'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.InstanceRegionId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceRegionId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterGrantAssociation
	err := ctx.RegisterResource("alicloud:expressconnect/routerGrantAssociation:RouterGrantAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterGrantAssociation gets an existing RouterGrantAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterGrantAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterGrantAssociationState, opts ...pulumi.ResourceOption) (*RouterGrantAssociation, error) {
	var resource RouterGrantAssociation
	err := ctx.ReadResource("alicloud:expressconnect/routerGrantAssociation:RouterGrantAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterGrantAssociation resources.
type routerGrantAssociationState struct {
	// The ID of the associated Leased Line Gateway instance.
	EcrId *string `pulumi:"ecrId"`
	// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
	EcrOwnerAliUid *int `pulumi:"ecrOwnerAliUid"`
	// The ID of the network instance.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the region where the authorized network instance is located.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The type of the network instance. Value:
	// - `VBR`: the VBR instance.
	// - `VPC`: VPC instance.
	InstanceType *string `pulumi:"instanceType"`
	// The status of the resource
	Status *string `pulumi:"status"`
}

type RouterGrantAssociationState struct {
	// The ID of the associated Leased Line Gateway instance.
	EcrId pulumi.StringPtrInput
	// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
	EcrOwnerAliUid pulumi.IntPtrInput
	// The ID of the network instance.
	InstanceId pulumi.StringPtrInput
	// The ID of the region where the authorized network instance is located.
	InstanceRegionId pulumi.StringPtrInput
	// The type of the network instance. Value:
	// - `VBR`: the VBR instance.
	// - `VPC`: VPC instance.
	InstanceType pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
}

func (RouterGrantAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerGrantAssociationState)(nil)).Elem()
}

type routerGrantAssociationArgs struct {
	// The ID of the associated Leased Line Gateway instance.
	EcrId string `pulumi:"ecrId"`
	// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
	EcrOwnerAliUid int `pulumi:"ecrOwnerAliUid"`
	// The ID of the network instance.
	InstanceId string `pulumi:"instanceId"`
	// The ID of the region where the authorized network instance is located.
	InstanceRegionId string `pulumi:"instanceRegionId"`
	// The type of the network instance. Value:
	// - `VBR`: the VBR instance.
	// - `VPC`: VPC instance.
	InstanceType string `pulumi:"instanceType"`
}

// The set of arguments for constructing a RouterGrantAssociation resource.
type RouterGrantAssociationArgs struct {
	// The ID of the associated Leased Line Gateway instance.
	EcrId pulumi.StringInput
	// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
	EcrOwnerAliUid pulumi.IntInput
	// The ID of the network instance.
	InstanceId pulumi.StringInput
	// The ID of the region where the authorized network instance is located.
	InstanceRegionId pulumi.StringInput
	// The type of the network instance. Value:
	// - `VBR`: the VBR instance.
	// - `VPC`: VPC instance.
	InstanceType pulumi.StringInput
}

func (RouterGrantAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerGrantAssociationArgs)(nil)).Elem()
}

type RouterGrantAssociationInput interface {
	pulumi.Input

	ToRouterGrantAssociationOutput() RouterGrantAssociationOutput
	ToRouterGrantAssociationOutputWithContext(ctx context.Context) RouterGrantAssociationOutput
}

func (*RouterGrantAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterGrantAssociation)(nil)).Elem()
}

func (i *RouterGrantAssociation) ToRouterGrantAssociationOutput() RouterGrantAssociationOutput {
	return i.ToRouterGrantAssociationOutputWithContext(context.Background())
}

func (i *RouterGrantAssociation) ToRouterGrantAssociationOutputWithContext(ctx context.Context) RouterGrantAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterGrantAssociationOutput)
}

// RouterGrantAssociationArrayInput is an input type that accepts RouterGrantAssociationArray and RouterGrantAssociationArrayOutput values.
// You can construct a concrete instance of `RouterGrantAssociationArrayInput` via:
//
//	RouterGrantAssociationArray{ RouterGrantAssociationArgs{...} }
type RouterGrantAssociationArrayInput interface {
	pulumi.Input

	ToRouterGrantAssociationArrayOutput() RouterGrantAssociationArrayOutput
	ToRouterGrantAssociationArrayOutputWithContext(context.Context) RouterGrantAssociationArrayOutput
}

type RouterGrantAssociationArray []RouterGrantAssociationInput

func (RouterGrantAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterGrantAssociation)(nil)).Elem()
}

func (i RouterGrantAssociationArray) ToRouterGrantAssociationArrayOutput() RouterGrantAssociationArrayOutput {
	return i.ToRouterGrantAssociationArrayOutputWithContext(context.Background())
}

func (i RouterGrantAssociationArray) ToRouterGrantAssociationArrayOutputWithContext(ctx context.Context) RouterGrantAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterGrantAssociationArrayOutput)
}

// RouterGrantAssociationMapInput is an input type that accepts RouterGrantAssociationMap and RouterGrantAssociationMapOutput values.
// You can construct a concrete instance of `RouterGrantAssociationMapInput` via:
//
//	RouterGrantAssociationMap{ "key": RouterGrantAssociationArgs{...} }
type RouterGrantAssociationMapInput interface {
	pulumi.Input

	ToRouterGrantAssociationMapOutput() RouterGrantAssociationMapOutput
	ToRouterGrantAssociationMapOutputWithContext(context.Context) RouterGrantAssociationMapOutput
}

type RouterGrantAssociationMap map[string]RouterGrantAssociationInput

func (RouterGrantAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterGrantAssociation)(nil)).Elem()
}

func (i RouterGrantAssociationMap) ToRouterGrantAssociationMapOutput() RouterGrantAssociationMapOutput {
	return i.ToRouterGrantAssociationMapOutputWithContext(context.Background())
}

func (i RouterGrantAssociationMap) ToRouterGrantAssociationMapOutputWithContext(ctx context.Context) RouterGrantAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterGrantAssociationMapOutput)
}

type RouterGrantAssociationOutput struct{ *pulumi.OutputState }

func (RouterGrantAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterGrantAssociation)(nil)).Elem()
}

func (o RouterGrantAssociationOutput) ToRouterGrantAssociationOutput() RouterGrantAssociationOutput {
	return o
}

func (o RouterGrantAssociationOutput) ToRouterGrantAssociationOutputWithContext(ctx context.Context) RouterGrantAssociationOutput {
	return o
}

// The ID of the associated Leased Line Gateway instance.
func (o RouterGrantAssociationOutput) EcrId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.StringOutput { return v.EcrId }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account (primary account) to which the leased line gateway instance is authorized.
func (o RouterGrantAssociationOutput) EcrOwnerAliUid() pulumi.IntOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.IntOutput { return v.EcrOwnerAliUid }).(pulumi.IntOutput)
}

// The ID of the network instance.
func (o RouterGrantAssociationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the region where the authorized network instance is located.
func (o RouterGrantAssociationOutput) InstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.StringOutput { return v.InstanceRegionId }).(pulumi.StringOutput)
}

// The type of the network instance. Value:
// - `VBR`: the VBR instance.
// - `VPC`: VPC instance.
func (o RouterGrantAssociationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The status of the resource
func (o RouterGrantAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterGrantAssociation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type RouterGrantAssociationArrayOutput struct{ *pulumi.OutputState }

func (RouterGrantAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterGrantAssociation)(nil)).Elem()
}

func (o RouterGrantAssociationArrayOutput) ToRouterGrantAssociationArrayOutput() RouterGrantAssociationArrayOutput {
	return o
}

func (o RouterGrantAssociationArrayOutput) ToRouterGrantAssociationArrayOutputWithContext(ctx context.Context) RouterGrantAssociationArrayOutput {
	return o
}

func (o RouterGrantAssociationArrayOutput) Index(i pulumi.IntInput) RouterGrantAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterGrantAssociation {
		return vs[0].([]*RouterGrantAssociation)[vs[1].(int)]
	}).(RouterGrantAssociationOutput)
}

type RouterGrantAssociationMapOutput struct{ *pulumi.OutputState }

func (RouterGrantAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterGrantAssociation)(nil)).Elem()
}

func (o RouterGrantAssociationMapOutput) ToRouterGrantAssociationMapOutput() RouterGrantAssociationMapOutput {
	return o
}

func (o RouterGrantAssociationMapOutput) ToRouterGrantAssociationMapOutputWithContext(ctx context.Context) RouterGrantAssociationMapOutput {
	return o
}

func (o RouterGrantAssociationMapOutput) MapIndex(k pulumi.StringInput) RouterGrantAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterGrantAssociation {
		return vs[0].(map[string]*RouterGrantAssociation)[vs[1].(string)]
	}).(RouterGrantAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterGrantAssociationInput)(nil)).Elem(), &RouterGrantAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterGrantAssociationArrayInput)(nil)).Elem(), RouterGrantAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterGrantAssociationMapInput)(nil)).Elem(), RouterGrantAssociationMap{})
	pulumi.RegisterOutputType(RouterGrantAssociationOutput{})
	pulumi.RegisterOutputType(RouterGrantAssociationArrayOutput{})
	pulumi.RegisterOutputType(RouterGrantAssociationMapOutput{})
}
