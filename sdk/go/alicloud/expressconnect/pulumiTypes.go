// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package expressconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetAccessPointsPoint struct {
	// Query to the Access Point Feature Model.
	AccessPointFeatureModels []GetAccessPointsPointAccessPointFeatureModel `pulumi:"accessPointFeatureModels"`
	// The Access Point ID.
	AccessPointId string `pulumi:"accessPointId"`
	// Access Point Name.
	AccessPointName string `pulumi:"accessPointName"`
	// The Access Point Is Located an ID.
	AttachedRegionNo string `pulumi:"attachedRegionNo"`
	// The Access Point Description.
	Description string `pulumi:"description"`
	// The Access Point Belongs to the Operator.
	HostOperator string `pulumi:"hostOperator"`
	// The ID of the Access Point.
	Id string `pulumi:"id"`
	// The Location of the Access Point.
	Location string `pulumi:"location"`
	// The Physical Connection to Which the Access Point State.
	Status string `pulumi:"status"`
	// The Physical Connection to Which the Network Type.
	Type string `pulumi:"type"`
}

// GetAccessPointsPointInput is an input type that accepts GetAccessPointsPointArgs and GetAccessPointsPointOutput values.
// You can construct a concrete instance of `GetAccessPointsPointInput` via:
//
//	GetAccessPointsPointArgs{...}
type GetAccessPointsPointInput interface {
	pulumi.Input

	ToGetAccessPointsPointOutput() GetAccessPointsPointOutput
	ToGetAccessPointsPointOutputWithContext(context.Context) GetAccessPointsPointOutput
}

type GetAccessPointsPointArgs struct {
	// Query to the Access Point Feature Model.
	AccessPointFeatureModels GetAccessPointsPointAccessPointFeatureModelArrayInput `pulumi:"accessPointFeatureModels"`
	// The Access Point ID.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// Access Point Name.
	AccessPointName pulumi.StringInput `pulumi:"accessPointName"`
	// The Access Point Is Located an ID.
	AttachedRegionNo pulumi.StringInput `pulumi:"attachedRegionNo"`
	// The Access Point Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The Access Point Belongs to the Operator.
	HostOperator pulumi.StringInput `pulumi:"hostOperator"`
	// The ID of the Access Point.
	Id pulumi.StringInput `pulumi:"id"`
	// The Location of the Access Point.
	Location pulumi.StringInput `pulumi:"location"`
	// The Physical Connection to Which the Access Point State.
	Status pulumi.StringInput `pulumi:"status"`
	// The Physical Connection to Which the Network Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAccessPointsPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointsPoint)(nil)).Elem()
}

func (i GetAccessPointsPointArgs) ToGetAccessPointsPointOutput() GetAccessPointsPointOutput {
	return i.ToGetAccessPointsPointOutputWithContext(context.Background())
}

func (i GetAccessPointsPointArgs) ToGetAccessPointsPointOutputWithContext(ctx context.Context) GetAccessPointsPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointsPointOutput)
}

// GetAccessPointsPointArrayInput is an input type that accepts GetAccessPointsPointArray and GetAccessPointsPointArrayOutput values.
// You can construct a concrete instance of `GetAccessPointsPointArrayInput` via:
//
//	GetAccessPointsPointArray{ GetAccessPointsPointArgs{...} }
type GetAccessPointsPointArrayInput interface {
	pulumi.Input

	ToGetAccessPointsPointArrayOutput() GetAccessPointsPointArrayOutput
	ToGetAccessPointsPointArrayOutputWithContext(context.Context) GetAccessPointsPointArrayOutput
}

type GetAccessPointsPointArray []GetAccessPointsPointInput

func (GetAccessPointsPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointsPoint)(nil)).Elem()
}

func (i GetAccessPointsPointArray) ToGetAccessPointsPointArrayOutput() GetAccessPointsPointArrayOutput {
	return i.ToGetAccessPointsPointArrayOutputWithContext(context.Background())
}

func (i GetAccessPointsPointArray) ToGetAccessPointsPointArrayOutputWithContext(ctx context.Context) GetAccessPointsPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointsPointArrayOutput)
}

type GetAccessPointsPointOutput struct{ *pulumi.OutputState }

func (GetAccessPointsPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointsPoint)(nil)).Elem()
}

func (o GetAccessPointsPointOutput) ToGetAccessPointsPointOutput() GetAccessPointsPointOutput {
	return o
}

func (o GetAccessPointsPointOutput) ToGetAccessPointsPointOutputWithContext(ctx context.Context) GetAccessPointsPointOutput {
	return o
}

// Query to the Access Point Feature Model.
func (o GetAccessPointsPointOutput) AccessPointFeatureModels() GetAccessPointsPointAccessPointFeatureModelArrayOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) []GetAccessPointsPointAccessPointFeatureModel {
		return v.AccessPointFeatureModels
	}).(GetAccessPointsPointAccessPointFeatureModelArrayOutput)
}

// The Access Point ID.
func (o GetAccessPointsPointOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// Access Point Name.
func (o GetAccessPointsPointOutput) AccessPointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.AccessPointName }).(pulumi.StringOutput)
}

// The Access Point Is Located an ID.
func (o GetAccessPointsPointOutput) AttachedRegionNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.AttachedRegionNo }).(pulumi.StringOutput)
}

// The Access Point Description.
func (o GetAccessPointsPointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.Description }).(pulumi.StringOutput)
}

// The Access Point Belongs to the Operator.
func (o GetAccessPointsPointOutput) HostOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.HostOperator }).(pulumi.StringOutput)
}

// The ID of the Access Point.
func (o GetAccessPointsPointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.Id }).(pulumi.StringOutput)
}

// The Location of the Access Point.
func (o GetAccessPointsPointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.Location }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Access Point State.
func (o GetAccessPointsPointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.Status }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Network Type.
func (o GetAccessPointsPointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetAccessPointsPointArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointsPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointsPoint)(nil)).Elem()
}

func (o GetAccessPointsPointArrayOutput) ToGetAccessPointsPointArrayOutput() GetAccessPointsPointArrayOutput {
	return o
}

func (o GetAccessPointsPointArrayOutput) ToGetAccessPointsPointArrayOutputWithContext(ctx context.Context) GetAccessPointsPointArrayOutput {
	return o
}

func (o GetAccessPointsPointArrayOutput) Index(i pulumi.IntInput) GetAccessPointsPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointsPoint {
		return vs[0].([]GetAccessPointsPoint)[vs[1].(int)]
	}).(GetAccessPointsPointOutput)
}

type GetAccessPointsPointAccessPointFeatureModel struct {
	// The Access Point Properties.
	FeatureKey string `pulumi:"featureKey"`
	// The Access Point Characteristic Value.
	FeatureValue string `pulumi:"featureValue"`
}

// GetAccessPointsPointAccessPointFeatureModelInput is an input type that accepts GetAccessPointsPointAccessPointFeatureModelArgs and GetAccessPointsPointAccessPointFeatureModelOutput values.
// You can construct a concrete instance of `GetAccessPointsPointAccessPointFeatureModelInput` via:
//
//	GetAccessPointsPointAccessPointFeatureModelArgs{...}
type GetAccessPointsPointAccessPointFeatureModelInput interface {
	pulumi.Input

	ToGetAccessPointsPointAccessPointFeatureModelOutput() GetAccessPointsPointAccessPointFeatureModelOutput
	ToGetAccessPointsPointAccessPointFeatureModelOutputWithContext(context.Context) GetAccessPointsPointAccessPointFeatureModelOutput
}

type GetAccessPointsPointAccessPointFeatureModelArgs struct {
	// The Access Point Properties.
	FeatureKey pulumi.StringInput `pulumi:"featureKey"`
	// The Access Point Characteristic Value.
	FeatureValue pulumi.StringInput `pulumi:"featureValue"`
}

func (GetAccessPointsPointAccessPointFeatureModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointsPointAccessPointFeatureModel)(nil)).Elem()
}

func (i GetAccessPointsPointAccessPointFeatureModelArgs) ToGetAccessPointsPointAccessPointFeatureModelOutput() GetAccessPointsPointAccessPointFeatureModelOutput {
	return i.ToGetAccessPointsPointAccessPointFeatureModelOutputWithContext(context.Background())
}

func (i GetAccessPointsPointAccessPointFeatureModelArgs) ToGetAccessPointsPointAccessPointFeatureModelOutputWithContext(ctx context.Context) GetAccessPointsPointAccessPointFeatureModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointsPointAccessPointFeatureModelOutput)
}

// GetAccessPointsPointAccessPointFeatureModelArrayInput is an input type that accepts GetAccessPointsPointAccessPointFeatureModelArray and GetAccessPointsPointAccessPointFeatureModelArrayOutput values.
// You can construct a concrete instance of `GetAccessPointsPointAccessPointFeatureModelArrayInput` via:
//
//	GetAccessPointsPointAccessPointFeatureModelArray{ GetAccessPointsPointAccessPointFeatureModelArgs{...} }
type GetAccessPointsPointAccessPointFeatureModelArrayInput interface {
	pulumi.Input

	ToGetAccessPointsPointAccessPointFeatureModelArrayOutput() GetAccessPointsPointAccessPointFeatureModelArrayOutput
	ToGetAccessPointsPointAccessPointFeatureModelArrayOutputWithContext(context.Context) GetAccessPointsPointAccessPointFeatureModelArrayOutput
}

type GetAccessPointsPointAccessPointFeatureModelArray []GetAccessPointsPointAccessPointFeatureModelInput

func (GetAccessPointsPointAccessPointFeatureModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointsPointAccessPointFeatureModel)(nil)).Elem()
}

func (i GetAccessPointsPointAccessPointFeatureModelArray) ToGetAccessPointsPointAccessPointFeatureModelArrayOutput() GetAccessPointsPointAccessPointFeatureModelArrayOutput {
	return i.ToGetAccessPointsPointAccessPointFeatureModelArrayOutputWithContext(context.Background())
}

func (i GetAccessPointsPointAccessPointFeatureModelArray) ToGetAccessPointsPointAccessPointFeatureModelArrayOutputWithContext(ctx context.Context) GetAccessPointsPointAccessPointFeatureModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointsPointAccessPointFeatureModelArrayOutput)
}

type GetAccessPointsPointAccessPointFeatureModelOutput struct{ *pulumi.OutputState }

func (GetAccessPointsPointAccessPointFeatureModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointsPointAccessPointFeatureModel)(nil)).Elem()
}

func (o GetAccessPointsPointAccessPointFeatureModelOutput) ToGetAccessPointsPointAccessPointFeatureModelOutput() GetAccessPointsPointAccessPointFeatureModelOutput {
	return o
}

func (o GetAccessPointsPointAccessPointFeatureModelOutput) ToGetAccessPointsPointAccessPointFeatureModelOutputWithContext(ctx context.Context) GetAccessPointsPointAccessPointFeatureModelOutput {
	return o
}

// The Access Point Properties.
func (o GetAccessPointsPointAccessPointFeatureModelOutput) FeatureKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPointAccessPointFeatureModel) string { return v.FeatureKey }).(pulumi.StringOutput)
}

// The Access Point Characteristic Value.
func (o GetAccessPointsPointAccessPointFeatureModelOutput) FeatureValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointsPointAccessPointFeatureModel) string { return v.FeatureValue }).(pulumi.StringOutput)
}

type GetAccessPointsPointAccessPointFeatureModelArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointsPointAccessPointFeatureModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointsPointAccessPointFeatureModel)(nil)).Elem()
}

func (o GetAccessPointsPointAccessPointFeatureModelArrayOutput) ToGetAccessPointsPointAccessPointFeatureModelArrayOutput() GetAccessPointsPointAccessPointFeatureModelArrayOutput {
	return o
}

func (o GetAccessPointsPointAccessPointFeatureModelArrayOutput) ToGetAccessPointsPointAccessPointFeatureModelArrayOutputWithContext(ctx context.Context) GetAccessPointsPointAccessPointFeatureModelArrayOutput {
	return o
}

func (o GetAccessPointsPointAccessPointFeatureModelArrayOutput) Index(i pulumi.IntInput) GetAccessPointsPointAccessPointFeatureModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointsPointAccessPointFeatureModel {
		return vs[0].([]GetAccessPointsPointAccessPointFeatureModel)[vs[1].(int)]
	}).(GetAccessPointsPointAccessPointFeatureModelOutput)
}

type GetGrantRuleToCensCen struct {
	// The ID of the authorized CEN instance.
	CenId string `pulumi:"cenId"`
	// The user ID (UID) of the Alibaba Cloud account to which the CEN instance belongs.
	CenOwnerId int `pulumi:"cenOwnerId"`
	// The time when the instance was created.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Grant Rule To Cen. It formats as `<cen_id>:<cen_owner_id>:<instance_id>`.
	Id string `pulumi:"id"`
}

// GetGrantRuleToCensCenInput is an input type that accepts GetGrantRuleToCensCenArgs and GetGrantRuleToCensCenOutput values.
// You can construct a concrete instance of `GetGrantRuleToCensCenInput` via:
//
//	GetGrantRuleToCensCenArgs{...}
type GetGrantRuleToCensCenInput interface {
	pulumi.Input

	ToGetGrantRuleToCensCenOutput() GetGrantRuleToCensCenOutput
	ToGetGrantRuleToCensCenOutputWithContext(context.Context) GetGrantRuleToCensCenOutput
}

type GetGrantRuleToCensCenArgs struct {
	// The ID of the authorized CEN instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The user ID (UID) of the Alibaba Cloud account to which the CEN instance belongs.
	CenOwnerId pulumi.IntInput `pulumi:"cenOwnerId"`
	// The time when the instance was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Grant Rule To Cen. It formats as `<cen_id>:<cen_owner_id>:<instance_id>`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetGrantRuleToCensCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrantRuleToCensCen)(nil)).Elem()
}

func (i GetGrantRuleToCensCenArgs) ToGetGrantRuleToCensCenOutput() GetGrantRuleToCensCenOutput {
	return i.ToGetGrantRuleToCensCenOutputWithContext(context.Background())
}

func (i GetGrantRuleToCensCenArgs) ToGetGrantRuleToCensCenOutputWithContext(ctx context.Context) GetGrantRuleToCensCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrantRuleToCensCenOutput)
}

// GetGrantRuleToCensCenArrayInput is an input type that accepts GetGrantRuleToCensCenArray and GetGrantRuleToCensCenArrayOutput values.
// You can construct a concrete instance of `GetGrantRuleToCensCenArrayInput` via:
//
//	GetGrantRuleToCensCenArray{ GetGrantRuleToCensCenArgs{...} }
type GetGrantRuleToCensCenArrayInput interface {
	pulumi.Input

	ToGetGrantRuleToCensCenArrayOutput() GetGrantRuleToCensCenArrayOutput
	ToGetGrantRuleToCensCenArrayOutputWithContext(context.Context) GetGrantRuleToCensCenArrayOutput
}

type GetGrantRuleToCensCenArray []GetGrantRuleToCensCenInput

func (GetGrantRuleToCensCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrantRuleToCensCen)(nil)).Elem()
}

func (i GetGrantRuleToCensCenArray) ToGetGrantRuleToCensCenArrayOutput() GetGrantRuleToCensCenArrayOutput {
	return i.ToGetGrantRuleToCensCenArrayOutputWithContext(context.Background())
}

func (i GetGrantRuleToCensCenArray) ToGetGrantRuleToCensCenArrayOutputWithContext(ctx context.Context) GetGrantRuleToCensCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGrantRuleToCensCenArrayOutput)
}

type GetGrantRuleToCensCenOutput struct{ *pulumi.OutputState }

func (GetGrantRuleToCensCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGrantRuleToCensCen)(nil)).Elem()
}

func (o GetGrantRuleToCensCenOutput) ToGetGrantRuleToCensCenOutput() GetGrantRuleToCensCenOutput {
	return o
}

func (o GetGrantRuleToCensCenOutput) ToGetGrantRuleToCensCenOutputWithContext(ctx context.Context) GetGrantRuleToCensCenOutput {
	return o
}

// The ID of the authorized CEN instance.
func (o GetGrantRuleToCensCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrantRuleToCensCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The user ID (UID) of the Alibaba Cloud account to which the CEN instance belongs.
func (o GetGrantRuleToCensCenOutput) CenOwnerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetGrantRuleToCensCen) int { return v.CenOwnerId }).(pulumi.IntOutput)
}

// The time when the instance was created.
func (o GetGrantRuleToCensCenOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrantRuleToCensCen) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Grant Rule To Cen. It formats as `<cen_id>:<cen_owner_id>:<instance_id>`.
func (o GetGrantRuleToCensCenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGrantRuleToCensCen) string { return v.Id }).(pulumi.StringOutput)
}

type GetGrantRuleToCensCenArrayOutput struct{ *pulumi.OutputState }

func (GetGrantRuleToCensCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGrantRuleToCensCen)(nil)).Elem()
}

func (o GetGrantRuleToCensCenArrayOutput) ToGetGrantRuleToCensCenArrayOutput() GetGrantRuleToCensCenArrayOutput {
	return o
}

func (o GetGrantRuleToCensCenArrayOutput) ToGetGrantRuleToCensCenArrayOutputWithContext(ctx context.Context) GetGrantRuleToCensCenArrayOutput {
	return o
}

func (o GetGrantRuleToCensCenArrayOutput) Index(i pulumi.IntInput) GetGrantRuleToCensCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGrantRuleToCensCen {
		return vs[0].([]GetGrantRuleToCensCen)[vs[1].(int)]
	}).(GetGrantRuleToCensCenOutput)
}

type GetPhysicalConnectionsConnection struct {
	// The Physical Leased Line Access Point ID.
	AccessPointId string `pulumi:"accessPointId"`
	// To Connect a Device Physical Location.
	AdLocation string `pulumi:"adLocation"`
	// On the Bandwidth of the ECC Service and Physical Connection.
	Bandwidth string `pulumi:"bandwidth"`
	// The Physical Connection to Which the Payment Status: Normal, financiallocked, securitylocked.
	BusinessStatus string `pulumi:"businessStatus"`
	// Operators for Physical Connection Circuit Provided Coding.
	CircuitCode string `pulumi:"circuitCode"`
	// The Representative of the Creation Time Resources Attribute Field.
	CreateTime string `pulumi:"createTime"`
	// The Physical Connection to Which the Description.
	Description string `pulumi:"description"`
	// The Physical Connection to Which the Activation Time.
	EnabledTime string `pulumi:"enabledTime"`
	// The Expiration Time.
	EndTime string `pulumi:"endTime"`
	// HasReservationData.
	HasReservationData string `pulumi:"hasReservationData"`
	// The ID of the Physical Connection.
	Id string `pulumi:"id"`
	// Provides Access to the Physical Line Operator Value CT: China Telecom, CU: China Unicom, CM: china Mobile, CO: Other Chinese, Equinix:Equinix, Other: Other Overseas.
	LineOperator string `pulumi:"lineOperator"`
	// Loa State.
	LoaStatus string `pulumi:"loaStatus"`
	// on Behalf of the Pay-as-You-Type of Resource Attribute Field.
	PaymentType string `pulumi:"paymentType"`
	// and an on-Premises Data Center Location.
	PeerLocation string `pulumi:"peerLocation"`
	// on Behalf of the Resource Level Id of the Resources Property Fields.
	PhysicalConnectionId string `pulumi:"physicalConnectionId"`
	// on Behalf of the Resource Name of the Resources-Attribute Field.
	PhysicalConnectionName string `pulumi:"physicalConnectionName"`
	// To Connect a Device Port: The Port Number of.
	PortNumber string `pulumi:"portNumber"`
	// The Physical Leased Line Access Port Type Value 100Base-T: Fast Electrical Ports, 1000Base-T (the Default): gigabit Electrical Ports, 1000Base-LX: Gigabit Singlemode Optical Ports (10Km), 10GBase-T: Gigabit Electrical Port, 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
	PortType string `pulumi:"portType"`
	// Redundant Physical Connection to Which the ID.
	RedundantPhysicalConnectionId string `pulumi:"redundantPhysicalConnectionId"`
	// The Renewal of the Entry into Force of the Time.
	ReservationActiveTime string `pulumi:"reservationActiveTime"`
	// Renewal Type.
	ReservationInternetChargeType string `pulumi:"reservationInternetChargeType"`
	// Renewal Order Type.
	ReservationOrderType string `pulumi:"reservationOrderType"`
	// The Physical Connection to Which the Specifications.
	Spec string `pulumi:"spec"`
	// Resources on Behalf of a State of the Resource Attribute Field.
	Status string `pulumi:"status"`
	// Physical Private Line of Type. Default Value: VPC.
	Type string `pulumi:"type"`
}

// GetPhysicalConnectionsConnectionInput is an input type that accepts GetPhysicalConnectionsConnectionArgs and GetPhysicalConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetPhysicalConnectionsConnectionInput` via:
//
//	GetPhysicalConnectionsConnectionArgs{...}
type GetPhysicalConnectionsConnectionInput interface {
	pulumi.Input

	ToGetPhysicalConnectionsConnectionOutput() GetPhysicalConnectionsConnectionOutput
	ToGetPhysicalConnectionsConnectionOutputWithContext(context.Context) GetPhysicalConnectionsConnectionOutput
}

type GetPhysicalConnectionsConnectionArgs struct {
	// The Physical Leased Line Access Point ID.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// To Connect a Device Physical Location.
	AdLocation pulumi.StringInput `pulumi:"adLocation"`
	// On the Bandwidth of the ECC Service and Physical Connection.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// The Physical Connection to Which the Payment Status: Normal, financiallocked, securitylocked.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// Operators for Physical Connection Circuit Provided Coding.
	CircuitCode pulumi.StringInput `pulumi:"circuitCode"`
	// The Representative of the Creation Time Resources Attribute Field.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The Physical Connection to Which the Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The Physical Connection to Which the Activation Time.
	EnabledTime pulumi.StringInput `pulumi:"enabledTime"`
	// The Expiration Time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// HasReservationData.
	HasReservationData pulumi.StringInput `pulumi:"hasReservationData"`
	// The ID of the Physical Connection.
	Id pulumi.StringInput `pulumi:"id"`
	// Provides Access to the Physical Line Operator Value CT: China Telecom, CU: China Unicom, CM: china Mobile, CO: Other Chinese, Equinix:Equinix, Other: Other Overseas.
	LineOperator pulumi.StringInput `pulumi:"lineOperator"`
	// Loa State.
	LoaStatus pulumi.StringInput `pulumi:"loaStatus"`
	// on Behalf of the Pay-as-You-Type of Resource Attribute Field.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// and an on-Premises Data Center Location.
	PeerLocation pulumi.StringInput `pulumi:"peerLocation"`
	// on Behalf of the Resource Level Id of the Resources Property Fields.
	PhysicalConnectionId pulumi.StringInput `pulumi:"physicalConnectionId"`
	// on Behalf of the Resource Name of the Resources-Attribute Field.
	PhysicalConnectionName pulumi.StringInput `pulumi:"physicalConnectionName"`
	// To Connect a Device Port: The Port Number of.
	PortNumber pulumi.StringInput `pulumi:"portNumber"`
	// The Physical Leased Line Access Port Type Value 100Base-T: Fast Electrical Ports, 1000Base-T (the Default): gigabit Electrical Ports, 1000Base-LX: Gigabit Singlemode Optical Ports (10Km), 10GBase-T: Gigabit Electrical Port, 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
	PortType pulumi.StringInput `pulumi:"portType"`
	// Redundant Physical Connection to Which the ID.
	RedundantPhysicalConnectionId pulumi.StringInput `pulumi:"redundantPhysicalConnectionId"`
	// The Renewal of the Entry into Force of the Time.
	ReservationActiveTime pulumi.StringInput `pulumi:"reservationActiveTime"`
	// Renewal Type.
	ReservationInternetChargeType pulumi.StringInput `pulumi:"reservationInternetChargeType"`
	// Renewal Order Type.
	ReservationOrderType pulumi.StringInput `pulumi:"reservationOrderType"`
	// The Physical Connection to Which the Specifications.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Resources on Behalf of a State of the Resource Attribute Field.
	Status pulumi.StringInput `pulumi:"status"`
	// Physical Private Line of Type. Default Value: VPC.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPhysicalConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPhysicalConnectionsConnection)(nil)).Elem()
}

func (i GetPhysicalConnectionsConnectionArgs) ToGetPhysicalConnectionsConnectionOutput() GetPhysicalConnectionsConnectionOutput {
	return i.ToGetPhysicalConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetPhysicalConnectionsConnectionArgs) ToGetPhysicalConnectionsConnectionOutputWithContext(ctx context.Context) GetPhysicalConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPhysicalConnectionsConnectionOutput)
}

// GetPhysicalConnectionsConnectionArrayInput is an input type that accepts GetPhysicalConnectionsConnectionArray and GetPhysicalConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetPhysicalConnectionsConnectionArrayInput` via:
//
//	GetPhysicalConnectionsConnectionArray{ GetPhysicalConnectionsConnectionArgs{...} }
type GetPhysicalConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetPhysicalConnectionsConnectionArrayOutput() GetPhysicalConnectionsConnectionArrayOutput
	ToGetPhysicalConnectionsConnectionArrayOutputWithContext(context.Context) GetPhysicalConnectionsConnectionArrayOutput
}

type GetPhysicalConnectionsConnectionArray []GetPhysicalConnectionsConnectionInput

func (GetPhysicalConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPhysicalConnectionsConnection)(nil)).Elem()
}

func (i GetPhysicalConnectionsConnectionArray) ToGetPhysicalConnectionsConnectionArrayOutput() GetPhysicalConnectionsConnectionArrayOutput {
	return i.ToGetPhysicalConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetPhysicalConnectionsConnectionArray) ToGetPhysicalConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetPhysicalConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPhysicalConnectionsConnectionArrayOutput)
}

type GetPhysicalConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetPhysicalConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPhysicalConnectionsConnection)(nil)).Elem()
}

func (o GetPhysicalConnectionsConnectionOutput) ToGetPhysicalConnectionsConnectionOutput() GetPhysicalConnectionsConnectionOutput {
	return o
}

func (o GetPhysicalConnectionsConnectionOutput) ToGetPhysicalConnectionsConnectionOutputWithContext(ctx context.Context) GetPhysicalConnectionsConnectionOutput {
	return o
}

// The Physical Leased Line Access Point ID.
func (o GetPhysicalConnectionsConnectionOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// To Connect a Device Physical Location.
func (o GetPhysicalConnectionsConnectionOutput) AdLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.AdLocation }).(pulumi.StringOutput)
}

// On the Bandwidth of the ECC Service and Physical Connection.
func (o GetPhysicalConnectionsConnectionOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Payment Status: Normal, financiallocked, securitylocked.
func (o GetPhysicalConnectionsConnectionOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// Operators for Physical Connection Circuit Provided Coding.
func (o GetPhysicalConnectionsConnectionOutput) CircuitCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.CircuitCode }).(pulumi.StringOutput)
}

// The Representative of the Creation Time Resources Attribute Field.
func (o GetPhysicalConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Description.
func (o GetPhysicalConnectionsConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Description }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Activation Time.
func (o GetPhysicalConnectionsConnectionOutput) EnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.EnabledTime }).(pulumi.StringOutput)
}

// The Expiration Time.
func (o GetPhysicalConnectionsConnectionOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.EndTime }).(pulumi.StringOutput)
}

// HasReservationData.
func (o GetPhysicalConnectionsConnectionOutput) HasReservationData() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.HasReservationData }).(pulumi.StringOutput)
}

// The ID of the Physical Connection.
func (o GetPhysicalConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// Provides Access to the Physical Line Operator Value CT: China Telecom, CU: China Unicom, CM: china Mobile, CO: Other Chinese, Equinix:Equinix, Other: Other Overseas.
func (o GetPhysicalConnectionsConnectionOutput) LineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.LineOperator }).(pulumi.StringOutput)
}

// Loa State.
func (o GetPhysicalConnectionsConnectionOutput) LoaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.LoaStatus }).(pulumi.StringOutput)
}

// on Behalf of the Pay-as-You-Type of Resource Attribute Field.
func (o GetPhysicalConnectionsConnectionOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PaymentType }).(pulumi.StringOutput)
}

// and an on-Premises Data Center Location.
func (o GetPhysicalConnectionsConnectionOutput) PeerLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PeerLocation }).(pulumi.StringOutput)
}

// on Behalf of the Resource Level Id of the Resources Property Fields.
func (o GetPhysicalConnectionsConnectionOutput) PhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PhysicalConnectionId }).(pulumi.StringOutput)
}

// on Behalf of the Resource Name of the Resources-Attribute Field.
func (o GetPhysicalConnectionsConnectionOutput) PhysicalConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PhysicalConnectionName }).(pulumi.StringOutput)
}

// To Connect a Device Port: The Port Number of.
func (o GetPhysicalConnectionsConnectionOutput) PortNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PortNumber }).(pulumi.StringOutput)
}

// The Physical Leased Line Access Port Type Value 100Base-T: Fast Electrical Ports, 1000Base-T (the Default): gigabit Electrical Ports, 1000Base-LX: Gigabit Singlemode Optical Ports (10Km), 10GBase-T: Gigabit Electrical Port, 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
func (o GetPhysicalConnectionsConnectionOutput) PortType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.PortType }).(pulumi.StringOutput)
}

// Redundant Physical Connection to Which the ID.
func (o GetPhysicalConnectionsConnectionOutput) RedundantPhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.RedundantPhysicalConnectionId }).(pulumi.StringOutput)
}

// The Renewal of the Entry into Force of the Time.
func (o GetPhysicalConnectionsConnectionOutput) ReservationActiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.ReservationActiveTime }).(pulumi.StringOutput)
}

// Renewal Type.
func (o GetPhysicalConnectionsConnectionOutput) ReservationInternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.ReservationInternetChargeType }).(pulumi.StringOutput)
}

// Renewal Order Type.
func (o GetPhysicalConnectionsConnectionOutput) ReservationOrderType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.ReservationOrderType }).(pulumi.StringOutput)
}

// The Physical Connection to Which the Specifications.
func (o GetPhysicalConnectionsConnectionOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Spec }).(pulumi.StringOutput)
}

// Resources on Behalf of a State of the Resource Attribute Field.
func (o GetPhysicalConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// Physical Private Line of Type. Default Value: VPC.
func (o GetPhysicalConnectionsConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPhysicalConnectionsConnection) string { return v.Type }).(pulumi.StringOutput)
}

type GetPhysicalConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetPhysicalConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPhysicalConnectionsConnection)(nil)).Elem()
}

func (o GetPhysicalConnectionsConnectionArrayOutput) ToGetPhysicalConnectionsConnectionArrayOutput() GetPhysicalConnectionsConnectionArrayOutput {
	return o
}

func (o GetPhysicalConnectionsConnectionArrayOutput) ToGetPhysicalConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetPhysicalConnectionsConnectionArrayOutput {
	return o
}

func (o GetPhysicalConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetPhysicalConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPhysicalConnectionsConnection {
		return vs[0].([]GetPhysicalConnectionsConnection)[vs[1].(int)]
	}).(GetPhysicalConnectionsConnectionOutput)
}

type GetRouterInterfacesFilter struct {
	Key    *string  `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// GetRouterInterfacesFilterInput is an input type that accepts GetRouterInterfacesFilterArgs and GetRouterInterfacesFilterOutput values.
// You can construct a concrete instance of `GetRouterInterfacesFilterInput` via:
//
//	GetRouterInterfacesFilterArgs{...}
type GetRouterInterfacesFilterInput interface {
	pulumi.Input

	ToGetRouterInterfacesFilterOutput() GetRouterInterfacesFilterOutput
	ToGetRouterInterfacesFilterOutputWithContext(context.Context) GetRouterInterfacesFilterOutput
}

type GetRouterInterfacesFilterArgs struct {
	Key    pulumi.StringPtrInput   `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouterInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesFilter)(nil)).Elem()
}

func (i GetRouterInterfacesFilterArgs) ToGetRouterInterfacesFilterOutput() GetRouterInterfacesFilterOutput {
	return i.ToGetRouterInterfacesFilterOutputWithContext(context.Background())
}

func (i GetRouterInterfacesFilterArgs) ToGetRouterInterfacesFilterOutputWithContext(ctx context.Context) GetRouterInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesFilterOutput)
}

// GetRouterInterfacesFilterArrayInput is an input type that accepts GetRouterInterfacesFilterArray and GetRouterInterfacesFilterArrayOutput values.
// You can construct a concrete instance of `GetRouterInterfacesFilterArrayInput` via:
//
//	GetRouterInterfacesFilterArray{ GetRouterInterfacesFilterArgs{...} }
type GetRouterInterfacesFilterArrayInput interface {
	pulumi.Input

	ToGetRouterInterfacesFilterArrayOutput() GetRouterInterfacesFilterArrayOutput
	ToGetRouterInterfacesFilterArrayOutputWithContext(context.Context) GetRouterInterfacesFilterArrayOutput
}

type GetRouterInterfacesFilterArray []GetRouterInterfacesFilterInput

func (GetRouterInterfacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesFilter)(nil)).Elem()
}

func (i GetRouterInterfacesFilterArray) ToGetRouterInterfacesFilterArrayOutput() GetRouterInterfacesFilterArrayOutput {
	return i.ToGetRouterInterfacesFilterArrayOutputWithContext(context.Background())
}

func (i GetRouterInterfacesFilterArray) ToGetRouterInterfacesFilterArrayOutputWithContext(ctx context.Context) GetRouterInterfacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesFilterArrayOutput)
}

type GetRouterInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesFilter)(nil)).Elem()
}

func (o GetRouterInterfacesFilterOutput) ToGetRouterInterfacesFilterOutput() GetRouterInterfacesFilterOutput {
	return o
}

func (o GetRouterInterfacesFilterOutput) ToGetRouterInterfacesFilterOutputWithContext(ctx context.Context) GetRouterInterfacesFilterOutput {
	return o
}

func (o GetRouterInterfacesFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouterInterfacesFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o GetRouterInterfacesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouterInterfacesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouterInterfacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesFilter)(nil)).Elem()
}

func (o GetRouterInterfacesFilterArrayOutput) ToGetRouterInterfacesFilterArrayOutput() GetRouterInterfacesFilterArrayOutput {
	return o
}

func (o GetRouterInterfacesFilterArrayOutput) ToGetRouterInterfacesFilterArrayOutputWithContext(ctx context.Context) GetRouterInterfacesFilterArrayOutput {
	return o
}

func (o GetRouterInterfacesFilterArrayOutput) Index(i pulumi.IntInput) GetRouterInterfacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterInterfacesFilter {
		return vs[0].([]GetRouterInterfacesFilter)[vs[1].(int)]
	}).(GetRouterInterfacesFilterOutput)
}

type GetRouterInterfacesInterface struct {
	// The access point ID to which the VBR belongs.
	AccessPointId string `pulumi:"accessPointId"`
	// The bandwidth of the resource.
	Bandwidth int `pulumi:"bandwidth"`
	// The businessStatus of the resource. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
	BusinessStatus string `pulumi:"businessStatus"`
	// The connected time of the resource.
	ConnectedTime string `pulumi:"connectedTime"`
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The cross border of the resource.
	CrossBorder bool `pulumi:"crossBorder"`
	// The description of the router interface.
	Description string `pulumi:"description"`
	// The end time of the resource.
	EndTime string `pulumi:"endTime"`
	// The has reservation data of the resource.
	HasReservationData string `pulumi:"hasReservationData"`
	// The hc rate of the resource.
	HcRate int `pulumi:"hcRate"`
	// The hc threshold of the resource.
	HcThreshold string `pulumi:"hcThreshold"`
	// The health check source IP address, must be an unused IP within the local VPC.
	HealthCheckSourceIp string `pulumi:"healthCheckSourceIp"`
	// The IP address for health screening purposes.
	HealthCheckTargetIp string `pulumi:"healthCheckTargetIp"`
	Id                  string `pulumi:"id"`
	// The Access point ID to which the other end belongs.
	OppositeAccessPointId string `pulumi:"oppositeAccessPointId"`
	// The opposite bandwidth of the router on the other side.
	OppositeBandwidth int `pulumi:"oppositeBandwidth"`
	// The opposite interface business status of the router on the other side. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
	OppositeInterfaceBusinessStatus string `pulumi:"oppositeInterfaceBusinessStatus"`
	// The Interface ID of the router at the other end.
	OppositeInterfaceId string `pulumi:"oppositeInterfaceId"`
	// The AliCloud account ID of the owner of the router interface on the other end.
	OppositeInterfaceOwnerId string `pulumi:"oppositeInterfaceOwnerId"`
	// The opposite interface spec of the router on the other side. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
	OppositeInterfaceSpec string `pulumi:"oppositeInterfaceSpec"`
	// The opposite interface status of the router on the other side. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
	OppositeInterfaceStatus string `pulumi:"oppositeInterfaceStatus"`
	// The geographical ID of the location of the receiving end of the connection.
	OppositeRegionId string `pulumi:"oppositeRegionId"`
	// The id of the router at the other end.
	OppositeRouterId string `pulumi:"oppositeRouterId"`
	// The opposite router type of the router on the other side. Valid Values: `VRouter`, `VBR`.
	OppositeRouterType string `pulumi:"oppositeRouterType"`
	// The opposite vpc instance id of the router on the other side.
	OppositeVpcInstanceId string `pulumi:"oppositeVpcInstanceId"`
	// The payment methods for router interfaces. Valid Values: `PrePaid`, `PostPaid`.
	PaymentType string `pulumi:"paymentType"`
	// The reservation active time of the resource.
	ReservationActiveTime string `pulumi:"reservationActiveTime"`
	// The reservation bandwidth of the resource.
	ReservationBandwidth string `pulumi:"reservationBandwidth"`
	// The reservation internet charge type of the resource.
	ReservationInternetChargeType string `pulumi:"reservationInternetChargeType"`
	// The reservation order type of the resource.
	ReservationOrderType string `pulumi:"reservationOrderType"`
	// The role of the router interface. Valid Values: `InitiatingSide`, `AcceptingSide`.
	Role string `pulumi:"role"`
	// The router id associated with the router interface.
	RouterId string `pulumi:"routerId"`
	// The first ID of the resource.
	RouterInterfaceId string `pulumi:"routerInterfaceId"`
	// The name of the resource.
	RouterInterfaceName string `pulumi:"routerInterfaceName"`
	// The type of router associated with the router interface. Valid Values: `VRouter`, `VBR`.
	RouterType string `pulumi:"routerType"`
	// The specification of the router interface. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
	Spec string `pulumi:"spec"`
	// The status of the resource. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
	Status string `pulumi:"status"`
	// The vpc instance id of the resource.
	VpcInstanceId string `pulumi:"vpcInstanceId"`
}

// GetRouterInterfacesInterfaceInput is an input type that accepts GetRouterInterfacesInterfaceArgs and GetRouterInterfacesInterfaceOutput values.
// You can construct a concrete instance of `GetRouterInterfacesInterfaceInput` via:
//
//	GetRouterInterfacesInterfaceArgs{...}
type GetRouterInterfacesInterfaceInput interface {
	pulumi.Input

	ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput
	ToGetRouterInterfacesInterfaceOutputWithContext(context.Context) GetRouterInterfacesInterfaceOutput
}

type GetRouterInterfacesInterfaceArgs struct {
	// The access point ID to which the VBR belongs.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// The bandwidth of the resource.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The businessStatus of the resource. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The connected time of the resource.
	ConnectedTime pulumi.StringInput `pulumi:"connectedTime"`
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The cross border of the resource.
	CrossBorder pulumi.BoolInput `pulumi:"crossBorder"`
	// The description of the router interface.
	Description pulumi.StringInput `pulumi:"description"`
	// The end time of the resource.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The has reservation data of the resource.
	HasReservationData pulumi.StringInput `pulumi:"hasReservationData"`
	// The hc rate of the resource.
	HcRate pulumi.IntInput `pulumi:"hcRate"`
	// The hc threshold of the resource.
	HcThreshold pulumi.StringInput `pulumi:"hcThreshold"`
	// The health check source IP address, must be an unused IP within the local VPC.
	HealthCheckSourceIp pulumi.StringInput `pulumi:"healthCheckSourceIp"`
	// The IP address for health screening purposes.
	HealthCheckTargetIp pulumi.StringInput `pulumi:"healthCheckTargetIp"`
	Id                  pulumi.StringInput `pulumi:"id"`
	// The Access point ID to which the other end belongs.
	OppositeAccessPointId pulumi.StringInput `pulumi:"oppositeAccessPointId"`
	// The opposite bandwidth of the router on the other side.
	OppositeBandwidth pulumi.IntInput `pulumi:"oppositeBandwidth"`
	// The opposite interface business status of the router on the other side. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
	OppositeInterfaceBusinessStatus pulumi.StringInput `pulumi:"oppositeInterfaceBusinessStatus"`
	// The Interface ID of the router at the other end.
	OppositeInterfaceId pulumi.StringInput `pulumi:"oppositeInterfaceId"`
	// The AliCloud account ID of the owner of the router interface on the other end.
	OppositeInterfaceOwnerId pulumi.StringInput `pulumi:"oppositeInterfaceOwnerId"`
	// The opposite interface spec of the router on the other side. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
	OppositeInterfaceSpec pulumi.StringInput `pulumi:"oppositeInterfaceSpec"`
	// The opposite interface status of the router on the other side. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
	OppositeInterfaceStatus pulumi.StringInput `pulumi:"oppositeInterfaceStatus"`
	// The geographical ID of the location of the receiving end of the connection.
	OppositeRegionId pulumi.StringInput `pulumi:"oppositeRegionId"`
	// The id of the router at the other end.
	OppositeRouterId pulumi.StringInput `pulumi:"oppositeRouterId"`
	// The opposite router type of the router on the other side. Valid Values: `VRouter`, `VBR`.
	OppositeRouterType pulumi.StringInput `pulumi:"oppositeRouterType"`
	// The opposite vpc instance id of the router on the other side.
	OppositeVpcInstanceId pulumi.StringInput `pulumi:"oppositeVpcInstanceId"`
	// The payment methods for router interfaces. Valid Values: `PrePaid`, `PostPaid`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The reservation active time of the resource.
	ReservationActiveTime pulumi.StringInput `pulumi:"reservationActiveTime"`
	// The reservation bandwidth of the resource.
	ReservationBandwidth pulumi.StringInput `pulumi:"reservationBandwidth"`
	// The reservation internet charge type of the resource.
	ReservationInternetChargeType pulumi.StringInput `pulumi:"reservationInternetChargeType"`
	// The reservation order type of the resource.
	ReservationOrderType pulumi.StringInput `pulumi:"reservationOrderType"`
	// The role of the router interface. Valid Values: `InitiatingSide`, `AcceptingSide`.
	Role pulumi.StringInput `pulumi:"role"`
	// The router id associated with the router interface.
	RouterId pulumi.StringInput `pulumi:"routerId"`
	// The first ID of the resource.
	RouterInterfaceId pulumi.StringInput `pulumi:"routerInterfaceId"`
	// The name of the resource.
	RouterInterfaceName pulumi.StringInput `pulumi:"routerInterfaceName"`
	// The type of router associated with the router interface. Valid Values: `VRouter`, `VBR`.
	RouterType pulumi.StringInput `pulumi:"routerType"`
	// The specification of the router interface. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the resource. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The vpc instance id of the resource.
	VpcInstanceId pulumi.StringInput `pulumi:"vpcInstanceId"`
}

func (GetRouterInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesInterface)(nil)).Elem()
}

func (i GetRouterInterfacesInterfaceArgs) ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput {
	return i.ToGetRouterInterfacesInterfaceOutputWithContext(context.Background())
}

func (i GetRouterInterfacesInterfaceArgs) ToGetRouterInterfacesInterfaceOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesInterfaceOutput)
}

// GetRouterInterfacesInterfaceArrayInput is an input type that accepts GetRouterInterfacesInterfaceArray and GetRouterInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `GetRouterInterfacesInterfaceArrayInput` via:
//
//	GetRouterInterfacesInterfaceArray{ GetRouterInterfacesInterfaceArgs{...} }
type GetRouterInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput
	ToGetRouterInterfacesInterfaceArrayOutputWithContext(context.Context) GetRouterInterfacesInterfaceArrayOutput
}

type GetRouterInterfacesInterfaceArray []GetRouterInterfacesInterfaceInput

func (GetRouterInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesInterface)(nil)).Elem()
}

func (i GetRouterInterfacesInterfaceArray) ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput {
	return i.ToGetRouterInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i GetRouterInterfacesInterfaceArray) ToGetRouterInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouterInterfacesInterfaceArrayOutput)
}

type GetRouterInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterInterfacesInterface)(nil)).Elem()
}

func (o GetRouterInterfacesInterfaceOutput) ToGetRouterInterfacesInterfaceOutput() GetRouterInterfacesInterfaceOutput {
	return o
}

func (o GetRouterInterfacesInterfaceOutput) ToGetRouterInterfacesInterfaceOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceOutput {
	return o
}

// The access point ID to which the VBR belongs.
func (o GetRouterInterfacesInterfaceOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// The bandwidth of the resource.
func (o GetRouterInterfacesInterfaceOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The businessStatus of the resource. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
func (o GetRouterInterfacesInterfaceOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The connected time of the resource.
func (o GetRouterInterfacesInterfaceOutput) ConnectedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.ConnectedTime }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o GetRouterInterfacesInterfaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The cross border of the resource.
func (o GetRouterInterfacesInterfaceOutput) CrossBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) bool { return v.CrossBorder }).(pulumi.BoolOutput)
}

// The description of the router interface.
func (o GetRouterInterfacesInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Description }).(pulumi.StringOutput)
}

// The end time of the resource.
func (o GetRouterInterfacesInterfaceOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.EndTime }).(pulumi.StringOutput)
}

// The has reservation data of the resource.
func (o GetRouterInterfacesInterfaceOutput) HasReservationData() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HasReservationData }).(pulumi.StringOutput)
}

// The hc rate of the resource.
func (o GetRouterInterfacesInterfaceOutput) HcRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) int { return v.HcRate }).(pulumi.IntOutput)
}

// The hc threshold of the resource.
func (o GetRouterInterfacesInterfaceOutput) HcThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HcThreshold }).(pulumi.StringOutput)
}

// The health check source IP address, must be an unused IP within the local VPC.
func (o GetRouterInterfacesInterfaceOutput) HealthCheckSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HealthCheckSourceIp }).(pulumi.StringOutput)
}

// The IP address for health screening purposes.
func (o GetRouterInterfacesInterfaceOutput) HealthCheckTargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.HealthCheckTargetIp }).(pulumi.StringOutput)
}

func (o GetRouterInterfacesInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Id }).(pulumi.StringOutput)
}

// The Access point ID to which the other end belongs.
func (o GetRouterInterfacesInterfaceOutput) OppositeAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeAccessPointId }).(pulumi.StringOutput)
}

// The opposite bandwidth of the router on the other side.
func (o GetRouterInterfacesInterfaceOutput) OppositeBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) int { return v.OppositeBandwidth }).(pulumi.IntOutput)
}

// The opposite interface business status of the router on the other side. Valid Values: `Normal`, `FinancialLocked`, `SecurityLocked`.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceBusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceBusinessStatus }).(pulumi.StringOutput)
}

// The Interface ID of the router at the other end.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceId }).(pulumi.StringOutput)
}

// The AliCloud account ID of the owner of the router interface on the other end.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceOwnerId }).(pulumi.StringOutput)
}

// The opposite interface spec of the router on the other side. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceSpec }).(pulumi.StringOutput)
}

// The opposite interface status of the router on the other side. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
func (o GetRouterInterfacesInterfaceOutput) OppositeInterfaceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeInterfaceStatus }).(pulumi.StringOutput)
}

// The geographical ID of the location of the receiving end of the connection.
func (o GetRouterInterfacesInterfaceOutput) OppositeRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRegionId }).(pulumi.StringOutput)
}

// The id of the router at the other end.
func (o GetRouterInterfacesInterfaceOutput) OppositeRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRouterId }).(pulumi.StringOutput)
}

// The opposite router type of the router on the other side. Valid Values: `VRouter`, `VBR`.
func (o GetRouterInterfacesInterfaceOutput) OppositeRouterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeRouterType }).(pulumi.StringOutput)
}

// The opposite vpc instance id of the router on the other side.
func (o GetRouterInterfacesInterfaceOutput) OppositeVpcInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.OppositeVpcInstanceId }).(pulumi.StringOutput)
}

// The payment methods for router interfaces. Valid Values: `PrePaid`, `PostPaid`.
func (o GetRouterInterfacesInterfaceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The reservation active time of the resource.
func (o GetRouterInterfacesInterfaceOutput) ReservationActiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.ReservationActiveTime }).(pulumi.StringOutput)
}

// The reservation bandwidth of the resource.
func (o GetRouterInterfacesInterfaceOutput) ReservationBandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.ReservationBandwidth }).(pulumi.StringOutput)
}

// The reservation internet charge type of the resource.
func (o GetRouterInterfacesInterfaceOutput) ReservationInternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.ReservationInternetChargeType }).(pulumi.StringOutput)
}

// The reservation order type of the resource.
func (o GetRouterInterfacesInterfaceOutput) ReservationOrderType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.ReservationOrderType }).(pulumi.StringOutput)
}

// The role of the router interface. Valid Values: `InitiatingSide`, `AcceptingSide`.
func (o GetRouterInterfacesInterfaceOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Role }).(pulumi.StringOutput)
}

// The router id associated with the router interface.
func (o GetRouterInterfacesInterfaceOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterId }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetRouterInterfacesInterfaceOutput) RouterInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterInterfaceId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetRouterInterfacesInterfaceOutput) RouterInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterInterfaceName }).(pulumi.StringOutput)
}

// The type of router associated with the router interface. Valid Values: `VRouter`, `VBR`.
func (o GetRouterInterfacesInterfaceOutput) RouterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.RouterType }).(pulumi.StringOutput)
}

// The specification of the router interface. Valid Values: `Mini.2`, `Mini.5`, `Mini.5`, `Small.2`, `Small.5`, `Middle.1`, `Middle.2`, `Middle.5`, `Large.1`, `Large.2`, `Large.5`, `XLarge.1`, `Negative`.
func (o GetRouterInterfacesInterfaceOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the resource. Valid Values: `Idle`, `AcceptingConnecting`, `Connecting`, `Activating`, `Active`, `Modifying`, `Deactivating`, `Inactive`, `Deleting`.
func (o GetRouterInterfacesInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.Status }).(pulumi.StringOutput)
}

// The vpc instance id of the resource.
func (o GetRouterInterfacesInterfaceOutput) VpcInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouterInterfacesInterface) string { return v.VpcInstanceId }).(pulumi.StringOutput)
}

type GetRouterInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetRouterInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouterInterfacesInterface)(nil)).Elem()
}

func (o GetRouterInterfacesInterfaceArrayOutput) ToGetRouterInterfacesInterfaceArrayOutput() GetRouterInterfacesInterfaceArrayOutput {
	return o
}

func (o GetRouterInterfacesInterfaceArrayOutput) ToGetRouterInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetRouterInterfacesInterfaceArrayOutput {
	return o
}

func (o GetRouterInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) GetRouterInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouterInterfacesInterface {
		return vs[0].([]GetRouterInterfacesInterface)[vs[1].(int)]
	}).(GetRouterInterfacesInterfaceOutput)
}

type GetVbrPconnAssociationsAssociation struct {
	// The circuit code provided by the operator for the physical connection.
	CircuitCode string `pulumi:"circuitCode"`
	// Whether IPv6 is enabled.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The ID of the Vbr Pconn Association.
	Id string `pulumi:"id"`
	// The Alibaba cloud IP address of the VBR instance.
	LocalGatewayIp string `pulumi:"localGatewayIp"`
	// The IPv6 address on the Alibaba Cloud side of the VBR instance.
	LocalIpv6GatewayIp string `pulumi:"localIpv6GatewayIp"`
	// The client IP address of the VBR instance.
	PeerGatewayIp string `pulumi:"peerGatewayIp"`
	// The IPv6 address of the client side of the VBR instance.
	PeerIpv6GatewayIp string `pulumi:"peerIpv6GatewayIp"`
	// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
	PeeringIpv6SubnetMask string `pulumi:"peeringIpv6SubnetMask"`
	// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
	PeeringSubnetMask string `pulumi:"peeringSubnetMask"`
	// The ID of the leased line instance.
	PhysicalConnectionId string `pulumi:"physicalConnectionId"`
	// The status of the resource
	Status string `pulumi:"status"`
	// The ID of the VBR instance.
	VbrId string `pulumi:"vbrId"`
	// VLAN ID of the VBR.
	VlanId int `pulumi:"vlanId"`
}

// GetVbrPconnAssociationsAssociationInput is an input type that accepts GetVbrPconnAssociationsAssociationArgs and GetVbrPconnAssociationsAssociationOutput values.
// You can construct a concrete instance of `GetVbrPconnAssociationsAssociationInput` via:
//
//	GetVbrPconnAssociationsAssociationArgs{...}
type GetVbrPconnAssociationsAssociationInput interface {
	pulumi.Input

	ToGetVbrPconnAssociationsAssociationOutput() GetVbrPconnAssociationsAssociationOutput
	ToGetVbrPconnAssociationsAssociationOutputWithContext(context.Context) GetVbrPconnAssociationsAssociationOutput
}

type GetVbrPconnAssociationsAssociationArgs struct {
	// The circuit code provided by the operator for the physical connection.
	CircuitCode pulumi.StringInput `pulumi:"circuitCode"`
	// Whether IPv6 is enabled.
	EnableIpv6 pulumi.BoolInput `pulumi:"enableIpv6"`
	// The ID of the Vbr Pconn Association.
	Id pulumi.StringInput `pulumi:"id"`
	// The Alibaba cloud IP address of the VBR instance.
	LocalGatewayIp pulumi.StringInput `pulumi:"localGatewayIp"`
	// The IPv6 address on the Alibaba Cloud side of the VBR instance.
	LocalIpv6GatewayIp pulumi.StringInput `pulumi:"localIpv6GatewayIp"`
	// The client IP address of the VBR instance.
	PeerGatewayIp pulumi.StringInput `pulumi:"peerGatewayIp"`
	// The IPv6 address of the client side of the VBR instance.
	PeerIpv6GatewayIp pulumi.StringInput `pulumi:"peerIpv6GatewayIp"`
	// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
	PeeringIpv6SubnetMask pulumi.StringInput `pulumi:"peeringIpv6SubnetMask"`
	// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
	PeeringSubnetMask pulumi.StringInput `pulumi:"peeringSubnetMask"`
	// The ID of the leased line instance.
	PhysicalConnectionId pulumi.StringInput `pulumi:"physicalConnectionId"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the VBR instance.
	VbrId pulumi.StringInput `pulumi:"vbrId"`
	// VLAN ID of the VBR.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetVbrPconnAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbrPconnAssociationsAssociation)(nil)).Elem()
}

func (i GetVbrPconnAssociationsAssociationArgs) ToGetVbrPconnAssociationsAssociationOutput() GetVbrPconnAssociationsAssociationOutput {
	return i.ToGetVbrPconnAssociationsAssociationOutputWithContext(context.Background())
}

func (i GetVbrPconnAssociationsAssociationArgs) ToGetVbrPconnAssociationsAssociationOutputWithContext(ctx context.Context) GetVbrPconnAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbrPconnAssociationsAssociationOutput)
}

// GetVbrPconnAssociationsAssociationArrayInput is an input type that accepts GetVbrPconnAssociationsAssociationArray and GetVbrPconnAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `GetVbrPconnAssociationsAssociationArrayInput` via:
//
//	GetVbrPconnAssociationsAssociationArray{ GetVbrPconnAssociationsAssociationArgs{...} }
type GetVbrPconnAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToGetVbrPconnAssociationsAssociationArrayOutput() GetVbrPconnAssociationsAssociationArrayOutput
	ToGetVbrPconnAssociationsAssociationArrayOutputWithContext(context.Context) GetVbrPconnAssociationsAssociationArrayOutput
}

type GetVbrPconnAssociationsAssociationArray []GetVbrPconnAssociationsAssociationInput

func (GetVbrPconnAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbrPconnAssociationsAssociation)(nil)).Elem()
}

func (i GetVbrPconnAssociationsAssociationArray) ToGetVbrPconnAssociationsAssociationArrayOutput() GetVbrPconnAssociationsAssociationArrayOutput {
	return i.ToGetVbrPconnAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i GetVbrPconnAssociationsAssociationArray) ToGetVbrPconnAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetVbrPconnAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVbrPconnAssociationsAssociationArrayOutput)
}

type GetVbrPconnAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (GetVbrPconnAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVbrPconnAssociationsAssociation)(nil)).Elem()
}

func (o GetVbrPconnAssociationsAssociationOutput) ToGetVbrPconnAssociationsAssociationOutput() GetVbrPconnAssociationsAssociationOutput {
	return o
}

func (o GetVbrPconnAssociationsAssociationOutput) ToGetVbrPconnAssociationsAssociationOutputWithContext(ctx context.Context) GetVbrPconnAssociationsAssociationOutput {
	return o
}

// The circuit code provided by the operator for the physical connection.
func (o GetVbrPconnAssociationsAssociationOutput) CircuitCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.CircuitCode }).(pulumi.StringOutput)
}

// Whether IPv6 is enabled.
func (o GetVbrPconnAssociationsAssociationOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The ID of the Vbr Pconn Association.
func (o GetVbrPconnAssociationsAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.Id }).(pulumi.StringOutput)
}

// The Alibaba cloud IP address of the VBR instance.
func (o GetVbrPconnAssociationsAssociationOutput) LocalGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.LocalGatewayIp }).(pulumi.StringOutput)
}

// The IPv6 address on the Alibaba Cloud side of the VBR instance.
func (o GetVbrPconnAssociationsAssociationOutput) LocalIpv6GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.LocalIpv6GatewayIp }).(pulumi.StringOutput)
}

// The client IP address of the VBR instance.
func (o GetVbrPconnAssociationsAssociationOutput) PeerGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.PeerGatewayIp }).(pulumi.StringOutput)
}

// The IPv6 address of the client side of the VBR instance.
func (o GetVbrPconnAssociationsAssociationOutput) PeerIpv6GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.PeerIpv6GatewayIp }).(pulumi.StringOutput)
}

// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
func (o GetVbrPconnAssociationsAssociationOutput) PeeringIpv6SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.PeeringIpv6SubnetMask }).(pulumi.StringOutput)
}

// The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
func (o GetVbrPconnAssociationsAssociationOutput) PeeringSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.PeeringSubnetMask }).(pulumi.StringOutput)
}

// The ID of the leased line instance.
func (o GetVbrPconnAssociationsAssociationOutput) PhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.PhysicalConnectionId }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetVbrPconnAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VBR instance.
func (o GetVbrPconnAssociationsAssociationOutput) VbrId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) string { return v.VbrId }).(pulumi.StringOutput)
}

// VLAN ID of the VBR.
func (o GetVbrPconnAssociationsAssociationOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVbrPconnAssociationsAssociation) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetVbrPconnAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetVbrPconnAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVbrPconnAssociationsAssociation)(nil)).Elem()
}

func (o GetVbrPconnAssociationsAssociationArrayOutput) ToGetVbrPconnAssociationsAssociationArrayOutput() GetVbrPconnAssociationsAssociationArrayOutput {
	return o
}

func (o GetVbrPconnAssociationsAssociationArrayOutput) ToGetVbrPconnAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetVbrPconnAssociationsAssociationArrayOutput {
	return o
}

func (o GetVbrPconnAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) GetVbrPconnAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVbrPconnAssociationsAssociation {
		return vs[0].([]GetVbrPconnAssociationsAssociation)[vs[1].(int)]
	}).(GetVbrPconnAssociationsAssociationOutput)
}

type GetVirtualBorderRoutersFilter struct {
	// The key of the field to filter by, as defined by
	// [Alibaba Cloud API](https://www.alibabacloud.com/help/en/doc-detail/124791.htm).
	Key *string `pulumi:"key"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

// GetVirtualBorderRoutersFilterInput is an input type that accepts GetVirtualBorderRoutersFilterArgs and GetVirtualBorderRoutersFilterOutput values.
// You can construct a concrete instance of `GetVirtualBorderRoutersFilterInput` via:
//
//	GetVirtualBorderRoutersFilterArgs{...}
type GetVirtualBorderRoutersFilterInput interface {
	pulumi.Input

	ToGetVirtualBorderRoutersFilterOutput() GetVirtualBorderRoutersFilterOutput
	ToGetVirtualBorderRoutersFilterOutputWithContext(context.Context) GetVirtualBorderRoutersFilterOutput
}

type GetVirtualBorderRoutersFilterArgs struct {
	// The key of the field to filter by, as defined by
	// [Alibaba Cloud API](https://www.alibabacloud.com/help/en/doc-detail/124791.htm).
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Set of values that are accepted for the given field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVirtualBorderRoutersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualBorderRoutersFilter)(nil)).Elem()
}

func (i GetVirtualBorderRoutersFilterArgs) ToGetVirtualBorderRoutersFilterOutput() GetVirtualBorderRoutersFilterOutput {
	return i.ToGetVirtualBorderRoutersFilterOutputWithContext(context.Background())
}

func (i GetVirtualBorderRoutersFilterArgs) ToGetVirtualBorderRoutersFilterOutputWithContext(ctx context.Context) GetVirtualBorderRoutersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualBorderRoutersFilterOutput)
}

// GetVirtualBorderRoutersFilterArrayInput is an input type that accepts GetVirtualBorderRoutersFilterArray and GetVirtualBorderRoutersFilterArrayOutput values.
// You can construct a concrete instance of `GetVirtualBorderRoutersFilterArrayInput` via:
//
//	GetVirtualBorderRoutersFilterArray{ GetVirtualBorderRoutersFilterArgs{...} }
type GetVirtualBorderRoutersFilterArrayInput interface {
	pulumi.Input

	ToGetVirtualBorderRoutersFilterArrayOutput() GetVirtualBorderRoutersFilterArrayOutput
	ToGetVirtualBorderRoutersFilterArrayOutputWithContext(context.Context) GetVirtualBorderRoutersFilterArrayOutput
}

type GetVirtualBorderRoutersFilterArray []GetVirtualBorderRoutersFilterInput

func (GetVirtualBorderRoutersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualBorderRoutersFilter)(nil)).Elem()
}

func (i GetVirtualBorderRoutersFilterArray) ToGetVirtualBorderRoutersFilterArrayOutput() GetVirtualBorderRoutersFilterArrayOutput {
	return i.ToGetVirtualBorderRoutersFilterArrayOutputWithContext(context.Background())
}

func (i GetVirtualBorderRoutersFilterArray) ToGetVirtualBorderRoutersFilterArrayOutputWithContext(ctx context.Context) GetVirtualBorderRoutersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualBorderRoutersFilterArrayOutput)
}

type GetVirtualBorderRoutersFilterOutput struct{ *pulumi.OutputState }

func (GetVirtualBorderRoutersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualBorderRoutersFilter)(nil)).Elem()
}

func (o GetVirtualBorderRoutersFilterOutput) ToGetVirtualBorderRoutersFilterOutput() GetVirtualBorderRoutersFilterOutput {
	return o
}

func (o GetVirtualBorderRoutersFilterOutput) ToGetVirtualBorderRoutersFilterOutputWithContext(ctx context.Context) GetVirtualBorderRoutersFilterOutput {
	return o
}

// The key of the field to filter by, as defined by
// [Alibaba Cloud API](https://www.alibabacloud.com/help/en/doc-detail/124791.htm).
func (o GetVirtualBorderRoutersFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Set of values that are accepted for the given field.
func (o GetVirtualBorderRoutersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVirtualBorderRoutersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualBorderRoutersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualBorderRoutersFilter)(nil)).Elem()
}

func (o GetVirtualBorderRoutersFilterArrayOutput) ToGetVirtualBorderRoutersFilterArrayOutput() GetVirtualBorderRoutersFilterArrayOutput {
	return o
}

func (o GetVirtualBorderRoutersFilterArrayOutput) ToGetVirtualBorderRoutersFilterArrayOutputWithContext(ctx context.Context) GetVirtualBorderRoutersFilterArrayOutput {
	return o
}

func (o GetVirtualBorderRoutersFilterArrayOutput) Index(i pulumi.IntInput) GetVirtualBorderRoutersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualBorderRoutersFilter {
		return vs[0].([]GetVirtualBorderRoutersFilter)[vs[1].(int)]
	}).(GetVirtualBorderRoutersFilterOutput)
}

type GetVirtualBorderRoutersRouter struct {
	// The physical leased line access point ID.
	AccessPointId string `pulumi:"accessPointId"`
	// The first activation time of VBR.
	ActivationTime string `pulumi:"activationTime"`
	// Operators for physical connection circuit provided coding.
	CircuitCode string `pulumi:"circuitCode"`
	// Box Instance Id.
	CloudBoxInstanceId string `pulumi:"cloudBoxInstanceId"`
	// The representative of the creation time resources attribute field.
	CreateTime string `pulumi:"createTime"`
	// The description of VBR. Length is from 2 to 256 characters, must start with a letter or the Chinese at the beginning, but not at the http:// Or https:// at the beginning.
	Description string `pulumi:"description"`
	// Detection time multiplier that recipient allows the sender to send a message of the maximum allowable connections for the number of packets, used to detect whether the link normal. Value: 3~10.
	DetectMultiplier int `pulumi:"detectMultiplier"`
	// High Speed Migration Service Instance Id.
	EccId string `pulumi:"eccId"`
	// Whether to Enable IPv6.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The ID of the Virtual Border Router.
	Id string `pulumi:"id"`
	// Alibaba Cloud-Connected IPv4 address.
	LocalGatewayIp string `pulumi:"localGatewayIp"`
	// Alibaba Cloud-Connected IPv6 Address.
	LocalIpv6GatewayIp string `pulumi:"localIpv6GatewayIp"`
	// Configure BFD packet reception interval of values include: 200~1000, unit: ms.
	MinRxInterval int `pulumi:"minRxInterval"`
	// Configure BFD packet transmission interval maximum value: 200~1000, unit: ms.
	MinTxInterval int `pulumi:"minTxInterval"`
	// The Billing of the Extended Time.
	PaymentVbrExpireTime string `pulumi:"paymentVbrExpireTime"`
	// The Client-Side Interconnection IPv4 Address.
	PeerGatewayIp string `pulumi:"peerGatewayIp"`
	// The Client-Side Interconnection IPv6 Address.
	PeerIpv6GatewayIp string `pulumi:"peerIpv6GatewayIp"`
	// Alibaba Cloud-Connected IPv6 with Client-Side Interconnection IPv6 of Subnet Mask.
	PeeringIpv6SubnetMask string `pulumi:"peeringIpv6SubnetMask"`
	// Alibaba Cloud-Connected IPv4 and Client-Side Interconnection IPv4 of Subnet Mask.
	PeeringSubnetMask string `pulumi:"peeringSubnetMask"`
	// Physical Private Line Service Status Value Normal: Normal, financiallocked: If You Lock.
	PhysicalConnectionBusinessStatus string `pulumi:"physicalConnectionBusinessStatus"`
	// The ID of the Physical Connection to Which the ID.
	PhysicalConnectionId string `pulumi:"physicalConnectionId"`
	// Physical Private Line Where the Account ID.
	PhysicalConnectionOwnerUid string `pulumi:"physicalConnectionOwnerUid"`
	// Physical Private Line State.
	PhysicalConnectionStatus string `pulumi:"physicalConnectionStatus"`
	// The Last from a Terminated State to the Active State of the Time.
	RecoveryTime string `pulumi:"recoveryTime"`
	// Route Table ID.
	RouteTableId string `pulumi:"routeTableId"`
	// The VBR state.
	Status string `pulumi:"status"`
	// The Most Recent Was Aborted by the Time.
	TerminationTime string `pulumi:"terminationTime"`
	// VBR Type.
	Type string `pulumi:"type"`
	// The VBR ID.
	VirtualBorderRouterId string `pulumi:"virtualBorderRouterId"`
	// The name of VBR. Length is from 2 to 128 characters, must start with a letter or the Chinese at the beginning can contain numbers, the underscore character (_) and dash (-). But do not start with http:// or https:// at the beginning.
	VirtualBorderRouterName string `pulumi:"virtualBorderRouterName"`
	// The VLAN ID of the VBR. Value range: 0~2999.
	VlanId int `pulumi:"vlanId"`
	// The ID of the Router Interface.
	VlanInterfaceId string `pulumi:"vlanInterfaceId"`
}

// GetVirtualBorderRoutersRouterInput is an input type that accepts GetVirtualBorderRoutersRouterArgs and GetVirtualBorderRoutersRouterOutput values.
// You can construct a concrete instance of `GetVirtualBorderRoutersRouterInput` via:
//
//	GetVirtualBorderRoutersRouterArgs{...}
type GetVirtualBorderRoutersRouterInput interface {
	pulumi.Input

	ToGetVirtualBorderRoutersRouterOutput() GetVirtualBorderRoutersRouterOutput
	ToGetVirtualBorderRoutersRouterOutputWithContext(context.Context) GetVirtualBorderRoutersRouterOutput
}

type GetVirtualBorderRoutersRouterArgs struct {
	// The physical leased line access point ID.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// The first activation time of VBR.
	ActivationTime pulumi.StringInput `pulumi:"activationTime"`
	// Operators for physical connection circuit provided coding.
	CircuitCode pulumi.StringInput `pulumi:"circuitCode"`
	// Box Instance Id.
	CloudBoxInstanceId pulumi.StringInput `pulumi:"cloudBoxInstanceId"`
	// The representative of the creation time resources attribute field.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of VBR. Length is from 2 to 256 characters, must start with a letter or the Chinese at the beginning, but not at the http:// Or https:// at the beginning.
	Description pulumi.StringInput `pulumi:"description"`
	// Detection time multiplier that recipient allows the sender to send a message of the maximum allowable connections for the number of packets, used to detect whether the link normal. Value: 3~10.
	DetectMultiplier pulumi.IntInput `pulumi:"detectMultiplier"`
	// High Speed Migration Service Instance Id.
	EccId pulumi.StringInput `pulumi:"eccId"`
	// Whether to Enable IPv6.
	EnableIpv6 pulumi.BoolInput `pulumi:"enableIpv6"`
	// The ID of the Virtual Border Router.
	Id pulumi.StringInput `pulumi:"id"`
	// Alibaba Cloud-Connected IPv4 address.
	LocalGatewayIp pulumi.StringInput `pulumi:"localGatewayIp"`
	// Alibaba Cloud-Connected IPv6 Address.
	LocalIpv6GatewayIp pulumi.StringInput `pulumi:"localIpv6GatewayIp"`
	// Configure BFD packet reception interval of values include: 200~1000, unit: ms.
	MinRxInterval pulumi.IntInput `pulumi:"minRxInterval"`
	// Configure BFD packet transmission interval maximum value: 200~1000, unit: ms.
	MinTxInterval pulumi.IntInput `pulumi:"minTxInterval"`
	// The Billing of the Extended Time.
	PaymentVbrExpireTime pulumi.StringInput `pulumi:"paymentVbrExpireTime"`
	// The Client-Side Interconnection IPv4 Address.
	PeerGatewayIp pulumi.StringInput `pulumi:"peerGatewayIp"`
	// The Client-Side Interconnection IPv6 Address.
	PeerIpv6GatewayIp pulumi.StringInput `pulumi:"peerIpv6GatewayIp"`
	// Alibaba Cloud-Connected IPv6 with Client-Side Interconnection IPv6 of Subnet Mask.
	PeeringIpv6SubnetMask pulumi.StringInput `pulumi:"peeringIpv6SubnetMask"`
	// Alibaba Cloud-Connected IPv4 and Client-Side Interconnection IPv4 of Subnet Mask.
	PeeringSubnetMask pulumi.StringInput `pulumi:"peeringSubnetMask"`
	// Physical Private Line Service Status Value Normal: Normal, financiallocked: If You Lock.
	PhysicalConnectionBusinessStatus pulumi.StringInput `pulumi:"physicalConnectionBusinessStatus"`
	// The ID of the Physical Connection to Which the ID.
	PhysicalConnectionId pulumi.StringInput `pulumi:"physicalConnectionId"`
	// Physical Private Line Where the Account ID.
	PhysicalConnectionOwnerUid pulumi.StringInput `pulumi:"physicalConnectionOwnerUid"`
	// Physical Private Line State.
	PhysicalConnectionStatus pulumi.StringInput `pulumi:"physicalConnectionStatus"`
	// The Last from a Terminated State to the Active State of the Time.
	RecoveryTime pulumi.StringInput `pulumi:"recoveryTime"`
	// Route Table ID.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The VBR state.
	Status pulumi.StringInput `pulumi:"status"`
	// The Most Recent Was Aborted by the Time.
	TerminationTime pulumi.StringInput `pulumi:"terminationTime"`
	// VBR Type.
	Type pulumi.StringInput `pulumi:"type"`
	// The VBR ID.
	VirtualBorderRouterId pulumi.StringInput `pulumi:"virtualBorderRouterId"`
	// The name of VBR. Length is from 2 to 128 characters, must start with a letter or the Chinese at the beginning can contain numbers, the underscore character (_) and dash (-). But do not start with http:// or https:// at the beginning.
	VirtualBorderRouterName pulumi.StringInput `pulumi:"virtualBorderRouterName"`
	// The VLAN ID of the VBR. Value range: 0~2999.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
	// The ID of the Router Interface.
	VlanInterfaceId pulumi.StringInput `pulumi:"vlanInterfaceId"`
}

func (GetVirtualBorderRoutersRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualBorderRoutersRouter)(nil)).Elem()
}

func (i GetVirtualBorderRoutersRouterArgs) ToGetVirtualBorderRoutersRouterOutput() GetVirtualBorderRoutersRouterOutput {
	return i.ToGetVirtualBorderRoutersRouterOutputWithContext(context.Background())
}

func (i GetVirtualBorderRoutersRouterArgs) ToGetVirtualBorderRoutersRouterOutputWithContext(ctx context.Context) GetVirtualBorderRoutersRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualBorderRoutersRouterOutput)
}

// GetVirtualBorderRoutersRouterArrayInput is an input type that accepts GetVirtualBorderRoutersRouterArray and GetVirtualBorderRoutersRouterArrayOutput values.
// You can construct a concrete instance of `GetVirtualBorderRoutersRouterArrayInput` via:
//
//	GetVirtualBorderRoutersRouterArray{ GetVirtualBorderRoutersRouterArgs{...} }
type GetVirtualBorderRoutersRouterArrayInput interface {
	pulumi.Input

	ToGetVirtualBorderRoutersRouterArrayOutput() GetVirtualBorderRoutersRouterArrayOutput
	ToGetVirtualBorderRoutersRouterArrayOutputWithContext(context.Context) GetVirtualBorderRoutersRouterArrayOutput
}

type GetVirtualBorderRoutersRouterArray []GetVirtualBorderRoutersRouterInput

func (GetVirtualBorderRoutersRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualBorderRoutersRouter)(nil)).Elem()
}

func (i GetVirtualBorderRoutersRouterArray) ToGetVirtualBorderRoutersRouterArrayOutput() GetVirtualBorderRoutersRouterArrayOutput {
	return i.ToGetVirtualBorderRoutersRouterArrayOutputWithContext(context.Background())
}

func (i GetVirtualBorderRoutersRouterArray) ToGetVirtualBorderRoutersRouterArrayOutputWithContext(ctx context.Context) GetVirtualBorderRoutersRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualBorderRoutersRouterArrayOutput)
}

type GetVirtualBorderRoutersRouterOutput struct{ *pulumi.OutputState }

func (GetVirtualBorderRoutersRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualBorderRoutersRouter)(nil)).Elem()
}

func (o GetVirtualBorderRoutersRouterOutput) ToGetVirtualBorderRoutersRouterOutput() GetVirtualBorderRoutersRouterOutput {
	return o
}

func (o GetVirtualBorderRoutersRouterOutput) ToGetVirtualBorderRoutersRouterOutputWithContext(ctx context.Context) GetVirtualBorderRoutersRouterOutput {
	return o
}

// The physical leased line access point ID.
func (o GetVirtualBorderRoutersRouterOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// The first activation time of VBR.
func (o GetVirtualBorderRoutersRouterOutput) ActivationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.ActivationTime }).(pulumi.StringOutput)
}

// Operators for physical connection circuit provided coding.
func (o GetVirtualBorderRoutersRouterOutput) CircuitCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.CircuitCode }).(pulumi.StringOutput)
}

// Box Instance Id.
func (o GetVirtualBorderRoutersRouterOutput) CloudBoxInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.CloudBoxInstanceId }).(pulumi.StringOutput)
}

// The representative of the creation time resources attribute field.
func (o GetVirtualBorderRoutersRouterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of VBR. Length is from 2 to 256 characters, must start with a letter or the Chinese at the beginning, but not at the http:// Or https:// at the beginning.
func (o GetVirtualBorderRoutersRouterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.Description }).(pulumi.StringOutput)
}

// Detection time multiplier that recipient allows the sender to send a message of the maximum allowable connections for the number of packets, used to detect whether the link normal. Value: 3~10.
func (o GetVirtualBorderRoutersRouterOutput) DetectMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) int { return v.DetectMultiplier }).(pulumi.IntOutput)
}

// High Speed Migration Service Instance Id.
func (o GetVirtualBorderRoutersRouterOutput) EccId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.EccId }).(pulumi.StringOutput)
}

// Whether to Enable IPv6.
func (o GetVirtualBorderRoutersRouterOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The ID of the Virtual Border Router.
func (o GetVirtualBorderRoutersRouterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.Id }).(pulumi.StringOutput)
}

// Alibaba Cloud-Connected IPv4 address.
func (o GetVirtualBorderRoutersRouterOutput) LocalGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.LocalGatewayIp }).(pulumi.StringOutput)
}

// Alibaba Cloud-Connected IPv6 Address.
func (o GetVirtualBorderRoutersRouterOutput) LocalIpv6GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.LocalIpv6GatewayIp }).(pulumi.StringOutput)
}

// Configure BFD packet reception interval of values include: 200~1000, unit: ms.
func (o GetVirtualBorderRoutersRouterOutput) MinRxInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) int { return v.MinRxInterval }).(pulumi.IntOutput)
}

// Configure BFD packet transmission interval maximum value: 200~1000, unit: ms.
func (o GetVirtualBorderRoutersRouterOutput) MinTxInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) int { return v.MinTxInterval }).(pulumi.IntOutput)
}

// The Billing of the Extended Time.
func (o GetVirtualBorderRoutersRouterOutput) PaymentVbrExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PaymentVbrExpireTime }).(pulumi.StringOutput)
}

// The Client-Side Interconnection IPv4 Address.
func (o GetVirtualBorderRoutersRouterOutput) PeerGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PeerGatewayIp }).(pulumi.StringOutput)
}

// The Client-Side Interconnection IPv6 Address.
func (o GetVirtualBorderRoutersRouterOutput) PeerIpv6GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PeerIpv6GatewayIp }).(pulumi.StringOutput)
}

// Alibaba Cloud-Connected IPv6 with Client-Side Interconnection IPv6 of Subnet Mask.
func (o GetVirtualBorderRoutersRouterOutput) PeeringIpv6SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PeeringIpv6SubnetMask }).(pulumi.StringOutput)
}

// Alibaba Cloud-Connected IPv4 and Client-Side Interconnection IPv4 of Subnet Mask.
func (o GetVirtualBorderRoutersRouterOutput) PeeringSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PeeringSubnetMask }).(pulumi.StringOutput)
}

// Physical Private Line Service Status Value Normal: Normal, financiallocked: If You Lock.
func (o GetVirtualBorderRoutersRouterOutput) PhysicalConnectionBusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PhysicalConnectionBusinessStatus }).(pulumi.StringOutput)
}

// The ID of the Physical Connection to Which the ID.
func (o GetVirtualBorderRoutersRouterOutput) PhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PhysicalConnectionId }).(pulumi.StringOutput)
}

// Physical Private Line Where the Account ID.
func (o GetVirtualBorderRoutersRouterOutput) PhysicalConnectionOwnerUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PhysicalConnectionOwnerUid }).(pulumi.StringOutput)
}

// Physical Private Line State.
func (o GetVirtualBorderRoutersRouterOutput) PhysicalConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.PhysicalConnectionStatus }).(pulumi.StringOutput)
}

// The Last from a Terminated State to the Active State of the Time.
func (o GetVirtualBorderRoutersRouterOutput) RecoveryTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.RecoveryTime }).(pulumi.StringOutput)
}

// Route Table ID.
func (o GetVirtualBorderRoutersRouterOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The VBR state.
func (o GetVirtualBorderRoutersRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.Status }).(pulumi.StringOutput)
}

// The Most Recent Was Aborted by the Time.
func (o GetVirtualBorderRoutersRouterOutput) TerminationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.TerminationTime }).(pulumi.StringOutput)
}

// VBR Type.
func (o GetVirtualBorderRoutersRouterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.Type }).(pulumi.StringOutput)
}

// The VBR ID.
func (o GetVirtualBorderRoutersRouterOutput) VirtualBorderRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.VirtualBorderRouterId }).(pulumi.StringOutput)
}

// The name of VBR. Length is from 2 to 128 characters, must start with a letter or the Chinese at the beginning can contain numbers, the underscore character (_) and dash (-). But do not start with http:// or https:// at the beginning.
func (o GetVirtualBorderRoutersRouterOutput) VirtualBorderRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.VirtualBorderRouterName }).(pulumi.StringOutput)
}

// The VLAN ID of the VBR. Value range: 0~2999.
func (o GetVirtualBorderRoutersRouterOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) int { return v.VlanId }).(pulumi.IntOutput)
}

// The ID of the Router Interface.
func (o GetVirtualBorderRoutersRouterOutput) VlanInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualBorderRoutersRouter) string { return v.VlanInterfaceId }).(pulumi.StringOutput)
}

type GetVirtualBorderRoutersRouterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualBorderRoutersRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualBorderRoutersRouter)(nil)).Elem()
}

func (o GetVirtualBorderRoutersRouterArrayOutput) ToGetVirtualBorderRoutersRouterArrayOutput() GetVirtualBorderRoutersRouterArrayOutput {
	return o
}

func (o GetVirtualBorderRoutersRouterArrayOutput) ToGetVirtualBorderRoutersRouterArrayOutputWithContext(ctx context.Context) GetVirtualBorderRoutersRouterArrayOutput {
	return o
}

func (o GetVirtualBorderRoutersRouterArrayOutput) Index(i pulumi.IntInput) GetVirtualBorderRoutersRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualBorderRoutersRouter {
		return vs[0].([]GetVirtualBorderRoutersRouter)[vs[1].(int)]
	}).(GetVirtualBorderRoutersRouterOutput)
}

type GetVirtualPhysicalConnectionsConnection struct {
	// The ID of the access point of the physical connection.
	AccessPointId string `pulumi:"accessPointId"`
	// The physical location where the physical connection access device is located.
	AdLocation string `pulumi:"adLocation"`
	// The bandwidth of the physical connection. Unit: Mbps.
	Bandwidth string `pulumi:"bandwidth"`
	// The commercial status of the physical line. Value:
	// - **Normal**: activated.
	// - **Financialized**: Arrears locked.
	// - **SecurityLocked**: locked for security reasons.
	BusinessStatus string `pulumi:"businessStatus"`
	// The circuit code provided by the operator for the physical connection.
	CircuitCode string `pulumi:"circuitCode"`
	// The creation time of the resource
	CreateTime string `pulumi:"createTime"`
	// The description of the physical connection.
	Description string `pulumi:"description"`
	// The opening time of the physical connection.
	EnabledTime string `pulumi:"enabledTime"`
	// The expiration time of the shared line.Time is expressed according to ISO8601 standard and UTC time is used. The format is: YYYY-MM-DDThh:mm:ssZ.
	EndTime string `pulumi:"endTime"`
	// The estimated bandwidth value of the shared line. The expected bandwidth value will not take effect until the payment is completed.Unit: **M** indicates Mbps,**G** indicates Gbps.
	ExpectSpec string `pulumi:"expectSpec"`
	// The ID of the Virtual Physical Connection.
	Id string `pulumi:"id"`
	// Operators that provide access to physical lines. Value:-**CT**: China Telecom.-**CU**: China Unicom.-**CM**: China Mobile.-**CO**: China Other.-**Equinix**:Equinix.-**Other**: Other abroad.
	LineOperator string `pulumi:"lineOperator"`
	// The state of LOA. Value:-**Applying**:LOA application.-**Accept**:LOA application passed.-**Available**:LOA is Available.-**Rejected**:LOA application Rejected.-**Completing**: The dedicated line is under construction.-**Complete**: The construction of the dedicated line is completed.-**Deleted**:LOA has been Deleted.
	LoaStatus string `pulumi:"loaStatus"`
	// The payment method of shared dedicated line. Value:-**PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.-**PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
	OrderMode string `pulumi:"orderMode"`
	// The ID of the Alibaba Cloud account (primary account) to which the physical connection belongs.
	ParentPhysicalConnectionAliUid string `pulumi:"parentPhysicalConnectionAliUid"`
	// The ID of the instance of the physical connection.
	ParentPhysicalConnectionId string `pulumi:"parentPhysicalConnectionId"`
	// The geographic location of the local data center.
	PeerLocation string `pulumi:"peerLocation"`
	// The port number of the physical connection device.
	PortNumber string `pulumi:"portNumber"`
	// Physical connection port type. Value:-**100Base-T**: 100 megabytes port.-**1000Base-T**: Gigabit port.-**1000Base-LX**: Gigabit single mode optical port (10km).-**10GBase-T**: 10 Gigabit port.-**10GBase-LR**: 10 Gigabit single mode optical port (10km).-**40GBase-LR**: 40 megabytes single-mode optical port.-**100GBase-LR**: 100,000 megabytes single-mode optical port.
	PortType string `pulumi:"portType"`
	// The ID of the redundant physical connection.
	RedundantPhysicalConnectionId string `pulumi:"redundantPhysicalConnectionId"`
	// The resource group id
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The bandwidth value of the shared line.Unit: **M** indicates Mbps,**G** indicates Gbps.
	Spec string `pulumi:"spec"`
	// The status of the resource
	Status string `pulumi:"status"`
	// The ID of the hosted connection
	VirtualPhysicalConnectionId string `pulumi:"virtualPhysicalConnectionId"`
	// The name of the physical connection.
	VirtualPhysicalConnectionName string `pulumi:"virtualPhysicalConnectionName"`
	// The business status of the shared line. Value:
	// - **Confirmed**: The shared line has been Confirmed to receive.
	// - **UnConfirmed**: The shared line has not been confirmed to be received.
	// - **Deleted**: The shared line has been Deleted.
	VirtualPhysicalConnectionStatus string `pulumi:"virtualPhysicalConnectionStatus"`
	// The VLAN ID of the shared leased line.
	VlanId int `pulumi:"vlanId"`
	// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
	VpconnAliUid string `pulumi:"vpconnAliUid"`
}

// GetVirtualPhysicalConnectionsConnectionInput is an input type that accepts GetVirtualPhysicalConnectionsConnectionArgs and GetVirtualPhysicalConnectionsConnectionOutput values.
// You can construct a concrete instance of `GetVirtualPhysicalConnectionsConnectionInput` via:
//
//	GetVirtualPhysicalConnectionsConnectionArgs{...}
type GetVirtualPhysicalConnectionsConnectionInput interface {
	pulumi.Input

	ToGetVirtualPhysicalConnectionsConnectionOutput() GetVirtualPhysicalConnectionsConnectionOutput
	ToGetVirtualPhysicalConnectionsConnectionOutputWithContext(context.Context) GetVirtualPhysicalConnectionsConnectionOutput
}

type GetVirtualPhysicalConnectionsConnectionArgs struct {
	// The ID of the access point of the physical connection.
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
	// The physical location where the physical connection access device is located.
	AdLocation pulumi.StringInput `pulumi:"adLocation"`
	// The bandwidth of the physical connection. Unit: Mbps.
	Bandwidth pulumi.StringInput `pulumi:"bandwidth"`
	// The commercial status of the physical line. Value:
	// - **Normal**: activated.
	// - **Financialized**: Arrears locked.
	// - **SecurityLocked**: locked for security reasons.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The circuit code provided by the operator for the physical connection.
	CircuitCode pulumi.StringInput `pulumi:"circuitCode"`
	// The creation time of the resource
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the physical connection.
	Description pulumi.StringInput `pulumi:"description"`
	// The opening time of the physical connection.
	EnabledTime pulumi.StringInput `pulumi:"enabledTime"`
	// The expiration time of the shared line.Time is expressed according to ISO8601 standard and UTC time is used. The format is: YYYY-MM-DDThh:mm:ssZ.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The estimated bandwidth value of the shared line. The expected bandwidth value will not take effect until the payment is completed.Unit: **M** indicates Mbps,**G** indicates Gbps.
	ExpectSpec pulumi.StringInput `pulumi:"expectSpec"`
	// The ID of the Virtual Physical Connection.
	Id pulumi.StringInput `pulumi:"id"`
	// Operators that provide access to physical lines. Value:-**CT**: China Telecom.-**CU**: China Unicom.-**CM**: China Mobile.-**CO**: China Other.-**Equinix**:Equinix.-**Other**: Other abroad.
	LineOperator pulumi.StringInput `pulumi:"lineOperator"`
	// The state of LOA. Value:-**Applying**:LOA application.-**Accept**:LOA application passed.-**Available**:LOA is Available.-**Rejected**:LOA application Rejected.-**Completing**: The dedicated line is under construction.-**Complete**: The construction of the dedicated line is completed.-**Deleted**:LOA has been Deleted.
	LoaStatus pulumi.StringInput `pulumi:"loaStatus"`
	// The payment method of shared dedicated line. Value:-**PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.-**PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
	OrderMode pulumi.StringInput `pulumi:"orderMode"`
	// The ID of the Alibaba Cloud account (primary account) to which the physical connection belongs.
	ParentPhysicalConnectionAliUid pulumi.StringInput `pulumi:"parentPhysicalConnectionAliUid"`
	// The ID of the instance of the physical connection.
	ParentPhysicalConnectionId pulumi.StringInput `pulumi:"parentPhysicalConnectionId"`
	// The geographic location of the local data center.
	PeerLocation pulumi.StringInput `pulumi:"peerLocation"`
	// The port number of the physical connection device.
	PortNumber pulumi.StringInput `pulumi:"portNumber"`
	// Physical connection port type. Value:-**100Base-T**: 100 megabytes port.-**1000Base-T**: Gigabit port.-**1000Base-LX**: Gigabit single mode optical port (10km).-**10GBase-T**: 10 Gigabit port.-**10GBase-LR**: 10 Gigabit single mode optical port (10km).-**40GBase-LR**: 40 megabytes single-mode optical port.-**100GBase-LR**: 100,000 megabytes single-mode optical port.
	PortType pulumi.StringInput `pulumi:"portType"`
	// The ID of the redundant physical connection.
	RedundantPhysicalConnectionId pulumi.StringInput `pulumi:"redundantPhysicalConnectionId"`
	// The resource group id
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The bandwidth value of the shared line.Unit: **M** indicates Mbps,**G** indicates Gbps.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the hosted connection
	VirtualPhysicalConnectionId pulumi.StringInput `pulumi:"virtualPhysicalConnectionId"`
	// The name of the physical connection.
	VirtualPhysicalConnectionName pulumi.StringInput `pulumi:"virtualPhysicalConnectionName"`
	// The business status of the shared line. Value:
	// - **Confirmed**: The shared line has been Confirmed to receive.
	// - **UnConfirmed**: The shared line has not been confirmed to be received.
	// - **Deleted**: The shared line has been Deleted.
	VirtualPhysicalConnectionStatus pulumi.StringInput `pulumi:"virtualPhysicalConnectionStatus"`
	// The VLAN ID of the shared leased line.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
	// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
	VpconnAliUid pulumi.StringInput `pulumi:"vpconnAliUid"`
}

func (GetVirtualPhysicalConnectionsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualPhysicalConnectionsConnection)(nil)).Elem()
}

func (i GetVirtualPhysicalConnectionsConnectionArgs) ToGetVirtualPhysicalConnectionsConnectionOutput() GetVirtualPhysicalConnectionsConnectionOutput {
	return i.ToGetVirtualPhysicalConnectionsConnectionOutputWithContext(context.Background())
}

func (i GetVirtualPhysicalConnectionsConnectionArgs) ToGetVirtualPhysicalConnectionsConnectionOutputWithContext(ctx context.Context) GetVirtualPhysicalConnectionsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualPhysicalConnectionsConnectionOutput)
}

// GetVirtualPhysicalConnectionsConnectionArrayInput is an input type that accepts GetVirtualPhysicalConnectionsConnectionArray and GetVirtualPhysicalConnectionsConnectionArrayOutput values.
// You can construct a concrete instance of `GetVirtualPhysicalConnectionsConnectionArrayInput` via:
//
//	GetVirtualPhysicalConnectionsConnectionArray{ GetVirtualPhysicalConnectionsConnectionArgs{...} }
type GetVirtualPhysicalConnectionsConnectionArrayInput interface {
	pulumi.Input

	ToGetVirtualPhysicalConnectionsConnectionArrayOutput() GetVirtualPhysicalConnectionsConnectionArrayOutput
	ToGetVirtualPhysicalConnectionsConnectionArrayOutputWithContext(context.Context) GetVirtualPhysicalConnectionsConnectionArrayOutput
}

type GetVirtualPhysicalConnectionsConnectionArray []GetVirtualPhysicalConnectionsConnectionInput

func (GetVirtualPhysicalConnectionsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualPhysicalConnectionsConnection)(nil)).Elem()
}

func (i GetVirtualPhysicalConnectionsConnectionArray) ToGetVirtualPhysicalConnectionsConnectionArrayOutput() GetVirtualPhysicalConnectionsConnectionArrayOutput {
	return i.ToGetVirtualPhysicalConnectionsConnectionArrayOutputWithContext(context.Background())
}

func (i GetVirtualPhysicalConnectionsConnectionArray) ToGetVirtualPhysicalConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetVirtualPhysicalConnectionsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualPhysicalConnectionsConnectionArrayOutput)
}

type GetVirtualPhysicalConnectionsConnectionOutput struct{ *pulumi.OutputState }

func (GetVirtualPhysicalConnectionsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualPhysicalConnectionsConnection)(nil)).Elem()
}

func (o GetVirtualPhysicalConnectionsConnectionOutput) ToGetVirtualPhysicalConnectionsConnectionOutput() GetVirtualPhysicalConnectionsConnectionOutput {
	return o
}

func (o GetVirtualPhysicalConnectionsConnectionOutput) ToGetVirtualPhysicalConnectionsConnectionOutputWithContext(ctx context.Context) GetVirtualPhysicalConnectionsConnectionOutput {
	return o
}

// The ID of the access point of the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.AccessPointId }).(pulumi.StringOutput)
}

// The physical location where the physical connection access device is located.
func (o GetVirtualPhysicalConnectionsConnectionOutput) AdLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.AdLocation }).(pulumi.StringOutput)
}

// The bandwidth of the physical connection. Unit: Mbps.
func (o GetVirtualPhysicalConnectionsConnectionOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// The commercial status of the physical line. Value:
// - **Normal**: activated.
// - **Financialized**: Arrears locked.
// - **SecurityLocked**: locked for security reasons.
func (o GetVirtualPhysicalConnectionsConnectionOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The circuit code provided by the operator for the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) CircuitCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.CircuitCode }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o GetVirtualPhysicalConnectionsConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.Description }).(pulumi.StringOutput)
}

// The opening time of the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) EnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.EnabledTime }).(pulumi.StringOutput)
}

// The expiration time of the shared line.Time is expressed according to ISO8601 standard and UTC time is used. The format is: YYYY-MM-DDThh:mm:ssZ.
func (o GetVirtualPhysicalConnectionsConnectionOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.EndTime }).(pulumi.StringOutput)
}

// The estimated bandwidth value of the shared line. The expected bandwidth value will not take effect until the payment is completed.Unit: **M** indicates Mbps,**G** indicates Gbps.
func (o GetVirtualPhysicalConnectionsConnectionOutput) ExpectSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.ExpectSpec }).(pulumi.StringOutput)
}

// The ID of the Virtual Physical Connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.Id }).(pulumi.StringOutput)
}

// Operators that provide access to physical lines. Value:-**CT**: China Telecom.-**CU**: China Unicom.-**CM**: China Mobile.-**CO**: China Other.-**Equinix**:Equinix.-**Other**: Other abroad.
func (o GetVirtualPhysicalConnectionsConnectionOutput) LineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.LineOperator }).(pulumi.StringOutput)
}

// The state of LOA. Value:-**Applying**:LOA application.-**Accept**:LOA application passed.-**Available**:LOA is Available.-**Rejected**:LOA application Rejected.-**Completing**: The dedicated line is under construction.-**Complete**: The construction of the dedicated line is completed.-**Deleted**:LOA has been Deleted.
func (o GetVirtualPhysicalConnectionsConnectionOutput) LoaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.LoaStatus }).(pulumi.StringOutput)
}

// The payment method of shared dedicated line. Value:-**PayByPhysicalConnectionOwner**: indicates that the owner of the physical line associated with the shared line pays.-**PayByVirtualPhysicalConnectionOwner**: indicates that the owner of the shared line pays.
func (o GetVirtualPhysicalConnectionsConnectionOutput) OrderMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.OrderMode }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account (primary account) to which the physical connection belongs.
func (o GetVirtualPhysicalConnectionsConnectionOutput) ParentPhysicalConnectionAliUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.ParentPhysicalConnectionAliUid }).(pulumi.StringOutput)
}

// The ID of the instance of the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) ParentPhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.ParentPhysicalConnectionId }).(pulumi.StringOutput)
}

// The geographic location of the local data center.
func (o GetVirtualPhysicalConnectionsConnectionOutput) PeerLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.PeerLocation }).(pulumi.StringOutput)
}

// The port number of the physical connection device.
func (o GetVirtualPhysicalConnectionsConnectionOutput) PortNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.PortNumber }).(pulumi.StringOutput)
}

// Physical connection port type. Value:-**100Base-T**: 100 megabytes port.-**1000Base-T**: Gigabit port.-**1000Base-LX**: Gigabit single mode optical port (10km).-**10GBase-T**: 10 Gigabit port.-**10GBase-LR**: 10 Gigabit single mode optical port (10km).-**40GBase-LR**: 40 megabytes single-mode optical port.-**100GBase-LR**: 100,000 megabytes single-mode optical port.
func (o GetVirtualPhysicalConnectionsConnectionOutput) PortType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.PortType }).(pulumi.StringOutput)
}

// The ID of the redundant physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) RedundantPhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.RedundantPhysicalConnectionId }).(pulumi.StringOutput)
}

// The resource group id
func (o GetVirtualPhysicalConnectionsConnectionOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The bandwidth value of the shared line.Unit: **M** indicates Mbps,**G** indicates Gbps.
func (o GetVirtualPhysicalConnectionsConnectionOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the resource
func (o GetVirtualPhysicalConnectionsConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the hosted connection
func (o GetVirtualPhysicalConnectionsConnectionOutput) VirtualPhysicalConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.VirtualPhysicalConnectionId }).(pulumi.StringOutput)
}

// The name of the physical connection.
func (o GetVirtualPhysicalConnectionsConnectionOutput) VirtualPhysicalConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.VirtualPhysicalConnectionName }).(pulumi.StringOutput)
}

// The business status of the shared line. Value:
// - **Confirmed**: The shared line has been Confirmed to receive.
// - **UnConfirmed**: The shared line has not been confirmed to be received.
// - **Deleted**: The shared line has been Deleted.
func (o GetVirtualPhysicalConnectionsConnectionOutput) VirtualPhysicalConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.VirtualPhysicalConnectionStatus }).(pulumi.StringOutput)
}

// The VLAN ID of the shared leased line.
func (o GetVirtualPhysicalConnectionsConnectionOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) int { return v.VlanId }).(pulumi.IntOutput)
}

// The ID of the Alibaba Cloud account (primary account) of the owner of the shared line.
func (o GetVirtualPhysicalConnectionsConnectionOutput) VpconnAliUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualPhysicalConnectionsConnection) string { return v.VpconnAliUid }).(pulumi.StringOutput)
}

type GetVirtualPhysicalConnectionsConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualPhysicalConnectionsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualPhysicalConnectionsConnection)(nil)).Elem()
}

func (o GetVirtualPhysicalConnectionsConnectionArrayOutput) ToGetVirtualPhysicalConnectionsConnectionArrayOutput() GetVirtualPhysicalConnectionsConnectionArrayOutput {
	return o
}

func (o GetVirtualPhysicalConnectionsConnectionArrayOutput) ToGetVirtualPhysicalConnectionsConnectionArrayOutputWithContext(ctx context.Context) GetVirtualPhysicalConnectionsConnectionArrayOutput {
	return o
}

func (o GetVirtualPhysicalConnectionsConnectionArrayOutput) Index(i pulumi.IntInput) GetVirtualPhysicalConnectionsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualPhysicalConnectionsConnection {
		return vs[0].([]GetVirtualPhysicalConnectionsConnection)[vs[1].(int)]
	}).(GetVirtualPhysicalConnectionsConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointsPointInput)(nil)).Elem(), GetAccessPointsPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointsPointArrayInput)(nil)).Elem(), GetAccessPointsPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointsPointAccessPointFeatureModelInput)(nil)).Elem(), GetAccessPointsPointAccessPointFeatureModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointsPointAccessPointFeatureModelArrayInput)(nil)).Elem(), GetAccessPointsPointAccessPointFeatureModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGrantRuleToCensCenInput)(nil)).Elem(), GetGrantRuleToCensCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGrantRuleToCensCenArrayInput)(nil)).Elem(), GetGrantRuleToCensCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPhysicalConnectionsConnectionInput)(nil)).Elem(), GetPhysicalConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPhysicalConnectionsConnectionArrayInput)(nil)).Elem(), GetPhysicalConnectionsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesFilterInput)(nil)).Elem(), GetRouterInterfacesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesFilterArrayInput)(nil)).Elem(), GetRouterInterfacesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesInterfaceInput)(nil)).Elem(), GetRouterInterfacesInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouterInterfacesInterfaceArrayInput)(nil)).Elem(), GetRouterInterfacesInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbrPconnAssociationsAssociationInput)(nil)).Elem(), GetVbrPconnAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVbrPconnAssociationsAssociationArrayInput)(nil)).Elem(), GetVbrPconnAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualBorderRoutersFilterInput)(nil)).Elem(), GetVirtualBorderRoutersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualBorderRoutersFilterArrayInput)(nil)).Elem(), GetVirtualBorderRoutersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualBorderRoutersRouterInput)(nil)).Elem(), GetVirtualBorderRoutersRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualBorderRoutersRouterArrayInput)(nil)).Elem(), GetVirtualBorderRoutersRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualPhysicalConnectionsConnectionInput)(nil)).Elem(), GetVirtualPhysicalConnectionsConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualPhysicalConnectionsConnectionArrayInput)(nil)).Elem(), GetVirtualPhysicalConnectionsConnectionArray{})
	pulumi.RegisterOutputType(GetAccessPointsPointOutput{})
	pulumi.RegisterOutputType(GetAccessPointsPointArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPointsPointAccessPointFeatureModelOutput{})
	pulumi.RegisterOutputType(GetAccessPointsPointAccessPointFeatureModelArrayOutput{})
	pulumi.RegisterOutputType(GetGrantRuleToCensCenOutput{})
	pulumi.RegisterOutputType(GetGrantRuleToCensCenArrayOutput{})
	pulumi.RegisterOutputType(GetPhysicalConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetPhysicalConnectionsConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(GetRouterInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetVbrPconnAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(GetVbrPconnAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualBorderRoutersFilterOutput{})
	pulumi.RegisterOutputType(GetVirtualBorderRoutersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualBorderRoutersRouterOutput{})
	pulumi.RegisterOutputType(GetVirtualBorderRoutersRouterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualPhysicalConnectionsConnectionOutput{})
	pulumi.RegisterOutputType(GetVirtualPhysicalConnectionsConnectionArrayOutput{})
}
