// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package expressconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Express Connect Router Express Connect Router Vbr Child Instance resource.
//
// For information about Express Connect Router Express Connect Router Vbr Child Instance and how to use it, see [What is Express Connect Router Vbr Child Instance](https://next.api.alibabacloud.com/api/ExpressConnectRouter/2023-09-01/AttachExpressConnectRouterChildInstance).
//
// > **NOTE:** Available since v1.224.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/expressconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			nameRegex, err := expressconnect.GetPhysicalConnections(ctx, &expressconnect.GetPhysicalConnectionsArgs{
//				NameRegex: pulumi.StringRef("^preserved-NODELETING"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultydbbk3, err := expressconnect.NewVirtualBorderRouter(ctx, "defaultydbbk3", &expressconnect.VirtualBorderRouterArgs{
//				PhysicalConnectionId: pulumi.String(nameRegex.Connections[0].Id),
//				VlanId:               pulumi.Int(1000),
//				PeerGatewayIp:        pulumi.String("192.168.254.2"),
//				PeeringSubnetMask:    pulumi.String("255.255.255.0"),
//				LocalGatewayIp:       pulumi.String("192.168.254.1"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultAAlhUy, err := expressconnect.NewRouterExpressConnectRouter(ctx, "defaultAAlhUy", &expressconnect.RouterExpressConnectRouterArgs{
//				AlibabaSideAsn: pulumi.Int(65532),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = expressconnect.NewRouterVbrChildInstance(ctx, "default", &expressconnect.RouterVbrChildInstanceArgs{
//				ChildInstanceId:       defaultydbbk3.ID(),
//				ChildInstanceRegionId: pulumi.String("cn-hangzhou"),
//				EcrId:                 defaultAAlhUy.ID(),
//				ChildInstanceType:     pulumi.String("VBR"),
//				ChildInstanceOwnerId:  pulumi.String(current.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Express Connect Router Express Connect Router Vbr Child Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:expressconnect/routerVbrChildInstance:RouterVbrChildInstance example <ecr_id>:<child_instance_id>:<child_instance_type>
// ```
type RouterVbrChildInstance struct {
	pulumi.CustomResourceState

	// The ID of the leased line gateway subinstance.
	ChildInstanceId pulumi.StringOutput `pulumi:"childInstanceId"`
	// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
	//
	// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
	ChildInstanceOwnerId pulumi.StringOutput `pulumi:"childInstanceOwnerId"`
	// Region of the leased line gateway sub-instance
	ChildInstanceRegionId pulumi.StringOutput `pulumi:"childInstanceRegionId"`
	// The type of the network instance. Value: `VBR`: VBR instance.
	ChildInstanceType pulumi.StringOutput `pulumi:"childInstanceType"`
	// The creation time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Resource attribute fields that represent descriptive information
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the representative leased line gateway instance.
	EcrId pulumi.StringOutput `pulumi:"ecrId"`
	// Binding relationship status of leased line gateway subinstances.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewRouterVbrChildInstance registers a new resource with the given unique name, arguments, and options.
func NewRouterVbrChildInstance(ctx *pulumi.Context,
	name string, args *RouterVbrChildInstanceArgs, opts ...pulumi.ResourceOption) (*RouterVbrChildInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChildInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ChildInstanceId'")
	}
	if args.ChildInstanceRegionId == nil {
		return nil, errors.New("invalid value for required argument 'ChildInstanceRegionId'")
	}
	if args.ChildInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'ChildInstanceType'")
	}
	if args.EcrId == nil {
		return nil, errors.New("invalid value for required argument 'EcrId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouterVbrChildInstance
	err := ctx.RegisterResource("alicloud:expressconnect/routerVbrChildInstance:RouterVbrChildInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouterVbrChildInstance gets an existing RouterVbrChildInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouterVbrChildInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouterVbrChildInstanceState, opts ...pulumi.ResourceOption) (*RouterVbrChildInstance, error) {
	var resource RouterVbrChildInstance
	err := ctx.ReadResource("alicloud:expressconnect/routerVbrChildInstance:RouterVbrChildInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouterVbrChildInstance resources.
type routerVbrChildInstanceState struct {
	// The ID of the leased line gateway subinstance.
	ChildInstanceId *string `pulumi:"childInstanceId"`
	// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
	//
	// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
	ChildInstanceOwnerId *string `pulumi:"childInstanceOwnerId"`
	// Region of the leased line gateway sub-instance
	ChildInstanceRegionId *string `pulumi:"childInstanceRegionId"`
	// The type of the network instance. Value: `VBR`: VBR instance.
	ChildInstanceType *string `pulumi:"childInstanceType"`
	// The creation time of the resource.
	CreateTime *string `pulumi:"createTime"`
	// Resource attribute fields that represent descriptive information
	Description *string `pulumi:"description"`
	// ID of the representative leased line gateway instance.
	EcrId *string `pulumi:"ecrId"`
	// Binding relationship status of leased line gateway subinstances.
	Status *string `pulumi:"status"`
}

type RouterVbrChildInstanceState struct {
	// The ID of the leased line gateway subinstance.
	ChildInstanceId pulumi.StringPtrInput
	// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
	//
	// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
	ChildInstanceOwnerId pulumi.StringPtrInput
	// Region of the leased line gateway sub-instance
	ChildInstanceRegionId pulumi.StringPtrInput
	// The type of the network instance. Value: `VBR`: VBR instance.
	ChildInstanceType pulumi.StringPtrInput
	// The creation time of the resource.
	CreateTime pulumi.StringPtrInput
	// Resource attribute fields that represent descriptive information
	Description pulumi.StringPtrInput
	// ID of the representative leased line gateway instance.
	EcrId pulumi.StringPtrInput
	// Binding relationship status of leased line gateway subinstances.
	Status pulumi.StringPtrInput
}

func (RouterVbrChildInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*routerVbrChildInstanceState)(nil)).Elem()
}

type routerVbrChildInstanceArgs struct {
	// The ID of the leased line gateway subinstance.
	ChildInstanceId string `pulumi:"childInstanceId"`
	// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
	//
	// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
	ChildInstanceOwnerId *string `pulumi:"childInstanceOwnerId"`
	// Region of the leased line gateway sub-instance
	ChildInstanceRegionId string `pulumi:"childInstanceRegionId"`
	// The type of the network instance. Value: `VBR`: VBR instance.
	ChildInstanceType string `pulumi:"childInstanceType"`
	// Resource attribute fields that represent descriptive information
	Description *string `pulumi:"description"`
	// ID of the representative leased line gateway instance.
	EcrId string `pulumi:"ecrId"`
}

// The set of arguments for constructing a RouterVbrChildInstance resource.
type RouterVbrChildInstanceArgs struct {
	// The ID of the leased line gateway subinstance.
	ChildInstanceId pulumi.StringInput
	// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
	//
	// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
	ChildInstanceOwnerId pulumi.StringPtrInput
	// Region of the leased line gateway sub-instance
	ChildInstanceRegionId pulumi.StringInput
	// The type of the network instance. Value: `VBR`: VBR instance.
	ChildInstanceType pulumi.StringInput
	// Resource attribute fields that represent descriptive information
	Description pulumi.StringPtrInput
	// ID of the representative leased line gateway instance.
	EcrId pulumi.StringInput
}

func (RouterVbrChildInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routerVbrChildInstanceArgs)(nil)).Elem()
}

type RouterVbrChildInstanceInput interface {
	pulumi.Input

	ToRouterVbrChildInstanceOutput() RouterVbrChildInstanceOutput
	ToRouterVbrChildInstanceOutputWithContext(ctx context.Context) RouterVbrChildInstanceOutput
}

func (*RouterVbrChildInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterVbrChildInstance)(nil)).Elem()
}

func (i *RouterVbrChildInstance) ToRouterVbrChildInstanceOutput() RouterVbrChildInstanceOutput {
	return i.ToRouterVbrChildInstanceOutputWithContext(context.Background())
}

func (i *RouterVbrChildInstance) ToRouterVbrChildInstanceOutputWithContext(ctx context.Context) RouterVbrChildInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterVbrChildInstanceOutput)
}

// RouterVbrChildInstanceArrayInput is an input type that accepts RouterVbrChildInstanceArray and RouterVbrChildInstanceArrayOutput values.
// You can construct a concrete instance of `RouterVbrChildInstanceArrayInput` via:
//
//	RouterVbrChildInstanceArray{ RouterVbrChildInstanceArgs{...} }
type RouterVbrChildInstanceArrayInput interface {
	pulumi.Input

	ToRouterVbrChildInstanceArrayOutput() RouterVbrChildInstanceArrayOutput
	ToRouterVbrChildInstanceArrayOutputWithContext(context.Context) RouterVbrChildInstanceArrayOutput
}

type RouterVbrChildInstanceArray []RouterVbrChildInstanceInput

func (RouterVbrChildInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterVbrChildInstance)(nil)).Elem()
}

func (i RouterVbrChildInstanceArray) ToRouterVbrChildInstanceArrayOutput() RouterVbrChildInstanceArrayOutput {
	return i.ToRouterVbrChildInstanceArrayOutputWithContext(context.Background())
}

func (i RouterVbrChildInstanceArray) ToRouterVbrChildInstanceArrayOutputWithContext(ctx context.Context) RouterVbrChildInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterVbrChildInstanceArrayOutput)
}

// RouterVbrChildInstanceMapInput is an input type that accepts RouterVbrChildInstanceMap and RouterVbrChildInstanceMapOutput values.
// You can construct a concrete instance of `RouterVbrChildInstanceMapInput` via:
//
//	RouterVbrChildInstanceMap{ "key": RouterVbrChildInstanceArgs{...} }
type RouterVbrChildInstanceMapInput interface {
	pulumi.Input

	ToRouterVbrChildInstanceMapOutput() RouterVbrChildInstanceMapOutput
	ToRouterVbrChildInstanceMapOutputWithContext(context.Context) RouterVbrChildInstanceMapOutput
}

type RouterVbrChildInstanceMap map[string]RouterVbrChildInstanceInput

func (RouterVbrChildInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterVbrChildInstance)(nil)).Elem()
}

func (i RouterVbrChildInstanceMap) ToRouterVbrChildInstanceMapOutput() RouterVbrChildInstanceMapOutput {
	return i.ToRouterVbrChildInstanceMapOutputWithContext(context.Background())
}

func (i RouterVbrChildInstanceMap) ToRouterVbrChildInstanceMapOutputWithContext(ctx context.Context) RouterVbrChildInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterVbrChildInstanceMapOutput)
}

type RouterVbrChildInstanceOutput struct{ *pulumi.OutputState }

func (RouterVbrChildInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterVbrChildInstance)(nil)).Elem()
}

func (o RouterVbrChildInstanceOutput) ToRouterVbrChildInstanceOutput() RouterVbrChildInstanceOutput {
	return o
}

func (o RouterVbrChildInstanceOutput) ToRouterVbrChildInstanceOutputWithContext(ctx context.Context) RouterVbrChildInstanceOutput {
	return o
}

// The ID of the leased line gateway subinstance.
func (o RouterVbrChildInstanceOutput) ChildInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.ChildInstanceId }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account (primary account) to which the VBR instance belongs.
//
// > **NOTE:**  This parameter is required if you want to load a cross-account network instance.
func (o RouterVbrChildInstanceOutput) ChildInstanceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.ChildInstanceOwnerId }).(pulumi.StringOutput)
}

// Region of the leased line gateway sub-instance
func (o RouterVbrChildInstanceOutput) ChildInstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.ChildInstanceRegionId }).(pulumi.StringOutput)
}

// The type of the network instance. Value: `VBR`: VBR instance.
func (o RouterVbrChildInstanceOutput) ChildInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.ChildInstanceType }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o RouterVbrChildInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Resource attribute fields that represent descriptive information
func (o RouterVbrChildInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the representative leased line gateway instance.
func (o RouterVbrChildInstanceOutput) EcrId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.EcrId }).(pulumi.StringOutput)
}

// Binding relationship status of leased line gateway subinstances.
func (o RouterVbrChildInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RouterVbrChildInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type RouterVbrChildInstanceArrayOutput struct{ *pulumi.OutputState }

func (RouterVbrChildInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouterVbrChildInstance)(nil)).Elem()
}

func (o RouterVbrChildInstanceArrayOutput) ToRouterVbrChildInstanceArrayOutput() RouterVbrChildInstanceArrayOutput {
	return o
}

func (o RouterVbrChildInstanceArrayOutput) ToRouterVbrChildInstanceArrayOutputWithContext(ctx context.Context) RouterVbrChildInstanceArrayOutput {
	return o
}

func (o RouterVbrChildInstanceArrayOutput) Index(i pulumi.IntInput) RouterVbrChildInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouterVbrChildInstance {
		return vs[0].([]*RouterVbrChildInstance)[vs[1].(int)]
	}).(RouterVbrChildInstanceOutput)
}

type RouterVbrChildInstanceMapOutput struct{ *pulumi.OutputState }

func (RouterVbrChildInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouterVbrChildInstance)(nil)).Elem()
}

func (o RouterVbrChildInstanceMapOutput) ToRouterVbrChildInstanceMapOutput() RouterVbrChildInstanceMapOutput {
	return o
}

func (o RouterVbrChildInstanceMapOutput) ToRouterVbrChildInstanceMapOutputWithContext(ctx context.Context) RouterVbrChildInstanceMapOutput {
	return o
}

func (o RouterVbrChildInstanceMapOutput) MapIndex(k pulumi.StringInput) RouterVbrChildInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouterVbrChildInstance {
		return vs[0].(map[string]*RouterVbrChildInstance)[vs[1].(string)]
	}).(RouterVbrChildInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouterVbrChildInstanceInput)(nil)).Elem(), &RouterVbrChildInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterVbrChildInstanceArrayInput)(nil)).Elem(), RouterVbrChildInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterVbrChildInstanceMapInput)(nil)).Elem(), RouterVbrChildInstanceMap{})
	pulumi.RegisterOutputType(RouterVbrChildInstanceOutput{})
	pulumi.RegisterOutputType(RouterVbrChildInstanceArrayOutput{})
	pulumi.RegisterOutputType(RouterVbrChildInstanceMapOutput{})
}
