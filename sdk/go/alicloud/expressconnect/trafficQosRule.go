// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package expressconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Express Connect Traffic Qos Rule resource. Express Connect Traffic QoS Rule.
//
// For information about Express Connect Traffic Qos Rule and how to use it, see [What is Traffic Qos Rule](https://next.api.alibabacloud.com/document/Vpc/2016-04-28/CreateExpressConnectTrafficQosRule).
//
// > **NOTE:** Available since v1.224.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/expressconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := expressconnect.GetPhysicalConnections(ctx, &expressconnect.GetPhysicalConnectionsArgs{
//				NameRegex: pulumi.StringRef("preserved-NODELETING"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			createQos, err := expressconnect.NewTrafficQos(ctx, "createQos", &expressconnect.TrafficQosArgs{
//				QosName:        pulumi.String(name),
//				QosDescription: pulumi.String("terraform-example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = expressconnect.NewTrafficQosAssociation(ctx, "associateQos", &expressconnect.TrafficQosAssociationArgs{
//				InstanceId:   pulumi.String(_default.Ids[1]),
//				QosId:        createQos.ID(),
//				InstanceType: pulumi.String("PHYSICALCONNECTION"),
//			})
//			if err != nil {
//				return err
//			}
//			createQosQueue, err := expressconnect.NewTrafficQosQueue(ctx, "createQosQueue", &expressconnect.TrafficQosQueueArgs{
//				QosId:            createQos.ID(),
//				BandwidthPercent: pulumi.String("60"),
//				QueueDescription: pulumi.String("terraform-example"),
//				QueueName:        pulumi.String(name),
//				QueueType:        pulumi.String("Medium"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = expressconnect.NewTrafficQosRule(ctx, "default", &expressconnect.TrafficQosRuleArgs{
//				RuleDescription: pulumi.String("terraform-example"),
//				Priority:        pulumi.Int(1),
//				Protocol:        pulumi.String("ALL"),
//				SrcPortRange:    pulumi.String("-1/-1"),
//				DstIpv6Cidr:     pulumi.String("2001:db8:1234:5678::/64"),
//				SrcIpv6Cidr:     pulumi.String("2001:db8:1234:5678::/64"),
//				DstPortRange:    pulumi.String("-1/-1"),
//				RemarkingDscp:   pulumi.Int(-1),
//				QueueId:         createQosQueue.QueueId,
//				QosId:           createQos.ID(),
//				MatchDscp:       pulumi.Int(-1),
//				RuleName:        pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Express Connect Traffic Qos Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:expressconnect/trafficQosRule:TrafficQosRule example <qos_id>:<queue_id>:<rule_id>
// ```
type TrafficQosRule struct {
	pulumi.CustomResourceState

	// The traffic of the QoS rule matches the Destination IPv4 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	DstCidr pulumi.StringPtrOutput `pulumi:"dstCidr"`
	// The QoS rule traffic matches the Destination IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	DstIpv6Cidr pulumi.StringPtrOutput `pulumi:"dstIpv6Cidr"`
	// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
	// - **ALL**:-1/-1, not editable.
	// - **ICMP(IPv4)**:-1/-1, non-editable.
	// - **ICMPv6(IPv6)**:-1/-1, non-editable.
	// - **TCP**:-1/-1, editable.
	// - **UDP**:-1/-1, editable.
	// - **GRE**:-1/-1, not editable.
	// - **SSH**:22/22, not editable.
	// - **Telnet**:23/23, not editable.
	// - **HTTP**:80/80, non-editable.
	// - **HTTPS**:443/443, which cannot be edited.
	// - **MS SQL**:1443/1443, which cannot be edited.
	// - **Oracle**:1521/1521, non-editable.
	// - **MySql**:3306/3306, non-editable.
	// - **RDP**:3389/3389, non-editable.
	// - **PostgreSQL**:5432/5432, non-editable.
	// - **Redis**:6379/6379, non-editable.
	DstPortRange pulumi.StringOutput `pulumi:"dstPortRange"`
	// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
	MatchDscp pulumi.IntOutput `pulumi:"matchDscp"`
	// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// QoS rule protocol type, value:
	// - **ALL**
	// - **ICMP(IPv4)**
	// - **ICMPv6(IPv6)* *
	// - **TCP**
	// - **UDP**
	// - **GRE**
	// - **SSH**
	// - **Telnet**
	// - **HTTP**
	// - **HTTPS**
	// - **MS SQL**
	// - **Oracle**
	// - **MySql**
	// - **RDP**
	// - **PostgreSQL**
	// - **Redis**.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The QoS policy ID.
	QosId pulumi.StringOutput `pulumi:"qosId"`
	// The QoS queue ID.
	QueueId pulumi.StringOutput `pulumi:"queueId"`
	// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
	RemarkingDscp pulumi.IntOutput `pulumi:"remarkingDscp"`
	// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	RuleDescription pulumi.StringPtrOutput `pulumi:"ruleDescription"`
	// The ID of the QoS rule.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// The QoS rule traffic matches the source IPv4 CIDR block.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	SrcCidr pulumi.StringPtrOutput `pulumi:"srcCidr"`
	// The QoS rule traffic matches the source IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	SrcIpv6Cidr pulumi.StringPtrOutput `pulumi:"srcIpv6Cidr"`
	// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
	SrcPortRange pulumi.StringOutput `pulumi:"srcPortRange"`
	// The status of the QoS rule. Value:
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewTrafficQosRule registers a new resource with the given unique name, arguments, and options.
func NewTrafficQosRule(ctx *pulumi.Context,
	name string, args *TrafficQosRuleArgs, opts ...pulumi.ResourceOption) (*TrafficQosRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.QosId == nil {
		return nil, errors.New("invalid value for required argument 'QosId'")
	}
	if args.QueueId == nil {
		return nil, errors.New("invalid value for required argument 'QueueId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficQosRule
	err := ctx.RegisterResource("alicloud:expressconnect/trafficQosRule:TrafficQosRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficQosRule gets an existing TrafficQosRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficQosRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficQosRuleState, opts ...pulumi.ResourceOption) (*TrafficQosRule, error) {
	var resource TrafficQosRule
	err := ctx.ReadResource("alicloud:expressconnect/trafficQosRule:TrafficQosRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficQosRule resources.
type trafficQosRuleState struct {
	// The traffic of the QoS rule matches the Destination IPv4 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	DstCidr *string `pulumi:"dstCidr"`
	// The QoS rule traffic matches the Destination IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	DstIpv6Cidr *string `pulumi:"dstIpv6Cidr"`
	// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
	// - **ALL**:-1/-1, not editable.
	// - **ICMP(IPv4)**:-1/-1, non-editable.
	// - **ICMPv6(IPv6)**:-1/-1, non-editable.
	// - **TCP**:-1/-1, editable.
	// - **UDP**:-1/-1, editable.
	// - **GRE**:-1/-1, not editable.
	// - **SSH**:22/22, not editable.
	// - **Telnet**:23/23, not editable.
	// - **HTTP**:80/80, non-editable.
	// - **HTTPS**:443/443, which cannot be edited.
	// - **MS SQL**:1443/1443, which cannot be edited.
	// - **Oracle**:1521/1521, non-editable.
	// - **MySql**:3306/3306, non-editable.
	// - **RDP**:3389/3389, non-editable.
	// - **PostgreSQL**:5432/5432, non-editable.
	// - **Redis**:6379/6379, non-editable.
	DstPortRange *string `pulumi:"dstPortRange"`
	// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
	MatchDscp *int `pulumi:"matchDscp"`
	// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
	Priority *int `pulumi:"priority"`
	// QoS rule protocol type, value:
	// - **ALL**
	// - **ICMP(IPv4)**
	// - **ICMPv6(IPv6)* *
	// - **TCP**
	// - **UDP**
	// - **GRE**
	// - **SSH**
	// - **Telnet**
	// - **HTTP**
	// - **HTTPS**
	// - **MS SQL**
	// - **Oracle**
	// - **MySql**
	// - **RDP**
	// - **PostgreSQL**
	// - **Redis**.
	Protocol *string `pulumi:"protocol"`
	// The QoS policy ID.
	QosId *string `pulumi:"qosId"`
	// The QoS queue ID.
	QueueId *string `pulumi:"queueId"`
	// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
	RemarkingDscp *int `pulumi:"remarkingDscp"`
	// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	RuleDescription *string `pulumi:"ruleDescription"`
	// The ID of the QoS rule.
	RuleId *string `pulumi:"ruleId"`
	// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	RuleName *string `pulumi:"ruleName"`
	// The QoS rule traffic matches the source IPv4 CIDR block.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	SrcCidr *string `pulumi:"srcCidr"`
	// The QoS rule traffic matches the source IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	SrcIpv6Cidr *string `pulumi:"srcIpv6Cidr"`
	// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
	SrcPortRange *string `pulumi:"srcPortRange"`
	// The status of the QoS rule. Value:
	Status *string `pulumi:"status"`
}

type TrafficQosRuleState struct {
	// The traffic of the QoS rule matches the Destination IPv4 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	DstCidr pulumi.StringPtrInput
	// The QoS rule traffic matches the Destination IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	DstIpv6Cidr pulumi.StringPtrInput
	// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
	// - **ALL**:-1/-1, not editable.
	// - **ICMP(IPv4)**:-1/-1, non-editable.
	// - **ICMPv6(IPv6)**:-1/-1, non-editable.
	// - **TCP**:-1/-1, editable.
	// - **UDP**:-1/-1, editable.
	// - **GRE**:-1/-1, not editable.
	// - **SSH**:22/22, not editable.
	// - **Telnet**:23/23, not editable.
	// - **HTTP**:80/80, non-editable.
	// - **HTTPS**:443/443, which cannot be edited.
	// - **MS SQL**:1443/1443, which cannot be edited.
	// - **Oracle**:1521/1521, non-editable.
	// - **MySql**:3306/3306, non-editable.
	// - **RDP**:3389/3389, non-editable.
	// - **PostgreSQL**:5432/5432, non-editable.
	// - **Redis**:6379/6379, non-editable.
	DstPortRange pulumi.StringPtrInput
	// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
	MatchDscp pulumi.IntPtrInput
	// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
	Priority pulumi.IntPtrInput
	// QoS rule protocol type, value:
	// - **ALL**
	// - **ICMP(IPv4)**
	// - **ICMPv6(IPv6)* *
	// - **TCP**
	// - **UDP**
	// - **GRE**
	// - **SSH**
	// - **Telnet**
	// - **HTTP**
	// - **HTTPS**
	// - **MS SQL**
	// - **Oracle**
	// - **MySql**
	// - **RDP**
	// - **PostgreSQL**
	// - **Redis**.
	Protocol pulumi.StringPtrInput
	// The QoS policy ID.
	QosId pulumi.StringPtrInput
	// The QoS queue ID.
	QueueId pulumi.StringPtrInput
	// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
	RemarkingDscp pulumi.IntPtrInput
	// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	RuleDescription pulumi.StringPtrInput
	// The ID of the QoS rule.
	RuleId pulumi.StringPtrInput
	// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	RuleName pulumi.StringPtrInput
	// The QoS rule traffic matches the source IPv4 CIDR block.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	SrcCidr pulumi.StringPtrInput
	// The QoS rule traffic matches the source IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	SrcIpv6Cidr pulumi.StringPtrInput
	// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
	SrcPortRange pulumi.StringPtrInput
	// The status of the QoS rule. Value:
	Status pulumi.StringPtrInput
}

func (TrafficQosRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficQosRuleState)(nil)).Elem()
}

type trafficQosRuleArgs struct {
	// The traffic of the QoS rule matches the Destination IPv4 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	DstCidr *string `pulumi:"dstCidr"`
	// The QoS rule traffic matches the Destination IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	DstIpv6Cidr *string `pulumi:"dstIpv6Cidr"`
	// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
	// - **ALL**:-1/-1, not editable.
	// - **ICMP(IPv4)**:-1/-1, non-editable.
	// - **ICMPv6(IPv6)**:-1/-1, non-editable.
	// - **TCP**:-1/-1, editable.
	// - **UDP**:-1/-1, editable.
	// - **GRE**:-1/-1, not editable.
	// - **SSH**:22/22, not editable.
	// - **Telnet**:23/23, not editable.
	// - **HTTP**:80/80, non-editable.
	// - **HTTPS**:443/443, which cannot be edited.
	// - **MS SQL**:1443/1443, which cannot be edited.
	// - **Oracle**:1521/1521, non-editable.
	// - **MySql**:3306/3306, non-editable.
	// - **RDP**:3389/3389, non-editable.
	// - **PostgreSQL**:5432/5432, non-editable.
	// - **Redis**:6379/6379, non-editable.
	DstPortRange *string `pulumi:"dstPortRange"`
	// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
	MatchDscp *int `pulumi:"matchDscp"`
	// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
	Priority int `pulumi:"priority"`
	// QoS rule protocol type, value:
	// - **ALL**
	// - **ICMP(IPv4)**
	// - **ICMPv6(IPv6)* *
	// - **TCP**
	// - **UDP**
	// - **GRE**
	// - **SSH**
	// - **Telnet**
	// - **HTTP**
	// - **HTTPS**
	// - **MS SQL**
	// - **Oracle**
	// - **MySql**
	// - **RDP**
	// - **PostgreSQL**
	// - **Redis**.
	Protocol string `pulumi:"protocol"`
	// The QoS policy ID.
	QosId string `pulumi:"qosId"`
	// The QoS queue ID.
	QueueId string `pulumi:"queueId"`
	// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
	RemarkingDscp *int `pulumi:"remarkingDscp"`
	// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	RuleDescription *string `pulumi:"ruleDescription"`
	// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	RuleName *string `pulumi:"ruleName"`
	// The QoS rule traffic matches the source IPv4 CIDR block.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	SrcCidr *string `pulumi:"srcCidr"`
	// The QoS rule traffic matches the source IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	SrcIpv6Cidr *string `pulumi:"srcIpv6Cidr"`
	// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
	SrcPortRange *string `pulumi:"srcPortRange"`
}

// The set of arguments for constructing a TrafficQosRule resource.
type TrafficQosRuleArgs struct {
	// The traffic of the QoS rule matches the Destination IPv4 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	DstCidr pulumi.StringPtrInput
	// The QoS rule traffic matches the Destination IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	DstIpv6Cidr pulumi.StringPtrInput
	// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
	// - **ALL**:-1/-1, not editable.
	// - **ICMP(IPv4)**:-1/-1, non-editable.
	// - **ICMPv6(IPv6)**:-1/-1, non-editable.
	// - **TCP**:-1/-1, editable.
	// - **UDP**:-1/-1, editable.
	// - **GRE**:-1/-1, not editable.
	// - **SSH**:22/22, not editable.
	// - **Telnet**:23/23, not editable.
	// - **HTTP**:80/80, non-editable.
	// - **HTTPS**:443/443, which cannot be edited.
	// - **MS SQL**:1443/1443, which cannot be edited.
	// - **Oracle**:1521/1521, non-editable.
	// - **MySql**:3306/3306, non-editable.
	// - **RDP**:3389/3389, non-editable.
	// - **PostgreSQL**:5432/5432, non-editable.
	// - **Redis**:6379/6379, non-editable.
	DstPortRange pulumi.StringPtrInput
	// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
	MatchDscp pulumi.IntPtrInput
	// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
	Priority pulumi.IntInput
	// QoS rule protocol type, value:
	// - **ALL**
	// - **ICMP(IPv4)**
	// - **ICMPv6(IPv6)* *
	// - **TCP**
	// - **UDP**
	// - **GRE**
	// - **SSH**
	// - **Telnet**
	// - **HTTP**
	// - **HTTPS**
	// - **MS SQL**
	// - **Oracle**
	// - **MySql**
	// - **RDP**
	// - **PostgreSQL**
	// - **Redis**.
	Protocol pulumi.StringInput
	// The QoS policy ID.
	QosId pulumi.StringInput
	// The QoS queue ID.
	QueueId pulumi.StringInput
	// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
	RemarkingDscp pulumi.IntPtrInput
	// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
	RuleDescription pulumi.StringPtrInput
	// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
	RuleName pulumi.StringPtrInput
	// The QoS rule traffic matches the source IPv4 CIDR block.
	// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
	SrcCidr pulumi.StringPtrInput
	// The QoS rule traffic matches the source IPv6 network segment.
	// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
	SrcIpv6Cidr pulumi.StringPtrInput
	// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
	SrcPortRange pulumi.StringPtrInput
}

func (TrafficQosRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficQosRuleArgs)(nil)).Elem()
}

type TrafficQosRuleInput interface {
	pulumi.Input

	ToTrafficQosRuleOutput() TrafficQosRuleOutput
	ToTrafficQosRuleOutputWithContext(ctx context.Context) TrafficQosRuleOutput
}

func (*TrafficQosRule) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficQosRule)(nil)).Elem()
}

func (i *TrafficQosRule) ToTrafficQosRuleOutput() TrafficQosRuleOutput {
	return i.ToTrafficQosRuleOutputWithContext(context.Background())
}

func (i *TrafficQosRule) ToTrafficQosRuleOutputWithContext(ctx context.Context) TrafficQosRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosRuleOutput)
}

// TrafficQosRuleArrayInput is an input type that accepts TrafficQosRuleArray and TrafficQosRuleArrayOutput values.
// You can construct a concrete instance of `TrafficQosRuleArrayInput` via:
//
//	TrafficQosRuleArray{ TrafficQosRuleArgs{...} }
type TrafficQosRuleArrayInput interface {
	pulumi.Input

	ToTrafficQosRuleArrayOutput() TrafficQosRuleArrayOutput
	ToTrafficQosRuleArrayOutputWithContext(context.Context) TrafficQosRuleArrayOutput
}

type TrafficQosRuleArray []TrafficQosRuleInput

func (TrafficQosRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficQosRule)(nil)).Elem()
}

func (i TrafficQosRuleArray) ToTrafficQosRuleArrayOutput() TrafficQosRuleArrayOutput {
	return i.ToTrafficQosRuleArrayOutputWithContext(context.Background())
}

func (i TrafficQosRuleArray) ToTrafficQosRuleArrayOutputWithContext(ctx context.Context) TrafficQosRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosRuleArrayOutput)
}

// TrafficQosRuleMapInput is an input type that accepts TrafficQosRuleMap and TrafficQosRuleMapOutput values.
// You can construct a concrete instance of `TrafficQosRuleMapInput` via:
//
//	TrafficQosRuleMap{ "key": TrafficQosRuleArgs{...} }
type TrafficQosRuleMapInput interface {
	pulumi.Input

	ToTrafficQosRuleMapOutput() TrafficQosRuleMapOutput
	ToTrafficQosRuleMapOutputWithContext(context.Context) TrafficQosRuleMapOutput
}

type TrafficQosRuleMap map[string]TrafficQosRuleInput

func (TrafficQosRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficQosRule)(nil)).Elem()
}

func (i TrafficQosRuleMap) ToTrafficQosRuleMapOutput() TrafficQosRuleMapOutput {
	return i.ToTrafficQosRuleMapOutputWithContext(context.Background())
}

func (i TrafficQosRuleMap) ToTrafficQosRuleMapOutputWithContext(ctx context.Context) TrafficQosRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficQosRuleMapOutput)
}

type TrafficQosRuleOutput struct{ *pulumi.OutputState }

func (TrafficQosRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficQosRule)(nil)).Elem()
}

func (o TrafficQosRuleOutput) ToTrafficQosRuleOutput() TrafficQosRuleOutput {
	return o
}

func (o TrafficQosRuleOutput) ToTrafficQosRuleOutputWithContext(ctx context.Context) TrafficQosRuleOutput {
	return o
}

// The traffic of the QoS rule matches the Destination IPv4 network segment.
// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
func (o TrafficQosRuleOutput) DstCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.DstCidr }).(pulumi.StringPtrOutput)
}

// The QoS rule traffic matches the Destination IPv6 network segment.
// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
func (o TrafficQosRuleOutput) DstIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.DstIpv6Cidr }).(pulumi.StringPtrOutput)
}

// QoS rule traffic matches the destination port number range. Value range: **0** to **65535**. If not, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same. The corresponding destination port number range is fixed for different protocol types. The values are as follows:
// - **ALL**:-1/-1, not editable.
// - **ICMP(IPv4)**:-1/-1, non-editable.
// - **ICMPv6(IPv6)**:-1/-1, non-editable.
// - **TCP**:-1/-1, editable.
// - **UDP**:-1/-1, editable.
// - **GRE**:-1/-1, not editable.
// - **SSH**:22/22, not editable.
// - **Telnet**:23/23, not editable.
// - **HTTP**:80/80, non-editable.
// - **HTTPS**:443/443, which cannot be edited.
// - **MS SQL**:1443/1443, which cannot be edited.
// - **Oracle**:1521/1521, non-editable.
// - **MySql**:3306/3306, non-editable.
// - **RDP**:3389/3389, non-editable.
// - **PostgreSQL**:5432/5432, non-editable.
// - **Redis**:6379/6379, non-editable.
func (o TrafficQosRuleOutput) DstPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.DstPortRange }).(pulumi.StringOutput)
}

// The DSCP value of the traffic matched by the QoS rule. Value range: **0** to **63**. If not, the value is - 1.
func (o TrafficQosRuleOutput) MatchDscp() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.IntOutput { return v.MatchDscp }).(pulumi.IntOutput)
}

// QoS rule priority. Value range: **1** to **9000**. The larger the number, the higher the priority. The priority of a QoS rule cannot be repeated in the same QoS policy.
func (o TrafficQosRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// QoS rule protocol type, value:
// - **ALL**
// - **ICMP(IPv4)**
// - **ICMPv6(IPv6)* *
// - **TCP**
// - **UDP**
// - **GRE**
// - **SSH**
// - **Telnet**
// - **HTTP**
// - **HTTPS**
// - **MS SQL**
// - **Oracle**
// - **MySql**
// - **RDP**
// - **PostgreSQL**
// - **Redis**.
func (o TrafficQosRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// The QoS policy ID.
func (o TrafficQosRuleOutput) QosId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.QosId }).(pulumi.StringOutput)
}

// The QoS queue ID.
func (o TrafficQosRuleOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.QueueId }).(pulumi.StringOutput)
}

// Modify The DSCP value in the flow. Value range: **0** to **63**. If the value is not modified, the value is - 1.
func (o TrafficQosRuleOutput) RemarkingDscp() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.IntOutput { return v.RemarkingDscp }).(pulumi.IntOutput)
}

// The description of the QoS rule.  The length is 0 to 256 characters and cannot start with 'http:// 'or 'https.
func (o TrafficQosRuleOutput) RuleDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.RuleDescription }).(pulumi.StringPtrOutput)
}

// The ID of the QoS rule.
func (o TrafficQosRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// The name of the QoS rule.  The length is 0 to 128 characters and cannot start with 'http:// 'or 'https.
func (o TrafficQosRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// The QoS rule traffic matches the source IPv4 CIDR block.
// > **NOTE:**  If this parameter is not supported, enter **SrcIPv6Cidr** or **DstIPv6Cidr * *.
func (o TrafficQosRuleOutput) SrcCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.SrcCidr }).(pulumi.StringPtrOutput)
}

// The QoS rule traffic matches the source IPv6 network segment.
// > **NOTE:**  If this parameter is not supported, enter **SrcCidr** or **DstCidr * *.
func (o TrafficQosRuleOutput) SrcIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringPtrOutput { return v.SrcIpv6Cidr }).(pulumi.StringPtrOutput)
}

// The source port number of the QoS rule traffic matching. The value range is **0** to **65535**. If the traffic does not match, the value is - 1. Currently, only a single port number is supported, and the start and end of the port number must be the same.
func (o TrafficQosRuleOutput) SrcPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.SrcPortRange }).(pulumi.StringOutput)
}

// The status of the QoS rule. Value:
func (o TrafficQosRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficQosRule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type TrafficQosRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficQosRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficQosRule)(nil)).Elem()
}

func (o TrafficQosRuleArrayOutput) ToTrafficQosRuleArrayOutput() TrafficQosRuleArrayOutput {
	return o
}

func (o TrafficQosRuleArrayOutput) ToTrafficQosRuleArrayOutputWithContext(ctx context.Context) TrafficQosRuleArrayOutput {
	return o
}

func (o TrafficQosRuleArrayOutput) Index(i pulumi.IntInput) TrafficQosRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficQosRule {
		return vs[0].([]*TrafficQosRule)[vs[1].(int)]
	}).(TrafficQosRuleOutput)
}

type TrafficQosRuleMapOutput struct{ *pulumi.OutputState }

func (TrafficQosRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficQosRule)(nil)).Elem()
}

func (o TrafficQosRuleMapOutput) ToTrafficQosRuleMapOutput() TrafficQosRuleMapOutput {
	return o
}

func (o TrafficQosRuleMapOutput) ToTrafficQosRuleMapOutputWithContext(ctx context.Context) TrafficQosRuleMapOutput {
	return o
}

func (o TrafficQosRuleMapOutput) MapIndex(k pulumi.StringInput) TrafficQosRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficQosRule {
		return vs[0].(map[string]*TrafficQosRule)[vs[1].(string)]
	}).(TrafficQosRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosRuleInput)(nil)).Elem(), &TrafficQosRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosRuleArrayInput)(nil)).Elem(), TrafficQosRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficQosRuleMapInput)(nil)).Elem(), TrafficQosRuleMap{})
	pulumi.RegisterOutputType(TrafficQosRuleOutput{})
	pulumi.RegisterOutputType(TrafficQosRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficQosRuleMapOutput{})
}
