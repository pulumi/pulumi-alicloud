// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gwlb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a GWLB Listener resource.
//
// For information about GWLB Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/slb/gateway-based-load-balancing-gwlb/developer-reference/api-gwlb-2024-04-15-createlistener).
//
// > **NOTE:** Available since v1.234.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/gwlb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			zoneId1 := "cn-wulanchabu-b"
//			if param := cfg.Get("zoneId1"); param != "" {
//				zoneId1 = param
//			}
//			_default, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("10.0.0.0/8"),
//				VpcName:   pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s1",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(zoneId1),
//				CidrBlock:   pulumi.String("10.0.0.0/24"),
//				VswitchName: pulumi.String(invokeFormat.Result),
//			})
//			if err != nil {
//				return err
//			}
//			invokeFormat1, err := std.Format(ctx, &std.FormatArgs{
//				Input: "%s3",
//				Args: []string{
//					name,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultLoadBalancer, err := gwlb.NewLoadBalancer(ctx, "default", &gwlb.LoadBalancerArgs{
//				VpcId:            defaultNetwork.ID(),
//				LoadBalancerName: pulumi.String(invokeFormat1.Result),
//				ZoneMappings: gwlb.LoadBalancerZoneMappingArray{
//					&gwlb.LoadBalancerZoneMappingArgs{
//						VswitchId: defaultSwitch.ID(),
//						ZoneId:    pulumi.String(zoneId1),
//					},
//				},
//				AddressIpVersion: pulumi.String("Ipv4"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultServerGroup, err := gwlb.NewServerGroup(ctx, "default", &gwlb.ServerGroupArgs{
//				Protocol:        pulumi.String("GENEVE"),
//				ServerGroupName: pulumi.String("tfaccgwlb62413"),
//				ServerGroupType: pulumi.String("Ip"),
//				Servers: gwlb.ServerGroupServerArray{
//					&gwlb.ServerGroupServerArgs{
//						ServerId:   pulumi.String("10.0.0.1"),
//						ServerIp:   pulumi.String("10.0.0.1"),
//						ServerType: pulumi.String("Ip"),
//					},
//					&gwlb.ServerGroupServerArgs{
//						ServerId:   pulumi.String("10.0.0.2"),
//						ServerIp:   pulumi.String("10.0.0.2"),
//						ServerType: pulumi.String("Ip"),
//					},
//					&gwlb.ServerGroupServerArgs{
//						ServerId:   pulumi.String("10.0.0.3"),
//						ServerIp:   pulumi.String("10.0.0.3"),
//						ServerType: pulumi.String("Ip"),
//					},
//				},
//				ConnectionDrainConfig: &gwlb.ServerGroupConnectionDrainConfigArgs{
//					ConnectionDrainEnabled: pulumi.Bool(true),
//					ConnectionDrainTimeout: pulumi.Int(1),
//				},
//				ResourceGroupId: pulumi.String(_default.Ids[0]),
//				DryRun:          pulumi.Bool(false),
//				HealthCheckConfig: &gwlb.ServerGroupHealthCheckConfigArgs{
//					HealthCheckProtocol: pulumi.String("HTTP"),
//					HealthCheckHttpCodes: pulumi.StringArray{
//						pulumi.String("http_2xx"),
//						pulumi.String("http_3xx"),
//						pulumi.String("http_4xx"),
//					},
//					HealthCheckInterval:       pulumi.Int(10),
//					HealthCheckPath:           pulumi.String("/health-check"),
//					UnhealthyThreshold:        pulumi.Int(2),
//					HealthCheckConnectPort:    pulumi.Int(80),
//					HealthCheckConnectTimeout: pulumi.Int(5),
//					HealthCheckDomain:         pulumi.String("www.domain.com"),
//					HealthCheckEnabled:        pulumi.Bool(true),
//					HealthyThreshold:          pulumi.Int(2),
//				},
//				VpcId:     defaultNetwork.ID(),
//				Scheduler: pulumi.String("5TCH"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = gwlb.NewListener(ctx, "default", &gwlb.ListenerArgs{
//				ListenerDescription: pulumi.String("example-tf-lsn"),
//				ServerGroupId:       defaultServerGroup.ID(),
//				LoadBalancerId:      defaultLoadBalancer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// GWLB Listener can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:gwlb/listener:Listener example <id>
// ```
type Listener struct {
	pulumi.CustomResourceState

	// Specifies whether to perform a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The description of the listener.
	//
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrOutput `pulumi:"listenerDescription"`
	// The GWLB instance ID.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// The region ID.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The server group ID.
	ServerGroupId pulumi.StringOutput `pulumi:"serverGroupId"`
	// The status of the listener.
	Status pulumi.StringOutput `pulumi:"status"`
	// The tags. You can specify at most 20 tags in each call.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewListener registers a new resource with the given unique name, arguments, and options.
func NewListener(ctx *pulumi.Context,
	name string, args *ListenerArgs, opts ...pulumi.ResourceOption) (*Listener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerId'")
	}
	if args.ServerGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ServerGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Listener
	err := ctx.RegisterResource("alicloud:gwlb/listener:Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetListener gets an existing Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ListenerState, opts ...pulumi.ResourceOption) (*Listener, error) {
	var resource Listener
	err := ctx.ReadResource("alicloud:gwlb/listener:Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Listener resources.
type listenerState struct {
	// Specifies whether to perform a dry run, without performing the actual request. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// The description of the listener.
	//
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription *string `pulumi:"listenerDescription"`
	// The GWLB instance ID.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// The region ID.
	RegionId *string `pulumi:"regionId"`
	// The server group ID.
	ServerGroupId *string `pulumi:"serverGroupId"`
	// The status of the listener.
	Status *string `pulumi:"status"`
	// The tags. You can specify at most 20 tags in each call.
	Tags map[string]string `pulumi:"tags"`
}

type ListenerState struct {
	// Specifies whether to perform a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrInput
	// The description of the listener.
	//
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrInput
	// The GWLB instance ID.
	LoadBalancerId pulumi.StringPtrInput
	// The region ID.
	RegionId pulumi.StringPtrInput
	// The server group ID.
	ServerGroupId pulumi.StringPtrInput
	// The status of the listener.
	Status pulumi.StringPtrInput
	// The tags. You can specify at most 20 tags in each call.
	Tags pulumi.StringMapInput
}

func (ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerState)(nil)).Elem()
}

type listenerArgs struct {
	// Specifies whether to perform a dry run, without performing the actual request. Valid values:
	DryRun *bool `pulumi:"dryRun"`
	// The description of the listener.
	//
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription *string `pulumi:"listenerDescription"`
	// The GWLB instance ID.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The server group ID.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The tags. You can specify at most 20 tags in each call.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Listener resource.
type ListenerArgs struct {
	// Specifies whether to perform a dry run, without performing the actual request. Valid values:
	DryRun pulumi.BoolPtrInput
	// The description of the listener.
	//
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrInput
	// The GWLB instance ID.
	LoadBalancerId pulumi.StringInput
	// The server group ID.
	ServerGroupId pulumi.StringInput
	// The tags. You can specify at most 20 tags in each call.
	Tags pulumi.StringMapInput
}

func (ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerArgs)(nil)).Elem()
}

type ListenerInput interface {
	pulumi.Input

	ToListenerOutput() ListenerOutput
	ToListenerOutputWithContext(ctx context.Context) ListenerOutput
}

func (*Listener) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (i *Listener) ToListenerOutput() ListenerOutput {
	return i.ToListenerOutputWithContext(context.Background())
}

func (i *Listener) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerOutput)
}

// ListenerArrayInput is an input type that accepts ListenerArray and ListenerArrayOutput values.
// You can construct a concrete instance of `ListenerArrayInput` via:
//
//	ListenerArray{ ListenerArgs{...} }
type ListenerArrayInput interface {
	pulumi.Input

	ToListenerArrayOutput() ListenerArrayOutput
	ToListenerArrayOutputWithContext(context.Context) ListenerArrayOutput
}

type ListenerArray []ListenerInput

func (ListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (i ListenerArray) ToListenerArrayOutput() ListenerArrayOutput {
	return i.ToListenerArrayOutputWithContext(context.Background())
}

func (i ListenerArray) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerArrayOutput)
}

// ListenerMapInput is an input type that accepts ListenerMap and ListenerMapOutput values.
// You can construct a concrete instance of `ListenerMapInput` via:
//
//	ListenerMap{ "key": ListenerArgs{...} }
type ListenerMapInput interface {
	pulumi.Input

	ToListenerMapOutput() ListenerMapOutput
	ToListenerMapOutputWithContext(context.Context) ListenerMapOutput
}

type ListenerMap map[string]ListenerInput

func (ListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (i ListenerMap) ToListenerMapOutput() ListenerMapOutput {
	return i.ToListenerMapOutputWithContext(context.Background())
}

func (i ListenerMap) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMapOutput)
}

type ListenerOutput struct{ *pulumi.OutputState }

func (ListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (o ListenerOutput) ToListenerOutput() ListenerOutput {
	return o
}

func (o ListenerOutput) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return o
}

// Specifies whether to perform a dry run, without performing the actual request. Valid values:
func (o ListenerOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The description of the listener.
//
// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
func (o ListenerOutput) ListenerDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.ListenerDescription }).(pulumi.StringPtrOutput)
}

// The GWLB instance ID.
func (o ListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The region ID.
func (o ListenerOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The server group ID.
func (o ListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The status of the listener.
func (o ListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tags. You can specify at most 20 tags in each call.
func (o ListenerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ListenerArrayOutput struct{ *pulumi.OutputState }

func (ListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (o ListenerArrayOutput) ToListenerArrayOutput() ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) Index(i pulumi.IntInput) ListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].([]*Listener)[vs[1].(int)]
	}).(ListenerOutput)
}

type ListenerMapOutput struct{ *pulumi.OutputState }

func (ListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (o ListenerMapOutput) ToListenerMapOutput() ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) MapIndex(k pulumi.StringInput) ListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].(map[string]*Listener)[vs[1].(string)]
	}).(ListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerInput)(nil)).Elem(), &Listener{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerArrayInput)(nil)).Elem(), ListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMapInput)(nil)).Elem(), ListenerMap{})
	pulumi.RegisterOutputType(ListenerOutput{})
	pulumi.RegisterOutputType(ListenerArrayOutput{})
	pulumi.RegisterOutputType(ListenerMapOutput{})
}
