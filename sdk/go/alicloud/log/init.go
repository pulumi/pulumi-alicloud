// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "alicloud:log/alert:Alert":
		r, err = NewAlert(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/audit:Audit":
		r, err = NewAudit(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/dashboard:Dashboard":
		r, err = NewDashboard(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/etl:Etl":
		r, err = NewEtl(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/logTailAttachment:LogTailAttachment":
		r, err = NewLogTailAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/logTailConfig:LogTailConfig":
		r, err = NewLogTailConfig(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/machineGroup:MachineGroup":
		r, err = NewMachineGroup(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/project:Project":
		r, err = NewProject(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/store:Store":
		r, err = NewStore(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:log/storeIndex:StoreIndex":
		r, err = NewStoreIndex(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := alicloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/alert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/audit",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/etl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/logTailAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/logTailConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/machineGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/store",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"log/storeIndex",
		&module{version},
	)
}
