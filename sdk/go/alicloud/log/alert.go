// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Log alert is a unit of log service, which is used to monitor and alert the user's logstore status information.
// Log Service enables you to configure alerts based on the charts in a dashboard to monitor the service status in real time.
//
// For information about SLS Alert and how to use it, see [SLS Alert Overview](https://www.alibabacloud.com/help/en/doc-detail/209202.html)
//
// > **NOTE:** Available in 1.78.0
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := log.NewProject(ctx, "exampleProject", &log.ProjectArgs{
//				Description: pulumi.String("create by terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewStore(ctx, "exampleStore", &log.StoreArgs{
//				Project:            exampleProject.Name,
//				RetentionPeriod:    pulumi.Int(3650),
//				ShardCount:         pulumi.Int(3),
//				AutoSplit:          pulumi.Bool(true),
//				MaxSplitShardCount: pulumi.Int(60),
//				AppendMeta:         pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewAlert(ctx, "exampleAlert", &log.AlertArgs{
//				ProjectName:      exampleProject.Name,
//				AlertName:        pulumi.String("tf-test-alert"),
//				AlertDisplayname: pulumi.String("tf-test-alert-displayname"),
//				Condition:        pulumi.String("count> 100"),
//				Dashboard:        pulumi.String("tf-test-dashboard"),
//				Schedule: &log.AlertScheduleArgs{
//					Type:           pulumi.String("FixedRate"),
//					Interval:       pulumi.String("5m"),
//					Hour:           pulumi.Int(0),
//					DayOfWeek:      pulumi.Int(0),
//					Delay:          pulumi.Int(0),
//					RunImmediately: pulumi.Bool(false),
//				},
//				QueryLists: log.AlertQueryListArray{
//					&log.AlertQueryListArgs{
//						Logstore:   pulumi.String("tf-test-logstore"),
//						ChartTitle: pulumi.String("chart_title"),
//						Start:      pulumi.String("-60s"),
//						End:        pulumi.String("20s"),
//						Query:      pulumi.String("* AND aliyun"),
//					},
//				},
//				NotificationLists: log.AlertNotificationListArray{
//					&log.AlertNotificationListArgs{
//						Type: pulumi.String("SMS"),
//						MobileLists: pulumi.StringArray{
//							pulumi.String("12345678"),
//							pulumi.String("87654321"),
//						},
//						Content: pulumi.String("alert content"),
//					},
//					&log.AlertNotificationListArgs{
//						Type: pulumi.String("Email"),
//						EmailLists: pulumi.StringArray{
//							pulumi.String("aliyun@alibaba-inc.com"),
//							pulumi.String("tf-test@123.com"),
//						},
//						Content: pulumi.String("alert content"),
//					},
//					&log.AlertNotificationListArgs{
//						Type:       pulumi.String("DingTalk"),
//						ServiceUri: pulumi.String("www.aliyun.com"),
//						Content:    pulumi.String("alert content"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Basic Usage for new alert
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := log.NewProject(ctx, "exampleProject", &log.ProjectArgs{
//				Description: pulumi.String("create by terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewStore(ctx, "exampleStore", &log.StoreArgs{
//				Project:            exampleProject.Name,
//				RetentionPeriod:    pulumi.Int(3650),
//				ShardCount:         pulumi.Int(3),
//				AutoSplit:          pulumi.Bool(true),
//				MaxSplitShardCount: pulumi.Int(60),
//				AppendMeta:         pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewAlert(ctx, "example-2", &log.AlertArgs{
//				Version:          pulumi.String("2.0"),
//				Type:             pulumi.String("default"),
//				ProjectName:      exampleProject.Name,
//				AlertName:        pulumi.String("tf-test-alert-2"),
//				AlertDisplayname: pulumi.String("tf-test-alert-displayname-2"),
//				Dashboard:        pulumi.String("tf-test-dashboard"),
//				MuteUntil:        pulumi.Int(1632486684),
//				NoDataFire:       pulumi.Bool(false),
//				NoDataSeverity:   pulumi.Int(8),
//				SendResolved:     pulumi.Bool(true),
//				AutoAnnotation:   pulumi.Bool(true),
//				Schedule: &log.AlertScheduleArgs{
//					Type:           pulumi.String("FixedRate"),
//					Interval:       pulumi.String("5m"),
//					Hour:           pulumi.Int(0),
//					DayOfWeek:      pulumi.Int(0),
//					Delay:          pulumi.Int(0),
//					RunImmediately: pulumi.Bool(false),
//				},
//				QueryLists: log.AlertQueryListArray{
//					&log.AlertQueryListArgs{
//						Store:        pulumi.String("tf-test-logstore"),
//						StoreType:    pulumi.String("log"),
//						Project:      exampleProject.Name,
//						Region:       pulumi.String("cn-heyuan"),
//						ChartTitle:   pulumi.String("chart_title"),
//						Start:        pulumi.String("-60s"),
//						End:          pulumi.String("20s"),
//						Query:        pulumi.String("* AND aliyun | select count(1) as cnt"),
//						PowerSqlMode: pulumi.String("auto"),
//					},
//					&log.AlertQueryListArgs{
//						Store:        pulumi.String("tf-test-logstore"),
//						StoreType:    pulumi.String("log"),
//						Project:      exampleProject.Name,
//						Region:       pulumi.String("cn-heyuan"),
//						ChartTitle:   pulumi.String("chart_title"),
//						Start:        pulumi.String("-60s"),
//						End:          pulumi.String("20s"),
//						Query:        pulumi.String("error | select count(1) as error_cnt"),
//						PowerSqlMode: pulumi.String("enable"),
//					},
//				},
//				Labels: log.AlertLabelArray{
//					&log.AlertLabelArgs{
//						Key:   pulumi.String("env"),
//						Value: pulumi.String("test"),
//					},
//				},
//				Annotations: log.AlertAnnotationArray{
//					&log.AlertAnnotationArgs{
//						Key:   pulumi.String("title"),
//						Value: pulumi.String("alert title"),
//					},
//					&log.AlertAnnotationArgs{
//						Key:   pulumi.String("desc"),
//						Value: pulumi.String("alert desc"),
//					},
//					&log.AlertAnnotationArgs{
//						Key:   pulumi.String("test_key"),
//						Value: pulumi.String("test value"),
//					},
//				},
//				GroupConfiguration: &log.AlertGroupConfigurationArgs{
//					Type: pulumi.String("custom"),
//					Fields: pulumi.StringArray{
//						pulumi.String("cnt"),
//					},
//				},
//				PolicyConfiguration: &log.AlertPolicyConfigurationArgs{
//					AlertPolicyId:  pulumi.String("sls.bultin"),
//					ActionPolicyId: pulumi.String("sls_test_action"),
//					RepeatInterval: pulumi.String("4h"),
//				},
//				SeverityConfigurations: log.AlertSeverityConfigurationArray{
//					&log.AlertSeverityConfigurationArgs{
//						Severity: pulumi.Int(8),
//						EvalCondition: pulumi.StringMap{
//							"condition":       pulumi.String("cnt > 3"),
//							"count_condition": pulumi.String("__count__ > 3"),
//						},
//					},
//					&log.AlertSeverityConfigurationArgs{
//						Severity: pulumi.Int(6),
//						EvalCondition: pulumi.StringMap{
//							"condition":       pulumi.String(""),
//							"count_condition": pulumi.String("__count__ > 0"),
//						},
//					},
//					&log.AlertSeverityConfigurationArgs{
//						Severity: pulumi.Int(2),
//						EvalCondition: pulumi.StringMap{
//							"condition":       pulumi.String(""),
//							"count_condition": pulumi.String(""),
//						},
//					},
//				},
//				JoinConfigurations: log.AlertJoinConfigurationArray{
//					&log.AlertJoinConfigurationArgs{
//						Type:      pulumi.String("cross_join"),
//						Condition: pulumi.String(""),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// # Basic Usage for alert template
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/log"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := log.NewProject(ctx, "exampleProject", &log.ProjectArgs{
//				Description: pulumi.String("create by terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewStore(ctx, "exampleStore", &log.StoreArgs{
//				Project:            exampleProject.Name,
//				RetentionPeriod:    pulumi.Int(3650),
//				ShardCount:         pulumi.Int(3),
//				AutoSplit:          pulumi.Bool(true),
//				MaxSplitShardCount: pulumi.Int(60),
//				AppendMeta:         pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = log.NewAlert(ctx, "example-3", &log.AlertArgs{
//				Version:          pulumi.String("2.0"),
//				Type:             pulumi.String("tpl"),
//				ProjectName:      exampleProject.Name,
//				AlertName:        pulumi.String("tf-test-alert-3"),
//				AlertDisplayname: pulumi.String("tf-test-alert-displayname-3"),
//				MuteUntil:        pulumi.Int(1632486684),
//				Schedule: &log.AlertScheduleArgs{
//					Type:           pulumi.String("FixedRate"),
//					Interval:       pulumi.String("5m"),
//					Hour:           pulumi.Int(0),
//					DayOfWeek:      pulumi.Int(0),
//					Delay:          pulumi.Int(0),
//					RunImmediately: pulumi.Bool(false),
//				},
//				TemplateConfiguration: &log.AlertTemplateConfigurationArgs{
//					Id:          pulumi.String("sls.app.sls_ack.node.down"),
//					Type:        pulumi.String("sys"),
//					Lang:        pulumi.String("cn"),
//					Annotations: nil,
//					Tokens: pulumi.StringMap{
//						"interval_minute":        pulumi.String("5"),
//						"default.action_policy":  pulumi.String("sls.app.ack.builtin"),
//						"default.severity":       pulumi.String("6"),
//						"sendResolved":           pulumi.String("false"),
//						"default.project":        exampleProject.Name,
//						"default.logstore":       pulumi.String("k8s-event"),
//						"default.repeatInterval": pulumi.String("4h"),
//						"trigger_threshold":      pulumi.String("1"),
//						"default.clusterId":      pulumi.String("test-cluster-id"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Log alert can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:log/alert:Alert example tf-log:tf-log-alert
//
// ```
type Alert struct {
	pulumi.CustomResourceState

	// Alert description.
	AlertDescription pulumi.StringPtrOutput `pulumi:"alertDescription"`
	// Alert displayname.
	AlertDisplayname pulumi.StringOutput `pulumi:"alertDisplayname"`
	// Name of logstore for configuring alarm service.
	AlertName pulumi.StringOutput `pulumi:"alertName"`
	// Alert template annotations.
	Annotations AlertAnnotationArrayOutput `pulumi:"annotations"`
	// whether to add automatic annotation, default is false.
	AutoAnnotation pulumi.BoolPtrOutput `pulumi:"autoAnnotation"`
	// Join condition.
	//
	// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
	Condition pulumi.StringPtrOutput `pulumi:"condition"`
	// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
	Dashboard pulumi.StringPtrOutput `pulumi:"dashboard"`
	// Group configuration for new alert.
	GroupConfiguration AlertGroupConfigurationPtrOutput `pulumi:"groupConfiguration"`
	// Join configuration for different queries.
	JoinConfigurations AlertJoinConfigurationArrayOutput `pulumi:"joinConfigurations"`
	// Labels for new alert.
	Labels AlertLabelArrayOutput `pulumi:"labels"`
	// Timestamp, notifications before closing again.
	MuteUntil pulumi.IntOutput `pulumi:"muteUntil"`
	// Switch for whether new alert fires when no data happens, default is false.
	NoDataFire pulumi.BoolPtrOutput `pulumi:"noDataFire"`
	// when no data happens, the severity of new alert.
	NoDataSeverity pulumi.IntPtrOutput `pulumi:"noDataSeverity"`
	// Alarm information notification list, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
	NotificationLists AlertNotificationListArrayOutput `pulumi:"notificationLists"`
	// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use threshold
	NotifyThreshold pulumi.IntPtrOutput `pulumi:"notifyThreshold"`
	// Policy configuration for new alert.
	PolicyConfiguration AlertPolicyConfigurationPtrOutput `pulumi:"policyConfiguration"`
	// The project name.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// Multiple conditions for configured alarm query.
	QueryLists AlertQueryListArrayOutput `pulumi:"queryLists"`
	// schedule for alert.
	Schedule AlertSchedulePtrOutput `pulumi:"schedule"`
	// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
	//
	// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleInterval pulumi.StringOutput `pulumi:"scheduleInterval"`
	// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
	//
	// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleType pulumi.StringOutput `pulumi:"scheduleType"`
	// when new alert is resolved, whether to notify, default is false.
	SendResolved pulumi.BoolPtrOutput `pulumi:"sendResolved"`
	// Severity configuration for new alert.
	SeverityConfigurations AlertSeverityConfigurationArrayOutput `pulumi:"severityConfigurations"`
	// Template configuration for alert, when `type` is `tpl`.
	TemplateConfiguration AlertTemplateConfigurationPtrOutput `pulumi:"templateConfiguration"`
	// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
	Threshold pulumi.IntOutput `pulumi:"threshold"`
	// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
	Throttling pulumi.StringPtrOutput `pulumi:"throttling"`
	// including FixedRate,Hourly,Daily,Weekly,Cron.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The version of alert, new alert is 2.0.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewAlert registers a new resource with the given unique name, arguments, and options.
func NewAlert(ctx *pulumi.Context,
	name string, args *AlertArgs, opts ...pulumi.ResourceOption) (*Alert, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlertDisplayname == nil {
		return nil, errors.New("invalid value for required argument 'AlertDisplayname'")
	}
	if args.AlertName == nil {
		return nil, errors.New("invalid value for required argument 'AlertName'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	var resource Alert
	err := ctx.RegisterResource("alicloud:log/alert:Alert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlert gets an existing Alert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertState, opts ...pulumi.ResourceOption) (*Alert, error) {
	var resource Alert
	err := ctx.ReadResource("alicloud:log/alert:Alert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alert resources.
type alertState struct {
	// Alert description.
	AlertDescription *string `pulumi:"alertDescription"`
	// Alert displayname.
	AlertDisplayname *string `pulumi:"alertDisplayname"`
	// Name of logstore for configuring alarm service.
	AlertName *string `pulumi:"alertName"`
	// Alert template annotations.
	Annotations []AlertAnnotation `pulumi:"annotations"`
	// whether to add automatic annotation, default is false.
	AutoAnnotation *bool `pulumi:"autoAnnotation"`
	// Join condition.
	//
	// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
	Condition *string `pulumi:"condition"`
	// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
	Dashboard *string `pulumi:"dashboard"`
	// Group configuration for new alert.
	GroupConfiguration *AlertGroupConfiguration `pulumi:"groupConfiguration"`
	// Join configuration for different queries.
	JoinConfigurations []AlertJoinConfiguration `pulumi:"joinConfigurations"`
	// Labels for new alert.
	Labels []AlertLabel `pulumi:"labels"`
	// Timestamp, notifications before closing again.
	MuteUntil *int `pulumi:"muteUntil"`
	// Switch for whether new alert fires when no data happens, default is false.
	NoDataFire *bool `pulumi:"noDataFire"`
	// when no data happens, the severity of new alert.
	NoDataSeverity *int `pulumi:"noDataSeverity"`
	// Alarm information notification list, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
	NotificationLists []AlertNotificationList `pulumi:"notificationLists"`
	// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use threshold
	NotifyThreshold *int `pulumi:"notifyThreshold"`
	// Policy configuration for new alert.
	PolicyConfiguration *AlertPolicyConfiguration `pulumi:"policyConfiguration"`
	// The project name.
	ProjectName *string `pulumi:"projectName"`
	// Multiple conditions for configured alarm query.
	QueryLists []AlertQueryList `pulumi:"queryLists"`
	// schedule for alert.
	Schedule *AlertSchedule `pulumi:"schedule"`
	// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
	//
	// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleInterval *string `pulumi:"scheduleInterval"`
	// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
	//
	// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleType *string `pulumi:"scheduleType"`
	// when new alert is resolved, whether to notify, default is false.
	SendResolved *bool `pulumi:"sendResolved"`
	// Severity configuration for new alert.
	SeverityConfigurations []AlertSeverityConfiguration `pulumi:"severityConfigurations"`
	// Template configuration for alert, when `type` is `tpl`.
	TemplateConfiguration *AlertTemplateConfiguration `pulumi:"templateConfiguration"`
	// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
	Threshold *int `pulumi:"threshold"`
	// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
	Throttling *string `pulumi:"throttling"`
	// including FixedRate,Hourly,Daily,Weekly,Cron.
	Type *string `pulumi:"type"`
	// The version of alert, new alert is 2.0.
	Version *string `pulumi:"version"`
}

type AlertState struct {
	// Alert description.
	AlertDescription pulumi.StringPtrInput
	// Alert displayname.
	AlertDisplayname pulumi.StringPtrInput
	// Name of logstore for configuring alarm service.
	AlertName pulumi.StringPtrInput
	// Alert template annotations.
	Annotations AlertAnnotationArrayInput
	// whether to add automatic annotation, default is false.
	AutoAnnotation pulumi.BoolPtrInput
	// Join condition.
	//
	// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
	Condition pulumi.StringPtrInput
	// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
	Dashboard pulumi.StringPtrInput
	// Group configuration for new alert.
	GroupConfiguration AlertGroupConfigurationPtrInput
	// Join configuration for different queries.
	JoinConfigurations AlertJoinConfigurationArrayInput
	// Labels for new alert.
	Labels AlertLabelArrayInput
	// Timestamp, notifications before closing again.
	MuteUntil pulumi.IntPtrInput
	// Switch for whether new alert fires when no data happens, default is false.
	NoDataFire pulumi.BoolPtrInput
	// when no data happens, the severity of new alert.
	NoDataSeverity pulumi.IntPtrInput
	// Alarm information notification list, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
	NotificationLists AlertNotificationListArrayInput
	// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use threshold
	NotifyThreshold pulumi.IntPtrInput
	// Policy configuration for new alert.
	PolicyConfiguration AlertPolicyConfigurationPtrInput
	// The project name.
	ProjectName pulumi.StringPtrInput
	// Multiple conditions for configured alarm query.
	QueryLists AlertQueryListArrayInput
	// schedule for alert.
	Schedule AlertSchedulePtrInput
	// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
	//
	// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleInterval pulumi.StringPtrInput
	// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
	//
	// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleType pulumi.StringPtrInput
	// when new alert is resolved, whether to notify, default is false.
	SendResolved pulumi.BoolPtrInput
	// Severity configuration for new alert.
	SeverityConfigurations AlertSeverityConfigurationArrayInput
	// Template configuration for alert, when `type` is `tpl`.
	TemplateConfiguration AlertTemplateConfigurationPtrInput
	// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
	Threshold pulumi.IntPtrInput
	// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
	Throttling pulumi.StringPtrInput
	// including FixedRate,Hourly,Daily,Weekly,Cron.
	Type pulumi.StringPtrInput
	// The version of alert, new alert is 2.0.
	Version pulumi.StringPtrInput
}

func (AlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertState)(nil)).Elem()
}

type alertArgs struct {
	// Alert description.
	AlertDescription *string `pulumi:"alertDescription"`
	// Alert displayname.
	AlertDisplayname string `pulumi:"alertDisplayname"`
	// Name of logstore for configuring alarm service.
	AlertName string `pulumi:"alertName"`
	// Alert template annotations.
	Annotations []AlertAnnotation `pulumi:"annotations"`
	// whether to add automatic annotation, default is false.
	AutoAnnotation *bool `pulumi:"autoAnnotation"`
	// Join condition.
	//
	// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
	Condition *string `pulumi:"condition"`
	// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
	Dashboard *string `pulumi:"dashboard"`
	// Group configuration for new alert.
	GroupConfiguration *AlertGroupConfiguration `pulumi:"groupConfiguration"`
	// Join configuration for different queries.
	JoinConfigurations []AlertJoinConfiguration `pulumi:"joinConfigurations"`
	// Labels for new alert.
	Labels []AlertLabel `pulumi:"labels"`
	// Timestamp, notifications before closing again.
	MuteUntil *int `pulumi:"muteUntil"`
	// Switch for whether new alert fires when no data happens, default is false.
	NoDataFire *bool `pulumi:"noDataFire"`
	// when no data happens, the severity of new alert.
	NoDataSeverity *int `pulumi:"noDataSeverity"`
	// Alarm information notification list, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
	NotificationLists []AlertNotificationList `pulumi:"notificationLists"`
	// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use threshold
	NotifyThreshold *int `pulumi:"notifyThreshold"`
	// Policy configuration for new alert.
	PolicyConfiguration *AlertPolicyConfiguration `pulumi:"policyConfiguration"`
	// The project name.
	ProjectName string `pulumi:"projectName"`
	// Multiple conditions for configured alarm query.
	QueryLists []AlertQueryList `pulumi:"queryLists"`
	// schedule for alert.
	Schedule *AlertSchedule `pulumi:"schedule"`
	// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
	//
	// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleInterval *string `pulumi:"scheduleInterval"`
	// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
	//
	// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleType *string `pulumi:"scheduleType"`
	// when new alert is resolved, whether to notify, default is false.
	SendResolved *bool `pulumi:"sendResolved"`
	// Severity configuration for new alert.
	SeverityConfigurations []AlertSeverityConfiguration `pulumi:"severityConfigurations"`
	// Template configuration for alert, when `type` is `tpl`.
	TemplateConfiguration *AlertTemplateConfiguration `pulumi:"templateConfiguration"`
	// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
	Threshold *int `pulumi:"threshold"`
	// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
	Throttling *string `pulumi:"throttling"`
	// including FixedRate,Hourly,Daily,Weekly,Cron.
	Type *string `pulumi:"type"`
	// The version of alert, new alert is 2.0.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Alert resource.
type AlertArgs struct {
	// Alert description.
	AlertDescription pulumi.StringPtrInput
	// Alert displayname.
	AlertDisplayname pulumi.StringInput
	// Name of logstore for configuring alarm service.
	AlertName pulumi.StringInput
	// Alert template annotations.
	Annotations AlertAnnotationArrayInput
	// whether to add automatic annotation, default is false.
	AutoAnnotation pulumi.BoolPtrInput
	// Join condition.
	//
	// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
	Condition pulumi.StringPtrInput
	// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
	Dashboard pulumi.StringPtrInput
	// Group configuration for new alert.
	GroupConfiguration AlertGroupConfigurationPtrInput
	// Join configuration for different queries.
	JoinConfigurations AlertJoinConfigurationArrayInput
	// Labels for new alert.
	Labels AlertLabelArrayInput
	// Timestamp, notifications before closing again.
	MuteUntil pulumi.IntPtrInput
	// Switch for whether new alert fires when no data happens, default is false.
	NoDataFire pulumi.BoolPtrInput
	// when no data happens, the severity of new alert.
	NoDataSeverity pulumi.IntPtrInput
	// Alarm information notification list, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
	NotificationLists AlertNotificationListArrayInput
	// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use threshold
	NotifyThreshold pulumi.IntPtrInput
	// Policy configuration for new alert.
	PolicyConfiguration AlertPolicyConfigurationPtrInput
	// The project name.
	ProjectName pulumi.StringInput
	// Multiple conditions for configured alarm query.
	QueryLists AlertQueryListArrayInput
	// schedule for alert.
	Schedule AlertSchedulePtrInput
	// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
	//
	// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleInterval pulumi.StringPtrInput
	// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
	//
	// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
	ScheduleType pulumi.StringPtrInput
	// when new alert is resolved, whether to notify, default is false.
	SendResolved pulumi.BoolPtrInput
	// Severity configuration for new alert.
	SeverityConfigurations AlertSeverityConfigurationArrayInput
	// Template configuration for alert, when `type` is `tpl`.
	TemplateConfiguration AlertTemplateConfigurationPtrInput
	// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
	Threshold pulumi.IntPtrInput
	// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
	//
	// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
	Throttling pulumi.StringPtrInput
	// including FixedRate,Hourly,Daily,Weekly,Cron.
	Type pulumi.StringPtrInput
	// The version of alert, new alert is 2.0.
	Version pulumi.StringPtrInput
}

func (AlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertArgs)(nil)).Elem()
}

type AlertInput interface {
	pulumi.Input

	ToAlertOutput() AlertOutput
	ToAlertOutputWithContext(ctx context.Context) AlertOutput
}

func (*Alert) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (i *Alert) ToAlertOutput() AlertOutput {
	return i.ToAlertOutputWithContext(context.Background())
}

func (i *Alert) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertOutput)
}

// AlertArrayInput is an input type that accepts AlertArray and AlertArrayOutput values.
// You can construct a concrete instance of `AlertArrayInput` via:
//
//	AlertArray{ AlertArgs{...} }
type AlertArrayInput interface {
	pulumi.Input

	ToAlertArrayOutput() AlertArrayOutput
	ToAlertArrayOutputWithContext(context.Context) AlertArrayOutput
}

type AlertArray []AlertInput

func (AlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alert)(nil)).Elem()
}

func (i AlertArray) ToAlertArrayOutput() AlertArrayOutput {
	return i.ToAlertArrayOutputWithContext(context.Background())
}

func (i AlertArray) ToAlertArrayOutputWithContext(ctx context.Context) AlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertArrayOutput)
}

// AlertMapInput is an input type that accepts AlertMap and AlertMapOutput values.
// You can construct a concrete instance of `AlertMapInput` via:
//
//	AlertMap{ "key": AlertArgs{...} }
type AlertMapInput interface {
	pulumi.Input

	ToAlertMapOutput() AlertMapOutput
	ToAlertMapOutputWithContext(context.Context) AlertMapOutput
}

type AlertMap map[string]AlertInput

func (AlertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alert)(nil)).Elem()
}

func (i AlertMap) ToAlertMapOutput() AlertMapOutput {
	return i.ToAlertMapOutputWithContext(context.Background())
}

func (i AlertMap) ToAlertMapOutputWithContext(ctx context.Context) AlertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMapOutput)
}

type AlertOutput struct{ *pulumi.OutputState }

func (AlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (o AlertOutput) ToAlertOutput() AlertOutput {
	return o
}

func (o AlertOutput) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return o
}

// Alert description.
func (o AlertOutput) AlertDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.AlertDescription }).(pulumi.StringPtrOutput)
}

// Alert displayname.
func (o AlertOutput) AlertDisplayname() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.AlertDisplayname }).(pulumi.StringOutput)
}

// Name of logstore for configuring alarm service.
func (o AlertOutput) AlertName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.AlertName }).(pulumi.StringOutput)
}

// Alert template annotations.
func (o AlertOutput) Annotations() AlertAnnotationArrayOutput {
	return o.ApplyT(func(v *Alert) AlertAnnotationArrayOutput { return v.Annotations }).(AlertAnnotationArrayOutput)
}

// whether to add automatic annotation, default is false.
func (o AlertOutput) AutoAnnotation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.BoolPtrOutput { return v.AutoAnnotation }).(pulumi.BoolPtrOutput)
}

// Join condition.
//
// Deprecated: Deprecated from 1.161.0+, use eval_condition in severity_configurations
func (o AlertOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Condition }).(pulumi.StringPtrOutput)
}

// Deprecated: Deprecated from 1.161.0+, use dashboardId in query_list
func (o AlertOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Dashboard }).(pulumi.StringPtrOutput)
}

// Group configuration for new alert.
func (o AlertOutput) GroupConfiguration() AlertGroupConfigurationPtrOutput {
	return o.ApplyT(func(v *Alert) AlertGroupConfigurationPtrOutput { return v.GroupConfiguration }).(AlertGroupConfigurationPtrOutput)
}

// Join configuration for different queries.
func (o AlertOutput) JoinConfigurations() AlertJoinConfigurationArrayOutput {
	return o.ApplyT(func(v *Alert) AlertJoinConfigurationArrayOutput { return v.JoinConfigurations }).(AlertJoinConfigurationArrayOutput)
}

// Labels for new alert.
func (o AlertOutput) Labels() AlertLabelArrayOutput {
	return o.ApplyT(func(v *Alert) AlertLabelArrayOutput { return v.Labels }).(AlertLabelArrayOutput)
}

// Timestamp, notifications before closing again.
func (o AlertOutput) MuteUntil() pulumi.IntOutput {
	return o.ApplyT(func(v *Alert) pulumi.IntOutput { return v.MuteUntil }).(pulumi.IntOutput)
}

// Switch for whether new alert fires when no data happens, default is false.
func (o AlertOutput) NoDataFire() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.BoolPtrOutput { return v.NoDataFire }).(pulumi.BoolPtrOutput)
}

// when no data happens, the severity of new alert.
func (o AlertOutput) NoDataSeverity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.IntPtrOutput { return v.NoDataSeverity }).(pulumi.IntPtrOutput)
}

// Alarm information notification list, Deprecated from 1.161.0+.
//
// Deprecated: Deprecated from 1.161.0+, use policy_configuration for notification
func (o AlertOutput) NotificationLists() AlertNotificationListArrayOutput {
	return o.ApplyT(func(v *Alert) AlertNotificationListArrayOutput { return v.NotificationLists }).(AlertNotificationListArrayOutput)
}

// Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
//
// Deprecated: Deprecated from 1.161.0+, use threshold
func (o AlertOutput) NotifyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.IntPtrOutput { return v.NotifyThreshold }).(pulumi.IntPtrOutput)
}

// Policy configuration for new alert.
func (o AlertOutput) PolicyConfiguration() AlertPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v *Alert) AlertPolicyConfigurationPtrOutput { return v.PolicyConfiguration }).(AlertPolicyConfigurationPtrOutput)
}

// The project name.
func (o AlertOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// Multiple conditions for configured alarm query.
func (o AlertOutput) QueryLists() AlertQueryListArrayOutput {
	return o.ApplyT(func(v *Alert) AlertQueryListArrayOutput { return v.QueryLists }).(AlertQueryListArrayOutput)
}

// schedule for alert.
func (o AlertOutput) Schedule() AlertSchedulePtrOutput {
	return o.ApplyT(func(v *Alert) AlertSchedulePtrOutput { return v.Schedule }).(AlertSchedulePtrOutput)
}

// Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
//
// Deprecated: Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
func (o AlertOutput) ScheduleInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.ScheduleInterval }).(pulumi.StringOutput)
}

// Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
//
// Deprecated: Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead.
func (o AlertOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.ScheduleType }).(pulumi.StringOutput)
}

// when new alert is resolved, whether to notify, default is false.
func (o AlertOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.BoolPtrOutput { return v.SendResolved }).(pulumi.BoolPtrOutput)
}

// Severity configuration for new alert.
func (o AlertOutput) SeverityConfigurations() AlertSeverityConfigurationArrayOutput {
	return o.ApplyT(func(v *Alert) AlertSeverityConfigurationArrayOutput { return v.SeverityConfigurations }).(AlertSeverityConfigurationArrayOutput)
}

// Template configuration for alert, when `type` is `tpl`.
func (o AlertOutput) TemplateConfiguration() AlertTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *Alert) AlertTemplateConfigurationPtrOutput { return v.TemplateConfiguration }).(AlertTemplateConfigurationPtrOutput)
}

// Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
func (o AlertOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v *Alert) pulumi.IntOutput { return v.Threshold }).(pulumi.IntOutput)
}

// Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
//
// Deprecated: Deprecated from 1.161.0+, use repeat_interval in policy_configuration
func (o AlertOutput) Throttling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Throttling }).(pulumi.StringPtrOutput)
}

// including FixedRate,Hourly,Daily,Weekly,Cron.
func (o AlertOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The version of alert, new alert is 2.0.
func (o AlertOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

type AlertArrayOutput struct{ *pulumi.OutputState }

func (AlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alert)(nil)).Elem()
}

func (o AlertArrayOutput) ToAlertArrayOutput() AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) ToAlertArrayOutputWithContext(ctx context.Context) AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) Index(i pulumi.IntInput) AlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Alert {
		return vs[0].([]*Alert)[vs[1].(int)]
	}).(AlertOutput)
}

type AlertMapOutput struct{ *pulumi.OutputState }

func (AlertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alert)(nil)).Elem()
}

func (o AlertMapOutput) ToAlertMapOutput() AlertMapOutput {
	return o
}

func (o AlertMapOutput) ToAlertMapOutputWithContext(ctx context.Context) AlertMapOutput {
	return o
}

func (o AlertMapOutput) MapIndex(k pulumi.StringInput) AlertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Alert {
		return vs[0].(map[string]*Alert)[vs[1].(string)]
	}).(AlertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertInput)(nil)).Elem(), &Alert{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertArrayInput)(nil)).Elem(), AlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMapInput)(nil)).Elem(), AlertMap{})
	pulumi.RegisterOutputType(AlertOutput{})
	pulumi.RegisterOutputType(AlertArrayOutput{})
	pulumi.RegisterOutputType(AlertMapOutput{})
}
