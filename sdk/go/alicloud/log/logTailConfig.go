// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// Logtial config can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:log/logTailConfig:LogTailConfig example tf-log:tf-log-store:tf-log-config
// ```
type LogTailConfig struct {
	pulumi.CustomResourceState

	// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
	InputDetail pulumi.StringOutput `pulumi:"inputDetail"`
	// The input type. Currently only two types of files and plugin are supported.
	InputType pulumi.StringOutput `pulumi:"inputType"`
	// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
	LogSample pulumi.StringPtrOutput `pulumi:"logSample"`
	// The log store name to the query index belongs.
	Logstore pulumi.StringOutput `pulumi:"logstore"`
	// The Logtail configuration name, which is unique in the same project.
	Name pulumi.StringOutput `pulumi:"name"`
	// The output type. Currently, only LogService is supported.
	OutputType pulumi.StringOutput `pulumi:"outputType"`
	// The project name to the log store belongs.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewLogTailConfig registers a new resource with the given unique name, arguments, and options.
func NewLogTailConfig(ctx *pulumi.Context,
	name string, args *LogTailConfigArgs, opts ...pulumi.ResourceOption) (*LogTailConfig, error) {
	if args == nil || args.InputDetail == nil {
		return nil, errors.New("missing required argument 'InputDetail'")
	}
	if args == nil || args.InputType == nil {
		return nil, errors.New("missing required argument 'InputType'")
	}
	if args == nil || args.Logstore == nil {
		return nil, errors.New("missing required argument 'Logstore'")
	}
	if args == nil || args.OutputType == nil {
		return nil, errors.New("missing required argument 'OutputType'")
	}
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	if args == nil {
		args = &LogTailConfigArgs{}
	}
	var resource LogTailConfig
	err := ctx.RegisterResource("alicloud:log/logTailConfig:LogTailConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogTailConfig gets an existing LogTailConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogTailConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogTailConfigState, opts ...pulumi.ResourceOption) (*LogTailConfig, error) {
	var resource LogTailConfig
	err := ctx.ReadResource("alicloud:log/logTailConfig:LogTailConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogTailConfig resources.
type logTailConfigState struct {
	// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
	InputDetail *string `pulumi:"inputDetail"`
	// The input type. Currently only two types of files and plugin are supported.
	InputType *string `pulumi:"inputType"`
	// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
	LogSample *string `pulumi:"logSample"`
	// The log store name to the query index belongs.
	Logstore *string `pulumi:"logstore"`
	// The Logtail configuration name, which is unique in the same project.
	Name *string `pulumi:"name"`
	// The output type. Currently, only LogService is supported.
	OutputType *string `pulumi:"outputType"`
	// The project name to the log store belongs.
	Project *string `pulumi:"project"`
}

type LogTailConfigState struct {
	// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
	InputDetail pulumi.StringPtrInput
	// The input type. Currently only two types of files and plugin are supported.
	InputType pulumi.StringPtrInput
	// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
	LogSample pulumi.StringPtrInput
	// The log store name to the query index belongs.
	Logstore pulumi.StringPtrInput
	// The Logtail configuration name, which is unique in the same project.
	Name pulumi.StringPtrInput
	// The output type. Currently, only LogService is supported.
	OutputType pulumi.StringPtrInput
	// The project name to the log store belongs.
	Project pulumi.StringPtrInput
}

func (LogTailConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*logTailConfigState)(nil)).Elem()
}

type logTailConfigArgs struct {
	// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
	InputDetail string `pulumi:"inputDetail"`
	// The input type. Currently only two types of files and plugin are supported.
	InputType string `pulumi:"inputType"`
	// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
	LogSample *string `pulumi:"logSample"`
	// The log store name to the query index belongs.
	Logstore string `pulumi:"logstore"`
	// The Logtail configuration name, which is unique in the same project.
	Name *string `pulumi:"name"`
	// The output type. Currently, only LogService is supported.
	OutputType string `pulumi:"outputType"`
	// The project name to the log store belongs.
	Project string `pulumi:"project"`
}

// The set of arguments for constructing a LogTailConfig resource.
type LogTailConfigArgs struct {
	// The logtail configure the required JSON files. ([Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm))
	InputDetail pulumi.StringInput
	// The input type. Currently only two types of files and plugin are supported.
	InputType pulumi.StringInput
	// （Optional）The log sample of the Logtail configuration. The log size cannot exceed 1,000 bytes.
	LogSample pulumi.StringPtrInput
	// The log store name to the query index belongs.
	Logstore pulumi.StringInput
	// The Logtail configuration name, which is unique in the same project.
	Name pulumi.StringPtrInput
	// The output type. Currently, only LogService is supported.
	OutputType pulumi.StringInput
	// The project name to the log store belongs.
	Project pulumi.StringInput
}

func (LogTailConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logTailConfigArgs)(nil)).Elem()
}

type LogTailConfigInput interface {
	pulumi.Input

	ToLogTailConfigOutput() LogTailConfigOutput
	ToLogTailConfigOutputWithContext(ctx context.Context) LogTailConfigOutput
}

func (LogTailConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*LogTailConfig)(nil)).Elem()
}

func (i LogTailConfig) ToLogTailConfigOutput() LogTailConfigOutput {
	return i.ToLogTailConfigOutputWithContext(context.Background())
}

func (i LogTailConfig) ToLogTailConfigOutputWithContext(ctx context.Context) LogTailConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogTailConfigOutput)
}

type LogTailConfigOutput struct {
	*pulumi.OutputState
}

func (LogTailConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogTailConfigOutput)(nil)).Elem()
}

func (o LogTailConfigOutput) ToLogTailConfigOutput() LogTailConfigOutput {
	return o
}

func (o LogTailConfigOutput) ToLogTailConfigOutputWithContext(ctx context.Context) LogTailConfigOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LogTailConfigOutput{})
}
