// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAccessGroupsGroup struct {
	// The name of access group.
	AccessGroupName string `pulumi:"accessGroupName"`
	// Filter results by a specific AccessGroupType.
	AccessGroupType string `pulumi:"accessGroupType"`
	// Filter results by a specific Description.
	Description string `pulumi:"description"`
	// This ID of this AccessGroup. It is formatted to ``<access_group_id>:<file_system_type>``. Before version 1.95.0, the value is `accessGroupName`.
	Id string `pulumi:"id"`
	// MountTargetCount block of the AccessGroup
	MountTargetCount int `pulumi:"mountTargetCount"`
	// RuleCount of the AccessGroup.
	RuleCount int `pulumi:"ruleCount"`
	// Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
	Type string `pulumi:"type"`
}

// GetAccessGroupsGroupInput is an input type that accepts GetAccessGroupsGroupArgs and GetAccessGroupsGroupOutput values.
// You can construct a concrete instance of `GetAccessGroupsGroupInput` via:
//
//          GetAccessGroupsGroupArgs{...}
type GetAccessGroupsGroupInput interface {
	pulumi.Input

	ToGetAccessGroupsGroupOutput() GetAccessGroupsGroupOutput
	ToGetAccessGroupsGroupOutputWithContext(context.Context) GetAccessGroupsGroupOutput
}

type GetAccessGroupsGroupArgs struct {
	// The name of access group.
	AccessGroupName pulumi.StringInput `pulumi:"accessGroupName"`
	// Filter results by a specific AccessGroupType.
	AccessGroupType pulumi.StringInput `pulumi:"accessGroupType"`
	// Filter results by a specific Description.
	Description pulumi.StringInput `pulumi:"description"`
	// This ID of this AccessGroup. It is formatted to ``<access_group_id>:<file_system_type>``. Before version 1.95.0, the value is `accessGroupName`.
	Id pulumi.StringInput `pulumi:"id"`
	// MountTargetCount block of the AccessGroup
	MountTargetCount pulumi.IntInput `pulumi:"mountTargetCount"`
	// RuleCount of the AccessGroup.
	RuleCount pulumi.IntInput `pulumi:"ruleCount"`
	// Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAccessGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsGroup)(nil)).Elem()
}

func (i GetAccessGroupsGroupArgs) ToGetAccessGroupsGroupOutput() GetAccessGroupsGroupOutput {
	return i.ToGetAccessGroupsGroupOutputWithContext(context.Background())
}

func (i GetAccessGroupsGroupArgs) ToGetAccessGroupsGroupOutputWithContext(ctx context.Context) GetAccessGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsGroupOutput)
}

// GetAccessGroupsGroupArrayInput is an input type that accepts GetAccessGroupsGroupArray and GetAccessGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAccessGroupsGroupArrayInput` via:
//
//          GetAccessGroupsGroupArray{ GetAccessGroupsGroupArgs{...} }
type GetAccessGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAccessGroupsGroupArrayOutput() GetAccessGroupsGroupArrayOutput
	ToGetAccessGroupsGroupArrayOutputWithContext(context.Context) GetAccessGroupsGroupArrayOutput
}

type GetAccessGroupsGroupArray []GetAccessGroupsGroupInput

func (GetAccessGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsGroup)(nil)).Elem()
}

func (i GetAccessGroupsGroupArray) ToGetAccessGroupsGroupArrayOutput() GetAccessGroupsGroupArrayOutput {
	return i.ToGetAccessGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAccessGroupsGroupArray) ToGetAccessGroupsGroupArrayOutputWithContext(ctx context.Context) GetAccessGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessGroupsGroupArrayOutput)
}

type GetAccessGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessGroupsGroup)(nil)).Elem()
}

func (o GetAccessGroupsGroupOutput) ToGetAccessGroupsGroupOutput() GetAccessGroupsGroupOutput {
	return o
}

func (o GetAccessGroupsGroupOutput) ToGetAccessGroupsGroupOutputWithContext(ctx context.Context) GetAccessGroupsGroupOutput {
	return o
}

// The name of access group.
func (o GetAccessGroupsGroupOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) string { return v.AccessGroupName }).(pulumi.StringOutput)
}

// Filter results by a specific AccessGroupType.
func (o GetAccessGroupsGroupOutput) AccessGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) string { return v.AccessGroupType }).(pulumi.StringOutput)
}

// Filter results by a specific Description.
func (o GetAccessGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// This ID of this AccessGroup. It is formatted to ``<access_group_id>:<file_system_type>``. Before version 1.95.0, the value is `accessGroupName`.
func (o GetAccessGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// MountTargetCount block of the AccessGroup
func (o GetAccessGroupsGroupOutput) MountTargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) int { return v.MountTargetCount }).(pulumi.IntOutput)
}

// RuleCount of the AccessGroup.
func (o GetAccessGroupsGroupOutput) RuleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) int { return v.RuleCount }).(pulumi.IntOutput)
}

// Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
func (o GetAccessGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetAccessGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAccessGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessGroupsGroup)(nil)).Elem()
}

func (o GetAccessGroupsGroupArrayOutput) ToGetAccessGroupsGroupArrayOutput() GetAccessGroupsGroupArrayOutput {
	return o
}

func (o GetAccessGroupsGroupArrayOutput) ToGetAccessGroupsGroupArrayOutputWithContext(ctx context.Context) GetAccessGroupsGroupArrayOutput {
	return o
}

func (o GetAccessGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAccessGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessGroupsGroup {
		return vs[0].([]GetAccessGroupsGroup)[vs[1].(int)]
	}).(GetAccessGroupsGroupOutput)
}

type GetAccessRulesRule struct {
	// AccessRuleId of the AccessRule.
	AccessRuleId string `pulumi:"accessRuleId"`
	// Priority of the AccessRule.
	Priority int `pulumi:"priority"`
	// Filter results by a specific RWAccess.
	RwAccess string `pulumi:"rwAccess"`
	// Filter results by a specific SourceCidrIp.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
	// Filter results by a specific UserAccess.
	UserAccess string `pulumi:"userAccess"`
}

// GetAccessRulesRuleInput is an input type that accepts GetAccessRulesRuleArgs and GetAccessRulesRuleOutput values.
// You can construct a concrete instance of `GetAccessRulesRuleInput` via:
//
//          GetAccessRulesRuleArgs{...}
type GetAccessRulesRuleInput interface {
	pulumi.Input

	ToGetAccessRulesRuleOutput() GetAccessRulesRuleOutput
	ToGetAccessRulesRuleOutputWithContext(context.Context) GetAccessRulesRuleOutput
}

type GetAccessRulesRuleArgs struct {
	// AccessRuleId of the AccessRule.
	AccessRuleId pulumi.StringInput `pulumi:"accessRuleId"`
	// Priority of the AccessRule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Filter results by a specific RWAccess.
	RwAccess pulumi.StringInput `pulumi:"rwAccess"`
	// Filter results by a specific SourceCidrIp.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
	// Filter results by a specific UserAccess.
	UserAccess pulumi.StringInput `pulumi:"userAccess"`
}

func (GetAccessRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessRulesRule)(nil)).Elem()
}

func (i GetAccessRulesRuleArgs) ToGetAccessRulesRuleOutput() GetAccessRulesRuleOutput {
	return i.ToGetAccessRulesRuleOutputWithContext(context.Background())
}

func (i GetAccessRulesRuleArgs) ToGetAccessRulesRuleOutputWithContext(ctx context.Context) GetAccessRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessRulesRuleOutput)
}

// GetAccessRulesRuleArrayInput is an input type that accepts GetAccessRulesRuleArray and GetAccessRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetAccessRulesRuleArrayInput` via:
//
//          GetAccessRulesRuleArray{ GetAccessRulesRuleArgs{...} }
type GetAccessRulesRuleArrayInput interface {
	pulumi.Input

	ToGetAccessRulesRuleArrayOutput() GetAccessRulesRuleArrayOutput
	ToGetAccessRulesRuleArrayOutputWithContext(context.Context) GetAccessRulesRuleArrayOutput
}

type GetAccessRulesRuleArray []GetAccessRulesRuleInput

func (GetAccessRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessRulesRule)(nil)).Elem()
}

func (i GetAccessRulesRuleArray) ToGetAccessRulesRuleArrayOutput() GetAccessRulesRuleArrayOutput {
	return i.ToGetAccessRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetAccessRulesRuleArray) ToGetAccessRulesRuleArrayOutputWithContext(ctx context.Context) GetAccessRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessRulesRuleArrayOutput)
}

type GetAccessRulesRuleOutput struct{ *pulumi.OutputState }

func (GetAccessRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessRulesRule)(nil)).Elem()
}

func (o GetAccessRulesRuleOutput) ToGetAccessRulesRuleOutput() GetAccessRulesRuleOutput {
	return o
}

func (o GetAccessRulesRuleOutput) ToGetAccessRulesRuleOutputWithContext(ctx context.Context) GetAccessRulesRuleOutput {
	return o
}

// AccessRuleId of the AccessRule.
func (o GetAccessRulesRuleOutput) AccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesRule) string { return v.AccessRuleId }).(pulumi.StringOutput)
}

// Priority of the AccessRule.
func (o GetAccessRulesRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessRulesRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Filter results by a specific RWAccess.
func (o GetAccessRulesRuleOutput) RwAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesRule) string { return v.RwAccess }).(pulumi.StringOutput)
}

// Filter results by a specific SourceCidrIp.
func (o GetAccessRulesRuleOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesRule) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

// Filter results by a specific UserAccess.
func (o GetAccessRulesRuleOutput) UserAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessRulesRule) string { return v.UserAccess }).(pulumi.StringOutput)
}

type GetAccessRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccessRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessRulesRule)(nil)).Elem()
}

func (o GetAccessRulesRuleArrayOutput) ToGetAccessRulesRuleArrayOutput() GetAccessRulesRuleArrayOutput {
	return o
}

func (o GetAccessRulesRuleArrayOutput) ToGetAccessRulesRuleArrayOutputWithContext(ctx context.Context) GetAccessRulesRuleArrayOutput {
	return o
}

func (o GetAccessRulesRuleArrayOutput) Index(i pulumi.IntInput) GetAccessRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessRulesRule {
		return vs[0].([]GetAccessRulesRule)[vs[1].(int)]
	}).(GetAccessRulesRuleOutput)
}

type GetAutoSnapshotPoliciesPolicy struct {
	// The ID of the automatic snapshot policy.
	AutoSnapshotPolicyId string `pulumi:"autoSnapshotPolicyId"`
	// The name of the automatic snapshot policy.
	AutoSnapshotPolicyName string `pulumi:"autoSnapshotPolicyName"`
	// The time when the automatic snapshot policy was created.
	CreateTime string `pulumi:"createTime"`
	// The number of file systems to which the automatic snapshot policy applies.
	FileSystemNums int `pulumi:"fileSystemNums"`
	// ID of the Auto Snapshot Policy.
	Id string `pulumi:"id"`
	// The day on which an auto snapshot was created.
	RepeatWeekdays []string `pulumi:"repeatWeekdays"`
	// The number of days for which you want to retain auto snapshots.
	RetentionDays int `pulumi:"retentionDays"`
	// The status of the automatic snapshot policy. Valid values: `Creating`, `Available`.
	Status string `pulumi:"status"`
	// The point in time at which an auto snapshot was created. Unit: hours.
	TimePoints []string `pulumi:"timePoints"`
}

// GetAutoSnapshotPoliciesPolicyInput is an input type that accepts GetAutoSnapshotPoliciesPolicyArgs and GetAutoSnapshotPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetAutoSnapshotPoliciesPolicyInput` via:
//
//          GetAutoSnapshotPoliciesPolicyArgs{...}
type GetAutoSnapshotPoliciesPolicyInput interface {
	pulumi.Input

	ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput
	ToGetAutoSnapshotPoliciesPolicyOutputWithContext(context.Context) GetAutoSnapshotPoliciesPolicyOutput
}

type GetAutoSnapshotPoliciesPolicyArgs struct {
	// The ID of the automatic snapshot policy.
	AutoSnapshotPolicyId pulumi.StringInput `pulumi:"autoSnapshotPolicyId"`
	// The name of the automatic snapshot policy.
	AutoSnapshotPolicyName pulumi.StringInput `pulumi:"autoSnapshotPolicyName"`
	// The time when the automatic snapshot policy was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The number of file systems to which the automatic snapshot policy applies.
	FileSystemNums pulumi.IntInput `pulumi:"fileSystemNums"`
	// ID of the Auto Snapshot Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The day on which an auto snapshot was created.
	RepeatWeekdays pulumi.StringArrayInput `pulumi:"repeatWeekdays"`
	// The number of days for which you want to retain auto snapshots.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
	// The status of the automatic snapshot policy. Valid values: `Creating`, `Available`.
	Status pulumi.StringInput `pulumi:"status"`
	// The point in time at which an auto snapshot was created. Unit: hours.
	TimePoints pulumi.StringArrayInput `pulumi:"timePoints"`
}

func (GetAutoSnapshotPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (i GetAutoSnapshotPoliciesPolicyArgs) ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput {
	return i.ToGetAutoSnapshotPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetAutoSnapshotPoliciesPolicyArgs) ToGetAutoSnapshotPoliciesPolicyOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoSnapshotPoliciesPolicyOutput)
}

// GetAutoSnapshotPoliciesPolicyArrayInput is an input type that accepts GetAutoSnapshotPoliciesPolicyArray and GetAutoSnapshotPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetAutoSnapshotPoliciesPolicyArrayInput` via:
//
//          GetAutoSnapshotPoliciesPolicyArray{ GetAutoSnapshotPoliciesPolicyArgs{...} }
type GetAutoSnapshotPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput
	ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput
}

type GetAutoSnapshotPoliciesPolicyArray []GetAutoSnapshotPoliciesPolicyInput

func (GetAutoSnapshotPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (i GetAutoSnapshotPoliciesPolicyArray) ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput {
	return i.ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetAutoSnapshotPoliciesPolicyArray) ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoSnapshotPoliciesPolicyArrayOutput)
}

type GetAutoSnapshotPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetAutoSnapshotPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (o GetAutoSnapshotPoliciesPolicyOutput) ToGetAutoSnapshotPoliciesPolicyOutput() GetAutoSnapshotPoliciesPolicyOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyOutput) ToGetAutoSnapshotPoliciesPolicyOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyOutput {
	return o
}

// The ID of the automatic snapshot policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) AutoSnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.AutoSnapshotPolicyId }).(pulumi.StringOutput)
}

// The name of the automatic snapshot policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) AutoSnapshotPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.AutoSnapshotPolicyName }).(pulumi.StringOutput)
}

// The time when the automatic snapshot policy was created.
func (o GetAutoSnapshotPoliciesPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The number of file systems to which the automatic snapshot policy applies.
func (o GetAutoSnapshotPoliciesPolicyOutput) FileSystemNums() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.FileSystemNums }).(pulumi.IntOutput)
}

// ID of the Auto Snapshot Policy.
func (o GetAutoSnapshotPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The day on which an auto snapshot was created.
func (o GetAutoSnapshotPoliciesPolicyOutput) RepeatWeekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) []string { return v.RepeatWeekdays }).(pulumi.StringArrayOutput)
}

// The number of days for which you want to retain auto snapshots.
func (o GetAutoSnapshotPoliciesPolicyOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) int { return v.RetentionDays }).(pulumi.IntOutput)
}

// The status of the automatic snapshot policy. Valid values: `Creating`, `Available`.
func (o GetAutoSnapshotPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The point in time at which an auto snapshot was created. Unit: hours.
func (o GetAutoSnapshotPoliciesPolicyOutput) TimePoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesPolicy) []string { return v.TimePoints }).(pulumi.StringArrayOutput)
}

type GetAutoSnapshotPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAutoSnapshotPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoSnapshotPoliciesPolicy)(nil)).Elem()
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) ToGetAutoSnapshotPoliciesPolicyArrayOutput() GetAutoSnapshotPoliciesPolicyArrayOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) ToGetAutoSnapshotPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesPolicyArrayOutput {
	return o
}

func (o GetAutoSnapshotPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetAutoSnapshotPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoSnapshotPoliciesPolicy {
		return vs[0].([]GetAutoSnapshotPoliciesPolicy)[vs[1].(int)]
	}).(GetAutoSnapshotPoliciesPolicyOutput)
}

type GetDataFlowsFlow struct {
	// The time when Fileset was created. Executing the ISO8601 standard means that the return format is: 'yyyy-MM-ddTHH:mm:ssZ'.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Data Flow.
	DataFlowId string `pulumi:"dataFlowId"`
	// The Description of data flow.
	Description string `pulumi:"description"`
	// Error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The ID of the file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The path of Fileset in the CPFS file system.
	FileSystemPath string `pulumi:"fileSystemPath"`
	// Description of automatic update.
	FsetDescription string `pulumi:"fsetDescription"`
	// The ID of the Fileset.
	FsetId string `pulumi:"fsetId"`
	// The resource ID of the data flow. The value formats as `<file_system_id>:<data_flow_id>`.
	Id string `pulumi:"id"`
	// The security protection type of the source storage.
	SourceSecurityType string `pulumi:"sourceSecurityType"`
	// The access path of the source store. Format: `<storage type>://<path>`.
	SourceStorage string `pulumi:"sourceStorage"`
	// The status of the Data flow.
	Status string `pulumi:"status"`
	// The maximum transmission bandwidth of data flow, unit: `MB/s`.
	Throughput int `pulumi:"throughput"`
}

// GetDataFlowsFlowInput is an input type that accepts GetDataFlowsFlowArgs and GetDataFlowsFlowOutput values.
// You can construct a concrete instance of `GetDataFlowsFlowInput` via:
//
//          GetDataFlowsFlowArgs{...}
type GetDataFlowsFlowInput interface {
	pulumi.Input

	ToGetDataFlowsFlowOutput() GetDataFlowsFlowOutput
	ToGetDataFlowsFlowOutputWithContext(context.Context) GetDataFlowsFlowOutput
}

type GetDataFlowsFlowArgs struct {
	// The time when Fileset was created. Executing the ISO8601 standard means that the return format is: 'yyyy-MM-ddTHH:mm:ssZ'.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Data Flow.
	DataFlowId pulumi.StringInput `pulumi:"dataFlowId"`
	// The Description of data flow.
	Description pulumi.StringInput `pulumi:"description"`
	// Error message.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// The ID of the file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The path of Fileset in the CPFS file system.
	FileSystemPath pulumi.StringInput `pulumi:"fileSystemPath"`
	// Description of automatic update.
	FsetDescription pulumi.StringInput `pulumi:"fsetDescription"`
	// The ID of the Fileset.
	FsetId pulumi.StringInput `pulumi:"fsetId"`
	// The resource ID of the data flow. The value formats as `<file_system_id>:<data_flow_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The security protection type of the source storage.
	SourceSecurityType pulumi.StringInput `pulumi:"sourceSecurityType"`
	// The access path of the source store. Format: `<storage type>://<path>`.
	SourceStorage pulumi.StringInput `pulumi:"sourceStorage"`
	// The status of the Data flow.
	Status pulumi.StringInput `pulumi:"status"`
	// The maximum transmission bandwidth of data flow, unit: `MB/s`.
	Throughput pulumi.IntInput `pulumi:"throughput"`
}

func (GetDataFlowsFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataFlowsFlow)(nil)).Elem()
}

func (i GetDataFlowsFlowArgs) ToGetDataFlowsFlowOutput() GetDataFlowsFlowOutput {
	return i.ToGetDataFlowsFlowOutputWithContext(context.Background())
}

func (i GetDataFlowsFlowArgs) ToGetDataFlowsFlowOutputWithContext(ctx context.Context) GetDataFlowsFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataFlowsFlowOutput)
}

// GetDataFlowsFlowArrayInput is an input type that accepts GetDataFlowsFlowArray and GetDataFlowsFlowArrayOutput values.
// You can construct a concrete instance of `GetDataFlowsFlowArrayInput` via:
//
//          GetDataFlowsFlowArray{ GetDataFlowsFlowArgs{...} }
type GetDataFlowsFlowArrayInput interface {
	pulumi.Input

	ToGetDataFlowsFlowArrayOutput() GetDataFlowsFlowArrayOutput
	ToGetDataFlowsFlowArrayOutputWithContext(context.Context) GetDataFlowsFlowArrayOutput
}

type GetDataFlowsFlowArray []GetDataFlowsFlowInput

func (GetDataFlowsFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataFlowsFlow)(nil)).Elem()
}

func (i GetDataFlowsFlowArray) ToGetDataFlowsFlowArrayOutput() GetDataFlowsFlowArrayOutput {
	return i.ToGetDataFlowsFlowArrayOutputWithContext(context.Background())
}

func (i GetDataFlowsFlowArray) ToGetDataFlowsFlowArrayOutputWithContext(ctx context.Context) GetDataFlowsFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataFlowsFlowArrayOutput)
}

type GetDataFlowsFlowOutput struct{ *pulumi.OutputState }

func (GetDataFlowsFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataFlowsFlow)(nil)).Elem()
}

func (o GetDataFlowsFlowOutput) ToGetDataFlowsFlowOutput() GetDataFlowsFlowOutput {
	return o
}

func (o GetDataFlowsFlowOutput) ToGetDataFlowsFlowOutputWithContext(ctx context.Context) GetDataFlowsFlowOutput {
	return o
}

// The time when Fileset was created. Executing the ISO8601 standard means that the return format is: 'yyyy-MM-ddTHH:mm:ssZ'.
func (o GetDataFlowsFlowOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Data Flow.
func (o GetDataFlowsFlowOutput) DataFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.DataFlowId }).(pulumi.StringOutput)
}

// The Description of data flow.
func (o GetDataFlowsFlowOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.Description }).(pulumi.StringOutput)
}

// Error message.
func (o GetDataFlowsFlowOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The ID of the file system.
func (o GetDataFlowsFlowOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The path of Fileset in the CPFS file system.
func (o GetDataFlowsFlowOutput) FileSystemPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.FileSystemPath }).(pulumi.StringOutput)
}

// Description of automatic update.
func (o GetDataFlowsFlowOutput) FsetDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.FsetDescription }).(pulumi.StringOutput)
}

// The ID of the Fileset.
func (o GetDataFlowsFlowOutput) FsetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.FsetId }).(pulumi.StringOutput)
}

// The resource ID of the data flow. The value formats as `<file_system_id>:<data_flow_id>`.
func (o GetDataFlowsFlowOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.Id }).(pulumi.StringOutput)
}

// The security protection type of the source storage.
func (o GetDataFlowsFlowOutput) SourceSecurityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.SourceSecurityType }).(pulumi.StringOutput)
}

// The access path of the source store. Format: `<storage type>://<path>`.
func (o GetDataFlowsFlowOutput) SourceStorage() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.SourceStorage }).(pulumi.StringOutput)
}

// The status of the Data flow.
func (o GetDataFlowsFlowOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) string { return v.Status }).(pulumi.StringOutput)
}

// The maximum transmission bandwidth of data flow, unit: `MB/s`.
func (o GetDataFlowsFlowOutput) Throughput() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataFlowsFlow) int { return v.Throughput }).(pulumi.IntOutput)
}

type GetDataFlowsFlowArrayOutput struct{ *pulumi.OutputState }

func (GetDataFlowsFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataFlowsFlow)(nil)).Elem()
}

func (o GetDataFlowsFlowArrayOutput) ToGetDataFlowsFlowArrayOutput() GetDataFlowsFlowArrayOutput {
	return o
}

func (o GetDataFlowsFlowArrayOutput) ToGetDataFlowsFlowArrayOutputWithContext(ctx context.Context) GetDataFlowsFlowArrayOutput {
	return o
}

func (o GetDataFlowsFlowArrayOutput) Index(i pulumi.IntInput) GetDataFlowsFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataFlowsFlow {
		return vs[0].([]GetDataFlowsFlow)[vs[1].(int)]
	}).(GetDataFlowsFlowOutput)
}

type GetFileSystemsSystem struct {
	// (Optional, Available in v1.140.0+) The capacity of the file system.
	Capacity int `pulumi:"capacity"`
	// Time of creation.
	CreateTime string `pulumi:"createTime"`
	// Description of the FileSystem.
	Description string `pulumi:"description"`
	// (Optional, Available in v1.121.2+) Whether the file system is encrypted.
	// * Valid values:
	// * `0`: The file system is not encrypted.
	// * `1`: The file system is encrypted with a managed secret key.
	// * `2`: User management key.
	EncryptType int `pulumi:"encryptType"`
	// The type of the file system.
	// Valid values:
	// `standard` (Default),
	// `extreme`.
	FileSystemType string `pulumi:"fileSystemType"`
	// ID of the FileSystem.
	Id string `pulumi:"id"`
	// (Optional, Available in v1.140.0+) The id of the KMS key.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// MeteredSize of the FileSystem.
	MeteredSize int `pulumi:"meteredSize"`
	// The protocol type of the file system.
	// Valid values:
	// `NFS`,
	// `SMB` (Available when the `fileSystemType` is `standard`).
	ProtocolType string `pulumi:"protocolType"`
	// ID of the region where the FileSystem is located.
	RegionId string `pulumi:"regionId"`
	// The storage type of the file system.
	// * Valid values:
	StorageType string `pulumi:"storageType"`
	// (Optional, Available in v1.140.0+) The id of the zone. Each region consists of multiple isolated locations known as zones. Each zone has an independent power supply and network.
	ZoneId string `pulumi:"zoneId"`
}

// GetFileSystemsSystemInput is an input type that accepts GetFileSystemsSystemArgs and GetFileSystemsSystemOutput values.
// You can construct a concrete instance of `GetFileSystemsSystemInput` via:
//
//          GetFileSystemsSystemArgs{...}
type GetFileSystemsSystemInput interface {
	pulumi.Input

	ToGetFileSystemsSystemOutput() GetFileSystemsSystemOutput
	ToGetFileSystemsSystemOutputWithContext(context.Context) GetFileSystemsSystemOutput
}

type GetFileSystemsSystemArgs struct {
	// (Optional, Available in v1.140.0+) The capacity of the file system.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Time of creation.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of the FileSystem.
	Description pulumi.StringInput `pulumi:"description"`
	// (Optional, Available in v1.121.2+) Whether the file system is encrypted.
	// * Valid values:
	// * `0`: The file system is not encrypted.
	// * `1`: The file system is encrypted with a managed secret key.
	// * `2`: User management key.
	EncryptType pulumi.IntInput `pulumi:"encryptType"`
	// The type of the file system.
	// Valid values:
	// `standard` (Default),
	// `extreme`.
	FileSystemType pulumi.StringInput `pulumi:"fileSystemType"`
	// ID of the FileSystem.
	Id pulumi.StringInput `pulumi:"id"`
	// (Optional, Available in v1.140.0+) The id of the KMS key.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// MeteredSize of the FileSystem.
	MeteredSize pulumi.IntInput `pulumi:"meteredSize"`
	// The protocol type of the file system.
	// Valid values:
	// `NFS`,
	// `SMB` (Available when the `fileSystemType` is `standard`).
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// ID of the region where the FileSystem is located.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The storage type of the file system.
	// * Valid values:
	StorageType pulumi.StringInput `pulumi:"storageType"`
	// (Optional, Available in v1.140.0+) The id of the zone. Each region consists of multiple isolated locations known as zones. Each zone has an independent power supply and network.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetFileSystemsSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsSystem)(nil)).Elem()
}

func (i GetFileSystemsSystemArgs) ToGetFileSystemsSystemOutput() GetFileSystemsSystemOutput {
	return i.ToGetFileSystemsSystemOutputWithContext(context.Background())
}

func (i GetFileSystemsSystemArgs) ToGetFileSystemsSystemOutputWithContext(ctx context.Context) GetFileSystemsSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsSystemOutput)
}

// GetFileSystemsSystemArrayInput is an input type that accepts GetFileSystemsSystemArray and GetFileSystemsSystemArrayOutput values.
// You can construct a concrete instance of `GetFileSystemsSystemArrayInput` via:
//
//          GetFileSystemsSystemArray{ GetFileSystemsSystemArgs{...} }
type GetFileSystemsSystemArrayInput interface {
	pulumi.Input

	ToGetFileSystemsSystemArrayOutput() GetFileSystemsSystemArrayOutput
	ToGetFileSystemsSystemArrayOutputWithContext(context.Context) GetFileSystemsSystemArrayOutput
}

type GetFileSystemsSystemArray []GetFileSystemsSystemInput

func (GetFileSystemsSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsSystem)(nil)).Elem()
}

func (i GetFileSystemsSystemArray) ToGetFileSystemsSystemArrayOutput() GetFileSystemsSystemArrayOutput {
	return i.ToGetFileSystemsSystemArrayOutputWithContext(context.Background())
}

func (i GetFileSystemsSystemArray) ToGetFileSystemsSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsSystemArrayOutput)
}

type GetFileSystemsSystemOutput struct{ *pulumi.OutputState }

func (GetFileSystemsSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsSystem)(nil)).Elem()
}

func (o GetFileSystemsSystemOutput) ToGetFileSystemsSystemOutput() GetFileSystemsSystemOutput {
	return o
}

func (o GetFileSystemsSystemOutput) ToGetFileSystemsSystemOutputWithContext(ctx context.Context) GetFileSystemsSystemOutput {
	return o
}

// (Optional, Available in v1.140.0+) The capacity of the file system.
func (o GetFileSystemsSystemOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) int { return v.Capacity }).(pulumi.IntOutput)
}

// Time of creation.
func (o GetFileSystemsSystemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the FileSystem.
func (o GetFileSystemsSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional, Available in v1.121.2+) Whether the file system is encrypted.
// * Valid values:
// * `0`: The file system is not encrypted.
// * `1`: The file system is encrypted with a managed secret key.
// * `2`: User management key.
func (o GetFileSystemsSystemOutput) EncryptType() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) int { return v.EncryptType }).(pulumi.IntOutput)
}

// The type of the file system.
// Valid values:
// `standard` (Default),
// `extreme`.
func (o GetFileSystemsSystemOutput) FileSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.FileSystemType }).(pulumi.StringOutput)
}

// ID of the FileSystem.
func (o GetFileSystemsSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional, Available in v1.140.0+) The id of the KMS key.
func (o GetFileSystemsSystemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// MeteredSize of the FileSystem.
func (o GetFileSystemsSystemOutput) MeteredSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) int { return v.MeteredSize }).(pulumi.IntOutput)
}

// The protocol type of the file system.
// Valid values:
// `NFS`,
// `SMB` (Available when the `fileSystemType` is `standard`).
func (o GetFileSystemsSystemOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// ID of the region where the FileSystem is located.
func (o GetFileSystemsSystemOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.RegionId }).(pulumi.StringOutput)
}

// The storage type of the file system.
// * Valid values:
func (o GetFileSystemsSystemOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.StorageType }).(pulumi.StringOutput)
}

// (Optional, Available in v1.140.0+) The id of the zone. Each region consists of multiple isolated locations known as zones. Each zone has an independent power supply and network.
func (o GetFileSystemsSystemOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsSystem) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetFileSystemsSystemArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemsSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsSystem)(nil)).Elem()
}

func (o GetFileSystemsSystemArrayOutput) ToGetFileSystemsSystemArrayOutput() GetFileSystemsSystemArrayOutput {
	return o
}

func (o GetFileSystemsSystemArrayOutput) ToGetFileSystemsSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsSystemArrayOutput {
	return o
}

func (o GetFileSystemsSystemArrayOutput) Index(i pulumi.IntInput) GetFileSystemsSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemsSystem {
		return vs[0].([]GetFileSystemsSystem)[vs[1].(int)]
	}).(GetFileSystemsSystemOutput)
}

type GetFilesetsFileset struct {
	// The time when Fileset was created.
	CreateTime string `pulumi:"createTime"`
	// Description of Fileset.
	Description string `pulumi:"description"`
	// The ID of the file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The path of Fileset.
	FileSystemPath string `pulumi:"fileSystemPath"`
	// The first ID of the resource.
	FilesetId string `pulumi:"filesetId"`
	// The ID of the Fileset.
	Id string `pulumi:"id"`
	// The status of the fileset.
	Status string `pulumi:"status"`
	// The latest update time of Fileset.
	UpdateTime string `pulumi:"updateTime"`
}

// GetFilesetsFilesetInput is an input type that accepts GetFilesetsFilesetArgs and GetFilesetsFilesetOutput values.
// You can construct a concrete instance of `GetFilesetsFilesetInput` via:
//
//          GetFilesetsFilesetArgs{...}
type GetFilesetsFilesetInput interface {
	pulumi.Input

	ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput
	ToGetFilesetsFilesetOutputWithContext(context.Context) GetFilesetsFilesetOutput
}

type GetFilesetsFilesetArgs struct {
	// The time when Fileset was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of Fileset.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The path of Fileset.
	FileSystemPath pulumi.StringInput `pulumi:"fileSystemPath"`
	// The first ID of the resource.
	FilesetId pulumi.StringInput `pulumi:"filesetId"`
	// The ID of the Fileset.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the fileset.
	Status pulumi.StringInput `pulumi:"status"`
	// The latest update time of Fileset.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetFilesetsFilesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFilesetsFileset)(nil)).Elem()
}

func (i GetFilesetsFilesetArgs) ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput {
	return i.ToGetFilesetsFilesetOutputWithContext(context.Background())
}

func (i GetFilesetsFilesetArgs) ToGetFilesetsFilesetOutputWithContext(ctx context.Context) GetFilesetsFilesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFilesetsFilesetOutput)
}

// GetFilesetsFilesetArrayInput is an input type that accepts GetFilesetsFilesetArray and GetFilesetsFilesetArrayOutput values.
// You can construct a concrete instance of `GetFilesetsFilesetArrayInput` via:
//
//          GetFilesetsFilesetArray{ GetFilesetsFilesetArgs{...} }
type GetFilesetsFilesetArrayInput interface {
	pulumi.Input

	ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput
	ToGetFilesetsFilesetArrayOutputWithContext(context.Context) GetFilesetsFilesetArrayOutput
}

type GetFilesetsFilesetArray []GetFilesetsFilesetInput

func (GetFilesetsFilesetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFilesetsFileset)(nil)).Elem()
}

func (i GetFilesetsFilesetArray) ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput {
	return i.ToGetFilesetsFilesetArrayOutputWithContext(context.Background())
}

func (i GetFilesetsFilesetArray) ToGetFilesetsFilesetArrayOutputWithContext(ctx context.Context) GetFilesetsFilesetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFilesetsFilesetArrayOutput)
}

type GetFilesetsFilesetOutput struct{ *pulumi.OutputState }

func (GetFilesetsFilesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFilesetsFileset)(nil)).Elem()
}

func (o GetFilesetsFilesetOutput) ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput {
	return o
}

func (o GetFilesetsFilesetOutput) ToGetFilesetsFilesetOutputWithContext(ctx context.Context) GetFilesetsFilesetOutput {
	return o
}

// The time when Fileset was created.
func (o GetFilesetsFilesetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of Fileset.
func (o GetFilesetsFilesetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the file system.
func (o GetFilesetsFilesetOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The path of Fileset.
func (o GetFilesetsFilesetOutput) FileSystemPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FileSystemPath }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetFilesetsFilesetOutput) FilesetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FilesetId }).(pulumi.StringOutput)
}

// The ID of the Fileset.
func (o GetFilesetsFilesetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the fileset.
func (o GetFilesetsFilesetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.Status }).(pulumi.StringOutput)
}

// The latest update time of Fileset.
func (o GetFilesetsFilesetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetFilesetsFilesetArrayOutput struct{ *pulumi.OutputState }

func (GetFilesetsFilesetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFilesetsFileset)(nil)).Elem()
}

func (o GetFilesetsFilesetArrayOutput) ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput {
	return o
}

func (o GetFilesetsFilesetArrayOutput) ToGetFilesetsFilesetArrayOutputWithContext(ctx context.Context) GetFilesetsFilesetArrayOutput {
	return o
}

func (o GetFilesetsFilesetArrayOutput) Index(i pulumi.IntInput) GetFilesetsFilesetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFilesetsFileset {
		return vs[0].([]GetFilesetsFileset)[vs[1].(int)]
	}).(GetFilesetsFilesetOutput)
}

type GetLifecyclePoliciesPolicy struct {
	// The time when the lifecycle management policy was created.
	CreateTime string `pulumi:"createTime"`
	// The ID of the file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The ID of the Lifecycle Policy. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The name of the lifecycle management policy.
	LifecyclePolicyName string `pulumi:"lifecyclePolicyName"`
	// The rules in the lifecycle management policy.
	LifecycleRuleName string `pulumi:"lifecycleRuleName"`
	// The list of absolute paths for multiple directories. In this case, you can associate a lifecycle management policy with each directory.
	Paths []string `pulumi:"paths"`
	// The storage type of the data that is dumped to the IA storage medium.
	StorageType string `pulumi:"storageType"`
}

// GetLifecyclePoliciesPolicyInput is an input type that accepts GetLifecyclePoliciesPolicyArgs and GetLifecyclePoliciesPolicyOutput values.
// You can construct a concrete instance of `GetLifecyclePoliciesPolicyInput` via:
//
//          GetLifecyclePoliciesPolicyArgs{...}
type GetLifecyclePoliciesPolicyInput interface {
	pulumi.Input

	ToGetLifecyclePoliciesPolicyOutput() GetLifecyclePoliciesPolicyOutput
	ToGetLifecyclePoliciesPolicyOutputWithContext(context.Context) GetLifecyclePoliciesPolicyOutput
}

type GetLifecyclePoliciesPolicyArgs struct {
	// The time when the lifecycle management policy was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The ID of the Lifecycle Policy. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the lifecycle management policy.
	LifecyclePolicyName pulumi.StringInput `pulumi:"lifecyclePolicyName"`
	// The rules in the lifecycle management policy.
	LifecycleRuleName pulumi.StringInput `pulumi:"lifecycleRuleName"`
	// The list of absolute paths for multiple directories. In this case, you can associate a lifecycle management policy with each directory.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// The storage type of the data that is dumped to the IA storage medium.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (GetLifecyclePoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclePoliciesPolicy)(nil)).Elem()
}

func (i GetLifecyclePoliciesPolicyArgs) ToGetLifecyclePoliciesPolicyOutput() GetLifecyclePoliciesPolicyOutput {
	return i.ToGetLifecyclePoliciesPolicyOutputWithContext(context.Background())
}

func (i GetLifecyclePoliciesPolicyArgs) ToGetLifecyclePoliciesPolicyOutputWithContext(ctx context.Context) GetLifecyclePoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclePoliciesPolicyOutput)
}

// GetLifecyclePoliciesPolicyArrayInput is an input type that accepts GetLifecyclePoliciesPolicyArray and GetLifecyclePoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetLifecyclePoliciesPolicyArrayInput` via:
//
//          GetLifecyclePoliciesPolicyArray{ GetLifecyclePoliciesPolicyArgs{...} }
type GetLifecyclePoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetLifecyclePoliciesPolicyArrayOutput() GetLifecyclePoliciesPolicyArrayOutput
	ToGetLifecyclePoliciesPolicyArrayOutputWithContext(context.Context) GetLifecyclePoliciesPolicyArrayOutput
}

type GetLifecyclePoliciesPolicyArray []GetLifecyclePoliciesPolicyInput

func (GetLifecyclePoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclePoliciesPolicy)(nil)).Elem()
}

func (i GetLifecyclePoliciesPolicyArray) ToGetLifecyclePoliciesPolicyArrayOutput() GetLifecyclePoliciesPolicyArrayOutput {
	return i.ToGetLifecyclePoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetLifecyclePoliciesPolicyArray) ToGetLifecyclePoliciesPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclePoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLifecyclePoliciesPolicyArrayOutput)
}

type GetLifecyclePoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetLifecyclePoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclePoliciesPolicy)(nil)).Elem()
}

func (o GetLifecyclePoliciesPolicyOutput) ToGetLifecyclePoliciesPolicyOutput() GetLifecyclePoliciesPolicyOutput {
	return o
}

func (o GetLifecyclePoliciesPolicyOutput) ToGetLifecyclePoliciesPolicyOutputWithContext(ctx context.Context) GetLifecyclePoliciesPolicyOutput {
	return o
}

// The time when the lifecycle management policy was created.
func (o GetLifecyclePoliciesPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the file system.
func (o GetLifecyclePoliciesPolicyOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The ID of the Lifecycle Policy. Its value is same as Queue Name.
func (o GetLifecyclePoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the lifecycle management policy.
func (o GetLifecyclePoliciesPolicyOutput) LifecyclePolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.LifecyclePolicyName }).(pulumi.StringOutput)
}

// The rules in the lifecycle management policy.
func (o GetLifecyclePoliciesPolicyOutput) LifecycleRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.LifecycleRuleName }).(pulumi.StringOutput)
}

// The list of absolute paths for multiple directories. In this case, you can associate a lifecycle management policy with each directory.
func (o GetLifecyclePoliciesPolicyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// The storage type of the data that is dumped to the IA storage medium.
func (o GetLifecyclePoliciesPolicyOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePoliciesPolicy) string { return v.StorageType }).(pulumi.StringOutput)
}

type GetLifecyclePoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetLifecyclePoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLifecyclePoliciesPolicy)(nil)).Elem()
}

func (o GetLifecyclePoliciesPolicyArrayOutput) ToGetLifecyclePoliciesPolicyArrayOutput() GetLifecyclePoliciesPolicyArrayOutput {
	return o
}

func (o GetLifecyclePoliciesPolicyArrayOutput) ToGetLifecyclePoliciesPolicyArrayOutputWithContext(ctx context.Context) GetLifecyclePoliciesPolicyArrayOutput {
	return o
}

func (o GetLifecyclePoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetLifecyclePoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLifecyclePoliciesPolicy {
		return vs[0].([]GetLifecyclePoliciesPolicy)[vs[1].(int)]
	}).(GetLifecyclePoliciesPolicyOutput)
}

type GetMountTargetsTarget struct {
	// Filter results by a specific AccessGroupName.
	AccessGroupName string `pulumi:"accessGroupName"`
	// ID of the MountTargetDomain.
	Id string `pulumi:"id"`
	// Field `mountTargetDomain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
	MountTargetDomain string `pulumi:"mountTargetDomain"`
	// Filter results by a specific NetworkType.
	NetworkType string `pulumi:"networkType"`
	// Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
	Status string `pulumi:"status"`
	// Field `type` has been deprecated from provider version 1.95.0. New field `networkType` replaces it.
	Type string `pulumi:"type"`
	// Filter results by a specific VpcId.
	VpcId string `pulumi:"vpcId"`
	// Filter results by a specific VSwitchId.
	VswitchId string `pulumi:"vswitchId"`
}

// GetMountTargetsTargetInput is an input type that accepts GetMountTargetsTargetArgs and GetMountTargetsTargetOutput values.
// You can construct a concrete instance of `GetMountTargetsTargetInput` via:
//
//          GetMountTargetsTargetArgs{...}
type GetMountTargetsTargetInput interface {
	pulumi.Input

	ToGetMountTargetsTargetOutput() GetMountTargetsTargetOutput
	ToGetMountTargetsTargetOutputWithContext(context.Context) GetMountTargetsTargetOutput
}

type GetMountTargetsTargetArgs struct {
	// Filter results by a specific AccessGroupName.
	AccessGroupName pulumi.StringInput `pulumi:"accessGroupName"`
	// ID of the MountTargetDomain.
	Id pulumi.StringInput `pulumi:"id"`
	// Field `mountTargetDomain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
	MountTargetDomain pulumi.StringInput `pulumi:"mountTargetDomain"`
	// Filter results by a specific NetworkType.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
	Status pulumi.StringInput `pulumi:"status"`
	// Field `type` has been deprecated from provider version 1.95.0. New field `networkType` replaces it.
	Type pulumi.StringInput `pulumi:"type"`
	// Filter results by a specific VpcId.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Filter results by a specific VSwitchId.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetMountTargetsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountTargetsTarget)(nil)).Elem()
}

func (i GetMountTargetsTargetArgs) ToGetMountTargetsTargetOutput() GetMountTargetsTargetOutput {
	return i.ToGetMountTargetsTargetOutputWithContext(context.Background())
}

func (i GetMountTargetsTargetArgs) ToGetMountTargetsTargetOutputWithContext(ctx context.Context) GetMountTargetsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountTargetsTargetOutput)
}

// GetMountTargetsTargetArrayInput is an input type that accepts GetMountTargetsTargetArray and GetMountTargetsTargetArrayOutput values.
// You can construct a concrete instance of `GetMountTargetsTargetArrayInput` via:
//
//          GetMountTargetsTargetArray{ GetMountTargetsTargetArgs{...} }
type GetMountTargetsTargetArrayInput interface {
	pulumi.Input

	ToGetMountTargetsTargetArrayOutput() GetMountTargetsTargetArrayOutput
	ToGetMountTargetsTargetArrayOutputWithContext(context.Context) GetMountTargetsTargetArrayOutput
}

type GetMountTargetsTargetArray []GetMountTargetsTargetInput

func (GetMountTargetsTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountTargetsTarget)(nil)).Elem()
}

func (i GetMountTargetsTargetArray) ToGetMountTargetsTargetArrayOutput() GetMountTargetsTargetArrayOutput {
	return i.ToGetMountTargetsTargetArrayOutputWithContext(context.Background())
}

func (i GetMountTargetsTargetArray) ToGetMountTargetsTargetArrayOutputWithContext(ctx context.Context) GetMountTargetsTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountTargetsTargetArrayOutput)
}

type GetMountTargetsTargetOutput struct{ *pulumi.OutputState }

func (GetMountTargetsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountTargetsTarget)(nil)).Elem()
}

func (o GetMountTargetsTargetOutput) ToGetMountTargetsTargetOutput() GetMountTargetsTargetOutput {
	return o
}

func (o GetMountTargetsTargetOutput) ToGetMountTargetsTargetOutputWithContext(ctx context.Context) GetMountTargetsTargetOutput {
	return o
}

// Filter results by a specific AccessGroupName.
func (o GetMountTargetsTargetOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.AccessGroupName }).(pulumi.StringOutput)
}

// ID of the MountTargetDomain.
func (o GetMountTargetsTargetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.Id }).(pulumi.StringOutput)
}

// Field `mountTargetDomain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
func (o GetMountTargetsTargetOutput) MountTargetDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.MountTargetDomain }).(pulumi.StringOutput)
}

// Filter results by a specific NetworkType.
func (o GetMountTargetsTargetOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
func (o GetMountTargetsTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.Status }).(pulumi.StringOutput)
}

// Field `type` has been deprecated from provider version 1.95.0. New field `networkType` replaces it.
func (o GetMountTargetsTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.Type }).(pulumi.StringOutput)
}

// Filter results by a specific VpcId.
func (o GetMountTargetsTargetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.VpcId }).(pulumi.StringOutput)
}

// Filter results by a specific VSwitchId.
func (o GetMountTargetsTargetOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountTargetsTarget) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetMountTargetsTargetArrayOutput struct{ *pulumi.OutputState }

func (GetMountTargetsTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountTargetsTarget)(nil)).Elem()
}

func (o GetMountTargetsTargetArrayOutput) ToGetMountTargetsTargetArrayOutput() GetMountTargetsTargetArrayOutput {
	return o
}

func (o GetMountTargetsTargetArrayOutput) ToGetMountTargetsTargetArrayOutputWithContext(ctx context.Context) GetMountTargetsTargetArrayOutput {
	return o
}

func (o GetMountTargetsTargetArrayOutput) Index(i pulumi.IntInput) GetMountTargetsTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountTargetsTarget {
		return vs[0].([]GetMountTargetsTarget)[vs[1].(int)]
	}).(GetMountTargetsTargetOutput)
}

type GetSnapshotsSnapshot struct {
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The description of the snapshot.
	Description string `pulumi:"description"`
	// The type of the encryption.
	EncryptType int `pulumi:"encryptType"`
	// The ID of the Snapshot.
	Id string `pulumi:"id"`
	// The progress of the snapshot creation. The value of this parameter is expressed as a percentage.
	Progress string `pulumi:"progress"`
	// The remaining time that is required to create the snapshot. Unit: seconds.
	RemainTime int `pulumi:"remainTime"`
	// The retention period of the automatic snapshot. Unit: days.
	RetentionDays int `pulumi:"retentionDays"`
	// The ID of the resource.
	SnapshotId string `pulumi:"snapshotId"`
	// The name of the snapshot.
	SnapshotName string `pulumi:"snapshotName"`
	// The ID of the source file system.
	SourceFileSystemId string `pulumi:"sourceFileSystemId"`
	// The capacity of the source file system. Unit: GiB.
	SourceFileSystemSize string `pulumi:"sourceFileSystemSize"`
	// The version of the source file system.
	SourceFileSystemVersion string `pulumi:"sourceFileSystemVersion"`
	// The status of the snapshot.
	Status string `pulumi:"status"`
}

// GetSnapshotsSnapshotInput is an input type that accepts GetSnapshotsSnapshotArgs and GetSnapshotsSnapshotOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotInput` via:
//
//          GetSnapshotsSnapshotArgs{...}
type GetSnapshotsSnapshotInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput
	ToGetSnapshotsSnapshotOutputWithContext(context.Context) GetSnapshotsSnapshotOutput
}

type GetSnapshotsSnapshotArgs struct {
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the snapshot.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of the encryption.
	EncryptType pulumi.IntInput `pulumi:"encryptType"`
	// The ID of the Snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// The progress of the snapshot creation. The value of this parameter is expressed as a percentage.
	Progress pulumi.StringInput `pulumi:"progress"`
	// The remaining time that is required to create the snapshot. Unit: seconds.
	RemainTime pulumi.IntInput `pulumi:"remainTime"`
	// The retention period of the automatic snapshot. Unit: days.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
	// The ID of the resource.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The name of the snapshot.
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
	// The ID of the source file system.
	SourceFileSystemId pulumi.StringInput `pulumi:"sourceFileSystemId"`
	// The capacity of the source file system. Unit: GiB.
	SourceFileSystemSize pulumi.StringInput `pulumi:"sourceFileSystemSize"`
	// The version of the source file system.
	SourceFileSystemVersion pulumi.StringInput `pulumi:"sourceFileSystemVersion"`
	// The status of the snapshot.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSnapshotsSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return i.ToGetSnapshotsSnapshotOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArgs) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotOutput)
}

// GetSnapshotsSnapshotArrayInput is an input type that accepts GetSnapshotsSnapshotArray and GetSnapshotsSnapshotArrayOutput values.
// You can construct a concrete instance of `GetSnapshotsSnapshotArrayInput` via:
//
//          GetSnapshotsSnapshotArray{ GetSnapshotsSnapshotArgs{...} }
type GetSnapshotsSnapshotArrayInput interface {
	pulumi.Input

	ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput
	ToGetSnapshotsSnapshotArrayOutputWithContext(context.Context) GetSnapshotsSnapshotArrayOutput
}

type GetSnapshotsSnapshotArray []GetSnapshotsSnapshotInput

func (GetSnapshotsSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return i.ToGetSnapshotsSnapshotArrayOutputWithContext(context.Background())
}

func (i GetSnapshotsSnapshotArray) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotsSnapshotArrayOutput)
}

type GetSnapshotsSnapshotOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutput() GetSnapshotsSnapshotOutput {
	return o
}

func (o GetSnapshotsSnapshotOutput) ToGetSnapshotsSnapshotOutputWithContext(ctx context.Context) GetSnapshotsSnapshotOutput {
	return o
}

// The creation time of the resource.
func (o GetSnapshotsSnapshotOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the snapshot.
func (o GetSnapshotsSnapshotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Description }).(pulumi.StringOutput)
}

// The type of the encryption.
func (o GetSnapshotsSnapshotOutput) EncryptType() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.EncryptType }).(pulumi.IntOutput)
}

// The ID of the Snapshot.
func (o GetSnapshotsSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

// The progress of the snapshot creation. The value of this parameter is expressed as a percentage.
func (o GetSnapshotsSnapshotOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Progress }).(pulumi.StringOutput)
}

// The remaining time that is required to create the snapshot. Unit: seconds.
func (o GetSnapshotsSnapshotOutput) RemainTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.RemainTime }).(pulumi.IntOutput)
}

// The retention period of the automatic snapshot. Unit: days.
func (o GetSnapshotsSnapshotOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) int { return v.RetentionDays }).(pulumi.IntOutput)
}

// The ID of the resource.
func (o GetSnapshotsSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The name of the snapshot.
func (o GetSnapshotsSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

// The ID of the source file system.
func (o GetSnapshotsSnapshotOutput) SourceFileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceFileSystemId }).(pulumi.StringOutput)
}

// The capacity of the source file system. Unit: GiB.
func (o GetSnapshotsSnapshotOutput) SourceFileSystemSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceFileSystemSize }).(pulumi.StringOutput)
}

// The version of the source file system.
func (o GetSnapshotsSnapshotOutput) SourceFileSystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.SourceFileSystemVersion }).(pulumi.StringOutput)
}

// The status of the snapshot.
func (o GetSnapshotsSnapshotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotsSnapshot) string { return v.Status }).(pulumi.StringOutput)
}

type GetSnapshotsSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotsSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotsSnapshot)(nil)).Elem()
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutput() GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) ToGetSnapshotsSnapshotArrayOutputWithContext(ctx context.Context) GetSnapshotsSnapshotArrayOutput {
	return o
}

func (o GetSnapshotsSnapshotArrayOutput) Index(i pulumi.IntInput) GetSnapshotsSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotsSnapshot {
		return vs[0].([]GetSnapshotsSnapshot)[vs[1].(int)]
	}).(GetSnapshotsSnapshotOutput)
}

type GetZonesZone struct {
	// A list of instance type information collection
	InstanceTypes []GetZonesZoneInstanceType `pulumi:"instanceTypes"`
	// String to filter results by zone id.
	ZoneId string `pulumi:"zoneId"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// A list of instance type information collection
	InstanceTypes GetZonesZoneInstanceTypeArrayInput `pulumi:"instanceTypes"`
	// String to filter results by zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// A list of instance type information collection
func (o GetZonesZoneOutput) InstanceTypes() GetZonesZoneInstanceTypeArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneInstanceType { return v.InstanceTypes }).(GetZonesZoneInstanceTypeArrayOutput)
}

// String to filter results by zone id.
func (o GetZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

type GetZonesZoneInstanceType struct {
	// File transfer protocol type. Valid values:
	ProtocolType string `pulumi:"protocolType"`
	// The storage type of the nas zones. Valid values:
	StorageType string `pulumi:"storageType"`
}

// GetZonesZoneInstanceTypeInput is an input type that accepts GetZonesZoneInstanceTypeArgs and GetZonesZoneInstanceTypeOutput values.
// You can construct a concrete instance of `GetZonesZoneInstanceTypeInput` via:
//
//          GetZonesZoneInstanceTypeArgs{...}
type GetZonesZoneInstanceTypeInput interface {
	pulumi.Input

	ToGetZonesZoneInstanceTypeOutput() GetZonesZoneInstanceTypeOutput
	ToGetZonesZoneInstanceTypeOutputWithContext(context.Context) GetZonesZoneInstanceTypeOutput
}

type GetZonesZoneInstanceTypeArgs struct {
	// File transfer protocol type. Valid values:
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// The storage type of the nas zones. Valid values:
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (GetZonesZoneInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneInstanceType)(nil)).Elem()
}

func (i GetZonesZoneInstanceTypeArgs) ToGetZonesZoneInstanceTypeOutput() GetZonesZoneInstanceTypeOutput {
	return i.ToGetZonesZoneInstanceTypeOutputWithContext(context.Background())
}

func (i GetZonesZoneInstanceTypeArgs) ToGetZonesZoneInstanceTypeOutputWithContext(ctx context.Context) GetZonesZoneInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneInstanceTypeOutput)
}

// GetZonesZoneInstanceTypeArrayInput is an input type that accepts GetZonesZoneInstanceTypeArray and GetZonesZoneInstanceTypeArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneInstanceTypeArrayInput` via:
//
//          GetZonesZoneInstanceTypeArray{ GetZonesZoneInstanceTypeArgs{...} }
type GetZonesZoneInstanceTypeArrayInput interface {
	pulumi.Input

	ToGetZonesZoneInstanceTypeArrayOutput() GetZonesZoneInstanceTypeArrayOutput
	ToGetZonesZoneInstanceTypeArrayOutputWithContext(context.Context) GetZonesZoneInstanceTypeArrayOutput
}

type GetZonesZoneInstanceTypeArray []GetZonesZoneInstanceTypeInput

func (GetZonesZoneInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneInstanceType)(nil)).Elem()
}

func (i GetZonesZoneInstanceTypeArray) ToGetZonesZoneInstanceTypeArrayOutput() GetZonesZoneInstanceTypeArrayOutput {
	return i.ToGetZonesZoneInstanceTypeArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneInstanceTypeArray) ToGetZonesZoneInstanceTypeArrayOutputWithContext(ctx context.Context) GetZonesZoneInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneInstanceTypeArrayOutput)
}

type GetZonesZoneInstanceTypeOutput struct{ *pulumi.OutputState }

func (GetZonesZoneInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneInstanceType)(nil)).Elem()
}

func (o GetZonesZoneInstanceTypeOutput) ToGetZonesZoneInstanceTypeOutput() GetZonesZoneInstanceTypeOutput {
	return o
}

func (o GetZonesZoneInstanceTypeOutput) ToGetZonesZoneInstanceTypeOutputWithContext(ctx context.Context) GetZonesZoneInstanceTypeOutput {
	return o
}

// File transfer protocol type. Valid values:
func (o GetZonesZoneInstanceTypeOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneInstanceType) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// The storage type of the nas zones. Valid values:
func (o GetZonesZoneInstanceTypeOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneInstanceType) string { return v.StorageType }).(pulumi.StringOutput)
}

type GetZonesZoneInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneInstanceType)(nil)).Elem()
}

func (o GetZonesZoneInstanceTypeArrayOutput) ToGetZonesZoneInstanceTypeArrayOutput() GetZonesZoneInstanceTypeArrayOutput {
	return o
}

func (o GetZonesZoneInstanceTypeArrayOutput) ToGetZonesZoneInstanceTypeArrayOutputWithContext(ctx context.Context) GetZonesZoneInstanceTypeArrayOutput {
	return o
}

func (o GetZonesZoneInstanceTypeArrayOutput) Index(i pulumi.IntInput) GetZonesZoneInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneInstanceType {
		return vs[0].([]GetZonesZoneInstanceType)[vs[1].(int)]
	}).(GetZonesZoneInstanceTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsGroupInput)(nil)).Elem(), GetAccessGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessGroupsGroupArrayInput)(nil)).Elem(), GetAccessGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessRulesRuleInput)(nil)).Elem(), GetAccessRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessRulesRuleArrayInput)(nil)).Elem(), GetAccessRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoSnapshotPoliciesPolicyInput)(nil)).Elem(), GetAutoSnapshotPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoSnapshotPoliciesPolicyArrayInput)(nil)).Elem(), GetAutoSnapshotPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataFlowsFlowInput)(nil)).Elem(), GetDataFlowsFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataFlowsFlowArrayInput)(nil)).Elem(), GetDataFlowsFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsSystemInput)(nil)).Elem(), GetFileSystemsSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsSystemArrayInput)(nil)).Elem(), GetFileSystemsSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFilesetsFilesetInput)(nil)).Elem(), GetFilesetsFilesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFilesetsFilesetArrayInput)(nil)).Elem(), GetFilesetsFilesetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclePoliciesPolicyInput)(nil)).Elem(), GetLifecyclePoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLifecyclePoliciesPolicyArrayInput)(nil)).Elem(), GetLifecyclePoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountTargetsTargetInput)(nil)).Elem(), GetMountTargetsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountTargetsTargetArrayInput)(nil)).Elem(), GetMountTargetsTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotInput)(nil)).Elem(), GetSnapshotsSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotsSnapshotArrayInput)(nil)).Elem(), GetSnapshotsSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInstanceTypeInput)(nil)).Elem(), GetZonesZoneInstanceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInstanceTypeArrayInput)(nil)).Elem(), GetZonesZoneInstanceTypeArray{})
	pulumi.RegisterOutputType(GetAccessGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAccessGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAccessRulesRuleOutput{})
	pulumi.RegisterOutputType(GetAccessRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAutoSnapshotPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetAutoSnapshotPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDataFlowsFlowOutput{})
	pulumi.RegisterOutputType(GetDataFlowsFlowArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemsSystemOutput{})
	pulumi.RegisterOutputType(GetFileSystemsSystemArrayOutput{})
	pulumi.RegisterOutputType(GetFilesetsFilesetOutput{})
	pulumi.RegisterOutputType(GetFilesetsFilesetArrayOutput{})
	pulumi.RegisterOutputType(GetLifecyclePoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetLifecyclePoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMountTargetsTargetOutput{})
	pulumi.RegisterOutputType(GetMountTargetsTargetArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotOutput{})
	pulumi.RegisterOutputType(GetSnapshotsSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneInstanceTypeOutput{})
	pulumi.RegisterOutputType(GetZonesZoneInstanceTypeArrayOutput{})
}
