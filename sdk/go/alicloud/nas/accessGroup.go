// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a NAS Access Group resource. File system Access Group.
//
// In NAS, the permission group acts as a whitelist that allows you to restrict file system access. You can allow specified IP addresses or CIDR blocks to access the file system, and assign different levels of access permission to different IP addresses or CIDR blocks by adding rules to the permission group.
// For information about NAS Access Group and how to use it, see [What is NAS Access Group](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createaccessgroup)
//
// > **NOTE:** Available since v1.33.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/nas"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nas.NewAccessGroup(ctx, "foo", &nas.AccessGroupArgs{
//				AccessGroupName: pulumi.Sprintf("terraform-example-%v", _default.Result),
//				AccessGroupType: pulumi.String("Vpc"),
//				Description:     pulumi.String("terraform-example"),
//				FileSystemType:  pulumi.String("extreme"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NAS Access Group can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:nas/accessGroup:AccessGroup example <access_group_name>:<file_system_type>
// ```
type AccessGroup struct {
	pulumi.CustomResourceState

	// The name of the permission group.
	AccessGroupName pulumi.StringOutput `pulumi:"accessGroupName"`
	// Permission group types, including Vpc.
	AccessGroupType pulumi.StringOutput `pulumi:"accessGroupType"`
	// Creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Permission group description information.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// File system type. Value:
	// - standard (default): Universal NAS
	// - extreme: extreme NAS
	//   The following arguments will be discarded. Please use new fields as soon as possible:
	FileSystemType pulumi.StringPtrOutput `pulumi:"fileSystemType"`
	// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
	Name pulumi.StringOutput `pulumi:"name"`
	// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
	//
	// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccessGroup registers a new resource with the given unique name, arguments, and options.
func NewAccessGroup(ctx *pulumi.Context,
	name string, args *AccessGroupArgs, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	if args == nil {
		args = &AccessGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessGroup
	err := ctx.RegisterResource("alicloud:nas/accessGroup:AccessGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessGroup gets an existing AccessGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessGroupState, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	var resource AccessGroup
	err := ctx.ReadResource("alicloud:nas/accessGroup:AccessGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessGroup resources.
type accessGroupState struct {
	// The name of the permission group.
	AccessGroupName *string `pulumi:"accessGroupName"`
	// Permission group types, including Vpc.
	AccessGroupType *string `pulumi:"accessGroupType"`
	// Creation time.
	CreateTime *string `pulumi:"createTime"`
	// Permission group description information.
	Description *string `pulumi:"description"`
	// File system type. Value:
	// - standard (default): Universal NAS
	// - extreme: extreme NAS
	//   The following arguments will be discarded. Please use new fields as soon as possible:
	FileSystemType *string `pulumi:"fileSystemType"`
	// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
	Name *string `pulumi:"name"`
	// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
	//
	// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
	Type *string `pulumi:"type"`
}

type AccessGroupState struct {
	// The name of the permission group.
	AccessGroupName pulumi.StringPtrInput
	// Permission group types, including Vpc.
	AccessGroupType pulumi.StringPtrInput
	// Creation time.
	CreateTime pulumi.StringPtrInput
	// Permission group description information.
	Description pulumi.StringPtrInput
	// File system type. Value:
	// - standard (default): Universal NAS
	// - extreme: extreme NAS
	//   The following arguments will be discarded. Please use new fields as soon as possible:
	FileSystemType pulumi.StringPtrInput
	// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
	Name pulumi.StringPtrInput
	// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
	//
	// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
	Type pulumi.StringPtrInput
}

func (AccessGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupState)(nil)).Elem()
}

type accessGroupArgs struct {
	// The name of the permission group.
	AccessGroupName *string `pulumi:"accessGroupName"`
	// Permission group types, including Vpc.
	AccessGroupType *string `pulumi:"accessGroupType"`
	// Permission group description information.
	Description *string `pulumi:"description"`
	// File system type. Value:
	// - standard (default): Universal NAS
	// - extreme: extreme NAS
	//   The following arguments will be discarded. Please use new fields as soon as possible:
	FileSystemType *string `pulumi:"fileSystemType"`
	// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
	Name *string `pulumi:"name"`
	// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
	//
	// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a AccessGroup resource.
type AccessGroupArgs struct {
	// The name of the permission group.
	AccessGroupName pulumi.StringPtrInput
	// Permission group types, including Vpc.
	AccessGroupType pulumi.StringPtrInput
	// Permission group description information.
	Description pulumi.StringPtrInput
	// File system type. Value:
	// - standard (default): Universal NAS
	// - extreme: extreme NAS
	//   The following arguments will be discarded. Please use new fields as soon as possible:
	FileSystemType pulumi.StringPtrInput
	// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
	//
	// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
	Name pulumi.StringPtrInput
	// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
	//
	// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
	Type pulumi.StringPtrInput
}

func (AccessGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupArgs)(nil)).Elem()
}

type AccessGroupInput interface {
	pulumi.Input

	ToAccessGroupOutput() AccessGroupOutput
	ToAccessGroupOutputWithContext(ctx context.Context) AccessGroupOutput
}

func (*AccessGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroup)(nil)).Elem()
}

func (i *AccessGroup) ToAccessGroupOutput() AccessGroupOutput {
	return i.ToAccessGroupOutputWithContext(context.Background())
}

func (i *AccessGroup) ToAccessGroupOutputWithContext(ctx context.Context) AccessGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupOutput)
}

// AccessGroupArrayInput is an input type that accepts AccessGroupArray and AccessGroupArrayOutput values.
// You can construct a concrete instance of `AccessGroupArrayInput` via:
//
//	AccessGroupArray{ AccessGroupArgs{...} }
type AccessGroupArrayInput interface {
	pulumi.Input

	ToAccessGroupArrayOutput() AccessGroupArrayOutput
	ToAccessGroupArrayOutputWithContext(context.Context) AccessGroupArrayOutput
}

type AccessGroupArray []AccessGroupInput

func (AccessGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessGroup)(nil)).Elem()
}

func (i AccessGroupArray) ToAccessGroupArrayOutput() AccessGroupArrayOutput {
	return i.ToAccessGroupArrayOutputWithContext(context.Background())
}

func (i AccessGroupArray) ToAccessGroupArrayOutputWithContext(ctx context.Context) AccessGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupArrayOutput)
}

// AccessGroupMapInput is an input type that accepts AccessGroupMap and AccessGroupMapOutput values.
// You can construct a concrete instance of `AccessGroupMapInput` via:
//
//	AccessGroupMap{ "key": AccessGroupArgs{...} }
type AccessGroupMapInput interface {
	pulumi.Input

	ToAccessGroupMapOutput() AccessGroupMapOutput
	ToAccessGroupMapOutputWithContext(context.Context) AccessGroupMapOutput
}

type AccessGroupMap map[string]AccessGroupInput

func (AccessGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessGroup)(nil)).Elem()
}

func (i AccessGroupMap) ToAccessGroupMapOutput() AccessGroupMapOutput {
	return i.ToAccessGroupMapOutputWithContext(context.Background())
}

func (i AccessGroupMap) ToAccessGroupMapOutputWithContext(ctx context.Context) AccessGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupMapOutput)
}

type AccessGroupOutput struct{ *pulumi.OutputState }

func (AccessGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroup)(nil)).Elem()
}

func (o AccessGroupOutput) ToAccessGroupOutput() AccessGroupOutput {
	return o
}

func (o AccessGroupOutput) ToAccessGroupOutputWithContext(ctx context.Context) AccessGroupOutput {
	return o
}

// The name of the permission group.
func (o AccessGroupOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringOutput { return v.AccessGroupName }).(pulumi.StringOutput)
}

// Permission group types, including Vpc.
func (o AccessGroupOutput) AccessGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringOutput { return v.AccessGroupType }).(pulumi.StringOutput)
}

// Creation time.
func (o AccessGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Permission group description information.
func (o AccessGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// File system type. Value:
//   - standard (default): Universal NAS
//   - extreme: extreme NAS
//     The following arguments will be discarded. Please use new fields as soon as possible:
func (o AccessGroupOutput) FileSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringPtrOutput { return v.FileSystemType }).(pulumi.StringPtrOutput)
}

// . Field 'name' has been deprecated from provider version 1.218.0. New field 'access_group_name' instead.
//
// Deprecated: Field 'name' has been deprecated since provider version 1.218.0. New field 'access_group_name' instead.
func (o AccessGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// . Field 'type' has been deprecated from provider version 1.218.0. New field 'access_group_type' instead.
//
// Deprecated: Field 'type' has been deprecated since provider version 1.218.0. New field 'access_group_type' instead.
func (o AccessGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type AccessGroupArrayOutput struct{ *pulumi.OutputState }

func (AccessGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessGroup)(nil)).Elem()
}

func (o AccessGroupArrayOutput) ToAccessGroupArrayOutput() AccessGroupArrayOutput {
	return o
}

func (o AccessGroupArrayOutput) ToAccessGroupArrayOutputWithContext(ctx context.Context) AccessGroupArrayOutput {
	return o
}

func (o AccessGroupArrayOutput) Index(i pulumi.IntInput) AccessGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessGroup {
		return vs[0].([]*AccessGroup)[vs[1].(int)]
	}).(AccessGroupOutput)
}

type AccessGroupMapOutput struct{ *pulumi.OutputState }

func (AccessGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessGroup)(nil)).Elem()
}

func (o AccessGroupMapOutput) ToAccessGroupMapOutput() AccessGroupMapOutput {
	return o
}

func (o AccessGroupMapOutput) ToAccessGroupMapOutputWithContext(ctx context.Context) AccessGroupMapOutput {
	return o
}

func (o AccessGroupMapOutput) MapIndex(k pulumi.StringInput) AccessGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessGroup {
		return vs[0].(map[string]*AccessGroup)[vs[1].(string)]
	}).(AccessGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupInput)(nil)).Elem(), &AccessGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupArrayInput)(nil)).Elem(), AccessGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGroupMapInput)(nil)).Elem(), AccessGroupMap{})
	pulumi.RegisterOutputType(AccessGroupOutput{})
	pulumi.RegisterOutputType(AccessGroupArrayOutput{})
	pulumi.RegisterOutputType(AccessGroupMapOutput{})
}
