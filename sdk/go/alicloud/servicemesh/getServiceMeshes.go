// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Service Mesh Service Meshes of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.138.0+.
func GetServiceMeshes(ctx *pulumi.Context, args *GetServiceMeshesArgs, opts ...pulumi.InvokeOption) (*GetServiceMeshesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceMeshesResult
	err := ctx.Invoke("alicloud:servicemesh/getServiceMeshes:getServiceMeshes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceMeshes.
type GetServiceMeshesArgs struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Service Mesh IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Service Mesh name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the resource. Valid values: `running` or `initial`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getServiceMeshes.
type GetServiceMeshesResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// A list of Service Mesh Service Meshes. Each element contains the following attributes:
	Meshes    []GetServiceMeshesMesh `pulumi:"meshes"`
	NameRegex *string                `pulumi:"nameRegex"`
	// A list of Service Mesh names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

func GetServiceMeshesOutput(ctx *pulumi.Context, args GetServiceMeshesOutputArgs, opts ...pulumi.InvokeOption) GetServiceMeshesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceMeshesResult, error) {
			args := v.(GetServiceMeshesArgs)
			r, err := GetServiceMeshes(ctx, &args, opts...)
			var s GetServiceMeshesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceMeshesResultOutput)
}

// A collection of arguments for invoking getServiceMeshes.
type GetServiceMeshesOutputArgs struct {
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Service Mesh IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Service Mesh name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the resource. Valid values: `running` or `initial`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetServiceMeshesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMeshesArgs)(nil)).Elem()
}

// A collection of values returned by getServiceMeshes.
type GetServiceMeshesResultOutput struct{ *pulumi.OutputState }

func (GetServiceMeshesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceMeshesResult)(nil)).Elem()
}

func (o GetServiceMeshesResultOutput) ToGetServiceMeshesResultOutput() GetServiceMeshesResultOutput {
	return o
}

func (o GetServiceMeshesResultOutput) ToGetServiceMeshesResultOutputWithContext(ctx context.Context) GetServiceMeshesResultOutput {
	return o
}

func (o GetServiceMeshesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceMeshesResult] {
	return pulumix.Output[GetServiceMeshesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceMeshesResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceMeshesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceMeshesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list of Service Mesh Service Meshes. Each element contains the following attributes:
func (o GetServiceMeshesResultOutput) Meshes() GetServiceMeshesMeshArrayOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) []GetServiceMeshesMesh { return v.Meshes }).(GetServiceMeshesMeshArrayOutput)
}

func (o GetServiceMeshesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Service Mesh names.
func (o GetServiceMeshesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetServiceMeshesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o GetServiceMeshesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceMeshesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceMeshesResultOutput{})
}
