// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Service Mesh Service Mesh resource.
//
// For information about Service Mesh Service Mesh and how to use it, see [What is Service Mesh](https://help.aliyun.com/document_detail/171559.html).
//
// > **NOTE:** Available in v1.138.0+.
//
// ## Import
//
// Service Mesh Service Mesh can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:servicemesh/serviceMesh:ServiceMesh example <id>
// ```
type ServiceMesh struct {
	pulumi.CustomResourceState

	// The type  of the resource. Valid values: `Default` and `Pro`. `Default`:the standard. `Pro`:the Pro version.
	Edition pulumi.StringOutput `pulumi:"edition"`
	// This parameter is used for resource destroy. Default value is `false`.
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The configuration of the Load Balancer. See the following `Block loadBalancer`.
	LoadBalancer ServiceMeshLoadBalancerOutput `pulumi:"loadBalancer"`
	// The configuration of the Service grid. See the following `Block meshConfig`.
	MeshConfig ServiceMeshMeshConfigOutput `pulumi:"meshConfig"`
	// The network configuration of the Service grid. See the following `Block network`.
	Network ServiceMeshNetworkOutput `pulumi:"network"`
	// The name of the resource.
	ServiceMeshName pulumi.StringPtrOutput `pulumi:"serviceMeshName"`
	// The status of the resource. Valid values: `running` or `initial`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The version of the resource. Valid values: `v1.8.6.52-g60741c97-aliyun` and `v1.9.7.31-g24cdcb43-aliyun`.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewServiceMesh registers a new resource with the given unique name, arguments, and options.
func NewServiceMesh(ctx *pulumi.Context,
	name string, args *ServiceMeshArgs, opts ...pulumi.ResourceOption) (*ServiceMesh, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	var resource ServiceMesh
	err := ctx.RegisterResource("alicloud:servicemesh/serviceMesh:ServiceMesh", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceMesh gets an existing ServiceMesh resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceMesh(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceMeshState, opts ...pulumi.ResourceOption) (*ServiceMesh, error) {
	var resource ServiceMesh
	err := ctx.ReadResource("alicloud:servicemesh/serviceMesh:ServiceMesh", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceMesh resources.
type serviceMeshState struct {
	// The type  of the resource. Valid values: `Default` and `Pro`. `Default`:the standard. `Pro`:the Pro version.
	Edition *string `pulumi:"edition"`
	// This parameter is used for resource destroy. Default value is `false`.
	Force *bool `pulumi:"force"`
	// The configuration of the Load Balancer. See the following `Block loadBalancer`.
	LoadBalancer *ServiceMeshLoadBalancer `pulumi:"loadBalancer"`
	// The configuration of the Service grid. See the following `Block meshConfig`.
	MeshConfig *ServiceMeshMeshConfig `pulumi:"meshConfig"`
	// The network configuration of the Service grid. See the following `Block network`.
	Network *ServiceMeshNetwork `pulumi:"network"`
	// The name of the resource.
	ServiceMeshName *string `pulumi:"serviceMeshName"`
	// The status of the resource. Valid values: `running` or `initial`.
	Status *string `pulumi:"status"`
	// The version of the resource. Valid values: `v1.8.6.52-g60741c97-aliyun` and `v1.9.7.31-g24cdcb43-aliyun`.
	Version *string `pulumi:"version"`
}

type ServiceMeshState struct {
	// The type  of the resource. Valid values: `Default` and `Pro`. `Default`:the standard. `Pro`:the Pro version.
	Edition pulumi.StringPtrInput
	// This parameter is used for resource destroy. Default value is `false`.
	Force pulumi.BoolPtrInput
	// The configuration of the Load Balancer. See the following `Block loadBalancer`.
	LoadBalancer ServiceMeshLoadBalancerPtrInput
	// The configuration of the Service grid. See the following `Block meshConfig`.
	MeshConfig ServiceMeshMeshConfigPtrInput
	// The network configuration of the Service grid. See the following `Block network`.
	Network ServiceMeshNetworkPtrInput
	// The name of the resource.
	ServiceMeshName pulumi.StringPtrInput
	// The status of the resource. Valid values: `running` or `initial`.
	Status pulumi.StringPtrInput
	// The version of the resource. Valid values: `v1.8.6.52-g60741c97-aliyun` and `v1.9.7.31-g24cdcb43-aliyun`.
	Version pulumi.StringPtrInput
}

func (ServiceMeshState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMeshState)(nil)).Elem()
}

type serviceMeshArgs struct {
	// The type  of the resource. Valid values: `Default` and `Pro`. `Default`:the standard. `Pro`:the Pro version.
	Edition *string `pulumi:"edition"`
	// This parameter is used for resource destroy. Default value is `false`.
	Force *bool `pulumi:"force"`
	// The configuration of the Load Balancer. See the following `Block loadBalancer`.
	LoadBalancer *ServiceMeshLoadBalancer `pulumi:"loadBalancer"`
	// The configuration of the Service grid. See the following `Block meshConfig`.
	MeshConfig *ServiceMeshMeshConfig `pulumi:"meshConfig"`
	// The network configuration of the Service grid. See the following `Block network`.
	Network ServiceMeshNetwork `pulumi:"network"`
	// The name of the resource.
	ServiceMeshName *string `pulumi:"serviceMeshName"`
	// The version of the resource. Valid values: `v1.8.6.52-g60741c97-aliyun` and `v1.9.7.31-g24cdcb43-aliyun`.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a ServiceMesh resource.
type ServiceMeshArgs struct {
	// The type  of the resource. Valid values: `Default` and `Pro`. `Default`:the standard. `Pro`:the Pro version.
	Edition pulumi.StringPtrInput
	// This parameter is used for resource destroy. Default value is `false`.
	Force pulumi.BoolPtrInput
	// The configuration of the Load Balancer. See the following `Block loadBalancer`.
	LoadBalancer ServiceMeshLoadBalancerPtrInput
	// The configuration of the Service grid. See the following `Block meshConfig`.
	MeshConfig ServiceMeshMeshConfigPtrInput
	// The network configuration of the Service grid. See the following `Block network`.
	Network ServiceMeshNetworkInput
	// The name of the resource.
	ServiceMeshName pulumi.StringPtrInput
	// The version of the resource. Valid values: `v1.8.6.52-g60741c97-aliyun` and `v1.9.7.31-g24cdcb43-aliyun`.
	Version pulumi.StringPtrInput
}

func (ServiceMeshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMeshArgs)(nil)).Elem()
}

type ServiceMeshInput interface {
	pulumi.Input

	ToServiceMeshOutput() ServiceMeshOutput
	ToServiceMeshOutputWithContext(ctx context.Context) ServiceMeshOutput
}

func (*ServiceMesh) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMesh)(nil)).Elem()
}

func (i *ServiceMesh) ToServiceMeshOutput() ServiceMeshOutput {
	return i.ToServiceMeshOutputWithContext(context.Background())
}

func (i *ServiceMesh) ToServiceMeshOutputWithContext(ctx context.Context) ServiceMeshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMeshOutput)
}

// ServiceMeshArrayInput is an input type that accepts ServiceMeshArray and ServiceMeshArrayOutput values.
// You can construct a concrete instance of `ServiceMeshArrayInput` via:
//
//          ServiceMeshArray{ ServiceMeshArgs{...} }
type ServiceMeshArrayInput interface {
	pulumi.Input

	ToServiceMeshArrayOutput() ServiceMeshArrayOutput
	ToServiceMeshArrayOutputWithContext(context.Context) ServiceMeshArrayOutput
}

type ServiceMeshArray []ServiceMeshInput

func (ServiceMeshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMesh)(nil)).Elem()
}

func (i ServiceMeshArray) ToServiceMeshArrayOutput() ServiceMeshArrayOutput {
	return i.ToServiceMeshArrayOutputWithContext(context.Background())
}

func (i ServiceMeshArray) ToServiceMeshArrayOutputWithContext(ctx context.Context) ServiceMeshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMeshArrayOutput)
}

// ServiceMeshMapInput is an input type that accepts ServiceMeshMap and ServiceMeshMapOutput values.
// You can construct a concrete instance of `ServiceMeshMapInput` via:
//
//          ServiceMeshMap{ "key": ServiceMeshArgs{...} }
type ServiceMeshMapInput interface {
	pulumi.Input

	ToServiceMeshMapOutput() ServiceMeshMapOutput
	ToServiceMeshMapOutputWithContext(context.Context) ServiceMeshMapOutput
}

type ServiceMeshMap map[string]ServiceMeshInput

func (ServiceMeshMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMesh)(nil)).Elem()
}

func (i ServiceMeshMap) ToServiceMeshMapOutput() ServiceMeshMapOutput {
	return i.ToServiceMeshMapOutputWithContext(context.Background())
}

func (i ServiceMeshMap) ToServiceMeshMapOutputWithContext(ctx context.Context) ServiceMeshMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMeshMapOutput)
}

type ServiceMeshOutput struct{ *pulumi.OutputState }

func (ServiceMeshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMesh)(nil)).Elem()
}

func (o ServiceMeshOutput) ToServiceMeshOutput() ServiceMeshOutput {
	return o
}

func (o ServiceMeshOutput) ToServiceMeshOutputWithContext(ctx context.Context) ServiceMeshOutput {
	return o
}

type ServiceMeshArrayOutput struct{ *pulumi.OutputState }

func (ServiceMeshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceMesh)(nil)).Elem()
}

func (o ServiceMeshArrayOutput) ToServiceMeshArrayOutput() ServiceMeshArrayOutput {
	return o
}

func (o ServiceMeshArrayOutput) ToServiceMeshArrayOutputWithContext(ctx context.Context) ServiceMeshArrayOutput {
	return o
}

func (o ServiceMeshArrayOutput) Index(i pulumi.IntInput) ServiceMeshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceMesh {
		return vs[0].([]*ServiceMesh)[vs[1].(int)]
	}).(ServiceMeshOutput)
}

type ServiceMeshMapOutput struct{ *pulumi.OutputState }

func (ServiceMeshMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceMesh)(nil)).Elem()
}

func (o ServiceMeshMapOutput) ToServiceMeshMapOutput() ServiceMeshMapOutput {
	return o
}

func (o ServiceMeshMapOutput) ToServiceMeshMapOutputWithContext(ctx context.Context) ServiceMeshMapOutput {
	return o
}

func (o ServiceMeshMapOutput) MapIndex(k pulumi.StringInput) ServiceMeshOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceMesh {
		return vs[0].(map[string]*ServiceMesh)[vs[1].(string)]
	}).(ServiceMeshOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMeshInput)(nil)).Elem(), &ServiceMesh{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMeshArrayInput)(nil)).Elem(), ServiceMeshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMeshMapInput)(nil)).Elem(), ServiceMeshMap{})
	pulumi.RegisterOutputType(ServiceMeshOutput{})
	pulumi.RegisterOutputType(ServiceMeshArrayOutput{})
	pulumi.RegisterOutputType(ServiceMeshMapOutput{})
}
