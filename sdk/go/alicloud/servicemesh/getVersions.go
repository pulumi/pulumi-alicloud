// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicemesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides ASM available versions in the specified region.
//
// > **NOTE:** Available in v1.161.0+.
func GetVersions(ctx *pulumi.Context, args *GetVersionsArgs, opts ...pulumi.InvokeOption) (*GetVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVersionsResult
	err := ctx.Invoke("alicloud:servicemesh/getVersions:getVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVersions.
type GetVersionsArgs struct {
	// The edition of the ASM instance.
	Edition *string `pulumi:"edition"`
	// A list of ASM versions. Its element formats as `<edition>:<version>`.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getVersions.
type GetVersionsResult struct {
	Edition *string `pulumi:"edition"`
	// The provider-assigned unique ID for this managed resource.
	Id         string               `pulumi:"id"`
	Ids        []string             `pulumi:"ids"`
	OutputFile *string              `pulumi:"outputFile"`
	Versions   []GetVersionsVersion `pulumi:"versions"`
}

func GetVersionsOutput(ctx *pulumi.Context, args GetVersionsOutputArgs, opts ...pulumi.InvokeOption) GetVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVersionsResult, error) {
			args := v.(GetVersionsArgs)
			r, err := GetVersions(ctx, &args, opts...)
			var s GetVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVersionsResultOutput)
}

// A collection of arguments for invoking getVersions.
type GetVersionsOutputArgs struct {
	// The edition of the ASM instance.
	Edition pulumi.StringPtrInput `pulumi:"edition"`
	// A list of ASM versions. Its element formats as `<edition>:<version>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getVersions.
type GetVersionsResultOutput struct{ *pulumi.OutputState }

func (GetVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVersionsResult)(nil)).Elem()
}

func (o GetVersionsResultOutput) ToGetVersionsResultOutput() GetVersionsResultOutput {
	return o
}

func (o GetVersionsResultOutput) ToGetVersionsResultOutputWithContext(ctx context.Context) GetVersionsResultOutput {
	return o
}

func (o GetVersionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetVersionsResult] {
	return pulumix.Output[GetVersionsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetVersionsResultOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVersionsResult) *string { return v.Edition }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVersionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVersionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetVersionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVersionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetVersionsResultOutput) Versions() GetVersionsVersionArrayOutput {
	return o.ApplyT(func(v GetVersionsResult) []GetVersionsVersion { return v.Versions }).(GetVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVersionsResultOutput{})
}
