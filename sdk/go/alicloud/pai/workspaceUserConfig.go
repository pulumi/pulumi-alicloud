// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a PAI Workspace User Config resource.
//
// For information about PAI Workspace User Config and how to use it, see [What is User Config](https://www.alibabacloud.com/help/en/pai/developer-reference/api-aiworkspace-2021-02-04-setuserconfigs).
//
// > **NOTE:** Available since v1.250.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := pai.NewWorkspaceUserConfig(ctx, "default", &pai.WorkspaceUserConfigArgs{
//				CategoryName: pulumi.String("DataPrivacyConfig"),
//				ConfigKey:    pulumi.String("customizePAIAssumedRole"),
//				ConfigValue:  pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PAI Workspace User Config can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:pai/workspaceUserConfig:WorkspaceUserConfig example <category_name>:<config_key>
// ```
type WorkspaceUserConfig struct {
	pulumi.CustomResourceState

	// The category. Valid values: `DataPrivacyConfig`.
	CategoryName pulumi.StringOutput `pulumi:"categoryName"`
	// The key of the configuration.
	ConfigKey pulumi.StringOutput `pulumi:"configKey"`
	// The value of the configuration.
	ConfigValue pulumi.StringOutput `pulumi:"configValue"`
	// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
	Scope pulumi.StringOutput `pulumi:"scope"`
}

// NewWorkspaceUserConfig registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceUserConfig(ctx *pulumi.Context,
	name string, args *WorkspaceUserConfigArgs, opts ...pulumi.ResourceOption) (*WorkspaceUserConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CategoryName == nil {
		return nil, errors.New("invalid value for required argument 'CategoryName'")
	}
	if args.ConfigKey == nil {
		return nil, errors.New("invalid value for required argument 'ConfigKey'")
	}
	if args.ConfigValue == nil {
		return nil, errors.New("invalid value for required argument 'ConfigValue'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceUserConfig
	err := ctx.RegisterResource("alicloud:pai/workspaceUserConfig:WorkspaceUserConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceUserConfig gets an existing WorkspaceUserConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceUserConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceUserConfigState, opts ...pulumi.ResourceOption) (*WorkspaceUserConfig, error) {
	var resource WorkspaceUserConfig
	err := ctx.ReadResource("alicloud:pai/workspaceUserConfig:WorkspaceUserConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceUserConfig resources.
type workspaceUserConfigState struct {
	// The category. Valid values: `DataPrivacyConfig`.
	CategoryName *string `pulumi:"categoryName"`
	// The key of the configuration.
	ConfigKey *string `pulumi:"configKey"`
	// The value of the configuration.
	ConfigValue *string `pulumi:"configValue"`
	// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
	Scope *string `pulumi:"scope"`
}

type WorkspaceUserConfigState struct {
	// The category. Valid values: `DataPrivacyConfig`.
	CategoryName pulumi.StringPtrInput
	// The key of the configuration.
	ConfigKey pulumi.StringPtrInput
	// The value of the configuration.
	ConfigValue pulumi.StringPtrInput
	// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
	Scope pulumi.StringPtrInput
}

func (WorkspaceUserConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceUserConfigState)(nil)).Elem()
}

type workspaceUserConfigArgs struct {
	// The category. Valid values: `DataPrivacyConfig`.
	CategoryName string `pulumi:"categoryName"`
	// The key of the configuration.
	ConfigKey string `pulumi:"configKey"`
	// The value of the configuration.
	ConfigValue string `pulumi:"configValue"`
	// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a WorkspaceUserConfig resource.
type WorkspaceUserConfigArgs struct {
	// The category. Valid values: `DataPrivacyConfig`.
	CategoryName pulumi.StringInput
	// The key of the configuration.
	ConfigKey pulumi.StringInput
	// The value of the configuration.
	ConfigValue pulumi.StringInput
	// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
	Scope pulumi.StringPtrInput
}

func (WorkspaceUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceUserConfigArgs)(nil)).Elem()
}

type WorkspaceUserConfigInput interface {
	pulumi.Input

	ToWorkspaceUserConfigOutput() WorkspaceUserConfigOutput
	ToWorkspaceUserConfigOutputWithContext(ctx context.Context) WorkspaceUserConfigOutput
}

func (*WorkspaceUserConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserConfig)(nil)).Elem()
}

func (i *WorkspaceUserConfig) ToWorkspaceUserConfigOutput() WorkspaceUserConfigOutput {
	return i.ToWorkspaceUserConfigOutputWithContext(context.Background())
}

func (i *WorkspaceUserConfig) ToWorkspaceUserConfigOutputWithContext(ctx context.Context) WorkspaceUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserConfigOutput)
}

// WorkspaceUserConfigArrayInput is an input type that accepts WorkspaceUserConfigArray and WorkspaceUserConfigArrayOutput values.
// You can construct a concrete instance of `WorkspaceUserConfigArrayInput` via:
//
//	WorkspaceUserConfigArray{ WorkspaceUserConfigArgs{...} }
type WorkspaceUserConfigArrayInput interface {
	pulumi.Input

	ToWorkspaceUserConfigArrayOutput() WorkspaceUserConfigArrayOutput
	ToWorkspaceUserConfigArrayOutputWithContext(context.Context) WorkspaceUserConfigArrayOutput
}

type WorkspaceUserConfigArray []WorkspaceUserConfigInput

func (WorkspaceUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceUserConfig)(nil)).Elem()
}

func (i WorkspaceUserConfigArray) ToWorkspaceUserConfigArrayOutput() WorkspaceUserConfigArrayOutput {
	return i.ToWorkspaceUserConfigArrayOutputWithContext(context.Background())
}

func (i WorkspaceUserConfigArray) ToWorkspaceUserConfigArrayOutputWithContext(ctx context.Context) WorkspaceUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserConfigArrayOutput)
}

// WorkspaceUserConfigMapInput is an input type that accepts WorkspaceUserConfigMap and WorkspaceUserConfigMapOutput values.
// You can construct a concrete instance of `WorkspaceUserConfigMapInput` via:
//
//	WorkspaceUserConfigMap{ "key": WorkspaceUserConfigArgs{...} }
type WorkspaceUserConfigMapInput interface {
	pulumi.Input

	ToWorkspaceUserConfigMapOutput() WorkspaceUserConfigMapOutput
	ToWorkspaceUserConfigMapOutputWithContext(context.Context) WorkspaceUserConfigMapOutput
}

type WorkspaceUserConfigMap map[string]WorkspaceUserConfigInput

func (WorkspaceUserConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceUserConfig)(nil)).Elem()
}

func (i WorkspaceUserConfigMap) ToWorkspaceUserConfigMapOutput() WorkspaceUserConfigMapOutput {
	return i.ToWorkspaceUserConfigMapOutputWithContext(context.Background())
}

func (i WorkspaceUserConfigMap) ToWorkspaceUserConfigMapOutputWithContext(ctx context.Context) WorkspaceUserConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceUserConfigMapOutput)
}

type WorkspaceUserConfigOutput struct{ *pulumi.OutputState }

func (WorkspaceUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceUserConfig)(nil)).Elem()
}

func (o WorkspaceUserConfigOutput) ToWorkspaceUserConfigOutput() WorkspaceUserConfigOutput {
	return o
}

func (o WorkspaceUserConfigOutput) ToWorkspaceUserConfigOutputWithContext(ctx context.Context) WorkspaceUserConfigOutput {
	return o
}

// The category. Valid values: `DataPrivacyConfig`.
func (o WorkspaceUserConfigOutput) CategoryName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceUserConfig) pulumi.StringOutput { return v.CategoryName }).(pulumi.StringOutput)
}

// The key of the configuration.
func (o WorkspaceUserConfigOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceUserConfig) pulumi.StringOutput { return v.ConfigKey }).(pulumi.StringOutput)
}

// The value of the configuration.
func (o WorkspaceUserConfigOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceUserConfig) pulumi.StringOutput { return v.ConfigValue }).(pulumi.StringOutput)
}

// The scope. Default value: `owner`. Valid values: `owner`, `subUser`.
func (o WorkspaceUserConfigOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceUserConfig) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

type WorkspaceUserConfigArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceUserConfig)(nil)).Elem()
}

func (o WorkspaceUserConfigArrayOutput) ToWorkspaceUserConfigArrayOutput() WorkspaceUserConfigArrayOutput {
	return o
}

func (o WorkspaceUserConfigArrayOutput) ToWorkspaceUserConfigArrayOutputWithContext(ctx context.Context) WorkspaceUserConfigArrayOutput {
	return o
}

func (o WorkspaceUserConfigArrayOutput) Index(i pulumi.IntInput) WorkspaceUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceUserConfig {
		return vs[0].([]*WorkspaceUserConfig)[vs[1].(int)]
	}).(WorkspaceUserConfigOutput)
}

type WorkspaceUserConfigMapOutput struct{ *pulumi.OutputState }

func (WorkspaceUserConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceUserConfig)(nil)).Elem()
}

func (o WorkspaceUserConfigMapOutput) ToWorkspaceUserConfigMapOutput() WorkspaceUserConfigMapOutput {
	return o
}

func (o WorkspaceUserConfigMapOutput) ToWorkspaceUserConfigMapOutputWithContext(ctx context.Context) WorkspaceUserConfigMapOutput {
	return o
}

func (o WorkspaceUserConfigMapOutput) MapIndex(k pulumi.StringInput) WorkspaceUserConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceUserConfig {
		return vs[0].(map[string]*WorkspaceUserConfig)[vs[1].(string)]
	}).(WorkspaceUserConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserConfigInput)(nil)).Elem(), &WorkspaceUserConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserConfigArrayInput)(nil)).Elem(), WorkspaceUserConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceUserConfigMapInput)(nil)).Elem(), WorkspaceUserConfigMap{})
	pulumi.RegisterOutputType(WorkspaceUserConfigOutput{})
	pulumi.RegisterOutputType(WorkspaceUserConfigArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceUserConfigMapOutput{})
}
