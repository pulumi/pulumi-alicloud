// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a PAI Workspace Dataset resource.
//
// For information about PAI Workspace Dataset and how to use it, see [What is Dataset](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateDataset).
//
// > **NOTE:** Available since v1.236.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			defaultWorkspace, err := pai.NewWorkspaceWorkspace(ctx, "defaultWorkspace", &pai.WorkspaceWorkspaceArgs{
//				Description:   pulumi.String(name),
//				DisplayName:   pulumi.String(name),
//				WorkspaceName: pulumi.String(name),
//				EnvTypes: pulumi.StringArray{
//					pulumi.String("prod"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"mountPath": "/mnt/data/",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = pai.NewWorkspaceDataset(ctx, "default", &pai.WorkspaceDatasetArgs{
//				Options:        pulumi.String(json0),
//				Description:    pulumi.String(name),
//				Accessibility:  pulumi.String("PRIVATE"),
//				DatasetName:    pulumi.String(name),
//				DataSourceType: pulumi.String("NAS"),
//				SourceType:     pulumi.String("ITAG"),
//				WorkspaceId:    defaultWorkspace.ID(),
//				DataType:       pulumi.String("PIC"),
//				Property:       pulumi.String("DIRECTORY"),
//				Uri:            pulumi.String("nas://086b649545.cn-hangzhou/"),
//				SourceId:       pulumi.String("d-xxxxx_v1"),
//				UserId:         pulumi.String("1511928242963727"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PAI Workspace Dataset can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:pai/workspaceDataset:WorkspaceDataset example <id>
// ```
type WorkspaceDataset struct {
	pulumi.CustomResourceState

	// Workspace visibility. The following values are supported:
	// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
	// - PUBLIC: The workspace is visible to all users.
	Accessibility pulumi.StringOutput `pulumi:"accessibility"`
	// The creation time of the resource
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringOutput `pulumi:"dataSourceType"`
	// The dataset type. The default value is COMMON. The following values are supported:
	// - COMMON: COMMON.
	// - PIC: picture.
	// - TEXT: TEXT.
	// - VIDEO: VIDEO.
	// - AUDIO: AUDIO.
	DataType pulumi.StringOutput `pulumi:"dataType"`
	// The name of the dataset. The naming rules are as follows:
	// - Start with a lowercase letter, uppercase letter, number, or Chinese.
	// - Can contain an underscore (_) or a dash (-).
	// - 1~127 characters in length.
	DatasetName pulumi.StringOutput `pulumi:"datasetName"`
	// Custom descriptions of datasets to distinguish between different datasets.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Labels added to the dataset See `labels` below.
	Labels WorkspaceDatasetLabelArrayOutput `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrOutput `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringOutput `pulumi:"property"`
	// The data source ID.
	// - When the SourceType is USER, SourceId can be customized.
	// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
	// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
	SourceId pulumi.StringPtrOutput `pulumi:"sourceId"`
	// The data source type. The default value is USER. The following values are supported:
	// - PAI-PUBLIC-DATASET:PAI public dataset.
	// - ITAG: The dataset generated by the iTAG module annotation result.
	// - USER: The data set registered by the USER.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// The ID of the dataset owner.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
	//
	// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceDataset registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceDataset(ctx *pulumi.Context,
	name string, args *WorkspaceDatasetArgs, opts ...pulumi.ResourceOption) (*WorkspaceDataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataSourceType == nil {
		return nil, errors.New("invalid value for required argument 'DataSourceType'")
	}
	if args.DatasetName == nil {
		return nil, errors.New("invalid value for required argument 'DatasetName'")
	}
	if args.Property == nil {
		return nil, errors.New("invalid value for required argument 'Property'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceDataset
	err := ctx.RegisterResource("alicloud:pai/workspaceDataset:WorkspaceDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceDataset gets an existing WorkspaceDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceDatasetState, opts ...pulumi.ResourceOption) (*WorkspaceDataset, error) {
	var resource WorkspaceDataset
	err := ctx.ReadResource("alicloud:pai/workspaceDataset:WorkspaceDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceDataset resources.
type workspaceDatasetState struct {
	// Workspace visibility. The following values are supported:
	// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
	// - PUBLIC: The workspace is visible to all users.
	Accessibility *string `pulumi:"accessibility"`
	// The creation time of the resource
	CreateTime *string `pulumi:"createTime"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType *string `pulumi:"dataSourceType"`
	// The dataset type. The default value is COMMON. The following values are supported:
	// - COMMON: COMMON.
	// - PIC: picture.
	// - TEXT: TEXT.
	// - VIDEO: VIDEO.
	// - AUDIO: AUDIO.
	DataType *string `pulumi:"dataType"`
	// The name of the dataset. The naming rules are as follows:
	// - Start with a lowercase letter, uppercase letter, number, or Chinese.
	// - Can contain an underscore (_) or a dash (-).
	// - 1~127 characters in length.
	DatasetName *string `pulumi:"datasetName"`
	// Custom descriptions of datasets to distinguish between different datasets.
	Description *string `pulumi:"description"`
	// Labels added to the dataset See `labels` below.
	Labels []WorkspaceDatasetLabel `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options *string `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property *string `pulumi:"property"`
	// The data source ID.
	// - When the SourceType is USER, SourceId can be customized.
	// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
	// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
	SourceId *string `pulumi:"sourceId"`
	// The data source type. The default value is USER. The following values are supported:
	// - PAI-PUBLIC-DATASET:PAI public dataset.
	// - ITAG: The dataset generated by the iTAG module annotation result.
	// - USER: The data set registered by the USER.
	SourceType *string `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri *string `pulumi:"uri"`
	// The ID of the dataset owner.
	UserId *string `pulumi:"userId"`
	// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
	//
	// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceDatasetState struct {
	// Workspace visibility. The following values are supported:
	// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
	// - PUBLIC: The workspace is visible to all users.
	Accessibility pulumi.StringPtrInput
	// The creation time of the resource
	CreateTime pulumi.StringPtrInput
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringPtrInput
	// The dataset type. The default value is COMMON. The following values are supported:
	// - COMMON: COMMON.
	// - PIC: picture.
	// - TEXT: TEXT.
	// - VIDEO: VIDEO.
	// - AUDIO: AUDIO.
	DataType pulumi.StringPtrInput
	// The name of the dataset. The naming rules are as follows:
	// - Start with a lowercase letter, uppercase letter, number, or Chinese.
	// - Can contain an underscore (_) or a dash (-).
	// - 1~127 characters in length.
	DatasetName pulumi.StringPtrInput
	// Custom descriptions of datasets to distinguish between different datasets.
	Description pulumi.StringPtrInput
	// Labels added to the dataset See `labels` below.
	Labels WorkspaceDatasetLabelArrayInput
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrInput
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringPtrInput
	// The data source ID.
	// - When the SourceType is USER, SourceId can be customized.
	// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
	// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
	SourceId pulumi.StringPtrInput
	// The data source type. The default value is USER. The following values are supported:
	// - PAI-PUBLIC-DATASET:PAI public dataset.
	// - ITAG: The dataset generated by the iTAG module annotation result.
	// - USER: The data set registered by the USER.
	SourceType pulumi.StringPtrInput
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringPtrInput
	// The ID of the dataset owner.
	UserId pulumi.StringPtrInput
	// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
	//
	// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceDatasetState)(nil)).Elem()
}

type workspaceDatasetArgs struct {
	// Workspace visibility. The following values are supported:
	// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
	// - PUBLIC: The workspace is visible to all users.
	Accessibility *string `pulumi:"accessibility"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType string `pulumi:"dataSourceType"`
	// The dataset type. The default value is COMMON. The following values are supported:
	// - COMMON: COMMON.
	// - PIC: picture.
	// - TEXT: TEXT.
	// - VIDEO: VIDEO.
	// - AUDIO: AUDIO.
	DataType *string `pulumi:"dataType"`
	// The name of the dataset. The naming rules are as follows:
	// - Start with a lowercase letter, uppercase letter, number, or Chinese.
	// - Can contain an underscore (_) or a dash (-).
	// - 1~127 characters in length.
	DatasetName string `pulumi:"datasetName"`
	// Custom descriptions of datasets to distinguish between different datasets.
	Description *string `pulumi:"description"`
	// Labels added to the dataset See `labels` below.
	Labels []WorkspaceDatasetLabel `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options *string `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property string `pulumi:"property"`
	// The data source ID.
	// - When the SourceType is USER, SourceId can be customized.
	// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
	// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
	SourceId *string `pulumi:"sourceId"`
	// The data source type. The default value is USER. The following values are supported:
	// - PAI-PUBLIC-DATASET:PAI public dataset.
	// - ITAG: The dataset generated by the iTAG module annotation result.
	// - USER: The data set registered by the USER.
	SourceType *string `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri string `pulumi:"uri"`
	// The ID of the dataset owner.
	UserId *string `pulumi:"userId"`
	// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
	//
	// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceDataset resource.
type WorkspaceDatasetArgs struct {
	// Workspace visibility. The following values are supported:
	// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
	// - PUBLIC: The workspace is visible to all users.
	Accessibility pulumi.StringPtrInput
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringInput
	// The dataset type. The default value is COMMON. The following values are supported:
	// - COMMON: COMMON.
	// - PIC: picture.
	// - TEXT: TEXT.
	// - VIDEO: VIDEO.
	// - AUDIO: AUDIO.
	DataType pulumi.StringPtrInput
	// The name of the dataset. The naming rules are as follows:
	// - Start with a lowercase letter, uppercase letter, number, or Chinese.
	// - Can contain an underscore (_) or a dash (-).
	// - 1~127 characters in length.
	DatasetName pulumi.StringInput
	// Custom descriptions of datasets to distinguish between different datasets.
	Description pulumi.StringPtrInput
	// Labels added to the dataset See `labels` below.
	Labels WorkspaceDatasetLabelArrayInput
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrInput
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringInput
	// The data source ID.
	// - When the SourceType is USER, SourceId can be customized.
	// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
	// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
	SourceId pulumi.StringPtrInput
	// The data source type. The default value is USER. The following values are supported:
	// - PAI-PUBLIC-DATASET:PAI public dataset.
	// - ITAG: The dataset generated by the iTAG module annotation result.
	// - USER: The data set registered by the USER.
	SourceType pulumi.StringPtrInput
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringInput
	// The ID of the dataset owner.
	UserId pulumi.StringPtrInput
	// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
	//
	// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceDatasetArgs)(nil)).Elem()
}

type WorkspaceDatasetInput interface {
	pulumi.Input

	ToWorkspaceDatasetOutput() WorkspaceDatasetOutput
	ToWorkspaceDatasetOutputWithContext(ctx context.Context) WorkspaceDatasetOutput
}

func (*WorkspaceDataset) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceDataset)(nil)).Elem()
}

func (i *WorkspaceDataset) ToWorkspaceDatasetOutput() WorkspaceDatasetOutput {
	return i.ToWorkspaceDatasetOutputWithContext(context.Background())
}

func (i *WorkspaceDataset) ToWorkspaceDatasetOutputWithContext(ctx context.Context) WorkspaceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetOutput)
}

// WorkspaceDatasetArrayInput is an input type that accepts WorkspaceDatasetArray and WorkspaceDatasetArrayOutput values.
// You can construct a concrete instance of `WorkspaceDatasetArrayInput` via:
//
//	WorkspaceDatasetArray{ WorkspaceDatasetArgs{...} }
type WorkspaceDatasetArrayInput interface {
	pulumi.Input

	ToWorkspaceDatasetArrayOutput() WorkspaceDatasetArrayOutput
	ToWorkspaceDatasetArrayOutputWithContext(context.Context) WorkspaceDatasetArrayOutput
}

type WorkspaceDatasetArray []WorkspaceDatasetInput

func (WorkspaceDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceDataset)(nil)).Elem()
}

func (i WorkspaceDatasetArray) ToWorkspaceDatasetArrayOutput() WorkspaceDatasetArrayOutput {
	return i.ToWorkspaceDatasetArrayOutputWithContext(context.Background())
}

func (i WorkspaceDatasetArray) ToWorkspaceDatasetArrayOutputWithContext(ctx context.Context) WorkspaceDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetArrayOutput)
}

// WorkspaceDatasetMapInput is an input type that accepts WorkspaceDatasetMap and WorkspaceDatasetMapOutput values.
// You can construct a concrete instance of `WorkspaceDatasetMapInput` via:
//
//	WorkspaceDatasetMap{ "key": WorkspaceDatasetArgs{...} }
type WorkspaceDatasetMapInput interface {
	pulumi.Input

	ToWorkspaceDatasetMapOutput() WorkspaceDatasetMapOutput
	ToWorkspaceDatasetMapOutputWithContext(context.Context) WorkspaceDatasetMapOutput
}

type WorkspaceDatasetMap map[string]WorkspaceDatasetInput

func (WorkspaceDatasetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceDataset)(nil)).Elem()
}

func (i WorkspaceDatasetMap) ToWorkspaceDatasetMapOutput() WorkspaceDatasetMapOutput {
	return i.ToWorkspaceDatasetMapOutputWithContext(context.Background())
}

func (i WorkspaceDatasetMap) ToWorkspaceDatasetMapOutputWithContext(ctx context.Context) WorkspaceDatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetMapOutput)
}

type WorkspaceDatasetOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceDataset)(nil)).Elem()
}

func (o WorkspaceDatasetOutput) ToWorkspaceDatasetOutput() WorkspaceDatasetOutput {
	return o
}

func (o WorkspaceDatasetOutput) ToWorkspaceDatasetOutputWithContext(ctx context.Context) WorkspaceDatasetOutput {
	return o
}

// Workspace visibility. The following values are supported:
// - PRIVATE (default): indicates that the workspace is visible to itself and the administrator.
// - PUBLIC: The workspace is visible to all users.
func (o WorkspaceDatasetOutput) Accessibility() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.Accessibility }).(pulumi.StringOutput)
}

// The creation time of the resource
func (o WorkspaceDatasetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The data source type. The following values are supported:
// - OSS: Alibaba Cloud Object Storage (OSS).
// - NAS: Alibaba cloud file storage (NAS).
func (o WorkspaceDatasetOutput) DataSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.DataSourceType }).(pulumi.StringOutput)
}

// The dataset type. The default value is COMMON. The following values are supported:
// - COMMON: COMMON.
// - PIC: picture.
// - TEXT: TEXT.
// - VIDEO: VIDEO.
// - AUDIO: AUDIO.
func (o WorkspaceDatasetOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.DataType }).(pulumi.StringOutput)
}

// The name of the dataset. The naming rules are as follows:
// - Start with a lowercase letter, uppercase letter, number, or Chinese.
// - Can contain an underscore (_) or a dash (-).
// - 1~127 characters in length.
func (o WorkspaceDatasetOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.DatasetName }).(pulumi.StringOutput)
}

// Custom descriptions of datasets to distinguish between different datasets.
func (o WorkspaceDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Labels added to the dataset See `labels` below.
func (o WorkspaceDatasetOutput) Labels() WorkspaceDatasetLabelArrayOutput {
	return o.ApplyT(func(v *WorkspaceDataset) WorkspaceDatasetLabelArrayOutput { return v.Labels }).(WorkspaceDatasetLabelArrayOutput)
}

// The extended field, which is of the JsonString type.
//
// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
func (o WorkspaceDatasetOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringPtrOutput { return v.Options }).(pulumi.StringPtrOutput)
}

// The properties of the dataset. The following values are supported:
// - FILE: FILE.
// - DIRECTORY: folder.
func (o WorkspaceDatasetOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.Property }).(pulumi.StringOutput)
}

// The data source ID.
// - When the SourceType is USER, SourceId can be customized.
// - When SourceType is ITAG, that is, when the iTAG module labels the data set generated by the result, SourceId is the task ID of ITAG.
// - When SourceType is PAI_PUBLIC_DATASET, that is, a dataset created using PAI public datasets, SourceId is empty by default.
func (o WorkspaceDatasetOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringPtrOutput { return v.SourceId }).(pulumi.StringPtrOutput)
}

// The data source type. The default value is USER. The following values are supported:
// - PAI-PUBLIC-DATASET:PAI public dataset.
// - ITAG: The dataset generated by the iTAG module annotation result.
// - USER: The data set registered by the USER.
func (o WorkspaceDatasetOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The Uri configuration sample is as follows:
// - The data source type is OSS:'oss:// bucket.endpoint/object'
// - The data source type is NAS:
//
// The general NAS format is: 'nas://.region/subpath/to/dir/';
//
// CPFS1.0:'nas://.region/subpath/to/dir /';
//
// CPFS2.0:'nas://.region//'.
//
// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
func (o WorkspaceDatasetOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// The ID of the dataset owner.
func (o WorkspaceDatasetOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// The ID of the workspace where the dataset is located. For details about how to obtain the workspace ID, see ListWorkspaces.
//
// If this parameter is not configured, the default workspace is used. If the default workspace does not exist, an error is reported.
func (o WorkspaceDatasetOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDataset) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceDatasetArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceDataset)(nil)).Elem()
}

func (o WorkspaceDatasetArrayOutput) ToWorkspaceDatasetArrayOutput() WorkspaceDatasetArrayOutput {
	return o
}

func (o WorkspaceDatasetArrayOutput) ToWorkspaceDatasetArrayOutputWithContext(ctx context.Context) WorkspaceDatasetArrayOutput {
	return o
}

func (o WorkspaceDatasetArrayOutput) Index(i pulumi.IntInput) WorkspaceDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceDataset {
		return vs[0].([]*WorkspaceDataset)[vs[1].(int)]
	}).(WorkspaceDatasetOutput)
}

type WorkspaceDatasetMapOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceDataset)(nil)).Elem()
}

func (o WorkspaceDatasetMapOutput) ToWorkspaceDatasetMapOutput() WorkspaceDatasetMapOutput {
	return o
}

func (o WorkspaceDatasetMapOutput) ToWorkspaceDatasetMapOutputWithContext(ctx context.Context) WorkspaceDatasetMapOutput {
	return o
}

func (o WorkspaceDatasetMapOutput) MapIndex(k pulumi.StringInput) WorkspaceDatasetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceDataset {
		return vs[0].(map[string]*WorkspaceDataset)[vs[1].(string)]
	}).(WorkspaceDatasetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetInput)(nil)).Elem(), &WorkspaceDataset{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetArrayInput)(nil)).Elem(), WorkspaceDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetMapInput)(nil)).Elem(), WorkspaceDatasetMap{})
	pulumi.RegisterOutputType(WorkspaceDatasetOutput{})
	pulumi.RegisterOutputType(WorkspaceDatasetArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceDatasetMapOutput{})
}
