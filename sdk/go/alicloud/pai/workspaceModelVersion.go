// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a PAI Workspace Model Version resource.
//
// For information about PAI Workspace Model Version and how to use it, see [What is Model Version](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateModelVersion).
//
// > **NOTE:** Available since v1.248.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pai"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultDI9fsL, err := pai.NewWorkspaceWorkspace(ctx, "defaultDI9fsL", &pai.WorkspaceWorkspaceArgs{
//				Description:   pulumi.String("802"),
//				DisplayName:   pulumi.String(name),
//				WorkspaceName: pulumi.Sprintf("%v_%v", name, _default.Result),
//				EnvTypes: pulumi.StringArray{
//					pulumi.String("prod"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultsHptEL, err := pai.NewWorkspaceModel(ctx, "defaultsHptEL", &pai.WorkspaceModelArgs{
//				ModelName:        pulumi.String(name),
//				WorkspaceId:      defaultDI9fsL.ID(),
//				Origin:           pulumi.String("Civitai"),
//				Task:             pulumi.String("text-to-image-synthesis"),
//				Accessibility:    pulumi.String("PRIVATE"),
//				ModelType:        pulumi.String("Checkpoint"),
//				OrderNumber:      pulumi.Int(1),
//				ModelDescription: pulumi.String("ModelDescription."),
//				ModelDoc:         pulumi.String("https://eas-***.oss-cn-hangzhou.aliyuncs.com/s**.safetensors"),
//				Domain:           pulumi.String("aigc"),
//				Labels: pai.WorkspaceModelLabelArray{
//					&pai.WorkspaceModelLabelArgs{
//						Key:   pulumi.String("base_model"),
//						Value: pulumi.String("SD 1.5"),
//					},
//				},
//				ExtraInfo: pulumi.StringMap{
//					"test": pulumi.String("15"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pai.NewWorkspaceModelVersion(ctx, "default", &pai.WorkspaceModelVersionArgs{
//				VersionDescription: pulumi.String("VersionDescription."),
//				SourceType:         pulumi.String("TrainingService"),
//				SourceId:           pulumi.String("region=${region},workspaceId=${workspace_id},kind=TrainingJob,id=job-id"),
//				ExtraInfo: pulumi.StringMap{
//					"test": pulumi.String("15"),
//				},
//				TrainingSpec: pulumi.StringMap{
//					"test": pulumi.String("TrainingSpec"),
//				},
//				Uri: pulumi.String("oss://hz-example-0701.oss-cn-hangzhou-internal.aliyuncs.com/checkpoints/"),
//				InferenceSpec: pulumi.StringMap{
//					"test": pulumi.String("InferenceSpec"),
//				},
//				ModelId:        defaultsHptEL.ID(),
//				FormatType:     pulumi.String("SavedModel"),
//				ApprovalStatus: pulumi.String("Pending"),
//				FrameworkType:  pulumi.String("PyTorch"),
//				VersionName:    pulumi.String("1.0.0"),
//				Metrics:        pulumi.StringMap{},
//				Labels: pai.WorkspaceModelVersionLabelArray{
//					&pai.WorkspaceModelVersionLabelArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("vs1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PAI Workspace Model Version can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:pai/workspaceModelVersion:WorkspaceModelVersion example <model_id>:<version_name>
// ```
type WorkspaceModelVersion struct {
	pulumi.CustomResourceState

	// The approval status. Valid values:
	// - Pending: To be determined.
	// - Approved: Allow to go online.
	// - Rejected: Online is not allowed.
	ApprovalStatus pulumi.StringOutput `pulumi:"approvalStatus"`
	// Other information.
	ExtraInfo pulumi.StringMapOutput `pulumi:"extraInfo"`
	// The format of the model. Valid values:
	// - OfflineModel
	// - SavedModel
	// - Keras H5
	// - Frozen Pb
	// - Caffe Prototxt
	// - TorchScript
	// - XGBoost
	// - PMML
	// - AlinkModel
	// - ONNX
	FormatType pulumi.StringPtrOutput `pulumi:"formatType"`
	// The framework of the model. Valid values:
	// - Pytorch
	// - XGBoost
	// - Keras
	// - Caffe
	// - Alink
	// - Xflow
	// - TensorFlow
	FrameworkType pulumi.StringPtrOutput `pulumi:"frameworkType"`
	// Describes how to apply to downstream inference services.
	InferenceSpec pulumi.StringMapOutput `pulumi:"inferenceSpec"`
	// List of model version labels. See `labels` below.
	Labels WorkspaceModelVersionLabelArrayOutput `pulumi:"labels"`
	// The metrics for the model. The serialized length is limited to 8192.
	Metrics pulumi.StringMapOutput `pulumi:"metrics"`
	// The model ID.
	ModelId pulumi.StringOutput `pulumi:"modelId"`
	// The extended field. This is a JSON string.
	Options pulumi.StringPtrOutput `pulumi:"options"`
	// The source ID.
	SourceId pulumi.StringPtrOutput `pulumi:"sourceId"`
	// The type of the model source. Valid values:
	// - Custom: Custom.
	// - PAIFlow:PAI workflow.
	// - TrainingService:PAI training service.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The training configurations. Used for fine-tuning and incremental training.
	TrainingSpec pulumi.StringMapOutput `pulumi:"trainingSpec"`
	// The URI of the model version.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// The version descriptions.
	VersionDescription pulumi.StringPtrOutput `pulumi:"versionDescription"`
	// The Model version.
	VersionName pulumi.StringOutput `pulumi:"versionName"`
}

// NewWorkspaceModelVersion registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceModelVersion(ctx *pulumi.Context,
	name string, args *WorkspaceModelVersionArgs, opts ...pulumi.ResourceOption) (*WorkspaceModelVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ModelId == nil {
		return nil, errors.New("invalid value for required argument 'ModelId'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceModelVersion
	err := ctx.RegisterResource("alicloud:pai/workspaceModelVersion:WorkspaceModelVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceModelVersion gets an existing WorkspaceModelVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceModelVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceModelVersionState, opts ...pulumi.ResourceOption) (*WorkspaceModelVersion, error) {
	var resource WorkspaceModelVersion
	err := ctx.ReadResource("alicloud:pai/workspaceModelVersion:WorkspaceModelVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceModelVersion resources.
type workspaceModelVersionState struct {
	// The approval status. Valid values:
	// - Pending: To be determined.
	// - Approved: Allow to go online.
	// - Rejected: Online is not allowed.
	ApprovalStatus *string `pulumi:"approvalStatus"`
	// Other information.
	ExtraInfo map[string]string `pulumi:"extraInfo"`
	// The format of the model. Valid values:
	// - OfflineModel
	// - SavedModel
	// - Keras H5
	// - Frozen Pb
	// - Caffe Prototxt
	// - TorchScript
	// - XGBoost
	// - PMML
	// - AlinkModel
	// - ONNX
	FormatType *string `pulumi:"formatType"`
	// The framework of the model. Valid values:
	// - Pytorch
	// - XGBoost
	// - Keras
	// - Caffe
	// - Alink
	// - Xflow
	// - TensorFlow
	FrameworkType *string `pulumi:"frameworkType"`
	// Describes how to apply to downstream inference services.
	InferenceSpec map[string]string `pulumi:"inferenceSpec"`
	// List of model version labels. See `labels` below.
	Labels []WorkspaceModelVersionLabel `pulumi:"labels"`
	// The metrics for the model. The serialized length is limited to 8192.
	Metrics map[string]string `pulumi:"metrics"`
	// The model ID.
	ModelId *string `pulumi:"modelId"`
	// The extended field. This is a JSON string.
	Options *string `pulumi:"options"`
	// The source ID.
	SourceId *string `pulumi:"sourceId"`
	// The type of the model source. Valid values:
	// - Custom: Custom.
	// - PAIFlow:PAI workflow.
	// - TrainingService:PAI training service.
	SourceType *string `pulumi:"sourceType"`
	// The training configurations. Used for fine-tuning and incremental training.
	TrainingSpec map[string]string `pulumi:"trainingSpec"`
	// The URI of the model version.
	Uri *string `pulumi:"uri"`
	// The version descriptions.
	VersionDescription *string `pulumi:"versionDescription"`
	// The Model version.
	VersionName *string `pulumi:"versionName"`
}

type WorkspaceModelVersionState struct {
	// The approval status. Valid values:
	// - Pending: To be determined.
	// - Approved: Allow to go online.
	// - Rejected: Online is not allowed.
	ApprovalStatus pulumi.StringPtrInput
	// Other information.
	ExtraInfo pulumi.StringMapInput
	// The format of the model. Valid values:
	// - OfflineModel
	// - SavedModel
	// - Keras H5
	// - Frozen Pb
	// - Caffe Prototxt
	// - TorchScript
	// - XGBoost
	// - PMML
	// - AlinkModel
	// - ONNX
	FormatType pulumi.StringPtrInput
	// The framework of the model. Valid values:
	// - Pytorch
	// - XGBoost
	// - Keras
	// - Caffe
	// - Alink
	// - Xflow
	// - TensorFlow
	FrameworkType pulumi.StringPtrInput
	// Describes how to apply to downstream inference services.
	InferenceSpec pulumi.StringMapInput
	// List of model version labels. See `labels` below.
	Labels WorkspaceModelVersionLabelArrayInput
	// The metrics for the model. The serialized length is limited to 8192.
	Metrics pulumi.StringMapInput
	// The model ID.
	ModelId pulumi.StringPtrInput
	// The extended field. This is a JSON string.
	Options pulumi.StringPtrInput
	// The source ID.
	SourceId pulumi.StringPtrInput
	// The type of the model source. Valid values:
	// - Custom: Custom.
	// - PAIFlow:PAI workflow.
	// - TrainingService:PAI training service.
	SourceType pulumi.StringPtrInput
	// The training configurations. Used for fine-tuning and incremental training.
	TrainingSpec pulumi.StringMapInput
	// The URI of the model version.
	Uri pulumi.StringPtrInput
	// The version descriptions.
	VersionDescription pulumi.StringPtrInput
	// The Model version.
	VersionName pulumi.StringPtrInput
}

func (WorkspaceModelVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceModelVersionState)(nil)).Elem()
}

type workspaceModelVersionArgs struct {
	// The approval status. Valid values:
	// - Pending: To be determined.
	// - Approved: Allow to go online.
	// - Rejected: Online is not allowed.
	ApprovalStatus *string `pulumi:"approvalStatus"`
	// Other information.
	ExtraInfo map[string]string `pulumi:"extraInfo"`
	// The format of the model. Valid values:
	// - OfflineModel
	// - SavedModel
	// - Keras H5
	// - Frozen Pb
	// - Caffe Prototxt
	// - TorchScript
	// - XGBoost
	// - PMML
	// - AlinkModel
	// - ONNX
	FormatType *string `pulumi:"formatType"`
	// The framework of the model. Valid values:
	// - Pytorch
	// - XGBoost
	// - Keras
	// - Caffe
	// - Alink
	// - Xflow
	// - TensorFlow
	FrameworkType *string `pulumi:"frameworkType"`
	// Describes how to apply to downstream inference services.
	InferenceSpec map[string]string `pulumi:"inferenceSpec"`
	// List of model version labels. See `labels` below.
	Labels []WorkspaceModelVersionLabel `pulumi:"labels"`
	// The metrics for the model. The serialized length is limited to 8192.
	Metrics map[string]string `pulumi:"metrics"`
	// The model ID.
	ModelId string `pulumi:"modelId"`
	// The extended field. This is a JSON string.
	Options *string `pulumi:"options"`
	// The source ID.
	SourceId *string `pulumi:"sourceId"`
	// The type of the model source. Valid values:
	// - Custom: Custom.
	// - PAIFlow:PAI workflow.
	// - TrainingService:PAI training service.
	SourceType *string `pulumi:"sourceType"`
	// The training configurations. Used for fine-tuning and incremental training.
	TrainingSpec map[string]string `pulumi:"trainingSpec"`
	// The URI of the model version.
	Uri string `pulumi:"uri"`
	// The version descriptions.
	VersionDescription *string `pulumi:"versionDescription"`
	// The Model version.
	VersionName *string `pulumi:"versionName"`
}

// The set of arguments for constructing a WorkspaceModelVersion resource.
type WorkspaceModelVersionArgs struct {
	// The approval status. Valid values:
	// - Pending: To be determined.
	// - Approved: Allow to go online.
	// - Rejected: Online is not allowed.
	ApprovalStatus pulumi.StringPtrInput
	// Other information.
	ExtraInfo pulumi.StringMapInput
	// The format of the model. Valid values:
	// - OfflineModel
	// - SavedModel
	// - Keras H5
	// - Frozen Pb
	// - Caffe Prototxt
	// - TorchScript
	// - XGBoost
	// - PMML
	// - AlinkModel
	// - ONNX
	FormatType pulumi.StringPtrInput
	// The framework of the model. Valid values:
	// - Pytorch
	// - XGBoost
	// - Keras
	// - Caffe
	// - Alink
	// - Xflow
	// - TensorFlow
	FrameworkType pulumi.StringPtrInput
	// Describes how to apply to downstream inference services.
	InferenceSpec pulumi.StringMapInput
	// List of model version labels. See `labels` below.
	Labels WorkspaceModelVersionLabelArrayInput
	// The metrics for the model. The serialized length is limited to 8192.
	Metrics pulumi.StringMapInput
	// The model ID.
	ModelId pulumi.StringInput
	// The extended field. This is a JSON string.
	Options pulumi.StringPtrInput
	// The source ID.
	SourceId pulumi.StringPtrInput
	// The type of the model source. Valid values:
	// - Custom: Custom.
	// - PAIFlow:PAI workflow.
	// - TrainingService:PAI training service.
	SourceType pulumi.StringPtrInput
	// The training configurations. Used for fine-tuning and incremental training.
	TrainingSpec pulumi.StringMapInput
	// The URI of the model version.
	Uri pulumi.StringInput
	// The version descriptions.
	VersionDescription pulumi.StringPtrInput
	// The Model version.
	VersionName pulumi.StringPtrInput
}

func (WorkspaceModelVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceModelVersionArgs)(nil)).Elem()
}

type WorkspaceModelVersionInput interface {
	pulumi.Input

	ToWorkspaceModelVersionOutput() WorkspaceModelVersionOutput
	ToWorkspaceModelVersionOutputWithContext(ctx context.Context) WorkspaceModelVersionOutput
}

func (*WorkspaceModelVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceModelVersion)(nil)).Elem()
}

func (i *WorkspaceModelVersion) ToWorkspaceModelVersionOutput() WorkspaceModelVersionOutput {
	return i.ToWorkspaceModelVersionOutputWithContext(context.Background())
}

func (i *WorkspaceModelVersion) ToWorkspaceModelVersionOutputWithContext(ctx context.Context) WorkspaceModelVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceModelVersionOutput)
}

// WorkspaceModelVersionArrayInput is an input type that accepts WorkspaceModelVersionArray and WorkspaceModelVersionArrayOutput values.
// You can construct a concrete instance of `WorkspaceModelVersionArrayInput` via:
//
//	WorkspaceModelVersionArray{ WorkspaceModelVersionArgs{...} }
type WorkspaceModelVersionArrayInput interface {
	pulumi.Input

	ToWorkspaceModelVersionArrayOutput() WorkspaceModelVersionArrayOutput
	ToWorkspaceModelVersionArrayOutputWithContext(context.Context) WorkspaceModelVersionArrayOutput
}

type WorkspaceModelVersionArray []WorkspaceModelVersionInput

func (WorkspaceModelVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceModelVersion)(nil)).Elem()
}

func (i WorkspaceModelVersionArray) ToWorkspaceModelVersionArrayOutput() WorkspaceModelVersionArrayOutput {
	return i.ToWorkspaceModelVersionArrayOutputWithContext(context.Background())
}

func (i WorkspaceModelVersionArray) ToWorkspaceModelVersionArrayOutputWithContext(ctx context.Context) WorkspaceModelVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceModelVersionArrayOutput)
}

// WorkspaceModelVersionMapInput is an input type that accepts WorkspaceModelVersionMap and WorkspaceModelVersionMapOutput values.
// You can construct a concrete instance of `WorkspaceModelVersionMapInput` via:
//
//	WorkspaceModelVersionMap{ "key": WorkspaceModelVersionArgs{...} }
type WorkspaceModelVersionMapInput interface {
	pulumi.Input

	ToWorkspaceModelVersionMapOutput() WorkspaceModelVersionMapOutput
	ToWorkspaceModelVersionMapOutputWithContext(context.Context) WorkspaceModelVersionMapOutput
}

type WorkspaceModelVersionMap map[string]WorkspaceModelVersionInput

func (WorkspaceModelVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceModelVersion)(nil)).Elem()
}

func (i WorkspaceModelVersionMap) ToWorkspaceModelVersionMapOutput() WorkspaceModelVersionMapOutput {
	return i.ToWorkspaceModelVersionMapOutputWithContext(context.Background())
}

func (i WorkspaceModelVersionMap) ToWorkspaceModelVersionMapOutputWithContext(ctx context.Context) WorkspaceModelVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceModelVersionMapOutput)
}

type WorkspaceModelVersionOutput struct{ *pulumi.OutputState }

func (WorkspaceModelVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceModelVersion)(nil)).Elem()
}

func (o WorkspaceModelVersionOutput) ToWorkspaceModelVersionOutput() WorkspaceModelVersionOutput {
	return o
}

func (o WorkspaceModelVersionOutput) ToWorkspaceModelVersionOutputWithContext(ctx context.Context) WorkspaceModelVersionOutput {
	return o
}

// The approval status. Valid values:
// - Pending: To be determined.
// - Approved: Allow to go online.
// - Rejected: Online is not allowed.
func (o WorkspaceModelVersionOutput) ApprovalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringOutput { return v.ApprovalStatus }).(pulumi.StringOutput)
}

// Other information.
func (o WorkspaceModelVersionOutput) ExtraInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringMapOutput { return v.ExtraInfo }).(pulumi.StringMapOutput)
}

// The format of the model. Valid values:
// - OfflineModel
// - SavedModel
// - Keras H5
// - Frozen Pb
// - Caffe Prototxt
// - TorchScript
// - XGBoost
// - PMML
// - AlinkModel
// - ONNX
func (o WorkspaceModelVersionOutput) FormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringPtrOutput { return v.FormatType }).(pulumi.StringPtrOutput)
}

// The framework of the model. Valid values:
// - Pytorch
// - XGBoost
// - Keras
// - Caffe
// - Alink
// - Xflow
// - TensorFlow
func (o WorkspaceModelVersionOutput) FrameworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringPtrOutput { return v.FrameworkType }).(pulumi.StringPtrOutput)
}

// Describes how to apply to downstream inference services.
func (o WorkspaceModelVersionOutput) InferenceSpec() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringMapOutput { return v.InferenceSpec }).(pulumi.StringMapOutput)
}

// List of model version labels. See `labels` below.
func (o WorkspaceModelVersionOutput) Labels() WorkspaceModelVersionLabelArrayOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) WorkspaceModelVersionLabelArrayOutput { return v.Labels }).(WorkspaceModelVersionLabelArrayOutput)
}

// The metrics for the model. The serialized length is limited to 8192.
func (o WorkspaceModelVersionOutput) Metrics() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringMapOutput { return v.Metrics }).(pulumi.StringMapOutput)
}

// The model ID.
func (o WorkspaceModelVersionOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringOutput { return v.ModelId }).(pulumi.StringOutput)
}

// The extended field. This is a JSON string.
func (o WorkspaceModelVersionOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringPtrOutput { return v.Options }).(pulumi.StringPtrOutput)
}

// The source ID.
func (o WorkspaceModelVersionOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringPtrOutput { return v.SourceId }).(pulumi.StringPtrOutput)
}

// The type of the model source. Valid values:
// - Custom: Custom.
// - PAIFlow:PAI workflow.
// - TrainingService:PAI training service.
func (o WorkspaceModelVersionOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The training configurations. Used for fine-tuning and incremental training.
func (o WorkspaceModelVersionOutput) TrainingSpec() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringMapOutput { return v.TrainingSpec }).(pulumi.StringMapOutput)
}

// The URI of the model version.
func (o WorkspaceModelVersionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// The version descriptions.
func (o WorkspaceModelVersionOutput) VersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringPtrOutput { return v.VersionDescription }).(pulumi.StringPtrOutput)
}

// The Model version.
func (o WorkspaceModelVersionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceModelVersion) pulumi.StringOutput { return v.VersionName }).(pulumi.StringOutput)
}

type WorkspaceModelVersionArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceModelVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceModelVersion)(nil)).Elem()
}

func (o WorkspaceModelVersionArrayOutput) ToWorkspaceModelVersionArrayOutput() WorkspaceModelVersionArrayOutput {
	return o
}

func (o WorkspaceModelVersionArrayOutput) ToWorkspaceModelVersionArrayOutputWithContext(ctx context.Context) WorkspaceModelVersionArrayOutput {
	return o
}

func (o WorkspaceModelVersionArrayOutput) Index(i pulumi.IntInput) WorkspaceModelVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceModelVersion {
		return vs[0].([]*WorkspaceModelVersion)[vs[1].(int)]
	}).(WorkspaceModelVersionOutput)
}

type WorkspaceModelVersionMapOutput struct{ *pulumi.OutputState }

func (WorkspaceModelVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceModelVersion)(nil)).Elem()
}

func (o WorkspaceModelVersionMapOutput) ToWorkspaceModelVersionMapOutput() WorkspaceModelVersionMapOutput {
	return o
}

func (o WorkspaceModelVersionMapOutput) ToWorkspaceModelVersionMapOutputWithContext(ctx context.Context) WorkspaceModelVersionMapOutput {
	return o
}

func (o WorkspaceModelVersionMapOutput) MapIndex(k pulumi.StringInput) WorkspaceModelVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceModelVersion {
		return vs[0].(map[string]*WorkspaceModelVersion)[vs[1].(string)]
	}).(WorkspaceModelVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceModelVersionInput)(nil)).Elem(), &WorkspaceModelVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceModelVersionArrayInput)(nil)).Elem(), WorkspaceModelVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceModelVersionMapInput)(nil)).Elem(), WorkspaceModelVersionMap{})
	pulumi.RegisterOutputType(WorkspaceModelVersionOutput{})
	pulumi.RegisterOutputType(WorkspaceModelVersionArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceModelVersionMapOutput{})
}
