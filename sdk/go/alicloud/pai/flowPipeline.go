// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Pai Flow Pipeline resource.
//
// For information about Pai Flow Pipeline and how to use it, see [What is Pipeline](https://www.alibabacloud.com/help/en/pai/developer-reference/api-paiflow-2021-02-02-createpipeline).
//
// > **NOTE:** Available since v1.248.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/pai"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform_example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetAccount(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultWjQD1e, err := pai.NewWorkspaceWorkspace(ctx, "defaultWjQD1e", &pai.WorkspaceWorkspaceArgs{
//				Description:   pulumi.String(name),
//				DisplayName:   pulumi.String(name),
//				WorkspaceName: pulumi.String(name),
//				EnvTypes: pulumi.StringArray{
//					pulumi.String("dev"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pai.NewFlowPipeline(ctx, "default", &pai.FlowPipelineArgs{
//				WorkspaceId: defaultWjQD1e.ID(),
//				Manifest: pulumi.Sprintf(`apiVersion: "core/v1"
//
// metadata:
//
//	provider: "%v"
//	version: "v1"
//	identifier: "my_pipeline"
//	name: "source-transform"
//	uuid: "terraformuuid%v"
//	annotations: {}
//	labels: {}
//
// spec:
//
//	inputs:
//	  artifacts: []
//	  parameters:
//	  - name: "execution_maxcompute"
//	    type: "Map"
//	    value:
//	      spec:
//	        endpoint: "http://service.cn.maxcompute.aliyun-inc.com/api"
//	        odpsProject: "test_i****"
//	outputs:
//	  artifacts: []
//	  parameters: []
//	arguments:
//	  artifacts: []
//	  parameters: []
//	dependencies: []
//	initContainers: []
//	sideCarContainers: []
//	pipelines:
//	- apiVersion: "core/v1"
//	  metadata:
//	    provider: "pai"
//	    version: "v1"
//	    identifier: "data_source"
//	    name: "data-source"
//	    uuid: "2ftahdnzcod2rt6u9q"
//	    displayName: "读数据表-1"
//	    annotations: {}
//	    labels: {}
//	  spec:
//	    inputs:
//	      artifacts: []
//	      parameters: []
//	    outputs:
//	      artifacts: []
//	      parameters: []
//	    arguments:
//	      artifacts: []
//	      parameters:
//	      - name: "inputTableName"
//	        value: "pai_online_project.wumai_data"
//	      - name: "execution"
//	        from: "{{inputs.parameters.execution_maxcompute}}"
//	    dependencies: []
//	    initContainers: []
//	    sideCarContainers: []
//	    pipelines: []
//	    volumes: []
//	- apiVersion: "core/v1"
//	  metadata:
//	    provider: "pai"
//	    version: "v1"
//	    identifier: "type_transform"
//	    name: "type-transform"
//	    uuid: "gacnnnl4ksvbabfh6l"
//	    displayName: "类型转换-1"
//	    annotations: {}
//	    labels: {}
//	  spec:
//	    inputs:
//	      artifacts: []
//	      parameters: []
//	    outputs:
//	      artifacts: []
//	      parameters: []
//	    arguments:
//	      artifacts:
//	      - name: "inputTable"
//	        from: "{{pipelines.data_source.outputs.artifacts.outputTable}}"
//	      parameters:
//	      - name: "cols_to_double"
//	        value: "time,hour,pm2,pm10,so2,co,no2"
//	      - name: "execution"
//	        from: "{{inputs.parameters.execution_maxcompute}}"
//	    dependencies:
//	    - "data_source"
//	    initContainers: []
//	    sideCarContainers: []
//	    pipelines: []
//	    volumes: []
//	volumes: []
//
// `, _default.Id, defaultInteger.Result),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Pai Flow Pipeline can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:pai/flowPipeline:FlowPipeline example <id>
// ```
type FlowPipeline struct {
	pulumi.CustomResourceState

	// The creation time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The pipeline definition. For more information, see the sample pipeline definition).
	Manifest pulumi.StringOutput `pulumi:"manifest"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewFlowPipeline registers a new resource with the given unique name, arguments, and options.
func NewFlowPipeline(ctx *pulumi.Context,
	name string, args *FlowPipelineArgs, opts ...pulumi.ResourceOption) (*FlowPipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Manifest == nil {
		return nil, errors.New("invalid value for required argument 'Manifest'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlowPipeline
	err := ctx.RegisterResource("alicloud:pai/flowPipeline:FlowPipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowPipeline gets an existing FlowPipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowPipelineState, opts ...pulumi.ResourceOption) (*FlowPipeline, error) {
	var resource FlowPipeline
	err := ctx.ReadResource("alicloud:pai/flowPipeline:FlowPipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowPipeline resources.
type flowPipelineState struct {
	// The creation time of the resource.
	CreateTime *string `pulumi:"createTime"`
	// The pipeline definition. For more information, see the sample pipeline definition).
	Manifest *string `pulumi:"manifest"`
	// The ID of the workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type FlowPipelineState struct {
	// The creation time of the resource.
	CreateTime pulumi.StringPtrInput
	// The pipeline definition. For more information, see the sample pipeline definition).
	Manifest pulumi.StringPtrInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringPtrInput
}

func (FlowPipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowPipelineState)(nil)).Elem()
}

type flowPipelineArgs struct {
	// The pipeline definition. For more information, see the sample pipeline definition).
	Manifest string `pulumi:"manifest"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a FlowPipeline resource.
type FlowPipelineArgs struct {
	// The pipeline definition. For more information, see the sample pipeline definition).
	Manifest pulumi.StringInput
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput
}

func (FlowPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowPipelineArgs)(nil)).Elem()
}

type FlowPipelineInput interface {
	pulumi.Input

	ToFlowPipelineOutput() FlowPipelineOutput
	ToFlowPipelineOutputWithContext(ctx context.Context) FlowPipelineOutput
}

func (*FlowPipeline) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPipeline)(nil)).Elem()
}

func (i *FlowPipeline) ToFlowPipelineOutput() FlowPipelineOutput {
	return i.ToFlowPipelineOutputWithContext(context.Background())
}

func (i *FlowPipeline) ToFlowPipelineOutputWithContext(ctx context.Context) FlowPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPipelineOutput)
}

// FlowPipelineArrayInput is an input type that accepts FlowPipelineArray and FlowPipelineArrayOutput values.
// You can construct a concrete instance of `FlowPipelineArrayInput` via:
//
//	FlowPipelineArray{ FlowPipelineArgs{...} }
type FlowPipelineArrayInput interface {
	pulumi.Input

	ToFlowPipelineArrayOutput() FlowPipelineArrayOutput
	ToFlowPipelineArrayOutputWithContext(context.Context) FlowPipelineArrayOutput
}

type FlowPipelineArray []FlowPipelineInput

func (FlowPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlowPipeline)(nil)).Elem()
}

func (i FlowPipelineArray) ToFlowPipelineArrayOutput() FlowPipelineArrayOutput {
	return i.ToFlowPipelineArrayOutputWithContext(context.Background())
}

func (i FlowPipelineArray) ToFlowPipelineArrayOutputWithContext(ctx context.Context) FlowPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPipelineArrayOutput)
}

// FlowPipelineMapInput is an input type that accepts FlowPipelineMap and FlowPipelineMapOutput values.
// You can construct a concrete instance of `FlowPipelineMapInput` via:
//
//	FlowPipelineMap{ "key": FlowPipelineArgs{...} }
type FlowPipelineMapInput interface {
	pulumi.Input

	ToFlowPipelineMapOutput() FlowPipelineMapOutput
	ToFlowPipelineMapOutputWithContext(context.Context) FlowPipelineMapOutput
}

type FlowPipelineMap map[string]FlowPipelineInput

func (FlowPipelineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlowPipeline)(nil)).Elem()
}

func (i FlowPipelineMap) ToFlowPipelineMapOutput() FlowPipelineMapOutput {
	return i.ToFlowPipelineMapOutputWithContext(context.Background())
}

func (i FlowPipelineMap) ToFlowPipelineMapOutputWithContext(ctx context.Context) FlowPipelineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPipelineMapOutput)
}

type FlowPipelineOutput struct{ *pulumi.OutputState }

func (FlowPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPipeline)(nil)).Elem()
}

func (o FlowPipelineOutput) ToFlowPipelineOutput() FlowPipelineOutput {
	return o
}

func (o FlowPipelineOutput) ToFlowPipelineOutputWithContext(ctx context.Context) FlowPipelineOutput {
	return o
}

// The creation time of the resource.
func (o FlowPipelineOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowPipeline) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The pipeline definition. For more information, see the sample pipeline definition).
func (o FlowPipelineOutput) Manifest() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowPipeline) pulumi.StringOutput { return v.Manifest }).(pulumi.StringOutput)
}

// The ID of the workspace.
func (o FlowPipelineOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowPipeline) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type FlowPipelineArrayOutput struct{ *pulumi.OutputState }

func (FlowPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlowPipeline)(nil)).Elem()
}

func (o FlowPipelineArrayOutput) ToFlowPipelineArrayOutput() FlowPipelineArrayOutput {
	return o
}

func (o FlowPipelineArrayOutput) ToFlowPipelineArrayOutputWithContext(ctx context.Context) FlowPipelineArrayOutput {
	return o
}

func (o FlowPipelineArrayOutput) Index(i pulumi.IntInput) FlowPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlowPipeline {
		return vs[0].([]*FlowPipeline)[vs[1].(int)]
	}).(FlowPipelineOutput)
}

type FlowPipelineMapOutput struct{ *pulumi.OutputState }

func (FlowPipelineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlowPipeline)(nil)).Elem()
}

func (o FlowPipelineMapOutput) ToFlowPipelineMapOutput() FlowPipelineMapOutput {
	return o
}

func (o FlowPipelineMapOutput) ToFlowPipelineMapOutputWithContext(ctx context.Context) FlowPipelineMapOutput {
	return o
}

func (o FlowPipelineMapOutput) MapIndex(k pulumi.StringInput) FlowPipelineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlowPipeline {
		return vs[0].(map[string]*FlowPipeline)[vs[1].(string)]
	}).(FlowPipelineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPipelineInput)(nil)).Elem(), &FlowPipeline{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPipelineArrayInput)(nil)).Elem(), FlowPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPipelineMapInput)(nil)).Elem(), FlowPipelineMap{})
	pulumi.RegisterOutputType(FlowPipelineOutput{})
	pulumi.RegisterOutputType(FlowPipelineArrayOutput{})
	pulumi.RegisterOutputType(FlowPipelineMapOutput{})
}
