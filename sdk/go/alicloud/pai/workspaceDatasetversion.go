// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a PAI Workspace Datasetversion resource.
//
// For information about PAI Workspace Dataset Version and how to use it, see [What is Dataset Version](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateDatasetVersion).
// > **NOTE:** Available since v1.236.0.
//
// ## Import
//
// PAI Workspace Datasetversion can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:pai/workspaceDatasetversion:WorkspaceDatasetversion example <dataset_id>:<version_name>
// ```
type WorkspaceDatasetversion struct {
	pulumi.CustomResourceState

	// Update time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Data count.
	DataCount pulumi.IntPtrOutput `pulumi:"dataCount"`
	// Data size.
	DataSize pulumi.IntPtrOutput `pulumi:"dataSize"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringOutput `pulumi:"dataSourceType"`
	// The first ID of the resource
	DatasetId pulumi.StringOutput `pulumi:"datasetId"`
	// Description of dataset version.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The tag of the resource See `labels` below.
	Labels WorkspaceDatasetversionLabelArrayOutput `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrOutput `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringOutput `pulumi:"property"`
	// The data source ID.
	SourceId pulumi.StringPtrOutput `pulumi:"sourceId"`
	// The data source type. The default value is USER.
	SourceType pulumi.StringPtrOutput `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// The name of the resource
	VersionName pulumi.StringOutput `pulumi:"versionName"`
}

// NewWorkspaceDatasetversion registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceDatasetversion(ctx *pulumi.Context,
	name string, args *WorkspaceDatasetversionArgs, opts ...pulumi.ResourceOption) (*WorkspaceDatasetversion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataSourceType == nil {
		return nil, errors.New("invalid value for required argument 'DataSourceType'")
	}
	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.Property == nil {
		return nil, errors.New("invalid value for required argument 'Property'")
	}
	if args.Uri == nil {
		return nil, errors.New("invalid value for required argument 'Uri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceDatasetversion
	err := ctx.RegisterResource("alicloud:pai/workspaceDatasetversion:WorkspaceDatasetversion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceDatasetversion gets an existing WorkspaceDatasetversion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceDatasetversion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceDatasetversionState, opts ...pulumi.ResourceOption) (*WorkspaceDatasetversion, error) {
	var resource WorkspaceDatasetversion
	err := ctx.ReadResource("alicloud:pai/workspaceDatasetversion:WorkspaceDatasetversion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceDatasetversion resources.
type workspaceDatasetversionState struct {
	// Update time.
	CreateTime *string `pulumi:"createTime"`
	// Data count.
	DataCount *int `pulumi:"dataCount"`
	// Data size.
	DataSize *int `pulumi:"dataSize"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType *string `pulumi:"dataSourceType"`
	// The first ID of the resource
	DatasetId *string `pulumi:"datasetId"`
	// Description of dataset version.
	Description *string `pulumi:"description"`
	// The tag of the resource See `labels` below.
	Labels []WorkspaceDatasetversionLabel `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options *string `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property *string `pulumi:"property"`
	// The data source ID.
	SourceId *string `pulumi:"sourceId"`
	// The data source type. The default value is USER.
	SourceType *string `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri *string `pulumi:"uri"`
	// The name of the resource
	VersionName *string `pulumi:"versionName"`
}

type WorkspaceDatasetversionState struct {
	// Update time.
	CreateTime pulumi.StringPtrInput
	// Data count.
	DataCount pulumi.IntPtrInput
	// Data size.
	DataSize pulumi.IntPtrInput
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringPtrInput
	// The first ID of the resource
	DatasetId pulumi.StringPtrInput
	// Description of dataset version.
	Description pulumi.StringPtrInput
	// The tag of the resource See `labels` below.
	Labels WorkspaceDatasetversionLabelArrayInput
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrInput
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringPtrInput
	// The data source ID.
	SourceId pulumi.StringPtrInput
	// The data source type. The default value is USER.
	SourceType pulumi.StringPtrInput
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringPtrInput
	// The name of the resource
	VersionName pulumi.StringPtrInput
}

func (WorkspaceDatasetversionState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceDatasetversionState)(nil)).Elem()
}

type workspaceDatasetversionArgs struct {
	// Data count.
	DataCount *int `pulumi:"dataCount"`
	// Data size.
	DataSize *int `pulumi:"dataSize"`
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType string `pulumi:"dataSourceType"`
	// The first ID of the resource
	DatasetId string `pulumi:"datasetId"`
	// Description of dataset version.
	Description *string `pulumi:"description"`
	// The tag of the resource See `labels` below.
	Labels []WorkspaceDatasetversionLabel `pulumi:"labels"`
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options *string `pulumi:"options"`
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property string `pulumi:"property"`
	// The data source ID.
	SourceId *string `pulumi:"sourceId"`
	// The data source type. The default value is USER.
	SourceType *string `pulumi:"sourceType"`
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri string `pulumi:"uri"`
}

// The set of arguments for constructing a WorkspaceDatasetversion resource.
type WorkspaceDatasetversionArgs struct {
	// Data count.
	DataCount pulumi.IntPtrInput
	// Data size.
	DataSize pulumi.IntPtrInput
	// The data source type. The following values are supported:
	// - OSS: Alibaba Cloud Object Storage (OSS).
	// - NAS: Alibaba cloud file storage (NAS).
	DataSourceType pulumi.StringInput
	// The first ID of the resource
	DatasetId pulumi.StringInput
	// Description of dataset version.
	Description pulumi.StringPtrInput
	// The tag of the resource See `labels` below.
	Labels WorkspaceDatasetversionLabelArrayInput
	// The extended field, which is of the JsonString type.
	//
	// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
	Options pulumi.StringPtrInput
	// The properties of the dataset. The following values are supported:
	// - FILE: FILE.
	// - DIRECTORY: folder.
	Property pulumi.StringInput
	// The data source ID.
	SourceId pulumi.StringPtrInput
	// The data source type. The default value is USER.
	SourceType pulumi.StringPtrInput
	// The Uri configuration sample is as follows:
	// - The data source type is OSS:'oss:// bucket.endpoint/object'
	// - The data source type is NAS:
	//
	// The general NAS format is: 'nas://.region/subpath/to/dir/';
	//
	// CPFS1.0:'nas://.region/subpath/to/dir /';
	//
	// CPFS2.0:'nas://.region//'.
	//
	// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
	Uri pulumi.StringInput
}

func (WorkspaceDatasetversionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceDatasetversionArgs)(nil)).Elem()
}

type WorkspaceDatasetversionInput interface {
	pulumi.Input

	ToWorkspaceDatasetversionOutput() WorkspaceDatasetversionOutput
	ToWorkspaceDatasetversionOutputWithContext(ctx context.Context) WorkspaceDatasetversionOutput
}

func (*WorkspaceDatasetversion) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceDatasetversion)(nil)).Elem()
}

func (i *WorkspaceDatasetversion) ToWorkspaceDatasetversionOutput() WorkspaceDatasetversionOutput {
	return i.ToWorkspaceDatasetversionOutputWithContext(context.Background())
}

func (i *WorkspaceDatasetversion) ToWorkspaceDatasetversionOutputWithContext(ctx context.Context) WorkspaceDatasetversionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetversionOutput)
}

// WorkspaceDatasetversionArrayInput is an input type that accepts WorkspaceDatasetversionArray and WorkspaceDatasetversionArrayOutput values.
// You can construct a concrete instance of `WorkspaceDatasetversionArrayInput` via:
//
//	WorkspaceDatasetversionArray{ WorkspaceDatasetversionArgs{...} }
type WorkspaceDatasetversionArrayInput interface {
	pulumi.Input

	ToWorkspaceDatasetversionArrayOutput() WorkspaceDatasetversionArrayOutput
	ToWorkspaceDatasetversionArrayOutputWithContext(context.Context) WorkspaceDatasetversionArrayOutput
}

type WorkspaceDatasetversionArray []WorkspaceDatasetversionInput

func (WorkspaceDatasetversionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceDatasetversion)(nil)).Elem()
}

func (i WorkspaceDatasetversionArray) ToWorkspaceDatasetversionArrayOutput() WorkspaceDatasetversionArrayOutput {
	return i.ToWorkspaceDatasetversionArrayOutputWithContext(context.Background())
}

func (i WorkspaceDatasetversionArray) ToWorkspaceDatasetversionArrayOutputWithContext(ctx context.Context) WorkspaceDatasetversionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetversionArrayOutput)
}

// WorkspaceDatasetversionMapInput is an input type that accepts WorkspaceDatasetversionMap and WorkspaceDatasetversionMapOutput values.
// You can construct a concrete instance of `WorkspaceDatasetversionMapInput` via:
//
//	WorkspaceDatasetversionMap{ "key": WorkspaceDatasetversionArgs{...} }
type WorkspaceDatasetversionMapInput interface {
	pulumi.Input

	ToWorkspaceDatasetversionMapOutput() WorkspaceDatasetversionMapOutput
	ToWorkspaceDatasetversionMapOutputWithContext(context.Context) WorkspaceDatasetversionMapOutput
}

type WorkspaceDatasetversionMap map[string]WorkspaceDatasetversionInput

func (WorkspaceDatasetversionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceDatasetversion)(nil)).Elem()
}

func (i WorkspaceDatasetversionMap) ToWorkspaceDatasetversionMapOutput() WorkspaceDatasetversionMapOutput {
	return i.ToWorkspaceDatasetversionMapOutputWithContext(context.Background())
}

func (i WorkspaceDatasetversionMap) ToWorkspaceDatasetversionMapOutputWithContext(ctx context.Context) WorkspaceDatasetversionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceDatasetversionMapOutput)
}

type WorkspaceDatasetversionOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetversionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceDatasetversion)(nil)).Elem()
}

func (o WorkspaceDatasetversionOutput) ToWorkspaceDatasetversionOutput() WorkspaceDatasetversionOutput {
	return o
}

func (o WorkspaceDatasetversionOutput) ToWorkspaceDatasetversionOutputWithContext(ctx context.Context) WorkspaceDatasetversionOutput {
	return o
}

// Update time.
func (o WorkspaceDatasetversionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Data count.
func (o WorkspaceDatasetversionOutput) DataCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.IntPtrOutput { return v.DataCount }).(pulumi.IntPtrOutput)
}

// Data size.
func (o WorkspaceDatasetversionOutput) DataSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.IntPtrOutput { return v.DataSize }).(pulumi.IntPtrOutput)
}

// The data source type. The following values are supported:
// - OSS: Alibaba Cloud Object Storage (OSS).
// - NAS: Alibaba cloud file storage (NAS).
func (o WorkspaceDatasetversionOutput) DataSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.DataSourceType }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o WorkspaceDatasetversionOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

// Description of dataset version.
func (o WorkspaceDatasetversionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The tag of the resource See `labels` below.
func (o WorkspaceDatasetversionOutput) Labels() WorkspaceDatasetversionLabelArrayOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) WorkspaceDatasetversionLabelArrayOutput { return v.Labels }).(WorkspaceDatasetversionLabelArrayOutput)
}

// The extended field, which is of the JsonString type.
//
// When DLC uses a dataset, you can specify the default Mount path for the dataset by configuring the mountPath field.
func (o WorkspaceDatasetversionOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringPtrOutput { return v.Options }).(pulumi.StringPtrOutput)
}

// The properties of the dataset. The following values are supported:
// - FILE: FILE.
// - DIRECTORY: folder.
func (o WorkspaceDatasetversionOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.Property }).(pulumi.StringOutput)
}

// The data source ID.
func (o WorkspaceDatasetversionOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringPtrOutput { return v.SourceId }).(pulumi.StringPtrOutput)
}

// The data source type. The default value is USER.
func (o WorkspaceDatasetversionOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringPtrOutput { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The Uri configuration sample is as follows:
// - The data source type is OSS:'oss:// bucket.endpoint/object'
// - The data source type is NAS:
//
// The general NAS format is: 'nas://.region/subpath/to/dir/';
//
// CPFS1.0:'nas://.region/subpath/to/dir /';
//
// CPFS2.0:'nas://.region//'.
//
// CPFS1.0 and CPFS2.0 are distinguished by the format of fsid: CPFS1.0 is cpfs-;CPFS2.0 is cpfs-.
func (o WorkspaceDatasetversionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// The name of the resource
func (o WorkspaceDatasetversionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceDatasetversion) pulumi.StringOutput { return v.VersionName }).(pulumi.StringOutput)
}

type WorkspaceDatasetversionArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetversionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceDatasetversion)(nil)).Elem()
}

func (o WorkspaceDatasetversionArrayOutput) ToWorkspaceDatasetversionArrayOutput() WorkspaceDatasetversionArrayOutput {
	return o
}

func (o WorkspaceDatasetversionArrayOutput) ToWorkspaceDatasetversionArrayOutputWithContext(ctx context.Context) WorkspaceDatasetversionArrayOutput {
	return o
}

func (o WorkspaceDatasetversionArrayOutput) Index(i pulumi.IntInput) WorkspaceDatasetversionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceDatasetversion {
		return vs[0].([]*WorkspaceDatasetversion)[vs[1].(int)]
	}).(WorkspaceDatasetversionOutput)
}

type WorkspaceDatasetversionMapOutput struct{ *pulumi.OutputState }

func (WorkspaceDatasetversionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceDatasetversion)(nil)).Elem()
}

func (o WorkspaceDatasetversionMapOutput) ToWorkspaceDatasetversionMapOutput() WorkspaceDatasetversionMapOutput {
	return o
}

func (o WorkspaceDatasetversionMapOutput) ToWorkspaceDatasetversionMapOutputWithContext(ctx context.Context) WorkspaceDatasetversionMapOutput {
	return o
}

func (o WorkspaceDatasetversionMapOutput) MapIndex(k pulumi.StringInput) WorkspaceDatasetversionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceDatasetversion {
		return vs[0].(map[string]*WorkspaceDatasetversion)[vs[1].(string)]
	}).(WorkspaceDatasetversionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetversionInput)(nil)).Elem(), &WorkspaceDatasetversion{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetversionArrayInput)(nil)).Elem(), WorkspaceDatasetversionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceDatasetversionMapInput)(nil)).Elem(), WorkspaceDatasetversionMap{})
	pulumi.RegisterOutputType(WorkspaceDatasetversionOutput{})
	pulumi.RegisterOutputType(WorkspaceDatasetversionArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceDatasetversionMapOutput{})
}
