// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cloud Sso Scim Server Credentials of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.138.0+.
//
// > **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudsso"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := cloudsso.GetScimServerCredentials(ctx, &cloudsso.GetScimServerCredentialsArgs{
// 			DirectoryId: "example_value",
// 			Ids: []string{
// 				"example_value-1",
// 				"example_value-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("cloudSsoScimServerCredentialId1", ids.Credentials[0].Id)
// 		return nil
// 	})
// }
// ```
func GetScimServerCredentials(ctx *pulumi.Context, args *GetScimServerCredentialsArgs, opts ...pulumi.InvokeOption) (*GetScimServerCredentialsResult, error) {
	var rv GetScimServerCredentialsResult
	err := ctx.Invoke("alicloud:cloudsso/getScimServerCredentials:getScimServerCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScimServerCredentials.
type GetScimServerCredentialsArgs struct {
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// A list of SCIM Server Credential IDs.
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The Status of the resource. Valid values: `Disabled`, `Enabled`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getScimServerCredentials.
type GetScimServerCredentialsResult struct {
	Credentials []GetScimServerCredentialsCredential `pulumi:"credentials"`
	DirectoryId string                               `pulumi:"directoryId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	Status     *string  `pulumi:"status"`
}

func GetScimServerCredentialsOutput(ctx *pulumi.Context, args GetScimServerCredentialsOutputArgs, opts ...pulumi.InvokeOption) GetScimServerCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScimServerCredentialsResult, error) {
			args := v.(GetScimServerCredentialsArgs)
			r, err := GetScimServerCredentials(ctx, &args, opts...)
			var s GetScimServerCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScimServerCredentialsResultOutput)
}

// A collection of arguments for invoking getScimServerCredentials.
type GetScimServerCredentialsOutputArgs struct {
	// The ID of the Directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// A list of SCIM Server Credential IDs.
	Ids        pulumi.StringArrayInput `pulumi:"ids"`
	OutputFile pulumi.StringPtrInput   `pulumi:"outputFile"`
	// The Status of the resource. Valid values: `Disabled`, `Enabled`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetScimServerCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScimServerCredentialsArgs)(nil)).Elem()
}

// A collection of values returned by getScimServerCredentials.
type GetScimServerCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetScimServerCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScimServerCredentialsResult)(nil)).Elem()
}

func (o GetScimServerCredentialsResultOutput) ToGetScimServerCredentialsResultOutput() GetScimServerCredentialsResultOutput {
	return o
}

func (o GetScimServerCredentialsResultOutput) ToGetScimServerCredentialsResultOutputWithContext(ctx context.Context) GetScimServerCredentialsResultOutput {
	return o
}

func (o GetScimServerCredentialsResultOutput) Credentials() GetScimServerCredentialsCredentialArrayOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) []GetScimServerCredentialsCredential { return v.Credentials }).(GetScimServerCredentialsCredentialArrayOutput)
}

func (o GetScimServerCredentialsResultOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetScimServerCredentialsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScimServerCredentialsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetScimServerCredentialsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetScimServerCredentialsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScimServerCredentialsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScimServerCredentialsResultOutput{})
}
