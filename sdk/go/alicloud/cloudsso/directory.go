// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud SSO Directory resource.
//
// For information about Cloud SSO Directory and how to use it, see [What is Directory](https://www.alibabacloud.com/help/en/cloudsso/latest/api-cloudsso-2021-05-15-createdirectory).
//
// > **NOTE:** Available since v1.135.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudsso"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := cloudsso.NewDirectory(ctx, "default", &cloudsso.DirectoryArgs{
//				DirectoryName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud SSO Directory can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudsso/directory:Directory example <id>
// ```
type Directory struct {
	pulumi.CustomResourceState

	// CreateTime
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Directory Global Acceleration activation status
	DirectoryGlobalAccessStatus pulumi.StringOutput `pulumi:"directoryGlobalAccessStatus"`
	// DirectoryName
	DirectoryName pulumi.StringPtrOutput `pulumi:"directoryName"`
	// Login preferences See `loginPreference` below.
	LoginPreference DirectoryLoginPreferenceOutput `pulumi:"loginPreference"`
	// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
	MfaAuthenticationSettingInfo DirectoryMfaAuthenticationSettingInfoOutput `pulumi:"mfaAuthenticationSettingInfo"`
	// MFA Authentication Status
	MfaAuthenticationStatus pulumi.StringOutput `pulumi:"mfaAuthenticationStatus"`
	// Password policy See `passwordPolicy` below.
	PasswordPolicy DirectoryPasswordPolicyOutput `pulumi:"passwordPolicy"`
	// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
	SamlIdentityProviderConfiguration DirectorySamlIdentityProviderConfigurationOutput `pulumi:"samlIdentityProviderConfiguration"`
	// SP information. See `samlServiceProvider` below.
	SamlServiceProvider DirectorySamlServiceProviderOutput `pulumi:"samlServiceProvider"`
	// SCIM Synchronization Status
	ScimSynchronizationStatus pulumi.StringOutput `pulumi:"scimSynchronizationStatus"`
	// User Provisioning configuration See `userProvisioningConfiguration` below.
	UserProvisioningConfiguration DirectoryUserProvisioningConfigurationOutput `pulumi:"userProvisioningConfiguration"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil {
		args = &DirectoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Directory
	err := ctx.RegisterResource("alicloud:cloudsso/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("alicloud:cloudsso/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	// CreateTime
	CreateTime *string `pulumi:"createTime"`
	// Directory Global Acceleration activation status
	DirectoryGlobalAccessStatus *string `pulumi:"directoryGlobalAccessStatus"`
	// DirectoryName
	DirectoryName *string `pulumi:"directoryName"`
	// Login preferences See `loginPreference` below.
	LoginPreference *DirectoryLoginPreference `pulumi:"loginPreference"`
	// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
	MfaAuthenticationSettingInfo *DirectoryMfaAuthenticationSettingInfo `pulumi:"mfaAuthenticationSettingInfo"`
	// MFA Authentication Status
	MfaAuthenticationStatus *string `pulumi:"mfaAuthenticationStatus"`
	// Password policy See `passwordPolicy` below.
	PasswordPolicy *DirectoryPasswordPolicy `pulumi:"passwordPolicy"`
	// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
	SamlIdentityProviderConfiguration *DirectorySamlIdentityProviderConfiguration `pulumi:"samlIdentityProviderConfiguration"`
	// SP information. See `samlServiceProvider` below.
	SamlServiceProvider *DirectorySamlServiceProvider `pulumi:"samlServiceProvider"`
	// SCIM Synchronization Status
	ScimSynchronizationStatus *string `pulumi:"scimSynchronizationStatus"`
	// User Provisioning configuration See `userProvisioningConfiguration` below.
	UserProvisioningConfiguration *DirectoryUserProvisioningConfiguration `pulumi:"userProvisioningConfiguration"`
}

type DirectoryState struct {
	// CreateTime
	CreateTime pulumi.StringPtrInput
	// Directory Global Acceleration activation status
	DirectoryGlobalAccessStatus pulumi.StringPtrInput
	// DirectoryName
	DirectoryName pulumi.StringPtrInput
	// Login preferences See `loginPreference` below.
	LoginPreference DirectoryLoginPreferencePtrInput
	// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
	MfaAuthenticationSettingInfo DirectoryMfaAuthenticationSettingInfoPtrInput
	// MFA Authentication Status
	MfaAuthenticationStatus pulumi.StringPtrInput
	// Password policy See `passwordPolicy` below.
	PasswordPolicy DirectoryPasswordPolicyPtrInput
	// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
	SamlIdentityProviderConfiguration DirectorySamlIdentityProviderConfigurationPtrInput
	// SP information. See `samlServiceProvider` below.
	SamlServiceProvider DirectorySamlServiceProviderPtrInput
	// SCIM Synchronization Status
	ScimSynchronizationStatus pulumi.StringPtrInput
	// User Provisioning configuration See `userProvisioningConfiguration` below.
	UserProvisioningConfiguration DirectoryUserProvisioningConfigurationPtrInput
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	// Directory Global Acceleration activation status
	DirectoryGlobalAccessStatus *string `pulumi:"directoryGlobalAccessStatus"`
	// DirectoryName
	DirectoryName *string `pulumi:"directoryName"`
	// Login preferences See `loginPreference` below.
	LoginPreference *DirectoryLoginPreference `pulumi:"loginPreference"`
	// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
	MfaAuthenticationSettingInfo *DirectoryMfaAuthenticationSettingInfo `pulumi:"mfaAuthenticationSettingInfo"`
	// MFA Authentication Status
	MfaAuthenticationStatus *string `pulumi:"mfaAuthenticationStatus"`
	// Password policy See `passwordPolicy` below.
	PasswordPolicy *DirectoryPasswordPolicy `pulumi:"passwordPolicy"`
	// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
	SamlIdentityProviderConfiguration *DirectorySamlIdentityProviderConfiguration `pulumi:"samlIdentityProviderConfiguration"`
	// SP information. See `samlServiceProvider` below.
	SamlServiceProvider *DirectorySamlServiceProvider `pulumi:"samlServiceProvider"`
	// SCIM Synchronization Status
	ScimSynchronizationStatus *string `pulumi:"scimSynchronizationStatus"`
	// User Provisioning configuration See `userProvisioningConfiguration` below.
	UserProvisioningConfiguration *DirectoryUserProvisioningConfiguration `pulumi:"userProvisioningConfiguration"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	// Directory Global Acceleration activation status
	DirectoryGlobalAccessStatus pulumi.StringPtrInput
	// DirectoryName
	DirectoryName pulumi.StringPtrInput
	// Login preferences See `loginPreference` below.
	LoginPreference DirectoryLoginPreferencePtrInput
	// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
	MfaAuthenticationSettingInfo DirectoryMfaAuthenticationSettingInfoPtrInput
	// MFA Authentication Status
	MfaAuthenticationStatus pulumi.StringPtrInput
	// Password policy See `passwordPolicy` below.
	PasswordPolicy DirectoryPasswordPolicyPtrInput
	// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
	SamlIdentityProviderConfiguration DirectorySamlIdentityProviderConfigurationPtrInput
	// SP information. See `samlServiceProvider` below.
	SamlServiceProvider DirectorySamlServiceProviderPtrInput
	// SCIM Synchronization Status
	ScimSynchronizationStatus pulumi.StringPtrInput
	// User Provisioning configuration See `userProvisioningConfiguration` below.
	UserProvisioningConfiguration DirectoryUserProvisioningConfigurationPtrInput
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}

type DirectoryInput interface {
	pulumi.Input

	ToDirectoryOutput() DirectoryOutput
	ToDirectoryOutputWithContext(ctx context.Context) DirectoryOutput
}

func (*Directory) ElementType() reflect.Type {
	return reflect.TypeOf((**Directory)(nil)).Elem()
}

func (i *Directory) ToDirectoryOutput() DirectoryOutput {
	return i.ToDirectoryOutputWithContext(context.Background())
}

func (i *Directory) ToDirectoryOutputWithContext(ctx context.Context) DirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryOutput)
}

// DirectoryArrayInput is an input type that accepts DirectoryArray and DirectoryArrayOutput values.
// You can construct a concrete instance of `DirectoryArrayInput` via:
//
//	DirectoryArray{ DirectoryArgs{...} }
type DirectoryArrayInput interface {
	pulumi.Input

	ToDirectoryArrayOutput() DirectoryArrayOutput
	ToDirectoryArrayOutputWithContext(context.Context) DirectoryArrayOutput
}

type DirectoryArray []DirectoryInput

func (DirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Directory)(nil)).Elem()
}

func (i DirectoryArray) ToDirectoryArrayOutput() DirectoryArrayOutput {
	return i.ToDirectoryArrayOutputWithContext(context.Background())
}

func (i DirectoryArray) ToDirectoryArrayOutputWithContext(ctx context.Context) DirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryArrayOutput)
}

// DirectoryMapInput is an input type that accepts DirectoryMap and DirectoryMapOutput values.
// You can construct a concrete instance of `DirectoryMapInput` via:
//
//	DirectoryMap{ "key": DirectoryArgs{...} }
type DirectoryMapInput interface {
	pulumi.Input

	ToDirectoryMapOutput() DirectoryMapOutput
	ToDirectoryMapOutputWithContext(context.Context) DirectoryMapOutput
}

type DirectoryMap map[string]DirectoryInput

func (DirectoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Directory)(nil)).Elem()
}

func (i DirectoryMap) ToDirectoryMapOutput() DirectoryMapOutput {
	return i.ToDirectoryMapOutputWithContext(context.Background())
}

func (i DirectoryMap) ToDirectoryMapOutputWithContext(ctx context.Context) DirectoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryMapOutput)
}

type DirectoryOutput struct{ *pulumi.OutputState }

func (DirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Directory)(nil)).Elem()
}

func (o DirectoryOutput) ToDirectoryOutput() DirectoryOutput {
	return o
}

func (o DirectoryOutput) ToDirectoryOutputWithContext(ctx context.Context) DirectoryOutput {
	return o
}

// CreateTime
func (o DirectoryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Directory) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Directory Global Acceleration activation status
func (o DirectoryOutput) DirectoryGlobalAccessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Directory) pulumi.StringOutput { return v.DirectoryGlobalAccessStatus }).(pulumi.StringOutput)
}

// DirectoryName
func (o DirectoryOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Directory) pulumi.StringPtrOutput { return v.DirectoryName }).(pulumi.StringPtrOutput)
}

// Login preferences See `loginPreference` below.
func (o DirectoryOutput) LoginPreference() DirectoryLoginPreferenceOutput {
	return o.ApplyT(func(v *Directory) DirectoryLoginPreferenceOutput { return v.LoginPreference }).(DirectoryLoginPreferenceOutput)
}

// Global MFA verification configuration. See `mfaAuthenticationSettingInfo` below.
func (o DirectoryOutput) MfaAuthenticationSettingInfo() DirectoryMfaAuthenticationSettingInfoOutput {
	return o.ApplyT(func(v *Directory) DirectoryMfaAuthenticationSettingInfoOutput { return v.MfaAuthenticationSettingInfo }).(DirectoryMfaAuthenticationSettingInfoOutput)
}

// MFA Authentication Status
func (o DirectoryOutput) MfaAuthenticationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Directory) pulumi.StringOutput { return v.MfaAuthenticationStatus }).(pulumi.StringOutput)
}

// Password policy See `passwordPolicy` below.
func (o DirectoryOutput) PasswordPolicy() DirectoryPasswordPolicyOutput {
	return o.ApplyT(func(v *Directory) DirectoryPasswordPolicyOutput { return v.PasswordPolicy }).(DirectoryPasswordPolicyOutput)
}

// Identity Provider (IDP) See `samlIdentityProviderConfiguration` below.
func (o DirectoryOutput) SamlIdentityProviderConfiguration() DirectorySamlIdentityProviderConfigurationOutput {
	return o.ApplyT(func(v *Directory) DirectorySamlIdentityProviderConfigurationOutput {
		return v.SamlIdentityProviderConfiguration
	}).(DirectorySamlIdentityProviderConfigurationOutput)
}

// SP information. See `samlServiceProvider` below.
func (o DirectoryOutput) SamlServiceProvider() DirectorySamlServiceProviderOutput {
	return o.ApplyT(func(v *Directory) DirectorySamlServiceProviderOutput { return v.SamlServiceProvider }).(DirectorySamlServiceProviderOutput)
}

// SCIM Synchronization Status
func (o DirectoryOutput) ScimSynchronizationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Directory) pulumi.StringOutput { return v.ScimSynchronizationStatus }).(pulumi.StringOutput)
}

// User Provisioning configuration See `userProvisioningConfiguration` below.
func (o DirectoryOutput) UserProvisioningConfiguration() DirectoryUserProvisioningConfigurationOutput {
	return o.ApplyT(func(v *Directory) DirectoryUserProvisioningConfigurationOutput {
		return v.UserProvisioningConfiguration
	}).(DirectoryUserProvisioningConfigurationOutput)
}

type DirectoryArrayOutput struct{ *pulumi.OutputState }

func (DirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Directory)(nil)).Elem()
}

func (o DirectoryArrayOutput) ToDirectoryArrayOutput() DirectoryArrayOutput {
	return o
}

func (o DirectoryArrayOutput) ToDirectoryArrayOutputWithContext(ctx context.Context) DirectoryArrayOutput {
	return o
}

func (o DirectoryArrayOutput) Index(i pulumi.IntInput) DirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Directory {
		return vs[0].([]*Directory)[vs[1].(int)]
	}).(DirectoryOutput)
}

type DirectoryMapOutput struct{ *pulumi.OutputState }

func (DirectoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Directory)(nil)).Elem()
}

func (o DirectoryMapOutput) ToDirectoryMapOutput() DirectoryMapOutput {
	return o
}

func (o DirectoryMapOutput) ToDirectoryMapOutputWithContext(ctx context.Context) DirectoryMapOutput {
	return o
}

func (o DirectoryMapOutput) MapIndex(k pulumi.StringInput) DirectoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Directory {
		return vs[0].(map[string]*Directory)[vs[1].(string)]
	}).(DirectoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryInput)(nil)).Elem(), &Directory{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryArrayInput)(nil)).Elem(), DirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryMapInput)(nil)).Elem(), DirectoryMap{})
	pulumi.RegisterOutputType(DirectoryOutput{})
	pulumi.RegisterOutputType(DirectoryArrayOutput{})
	pulumi.RegisterOutputType(DirectoryMapOutput{})
}
