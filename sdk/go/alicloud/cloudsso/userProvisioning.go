// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud SSO User Provisioning resource.
//
// RAM user synchronization.
//
// For information about Cloud SSO User Provisioning and how to use it, see [What is User Provisioning](https://next.api.alibabacloud.com/document/cloudsso/2021-05-15/CreateUserProvisioning).
//
// > **NOTE:** Available since v1.260.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudsso"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// _default, err := alicloud.GetAccount(ctx, map[string]interface{}{
// }, nil);
// if err != nil {
// return err
// }
// defaultGetDirectories, err := cloudsso.GetDirectories(ctx, &cloudsso.GetDirectoriesArgs{
// }, nil);
// if err != nil {
// return err
// }
// defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
// Min: 10000,
// Max: 99999,
// })
// if err != nil {
// return err
// }
// var tmp0 float64
// if length > 0 {
// tmp0 = 0
// } else {
// tmp0 = 1
// }
// var defaultDirectory []*cloudsso.Directory
// for index := 0; index < float64(len(defaultGetDirectories.Ids).ApplyT(func(length int) (float64, error) {
// return tmp0, nil
//
//	}).(pulumi.Float64Output)); index++ {
//	    key0 := index
//	    _ := index
//
// __res, err := cloudsso.NewDirectory(ctx, fmt.Sprintf("default-%v", key0), &cloudsso.DirectoryArgs{
// DirectoryName: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// defaultDirectory = append(defaultDirectory, __res)
// }
// var tmp1 *interface{}
// if length > 0 {
// tmp1 = defaultGetDirectories.Ids[0]
// } else {
// tmp1 = std.Concat(ctx, &std.ConcatArgs{
// Input: pulumi.StringArrayArray{
// %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ example.pp:47,12-34),
// []string{
// "",
// },
// },
// }, nil).Result[0]
// }
// directoryId := len(defaultGetDirectories.Ids).ApplyT(func(length int) (*interface{}, error) {
// return &tmp1, nil
// }).(pulumi.Interface{}PtrOutput)
// defaultUser, err := cloudsso.NewUser(ctx, "default", &cloudsso.UserArgs{
// DirectoryId: pulumi.Any(directoryId),
// UserName: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// })
// if err != nil {
// return err
// }
// _, err = cloudsso.NewGroup(ctx, "default", &cloudsso.GroupArgs{
// DirectoryId: pulumi.Any(directoryId),
// GroupName: pulumi.String(name),
// Description: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// _, err = cloudsso.NewUserProvisioning(ctx, "default", &cloudsso.UserProvisioningArgs{
// Description: pulumi.String("description"),
// PrincipalId: defaultUser.UserId,
// TargetType: pulumi.String("RD-Account"),
// DeletionStrategy: pulumi.String("Keep"),
// DuplicationStrategy: pulumi.String("KeepBoth"),
// PrincipalType: pulumi.String("User"),
// TargetId: pulumi.String(_default.Id),
// DirectoryId: defaultUser.DirectoryId,
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Cloud SSO User Provisioning can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudsso/userProvisioning:UserProvisioning example <directory_id>:<user_provisioning_id>
// ```
type UserProvisioning struct {
	pulumi.CustomResourceState

	// The creation time of the synchronization
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The processing policy for users who have been synchronized when deleting synchronization
	DeletionStrategy pulumi.StringOutput `pulumi:"deletionStrategy"`
	// Description of User Synchronization
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the directory to which the synchronization belongs
	DirectoryId pulumi.StringOutput `pulumi:"directoryId"`
	// Processing Policy for Synchronization Conflicts
	DuplicationStrategy pulumi.StringOutput `pulumi:"duplicationStrategy"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalType pulumi.StringOutput `pulumi:"principalType"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the destination associated with the synchronization.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The target type associated with the synchronization
	TargetType pulumi.StringOutput `pulumi:"targetType"`
	// The first ID of the resource
	UserProvisioningId pulumi.StringOutput `pulumi:"userProvisioningId"`
	// User Provisioning statistics
	UserProvisioningStatistics UserProvisioningUserProvisioningStatisticArrayOutput `pulumi:"userProvisioningStatistics"`
}

// NewUserProvisioning registers a new resource with the given unique name, arguments, and options.
func NewUserProvisioning(ctx *pulumi.Context,
	name string, args *UserProvisioningArgs, opts ...pulumi.ResourceOption) (*UserProvisioning, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeletionStrategy == nil {
		return nil, errors.New("invalid value for required argument 'DeletionStrategy'")
	}
	if args.DirectoryId == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryId'")
	}
	if args.DuplicationStrategy == nil {
		return nil, errors.New("invalid value for required argument 'DuplicationStrategy'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserProvisioning
	err := ctx.RegisterResource("alicloud:cloudsso/userProvisioning:UserProvisioning", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserProvisioning gets an existing UserProvisioning resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserProvisioning(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserProvisioningState, opts ...pulumi.ResourceOption) (*UserProvisioning, error) {
	var resource UserProvisioning
	err := ctx.ReadResource("alicloud:cloudsso/userProvisioning:UserProvisioning", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserProvisioning resources.
type userProvisioningState struct {
	// The creation time of the synchronization
	CreateTime *string `pulumi:"createTime"`
	// The processing policy for users who have been synchronized when deleting synchronization
	DeletionStrategy *string `pulumi:"deletionStrategy"`
	// Description of User Synchronization
	Description *string `pulumi:"description"`
	// The ID of the directory to which the synchronization belongs
	DirectoryId *string `pulumi:"directoryId"`
	// Processing Policy for Synchronization Conflicts
	DuplicationStrategy *string `pulumi:"duplicationStrategy"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalId *string `pulumi:"principalId"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalType *string `pulumi:"principalType"`
	// The status of the resource
	Status *string `pulumi:"status"`
	// The ID of the destination associated with the synchronization.
	TargetId *string `pulumi:"targetId"`
	// The target type associated with the synchronization
	TargetType *string `pulumi:"targetType"`
	// The first ID of the resource
	UserProvisioningId *string `pulumi:"userProvisioningId"`
	// User Provisioning statistics
	UserProvisioningStatistics []UserProvisioningUserProvisioningStatistic `pulumi:"userProvisioningStatistics"`
}

type UserProvisioningState struct {
	// The creation time of the synchronization
	CreateTime pulumi.StringPtrInput
	// The processing policy for users who have been synchronized when deleting synchronization
	DeletionStrategy pulumi.StringPtrInput
	// Description of User Synchronization
	Description pulumi.StringPtrInput
	// The ID of the directory to which the synchronization belongs
	DirectoryId pulumi.StringPtrInput
	// Processing Policy for Synchronization Conflicts
	DuplicationStrategy pulumi.StringPtrInput
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalId pulumi.StringPtrInput
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalType pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
	// The ID of the destination associated with the synchronization.
	TargetId pulumi.StringPtrInput
	// The target type associated with the synchronization
	TargetType pulumi.StringPtrInput
	// The first ID of the resource
	UserProvisioningId pulumi.StringPtrInput
	// User Provisioning statistics
	UserProvisioningStatistics UserProvisioningUserProvisioningStatisticArrayInput
}

func (UserProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*userProvisioningState)(nil)).Elem()
}

type userProvisioningArgs struct {
	// The processing policy for users who have been synchronized when deleting synchronization
	DeletionStrategy string `pulumi:"deletionStrategy"`
	// Description of User Synchronization
	Description *string `pulumi:"description"`
	// The ID of the directory to which the synchronization belongs
	DirectoryId string `pulumi:"directoryId"`
	// Processing Policy for Synchronization Conflicts
	DuplicationStrategy string `pulumi:"duplicationStrategy"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalId string `pulumi:"principalId"`
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalType string `pulumi:"principalType"`
	// The ID of the destination associated with the synchronization.
	TargetId string `pulumi:"targetId"`
	// The target type associated with the synchronization
	TargetType string `pulumi:"targetType"`
}

// The set of arguments for constructing a UserProvisioning resource.
type UserProvisioningArgs struct {
	// The processing policy for users who have been synchronized when deleting synchronization
	DeletionStrategy pulumi.StringInput
	// Description of User Synchronization
	Description pulumi.StringPtrInput
	// The ID of the directory to which the synchronization belongs
	DirectoryId pulumi.StringInput
	// Processing Policy for Synchronization Conflicts
	DuplicationStrategy pulumi.StringInput
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalId pulumi.StringInput
	// The ID of the CloudSSO user/group associated with the synchronization.
	PrincipalType pulumi.StringInput
	// The ID of the destination associated with the synchronization.
	TargetId pulumi.StringInput
	// The target type associated with the synchronization
	TargetType pulumi.StringInput
}

func (UserProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userProvisioningArgs)(nil)).Elem()
}

type UserProvisioningInput interface {
	pulumi.Input

	ToUserProvisioningOutput() UserProvisioningOutput
	ToUserProvisioningOutputWithContext(ctx context.Context) UserProvisioningOutput
}

func (*UserProvisioning) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProvisioning)(nil)).Elem()
}

func (i *UserProvisioning) ToUserProvisioningOutput() UserProvisioningOutput {
	return i.ToUserProvisioningOutputWithContext(context.Background())
}

func (i *UserProvisioning) ToUserProvisioningOutputWithContext(ctx context.Context) UserProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProvisioningOutput)
}

// UserProvisioningArrayInput is an input type that accepts UserProvisioningArray and UserProvisioningArrayOutput values.
// You can construct a concrete instance of `UserProvisioningArrayInput` via:
//
//	UserProvisioningArray{ UserProvisioningArgs{...} }
type UserProvisioningArrayInput interface {
	pulumi.Input

	ToUserProvisioningArrayOutput() UserProvisioningArrayOutput
	ToUserProvisioningArrayOutputWithContext(context.Context) UserProvisioningArrayOutput
}

type UserProvisioningArray []UserProvisioningInput

func (UserProvisioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserProvisioning)(nil)).Elem()
}

func (i UserProvisioningArray) ToUserProvisioningArrayOutput() UserProvisioningArrayOutput {
	return i.ToUserProvisioningArrayOutputWithContext(context.Background())
}

func (i UserProvisioningArray) ToUserProvisioningArrayOutputWithContext(ctx context.Context) UserProvisioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProvisioningArrayOutput)
}

// UserProvisioningMapInput is an input type that accepts UserProvisioningMap and UserProvisioningMapOutput values.
// You can construct a concrete instance of `UserProvisioningMapInput` via:
//
//	UserProvisioningMap{ "key": UserProvisioningArgs{...} }
type UserProvisioningMapInput interface {
	pulumi.Input

	ToUserProvisioningMapOutput() UserProvisioningMapOutput
	ToUserProvisioningMapOutputWithContext(context.Context) UserProvisioningMapOutput
}

type UserProvisioningMap map[string]UserProvisioningInput

func (UserProvisioningMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserProvisioning)(nil)).Elem()
}

func (i UserProvisioningMap) ToUserProvisioningMapOutput() UserProvisioningMapOutput {
	return i.ToUserProvisioningMapOutputWithContext(context.Background())
}

func (i UserProvisioningMap) ToUserProvisioningMapOutputWithContext(ctx context.Context) UserProvisioningMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProvisioningMapOutput)
}

type UserProvisioningOutput struct{ *pulumi.OutputState }

func (UserProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProvisioning)(nil)).Elem()
}

func (o UserProvisioningOutput) ToUserProvisioningOutput() UserProvisioningOutput {
	return o
}

func (o UserProvisioningOutput) ToUserProvisioningOutputWithContext(ctx context.Context) UserProvisioningOutput {
	return o
}

// The creation time of the synchronization
func (o UserProvisioningOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The processing policy for users who have been synchronized when deleting synchronization
func (o UserProvisioningOutput) DeletionStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.DeletionStrategy }).(pulumi.StringOutput)
}

// Description of User Synchronization
func (o UserProvisioningOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the directory to which the synchronization belongs
func (o UserProvisioningOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.DirectoryId }).(pulumi.StringOutput)
}

// Processing Policy for Synchronization Conflicts
func (o UserProvisioningOutput) DuplicationStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.DuplicationStrategy }).(pulumi.StringOutput)
}

// The ID of the CloudSSO user/group associated with the synchronization.
func (o UserProvisioningOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.PrincipalId }).(pulumi.StringOutput)
}

// The ID of the CloudSSO user/group associated with the synchronization.
func (o UserProvisioningOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.PrincipalType }).(pulumi.StringOutput)
}

// The status of the resource
func (o UserProvisioningOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The ID of the destination associated with the synchronization.
func (o UserProvisioningOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// The target type associated with the synchronization
func (o UserProvisioningOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.TargetType }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o UserProvisioningOutput) UserProvisioningId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserProvisioning) pulumi.StringOutput { return v.UserProvisioningId }).(pulumi.StringOutput)
}

// User Provisioning statistics
func (o UserProvisioningOutput) UserProvisioningStatistics() UserProvisioningUserProvisioningStatisticArrayOutput {
	return o.ApplyT(func(v *UserProvisioning) UserProvisioningUserProvisioningStatisticArrayOutput {
		return v.UserProvisioningStatistics
	}).(UserProvisioningUserProvisioningStatisticArrayOutput)
}

type UserProvisioningArrayOutput struct{ *pulumi.OutputState }

func (UserProvisioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserProvisioning)(nil)).Elem()
}

func (o UserProvisioningArrayOutput) ToUserProvisioningArrayOutput() UserProvisioningArrayOutput {
	return o
}

func (o UserProvisioningArrayOutput) ToUserProvisioningArrayOutputWithContext(ctx context.Context) UserProvisioningArrayOutput {
	return o
}

func (o UserProvisioningArrayOutput) Index(i pulumi.IntInput) UserProvisioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserProvisioning {
		return vs[0].([]*UserProvisioning)[vs[1].(int)]
	}).(UserProvisioningOutput)
}

type UserProvisioningMapOutput struct{ *pulumi.OutputState }

func (UserProvisioningMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserProvisioning)(nil)).Elem()
}

func (o UserProvisioningMapOutput) ToUserProvisioningMapOutput() UserProvisioningMapOutput {
	return o
}

func (o UserProvisioningMapOutput) ToUserProvisioningMapOutputWithContext(ctx context.Context) UserProvisioningMapOutput {
	return o
}

func (o UserProvisioningMapOutput) MapIndex(k pulumi.StringInput) UserProvisioningOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserProvisioning {
		return vs[0].(map[string]*UserProvisioning)[vs[1].(string)]
	}).(UserProvisioningOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserProvisioningInput)(nil)).Elem(), &UserProvisioning{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProvisioningArrayInput)(nil)).Elem(), UserProvisioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProvisioningMapInput)(nil)).Elem(), UserProvisioningMap{})
	pulumi.RegisterOutputType(UserProvisioningOutput{})
	pulumi.RegisterOutputType(UserProvisioningArrayOutput{})
	pulumi.RegisterOutputType(UserProvisioningMapOutput{})
}
