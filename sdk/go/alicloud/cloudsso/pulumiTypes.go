// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessConfigurationPermissionPolicy struct {
	// The configurations of the inline policy. **NOTE:** If `permissionPolicyType` is set to `Inline`, `permissionPolicyDocument` is required.
	PermissionPolicyDocument *string `pulumi:"permissionPolicyDocument"`
	// The name of the policy.
	PermissionPolicyName string `pulumi:"permissionPolicyName"`
	// The type of the policy. Valid values: `System`, `Inline`.
	PermissionPolicyType string `pulumi:"permissionPolicyType"`
}

// AccessConfigurationPermissionPolicyInput is an input type that accepts AccessConfigurationPermissionPolicyArgs and AccessConfigurationPermissionPolicyOutput values.
// You can construct a concrete instance of `AccessConfigurationPermissionPolicyInput` via:
//
//	AccessConfigurationPermissionPolicyArgs{...}
type AccessConfigurationPermissionPolicyInput interface {
	pulumi.Input

	ToAccessConfigurationPermissionPolicyOutput() AccessConfigurationPermissionPolicyOutput
	ToAccessConfigurationPermissionPolicyOutputWithContext(context.Context) AccessConfigurationPermissionPolicyOutput
}

type AccessConfigurationPermissionPolicyArgs struct {
	// The configurations of the inline policy. **NOTE:** If `permissionPolicyType` is set to `Inline`, `permissionPolicyDocument` is required.
	PermissionPolicyDocument pulumi.StringPtrInput `pulumi:"permissionPolicyDocument"`
	// The name of the policy.
	PermissionPolicyName pulumi.StringInput `pulumi:"permissionPolicyName"`
	// The type of the policy. Valid values: `System`, `Inline`.
	PermissionPolicyType pulumi.StringInput `pulumi:"permissionPolicyType"`
}

func (AccessConfigurationPermissionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigurationPermissionPolicy)(nil)).Elem()
}

func (i AccessConfigurationPermissionPolicyArgs) ToAccessConfigurationPermissionPolicyOutput() AccessConfigurationPermissionPolicyOutput {
	return i.ToAccessConfigurationPermissionPolicyOutputWithContext(context.Background())
}

func (i AccessConfigurationPermissionPolicyArgs) ToAccessConfigurationPermissionPolicyOutputWithContext(ctx context.Context) AccessConfigurationPermissionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessConfigurationPermissionPolicyOutput)
}

// AccessConfigurationPermissionPolicyArrayInput is an input type that accepts AccessConfigurationPermissionPolicyArray and AccessConfigurationPermissionPolicyArrayOutput values.
// You can construct a concrete instance of `AccessConfigurationPermissionPolicyArrayInput` via:
//
//	AccessConfigurationPermissionPolicyArray{ AccessConfigurationPermissionPolicyArgs{...} }
type AccessConfigurationPermissionPolicyArrayInput interface {
	pulumi.Input

	ToAccessConfigurationPermissionPolicyArrayOutput() AccessConfigurationPermissionPolicyArrayOutput
	ToAccessConfigurationPermissionPolicyArrayOutputWithContext(context.Context) AccessConfigurationPermissionPolicyArrayOutput
}

type AccessConfigurationPermissionPolicyArray []AccessConfigurationPermissionPolicyInput

func (AccessConfigurationPermissionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessConfigurationPermissionPolicy)(nil)).Elem()
}

func (i AccessConfigurationPermissionPolicyArray) ToAccessConfigurationPermissionPolicyArrayOutput() AccessConfigurationPermissionPolicyArrayOutput {
	return i.ToAccessConfigurationPermissionPolicyArrayOutputWithContext(context.Background())
}

func (i AccessConfigurationPermissionPolicyArray) ToAccessConfigurationPermissionPolicyArrayOutputWithContext(ctx context.Context) AccessConfigurationPermissionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessConfigurationPermissionPolicyArrayOutput)
}

type AccessConfigurationPermissionPolicyOutput struct{ *pulumi.OutputState }

func (AccessConfigurationPermissionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigurationPermissionPolicy)(nil)).Elem()
}

func (o AccessConfigurationPermissionPolicyOutput) ToAccessConfigurationPermissionPolicyOutput() AccessConfigurationPermissionPolicyOutput {
	return o
}

func (o AccessConfigurationPermissionPolicyOutput) ToAccessConfigurationPermissionPolicyOutputWithContext(ctx context.Context) AccessConfigurationPermissionPolicyOutput {
	return o
}

// The configurations of the inline policy. **NOTE:** If `permissionPolicyType` is set to `Inline`, `permissionPolicyDocument` is required.
func (o AccessConfigurationPermissionPolicyOutput) PermissionPolicyDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessConfigurationPermissionPolicy) *string { return v.PermissionPolicyDocument }).(pulumi.StringPtrOutput)
}

// The name of the policy.
func (o AccessConfigurationPermissionPolicyOutput) PermissionPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessConfigurationPermissionPolicy) string { return v.PermissionPolicyName }).(pulumi.StringOutput)
}

// The type of the policy. Valid values: `System`, `Inline`.
func (o AccessConfigurationPermissionPolicyOutput) PermissionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v AccessConfigurationPermissionPolicy) string { return v.PermissionPolicyType }).(pulumi.StringOutput)
}

type AccessConfigurationPermissionPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccessConfigurationPermissionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessConfigurationPermissionPolicy)(nil)).Elem()
}

func (o AccessConfigurationPermissionPolicyArrayOutput) ToAccessConfigurationPermissionPolicyArrayOutput() AccessConfigurationPermissionPolicyArrayOutput {
	return o
}

func (o AccessConfigurationPermissionPolicyArrayOutput) ToAccessConfigurationPermissionPolicyArrayOutputWithContext(ctx context.Context) AccessConfigurationPermissionPolicyArrayOutput {
	return o
}

func (o AccessConfigurationPermissionPolicyArrayOutput) Index(i pulumi.IntInput) AccessConfigurationPermissionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessConfigurationPermissionPolicy {
		return vs[0].([]AccessConfigurationPermissionPolicy)[vs[1].(int)]
	}).(AccessConfigurationPermissionPolicyOutput)
}

type DirectoryLoginPreference struct {
	// Whether the user can obtain the program access credential in the portal after logging in.
	AllowUserToGetCredentials *bool `pulumi:"allowUserToGetCredentials"`
	// IP address whitelist
	LoginNetworkMasks *string `pulumi:"loginNetworkMasks"`
}

// DirectoryLoginPreferenceInput is an input type that accepts DirectoryLoginPreferenceArgs and DirectoryLoginPreferenceOutput values.
// You can construct a concrete instance of `DirectoryLoginPreferenceInput` via:
//
//	DirectoryLoginPreferenceArgs{...}
type DirectoryLoginPreferenceInput interface {
	pulumi.Input

	ToDirectoryLoginPreferenceOutput() DirectoryLoginPreferenceOutput
	ToDirectoryLoginPreferenceOutputWithContext(context.Context) DirectoryLoginPreferenceOutput
}

type DirectoryLoginPreferenceArgs struct {
	// Whether the user can obtain the program access credential in the portal after logging in.
	AllowUserToGetCredentials pulumi.BoolPtrInput `pulumi:"allowUserToGetCredentials"`
	// IP address whitelist
	LoginNetworkMasks pulumi.StringPtrInput `pulumi:"loginNetworkMasks"`
}

func (DirectoryLoginPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryLoginPreference)(nil)).Elem()
}

func (i DirectoryLoginPreferenceArgs) ToDirectoryLoginPreferenceOutput() DirectoryLoginPreferenceOutput {
	return i.ToDirectoryLoginPreferenceOutputWithContext(context.Background())
}

func (i DirectoryLoginPreferenceArgs) ToDirectoryLoginPreferenceOutputWithContext(ctx context.Context) DirectoryLoginPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryLoginPreferenceOutput)
}

func (i DirectoryLoginPreferenceArgs) ToDirectoryLoginPreferencePtrOutput() DirectoryLoginPreferencePtrOutput {
	return i.ToDirectoryLoginPreferencePtrOutputWithContext(context.Background())
}

func (i DirectoryLoginPreferenceArgs) ToDirectoryLoginPreferencePtrOutputWithContext(ctx context.Context) DirectoryLoginPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryLoginPreferenceOutput).ToDirectoryLoginPreferencePtrOutputWithContext(ctx)
}

// DirectoryLoginPreferencePtrInput is an input type that accepts DirectoryLoginPreferenceArgs, DirectoryLoginPreferencePtr and DirectoryLoginPreferencePtrOutput values.
// You can construct a concrete instance of `DirectoryLoginPreferencePtrInput` via:
//
//	        DirectoryLoginPreferenceArgs{...}
//
//	or:
//
//	        nil
type DirectoryLoginPreferencePtrInput interface {
	pulumi.Input

	ToDirectoryLoginPreferencePtrOutput() DirectoryLoginPreferencePtrOutput
	ToDirectoryLoginPreferencePtrOutputWithContext(context.Context) DirectoryLoginPreferencePtrOutput
}

type directoryLoginPreferencePtrType DirectoryLoginPreferenceArgs

func DirectoryLoginPreferencePtr(v *DirectoryLoginPreferenceArgs) DirectoryLoginPreferencePtrInput {
	return (*directoryLoginPreferencePtrType)(v)
}

func (*directoryLoginPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryLoginPreference)(nil)).Elem()
}

func (i *directoryLoginPreferencePtrType) ToDirectoryLoginPreferencePtrOutput() DirectoryLoginPreferencePtrOutput {
	return i.ToDirectoryLoginPreferencePtrOutputWithContext(context.Background())
}

func (i *directoryLoginPreferencePtrType) ToDirectoryLoginPreferencePtrOutputWithContext(ctx context.Context) DirectoryLoginPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryLoginPreferencePtrOutput)
}

type DirectoryLoginPreferenceOutput struct{ *pulumi.OutputState }

func (DirectoryLoginPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryLoginPreference)(nil)).Elem()
}

func (o DirectoryLoginPreferenceOutput) ToDirectoryLoginPreferenceOutput() DirectoryLoginPreferenceOutput {
	return o
}

func (o DirectoryLoginPreferenceOutput) ToDirectoryLoginPreferenceOutputWithContext(ctx context.Context) DirectoryLoginPreferenceOutput {
	return o
}

func (o DirectoryLoginPreferenceOutput) ToDirectoryLoginPreferencePtrOutput() DirectoryLoginPreferencePtrOutput {
	return o.ToDirectoryLoginPreferencePtrOutputWithContext(context.Background())
}

func (o DirectoryLoginPreferenceOutput) ToDirectoryLoginPreferencePtrOutputWithContext(ctx context.Context) DirectoryLoginPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryLoginPreference) *DirectoryLoginPreference {
		return &v
	}).(DirectoryLoginPreferencePtrOutput)
}

// Whether the user can obtain the program access credential in the portal after logging in.
func (o DirectoryLoginPreferenceOutput) AllowUserToGetCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryLoginPreference) *bool { return v.AllowUserToGetCredentials }).(pulumi.BoolPtrOutput)
}

// IP address whitelist
func (o DirectoryLoginPreferenceOutput) LoginNetworkMasks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryLoginPreference) *string { return v.LoginNetworkMasks }).(pulumi.StringPtrOutput)
}

type DirectoryLoginPreferencePtrOutput struct{ *pulumi.OutputState }

func (DirectoryLoginPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryLoginPreference)(nil)).Elem()
}

func (o DirectoryLoginPreferencePtrOutput) ToDirectoryLoginPreferencePtrOutput() DirectoryLoginPreferencePtrOutput {
	return o
}

func (o DirectoryLoginPreferencePtrOutput) ToDirectoryLoginPreferencePtrOutputWithContext(ctx context.Context) DirectoryLoginPreferencePtrOutput {
	return o
}

func (o DirectoryLoginPreferencePtrOutput) Elem() DirectoryLoginPreferenceOutput {
	return o.ApplyT(func(v *DirectoryLoginPreference) DirectoryLoginPreference {
		if v != nil {
			return *v
		}
		var ret DirectoryLoginPreference
		return ret
	}).(DirectoryLoginPreferenceOutput)
}

// Whether the user can obtain the program access credential in the portal after logging in.
func (o DirectoryLoginPreferencePtrOutput) AllowUserToGetCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryLoginPreference) *bool {
		if v == nil {
			return nil
		}
		return v.AllowUserToGetCredentials
	}).(pulumi.BoolPtrOutput)
}

// IP address whitelist
func (o DirectoryLoginPreferencePtrOutput) LoginNetworkMasks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryLoginPreference) *string {
		if v == nil {
			return nil
		}
		return v.LoginNetworkMasks
	}).(pulumi.StringPtrOutput)
}

type DirectoryMfaAuthenticationSettingInfo struct {
	// Global MFA validation policy
	MfaAuthenticationAdvanceSettings *string `pulumi:"mfaAuthenticationAdvanceSettings"`
	// MFA verification policy for abnormal logon.
	OperationForRiskLogin *string `pulumi:"operationForRiskLogin"`
}

// DirectoryMfaAuthenticationSettingInfoInput is an input type that accepts DirectoryMfaAuthenticationSettingInfoArgs and DirectoryMfaAuthenticationSettingInfoOutput values.
// You can construct a concrete instance of `DirectoryMfaAuthenticationSettingInfoInput` via:
//
//	DirectoryMfaAuthenticationSettingInfoArgs{...}
type DirectoryMfaAuthenticationSettingInfoInput interface {
	pulumi.Input

	ToDirectoryMfaAuthenticationSettingInfoOutput() DirectoryMfaAuthenticationSettingInfoOutput
	ToDirectoryMfaAuthenticationSettingInfoOutputWithContext(context.Context) DirectoryMfaAuthenticationSettingInfoOutput
}

type DirectoryMfaAuthenticationSettingInfoArgs struct {
	// Global MFA validation policy
	MfaAuthenticationAdvanceSettings pulumi.StringPtrInput `pulumi:"mfaAuthenticationAdvanceSettings"`
	// MFA verification policy for abnormal logon.
	OperationForRiskLogin pulumi.StringPtrInput `pulumi:"operationForRiskLogin"`
}

func (DirectoryMfaAuthenticationSettingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryMfaAuthenticationSettingInfo)(nil)).Elem()
}

func (i DirectoryMfaAuthenticationSettingInfoArgs) ToDirectoryMfaAuthenticationSettingInfoOutput() DirectoryMfaAuthenticationSettingInfoOutput {
	return i.ToDirectoryMfaAuthenticationSettingInfoOutputWithContext(context.Background())
}

func (i DirectoryMfaAuthenticationSettingInfoArgs) ToDirectoryMfaAuthenticationSettingInfoOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryMfaAuthenticationSettingInfoOutput)
}

func (i DirectoryMfaAuthenticationSettingInfoArgs) ToDirectoryMfaAuthenticationSettingInfoPtrOutput() DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return i.ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(context.Background())
}

func (i DirectoryMfaAuthenticationSettingInfoArgs) ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryMfaAuthenticationSettingInfoOutput).ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(ctx)
}

// DirectoryMfaAuthenticationSettingInfoPtrInput is an input type that accepts DirectoryMfaAuthenticationSettingInfoArgs, DirectoryMfaAuthenticationSettingInfoPtr and DirectoryMfaAuthenticationSettingInfoPtrOutput values.
// You can construct a concrete instance of `DirectoryMfaAuthenticationSettingInfoPtrInput` via:
//
//	        DirectoryMfaAuthenticationSettingInfoArgs{...}
//
//	or:
//
//	        nil
type DirectoryMfaAuthenticationSettingInfoPtrInput interface {
	pulumi.Input

	ToDirectoryMfaAuthenticationSettingInfoPtrOutput() DirectoryMfaAuthenticationSettingInfoPtrOutput
	ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(context.Context) DirectoryMfaAuthenticationSettingInfoPtrOutput
}

type directoryMfaAuthenticationSettingInfoPtrType DirectoryMfaAuthenticationSettingInfoArgs

func DirectoryMfaAuthenticationSettingInfoPtr(v *DirectoryMfaAuthenticationSettingInfoArgs) DirectoryMfaAuthenticationSettingInfoPtrInput {
	return (*directoryMfaAuthenticationSettingInfoPtrType)(v)
}

func (*directoryMfaAuthenticationSettingInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryMfaAuthenticationSettingInfo)(nil)).Elem()
}

func (i *directoryMfaAuthenticationSettingInfoPtrType) ToDirectoryMfaAuthenticationSettingInfoPtrOutput() DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return i.ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(context.Background())
}

func (i *directoryMfaAuthenticationSettingInfoPtrType) ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryMfaAuthenticationSettingInfoPtrOutput)
}

type DirectoryMfaAuthenticationSettingInfoOutput struct{ *pulumi.OutputState }

func (DirectoryMfaAuthenticationSettingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryMfaAuthenticationSettingInfo)(nil)).Elem()
}

func (o DirectoryMfaAuthenticationSettingInfoOutput) ToDirectoryMfaAuthenticationSettingInfoOutput() DirectoryMfaAuthenticationSettingInfoOutput {
	return o
}

func (o DirectoryMfaAuthenticationSettingInfoOutput) ToDirectoryMfaAuthenticationSettingInfoOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoOutput {
	return o
}

func (o DirectoryMfaAuthenticationSettingInfoOutput) ToDirectoryMfaAuthenticationSettingInfoPtrOutput() DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return o.ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(context.Background())
}

func (o DirectoryMfaAuthenticationSettingInfoOutput) ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryMfaAuthenticationSettingInfo) *DirectoryMfaAuthenticationSettingInfo {
		return &v
	}).(DirectoryMfaAuthenticationSettingInfoPtrOutput)
}

// Global MFA validation policy
func (o DirectoryMfaAuthenticationSettingInfoOutput) MfaAuthenticationAdvanceSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryMfaAuthenticationSettingInfo) *string { return v.MfaAuthenticationAdvanceSettings }).(pulumi.StringPtrOutput)
}

// MFA verification policy for abnormal logon.
func (o DirectoryMfaAuthenticationSettingInfoOutput) OperationForRiskLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryMfaAuthenticationSettingInfo) *string { return v.OperationForRiskLogin }).(pulumi.StringPtrOutput)
}

type DirectoryMfaAuthenticationSettingInfoPtrOutput struct{ *pulumi.OutputState }

func (DirectoryMfaAuthenticationSettingInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryMfaAuthenticationSettingInfo)(nil)).Elem()
}

func (o DirectoryMfaAuthenticationSettingInfoPtrOutput) ToDirectoryMfaAuthenticationSettingInfoPtrOutput() DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return o
}

func (o DirectoryMfaAuthenticationSettingInfoPtrOutput) ToDirectoryMfaAuthenticationSettingInfoPtrOutputWithContext(ctx context.Context) DirectoryMfaAuthenticationSettingInfoPtrOutput {
	return o
}

func (o DirectoryMfaAuthenticationSettingInfoPtrOutput) Elem() DirectoryMfaAuthenticationSettingInfoOutput {
	return o.ApplyT(func(v *DirectoryMfaAuthenticationSettingInfo) DirectoryMfaAuthenticationSettingInfo {
		if v != nil {
			return *v
		}
		var ret DirectoryMfaAuthenticationSettingInfo
		return ret
	}).(DirectoryMfaAuthenticationSettingInfoOutput)
}

// Global MFA validation policy
func (o DirectoryMfaAuthenticationSettingInfoPtrOutput) MfaAuthenticationAdvanceSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryMfaAuthenticationSettingInfo) *string {
		if v == nil {
			return nil
		}
		return v.MfaAuthenticationAdvanceSettings
	}).(pulumi.StringPtrOutput)
}

// MFA verification policy for abnormal logon.
func (o DirectoryMfaAuthenticationSettingInfoPtrOutput) OperationForRiskLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryMfaAuthenticationSettingInfo) *string {
		if v == nil {
			return nil
		}
		return v.OperationForRiskLogin
	}).(pulumi.StringPtrOutput)
}

type DirectoryPasswordPolicy struct {
	// Whether to restrict login after Password Expiration
	HardExpire *bool `pulumi:"hardExpire"`
	// Number of password retries.
	MaxLoginAttempts *int `pulumi:"maxLoginAttempts"`
	// Password validity period.
	MaxPasswordAge *int `pulumi:"maxPasswordAge"`
	// Maximum password length.
	MaxPasswordLength *int `pulumi:"maxPasswordLength"`
	// The minimum number of different characters in a password.
	MinPasswordDifferentChars *int `pulumi:"minPasswordDifferentChars"`
	// Minimum password length.
	MinPasswordLength *int `pulumi:"minPasswordLength"`
	// Whether the user name is not allowed in the password.
	PasswordNotContainUsername *bool `pulumi:"passwordNotContainUsername"`
	// Historical password check policy.
	PasswordReusePrevention *int `pulumi:"passwordReusePrevention"`
	// Whether lowercase letters are required in the password.
	RequireLowerCaseChars *bool `pulumi:"requireLowerCaseChars"`
	// Whether numbers are required in the password.
	RequireNumbers *bool `pulumi:"requireNumbers"`
	// Whether symbols are required in the password.
	RequireSymbols *bool `pulumi:"requireSymbols"`
	// Whether uppercase letters are required in the password.
	RequireUpperCaseChars *bool `pulumi:"requireUpperCaseChars"`
}

// DirectoryPasswordPolicyInput is an input type that accepts DirectoryPasswordPolicyArgs and DirectoryPasswordPolicyOutput values.
// You can construct a concrete instance of `DirectoryPasswordPolicyInput` via:
//
//	DirectoryPasswordPolicyArgs{...}
type DirectoryPasswordPolicyInput interface {
	pulumi.Input

	ToDirectoryPasswordPolicyOutput() DirectoryPasswordPolicyOutput
	ToDirectoryPasswordPolicyOutputWithContext(context.Context) DirectoryPasswordPolicyOutput
}

type DirectoryPasswordPolicyArgs struct {
	// Whether to restrict login after Password Expiration
	HardExpire pulumi.BoolPtrInput `pulumi:"hardExpire"`
	// Number of password retries.
	MaxLoginAttempts pulumi.IntPtrInput `pulumi:"maxLoginAttempts"`
	// Password validity period.
	MaxPasswordAge pulumi.IntPtrInput `pulumi:"maxPasswordAge"`
	// Maximum password length.
	MaxPasswordLength pulumi.IntPtrInput `pulumi:"maxPasswordLength"`
	// The minimum number of different characters in a password.
	MinPasswordDifferentChars pulumi.IntPtrInput `pulumi:"minPasswordDifferentChars"`
	// Minimum password length.
	MinPasswordLength pulumi.IntPtrInput `pulumi:"minPasswordLength"`
	// Whether the user name is not allowed in the password.
	PasswordNotContainUsername pulumi.BoolPtrInput `pulumi:"passwordNotContainUsername"`
	// Historical password check policy.
	PasswordReusePrevention pulumi.IntPtrInput `pulumi:"passwordReusePrevention"`
	// Whether lowercase letters are required in the password.
	RequireLowerCaseChars pulumi.BoolPtrInput `pulumi:"requireLowerCaseChars"`
	// Whether numbers are required in the password.
	RequireNumbers pulumi.BoolPtrInput `pulumi:"requireNumbers"`
	// Whether symbols are required in the password.
	RequireSymbols pulumi.BoolPtrInput `pulumi:"requireSymbols"`
	// Whether uppercase letters are required in the password.
	RequireUpperCaseChars pulumi.BoolPtrInput `pulumi:"requireUpperCaseChars"`
}

func (DirectoryPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryPasswordPolicy)(nil)).Elem()
}

func (i DirectoryPasswordPolicyArgs) ToDirectoryPasswordPolicyOutput() DirectoryPasswordPolicyOutput {
	return i.ToDirectoryPasswordPolicyOutputWithContext(context.Background())
}

func (i DirectoryPasswordPolicyArgs) ToDirectoryPasswordPolicyOutputWithContext(ctx context.Context) DirectoryPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryPasswordPolicyOutput)
}

func (i DirectoryPasswordPolicyArgs) ToDirectoryPasswordPolicyPtrOutput() DirectoryPasswordPolicyPtrOutput {
	return i.ToDirectoryPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i DirectoryPasswordPolicyArgs) ToDirectoryPasswordPolicyPtrOutputWithContext(ctx context.Context) DirectoryPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryPasswordPolicyOutput).ToDirectoryPasswordPolicyPtrOutputWithContext(ctx)
}

// DirectoryPasswordPolicyPtrInput is an input type that accepts DirectoryPasswordPolicyArgs, DirectoryPasswordPolicyPtr and DirectoryPasswordPolicyPtrOutput values.
// You can construct a concrete instance of `DirectoryPasswordPolicyPtrInput` via:
//
//	        DirectoryPasswordPolicyArgs{...}
//
//	or:
//
//	        nil
type DirectoryPasswordPolicyPtrInput interface {
	pulumi.Input

	ToDirectoryPasswordPolicyPtrOutput() DirectoryPasswordPolicyPtrOutput
	ToDirectoryPasswordPolicyPtrOutputWithContext(context.Context) DirectoryPasswordPolicyPtrOutput
}

type directoryPasswordPolicyPtrType DirectoryPasswordPolicyArgs

func DirectoryPasswordPolicyPtr(v *DirectoryPasswordPolicyArgs) DirectoryPasswordPolicyPtrInput {
	return (*directoryPasswordPolicyPtrType)(v)
}

func (*directoryPasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryPasswordPolicy)(nil)).Elem()
}

func (i *directoryPasswordPolicyPtrType) ToDirectoryPasswordPolicyPtrOutput() DirectoryPasswordPolicyPtrOutput {
	return i.ToDirectoryPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *directoryPasswordPolicyPtrType) ToDirectoryPasswordPolicyPtrOutputWithContext(ctx context.Context) DirectoryPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryPasswordPolicyPtrOutput)
}

type DirectoryPasswordPolicyOutput struct{ *pulumi.OutputState }

func (DirectoryPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryPasswordPolicy)(nil)).Elem()
}

func (o DirectoryPasswordPolicyOutput) ToDirectoryPasswordPolicyOutput() DirectoryPasswordPolicyOutput {
	return o
}

func (o DirectoryPasswordPolicyOutput) ToDirectoryPasswordPolicyOutputWithContext(ctx context.Context) DirectoryPasswordPolicyOutput {
	return o
}

func (o DirectoryPasswordPolicyOutput) ToDirectoryPasswordPolicyPtrOutput() DirectoryPasswordPolicyPtrOutput {
	return o.ToDirectoryPasswordPolicyPtrOutputWithContext(context.Background())
}

func (o DirectoryPasswordPolicyOutput) ToDirectoryPasswordPolicyPtrOutputWithContext(ctx context.Context) DirectoryPasswordPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryPasswordPolicy) *DirectoryPasswordPolicy {
		return &v
	}).(DirectoryPasswordPolicyPtrOutput)
}

// Whether to restrict login after Password Expiration
func (o DirectoryPasswordPolicyOutput) HardExpire() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.HardExpire }).(pulumi.BoolPtrOutput)
}

// Number of password retries.
func (o DirectoryPasswordPolicyOutput) MaxLoginAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.MaxLoginAttempts }).(pulumi.IntPtrOutput)
}

// Password validity period.
func (o DirectoryPasswordPolicyOutput) MaxPasswordAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.MaxPasswordAge }).(pulumi.IntPtrOutput)
}

// Maximum password length.
func (o DirectoryPasswordPolicyOutput) MaxPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.MaxPasswordLength }).(pulumi.IntPtrOutput)
}

// The minimum number of different characters in a password.
func (o DirectoryPasswordPolicyOutput) MinPasswordDifferentChars() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.MinPasswordDifferentChars }).(pulumi.IntPtrOutput)
}

// Minimum password length.
func (o DirectoryPasswordPolicyOutput) MinPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.MinPasswordLength }).(pulumi.IntPtrOutput)
}

// Whether the user name is not allowed in the password.
func (o DirectoryPasswordPolicyOutput) PasswordNotContainUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.PasswordNotContainUsername }).(pulumi.BoolPtrOutput)
}

// Historical password check policy.
func (o DirectoryPasswordPolicyOutput) PasswordReusePrevention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *int { return v.PasswordReusePrevention }).(pulumi.IntPtrOutput)
}

// Whether lowercase letters are required in the password.
func (o DirectoryPasswordPolicyOutput) RequireLowerCaseChars() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.RequireLowerCaseChars }).(pulumi.BoolPtrOutput)
}

// Whether numbers are required in the password.
func (o DirectoryPasswordPolicyOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// Whether symbols are required in the password.
func (o DirectoryPasswordPolicyOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// Whether uppercase letters are required in the password.
func (o DirectoryPasswordPolicyOutput) RequireUpperCaseChars() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryPasswordPolicy) *bool { return v.RequireUpperCaseChars }).(pulumi.BoolPtrOutput)
}

type DirectoryPasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (DirectoryPasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryPasswordPolicy)(nil)).Elem()
}

func (o DirectoryPasswordPolicyPtrOutput) ToDirectoryPasswordPolicyPtrOutput() DirectoryPasswordPolicyPtrOutput {
	return o
}

func (o DirectoryPasswordPolicyPtrOutput) ToDirectoryPasswordPolicyPtrOutputWithContext(ctx context.Context) DirectoryPasswordPolicyPtrOutput {
	return o
}

func (o DirectoryPasswordPolicyPtrOutput) Elem() DirectoryPasswordPolicyOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) DirectoryPasswordPolicy {
		if v != nil {
			return *v
		}
		var ret DirectoryPasswordPolicy
		return ret
	}).(DirectoryPasswordPolicyOutput)
}

// Whether to restrict login after Password Expiration
func (o DirectoryPasswordPolicyPtrOutput) HardExpire() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.HardExpire
	}).(pulumi.BoolPtrOutput)
}

// Number of password retries.
func (o DirectoryPasswordPolicyPtrOutput) MaxLoginAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxLoginAttempts
	}).(pulumi.IntPtrOutput)
}

// Password validity period.
func (o DirectoryPasswordPolicyPtrOutput) MaxPasswordAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxPasswordAge
	}).(pulumi.IntPtrOutput)
}

// Maximum password length.
func (o DirectoryPasswordPolicyPtrOutput) MaxPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxPasswordLength
	}).(pulumi.IntPtrOutput)
}

// The minimum number of different characters in a password.
func (o DirectoryPasswordPolicyPtrOutput) MinPasswordDifferentChars() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MinPasswordDifferentChars
	}).(pulumi.IntPtrOutput)
}

// Minimum password length.
func (o DirectoryPasswordPolicyPtrOutput) MinPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MinPasswordLength
	}).(pulumi.IntPtrOutput)
}

// Whether the user name is not allowed in the password.
func (o DirectoryPasswordPolicyPtrOutput) PasswordNotContainUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordNotContainUsername
	}).(pulumi.BoolPtrOutput)
}

// Historical password check policy.
func (o DirectoryPasswordPolicyPtrOutput) PasswordReusePrevention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.PasswordReusePrevention
	}).(pulumi.IntPtrOutput)
}

// Whether lowercase letters are required in the password.
func (o DirectoryPasswordPolicyPtrOutput) RequireLowerCaseChars() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLowerCaseChars
	}).(pulumi.BoolPtrOutput)
}

// Whether numbers are required in the password.
func (o DirectoryPasswordPolicyPtrOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumbers
	}).(pulumi.BoolPtrOutput)
}

// Whether symbols are required in the password.
func (o DirectoryPasswordPolicyPtrOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSymbols
	}).(pulumi.BoolPtrOutput)
}

// Whether uppercase letters are required in the password.
func (o DirectoryPasswordPolicyPtrOutput) RequireUpperCaseChars() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUpperCaseChars
	}).(pulumi.BoolPtrOutput)
}

type DirectorySamlIdentityProviderConfiguration struct {
	// The Binding method for initiating a SAML request.
	BindingType *string `pulumi:"bindingType"`
	// Certificate ID list
	CertificateIds []string `pulumi:"certificateIds"`
	// CreateTime
	CreateTime *string `pulumi:"createTime"`
	// EncodedMetadataDocument
	EncodedMetadataDocument *string `pulumi:"encodedMetadataDocument"`
	// EntityId
	EntityId *string `pulumi:"entityId"`
	// LoginUrl
	LoginUrl *string `pulumi:"loginUrl"`
	// SSOStatus
	SsoStatus *string `pulumi:"ssoStatus"`
	// UpdateTime
	UpdateTime *string `pulumi:"updateTime"`
	// SP Request whether the signature is required
	WantRequestSigned *bool `pulumi:"wantRequestSigned"`
}

// DirectorySamlIdentityProviderConfigurationInput is an input type that accepts DirectorySamlIdentityProviderConfigurationArgs and DirectorySamlIdentityProviderConfigurationOutput values.
// You can construct a concrete instance of `DirectorySamlIdentityProviderConfigurationInput` via:
//
//	DirectorySamlIdentityProviderConfigurationArgs{...}
type DirectorySamlIdentityProviderConfigurationInput interface {
	pulumi.Input

	ToDirectorySamlIdentityProviderConfigurationOutput() DirectorySamlIdentityProviderConfigurationOutput
	ToDirectorySamlIdentityProviderConfigurationOutputWithContext(context.Context) DirectorySamlIdentityProviderConfigurationOutput
}

type DirectorySamlIdentityProviderConfigurationArgs struct {
	// The Binding method for initiating a SAML request.
	BindingType pulumi.StringPtrInput `pulumi:"bindingType"`
	// Certificate ID list
	CertificateIds pulumi.StringArrayInput `pulumi:"certificateIds"`
	// CreateTime
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// EncodedMetadataDocument
	EncodedMetadataDocument pulumi.StringPtrInput `pulumi:"encodedMetadataDocument"`
	// EntityId
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// LoginUrl
	LoginUrl pulumi.StringPtrInput `pulumi:"loginUrl"`
	// SSOStatus
	SsoStatus pulumi.StringPtrInput `pulumi:"ssoStatus"`
	// UpdateTime
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// SP Request whether the signature is required
	WantRequestSigned pulumi.BoolPtrInput `pulumi:"wantRequestSigned"`
}

func (DirectorySamlIdentityProviderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (i DirectorySamlIdentityProviderConfigurationArgs) ToDirectorySamlIdentityProviderConfigurationOutput() DirectorySamlIdentityProviderConfigurationOutput {
	return i.ToDirectorySamlIdentityProviderConfigurationOutputWithContext(context.Background())
}

func (i DirectorySamlIdentityProviderConfigurationArgs) ToDirectorySamlIdentityProviderConfigurationOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlIdentityProviderConfigurationOutput)
}

func (i DirectorySamlIdentityProviderConfigurationArgs) ToDirectorySamlIdentityProviderConfigurationPtrOutput() DirectorySamlIdentityProviderConfigurationPtrOutput {
	return i.ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(context.Background())
}

func (i DirectorySamlIdentityProviderConfigurationArgs) ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlIdentityProviderConfigurationOutput).ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(ctx)
}

// DirectorySamlIdentityProviderConfigurationPtrInput is an input type that accepts DirectorySamlIdentityProviderConfigurationArgs, DirectorySamlIdentityProviderConfigurationPtr and DirectorySamlIdentityProviderConfigurationPtrOutput values.
// You can construct a concrete instance of `DirectorySamlIdentityProviderConfigurationPtrInput` via:
//
//	        DirectorySamlIdentityProviderConfigurationArgs{...}
//
//	or:
//
//	        nil
type DirectorySamlIdentityProviderConfigurationPtrInput interface {
	pulumi.Input

	ToDirectorySamlIdentityProviderConfigurationPtrOutput() DirectorySamlIdentityProviderConfigurationPtrOutput
	ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(context.Context) DirectorySamlIdentityProviderConfigurationPtrOutput
}

type directorySamlIdentityProviderConfigurationPtrType DirectorySamlIdentityProviderConfigurationArgs

func DirectorySamlIdentityProviderConfigurationPtr(v *DirectorySamlIdentityProviderConfigurationArgs) DirectorySamlIdentityProviderConfigurationPtrInput {
	return (*directorySamlIdentityProviderConfigurationPtrType)(v)
}

func (*directorySamlIdentityProviderConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (i *directorySamlIdentityProviderConfigurationPtrType) ToDirectorySamlIdentityProviderConfigurationPtrOutput() DirectorySamlIdentityProviderConfigurationPtrOutput {
	return i.ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(context.Background())
}

func (i *directorySamlIdentityProviderConfigurationPtrType) ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlIdentityProviderConfigurationPtrOutput)
}

type DirectorySamlIdentityProviderConfigurationOutput struct{ *pulumi.OutputState }

func (DirectorySamlIdentityProviderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (o DirectorySamlIdentityProviderConfigurationOutput) ToDirectorySamlIdentityProviderConfigurationOutput() DirectorySamlIdentityProviderConfigurationOutput {
	return o
}

func (o DirectorySamlIdentityProviderConfigurationOutput) ToDirectorySamlIdentityProviderConfigurationOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationOutput {
	return o
}

func (o DirectorySamlIdentityProviderConfigurationOutput) ToDirectorySamlIdentityProviderConfigurationPtrOutput() DirectorySamlIdentityProviderConfigurationPtrOutput {
	return o.ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(context.Background())
}

func (o DirectorySamlIdentityProviderConfigurationOutput) ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectorySamlIdentityProviderConfiguration) *DirectorySamlIdentityProviderConfiguration {
		return &v
	}).(DirectorySamlIdentityProviderConfigurationPtrOutput)
}

// The Binding method for initiating a SAML request.
func (o DirectorySamlIdentityProviderConfigurationOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.BindingType }).(pulumi.StringPtrOutput)
}

// Certificate ID list
func (o DirectorySamlIdentityProviderConfigurationOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) []string { return v.CertificateIds }).(pulumi.StringArrayOutput)
}

// CreateTime
func (o DirectorySamlIdentityProviderConfigurationOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// EncodedMetadataDocument
func (o DirectorySamlIdentityProviderConfigurationOutput) EncodedMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.EncodedMetadataDocument }).(pulumi.StringPtrOutput)
}

// EntityId
func (o DirectorySamlIdentityProviderConfigurationOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// LoginUrl
func (o DirectorySamlIdentityProviderConfigurationOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.LoginUrl }).(pulumi.StringPtrOutput)
}

// SSOStatus
func (o DirectorySamlIdentityProviderConfigurationOutput) SsoStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.SsoStatus }).(pulumi.StringPtrOutput)
}

// UpdateTime
func (o DirectorySamlIdentityProviderConfigurationOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// SP Request whether the signature is required
func (o DirectorySamlIdentityProviderConfigurationOutput) WantRequestSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySamlIdentityProviderConfiguration) *bool { return v.WantRequestSigned }).(pulumi.BoolPtrOutput)
}

type DirectorySamlIdentityProviderConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DirectorySamlIdentityProviderConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (o DirectorySamlIdentityProviderConfigurationPtrOutput) ToDirectorySamlIdentityProviderConfigurationPtrOutput() DirectorySamlIdentityProviderConfigurationPtrOutput {
	return o
}

func (o DirectorySamlIdentityProviderConfigurationPtrOutput) ToDirectorySamlIdentityProviderConfigurationPtrOutputWithContext(ctx context.Context) DirectorySamlIdentityProviderConfigurationPtrOutput {
	return o
}

func (o DirectorySamlIdentityProviderConfigurationPtrOutput) Elem() DirectorySamlIdentityProviderConfigurationOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) DirectorySamlIdentityProviderConfiguration {
		if v != nil {
			return *v
		}
		var ret DirectorySamlIdentityProviderConfiguration
		return ret
	}).(DirectorySamlIdentityProviderConfigurationOutput)
}

// The Binding method for initiating a SAML request.
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BindingType
	}).(pulumi.StringPtrOutput)
}

// Certificate ID list
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CertificateIds
	}).(pulumi.StringArrayOutput)
}

// CreateTime
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// EncodedMetadataDocument
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) EncodedMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EncodedMetadataDocument
	}).(pulumi.StringPtrOutput)
}

// EntityId
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// LoginUrl
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

// SSOStatus
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) SsoStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SsoStatus
	}).(pulumi.StringPtrOutput)
}

// UpdateTime
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// SP Request whether the signature is required
func (o DirectorySamlIdentityProviderConfigurationPtrOutput) WantRequestSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySamlIdentityProviderConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WantRequestSigned
	}).(pulumi.BoolPtrOutput)
}

type DirectorySamlServiceProvider struct {
	// ACS URL of SP.
	AcsUrl *string `pulumi:"acsUrl"`
	// Signature algorithms supported by AuthNRequest
	AuthnSignAlgo *string `pulumi:"authnSignAlgo"`
	// Type of certificate used for signing in the SSO process
	CertificateType *string `pulumi:"certificateType"`
	// SP metadata document (Base64 encoding).
	EncodedMetadataDocument *string `pulumi:"encodedMetadataDocument"`
	// SP identity.
	EntityId *string `pulumi:"entityId"`
	// Whether IdP-side encryption of Assertion is supported.
	SupportEncryptedAssertion *bool `pulumi:"supportEncryptedAssertion"`
}

// DirectorySamlServiceProviderInput is an input type that accepts DirectorySamlServiceProviderArgs and DirectorySamlServiceProviderOutput values.
// You can construct a concrete instance of `DirectorySamlServiceProviderInput` via:
//
//	DirectorySamlServiceProviderArgs{...}
type DirectorySamlServiceProviderInput interface {
	pulumi.Input

	ToDirectorySamlServiceProviderOutput() DirectorySamlServiceProviderOutput
	ToDirectorySamlServiceProviderOutputWithContext(context.Context) DirectorySamlServiceProviderOutput
}

type DirectorySamlServiceProviderArgs struct {
	// ACS URL of SP.
	AcsUrl pulumi.StringPtrInput `pulumi:"acsUrl"`
	// Signature algorithms supported by AuthNRequest
	AuthnSignAlgo pulumi.StringPtrInput `pulumi:"authnSignAlgo"`
	// Type of certificate used for signing in the SSO process
	CertificateType pulumi.StringPtrInput `pulumi:"certificateType"`
	// SP metadata document (Base64 encoding).
	EncodedMetadataDocument pulumi.StringPtrInput `pulumi:"encodedMetadataDocument"`
	// SP identity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// Whether IdP-side encryption of Assertion is supported.
	SupportEncryptedAssertion pulumi.BoolPtrInput `pulumi:"supportEncryptedAssertion"`
}

func (DirectorySamlServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySamlServiceProvider)(nil)).Elem()
}

func (i DirectorySamlServiceProviderArgs) ToDirectorySamlServiceProviderOutput() DirectorySamlServiceProviderOutput {
	return i.ToDirectorySamlServiceProviderOutputWithContext(context.Background())
}

func (i DirectorySamlServiceProviderArgs) ToDirectorySamlServiceProviderOutputWithContext(ctx context.Context) DirectorySamlServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlServiceProviderOutput)
}

func (i DirectorySamlServiceProviderArgs) ToDirectorySamlServiceProviderPtrOutput() DirectorySamlServiceProviderPtrOutput {
	return i.ToDirectorySamlServiceProviderPtrOutputWithContext(context.Background())
}

func (i DirectorySamlServiceProviderArgs) ToDirectorySamlServiceProviderPtrOutputWithContext(ctx context.Context) DirectorySamlServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlServiceProviderOutput).ToDirectorySamlServiceProviderPtrOutputWithContext(ctx)
}

// DirectorySamlServiceProviderPtrInput is an input type that accepts DirectorySamlServiceProviderArgs, DirectorySamlServiceProviderPtr and DirectorySamlServiceProviderPtrOutput values.
// You can construct a concrete instance of `DirectorySamlServiceProviderPtrInput` via:
//
//	        DirectorySamlServiceProviderArgs{...}
//
//	or:
//
//	        nil
type DirectorySamlServiceProviderPtrInput interface {
	pulumi.Input

	ToDirectorySamlServiceProviderPtrOutput() DirectorySamlServiceProviderPtrOutput
	ToDirectorySamlServiceProviderPtrOutputWithContext(context.Context) DirectorySamlServiceProviderPtrOutput
}

type directorySamlServiceProviderPtrType DirectorySamlServiceProviderArgs

func DirectorySamlServiceProviderPtr(v *DirectorySamlServiceProviderArgs) DirectorySamlServiceProviderPtrInput {
	return (*directorySamlServiceProviderPtrType)(v)
}

func (*directorySamlServiceProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySamlServiceProvider)(nil)).Elem()
}

func (i *directorySamlServiceProviderPtrType) ToDirectorySamlServiceProviderPtrOutput() DirectorySamlServiceProviderPtrOutput {
	return i.ToDirectorySamlServiceProviderPtrOutputWithContext(context.Background())
}

func (i *directorySamlServiceProviderPtrType) ToDirectorySamlServiceProviderPtrOutputWithContext(ctx context.Context) DirectorySamlServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySamlServiceProviderPtrOutput)
}

type DirectorySamlServiceProviderOutput struct{ *pulumi.OutputState }

func (DirectorySamlServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySamlServiceProvider)(nil)).Elem()
}

func (o DirectorySamlServiceProviderOutput) ToDirectorySamlServiceProviderOutput() DirectorySamlServiceProviderOutput {
	return o
}

func (o DirectorySamlServiceProviderOutput) ToDirectorySamlServiceProviderOutputWithContext(ctx context.Context) DirectorySamlServiceProviderOutput {
	return o
}

func (o DirectorySamlServiceProviderOutput) ToDirectorySamlServiceProviderPtrOutput() DirectorySamlServiceProviderPtrOutput {
	return o.ToDirectorySamlServiceProviderPtrOutputWithContext(context.Background())
}

func (o DirectorySamlServiceProviderOutput) ToDirectorySamlServiceProviderPtrOutputWithContext(ctx context.Context) DirectorySamlServiceProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectorySamlServiceProvider) *DirectorySamlServiceProvider {
		return &v
	}).(DirectorySamlServiceProviderPtrOutput)
}

// ACS URL of SP.
func (o DirectorySamlServiceProviderOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *string { return v.AcsUrl }).(pulumi.StringPtrOutput)
}

// Signature algorithms supported by AuthNRequest
func (o DirectorySamlServiceProviderOutput) AuthnSignAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *string { return v.AuthnSignAlgo }).(pulumi.StringPtrOutput)
}

// Type of certificate used for signing in the SSO process
func (o DirectorySamlServiceProviderOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

// SP metadata document (Base64 encoding).
func (o DirectorySamlServiceProviderOutput) EncodedMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *string { return v.EncodedMetadataDocument }).(pulumi.StringPtrOutput)
}

// SP identity.
func (o DirectorySamlServiceProviderOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Whether IdP-side encryption of Assertion is supported.
func (o DirectorySamlServiceProviderOutput) SupportEncryptedAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySamlServiceProvider) *bool { return v.SupportEncryptedAssertion }).(pulumi.BoolPtrOutput)
}

type DirectorySamlServiceProviderPtrOutput struct{ *pulumi.OutputState }

func (DirectorySamlServiceProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySamlServiceProvider)(nil)).Elem()
}

func (o DirectorySamlServiceProviderPtrOutput) ToDirectorySamlServiceProviderPtrOutput() DirectorySamlServiceProviderPtrOutput {
	return o
}

func (o DirectorySamlServiceProviderPtrOutput) ToDirectorySamlServiceProviderPtrOutputWithContext(ctx context.Context) DirectorySamlServiceProviderPtrOutput {
	return o
}

func (o DirectorySamlServiceProviderPtrOutput) Elem() DirectorySamlServiceProviderOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) DirectorySamlServiceProvider {
		if v != nil {
			return *v
		}
		var ret DirectorySamlServiceProvider
		return ret
	}).(DirectorySamlServiceProviderOutput)
}

// ACS URL of SP.
func (o DirectorySamlServiceProviderPtrOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *string {
		if v == nil {
			return nil
		}
		return v.AcsUrl
	}).(pulumi.StringPtrOutput)
}

// Signature algorithms supported by AuthNRequest
func (o DirectorySamlServiceProviderPtrOutput) AuthnSignAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *string {
		if v == nil {
			return nil
		}
		return v.AuthnSignAlgo
	}).(pulumi.StringPtrOutput)
}

// Type of certificate used for signing in the SSO process
func (o DirectorySamlServiceProviderPtrOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *string {
		if v == nil {
			return nil
		}
		return v.CertificateType
	}).(pulumi.StringPtrOutput)
}

// SP metadata document (Base64 encoding).
func (o DirectorySamlServiceProviderPtrOutput) EncodedMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *string {
		if v == nil {
			return nil
		}
		return v.EncodedMetadataDocument
	}).(pulumi.StringPtrOutput)
}

// SP identity.
func (o DirectorySamlServiceProviderPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// Whether IdP-side encryption of Assertion is supported.
func (o DirectorySamlServiceProviderPtrOutput) SupportEncryptedAssertion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySamlServiceProvider) *bool {
		if v == nil {
			return nil
		}
		return v.SupportEncryptedAssertion
	}).(pulumi.BoolPtrOutput)
}

type DirectoryUserProvisioningConfiguration struct {
	// The duration of the Session after the user logs in.
	DefaultLandingPage *string `pulumi:"defaultLandingPage"`
	// The duration of the Session after the user logs in.
	SessionDuration *string `pulumi:"sessionDuration"`
}

// DirectoryUserProvisioningConfigurationInput is an input type that accepts DirectoryUserProvisioningConfigurationArgs and DirectoryUserProvisioningConfigurationOutput values.
// You can construct a concrete instance of `DirectoryUserProvisioningConfigurationInput` via:
//
//	DirectoryUserProvisioningConfigurationArgs{...}
type DirectoryUserProvisioningConfigurationInput interface {
	pulumi.Input

	ToDirectoryUserProvisioningConfigurationOutput() DirectoryUserProvisioningConfigurationOutput
	ToDirectoryUserProvisioningConfigurationOutputWithContext(context.Context) DirectoryUserProvisioningConfigurationOutput
}

type DirectoryUserProvisioningConfigurationArgs struct {
	// The duration of the Session after the user logs in.
	DefaultLandingPage pulumi.StringPtrInput `pulumi:"defaultLandingPage"`
	// The duration of the Session after the user logs in.
	SessionDuration pulumi.StringPtrInput `pulumi:"sessionDuration"`
}

func (DirectoryUserProvisioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryUserProvisioningConfiguration)(nil)).Elem()
}

func (i DirectoryUserProvisioningConfigurationArgs) ToDirectoryUserProvisioningConfigurationOutput() DirectoryUserProvisioningConfigurationOutput {
	return i.ToDirectoryUserProvisioningConfigurationOutputWithContext(context.Background())
}

func (i DirectoryUserProvisioningConfigurationArgs) ToDirectoryUserProvisioningConfigurationOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryUserProvisioningConfigurationOutput)
}

func (i DirectoryUserProvisioningConfigurationArgs) ToDirectoryUserProvisioningConfigurationPtrOutput() DirectoryUserProvisioningConfigurationPtrOutput {
	return i.ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(context.Background())
}

func (i DirectoryUserProvisioningConfigurationArgs) ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryUserProvisioningConfigurationOutput).ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(ctx)
}

// DirectoryUserProvisioningConfigurationPtrInput is an input type that accepts DirectoryUserProvisioningConfigurationArgs, DirectoryUserProvisioningConfigurationPtr and DirectoryUserProvisioningConfigurationPtrOutput values.
// You can construct a concrete instance of `DirectoryUserProvisioningConfigurationPtrInput` via:
//
//	        DirectoryUserProvisioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type DirectoryUserProvisioningConfigurationPtrInput interface {
	pulumi.Input

	ToDirectoryUserProvisioningConfigurationPtrOutput() DirectoryUserProvisioningConfigurationPtrOutput
	ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(context.Context) DirectoryUserProvisioningConfigurationPtrOutput
}

type directoryUserProvisioningConfigurationPtrType DirectoryUserProvisioningConfigurationArgs

func DirectoryUserProvisioningConfigurationPtr(v *DirectoryUserProvisioningConfigurationArgs) DirectoryUserProvisioningConfigurationPtrInput {
	return (*directoryUserProvisioningConfigurationPtrType)(v)
}

func (*directoryUserProvisioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryUserProvisioningConfiguration)(nil)).Elem()
}

func (i *directoryUserProvisioningConfigurationPtrType) ToDirectoryUserProvisioningConfigurationPtrOutput() DirectoryUserProvisioningConfigurationPtrOutput {
	return i.ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *directoryUserProvisioningConfigurationPtrType) ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryUserProvisioningConfigurationPtrOutput)
}

type DirectoryUserProvisioningConfigurationOutput struct{ *pulumi.OutputState }

func (DirectoryUserProvisioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryUserProvisioningConfiguration)(nil)).Elem()
}

func (o DirectoryUserProvisioningConfigurationOutput) ToDirectoryUserProvisioningConfigurationOutput() DirectoryUserProvisioningConfigurationOutput {
	return o
}

func (o DirectoryUserProvisioningConfigurationOutput) ToDirectoryUserProvisioningConfigurationOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationOutput {
	return o
}

func (o DirectoryUserProvisioningConfigurationOutput) ToDirectoryUserProvisioningConfigurationPtrOutput() DirectoryUserProvisioningConfigurationPtrOutput {
	return o.ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(context.Background())
}

func (o DirectoryUserProvisioningConfigurationOutput) ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryUserProvisioningConfiguration) *DirectoryUserProvisioningConfiguration {
		return &v
	}).(DirectoryUserProvisioningConfigurationPtrOutput)
}

// The duration of the Session after the user logs in.
func (o DirectoryUserProvisioningConfigurationOutput) DefaultLandingPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryUserProvisioningConfiguration) *string { return v.DefaultLandingPage }).(pulumi.StringPtrOutput)
}

// The duration of the Session after the user logs in.
func (o DirectoryUserProvisioningConfigurationOutput) SessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryUserProvisioningConfiguration) *string { return v.SessionDuration }).(pulumi.StringPtrOutput)
}

type DirectoryUserProvisioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DirectoryUserProvisioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryUserProvisioningConfiguration)(nil)).Elem()
}

func (o DirectoryUserProvisioningConfigurationPtrOutput) ToDirectoryUserProvisioningConfigurationPtrOutput() DirectoryUserProvisioningConfigurationPtrOutput {
	return o
}

func (o DirectoryUserProvisioningConfigurationPtrOutput) ToDirectoryUserProvisioningConfigurationPtrOutputWithContext(ctx context.Context) DirectoryUserProvisioningConfigurationPtrOutput {
	return o
}

func (o DirectoryUserProvisioningConfigurationPtrOutput) Elem() DirectoryUserProvisioningConfigurationOutput {
	return o.ApplyT(func(v *DirectoryUserProvisioningConfiguration) DirectoryUserProvisioningConfiguration {
		if v != nil {
			return *v
		}
		var ret DirectoryUserProvisioningConfiguration
		return ret
	}).(DirectoryUserProvisioningConfigurationOutput)
}

// The duration of the Session after the user logs in.
func (o DirectoryUserProvisioningConfigurationPtrOutput) DefaultLandingPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryUserProvisioningConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLandingPage
	}).(pulumi.StringPtrOutput)
}

// The duration of the Session after the user logs in.
func (o DirectoryUserProvisioningConfigurationPtrOutput) SessionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryUserProvisioningConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SessionDuration
	}).(pulumi.StringPtrOutput)
}

type GetAccessAssignmentsAssignment struct {
	// Access configuration ID.
	AccessConfigurationId string `pulumi:"accessConfigurationId"`
	// The name of the access configuration.
	AccessConfigurationName string `pulumi:"accessConfigurationName"`
	// Directory ID.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the Access Assignment.
	Id string `pulumi:"id"`
	// The ID of the access assignment.
	PrincipalId string `pulumi:"principalId"`
	// Cloud SSO identity name.
	PrincipalName string `pulumi:"principalName"`
	// Create the identity type of the access assignment, which can be a user or a user group.
	PrincipalType string `pulumi:"principalType"`
	// The ID of the target to create the resource range.
	TargetId string `pulumi:"targetId"`
	// Task target name.
	TargetName string `pulumi:"targetName"`
	// The path name of the task target in the resource directory.
	TargetPathName string `pulumi:"targetPathName"`
	// The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
	TargetType string `pulumi:"targetType"`
}

// GetAccessAssignmentsAssignmentInput is an input type that accepts GetAccessAssignmentsAssignmentArgs and GetAccessAssignmentsAssignmentOutput values.
// You can construct a concrete instance of `GetAccessAssignmentsAssignmentInput` via:
//
//	GetAccessAssignmentsAssignmentArgs{...}
type GetAccessAssignmentsAssignmentInput interface {
	pulumi.Input

	ToGetAccessAssignmentsAssignmentOutput() GetAccessAssignmentsAssignmentOutput
	ToGetAccessAssignmentsAssignmentOutputWithContext(context.Context) GetAccessAssignmentsAssignmentOutput
}

type GetAccessAssignmentsAssignmentArgs struct {
	// Access configuration ID.
	AccessConfigurationId pulumi.StringInput `pulumi:"accessConfigurationId"`
	// The name of the access configuration.
	AccessConfigurationName pulumi.StringInput `pulumi:"accessConfigurationName"`
	// Directory ID.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The ID of the Access Assignment.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the access assignment.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Cloud SSO identity name.
	PrincipalName pulumi.StringInput `pulumi:"principalName"`
	// Create the identity type of the access assignment, which can be a user or a user group.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// The ID of the target to create the resource range.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// Task target name.
	TargetName pulumi.StringInput `pulumi:"targetName"`
	// The path name of the task target in the resource directory.
	TargetPathName pulumi.StringInput `pulumi:"targetPathName"`
	// The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
	TargetType pulumi.StringInput `pulumi:"targetType"`
}

func (GetAccessAssignmentsAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessAssignmentsAssignment)(nil)).Elem()
}

func (i GetAccessAssignmentsAssignmentArgs) ToGetAccessAssignmentsAssignmentOutput() GetAccessAssignmentsAssignmentOutput {
	return i.ToGetAccessAssignmentsAssignmentOutputWithContext(context.Background())
}

func (i GetAccessAssignmentsAssignmentArgs) ToGetAccessAssignmentsAssignmentOutputWithContext(ctx context.Context) GetAccessAssignmentsAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessAssignmentsAssignmentOutput)
}

// GetAccessAssignmentsAssignmentArrayInput is an input type that accepts GetAccessAssignmentsAssignmentArray and GetAccessAssignmentsAssignmentArrayOutput values.
// You can construct a concrete instance of `GetAccessAssignmentsAssignmentArrayInput` via:
//
//	GetAccessAssignmentsAssignmentArray{ GetAccessAssignmentsAssignmentArgs{...} }
type GetAccessAssignmentsAssignmentArrayInput interface {
	pulumi.Input

	ToGetAccessAssignmentsAssignmentArrayOutput() GetAccessAssignmentsAssignmentArrayOutput
	ToGetAccessAssignmentsAssignmentArrayOutputWithContext(context.Context) GetAccessAssignmentsAssignmentArrayOutput
}

type GetAccessAssignmentsAssignmentArray []GetAccessAssignmentsAssignmentInput

func (GetAccessAssignmentsAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessAssignmentsAssignment)(nil)).Elem()
}

func (i GetAccessAssignmentsAssignmentArray) ToGetAccessAssignmentsAssignmentArrayOutput() GetAccessAssignmentsAssignmentArrayOutput {
	return i.ToGetAccessAssignmentsAssignmentArrayOutputWithContext(context.Background())
}

func (i GetAccessAssignmentsAssignmentArray) ToGetAccessAssignmentsAssignmentArrayOutputWithContext(ctx context.Context) GetAccessAssignmentsAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessAssignmentsAssignmentArrayOutput)
}

type GetAccessAssignmentsAssignmentOutput struct{ *pulumi.OutputState }

func (GetAccessAssignmentsAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessAssignmentsAssignment)(nil)).Elem()
}

func (o GetAccessAssignmentsAssignmentOutput) ToGetAccessAssignmentsAssignmentOutput() GetAccessAssignmentsAssignmentOutput {
	return o
}

func (o GetAccessAssignmentsAssignmentOutput) ToGetAccessAssignmentsAssignmentOutputWithContext(ctx context.Context) GetAccessAssignmentsAssignmentOutput {
	return o
}

// Access configuration ID.
func (o GetAccessAssignmentsAssignmentOutput) AccessConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.AccessConfigurationId }).(pulumi.StringOutput)
}

// The name of the access configuration.
func (o GetAccessAssignmentsAssignmentOutput) AccessConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.AccessConfigurationName }).(pulumi.StringOutput)
}

// Directory ID.
func (o GetAccessAssignmentsAssignmentOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ID of the Access Assignment.
func (o GetAccessAssignmentsAssignmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the access assignment.
func (o GetAccessAssignmentsAssignmentOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Cloud SSO identity name.
func (o GetAccessAssignmentsAssignmentOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// Create the identity type of the access assignment, which can be a user or a user group.
func (o GetAccessAssignmentsAssignmentOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// The ID of the target to create the resource range.
func (o GetAccessAssignmentsAssignmentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.TargetId }).(pulumi.StringOutput)
}

// Task target name.
func (o GetAccessAssignmentsAssignmentOutput) TargetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.TargetName }).(pulumi.StringOutput)
}

// The path name of the task target in the resource directory.
func (o GetAccessAssignmentsAssignmentOutput) TargetPathName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.TargetPathName }).(pulumi.StringOutput)
}

// The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
func (o GetAccessAssignmentsAssignmentOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessAssignmentsAssignment) string { return v.TargetType }).(pulumi.StringOutput)
}

type GetAccessAssignmentsAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetAccessAssignmentsAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessAssignmentsAssignment)(nil)).Elem()
}

func (o GetAccessAssignmentsAssignmentArrayOutput) ToGetAccessAssignmentsAssignmentArrayOutput() GetAccessAssignmentsAssignmentArrayOutput {
	return o
}

func (o GetAccessAssignmentsAssignmentArrayOutput) ToGetAccessAssignmentsAssignmentArrayOutputWithContext(ctx context.Context) GetAccessAssignmentsAssignmentArrayOutput {
	return o
}

func (o GetAccessAssignmentsAssignmentArrayOutput) Index(i pulumi.IntInput) GetAccessAssignmentsAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessAssignmentsAssignment {
		return vs[0].([]GetAccessAssignmentsAssignment)[vs[1].(int)]
	}).(GetAccessAssignmentsAssignmentOutput)
}

type GetAccessConfigurationsConfiguration struct {
	// The AccessConfigurationId of the Access Configuration.
	AccessConfigurationId string `pulumi:"accessConfigurationId"`
	// The AccessConfigurationName of the Access Configuration.
	AccessConfigurationName string `pulumi:"accessConfigurationName"`
	// The Created Time of the Directory.
	CreateTime string `pulumi:"createTime"`
	// The Description of the Directory.
	Description string `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the Access Configuration.
	Id string `pulumi:"id"`
	// The Policy List.
	PermissionPolicies []GetAccessConfigurationsConfigurationPermissionPolicy `pulumi:"permissionPolicies"`
	// The RelayState of the Access Configuration.
	RelayState string `pulumi:"relayState"`
	// The SessionDuration of the Access Configuration.
	SessionDuration int `pulumi:"sessionDuration"`
	// The StatusNotifications of the Access Configuration.
	StatusNotifications []string `pulumi:"statusNotifications"`
}

// GetAccessConfigurationsConfigurationInput is an input type that accepts GetAccessConfigurationsConfigurationArgs and GetAccessConfigurationsConfigurationOutput values.
// You can construct a concrete instance of `GetAccessConfigurationsConfigurationInput` via:
//
//	GetAccessConfigurationsConfigurationArgs{...}
type GetAccessConfigurationsConfigurationInput interface {
	pulumi.Input

	ToGetAccessConfigurationsConfigurationOutput() GetAccessConfigurationsConfigurationOutput
	ToGetAccessConfigurationsConfigurationOutputWithContext(context.Context) GetAccessConfigurationsConfigurationOutput
}

type GetAccessConfigurationsConfigurationArgs struct {
	// The AccessConfigurationId of the Access Configuration.
	AccessConfigurationId pulumi.StringInput `pulumi:"accessConfigurationId"`
	// The AccessConfigurationName of the Access Configuration.
	AccessConfigurationName pulumi.StringInput `pulumi:"accessConfigurationName"`
	// The Created Time of the Directory.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The Description of the Directory.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The ID of the Access Configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The Policy List.
	PermissionPolicies GetAccessConfigurationsConfigurationPermissionPolicyArrayInput `pulumi:"permissionPolicies"`
	// The RelayState of the Access Configuration.
	RelayState pulumi.StringInput `pulumi:"relayState"`
	// The SessionDuration of the Access Configuration.
	SessionDuration pulumi.IntInput `pulumi:"sessionDuration"`
	// The StatusNotifications of the Access Configuration.
	StatusNotifications pulumi.StringArrayInput `pulumi:"statusNotifications"`
}

func (GetAccessConfigurationsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessConfigurationsConfiguration)(nil)).Elem()
}

func (i GetAccessConfigurationsConfigurationArgs) ToGetAccessConfigurationsConfigurationOutput() GetAccessConfigurationsConfigurationOutput {
	return i.ToGetAccessConfigurationsConfigurationOutputWithContext(context.Background())
}

func (i GetAccessConfigurationsConfigurationArgs) ToGetAccessConfigurationsConfigurationOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessConfigurationsConfigurationOutput)
}

// GetAccessConfigurationsConfigurationArrayInput is an input type that accepts GetAccessConfigurationsConfigurationArray and GetAccessConfigurationsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAccessConfigurationsConfigurationArrayInput` via:
//
//	GetAccessConfigurationsConfigurationArray{ GetAccessConfigurationsConfigurationArgs{...} }
type GetAccessConfigurationsConfigurationArrayInput interface {
	pulumi.Input

	ToGetAccessConfigurationsConfigurationArrayOutput() GetAccessConfigurationsConfigurationArrayOutput
	ToGetAccessConfigurationsConfigurationArrayOutputWithContext(context.Context) GetAccessConfigurationsConfigurationArrayOutput
}

type GetAccessConfigurationsConfigurationArray []GetAccessConfigurationsConfigurationInput

func (GetAccessConfigurationsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessConfigurationsConfiguration)(nil)).Elem()
}

func (i GetAccessConfigurationsConfigurationArray) ToGetAccessConfigurationsConfigurationArrayOutput() GetAccessConfigurationsConfigurationArrayOutput {
	return i.ToGetAccessConfigurationsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAccessConfigurationsConfigurationArray) ToGetAccessConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessConfigurationsConfigurationArrayOutput)
}

type GetAccessConfigurationsConfigurationOutput struct{ *pulumi.OutputState }

func (GetAccessConfigurationsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessConfigurationsConfiguration)(nil)).Elem()
}

func (o GetAccessConfigurationsConfigurationOutput) ToGetAccessConfigurationsConfigurationOutput() GetAccessConfigurationsConfigurationOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationOutput) ToGetAccessConfigurationsConfigurationOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationOutput {
	return o
}

// The AccessConfigurationId of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) AccessConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.AccessConfigurationId }).(pulumi.StringOutput)
}

// The AccessConfigurationName of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) AccessConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.AccessConfigurationName }).(pulumi.StringOutput)
}

// The Created Time of the Directory.
func (o GetAccessConfigurationsConfigurationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The Description of the Directory.
func (o GetAccessConfigurationsConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Directory.
func (o GetAccessConfigurationsConfigurationOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ID of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The Policy List.
func (o GetAccessConfigurationsConfigurationOutput) PermissionPolicies() GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) []GetAccessConfigurationsConfigurationPermissionPolicy {
		return v.PermissionPolicies
	}).(GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput)
}

// The RelayState of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) RelayState() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) string { return v.RelayState }).(pulumi.StringOutput)
}

// The SessionDuration of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) SessionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) int { return v.SessionDuration }).(pulumi.IntOutput)
}

// The StatusNotifications of the Access Configuration.
func (o GetAccessConfigurationsConfigurationOutput) StatusNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfiguration) []string { return v.StatusNotifications }).(pulumi.StringArrayOutput)
}

type GetAccessConfigurationsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAccessConfigurationsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessConfigurationsConfiguration)(nil)).Elem()
}

func (o GetAccessConfigurationsConfigurationArrayOutput) ToGetAccessConfigurationsConfigurationArrayOutput() GetAccessConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationArrayOutput) ToGetAccessConfigurationsConfigurationArrayOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationArrayOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationArrayOutput) Index(i pulumi.IntInput) GetAccessConfigurationsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessConfigurationsConfiguration {
		return vs[0].([]GetAccessConfigurationsConfiguration)[vs[1].(int)]
	}).(GetAccessConfigurationsConfigurationOutput)
}

type GetAccessConfigurationsConfigurationPermissionPolicy struct {
	// The Creation time of policy.
	AddTime string `pulumi:"addTime"`
	// The Content of Policy.
	PermissionPolicyDocument string `pulumi:"permissionPolicyDocument"`
	// The Policy Name of policy.
	PermissionPolicyName string `pulumi:"permissionPolicyName"`
	// The Policy Type of policy. Valid values: `System`, `Inline`.
	PermissionPolicyType string `pulumi:"permissionPolicyType"`
}

// GetAccessConfigurationsConfigurationPermissionPolicyInput is an input type that accepts GetAccessConfigurationsConfigurationPermissionPolicyArgs and GetAccessConfigurationsConfigurationPermissionPolicyOutput values.
// You can construct a concrete instance of `GetAccessConfigurationsConfigurationPermissionPolicyInput` via:
//
//	GetAccessConfigurationsConfigurationPermissionPolicyArgs{...}
type GetAccessConfigurationsConfigurationPermissionPolicyInput interface {
	pulumi.Input

	ToGetAccessConfigurationsConfigurationPermissionPolicyOutput() GetAccessConfigurationsConfigurationPermissionPolicyOutput
	ToGetAccessConfigurationsConfigurationPermissionPolicyOutputWithContext(context.Context) GetAccessConfigurationsConfigurationPermissionPolicyOutput
}

type GetAccessConfigurationsConfigurationPermissionPolicyArgs struct {
	// The Creation time of policy.
	AddTime pulumi.StringInput `pulumi:"addTime"`
	// The Content of Policy.
	PermissionPolicyDocument pulumi.StringInput `pulumi:"permissionPolicyDocument"`
	// The Policy Name of policy.
	PermissionPolicyName pulumi.StringInput `pulumi:"permissionPolicyName"`
	// The Policy Type of policy. Valid values: `System`, `Inline`.
	PermissionPolicyType pulumi.StringInput `pulumi:"permissionPolicyType"`
}

func (GetAccessConfigurationsConfigurationPermissionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessConfigurationsConfigurationPermissionPolicy)(nil)).Elem()
}

func (i GetAccessConfigurationsConfigurationPermissionPolicyArgs) ToGetAccessConfigurationsConfigurationPermissionPolicyOutput() GetAccessConfigurationsConfigurationPermissionPolicyOutput {
	return i.ToGetAccessConfigurationsConfigurationPermissionPolicyOutputWithContext(context.Background())
}

func (i GetAccessConfigurationsConfigurationPermissionPolicyArgs) ToGetAccessConfigurationsConfigurationPermissionPolicyOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationPermissionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessConfigurationsConfigurationPermissionPolicyOutput)
}

// GetAccessConfigurationsConfigurationPermissionPolicyArrayInput is an input type that accepts GetAccessConfigurationsConfigurationPermissionPolicyArray and GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput values.
// You can construct a concrete instance of `GetAccessConfigurationsConfigurationPermissionPolicyArrayInput` via:
//
//	GetAccessConfigurationsConfigurationPermissionPolicyArray{ GetAccessConfigurationsConfigurationPermissionPolicyArgs{...} }
type GetAccessConfigurationsConfigurationPermissionPolicyArrayInput interface {
	pulumi.Input

	ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutput() GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput
	ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutputWithContext(context.Context) GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput
}

type GetAccessConfigurationsConfigurationPermissionPolicyArray []GetAccessConfigurationsConfigurationPermissionPolicyInput

func (GetAccessConfigurationsConfigurationPermissionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessConfigurationsConfigurationPermissionPolicy)(nil)).Elem()
}

func (i GetAccessConfigurationsConfigurationPermissionPolicyArray) ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutput() GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput {
	return i.ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutputWithContext(context.Background())
}

func (i GetAccessConfigurationsConfigurationPermissionPolicyArray) ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput)
}

type GetAccessConfigurationsConfigurationPermissionPolicyOutput struct{ *pulumi.OutputState }

func (GetAccessConfigurationsConfigurationPermissionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessConfigurationsConfigurationPermissionPolicy)(nil)).Elem()
}

func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) ToGetAccessConfigurationsConfigurationPermissionPolicyOutput() GetAccessConfigurationsConfigurationPermissionPolicyOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) ToGetAccessConfigurationsConfigurationPermissionPolicyOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationPermissionPolicyOutput {
	return o
}

// The Creation time of policy.
func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) AddTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfigurationPermissionPolicy) string { return v.AddTime }).(pulumi.StringOutput)
}

// The Content of Policy.
func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) PermissionPolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfigurationPermissionPolicy) string { return v.PermissionPolicyDocument }).(pulumi.StringOutput)
}

// The Policy Name of policy.
func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) PermissionPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfigurationPermissionPolicy) string { return v.PermissionPolicyName }).(pulumi.StringOutput)
}

// The Policy Type of policy. Valid values: `System`, `Inline`.
func (o GetAccessConfigurationsConfigurationPermissionPolicyOutput) PermissionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessConfigurationsConfigurationPermissionPolicy) string { return v.PermissionPolicyType }).(pulumi.StringOutput)
}

type GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessConfigurationsConfigurationPermissionPolicy)(nil)).Elem()
}

func (o GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput) ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutput() GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput) ToGetAccessConfigurationsConfigurationPermissionPolicyArrayOutputWithContext(ctx context.Context) GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput {
	return o
}

func (o GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput) Index(i pulumi.IntInput) GetAccessConfigurationsConfigurationPermissionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessConfigurationsConfigurationPermissionPolicy {
		return vs[0].([]GetAccessConfigurationsConfigurationPermissionPolicy)[vs[1].(int)]
	}).(GetAccessConfigurationsConfigurationPermissionPolicyOutput)
}

type GetDirectoriesDirectory struct {
	// The CreateTime of the CloudSSO directory.
	CreateTime string `pulumi:"createTime"`
	// The DirectoryId of the CloudSSO directory.
	DirectoryId string `pulumi:"directoryId"`
	// The name of the CloudSSO directory.
	DirectoryName string `pulumi:"directoryName"`
	// The ID of the Directory.
	Id string `pulumi:"id"`
	// The mfa authentication status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	MfaAuthenticationStatus string `pulumi:"mfaAuthenticationStatus"`
	// The Region of the CloudSSO directory.
	Region string `pulumi:"region"`
	// The saml identity provider configuration.
	SamlIdentityProviderConfigurations []GetDirectoriesDirectorySamlIdentityProviderConfiguration `pulumi:"samlIdentityProviderConfigurations"`
	// The scim synchronization status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	ScimSynchronizationStatus string `pulumi:"scimSynchronizationStatus"`
	// Asynchronous Task Information Array.
	Tasks []GetDirectoriesDirectoryTask `pulumi:"tasks"`
}

// GetDirectoriesDirectoryInput is an input type that accepts GetDirectoriesDirectoryArgs and GetDirectoriesDirectoryOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectoryInput` via:
//
//	GetDirectoriesDirectoryArgs{...}
type GetDirectoriesDirectoryInput interface {
	pulumi.Input

	ToGetDirectoriesDirectoryOutput() GetDirectoriesDirectoryOutput
	ToGetDirectoriesDirectoryOutputWithContext(context.Context) GetDirectoriesDirectoryOutput
}

type GetDirectoriesDirectoryArgs struct {
	// The CreateTime of the CloudSSO directory.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The DirectoryId of the CloudSSO directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The name of the CloudSSO directory.
	DirectoryName pulumi.StringInput `pulumi:"directoryName"`
	// The ID of the Directory.
	Id pulumi.StringInput `pulumi:"id"`
	// The mfa authentication status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	MfaAuthenticationStatus pulumi.StringInput `pulumi:"mfaAuthenticationStatus"`
	// The Region of the CloudSSO directory.
	Region pulumi.StringInput `pulumi:"region"`
	// The saml identity provider configuration.
	SamlIdentityProviderConfigurations GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayInput `pulumi:"samlIdentityProviderConfigurations"`
	// The scim synchronization status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	ScimSynchronizationStatus pulumi.StringInput `pulumi:"scimSynchronizationStatus"`
	// Asynchronous Task Information Array.
	Tasks GetDirectoriesDirectoryTaskArrayInput `pulumi:"tasks"`
}

func (GetDirectoriesDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectory)(nil)).Elem()
}

func (i GetDirectoriesDirectoryArgs) ToGetDirectoriesDirectoryOutput() GetDirectoriesDirectoryOutput {
	return i.ToGetDirectoriesDirectoryOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectoryArgs) ToGetDirectoriesDirectoryOutputWithContext(ctx context.Context) GetDirectoriesDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectoryOutput)
}

// GetDirectoriesDirectoryArrayInput is an input type that accepts GetDirectoriesDirectoryArray and GetDirectoriesDirectoryArrayOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectoryArrayInput` via:
//
//	GetDirectoriesDirectoryArray{ GetDirectoriesDirectoryArgs{...} }
type GetDirectoriesDirectoryArrayInput interface {
	pulumi.Input

	ToGetDirectoriesDirectoryArrayOutput() GetDirectoriesDirectoryArrayOutput
	ToGetDirectoriesDirectoryArrayOutputWithContext(context.Context) GetDirectoriesDirectoryArrayOutput
}

type GetDirectoriesDirectoryArray []GetDirectoriesDirectoryInput

func (GetDirectoriesDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectory)(nil)).Elem()
}

func (i GetDirectoriesDirectoryArray) ToGetDirectoriesDirectoryArrayOutput() GetDirectoriesDirectoryArrayOutput {
	return i.ToGetDirectoriesDirectoryArrayOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectoryArray) ToGetDirectoriesDirectoryArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectoryArrayOutput)
}

type GetDirectoriesDirectoryOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectory)(nil)).Elem()
}

func (o GetDirectoriesDirectoryOutput) ToGetDirectoriesDirectoryOutput() GetDirectoriesDirectoryOutput {
	return o
}

func (o GetDirectoriesDirectoryOutput) ToGetDirectoriesDirectoryOutputWithContext(ctx context.Context) GetDirectoriesDirectoryOutput {
	return o
}

// The CreateTime of the CloudSSO directory.
func (o GetDirectoriesDirectoryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The DirectoryId of the CloudSSO directory.
func (o GetDirectoriesDirectoryOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The name of the CloudSSO directory.
func (o GetDirectoriesDirectoryOutput) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.DirectoryName }).(pulumi.StringOutput)
}

// The ID of the Directory.
func (o GetDirectoriesDirectoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.Id }).(pulumi.StringOutput)
}

// The mfa authentication status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
func (o GetDirectoriesDirectoryOutput) MfaAuthenticationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.MfaAuthenticationStatus }).(pulumi.StringOutput)
}

// The Region of the CloudSSO directory.
func (o GetDirectoriesDirectoryOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.Region }).(pulumi.StringOutput)
}

// The saml identity provider configuration.
func (o GetDirectoriesDirectoryOutput) SamlIdentityProviderConfigurations() GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) []GetDirectoriesDirectorySamlIdentityProviderConfiguration {
		return v.SamlIdentityProviderConfigurations
	}).(GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput)
}

// The scim synchronization status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
func (o GetDirectoriesDirectoryOutput) ScimSynchronizationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) string { return v.ScimSynchronizationStatus }).(pulumi.StringOutput)
}

// Asynchronous Task Information Array.
func (o GetDirectoriesDirectoryOutput) Tasks() GetDirectoriesDirectoryTaskArrayOutput {
	return o.ApplyT(func(v GetDirectoriesDirectory) []GetDirectoriesDirectoryTask { return v.Tasks }).(GetDirectoriesDirectoryTaskArrayOutput)
}

type GetDirectoriesDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectory)(nil)).Elem()
}

func (o GetDirectoriesDirectoryArrayOutput) ToGetDirectoriesDirectoryArrayOutput() GetDirectoriesDirectoryArrayOutput {
	return o
}

func (o GetDirectoriesDirectoryArrayOutput) ToGetDirectoriesDirectoryArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectoryArrayOutput {
	return o
}

func (o GetDirectoriesDirectoryArrayOutput) Index(i pulumi.IntInput) GetDirectoriesDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoriesDirectory {
		return vs[0].([]GetDirectoriesDirectory)[vs[1].(int)]
	}).(GetDirectoriesDirectoryOutput)
}

type GetDirectoriesDirectorySamlIdentityProviderConfiguration struct {
	// Saml identifies the creation time of the provider configuration.
	CreateTime string `pulumi:"createTime"`
	// Base64 encoded IdP metadata document.
	EncodedMetadataDocument string `pulumi:"encodedMetadataDocument"`
	// SAML IdPEntityID.
	EntityId string `pulumi:"entityId"`
	// SAML IdP http-post Binding address.
	LoginUrl string `pulumi:"loginUrl"`
	// SAML SSO login enabled status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	SsoStatus string `pulumi:"ssoStatus"`
}

// GetDirectoriesDirectorySamlIdentityProviderConfigurationInput is an input type that accepts GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs and GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectorySamlIdentityProviderConfigurationInput` via:
//
//	GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs{...}
type GetDirectoriesDirectorySamlIdentityProviderConfigurationInput interface {
	pulumi.Input

	ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput
	ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutputWithContext(context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput
}

type GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs struct {
	// Saml identifies the creation time of the provider configuration.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Base64 encoded IdP metadata document.
	EncodedMetadataDocument pulumi.StringInput `pulumi:"encodedMetadataDocument"`
	// SAML IdPEntityID.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// SAML IdP http-post Binding address.
	LoginUrl pulumi.StringInput `pulumi:"loginUrl"`
	// SAML SSO login enabled status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
	SsoStatus pulumi.StringInput `pulumi:"ssoStatus"`
}

func (GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (i GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput {
	return i.ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutputWithContext(ctx context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput)
}

// GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayInput is an input type that accepts GetDirectoriesDirectorySamlIdentityProviderConfigurationArray and GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayInput` via:
//
//	GetDirectoriesDirectorySamlIdentityProviderConfigurationArray{ GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs{...} }
type GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayInput interface {
	pulumi.Input

	ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput
	ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutputWithContext(context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput
}

type GetDirectoriesDirectorySamlIdentityProviderConfigurationArray []GetDirectoriesDirectorySamlIdentityProviderConfigurationInput

func (GetDirectoriesDirectorySamlIdentityProviderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (i GetDirectoriesDirectorySamlIdentityProviderConfigurationArray) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput {
	return i.ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectorySamlIdentityProviderConfigurationArray) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput)
}

type GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput {
	return o
}

func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationOutputWithContext(ctx context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput {
	return o
}

// Saml identifies the creation time of the provider configuration.
func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectorySamlIdentityProviderConfiguration) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Base64 encoded IdP metadata document.
func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) EncodedMetadataDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectorySamlIdentityProviderConfiguration) string {
		return v.EncodedMetadataDocument
	}).(pulumi.StringOutput)
}

// SAML IdPEntityID.
func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectorySamlIdentityProviderConfiguration) string { return v.EntityId }).(pulumi.StringOutput)
}

// SAML IdP http-post Binding address.
func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectorySamlIdentityProviderConfiguration) string { return v.LoginUrl }).(pulumi.StringOutput)
}

// SAML SSO login enabled status. Valid values: `Enabled` or `Disabled`. Default to `Disabled`.
func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput) SsoStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectorySamlIdentityProviderConfiguration) string { return v.SsoStatus }).(pulumi.StringOutput)
}

type GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectorySamlIdentityProviderConfiguration)(nil)).Elem()
}

func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput() GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput {
	return o
}

func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput) ToGetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput {
	return o
}

func (o GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput) Index(i pulumi.IntInput) GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoriesDirectorySamlIdentityProviderConfiguration {
		return vs[0].([]GetDirectoriesDirectorySamlIdentityProviderConfiguration)[vs[1].(int)]
	}).(GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput)
}

type GetDirectoriesDirectoryTask struct {
	// The ID of Access Configuration.
	AccessConfigurationId string `pulumi:"accessConfigurationId"`
	// The Name of Access Configuration.
	AccessConfigurationName string `pulumi:"accessConfigurationName"`
	// The End Time of Task.
	EndTime string `pulumi:"endTime"`
	// the Reason for the Failure of  the task.
	FailureReason string `pulumi:"failureReason"`
	// The ID of Cloud SSO Identity.
	PrincipalId string `pulumi:"principalId"`
	// The Name of Cloud SSO Identity.
	PrincipalName string `pulumi:"principalName"`
	// The Type of Cloud SSO Identity.
	PrincipalType string `pulumi:"principalType"`
	// The Start Time of Task.
	StartTime string `pulumi:"startTime"`
	// The Task Status.
	Status string `pulumi:"status"`
	// The Id of deploy target.
	TargetId string `pulumi:"targetId"`
	// The Name of Deploy Target.
	TargetName string `pulumi:"targetName"`
	// The Path in RD of Deploy Target.
	TargetPath string `pulumi:"targetPath"`
	// The Type of Deploy Target.
	TargetType string `pulumi:"targetType"`
	// The ID of the Task.
	TaskId string `pulumi:"taskId"`
	// The Type of the Task.
	TaskType string `pulumi:"taskType"`
}

// GetDirectoriesDirectoryTaskInput is an input type that accepts GetDirectoriesDirectoryTaskArgs and GetDirectoriesDirectoryTaskOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectoryTaskInput` via:
//
//	GetDirectoriesDirectoryTaskArgs{...}
type GetDirectoriesDirectoryTaskInput interface {
	pulumi.Input

	ToGetDirectoriesDirectoryTaskOutput() GetDirectoriesDirectoryTaskOutput
	ToGetDirectoriesDirectoryTaskOutputWithContext(context.Context) GetDirectoriesDirectoryTaskOutput
}

type GetDirectoriesDirectoryTaskArgs struct {
	// The ID of Access Configuration.
	AccessConfigurationId pulumi.StringInput `pulumi:"accessConfigurationId"`
	// The Name of Access Configuration.
	AccessConfigurationName pulumi.StringInput `pulumi:"accessConfigurationName"`
	// The End Time of Task.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// the Reason for the Failure of  the task.
	FailureReason pulumi.StringInput `pulumi:"failureReason"`
	// The ID of Cloud SSO Identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Name of Cloud SSO Identity.
	PrincipalName pulumi.StringInput `pulumi:"principalName"`
	// The Type of Cloud SSO Identity.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// The Start Time of Task.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The Task Status.
	Status pulumi.StringInput `pulumi:"status"`
	// The Id of deploy target.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The Name of Deploy Target.
	TargetName pulumi.StringInput `pulumi:"targetName"`
	// The Path in RD of Deploy Target.
	TargetPath pulumi.StringInput `pulumi:"targetPath"`
	// The Type of Deploy Target.
	TargetType pulumi.StringInput `pulumi:"targetType"`
	// The ID of the Task.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// The Type of the Task.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetDirectoriesDirectoryTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectoryTask)(nil)).Elem()
}

func (i GetDirectoriesDirectoryTaskArgs) ToGetDirectoriesDirectoryTaskOutput() GetDirectoriesDirectoryTaskOutput {
	return i.ToGetDirectoriesDirectoryTaskOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectoryTaskArgs) ToGetDirectoriesDirectoryTaskOutputWithContext(ctx context.Context) GetDirectoriesDirectoryTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectoryTaskOutput)
}

// GetDirectoriesDirectoryTaskArrayInput is an input type that accepts GetDirectoriesDirectoryTaskArray and GetDirectoriesDirectoryTaskArrayOutput values.
// You can construct a concrete instance of `GetDirectoriesDirectoryTaskArrayInput` via:
//
//	GetDirectoriesDirectoryTaskArray{ GetDirectoriesDirectoryTaskArgs{...} }
type GetDirectoriesDirectoryTaskArrayInput interface {
	pulumi.Input

	ToGetDirectoriesDirectoryTaskArrayOutput() GetDirectoriesDirectoryTaskArrayOutput
	ToGetDirectoriesDirectoryTaskArrayOutputWithContext(context.Context) GetDirectoriesDirectoryTaskArrayOutput
}

type GetDirectoriesDirectoryTaskArray []GetDirectoriesDirectoryTaskInput

func (GetDirectoriesDirectoryTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectoryTask)(nil)).Elem()
}

func (i GetDirectoriesDirectoryTaskArray) ToGetDirectoriesDirectoryTaskArrayOutput() GetDirectoriesDirectoryTaskArrayOutput {
	return i.ToGetDirectoriesDirectoryTaskArrayOutputWithContext(context.Background())
}

func (i GetDirectoriesDirectoryTaskArray) ToGetDirectoriesDirectoryTaskArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectoryTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesDirectoryTaskArrayOutput)
}

type GetDirectoriesDirectoryTaskOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectoryTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesDirectoryTask)(nil)).Elem()
}

func (o GetDirectoriesDirectoryTaskOutput) ToGetDirectoriesDirectoryTaskOutput() GetDirectoriesDirectoryTaskOutput {
	return o
}

func (o GetDirectoriesDirectoryTaskOutput) ToGetDirectoriesDirectoryTaskOutputWithContext(ctx context.Context) GetDirectoriesDirectoryTaskOutput {
	return o
}

// The ID of Access Configuration.
func (o GetDirectoriesDirectoryTaskOutput) AccessConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.AccessConfigurationId }).(pulumi.StringOutput)
}

// The Name of Access Configuration.
func (o GetDirectoriesDirectoryTaskOutput) AccessConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.AccessConfigurationName }).(pulumi.StringOutput)
}

// The End Time of Task.
func (o GetDirectoriesDirectoryTaskOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.EndTime }).(pulumi.StringOutput)
}

// the Reason for the Failure of  the task.
func (o GetDirectoriesDirectoryTaskOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.FailureReason }).(pulumi.StringOutput)
}

// The ID of Cloud SSO Identity.
func (o GetDirectoriesDirectoryTaskOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Name of Cloud SSO Identity.
func (o GetDirectoriesDirectoryTaskOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// The Type of Cloud SSO Identity.
func (o GetDirectoriesDirectoryTaskOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// The Start Time of Task.
func (o GetDirectoriesDirectoryTaskOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.StartTime }).(pulumi.StringOutput)
}

// The Task Status.
func (o GetDirectoriesDirectoryTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.Status }).(pulumi.StringOutput)
}

// The Id of deploy target.
func (o GetDirectoriesDirectoryTaskOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TargetId }).(pulumi.StringOutput)
}

// The Name of Deploy Target.
func (o GetDirectoriesDirectoryTaskOutput) TargetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TargetName }).(pulumi.StringOutput)
}

// The Path in RD of Deploy Target.
func (o GetDirectoriesDirectoryTaskOutput) TargetPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TargetPath }).(pulumi.StringOutput)
}

// The Type of Deploy Target.
func (o GetDirectoriesDirectoryTaskOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TargetType }).(pulumi.StringOutput)
}

// The ID of the Task.
func (o GetDirectoriesDirectoryTaskOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TaskId }).(pulumi.StringOutput)
}

// The Type of the Task.
func (o GetDirectoriesDirectoryTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesDirectoryTask) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetDirectoriesDirectoryTaskArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoriesDirectoryTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesDirectoryTask)(nil)).Elem()
}

func (o GetDirectoriesDirectoryTaskArrayOutput) ToGetDirectoriesDirectoryTaskArrayOutput() GetDirectoriesDirectoryTaskArrayOutput {
	return o
}

func (o GetDirectoriesDirectoryTaskArrayOutput) ToGetDirectoriesDirectoryTaskArrayOutputWithContext(ctx context.Context) GetDirectoriesDirectoryTaskArrayOutput {
	return o
}

func (o GetDirectoriesDirectoryTaskArrayOutput) Index(i pulumi.IntInput) GetDirectoriesDirectoryTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoriesDirectoryTask {
		return vs[0].([]GetDirectoriesDirectoryTask)[vs[1].(int)]
	}).(GetDirectoriesDirectoryTaskOutput)
}

type GetGroupsGroup struct {
	// The Created Time of the Directory.
	CreateTime string `pulumi:"createTime"`
	// The Description of the Directory.
	Description string `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// The Group ID of the group.
	GroupId string `pulumi:"groupId"`
	// The Name of the group.
	GroupName string `pulumi:"groupName"`
	// The ID of the Group.
	Id string `pulumi:"id"`
	// The Provision Type of the Group. Valid values: `Manual`, `Synchronized`.
	ProvisionType string `pulumi:"provisionType"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//	GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// The Created Time of the Directory.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The Description of the Directory.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The Group ID of the group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The Name of the group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The ID of the Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The Provision Type of the Group. Valid values: `Manual`, `Synchronized`.
	ProvisionType pulumi.StringInput `pulumi:"provisionType"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//	GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// The Created Time of the Directory.
func (o GetGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The Description of the Directory.
func (o GetGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Directory.
func (o GetGroupsGroupOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The Group ID of the group.
func (o GetGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The Name of the group.
func (o GetGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// The ID of the Group.
func (o GetGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The Provision Type of the Group. Valid values: `Manual`, `Synchronized`.
func (o GetGroupsGroupOutput) ProvisionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.ProvisionType }).(pulumi.StringOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetScimServerCredentialsCredential struct {
	// The CreateTime of the resource.
	CreateTime string `pulumi:"createTime"`
	// The CredentialId of the resource.
	CredentialId string `pulumi:"credentialId"`
	// The CredentialSecret of the resource.
	CredentialSecret string `pulumi:"credentialSecret"`
	// The CredentialType of the resource.
	CredentialType string `pulumi:"credentialType"`
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ExpireTime of the resource.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of the SCIM Server Credential.
	Id string `pulumi:"id"`
	// The Status of the resource. Valid values: `Disabled`, `Enabled`.
	Status string `pulumi:"status"`
}

// GetScimServerCredentialsCredentialInput is an input type that accepts GetScimServerCredentialsCredentialArgs and GetScimServerCredentialsCredentialOutput values.
// You can construct a concrete instance of `GetScimServerCredentialsCredentialInput` via:
//
//	GetScimServerCredentialsCredentialArgs{...}
type GetScimServerCredentialsCredentialInput interface {
	pulumi.Input

	ToGetScimServerCredentialsCredentialOutput() GetScimServerCredentialsCredentialOutput
	ToGetScimServerCredentialsCredentialOutputWithContext(context.Context) GetScimServerCredentialsCredentialOutput
}

type GetScimServerCredentialsCredentialArgs struct {
	// The CreateTime of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The CredentialId of the resource.
	CredentialId pulumi.StringInput `pulumi:"credentialId"`
	// The CredentialSecret of the resource.
	CredentialSecret pulumi.StringInput `pulumi:"credentialSecret"`
	// The CredentialType of the resource.
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// The ID of the Directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The ExpireTime of the resource.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of the SCIM Server Credential.
	Id pulumi.StringInput `pulumi:"id"`
	// The Status of the resource. Valid values: `Disabled`, `Enabled`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetScimServerCredentialsCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScimServerCredentialsCredential)(nil)).Elem()
}

func (i GetScimServerCredentialsCredentialArgs) ToGetScimServerCredentialsCredentialOutput() GetScimServerCredentialsCredentialOutput {
	return i.ToGetScimServerCredentialsCredentialOutputWithContext(context.Background())
}

func (i GetScimServerCredentialsCredentialArgs) ToGetScimServerCredentialsCredentialOutputWithContext(ctx context.Context) GetScimServerCredentialsCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScimServerCredentialsCredentialOutput)
}

// GetScimServerCredentialsCredentialArrayInput is an input type that accepts GetScimServerCredentialsCredentialArray and GetScimServerCredentialsCredentialArrayOutput values.
// You can construct a concrete instance of `GetScimServerCredentialsCredentialArrayInput` via:
//
//	GetScimServerCredentialsCredentialArray{ GetScimServerCredentialsCredentialArgs{...} }
type GetScimServerCredentialsCredentialArrayInput interface {
	pulumi.Input

	ToGetScimServerCredentialsCredentialArrayOutput() GetScimServerCredentialsCredentialArrayOutput
	ToGetScimServerCredentialsCredentialArrayOutputWithContext(context.Context) GetScimServerCredentialsCredentialArrayOutput
}

type GetScimServerCredentialsCredentialArray []GetScimServerCredentialsCredentialInput

func (GetScimServerCredentialsCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScimServerCredentialsCredential)(nil)).Elem()
}

func (i GetScimServerCredentialsCredentialArray) ToGetScimServerCredentialsCredentialArrayOutput() GetScimServerCredentialsCredentialArrayOutput {
	return i.ToGetScimServerCredentialsCredentialArrayOutputWithContext(context.Background())
}

func (i GetScimServerCredentialsCredentialArray) ToGetScimServerCredentialsCredentialArrayOutputWithContext(ctx context.Context) GetScimServerCredentialsCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScimServerCredentialsCredentialArrayOutput)
}

type GetScimServerCredentialsCredentialOutput struct{ *pulumi.OutputState }

func (GetScimServerCredentialsCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScimServerCredentialsCredential)(nil)).Elem()
}

func (o GetScimServerCredentialsCredentialOutput) ToGetScimServerCredentialsCredentialOutput() GetScimServerCredentialsCredentialOutput {
	return o
}

func (o GetScimServerCredentialsCredentialOutput) ToGetScimServerCredentialsCredentialOutputWithContext(ctx context.Context) GetScimServerCredentialsCredentialOutput {
	return o
}

// The CreateTime of the resource.
func (o GetScimServerCredentialsCredentialOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The CredentialId of the resource.
func (o GetScimServerCredentialsCredentialOutput) CredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.CredentialId }).(pulumi.StringOutput)
}

// The CredentialSecret of the resource.
func (o GetScimServerCredentialsCredentialOutput) CredentialSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.CredentialSecret }).(pulumi.StringOutput)
}

// The CredentialType of the resource.
func (o GetScimServerCredentialsCredentialOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.CredentialType }).(pulumi.StringOutput)
}

// The ID of the Directory.
func (o GetScimServerCredentialsCredentialOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ExpireTime of the resource.
func (o GetScimServerCredentialsCredentialOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of the SCIM Server Credential.
func (o GetScimServerCredentialsCredentialOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.Id }).(pulumi.StringOutput)
}

// The Status of the resource. Valid values: `Disabled`, `Enabled`.
func (o GetScimServerCredentialsCredentialOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetScimServerCredentialsCredential) string { return v.Status }).(pulumi.StringOutput)
}

type GetScimServerCredentialsCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetScimServerCredentialsCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScimServerCredentialsCredential)(nil)).Elem()
}

func (o GetScimServerCredentialsCredentialArrayOutput) ToGetScimServerCredentialsCredentialArrayOutput() GetScimServerCredentialsCredentialArrayOutput {
	return o
}

func (o GetScimServerCredentialsCredentialArrayOutput) ToGetScimServerCredentialsCredentialArrayOutputWithContext(ctx context.Context) GetScimServerCredentialsCredentialArrayOutput {
	return o
}

func (o GetScimServerCredentialsCredentialArrayOutput) Index(i pulumi.IntInput) GetScimServerCredentialsCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScimServerCredentialsCredential {
		return vs[0].([]GetScimServerCredentialsCredential)[vs[1].(int)]
	}).(GetScimServerCredentialsCredentialOutput)
}

type GetUsersUser struct {
	// The create time of the user.
	CreateTime string `pulumi:"createTime"`
	// The description of user.
	Description string `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// The display name of user.
	DisplayName string `pulumi:"displayName"`
	// The User's Contact Email Address.
	Email string `pulumi:"email"`
	// The first name of user.
	FirstName string `pulumi:"firstName"`
	// The ID of the User.
	Id string `pulumi:"id"`
	// The last name of user.
	LastName string `pulumi:"lastName"`
	// The List of MFA Device for User.
	MfaDevices []GetUsersUserMfaDevice `pulumi:"mfaDevices"`
	// ProvisionType.
	ProvisionType string `pulumi:"provisionType"`
	// User status. Valid values: `Enabled` and `Disabled`.
	Status string `pulumi:"status"`
	// The User ID of the group.
	UserId string `pulumi:"userId"`
	// The name of user.
	UserName string `pulumi:"userName"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// The create time of the user.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of user.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The display name of user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The User's Contact Email Address.
	Email pulumi.StringInput `pulumi:"email"`
	// The first name of user.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// The ID of the User.
	Id pulumi.StringInput `pulumi:"id"`
	// The last name of user.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// The List of MFA Device for User.
	MfaDevices GetUsersUserMfaDeviceArrayInput `pulumi:"mfaDevices"`
	// ProvisionType.
	ProvisionType pulumi.StringInput `pulumi:"provisionType"`
	// User status. Valid values: `Enabled` and `Disabled`.
	Status pulumi.StringInput `pulumi:"status"`
	// The User ID of the group.
	UserId pulumi.StringInput `pulumi:"userId"`
	// The name of user.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// The create time of the user.
func (o GetUsersUserOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of user.
func (o GetUsersUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Directory.
func (o GetUsersUserOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The display name of user.
func (o GetUsersUserOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The User's Contact Email Address.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// The first name of user.
func (o GetUsersUserOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.FirstName }).(pulumi.StringOutput)
}

// The ID of the User.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// The last name of user.
func (o GetUsersUserOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastName }).(pulumi.StringOutput)
}

// The List of MFA Device for User.
func (o GetUsersUserOutput) MfaDevices() GetUsersUserMfaDeviceArrayOutput {
	return o.ApplyT(func(v GetUsersUser) []GetUsersUserMfaDevice { return v.MfaDevices }).(GetUsersUserMfaDeviceArrayOutput)
}

// ProvisionType.
func (o GetUsersUserOutput) ProvisionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ProvisionType }).(pulumi.StringOutput)
}

// User status. Valid values: `Enabled` and `Disabled`.
func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

// The User ID of the group.
func (o GetUsersUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserId }).(pulumi.StringOutput)
}

// The name of user.
func (o GetUsersUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.UserName }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

type GetUsersUserMfaDevice struct {
	// The MFA Device ID.
	DeviceId string `pulumi:"deviceId"`
	// The MFA Device Name.
	DeviceName string `pulumi:"deviceName"`
	// The MFA Device Type.
	DeviceType string `pulumi:"deviceType"`
	// The Effective Time of MFA Device.
	EffectiveTime string `pulumi:"effectiveTime"`
}

// GetUsersUserMfaDeviceInput is an input type that accepts GetUsersUserMfaDeviceArgs and GetUsersUserMfaDeviceOutput values.
// You can construct a concrete instance of `GetUsersUserMfaDeviceInput` via:
//
//	GetUsersUserMfaDeviceArgs{...}
type GetUsersUserMfaDeviceInput interface {
	pulumi.Input

	ToGetUsersUserMfaDeviceOutput() GetUsersUserMfaDeviceOutput
	ToGetUsersUserMfaDeviceOutputWithContext(context.Context) GetUsersUserMfaDeviceOutput
}

type GetUsersUserMfaDeviceArgs struct {
	// The MFA Device ID.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The MFA Device Name.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The MFA Device Type.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// The Effective Time of MFA Device.
	EffectiveTime pulumi.StringInput `pulumi:"effectiveTime"`
}

func (GetUsersUserMfaDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserMfaDevice)(nil)).Elem()
}

func (i GetUsersUserMfaDeviceArgs) ToGetUsersUserMfaDeviceOutput() GetUsersUserMfaDeviceOutput {
	return i.ToGetUsersUserMfaDeviceOutputWithContext(context.Background())
}

func (i GetUsersUserMfaDeviceArgs) ToGetUsersUserMfaDeviceOutputWithContext(ctx context.Context) GetUsersUserMfaDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserMfaDeviceOutput)
}

// GetUsersUserMfaDeviceArrayInput is an input type that accepts GetUsersUserMfaDeviceArray and GetUsersUserMfaDeviceArrayOutput values.
// You can construct a concrete instance of `GetUsersUserMfaDeviceArrayInput` via:
//
//	GetUsersUserMfaDeviceArray{ GetUsersUserMfaDeviceArgs{...} }
type GetUsersUserMfaDeviceArrayInput interface {
	pulumi.Input

	ToGetUsersUserMfaDeviceArrayOutput() GetUsersUserMfaDeviceArrayOutput
	ToGetUsersUserMfaDeviceArrayOutputWithContext(context.Context) GetUsersUserMfaDeviceArrayOutput
}

type GetUsersUserMfaDeviceArray []GetUsersUserMfaDeviceInput

func (GetUsersUserMfaDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserMfaDevice)(nil)).Elem()
}

func (i GetUsersUserMfaDeviceArray) ToGetUsersUserMfaDeviceArrayOutput() GetUsersUserMfaDeviceArrayOutput {
	return i.ToGetUsersUserMfaDeviceArrayOutputWithContext(context.Background())
}

func (i GetUsersUserMfaDeviceArray) ToGetUsersUserMfaDeviceArrayOutputWithContext(ctx context.Context) GetUsersUserMfaDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserMfaDeviceArrayOutput)
}

type GetUsersUserMfaDeviceOutput struct{ *pulumi.OutputState }

func (GetUsersUserMfaDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUserMfaDevice)(nil)).Elem()
}

func (o GetUsersUserMfaDeviceOutput) ToGetUsersUserMfaDeviceOutput() GetUsersUserMfaDeviceOutput {
	return o
}

func (o GetUsersUserMfaDeviceOutput) ToGetUsersUserMfaDeviceOutputWithContext(ctx context.Context) GetUsersUserMfaDeviceOutput {
	return o
}

// The MFA Device ID.
func (o GetUsersUserMfaDeviceOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserMfaDevice) string { return v.DeviceId }).(pulumi.StringOutput)
}

// The MFA Device Name.
func (o GetUsersUserMfaDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserMfaDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The MFA Device Type.
func (o GetUsersUserMfaDeviceOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserMfaDevice) string { return v.DeviceType }).(pulumi.StringOutput)
}

// The Effective Time of MFA Device.
func (o GetUsersUserMfaDeviceOutput) EffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUserMfaDevice) string { return v.EffectiveTime }).(pulumi.StringOutput)
}

type GetUsersUserMfaDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserMfaDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUserMfaDevice)(nil)).Elem()
}

func (o GetUsersUserMfaDeviceArrayOutput) ToGetUsersUserMfaDeviceArrayOutput() GetUsersUserMfaDeviceArrayOutput {
	return o
}

func (o GetUsersUserMfaDeviceArrayOutput) ToGetUsersUserMfaDeviceArrayOutputWithContext(ctx context.Context) GetUsersUserMfaDeviceArrayOutput {
	return o
}

func (o GetUsersUserMfaDeviceArrayOutput) Index(i pulumi.IntInput) GetUsersUserMfaDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUserMfaDevice {
		return vs[0].([]GetUsersUserMfaDevice)[vs[1].(int)]
	}).(GetUsersUserMfaDeviceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigurationPermissionPolicyInput)(nil)).Elem(), AccessConfigurationPermissionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigurationPermissionPolicyArrayInput)(nil)).Elem(), AccessConfigurationPermissionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryLoginPreferenceInput)(nil)).Elem(), DirectoryLoginPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryLoginPreferencePtrInput)(nil)).Elem(), DirectoryLoginPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryMfaAuthenticationSettingInfoInput)(nil)).Elem(), DirectoryMfaAuthenticationSettingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryMfaAuthenticationSettingInfoPtrInput)(nil)).Elem(), DirectoryMfaAuthenticationSettingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryPasswordPolicyInput)(nil)).Elem(), DirectoryPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryPasswordPolicyPtrInput)(nil)).Elem(), DirectoryPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySamlIdentityProviderConfigurationInput)(nil)).Elem(), DirectorySamlIdentityProviderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySamlIdentityProviderConfigurationPtrInput)(nil)).Elem(), DirectorySamlIdentityProviderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySamlServiceProviderInput)(nil)).Elem(), DirectorySamlServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySamlServiceProviderPtrInput)(nil)).Elem(), DirectorySamlServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryUserProvisioningConfigurationInput)(nil)).Elem(), DirectoryUserProvisioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryUserProvisioningConfigurationPtrInput)(nil)).Elem(), DirectoryUserProvisioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessAssignmentsAssignmentInput)(nil)).Elem(), GetAccessAssignmentsAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessAssignmentsAssignmentArrayInput)(nil)).Elem(), GetAccessAssignmentsAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessConfigurationsConfigurationInput)(nil)).Elem(), GetAccessConfigurationsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessConfigurationsConfigurationArrayInput)(nil)).Elem(), GetAccessConfigurationsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessConfigurationsConfigurationPermissionPolicyInput)(nil)).Elem(), GetAccessConfigurationsConfigurationPermissionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessConfigurationsConfigurationPermissionPolicyArrayInput)(nil)).Elem(), GetAccessConfigurationsConfigurationPermissionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectoryInput)(nil)).Elem(), GetDirectoriesDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectoryArrayInput)(nil)).Elem(), GetDirectoriesDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectorySamlIdentityProviderConfigurationInput)(nil)).Elem(), GetDirectoriesDirectorySamlIdentityProviderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayInput)(nil)).Elem(), GetDirectoriesDirectorySamlIdentityProviderConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectoryTaskInput)(nil)).Elem(), GetDirectoriesDirectoryTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesDirectoryTaskArrayInput)(nil)).Elem(), GetDirectoriesDirectoryTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScimServerCredentialsCredentialInput)(nil)).Elem(), GetScimServerCredentialsCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScimServerCredentialsCredentialArrayInput)(nil)).Elem(), GetScimServerCredentialsCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserMfaDeviceInput)(nil)).Elem(), GetUsersUserMfaDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserMfaDeviceArrayInput)(nil)).Elem(), GetUsersUserMfaDeviceArray{})
	pulumi.RegisterOutputType(AccessConfigurationPermissionPolicyOutput{})
	pulumi.RegisterOutputType(AccessConfigurationPermissionPolicyArrayOutput{})
	pulumi.RegisterOutputType(DirectoryLoginPreferenceOutput{})
	pulumi.RegisterOutputType(DirectoryLoginPreferencePtrOutput{})
	pulumi.RegisterOutputType(DirectoryMfaAuthenticationSettingInfoOutput{})
	pulumi.RegisterOutputType(DirectoryMfaAuthenticationSettingInfoPtrOutput{})
	pulumi.RegisterOutputType(DirectoryPasswordPolicyOutput{})
	pulumi.RegisterOutputType(DirectoryPasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(DirectorySamlIdentityProviderConfigurationOutput{})
	pulumi.RegisterOutputType(DirectorySamlIdentityProviderConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DirectorySamlServiceProviderOutput{})
	pulumi.RegisterOutputType(DirectorySamlServiceProviderPtrOutput{})
	pulumi.RegisterOutputType(DirectoryUserProvisioningConfigurationOutput{})
	pulumi.RegisterOutputType(DirectoryUserProvisioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetAccessAssignmentsAssignmentOutput{})
	pulumi.RegisterOutputType(GetAccessAssignmentsAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetAccessConfigurationsConfigurationOutput{})
	pulumi.RegisterOutputType(GetAccessConfigurationsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAccessConfigurationsConfigurationPermissionPolicyOutput{})
	pulumi.RegisterOutputType(GetAccessConfigurationsConfigurationPermissionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectoryOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectorySamlIdentityProviderConfigurationOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectorySamlIdentityProviderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectoryTaskOutput{})
	pulumi.RegisterOutputType(GetDirectoriesDirectoryTaskArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetScimServerCredentialsCredentialOutput{})
	pulumi.RegisterOutputType(GetScimServerCredentialsCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserMfaDeviceOutput{})
	pulumi.RegisterOutputType(GetUsersUserMfaDeviceArrayOutput{})
}
