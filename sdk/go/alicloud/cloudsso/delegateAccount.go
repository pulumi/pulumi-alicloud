// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud SSO Delegate Account resource.
//
// Delegated Administrator Account.
//
// For information about Cloud SSO Delegate Account and how to use it, see [What is Delegate Account](https://next.api.alibabacloud.com/document/cloudsso/2021-05-15/EnableDelegateAccount).
//
// > **NOTE:** Available since v1.259.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cloudsso"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := resourcemanager.GetAccounts(ctx, &resourcemanager.GetAccountsArgs{
//				Status: pulumi.StringRef("CreateSuccess"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultDelegatedAdministrator, err := resourcemanager.NewDelegatedAdministrator(ctx, "default", &resourcemanager.DelegatedAdministratorArgs{
//				AccountId:        pulumi.String(_default.Accounts[0].AccountId),
//				ServicePrincipal: pulumi.String("cloudsso.aliyuncs.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloudsso.NewDelegateAccount(ctx, "default", &cloudsso.DelegateAccountArgs{
//				AccountId: defaultDelegatedAdministrator.AccountId,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud SSO Delegate Account can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cloudsso/delegateAccount:DelegateAccount example <id>
// ```
type DelegateAccount struct {
	pulumi.CustomResourceState

	// Delegate administrator account Id
	AccountId pulumi.StringOutput `pulumi:"accountId"`
}

// NewDelegateAccount registers a new resource with the given unique name, arguments, and options.
func NewDelegateAccount(ctx *pulumi.Context,
	name string, args *DelegateAccountArgs, opts ...pulumi.ResourceOption) (*DelegateAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DelegateAccount
	err := ctx.RegisterResource("alicloud:cloudsso/delegateAccount:DelegateAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDelegateAccount gets an existing DelegateAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDelegateAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DelegateAccountState, opts ...pulumi.ResourceOption) (*DelegateAccount, error) {
	var resource DelegateAccount
	err := ctx.ReadResource("alicloud:cloudsso/delegateAccount:DelegateAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DelegateAccount resources.
type delegateAccountState struct {
	// Delegate administrator account Id
	AccountId *string `pulumi:"accountId"`
}

type DelegateAccountState struct {
	// Delegate administrator account Id
	AccountId pulumi.StringPtrInput
}

func (DelegateAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*delegateAccountState)(nil)).Elem()
}

type delegateAccountArgs struct {
	// Delegate administrator account Id
	AccountId string `pulumi:"accountId"`
}

// The set of arguments for constructing a DelegateAccount resource.
type DelegateAccountArgs struct {
	// Delegate administrator account Id
	AccountId pulumi.StringInput
}

func (DelegateAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*delegateAccountArgs)(nil)).Elem()
}

type DelegateAccountInput interface {
	pulumi.Input

	ToDelegateAccountOutput() DelegateAccountOutput
	ToDelegateAccountOutputWithContext(ctx context.Context) DelegateAccountOutput
}

func (*DelegateAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**DelegateAccount)(nil)).Elem()
}

func (i *DelegateAccount) ToDelegateAccountOutput() DelegateAccountOutput {
	return i.ToDelegateAccountOutputWithContext(context.Background())
}

func (i *DelegateAccount) ToDelegateAccountOutputWithContext(ctx context.Context) DelegateAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegateAccountOutput)
}

// DelegateAccountArrayInput is an input type that accepts DelegateAccountArray and DelegateAccountArrayOutput values.
// You can construct a concrete instance of `DelegateAccountArrayInput` via:
//
//	DelegateAccountArray{ DelegateAccountArgs{...} }
type DelegateAccountArrayInput interface {
	pulumi.Input

	ToDelegateAccountArrayOutput() DelegateAccountArrayOutput
	ToDelegateAccountArrayOutputWithContext(context.Context) DelegateAccountArrayOutput
}

type DelegateAccountArray []DelegateAccountInput

func (DelegateAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DelegateAccount)(nil)).Elem()
}

func (i DelegateAccountArray) ToDelegateAccountArrayOutput() DelegateAccountArrayOutput {
	return i.ToDelegateAccountArrayOutputWithContext(context.Background())
}

func (i DelegateAccountArray) ToDelegateAccountArrayOutputWithContext(ctx context.Context) DelegateAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegateAccountArrayOutput)
}

// DelegateAccountMapInput is an input type that accepts DelegateAccountMap and DelegateAccountMapOutput values.
// You can construct a concrete instance of `DelegateAccountMapInput` via:
//
//	DelegateAccountMap{ "key": DelegateAccountArgs{...} }
type DelegateAccountMapInput interface {
	pulumi.Input

	ToDelegateAccountMapOutput() DelegateAccountMapOutput
	ToDelegateAccountMapOutputWithContext(context.Context) DelegateAccountMapOutput
}

type DelegateAccountMap map[string]DelegateAccountInput

func (DelegateAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DelegateAccount)(nil)).Elem()
}

func (i DelegateAccountMap) ToDelegateAccountMapOutput() DelegateAccountMapOutput {
	return i.ToDelegateAccountMapOutputWithContext(context.Background())
}

func (i DelegateAccountMap) ToDelegateAccountMapOutputWithContext(ctx context.Context) DelegateAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegateAccountMapOutput)
}

type DelegateAccountOutput struct{ *pulumi.OutputState }

func (DelegateAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DelegateAccount)(nil)).Elem()
}

func (o DelegateAccountOutput) ToDelegateAccountOutput() DelegateAccountOutput {
	return o
}

func (o DelegateAccountOutput) ToDelegateAccountOutputWithContext(ctx context.Context) DelegateAccountOutput {
	return o
}

// Delegate administrator account Id
func (o DelegateAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *DelegateAccount) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

type DelegateAccountArrayOutput struct{ *pulumi.OutputState }

func (DelegateAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DelegateAccount)(nil)).Elem()
}

func (o DelegateAccountArrayOutput) ToDelegateAccountArrayOutput() DelegateAccountArrayOutput {
	return o
}

func (o DelegateAccountArrayOutput) ToDelegateAccountArrayOutputWithContext(ctx context.Context) DelegateAccountArrayOutput {
	return o
}

func (o DelegateAccountArrayOutput) Index(i pulumi.IntInput) DelegateAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DelegateAccount {
		return vs[0].([]*DelegateAccount)[vs[1].(int)]
	}).(DelegateAccountOutput)
}

type DelegateAccountMapOutput struct{ *pulumi.OutputState }

func (DelegateAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DelegateAccount)(nil)).Elem()
}

func (o DelegateAccountMapOutput) ToDelegateAccountMapOutput() DelegateAccountMapOutput {
	return o
}

func (o DelegateAccountMapOutput) ToDelegateAccountMapOutputWithContext(ctx context.Context) DelegateAccountMapOutput {
	return o
}

func (o DelegateAccountMapOutput) MapIndex(k pulumi.StringInput) DelegateAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DelegateAccount {
		return vs[0].(map[string]*DelegateAccount)[vs[1].(string)]
	}).(DelegateAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DelegateAccountInput)(nil)).Elem(), &DelegateAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*DelegateAccountArrayInput)(nil)).Elem(), DelegateAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DelegateAccountMapInput)(nil)).Elem(), DelegateAccountMap{})
	pulumi.RegisterOutputType(DelegateAccountOutput{})
	pulumi.RegisterOutputType(DelegateAccountArrayOutput{})
	pulumi.RegisterOutputType(DelegateAccountMapOutput{})
}
