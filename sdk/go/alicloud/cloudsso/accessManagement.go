// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsso

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud SSO Access Assignment resource.
//
// For information about Cloud SSO Access Assignment and how to use it, see [What is Access Assignment](https://www.alibabacloud.com/help/en/doc-detail/265996.htm).
//
// > **NOTE:** When you configure access assignment for the first time, access configuration will be automatically deployed.
//
// > **NOTE:** Available in v1.145.0+.
//
// > **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region
//
// ## Import
//
// Cloud SSO Access Assignment can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cloudsso/accessManagement:AccessManagement example <directory_id>:<access_configuration_id>:<target_type>:<target_id>:<principal_type>:<principal_id>
// ```
type AccessManagement struct {
	pulumi.CustomResourceState

	// The Access configuration ID.
	AccessConfigurationId pulumi.StringOutput `pulumi:"accessConfigurationId"`
	// The deprovision strategy. Valid values: `DeprovisionForLastAccessAssignmentOnAccount` and `None`. Default Value: `DeprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `DeprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operation。
	DeprovisionStrategy pulumi.StringPtrOutput `pulumi:"deprovisionStrategy"`
	// The ID of the Directory.
	DirectoryId pulumi.StringOutput `pulumi:"directoryId"`
	// The ID of the access assignment.
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// The identity type of the access assignment, which can be a user or a user group. Valid values: `Group`, `User`.
	PrincipalType pulumi.StringOutput `pulumi:"principalType"`
	// The ID of the target to create the resource range.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The type of the resource range target to be accessed. Valid values: `RD-Account`.
	TargetType pulumi.StringOutput `pulumi:"targetType"`
}

// NewAccessManagement registers a new resource with the given unique name, arguments, and options.
func NewAccessManagement(ctx *pulumi.Context,
	name string, args *AccessManagementArgs, opts ...pulumi.ResourceOption) (*AccessManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'AccessConfigurationId'")
	}
	if args.DirectoryId == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryId'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	var resource AccessManagement
	err := ctx.RegisterResource("alicloud:cloudsso/accessManagement:AccessManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessManagement gets an existing AccessManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessManagementState, opts ...pulumi.ResourceOption) (*AccessManagement, error) {
	var resource AccessManagement
	err := ctx.ReadResource("alicloud:cloudsso/accessManagement:AccessManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessManagement resources.
type accessManagementState struct {
	// The Access configuration ID.
	AccessConfigurationId *string `pulumi:"accessConfigurationId"`
	// The deprovision strategy. Valid values: `DeprovisionForLastAccessAssignmentOnAccount` and `None`. Default Value: `DeprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `DeprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operation。
	DeprovisionStrategy *string `pulumi:"deprovisionStrategy"`
	// The ID of the Directory.
	DirectoryId *string `pulumi:"directoryId"`
	// The ID of the access assignment.
	PrincipalId *string `pulumi:"principalId"`
	// The identity type of the access assignment, which can be a user or a user group. Valid values: `Group`, `User`.
	PrincipalType *string `pulumi:"principalType"`
	// The ID of the target to create the resource range.
	TargetId *string `pulumi:"targetId"`
	// The type of the resource range target to be accessed. Valid values: `RD-Account`.
	TargetType *string `pulumi:"targetType"`
}

type AccessManagementState struct {
	// The Access configuration ID.
	AccessConfigurationId pulumi.StringPtrInput
	// The deprovision strategy. Valid values: `DeprovisionForLastAccessAssignmentOnAccount` and `None`. Default Value: `DeprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `DeprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operation。
	DeprovisionStrategy pulumi.StringPtrInput
	// The ID of the Directory.
	DirectoryId pulumi.StringPtrInput
	// The ID of the access assignment.
	PrincipalId pulumi.StringPtrInput
	// The identity type of the access assignment, which can be a user or a user group. Valid values: `Group`, `User`.
	PrincipalType pulumi.StringPtrInput
	// The ID of the target to create the resource range.
	TargetId pulumi.StringPtrInput
	// The type of the resource range target to be accessed. Valid values: `RD-Account`.
	TargetType pulumi.StringPtrInput
}

func (AccessManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessManagementState)(nil)).Elem()
}

type accessManagementArgs struct {
	// The Access configuration ID.
	AccessConfigurationId string `pulumi:"accessConfigurationId"`
	// The deprovision strategy. Valid values: `DeprovisionForLastAccessAssignmentOnAccount` and `None`. Default Value: `DeprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `DeprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operation。
	DeprovisionStrategy *string `pulumi:"deprovisionStrategy"`
	// The ID of the Directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the access assignment.
	PrincipalId string `pulumi:"principalId"`
	// The identity type of the access assignment, which can be a user or a user group. Valid values: `Group`, `User`.
	PrincipalType string `pulumi:"principalType"`
	// The ID of the target to create the resource range.
	TargetId string `pulumi:"targetId"`
	// The type of the resource range target to be accessed. Valid values: `RD-Account`.
	TargetType string `pulumi:"targetType"`
}

// The set of arguments for constructing a AccessManagement resource.
type AccessManagementArgs struct {
	// The Access configuration ID.
	AccessConfigurationId pulumi.StringInput
	// The deprovision strategy. Valid values: `DeprovisionForLastAccessAssignmentOnAccount` and `None`. Default Value: `DeprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `DeprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operation。
	DeprovisionStrategy pulumi.StringPtrInput
	// The ID of the Directory.
	DirectoryId pulumi.StringInput
	// The ID of the access assignment.
	PrincipalId pulumi.StringInput
	// The identity type of the access assignment, which can be a user or a user group. Valid values: `Group`, `User`.
	PrincipalType pulumi.StringInput
	// The ID of the target to create the resource range.
	TargetId pulumi.StringInput
	// The type of the resource range target to be accessed. Valid values: `RD-Account`.
	TargetType pulumi.StringInput
}

func (AccessManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessManagementArgs)(nil)).Elem()
}

type AccessManagementInput interface {
	pulumi.Input

	ToAccessManagementOutput() AccessManagementOutput
	ToAccessManagementOutputWithContext(ctx context.Context) AccessManagementOutput
}

func (*AccessManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessManagement)(nil)).Elem()
}

func (i *AccessManagement) ToAccessManagementOutput() AccessManagementOutput {
	return i.ToAccessManagementOutputWithContext(context.Background())
}

func (i *AccessManagement) ToAccessManagementOutputWithContext(ctx context.Context) AccessManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessManagementOutput)
}

// AccessManagementArrayInput is an input type that accepts AccessManagementArray and AccessManagementArrayOutput values.
// You can construct a concrete instance of `AccessManagementArrayInput` via:
//
//          AccessManagementArray{ AccessManagementArgs{...} }
type AccessManagementArrayInput interface {
	pulumi.Input

	ToAccessManagementArrayOutput() AccessManagementArrayOutput
	ToAccessManagementArrayOutputWithContext(context.Context) AccessManagementArrayOutput
}

type AccessManagementArray []AccessManagementInput

func (AccessManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessManagement)(nil)).Elem()
}

func (i AccessManagementArray) ToAccessManagementArrayOutput() AccessManagementArrayOutput {
	return i.ToAccessManagementArrayOutputWithContext(context.Background())
}

func (i AccessManagementArray) ToAccessManagementArrayOutputWithContext(ctx context.Context) AccessManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessManagementArrayOutput)
}

// AccessManagementMapInput is an input type that accepts AccessManagementMap and AccessManagementMapOutput values.
// You can construct a concrete instance of `AccessManagementMapInput` via:
//
//          AccessManagementMap{ "key": AccessManagementArgs{...} }
type AccessManagementMapInput interface {
	pulumi.Input

	ToAccessManagementMapOutput() AccessManagementMapOutput
	ToAccessManagementMapOutputWithContext(context.Context) AccessManagementMapOutput
}

type AccessManagementMap map[string]AccessManagementInput

func (AccessManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessManagement)(nil)).Elem()
}

func (i AccessManagementMap) ToAccessManagementMapOutput() AccessManagementMapOutput {
	return i.ToAccessManagementMapOutputWithContext(context.Background())
}

func (i AccessManagementMap) ToAccessManagementMapOutputWithContext(ctx context.Context) AccessManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessManagementMapOutput)
}

type AccessManagementOutput struct{ *pulumi.OutputState }

func (AccessManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessManagement)(nil)).Elem()
}

func (o AccessManagementOutput) ToAccessManagementOutput() AccessManagementOutput {
	return o
}

func (o AccessManagementOutput) ToAccessManagementOutputWithContext(ctx context.Context) AccessManagementOutput {
	return o
}

type AccessManagementArrayOutput struct{ *pulumi.OutputState }

func (AccessManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessManagement)(nil)).Elem()
}

func (o AccessManagementArrayOutput) ToAccessManagementArrayOutput() AccessManagementArrayOutput {
	return o
}

func (o AccessManagementArrayOutput) ToAccessManagementArrayOutputWithContext(ctx context.Context) AccessManagementArrayOutput {
	return o
}

func (o AccessManagementArrayOutput) Index(i pulumi.IntInput) AccessManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessManagement {
		return vs[0].([]*AccessManagement)[vs[1].(int)]
	}).(AccessManagementOutput)
}

type AccessManagementMapOutput struct{ *pulumi.OutputState }

func (AccessManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessManagement)(nil)).Elem()
}

func (o AccessManagementMapOutput) ToAccessManagementMapOutput() AccessManagementMapOutput {
	return o
}

func (o AccessManagementMapOutput) ToAccessManagementMapOutputWithContext(ctx context.Context) AccessManagementMapOutput {
	return o
}

func (o AccessManagementMapOutput) MapIndex(k pulumi.StringInput) AccessManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessManagement {
		return vs[0].(map[string]*AccessManagement)[vs[1].(string)]
	}).(AccessManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessManagementInput)(nil)).Elem(), &AccessManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessManagementArrayInput)(nil)).Elem(), AccessManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessManagementMapInput)(nil)).Elem(), AccessManagementMap{})
	pulumi.RegisterOutputType(AccessManagementOutput{})
	pulumi.RegisterOutputType(AccessManagementArrayOutput{})
	pulumi.RegisterOutputType(AccessManagementMapOutput{})
}
