// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ddos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainResourceProxyType struct {
	// the port number. This field is required and must be an integer.
	ProxyPorts []int `pulumi:"proxyPorts"`
	// the protocol type. This field is required and must be a string. Valid values: `http`, `https`, `websocket`, and `websockets`.
	ProxyType *string `pulumi:"proxyType"`
}

// DomainResourceProxyTypeInput is an input type that accepts DomainResourceProxyTypeArgs and DomainResourceProxyTypeOutput values.
// You can construct a concrete instance of `DomainResourceProxyTypeInput` via:
//
//          DomainResourceProxyTypeArgs{...}
type DomainResourceProxyTypeInput interface {
	pulumi.Input

	ToDomainResourceProxyTypeOutput() DomainResourceProxyTypeOutput
	ToDomainResourceProxyTypeOutputWithContext(context.Context) DomainResourceProxyTypeOutput
}

type DomainResourceProxyTypeArgs struct {
	// the port number. This field is required and must be an integer.
	ProxyPorts pulumi.IntArrayInput `pulumi:"proxyPorts"`
	// the protocol type. This field is required and must be a string. Valid values: `http`, `https`, `websocket`, and `websockets`.
	ProxyType pulumi.StringPtrInput `pulumi:"proxyType"`
}

func (DomainResourceProxyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResourceProxyType)(nil)).Elem()
}

func (i DomainResourceProxyTypeArgs) ToDomainResourceProxyTypeOutput() DomainResourceProxyTypeOutput {
	return i.ToDomainResourceProxyTypeOutputWithContext(context.Background())
}

func (i DomainResourceProxyTypeArgs) ToDomainResourceProxyTypeOutputWithContext(ctx context.Context) DomainResourceProxyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceProxyTypeOutput)
}

// DomainResourceProxyTypeArrayInput is an input type that accepts DomainResourceProxyTypeArray and DomainResourceProxyTypeArrayOutput values.
// You can construct a concrete instance of `DomainResourceProxyTypeArrayInput` via:
//
//          DomainResourceProxyTypeArray{ DomainResourceProxyTypeArgs{...} }
type DomainResourceProxyTypeArrayInput interface {
	pulumi.Input

	ToDomainResourceProxyTypeArrayOutput() DomainResourceProxyTypeArrayOutput
	ToDomainResourceProxyTypeArrayOutputWithContext(context.Context) DomainResourceProxyTypeArrayOutput
}

type DomainResourceProxyTypeArray []DomainResourceProxyTypeInput

func (DomainResourceProxyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainResourceProxyType)(nil)).Elem()
}

func (i DomainResourceProxyTypeArray) ToDomainResourceProxyTypeArrayOutput() DomainResourceProxyTypeArrayOutput {
	return i.ToDomainResourceProxyTypeArrayOutputWithContext(context.Background())
}

func (i DomainResourceProxyTypeArray) ToDomainResourceProxyTypeArrayOutputWithContext(ctx context.Context) DomainResourceProxyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceProxyTypeArrayOutput)
}

type DomainResourceProxyTypeOutput struct{ *pulumi.OutputState }

func (DomainResourceProxyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResourceProxyType)(nil)).Elem()
}

func (o DomainResourceProxyTypeOutput) ToDomainResourceProxyTypeOutput() DomainResourceProxyTypeOutput {
	return o
}

func (o DomainResourceProxyTypeOutput) ToDomainResourceProxyTypeOutputWithContext(ctx context.Context) DomainResourceProxyTypeOutput {
	return o
}

// the port number. This field is required and must be an integer.
func (o DomainResourceProxyTypeOutput) ProxyPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DomainResourceProxyType) []int { return v.ProxyPorts }).(pulumi.IntArrayOutput)
}

// the protocol type. This field is required and must be a string. Valid values: `http`, `https`, `websocket`, and `websockets`.
func (o DomainResourceProxyTypeOutput) ProxyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainResourceProxyType) *string { return v.ProxyType }).(pulumi.StringPtrOutput)
}

type DomainResourceProxyTypeArrayOutput struct{ *pulumi.OutputState }

func (DomainResourceProxyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainResourceProxyType)(nil)).Elem()
}

func (o DomainResourceProxyTypeArrayOutput) ToDomainResourceProxyTypeArrayOutput() DomainResourceProxyTypeArrayOutput {
	return o
}

func (o DomainResourceProxyTypeArrayOutput) ToDomainResourceProxyTypeArrayOutputWithContext(ctx context.Context) DomainResourceProxyTypeArrayOutput {
	return o
}

func (o DomainResourceProxyTypeArrayOutput) Index(i pulumi.IntInput) DomainResourceProxyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainResourceProxyType {
		return vs[0].([]DomainResourceProxyType)[vs[1].(int)]
	}).(DomainResourceProxyTypeOutput)
}

type SchedulerRuleRule struct {
	Priority  *int    `pulumi:"priority"`
	RegionId  *string `pulumi:"regionId"`
	Status    *int    `pulumi:"status"`
	Type      *string `pulumi:"type"`
	Value     *string `pulumi:"value"`
	ValueType *int    `pulumi:"valueType"`
}

// SchedulerRuleRuleInput is an input type that accepts SchedulerRuleRuleArgs and SchedulerRuleRuleOutput values.
// You can construct a concrete instance of `SchedulerRuleRuleInput` via:
//
//          SchedulerRuleRuleArgs{...}
type SchedulerRuleRuleInput interface {
	pulumi.Input

	ToSchedulerRuleRuleOutput() SchedulerRuleRuleOutput
	ToSchedulerRuleRuleOutputWithContext(context.Context) SchedulerRuleRuleOutput
}

type SchedulerRuleRuleArgs struct {
	Priority  pulumi.IntPtrInput    `pulumi:"priority"`
	RegionId  pulumi.StringPtrInput `pulumi:"regionId"`
	Status    pulumi.IntPtrInput    `pulumi:"status"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	Value     pulumi.StringPtrInput `pulumi:"value"`
	ValueType pulumi.IntPtrInput    `pulumi:"valueType"`
}

func (SchedulerRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerRuleRule)(nil)).Elem()
}

func (i SchedulerRuleRuleArgs) ToSchedulerRuleRuleOutput() SchedulerRuleRuleOutput {
	return i.ToSchedulerRuleRuleOutputWithContext(context.Background())
}

func (i SchedulerRuleRuleArgs) ToSchedulerRuleRuleOutputWithContext(ctx context.Context) SchedulerRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerRuleRuleOutput)
}

// SchedulerRuleRuleArrayInput is an input type that accepts SchedulerRuleRuleArray and SchedulerRuleRuleArrayOutput values.
// You can construct a concrete instance of `SchedulerRuleRuleArrayInput` via:
//
//          SchedulerRuleRuleArray{ SchedulerRuleRuleArgs{...} }
type SchedulerRuleRuleArrayInput interface {
	pulumi.Input

	ToSchedulerRuleRuleArrayOutput() SchedulerRuleRuleArrayOutput
	ToSchedulerRuleRuleArrayOutputWithContext(context.Context) SchedulerRuleRuleArrayOutput
}

type SchedulerRuleRuleArray []SchedulerRuleRuleInput

func (SchedulerRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchedulerRuleRule)(nil)).Elem()
}

func (i SchedulerRuleRuleArray) ToSchedulerRuleRuleArrayOutput() SchedulerRuleRuleArrayOutput {
	return i.ToSchedulerRuleRuleArrayOutputWithContext(context.Background())
}

func (i SchedulerRuleRuleArray) ToSchedulerRuleRuleArrayOutputWithContext(ctx context.Context) SchedulerRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerRuleRuleArrayOutput)
}

type SchedulerRuleRuleOutput struct{ *pulumi.OutputState }

func (SchedulerRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerRuleRule)(nil)).Elem()
}

func (o SchedulerRuleRuleOutput) ToSchedulerRuleRuleOutput() SchedulerRuleRuleOutput {
	return o
}

func (o SchedulerRuleRuleOutput) ToSchedulerRuleRuleOutputWithContext(ctx context.Context) SchedulerRuleRuleOutput {
	return o
}

func (o SchedulerRuleRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o SchedulerRuleRuleOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

func (o SchedulerRuleRuleOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func (o SchedulerRuleRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SchedulerRuleRuleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o SchedulerRuleRuleOutput) ValueType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulerRuleRule) *int { return v.ValueType }).(pulumi.IntPtrOutput)
}

type SchedulerRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (SchedulerRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchedulerRuleRule)(nil)).Elem()
}

func (o SchedulerRuleRuleArrayOutput) ToSchedulerRuleRuleArrayOutput() SchedulerRuleRuleArrayOutput {
	return o
}

func (o SchedulerRuleRuleArrayOutput) ToSchedulerRuleRuleArrayOutputWithContext(ctx context.Context) SchedulerRuleRuleArrayOutput {
	return o
}

func (o SchedulerRuleRuleArrayOutput) Index(i pulumi.IntInput) SchedulerRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchedulerRuleRule {
		return vs[0].([]SchedulerRuleRule)[vs[1].(int)]
	}).(SchedulerRuleRuleOutput)
}

type GetDdosBgpInstancesInstance struct {
	// The instance's elastic defend bandwidth.
	Bandwidth int `pulumi:"bandwidth"`
	// The instance's base defend bandwidth.
	BaseBandwidth int `pulumi:"baseBandwidth"`
	// The instance's id.
	Id string `pulumi:"id"`
	// The instance's count of ip config.
	IpCount int `pulumi:"ipCount"`
	// The instance's IP version.
	IpType string `pulumi:"ipType"`
	// The instance's remark.
	Name string `pulumi:"name"`
	// A region of instance.
	Region string `pulumi:"region"`
	// The instance's type.
	Type string `pulumi:"type"`
}

// GetDdosBgpInstancesInstanceInput is an input type that accepts GetDdosBgpInstancesInstanceArgs and GetDdosBgpInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDdosBgpInstancesInstanceInput` via:
//
//          GetDdosBgpInstancesInstanceArgs{...}
type GetDdosBgpInstancesInstanceInput interface {
	pulumi.Input

	ToGetDdosBgpInstancesInstanceOutput() GetDdosBgpInstancesInstanceOutput
	ToGetDdosBgpInstancesInstanceOutputWithContext(context.Context) GetDdosBgpInstancesInstanceOutput
}

type GetDdosBgpInstancesInstanceArgs struct {
	// The instance's elastic defend bandwidth.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The instance's base defend bandwidth.
	BaseBandwidth pulumi.IntInput `pulumi:"baseBandwidth"`
	// The instance's id.
	Id pulumi.StringInput `pulumi:"id"`
	// The instance's count of ip config.
	IpCount pulumi.IntInput `pulumi:"ipCount"`
	// The instance's IP version.
	IpType pulumi.StringInput `pulumi:"ipType"`
	// The instance's remark.
	Name pulumi.StringInput `pulumi:"name"`
	// A region of instance.
	Region pulumi.StringInput `pulumi:"region"`
	// The instance's type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDdosBgpInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosBgpInstancesInstance)(nil)).Elem()
}

func (i GetDdosBgpInstancesInstanceArgs) ToGetDdosBgpInstancesInstanceOutput() GetDdosBgpInstancesInstanceOutput {
	return i.ToGetDdosBgpInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDdosBgpInstancesInstanceArgs) ToGetDdosBgpInstancesInstanceOutputWithContext(ctx context.Context) GetDdosBgpInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosBgpInstancesInstanceOutput)
}

// GetDdosBgpInstancesInstanceArrayInput is an input type that accepts GetDdosBgpInstancesInstanceArray and GetDdosBgpInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDdosBgpInstancesInstanceArrayInput` via:
//
//          GetDdosBgpInstancesInstanceArray{ GetDdosBgpInstancesInstanceArgs{...} }
type GetDdosBgpInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDdosBgpInstancesInstanceArrayOutput() GetDdosBgpInstancesInstanceArrayOutput
	ToGetDdosBgpInstancesInstanceArrayOutputWithContext(context.Context) GetDdosBgpInstancesInstanceArrayOutput
}

type GetDdosBgpInstancesInstanceArray []GetDdosBgpInstancesInstanceInput

func (GetDdosBgpInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosBgpInstancesInstance)(nil)).Elem()
}

func (i GetDdosBgpInstancesInstanceArray) ToGetDdosBgpInstancesInstanceArrayOutput() GetDdosBgpInstancesInstanceArrayOutput {
	return i.ToGetDdosBgpInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDdosBgpInstancesInstanceArray) ToGetDdosBgpInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDdosBgpInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosBgpInstancesInstanceArrayOutput)
}

type GetDdosBgpInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDdosBgpInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosBgpInstancesInstance)(nil)).Elem()
}

func (o GetDdosBgpInstancesInstanceOutput) ToGetDdosBgpInstancesInstanceOutput() GetDdosBgpInstancesInstanceOutput {
	return o
}

func (o GetDdosBgpInstancesInstanceOutput) ToGetDdosBgpInstancesInstanceOutputWithContext(ctx context.Context) GetDdosBgpInstancesInstanceOutput {
	return o
}

// The instance's elastic defend bandwidth.
func (o GetDdosBgpInstancesInstanceOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The instance's base defend bandwidth.
func (o GetDdosBgpInstancesInstanceOutput) BaseBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) int { return v.BaseBandwidth }).(pulumi.IntOutput)
}

// The instance's id.
func (o GetDdosBgpInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The instance's count of ip config.
func (o GetDdosBgpInstancesInstanceOutput) IpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) int { return v.IpCount }).(pulumi.IntOutput)
}

// The instance's IP version.
func (o GetDdosBgpInstancesInstanceOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) string { return v.IpType }).(pulumi.StringOutput)
}

// The instance's remark.
func (o GetDdosBgpInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// A region of instance.
func (o GetDdosBgpInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// The instance's type.
func (o GetDdosBgpInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosBgpInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

type GetDdosBgpInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDdosBgpInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosBgpInstancesInstance)(nil)).Elem()
}

func (o GetDdosBgpInstancesInstanceArrayOutput) ToGetDdosBgpInstancesInstanceArrayOutput() GetDdosBgpInstancesInstanceArrayOutput {
	return o
}

func (o GetDdosBgpInstancesInstanceArrayOutput) ToGetDdosBgpInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDdosBgpInstancesInstanceArrayOutput {
	return o
}

func (o GetDdosBgpInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDdosBgpInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdosBgpInstancesInstance {
		return vs[0].([]GetDdosBgpInstancesInstance)[vs[1].(int)]
	}).(GetDdosBgpInstancesInstanceOutput)
}

type GetDdosCooDomainResourcesResource struct {
	// The IP addresses in the blacklist for the domain name.
	BlackLists []string `pulumi:"blackLists"`
	// Whether frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
	CcEnabled bool `pulumi:"ccEnabled"`
	// Whether custom frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
	CcRuleEnabled bool `pulumi:"ccRuleEnabled"`
	// The mode of the Frequency Control policy.
	CcTemplate string `pulumi:"ccTemplate"`
	// The name of the certificate.
	CertName string `pulumi:"certName"`
	// The domain name of the website that you want to add to the instance.
	Domain string `pulumi:"domain"`
	// Whether Http2.0 is enabled.
	Http2Enable bool `pulumi:"http2Enable"`
	// The advanced HTTPS settings.
	HttpsExt string `pulumi:"httpsExt"`
	// The ID of the Domain Resource.
	Id string `pulumi:"id"`
	// A list ID of instance that you want to associate.
	InstanceIds []string `pulumi:"instanceIds"`
	// The type of backload algorithm.
	PolicyMode string `pulumi:"policyMode"`
	// Whether the website service forwarding rules have been turned on.
	ProxyEnabled bool `pulumi:"proxyEnabled"`
	// Protocol type and port number information.
	ProxyTypes []GetDdosCooDomainResourcesResourceProxyType `pulumi:"proxyTypes"`
	// Server address information of the source station.
	RealServers []string `pulumi:"realServers"`
	// Server address type.
	RsType int `pulumi:"rsType"`
	// The type of the cipher suite.
	SslCiphers string `pulumi:"sslCiphers"`
	// The version of the TLS protocol.
	SslProtocols string `pulumi:"sslProtocols"`
	// The IP addresses in the whitelist for the domain name.
	WhiteLists []string `pulumi:"whiteLists"`
}

// GetDdosCooDomainResourcesResourceInput is an input type that accepts GetDdosCooDomainResourcesResourceArgs and GetDdosCooDomainResourcesResourceOutput values.
// You can construct a concrete instance of `GetDdosCooDomainResourcesResourceInput` via:
//
//          GetDdosCooDomainResourcesResourceArgs{...}
type GetDdosCooDomainResourcesResourceInput interface {
	pulumi.Input

	ToGetDdosCooDomainResourcesResourceOutput() GetDdosCooDomainResourcesResourceOutput
	ToGetDdosCooDomainResourcesResourceOutputWithContext(context.Context) GetDdosCooDomainResourcesResourceOutput
}

type GetDdosCooDomainResourcesResourceArgs struct {
	// The IP addresses in the blacklist for the domain name.
	BlackLists pulumi.StringArrayInput `pulumi:"blackLists"`
	// Whether frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
	CcEnabled pulumi.BoolInput `pulumi:"ccEnabled"`
	// Whether custom frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
	CcRuleEnabled pulumi.BoolInput `pulumi:"ccRuleEnabled"`
	// The mode of the Frequency Control policy.
	CcTemplate pulumi.StringInput `pulumi:"ccTemplate"`
	// The name of the certificate.
	CertName pulumi.StringInput `pulumi:"certName"`
	// The domain name of the website that you want to add to the instance.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Whether Http2.0 is enabled.
	Http2Enable pulumi.BoolInput `pulumi:"http2Enable"`
	// The advanced HTTPS settings.
	HttpsExt pulumi.StringInput `pulumi:"httpsExt"`
	// The ID of the Domain Resource.
	Id pulumi.StringInput `pulumi:"id"`
	// A list ID of instance that you want to associate.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// The type of backload algorithm.
	PolicyMode pulumi.StringInput `pulumi:"policyMode"`
	// Whether the website service forwarding rules have been turned on.
	ProxyEnabled pulumi.BoolInput `pulumi:"proxyEnabled"`
	// Protocol type and port number information.
	ProxyTypes GetDdosCooDomainResourcesResourceProxyTypeArrayInput `pulumi:"proxyTypes"`
	// Server address information of the source station.
	RealServers pulumi.StringArrayInput `pulumi:"realServers"`
	// Server address type.
	RsType pulumi.IntInput `pulumi:"rsType"`
	// The type of the cipher suite.
	SslCiphers pulumi.StringInput `pulumi:"sslCiphers"`
	// The version of the TLS protocol.
	SslProtocols pulumi.StringInput `pulumi:"sslProtocols"`
	// The IP addresses in the whitelist for the domain name.
	WhiteLists pulumi.StringArrayInput `pulumi:"whiteLists"`
}

func (GetDdosCooDomainResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooDomainResourcesResource)(nil)).Elem()
}

func (i GetDdosCooDomainResourcesResourceArgs) ToGetDdosCooDomainResourcesResourceOutput() GetDdosCooDomainResourcesResourceOutput {
	return i.ToGetDdosCooDomainResourcesResourceOutputWithContext(context.Background())
}

func (i GetDdosCooDomainResourcesResourceArgs) ToGetDdosCooDomainResourcesResourceOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooDomainResourcesResourceOutput)
}

// GetDdosCooDomainResourcesResourceArrayInput is an input type that accepts GetDdosCooDomainResourcesResourceArray and GetDdosCooDomainResourcesResourceArrayOutput values.
// You can construct a concrete instance of `GetDdosCooDomainResourcesResourceArrayInput` via:
//
//          GetDdosCooDomainResourcesResourceArray{ GetDdosCooDomainResourcesResourceArgs{...} }
type GetDdosCooDomainResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetDdosCooDomainResourcesResourceArrayOutput() GetDdosCooDomainResourcesResourceArrayOutput
	ToGetDdosCooDomainResourcesResourceArrayOutputWithContext(context.Context) GetDdosCooDomainResourcesResourceArrayOutput
}

type GetDdosCooDomainResourcesResourceArray []GetDdosCooDomainResourcesResourceInput

func (GetDdosCooDomainResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooDomainResourcesResource)(nil)).Elem()
}

func (i GetDdosCooDomainResourcesResourceArray) ToGetDdosCooDomainResourcesResourceArrayOutput() GetDdosCooDomainResourcesResourceArrayOutput {
	return i.ToGetDdosCooDomainResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetDdosCooDomainResourcesResourceArray) ToGetDdosCooDomainResourcesResourceArrayOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooDomainResourcesResourceArrayOutput)
}

type GetDdosCooDomainResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetDdosCooDomainResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooDomainResourcesResource)(nil)).Elem()
}

func (o GetDdosCooDomainResourcesResourceOutput) ToGetDdosCooDomainResourcesResourceOutput() GetDdosCooDomainResourcesResourceOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceOutput) ToGetDdosCooDomainResourcesResourceOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceOutput {
	return o
}

// The IP addresses in the blacklist for the domain name.
func (o GetDdosCooDomainResourcesResourceOutput) BlackLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) []string { return v.BlackLists }).(pulumi.StringArrayOutput)
}

// Whether frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
func (o GetDdosCooDomainResourcesResourceOutput) CcEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) bool { return v.CcEnabled }).(pulumi.BoolOutput)
}

// Whether custom frequency control guard (CC guard) is enabled. Values: `True`: Opened, `False`: Not enabled.
func (o GetDdosCooDomainResourcesResourceOutput) CcRuleEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) bool { return v.CcRuleEnabled }).(pulumi.BoolOutput)
}

// The mode of the Frequency Control policy.
func (o GetDdosCooDomainResourcesResourceOutput) CcTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.CcTemplate }).(pulumi.StringOutput)
}

// The name of the certificate.
func (o GetDdosCooDomainResourcesResourceOutput) CertName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.CertName }).(pulumi.StringOutput)
}

// The domain name of the website that you want to add to the instance.
func (o GetDdosCooDomainResourcesResourceOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.Domain }).(pulumi.StringOutput)
}

// Whether Http2.0 is enabled.
func (o GetDdosCooDomainResourcesResourceOutput) Http2Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) bool { return v.Http2Enable }).(pulumi.BoolOutput)
}

// The advanced HTTPS settings.
func (o GetDdosCooDomainResourcesResourceOutput) HttpsExt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.HttpsExt }).(pulumi.StringOutput)
}

// The ID of the Domain Resource.
func (o GetDdosCooDomainResourcesResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.Id }).(pulumi.StringOutput)
}

// A list ID of instance that you want to associate.
func (o GetDdosCooDomainResourcesResourceOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// The type of backload algorithm.
func (o GetDdosCooDomainResourcesResourceOutput) PolicyMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.PolicyMode }).(pulumi.StringOutput)
}

// Whether the website service forwarding rules have been turned on.
func (o GetDdosCooDomainResourcesResourceOutput) ProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) bool { return v.ProxyEnabled }).(pulumi.BoolOutput)
}

// Protocol type and port number information.
func (o GetDdosCooDomainResourcesResourceOutput) ProxyTypes() GetDdosCooDomainResourcesResourceProxyTypeArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) []GetDdosCooDomainResourcesResourceProxyType {
		return v.ProxyTypes
	}).(GetDdosCooDomainResourcesResourceProxyTypeArrayOutput)
}

// Server address information of the source station.
func (o GetDdosCooDomainResourcesResourceOutput) RealServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) []string { return v.RealServers }).(pulumi.StringArrayOutput)
}

// Server address type.
func (o GetDdosCooDomainResourcesResourceOutput) RsType() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) int { return v.RsType }).(pulumi.IntOutput)
}

// The type of the cipher suite.
func (o GetDdosCooDomainResourcesResourceOutput) SslCiphers() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.SslCiphers }).(pulumi.StringOutput)
}

// The version of the TLS protocol.
func (o GetDdosCooDomainResourcesResourceOutput) SslProtocols() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) string { return v.SslProtocols }).(pulumi.StringOutput)
}

// The IP addresses in the whitelist for the domain name.
func (o GetDdosCooDomainResourcesResourceOutput) WhiteLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResource) []string { return v.WhiteLists }).(pulumi.StringArrayOutput)
}

type GetDdosCooDomainResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetDdosCooDomainResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooDomainResourcesResource)(nil)).Elem()
}

func (o GetDdosCooDomainResourcesResourceArrayOutput) ToGetDdosCooDomainResourcesResourceArrayOutput() GetDdosCooDomainResourcesResourceArrayOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceArrayOutput) ToGetDdosCooDomainResourcesResourceArrayOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceArrayOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetDdosCooDomainResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdosCooDomainResourcesResource {
		return vs[0].([]GetDdosCooDomainResourcesResource)[vs[1].(int)]
	}).(GetDdosCooDomainResourcesResourceOutput)
}

type GetDdosCooDomainResourcesResourceProxyType struct {
	// The forwarding port.
	ProxyPorts []int `pulumi:"proxyPorts"`
	// Protocol type.
	ProxyType string `pulumi:"proxyType"`
}

// GetDdosCooDomainResourcesResourceProxyTypeInput is an input type that accepts GetDdosCooDomainResourcesResourceProxyTypeArgs and GetDdosCooDomainResourcesResourceProxyTypeOutput values.
// You can construct a concrete instance of `GetDdosCooDomainResourcesResourceProxyTypeInput` via:
//
//          GetDdosCooDomainResourcesResourceProxyTypeArgs{...}
type GetDdosCooDomainResourcesResourceProxyTypeInput interface {
	pulumi.Input

	ToGetDdosCooDomainResourcesResourceProxyTypeOutput() GetDdosCooDomainResourcesResourceProxyTypeOutput
	ToGetDdosCooDomainResourcesResourceProxyTypeOutputWithContext(context.Context) GetDdosCooDomainResourcesResourceProxyTypeOutput
}

type GetDdosCooDomainResourcesResourceProxyTypeArgs struct {
	// The forwarding port.
	ProxyPorts pulumi.IntArrayInput `pulumi:"proxyPorts"`
	// Protocol type.
	ProxyType pulumi.StringInput `pulumi:"proxyType"`
}

func (GetDdosCooDomainResourcesResourceProxyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooDomainResourcesResourceProxyType)(nil)).Elem()
}

func (i GetDdosCooDomainResourcesResourceProxyTypeArgs) ToGetDdosCooDomainResourcesResourceProxyTypeOutput() GetDdosCooDomainResourcesResourceProxyTypeOutput {
	return i.ToGetDdosCooDomainResourcesResourceProxyTypeOutputWithContext(context.Background())
}

func (i GetDdosCooDomainResourcesResourceProxyTypeArgs) ToGetDdosCooDomainResourcesResourceProxyTypeOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceProxyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooDomainResourcesResourceProxyTypeOutput)
}

// GetDdosCooDomainResourcesResourceProxyTypeArrayInput is an input type that accepts GetDdosCooDomainResourcesResourceProxyTypeArray and GetDdosCooDomainResourcesResourceProxyTypeArrayOutput values.
// You can construct a concrete instance of `GetDdosCooDomainResourcesResourceProxyTypeArrayInput` via:
//
//          GetDdosCooDomainResourcesResourceProxyTypeArray{ GetDdosCooDomainResourcesResourceProxyTypeArgs{...} }
type GetDdosCooDomainResourcesResourceProxyTypeArrayInput interface {
	pulumi.Input

	ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutput() GetDdosCooDomainResourcesResourceProxyTypeArrayOutput
	ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutputWithContext(context.Context) GetDdosCooDomainResourcesResourceProxyTypeArrayOutput
}

type GetDdosCooDomainResourcesResourceProxyTypeArray []GetDdosCooDomainResourcesResourceProxyTypeInput

func (GetDdosCooDomainResourcesResourceProxyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooDomainResourcesResourceProxyType)(nil)).Elem()
}

func (i GetDdosCooDomainResourcesResourceProxyTypeArray) ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutput() GetDdosCooDomainResourcesResourceProxyTypeArrayOutput {
	return i.ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutputWithContext(context.Background())
}

func (i GetDdosCooDomainResourcesResourceProxyTypeArray) ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceProxyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooDomainResourcesResourceProxyTypeArrayOutput)
}

type GetDdosCooDomainResourcesResourceProxyTypeOutput struct{ *pulumi.OutputState }

func (GetDdosCooDomainResourcesResourceProxyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooDomainResourcesResourceProxyType)(nil)).Elem()
}

func (o GetDdosCooDomainResourcesResourceProxyTypeOutput) ToGetDdosCooDomainResourcesResourceProxyTypeOutput() GetDdosCooDomainResourcesResourceProxyTypeOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceProxyTypeOutput) ToGetDdosCooDomainResourcesResourceProxyTypeOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceProxyTypeOutput {
	return o
}

// The forwarding port.
func (o GetDdosCooDomainResourcesResourceProxyTypeOutput) ProxyPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResourceProxyType) []int { return v.ProxyPorts }).(pulumi.IntArrayOutput)
}

// Protocol type.
func (o GetDdosCooDomainResourcesResourceProxyTypeOutput) ProxyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooDomainResourcesResourceProxyType) string { return v.ProxyType }).(pulumi.StringOutput)
}

type GetDdosCooDomainResourcesResourceProxyTypeArrayOutput struct{ *pulumi.OutputState }

func (GetDdosCooDomainResourcesResourceProxyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooDomainResourcesResourceProxyType)(nil)).Elem()
}

func (o GetDdosCooDomainResourcesResourceProxyTypeArrayOutput) ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutput() GetDdosCooDomainResourcesResourceProxyTypeArrayOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceProxyTypeArrayOutput) ToGetDdosCooDomainResourcesResourceProxyTypeArrayOutputWithContext(ctx context.Context) GetDdosCooDomainResourcesResourceProxyTypeArrayOutput {
	return o
}

func (o GetDdosCooDomainResourcesResourceProxyTypeArrayOutput) Index(i pulumi.IntInput) GetDdosCooDomainResourcesResourceProxyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdosCooDomainResourcesResourceProxyType {
		return vs[0].([]GetDdosCooDomainResourcesResourceProxyType)[vs[1].(int)]
	}).(GetDdosCooDomainResourcesResourceProxyTypeOutput)
}

type GetDdosCooInstancesInstance struct {
	// The instance's elastic defend bandwidth.
	Bandwidth int `pulumi:"bandwidth"`
	// The instance's base defend bandwidth.
	BaseBandwidth int `pulumi:"baseBandwidth"`
	// The creation time of the instance.
	CreateTime int `pulumi:"createTime"`
	// The debt status of the instance.
	DebtStatus int `pulumi:"debtStatus"`
	// The instance's count of domain retransmission config.
	DomainCount int `pulumi:"domainCount"`
	// The edition of the instance. The Valid Values : `0`, `1`, `2`, `9`.
	Edition int `pulumi:"edition"`
	// The enabled of the instance. The Valid Values : `0`, `1`.
	Enabled int `pulumi:"enabled"`
	// The expiry time of the instance.
	ExpireTime int `pulumi:"expireTime"`
	// The instance's id.
	Id string `pulumi:"id"`
	// The ip mode of the instance. The Valid Values : `fnat`, `v6tov4`.
	IpMode string `pulumi:"ipMode"`
	// The ip version of the instance. The Valid Values : `Ipv4`, `Ipv6`.
	IpVersion string `pulumi:"ipVersion"`
	// The instance's remark.
	Name string `pulumi:"name"`
	// The instance's count of port retransmission config.
	PortCount int `pulumi:"portCount"`
	// The remark of the instance.
	Remark string `pulumi:"remark"`
	// The instance's business bandwidth.
	ServiceBandwidth int `pulumi:"serviceBandwidth"`
	// The status of the instance. The Valid Values : `1`, `2`.
	Status int `pulumi:"status"`
}

// GetDdosCooInstancesInstanceInput is an input type that accepts GetDdosCooInstancesInstanceArgs and GetDdosCooInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDdosCooInstancesInstanceInput` via:
//
//          GetDdosCooInstancesInstanceArgs{...}
type GetDdosCooInstancesInstanceInput interface {
	pulumi.Input

	ToGetDdosCooInstancesInstanceOutput() GetDdosCooInstancesInstanceOutput
	ToGetDdosCooInstancesInstanceOutputWithContext(context.Context) GetDdosCooInstancesInstanceOutput
}

type GetDdosCooInstancesInstanceArgs struct {
	// The instance's elastic defend bandwidth.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The instance's base defend bandwidth.
	BaseBandwidth pulumi.IntInput `pulumi:"baseBandwidth"`
	// The creation time of the instance.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The debt status of the instance.
	DebtStatus pulumi.IntInput `pulumi:"debtStatus"`
	// The instance's count of domain retransmission config.
	DomainCount pulumi.IntInput `pulumi:"domainCount"`
	// The edition of the instance. The Valid Values : `0`, `1`, `2`, `9`.
	Edition pulumi.IntInput `pulumi:"edition"`
	// The enabled of the instance. The Valid Values : `0`, `1`.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// The expiry time of the instance.
	ExpireTime pulumi.IntInput `pulumi:"expireTime"`
	// The instance's id.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip mode of the instance. The Valid Values : `fnat`, `v6tov4`.
	IpMode pulumi.StringInput `pulumi:"ipMode"`
	// The ip version of the instance. The Valid Values : `Ipv4`, `Ipv6`.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The instance's remark.
	Name pulumi.StringInput `pulumi:"name"`
	// The instance's count of port retransmission config.
	PortCount pulumi.IntInput `pulumi:"portCount"`
	// The remark of the instance.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The instance's business bandwidth.
	ServiceBandwidth pulumi.IntInput `pulumi:"serviceBandwidth"`
	// The status of the instance. The Valid Values : `1`, `2`.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetDdosCooInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooInstancesInstance)(nil)).Elem()
}

func (i GetDdosCooInstancesInstanceArgs) ToGetDdosCooInstancesInstanceOutput() GetDdosCooInstancesInstanceOutput {
	return i.ToGetDdosCooInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDdosCooInstancesInstanceArgs) ToGetDdosCooInstancesInstanceOutputWithContext(ctx context.Context) GetDdosCooInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooInstancesInstanceOutput)
}

// GetDdosCooInstancesInstanceArrayInput is an input type that accepts GetDdosCooInstancesInstanceArray and GetDdosCooInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDdosCooInstancesInstanceArrayInput` via:
//
//          GetDdosCooInstancesInstanceArray{ GetDdosCooInstancesInstanceArgs{...} }
type GetDdosCooInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDdosCooInstancesInstanceArrayOutput() GetDdosCooInstancesInstanceArrayOutput
	ToGetDdosCooInstancesInstanceArrayOutputWithContext(context.Context) GetDdosCooInstancesInstanceArrayOutput
}

type GetDdosCooInstancesInstanceArray []GetDdosCooInstancesInstanceInput

func (GetDdosCooInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooInstancesInstance)(nil)).Elem()
}

func (i GetDdosCooInstancesInstanceArray) ToGetDdosCooInstancesInstanceArrayOutput() GetDdosCooInstancesInstanceArrayOutput {
	return i.ToGetDdosCooInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDdosCooInstancesInstanceArray) ToGetDdosCooInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDdosCooInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooInstancesInstanceArrayOutput)
}

type GetDdosCooInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDdosCooInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooInstancesInstance)(nil)).Elem()
}

func (o GetDdosCooInstancesInstanceOutput) ToGetDdosCooInstancesInstanceOutput() GetDdosCooInstancesInstanceOutput {
	return o
}

func (o GetDdosCooInstancesInstanceOutput) ToGetDdosCooInstancesInstanceOutputWithContext(ctx context.Context) GetDdosCooInstancesInstanceOutput {
	return o
}

// The instance's elastic defend bandwidth.
func (o GetDdosCooInstancesInstanceOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The instance's base defend bandwidth.
func (o GetDdosCooInstancesInstanceOutput) BaseBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.BaseBandwidth }).(pulumi.IntOutput)
}

// The creation time of the instance.
func (o GetDdosCooInstancesInstanceOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The debt status of the instance.
func (o GetDdosCooInstancesInstanceOutput) DebtStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.DebtStatus }).(pulumi.IntOutput)
}

// The instance's count of domain retransmission config.
func (o GetDdosCooInstancesInstanceOutput) DomainCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.DomainCount }).(pulumi.IntOutput)
}

// The edition of the instance. The Valid Values : `0`, `1`, `2`, `9`.
func (o GetDdosCooInstancesInstanceOutput) Edition() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.Edition }).(pulumi.IntOutput)
}

// The enabled of the instance. The Valid Values : `0`, `1`.
func (o GetDdosCooInstancesInstanceOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.Enabled }).(pulumi.IntOutput)
}

// The expiry time of the instance.
func (o GetDdosCooInstancesInstanceOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// The instance's id.
func (o GetDdosCooInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The ip mode of the instance. The Valid Values : `fnat`, `v6tov4`.
func (o GetDdosCooInstancesInstanceOutput) IpMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) string { return v.IpMode }).(pulumi.StringOutput)
}

// The ip version of the instance. The Valid Values : `Ipv4`, `Ipv6`.
func (o GetDdosCooInstancesInstanceOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The instance's remark.
func (o GetDdosCooInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The instance's count of port retransmission config.
func (o GetDdosCooInstancesInstanceOutput) PortCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.PortCount }).(pulumi.IntOutput)
}

// The remark of the instance.
func (o GetDdosCooInstancesInstanceOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) string { return v.Remark }).(pulumi.StringOutput)
}

// The instance's business bandwidth.
func (o GetDdosCooInstancesInstanceOutput) ServiceBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.ServiceBandwidth }).(pulumi.IntOutput)
}

// The status of the instance. The Valid Values : `1`, `2`.
func (o GetDdosCooInstancesInstanceOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDdosCooInstancesInstance) int { return v.Status }).(pulumi.IntOutput)
}

type GetDdosCooInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDdosCooInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooInstancesInstance)(nil)).Elem()
}

func (o GetDdosCooInstancesInstanceArrayOutput) ToGetDdosCooInstancesInstanceArrayOutput() GetDdosCooInstancesInstanceArrayOutput {
	return o
}

func (o GetDdosCooInstancesInstanceArrayOutput) ToGetDdosCooInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDdosCooInstancesInstanceArrayOutput {
	return o
}

func (o GetDdosCooInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDdosCooInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdosCooInstancesInstance {
		return vs[0].([]GetDdosCooInstancesInstance)[vs[1].(int)]
	}).(GetDdosCooInstancesInstanceOutput)
}

type GetDdosCooPortsPort struct {
	// The source station port.
	BackendPort string `pulumi:"backendPort"`
	// The forwarding port.
	FrontendPort string `pulumi:"frontendPort"`
	// The forwarding protocol.
	FrontendProtocol string `pulumi:"frontendProtocol"`
	// The ID of the Port.
	Id string `pulumi:"id"`
	// The Ddoscoo instance ID.
	InstanceId string `pulumi:"instanceId"`
	// List of source IP addresses.
	RealServers []string `pulumi:"realServers"`
}

// GetDdosCooPortsPortInput is an input type that accepts GetDdosCooPortsPortArgs and GetDdosCooPortsPortOutput values.
// You can construct a concrete instance of `GetDdosCooPortsPortInput` via:
//
//          GetDdosCooPortsPortArgs{...}
type GetDdosCooPortsPortInput interface {
	pulumi.Input

	ToGetDdosCooPortsPortOutput() GetDdosCooPortsPortOutput
	ToGetDdosCooPortsPortOutputWithContext(context.Context) GetDdosCooPortsPortOutput
}

type GetDdosCooPortsPortArgs struct {
	// The source station port.
	BackendPort pulumi.StringInput `pulumi:"backendPort"`
	// The forwarding port.
	FrontendPort pulumi.StringInput `pulumi:"frontendPort"`
	// The forwarding protocol.
	FrontendProtocol pulumi.StringInput `pulumi:"frontendProtocol"`
	// The ID of the Port.
	Id pulumi.StringInput `pulumi:"id"`
	// The Ddoscoo instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// List of source IP addresses.
	RealServers pulumi.StringArrayInput `pulumi:"realServers"`
}

func (GetDdosCooPortsPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooPortsPort)(nil)).Elem()
}

func (i GetDdosCooPortsPortArgs) ToGetDdosCooPortsPortOutput() GetDdosCooPortsPortOutput {
	return i.ToGetDdosCooPortsPortOutputWithContext(context.Background())
}

func (i GetDdosCooPortsPortArgs) ToGetDdosCooPortsPortOutputWithContext(ctx context.Context) GetDdosCooPortsPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooPortsPortOutput)
}

// GetDdosCooPortsPortArrayInput is an input type that accepts GetDdosCooPortsPortArray and GetDdosCooPortsPortArrayOutput values.
// You can construct a concrete instance of `GetDdosCooPortsPortArrayInput` via:
//
//          GetDdosCooPortsPortArray{ GetDdosCooPortsPortArgs{...} }
type GetDdosCooPortsPortArrayInput interface {
	pulumi.Input

	ToGetDdosCooPortsPortArrayOutput() GetDdosCooPortsPortArrayOutput
	ToGetDdosCooPortsPortArrayOutputWithContext(context.Context) GetDdosCooPortsPortArrayOutput
}

type GetDdosCooPortsPortArray []GetDdosCooPortsPortInput

func (GetDdosCooPortsPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooPortsPort)(nil)).Elem()
}

func (i GetDdosCooPortsPortArray) ToGetDdosCooPortsPortArrayOutput() GetDdosCooPortsPortArrayOutput {
	return i.ToGetDdosCooPortsPortArrayOutputWithContext(context.Background())
}

func (i GetDdosCooPortsPortArray) ToGetDdosCooPortsPortArrayOutputWithContext(ctx context.Context) GetDdosCooPortsPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDdosCooPortsPortArrayOutput)
}

type GetDdosCooPortsPortOutput struct{ *pulumi.OutputState }

func (GetDdosCooPortsPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDdosCooPortsPort)(nil)).Elem()
}

func (o GetDdosCooPortsPortOutput) ToGetDdosCooPortsPortOutput() GetDdosCooPortsPortOutput {
	return o
}

func (o GetDdosCooPortsPortOutput) ToGetDdosCooPortsPortOutputWithContext(ctx context.Context) GetDdosCooPortsPortOutput {
	return o
}

// The source station port.
func (o GetDdosCooPortsPortOutput) BackendPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) string { return v.BackendPort }).(pulumi.StringOutput)
}

// The forwarding port.
func (o GetDdosCooPortsPortOutput) FrontendPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) string { return v.FrontendPort }).(pulumi.StringOutput)
}

// The forwarding protocol.
func (o GetDdosCooPortsPortOutput) FrontendProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) string { return v.FrontendProtocol }).(pulumi.StringOutput)
}

// The ID of the Port.
func (o GetDdosCooPortsPortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) string { return v.Id }).(pulumi.StringOutput)
}

// The Ddoscoo instance ID.
func (o GetDdosCooPortsPortOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) string { return v.InstanceId }).(pulumi.StringOutput)
}

// List of source IP addresses.
func (o GetDdosCooPortsPortOutput) RealServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDdosCooPortsPort) []string { return v.RealServers }).(pulumi.StringArrayOutput)
}

type GetDdosCooPortsPortArrayOutput struct{ *pulumi.OutputState }

func (GetDdosCooPortsPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDdosCooPortsPort)(nil)).Elem()
}

func (o GetDdosCooPortsPortArrayOutput) ToGetDdosCooPortsPortArrayOutput() GetDdosCooPortsPortArrayOutput {
	return o
}

func (o GetDdosCooPortsPortArrayOutput) ToGetDdosCooPortsPortArrayOutputWithContext(ctx context.Context) GetDdosCooPortsPortArrayOutput {
	return o
}

func (o GetDdosCooPortsPortArrayOutput) Index(i pulumi.IntInput) GetDdosCooPortsPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDdosCooPortsPort {
		return vs[0].([]GetDdosCooPortsPort)[vs[1].(int)]
	}).(GetDdosCooPortsPortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceProxyTypeInput)(nil)).Elem(), DomainResourceProxyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceProxyTypeArrayInput)(nil)).Elem(), DomainResourceProxyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulerRuleRuleInput)(nil)).Elem(), SchedulerRuleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulerRuleRuleArrayInput)(nil)).Elem(), SchedulerRuleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosBgpInstancesInstanceInput)(nil)).Elem(), GetDdosBgpInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosBgpInstancesInstanceArrayInput)(nil)).Elem(), GetDdosBgpInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooDomainResourcesResourceInput)(nil)).Elem(), GetDdosCooDomainResourcesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooDomainResourcesResourceArrayInput)(nil)).Elem(), GetDdosCooDomainResourcesResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooDomainResourcesResourceProxyTypeInput)(nil)).Elem(), GetDdosCooDomainResourcesResourceProxyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooDomainResourcesResourceProxyTypeArrayInput)(nil)).Elem(), GetDdosCooDomainResourcesResourceProxyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooInstancesInstanceInput)(nil)).Elem(), GetDdosCooInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooInstancesInstanceArrayInput)(nil)).Elem(), GetDdosCooInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooPortsPortInput)(nil)).Elem(), GetDdosCooPortsPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDdosCooPortsPortArrayInput)(nil)).Elem(), GetDdosCooPortsPortArray{})
	pulumi.RegisterOutputType(DomainResourceProxyTypeOutput{})
	pulumi.RegisterOutputType(DomainResourceProxyTypeArrayOutput{})
	pulumi.RegisterOutputType(SchedulerRuleRuleOutput{})
	pulumi.RegisterOutputType(SchedulerRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDdosBgpInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDdosBgpInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetDdosCooDomainResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetDdosCooDomainResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetDdosCooDomainResourcesResourceProxyTypeOutput{})
	pulumi.RegisterOutputType(GetDdosCooDomainResourcesResourceProxyTypeArrayOutput{})
	pulumi.RegisterOutputType(GetDdosCooInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDdosCooInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetDdosCooPortsPortOutput{})
	pulumi.RegisterOutputType(GetDdosCooPortsPortArrayOutput{})
}
