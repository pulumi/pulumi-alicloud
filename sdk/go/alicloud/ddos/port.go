// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ddos

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Ddos Coo Port resource.
//
// For information about Anti-DDoS Pro Port and how to use it, see [What is Port](https://www.alibabacloud.com/help/en/ddos-protection/latest/api-ddoscoo-2020-01-01-createport).
//
// > **NOTE:** Available since v1.123.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ddos"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := ddos.NewDdosCooInstance(ctx, "default", &ddos.DdosCooInstanceArgs{
//				Name:             pulumi.String(name),
//				Bandwidth:        pulumi.String("30"),
//				BaseBandwidth:    pulumi.String("30"),
//				ServiceBandwidth: pulumi.String("100"),
//				PortCount:        pulumi.String("50"),
//				DomainCount:      pulumi.String("50"),
//				Period:           pulumi.Int(1),
//				ProductType:      pulumi.String("ddoscoo"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ddos.NewPort(ctx, "default", &ddos.PortArgs{
//				InstanceId:       _default.ID(),
//				FrontendPort:     pulumi.String("7001"),
//				BackendPort:      pulumi.String("7002"),
//				FrontendProtocol: pulumi.String("tcp"),
//				RealServers: pulumi.StringArray{
//					pulumi.String("1.1.1.1"),
//					pulumi.String("2.2.2.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Ddos Coo Port can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ddos/port:Port example <instance_id>:<frontend_port>:<frontend_protocol>
// ```
type Port struct {
	pulumi.CustomResourceState

	// The port of the origin server. Valid values: `0` to `65535`.
	BackendPort pulumi.StringPtrOutput `pulumi:"backendPort"`
	// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
	// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
	Config PortConfigOutput `pulumi:"config"`
	// The forwarding port to query. Valid values: `0` to `65535`.
	FrontendPort pulumi.StringOutput `pulumi:"frontendPort"`
	// The type of the forwarding protocol to query. Valid values:
	FrontendProtocol pulumi.StringOutput `pulumi:"frontendProtocol"`
	// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
	//
	// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// List of source IP addresses
	RealServers pulumi.StringArrayOutput `pulumi:"realServers"`
}

// NewPort registers a new resource with the given unique name, arguments, and options.
func NewPort(ctx *pulumi.Context,
	name string, args *PortArgs, opts ...pulumi.ResourceOption) (*Port, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FrontendPort == nil {
		return nil, errors.New("invalid value for required argument 'FrontendPort'")
	}
	if args.FrontendProtocol == nil {
		return nil, errors.New("invalid value for required argument 'FrontendProtocol'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RealServers == nil {
		return nil, errors.New("invalid value for required argument 'RealServers'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Port
	err := ctx.RegisterResource("alicloud:ddos/port:Port", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPort gets an existing Port resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortState, opts ...pulumi.ResourceOption) (*Port, error) {
	var resource Port
	err := ctx.ReadResource("alicloud:ddos/port:Port", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Port resources.
type portState struct {
	// The port of the origin server. Valid values: `0` to `65535`.
	BackendPort *string `pulumi:"backendPort"`
	// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
	// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
	Config *PortConfig `pulumi:"config"`
	// The forwarding port to query. Valid values: `0` to `65535`.
	FrontendPort *string `pulumi:"frontendPort"`
	// The type of the forwarding protocol to query. Valid values:
	FrontendProtocol *string `pulumi:"frontendProtocol"`
	// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
	//
	// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
	InstanceId *string `pulumi:"instanceId"`
	// List of source IP addresses
	RealServers []string `pulumi:"realServers"`
}

type PortState struct {
	// The port of the origin server. Valid values: `0` to `65535`.
	BackendPort pulumi.StringPtrInput
	// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
	// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
	Config PortConfigPtrInput
	// The forwarding port to query. Valid values: `0` to `65535`.
	FrontendPort pulumi.StringPtrInput
	// The type of the forwarding protocol to query. Valid values:
	FrontendProtocol pulumi.StringPtrInput
	// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
	//
	// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
	InstanceId pulumi.StringPtrInput
	// List of source IP addresses
	RealServers pulumi.StringArrayInput
}

func (PortState) ElementType() reflect.Type {
	return reflect.TypeOf((*portState)(nil)).Elem()
}

type portArgs struct {
	// The port of the origin server. Valid values: `0` to `65535`.
	BackendPort *string `pulumi:"backendPort"`
	// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
	// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
	Config *PortConfig `pulumi:"config"`
	// The forwarding port to query. Valid values: `0` to `65535`.
	FrontendPort string `pulumi:"frontendPort"`
	// The type of the forwarding protocol to query. Valid values:
	FrontendProtocol string `pulumi:"frontendProtocol"`
	// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
	//
	// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
	InstanceId string `pulumi:"instanceId"`
	// List of source IP addresses
	RealServers []string `pulumi:"realServers"`
}

// The set of arguments for constructing a Port resource.
type PortArgs struct {
	// The port of the origin server. Valid values: `0` to `65535`.
	BackendPort pulumi.StringPtrInput
	// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
	// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
	Config PortConfigPtrInput
	// The forwarding port to query. Valid values: `0` to `65535`.
	FrontendPort pulumi.StringInput
	// The type of the forwarding protocol to query. Valid values:
	FrontendProtocol pulumi.StringInput
	// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
	//
	// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
	InstanceId pulumi.StringInput
	// List of source IP addresses
	RealServers pulumi.StringArrayInput
}

func (PortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portArgs)(nil)).Elem()
}

type PortInput interface {
	pulumi.Input

	ToPortOutput() PortOutput
	ToPortOutputWithContext(ctx context.Context) PortOutput
}

func (*Port) ElementType() reflect.Type {
	return reflect.TypeOf((**Port)(nil)).Elem()
}

func (i *Port) ToPortOutput() PortOutput {
	return i.ToPortOutputWithContext(context.Background())
}

func (i *Port) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortOutput)
}

// PortArrayInput is an input type that accepts PortArray and PortArrayOutput values.
// You can construct a concrete instance of `PortArrayInput` via:
//
//	PortArray{ PortArgs{...} }
type PortArrayInput interface {
	pulumi.Input

	ToPortArrayOutput() PortArrayOutput
	ToPortArrayOutputWithContext(context.Context) PortArrayOutput
}

type PortArray []PortInput

func (PortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Port)(nil)).Elem()
}

func (i PortArray) ToPortArrayOutput() PortArrayOutput {
	return i.ToPortArrayOutputWithContext(context.Background())
}

func (i PortArray) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortArrayOutput)
}

// PortMapInput is an input type that accepts PortMap and PortMapOutput values.
// You can construct a concrete instance of `PortMapInput` via:
//
//	PortMap{ "key": PortArgs{...} }
type PortMapInput interface {
	pulumi.Input

	ToPortMapOutput() PortMapOutput
	ToPortMapOutputWithContext(context.Context) PortMapOutput
}

type PortMap map[string]PortInput

func (PortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Port)(nil)).Elem()
}

func (i PortMap) ToPortMapOutput() PortMapOutput {
	return i.ToPortMapOutputWithContext(context.Background())
}

func (i PortMap) ToPortMapOutputWithContext(ctx context.Context) PortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortMapOutput)
}

type PortOutput struct{ *pulumi.OutputState }

func (PortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Port)(nil)).Elem()
}

func (o PortOutput) ToPortOutput() PortOutput {
	return o
}

func (o PortOutput) ToPortOutputWithContext(ctx context.Context) PortOutput {
	return o
}

// The port of the origin server. Valid values: `0` to `65535`.
func (o PortOutput) BackendPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Port) pulumi.StringPtrOutput { return v.BackendPort }).(pulumi.StringPtrOutput)
}

// Session persistence settings for port forwarding rules. Use a string representation in JSON format. The specific structure is described as follows.
// - `PersistenceTimeout`: is of Integer type and is required. The timeout period of the session. Value range: `30` to `3600`, in seconds. The default value is `0`, which is closed. See `config` below.
func (o PortOutput) Config() PortConfigOutput {
	return o.ApplyT(func(v *Port) PortConfigOutput { return v.Config }).(PortConfigOutput)
}

// The forwarding port to query. Valid values: `0` to `65535`.
func (o PortOutput) FrontendPort() pulumi.StringOutput {
	return o.ApplyT(func(v *Port) pulumi.StringOutput { return v.FrontendPort }).(pulumi.StringOutput)
}

// The type of the forwarding protocol to query. Valid values:
func (o PortOutput) FrontendProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Port) pulumi.StringOutput { return v.FrontendProtocol }).(pulumi.StringOutput)
}

// The ID of the Anti-DDoS Pro or Anti-DDoS Premium instance to which the port forwarding rule belongs.
//
// > **NOTE:**  You can call the [DescribeInstanceIds](https://www.alibabacloud.com/help/en/doc-detail/157459.html) operation to query the IDs of all instances.
func (o PortOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Port) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// List of source IP addresses
func (o PortOutput) RealServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Port) pulumi.StringArrayOutput { return v.RealServers }).(pulumi.StringArrayOutput)
}

type PortArrayOutput struct{ *pulumi.OutputState }

func (PortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Port)(nil)).Elem()
}

func (o PortArrayOutput) ToPortArrayOutput() PortArrayOutput {
	return o
}

func (o PortArrayOutput) ToPortArrayOutputWithContext(ctx context.Context) PortArrayOutput {
	return o
}

func (o PortArrayOutput) Index(i pulumi.IntInput) PortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Port {
		return vs[0].([]*Port)[vs[1].(int)]
	}).(PortOutput)
}

type PortMapOutput struct{ *pulumi.OutputState }

func (PortMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Port)(nil)).Elem()
}

func (o PortMapOutput) ToPortMapOutput() PortMapOutput {
	return o
}

func (o PortMapOutput) ToPortMapOutputWithContext(ctx context.Context) PortMapOutput {
	return o
}

func (o PortMapOutput) MapIndex(k pulumi.StringInput) PortOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Port {
		return vs[0].(map[string]*Port)[vs[1].(string)]
	}).(PortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PortInput)(nil)).Elem(), &Port{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortArrayInput)(nil)).Elem(), PortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortMapInput)(nil)).Elem(), PortMap{})
	pulumi.RegisterOutputType(PortOutput{})
	pulumi.RegisterOutputType(PortArrayOutput{})
	pulumi.RegisterOutputType(PortMapOutput{})
}
