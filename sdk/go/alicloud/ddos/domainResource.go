// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ddos

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Anti-DDoS Pro Domain Resource resource.
//
// For information about Anti-DDoS Pro Domain Resource and how to use it, see [What is Domain Resource](https://www.alibabacloud.com/help/en/ddos-protection/latest/api-ddoscoo-2020-01-01-createwebrule).
//
// > **NOTE:** Available since v1.123.0.
//
// ## Import
//
// Anti-DDoS Pro Domain Resource can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:ddos/domainResource:DomainResource example <domain>
//
// ```
type DomainResource struct {
	pulumi.CustomResourceState

	// (Available since v1.207.2) The CNAME assigned to the domain name.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// The domain name of the website that you want to add to the instance.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
	HttpsExt pulumi.StringOutput `pulumi:"httpsExt"`
	// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
	// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
	InstanceIds pulumi.StringArrayOutput `pulumi:"instanceIds"`
	// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
	OcspEnabled pulumi.BoolPtrOutput `pulumi:"ocspEnabled"`
	// Protocol type and port number information. See `proxyTypes` below.
	// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
	ProxyTypes DomainResourceProxyTypeArrayOutput `pulumi:"proxyTypes"`
	// the IP address. This field is required and must be a string array.
	RealServers pulumi.StringArrayOutput `pulumi:"realServers"`
	// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
	RsType pulumi.IntOutput `pulumi:"rsType"`
}

// NewDomainResource registers a new resource with the given unique name, arguments, and options.
func NewDomainResource(ctx *pulumi.Context,
	name string, args *DomainResourceArgs, opts ...pulumi.ResourceOption) (*DomainResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.InstanceIds == nil {
		return nil, errors.New("invalid value for required argument 'InstanceIds'")
	}
	if args.ProxyTypes == nil {
		return nil, errors.New("invalid value for required argument 'ProxyTypes'")
	}
	if args.RealServers == nil {
		return nil, errors.New("invalid value for required argument 'RealServers'")
	}
	if args.RsType == nil {
		return nil, errors.New("invalid value for required argument 'RsType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainResource
	err := ctx.RegisterResource("alicloud:ddos/domainResource:DomainResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainResource gets an existing DomainResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainResourceState, opts ...pulumi.ResourceOption) (*DomainResource, error) {
	var resource DomainResource
	err := ctx.ReadResource("alicloud:ddos/domainResource:DomainResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainResource resources.
type domainResourceState struct {
	// (Available since v1.207.2) The CNAME assigned to the domain name.
	Cname *string `pulumi:"cname"`
	// The domain name of the website that you want to add to the instance.
	Domain *string `pulumi:"domain"`
	// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
	HttpsExt *string `pulumi:"httpsExt"`
	// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
	// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
	InstanceIds []string `pulumi:"instanceIds"`
	// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
	OcspEnabled *bool `pulumi:"ocspEnabled"`
	// Protocol type and port number information. See `proxyTypes` below.
	// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
	ProxyTypes []DomainResourceProxyType `pulumi:"proxyTypes"`
	// the IP address. This field is required and must be a string array.
	RealServers []string `pulumi:"realServers"`
	// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
	RsType *int `pulumi:"rsType"`
}

type DomainResourceState struct {
	// (Available since v1.207.2) The CNAME assigned to the domain name.
	Cname pulumi.StringPtrInput
	// The domain name of the website that you want to add to the instance.
	Domain pulumi.StringPtrInput
	// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
	HttpsExt pulumi.StringPtrInput
	// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
	// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
	InstanceIds pulumi.StringArrayInput
	// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
	OcspEnabled pulumi.BoolPtrInput
	// Protocol type and port number information. See `proxyTypes` below.
	// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
	ProxyTypes DomainResourceProxyTypeArrayInput
	// the IP address. This field is required and must be a string array.
	RealServers pulumi.StringArrayInput
	// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
	RsType pulumi.IntPtrInput
}

func (DomainResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainResourceState)(nil)).Elem()
}

type domainResourceArgs struct {
	// The domain name of the website that you want to add to the instance.
	Domain string `pulumi:"domain"`
	// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
	HttpsExt *string `pulumi:"httpsExt"`
	// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
	// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
	InstanceIds []string `pulumi:"instanceIds"`
	// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
	OcspEnabled *bool `pulumi:"ocspEnabled"`
	// Protocol type and port number information. See `proxyTypes` below.
	// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
	ProxyTypes []DomainResourceProxyType `pulumi:"proxyTypes"`
	// the IP address. This field is required and must be a string array.
	RealServers []string `pulumi:"realServers"`
	// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
	RsType int `pulumi:"rsType"`
}

// The set of arguments for constructing a DomainResource resource.
type DomainResourceArgs struct {
	// The domain name of the website that you want to add to the instance.
	Domain pulumi.StringInput
	// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
	HttpsExt pulumi.StringPtrInput
	// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
	// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
	InstanceIds pulumi.StringArrayInput
	// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
	OcspEnabled pulumi.BoolPtrInput
	// Protocol type and port number information. See `proxyTypes` below.
	// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
	ProxyTypes DomainResourceProxyTypeArrayInput
	// the IP address. This field is required and must be a string array.
	RealServers pulumi.StringArrayInput
	// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
	RsType pulumi.IntInput
}

func (DomainResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainResourceArgs)(nil)).Elem()
}

type DomainResourceInput interface {
	pulumi.Input

	ToDomainResourceOutput() DomainResourceOutput
	ToDomainResourceOutputWithContext(ctx context.Context) DomainResourceOutput
}

func (*DomainResource) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResource)(nil)).Elem()
}

func (i *DomainResource) ToDomainResourceOutput() DomainResourceOutput {
	return i.ToDomainResourceOutputWithContext(context.Background())
}

func (i *DomainResource) ToDomainResourceOutputWithContext(ctx context.Context) DomainResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceOutput)
}

func (i *DomainResource) ToOutput(ctx context.Context) pulumix.Output[*DomainResource] {
	return pulumix.Output[*DomainResource]{
		OutputState: i.ToDomainResourceOutputWithContext(ctx).OutputState,
	}
}

// DomainResourceArrayInput is an input type that accepts DomainResourceArray and DomainResourceArrayOutput values.
// You can construct a concrete instance of `DomainResourceArrayInput` via:
//
//	DomainResourceArray{ DomainResourceArgs{...} }
type DomainResourceArrayInput interface {
	pulumi.Input

	ToDomainResourceArrayOutput() DomainResourceArrayOutput
	ToDomainResourceArrayOutputWithContext(context.Context) DomainResourceArrayOutput
}

type DomainResourceArray []DomainResourceInput

func (DomainResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainResource)(nil)).Elem()
}

func (i DomainResourceArray) ToDomainResourceArrayOutput() DomainResourceArrayOutput {
	return i.ToDomainResourceArrayOutputWithContext(context.Background())
}

func (i DomainResourceArray) ToDomainResourceArrayOutputWithContext(ctx context.Context) DomainResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceArrayOutput)
}

func (i DomainResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]*DomainResource] {
	return pulumix.Output[[]*DomainResource]{
		OutputState: i.ToDomainResourceArrayOutputWithContext(ctx).OutputState,
	}
}

// DomainResourceMapInput is an input type that accepts DomainResourceMap and DomainResourceMapOutput values.
// You can construct a concrete instance of `DomainResourceMapInput` via:
//
//	DomainResourceMap{ "key": DomainResourceArgs{...} }
type DomainResourceMapInput interface {
	pulumi.Input

	ToDomainResourceMapOutput() DomainResourceMapOutput
	ToDomainResourceMapOutputWithContext(context.Context) DomainResourceMapOutput
}

type DomainResourceMap map[string]DomainResourceInput

func (DomainResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainResource)(nil)).Elem()
}

func (i DomainResourceMap) ToDomainResourceMapOutput() DomainResourceMapOutput {
	return i.ToDomainResourceMapOutputWithContext(context.Background())
}

func (i DomainResourceMap) ToDomainResourceMapOutputWithContext(ctx context.Context) DomainResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceMapOutput)
}

func (i DomainResourceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainResource] {
	return pulumix.Output[map[string]*DomainResource]{
		OutputState: i.ToDomainResourceMapOutputWithContext(ctx).OutputState,
	}
}

type DomainResourceOutput struct{ *pulumi.OutputState }

func (DomainResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResource)(nil)).Elem()
}

func (o DomainResourceOutput) ToDomainResourceOutput() DomainResourceOutput {
	return o
}

func (o DomainResourceOutput) ToDomainResourceOutputWithContext(ctx context.Context) DomainResourceOutput {
	return o
}

func (o DomainResourceOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainResource] {
	return pulumix.Output[*DomainResource]{
		OutputState: o.OutputState,
	}
}

// (Available since v1.207.2) The CNAME assigned to the domain name.
func (o DomainResourceOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// The domain name of the website that you want to add to the instance.
func (o DomainResourceOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
func (o DomainResourceOutput) HttpsExt() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.StringOutput { return v.HttpsExt }).(pulumi.StringOutput)
}

// A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
// > **NOTE:** There is a potential diff error because of the order of `instanceIds` values indefinite. So, from version 1.161.0, `instanceIds` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
func (o DomainResourceOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.StringArrayOutput { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
func (o DomainResourceOutput) OcspEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.BoolPtrOutput { return v.OcspEnabled }).(pulumi.BoolPtrOutput)
}

// Protocol type and port number information. See `proxyTypes` below.
// > **NOTE:** From version 1.206.0, `proxyTypes` can be modified.
func (o DomainResourceOutput) ProxyTypes() DomainResourceProxyTypeArrayOutput {
	return o.ApplyT(func(v *DomainResource) DomainResourceProxyTypeArrayOutput { return v.ProxyTypes }).(DomainResourceProxyTypeArrayOutput)
}

// the IP address. This field is required and must be a string array.
func (o DomainResourceOutput) RealServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.StringArrayOutput { return v.RealServers }).(pulumi.StringArrayOutput)
}

// The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
func (o DomainResourceOutput) RsType() pulumi.IntOutput {
	return o.ApplyT(func(v *DomainResource) pulumi.IntOutput { return v.RsType }).(pulumi.IntOutput)
}

type DomainResourceArrayOutput struct{ *pulumi.OutputState }

func (DomainResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainResource)(nil)).Elem()
}

func (o DomainResourceArrayOutput) ToDomainResourceArrayOutput() DomainResourceArrayOutput {
	return o
}

func (o DomainResourceArrayOutput) ToDomainResourceArrayOutputWithContext(ctx context.Context) DomainResourceArrayOutput {
	return o
}

func (o DomainResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DomainResource] {
	return pulumix.Output[[]*DomainResource]{
		OutputState: o.OutputState,
	}
}

func (o DomainResourceArrayOutput) Index(i pulumi.IntInput) DomainResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainResource {
		return vs[0].([]*DomainResource)[vs[1].(int)]
	}).(DomainResourceOutput)
}

type DomainResourceMapOutput struct{ *pulumi.OutputState }

func (DomainResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainResource)(nil)).Elem()
}

func (o DomainResourceMapOutput) ToDomainResourceMapOutput() DomainResourceMapOutput {
	return o
}

func (o DomainResourceMapOutput) ToDomainResourceMapOutputWithContext(ctx context.Context) DomainResourceMapOutput {
	return o
}

func (o DomainResourceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DomainResource] {
	return pulumix.Output[map[string]*DomainResource]{
		OutputState: o.OutputState,
	}
}

func (o DomainResourceMapOutput) MapIndex(k pulumi.StringInput) DomainResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainResource {
		return vs[0].(map[string]*DomainResource)[vs[1].(string)]
	}).(DomainResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceInput)(nil)).Elem(), &DomainResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceArrayInput)(nil)).Elem(), DomainResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceMapInput)(nil)).Elem(), DomainResourceMap{})
	pulumi.RegisterOutputType(DomainResourceOutput{})
	pulumi.RegisterOutputType(DomainResourceArrayOutput{})
	pulumi.RegisterOutputType(DomainResourceMapOutput{})
}
