// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fnf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetExecutionsExecution struct {
	// The name of the execution.
	ExecutionName string `pulumi:"executionName"`
	// The name of the flow.
	FlowName string `pulumi:"flowName"`
	// The ID of the Execution. The value formats as `<flow_name>:<execution_name>`.
	Id string `pulumi:"id"`
	// The Input information for this execution.
	Input string `pulumi:"input"`
	// The output of the execution.
	Output string `pulumi:"output"`
	// The started time of the execution.
	StartedTime string `pulumi:"startedTime"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The stopped time of the execution.
	StoppedTime string `pulumi:"stoppedTime"`
}

// GetExecutionsExecutionInput is an input type that accepts GetExecutionsExecutionArgs and GetExecutionsExecutionOutput values.
// You can construct a concrete instance of `GetExecutionsExecutionInput` via:
//
//          GetExecutionsExecutionArgs{...}
type GetExecutionsExecutionInput interface {
	pulumi.Input

	ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput
	ToGetExecutionsExecutionOutputWithContext(context.Context) GetExecutionsExecutionOutput
}

type GetExecutionsExecutionArgs struct {
	// The name of the execution.
	ExecutionName pulumi.StringInput `pulumi:"executionName"`
	// The name of the flow.
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The ID of the Execution. The value formats as `<flow_name>:<execution_name>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The Input information for this execution.
	Input pulumi.StringInput `pulumi:"input"`
	// The output of the execution.
	Output pulumi.StringInput `pulumi:"output"`
	// The started time of the execution.
	StartedTime pulumi.StringInput `pulumi:"startedTime"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The stopped time of the execution.
	StoppedTime pulumi.StringInput `pulumi:"stoppedTime"`
}

func (GetExecutionsExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionsExecution)(nil)).Elem()
}

func (i GetExecutionsExecutionArgs) ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput {
	return i.ToGetExecutionsExecutionOutputWithContext(context.Background())
}

func (i GetExecutionsExecutionArgs) ToGetExecutionsExecutionOutputWithContext(ctx context.Context) GetExecutionsExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExecutionsExecutionOutput)
}

// GetExecutionsExecutionArrayInput is an input type that accepts GetExecutionsExecutionArray and GetExecutionsExecutionArrayOutput values.
// You can construct a concrete instance of `GetExecutionsExecutionArrayInput` via:
//
//          GetExecutionsExecutionArray{ GetExecutionsExecutionArgs{...} }
type GetExecutionsExecutionArrayInput interface {
	pulumi.Input

	ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput
	ToGetExecutionsExecutionArrayOutputWithContext(context.Context) GetExecutionsExecutionArrayOutput
}

type GetExecutionsExecutionArray []GetExecutionsExecutionInput

func (GetExecutionsExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExecutionsExecution)(nil)).Elem()
}

func (i GetExecutionsExecutionArray) ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput {
	return i.ToGetExecutionsExecutionArrayOutputWithContext(context.Background())
}

func (i GetExecutionsExecutionArray) ToGetExecutionsExecutionArrayOutputWithContext(ctx context.Context) GetExecutionsExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExecutionsExecutionArrayOutput)
}

type GetExecutionsExecutionOutput struct{ *pulumi.OutputState }

func (GetExecutionsExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionsExecution)(nil)).Elem()
}

func (o GetExecutionsExecutionOutput) ToGetExecutionsExecutionOutput() GetExecutionsExecutionOutput {
	return o
}

func (o GetExecutionsExecutionOutput) ToGetExecutionsExecutionOutputWithContext(ctx context.Context) GetExecutionsExecutionOutput {
	return o
}

// The name of the execution.
func (o GetExecutionsExecutionOutput) ExecutionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.ExecutionName }).(pulumi.StringOutput)
}

// The name of the flow.
func (o GetExecutionsExecutionOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.FlowName }).(pulumi.StringOutput)
}

// The ID of the Execution. The value formats as `<flow_name>:<execution_name>`.
func (o GetExecutionsExecutionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Id }).(pulumi.StringOutput)
}

// The Input information for this execution.
func (o GetExecutionsExecutionOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Input }).(pulumi.StringOutput)
}

// The output of the execution.
func (o GetExecutionsExecutionOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Output }).(pulumi.StringOutput)
}

// The started time of the execution.
func (o GetExecutionsExecutionOutput) StartedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.StartedTime }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetExecutionsExecutionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.Status }).(pulumi.StringOutput)
}

// The stopped time of the execution.
func (o GetExecutionsExecutionOutput) StoppedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionsExecution) string { return v.StoppedTime }).(pulumi.StringOutput)
}

type GetExecutionsExecutionArrayOutput struct{ *pulumi.OutputState }

func (GetExecutionsExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExecutionsExecution)(nil)).Elem()
}

func (o GetExecutionsExecutionArrayOutput) ToGetExecutionsExecutionArrayOutput() GetExecutionsExecutionArrayOutput {
	return o
}

func (o GetExecutionsExecutionArrayOutput) ToGetExecutionsExecutionArrayOutputWithContext(ctx context.Context) GetExecutionsExecutionArrayOutput {
	return o
}

func (o GetExecutionsExecutionArrayOutput) Index(i pulumi.IntInput) GetExecutionsExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExecutionsExecution {
		return vs[0].([]GetExecutionsExecution)[vs[1].(int)]
	}).(GetExecutionsExecutionOutput)
}

type GetFlowsFlow struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition string `pulumi:"definition"`
	// The description of the flow.
	Description string `pulumi:"description"`
	// The unique ID of the flow.
	FlowId string `pulumi:"flowId"`
	// The ID of the Flow.
	Id string `pulumi:"id"`
	// The time when the flow was last modified.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name string `pulumi:"name"`
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn string `pulumi:"roleArn"`
	// The type of the flow. Set the value to `FDL`.
	Type string `pulumi:"type"`
}

// GetFlowsFlowInput is an input type that accepts GetFlowsFlowArgs and GetFlowsFlowOutput values.
// You can construct a concrete instance of `GetFlowsFlowInput` via:
//
//          GetFlowsFlowArgs{...}
type GetFlowsFlowInput interface {
	pulumi.Input

	ToGetFlowsFlowOutput() GetFlowsFlowOutput
	ToGetFlowsFlowOutputWithContext(context.Context) GetFlowsFlowOutput
}

type GetFlowsFlowArgs struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition pulumi.StringInput `pulumi:"definition"`
	// The description of the flow.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID of the flow.
	FlowId pulumi.StringInput `pulumi:"flowId"`
	// The ID of the Flow.
	Id pulumi.StringInput `pulumi:"id"`
	// The time when the flow was last modified.
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name pulumi.StringInput `pulumi:"name"`
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The type of the flow. Set the value to `FDL`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFlowsFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowsFlow)(nil)).Elem()
}

func (i GetFlowsFlowArgs) ToGetFlowsFlowOutput() GetFlowsFlowOutput {
	return i.ToGetFlowsFlowOutputWithContext(context.Background())
}

func (i GetFlowsFlowArgs) ToGetFlowsFlowOutputWithContext(ctx context.Context) GetFlowsFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowsFlowOutput)
}

// GetFlowsFlowArrayInput is an input type that accepts GetFlowsFlowArray and GetFlowsFlowArrayOutput values.
// You can construct a concrete instance of `GetFlowsFlowArrayInput` via:
//
//          GetFlowsFlowArray{ GetFlowsFlowArgs{...} }
type GetFlowsFlowArrayInput interface {
	pulumi.Input

	ToGetFlowsFlowArrayOutput() GetFlowsFlowArrayOutput
	ToGetFlowsFlowArrayOutputWithContext(context.Context) GetFlowsFlowArrayOutput
}

type GetFlowsFlowArray []GetFlowsFlowInput

func (GetFlowsFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowsFlow)(nil)).Elem()
}

func (i GetFlowsFlowArray) ToGetFlowsFlowArrayOutput() GetFlowsFlowArrayOutput {
	return i.ToGetFlowsFlowArrayOutputWithContext(context.Background())
}

func (i GetFlowsFlowArray) ToGetFlowsFlowArrayOutputWithContext(ctx context.Context) GetFlowsFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowsFlowArrayOutput)
}

type GetFlowsFlowOutput struct{ *pulumi.OutputState }

func (GetFlowsFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowsFlow)(nil)).Elem()
}

func (o GetFlowsFlowOutput) ToGetFlowsFlowOutput() GetFlowsFlowOutput {
	return o
}

func (o GetFlowsFlowOutput) ToGetFlowsFlowOutputWithContext(ctx context.Context) GetFlowsFlowOutput {
	return o
}

// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
func (o GetFlowsFlowOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.Definition }).(pulumi.StringOutput)
}

// The description of the flow.
func (o GetFlowsFlowOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID of the flow.
func (o GetFlowsFlowOutput) FlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.FlowId }).(pulumi.StringOutput)
}

// The ID of the Flow.
func (o GetFlowsFlowOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.Id }).(pulumi.StringOutput)
}

// The time when the flow was last modified.
func (o GetFlowsFlowOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The name of the flow. The name must be unique in an Alibaba Cloud account.
func (o GetFlowsFlowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.Name }).(pulumi.StringOutput)
}

// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
func (o GetFlowsFlowOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of the flow. Set the value to `FDL`.
func (o GetFlowsFlowOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowsFlow) string { return v.Type }).(pulumi.StringOutput)
}

type GetFlowsFlowArrayOutput struct{ *pulumi.OutputState }

func (GetFlowsFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowsFlow)(nil)).Elem()
}

func (o GetFlowsFlowArrayOutput) ToGetFlowsFlowArrayOutput() GetFlowsFlowArrayOutput {
	return o
}

func (o GetFlowsFlowArrayOutput) ToGetFlowsFlowArrayOutputWithContext(ctx context.Context) GetFlowsFlowArrayOutput {
	return o
}

func (o GetFlowsFlowArrayOutput) Index(i pulumi.IntInput) GetFlowsFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowsFlow {
		return vs[0].([]GetFlowsFlow)[vs[1].(int)]
	}).(GetFlowsFlowOutput)
}

type GetSchedulesSchedule struct {
	// The CRON expression of the time-based schedule to be created.
	CronExpression string `pulumi:"cronExpression"`
	// The description of the time-based schedule to be created.
	Description string `pulumi:"description"`
	// Specifies whether to enable the time-based schedule you want to create.
	Enable bool `pulumi:"enable"`
	// The ID of the Schedule.
	Id string `pulumi:"id"`
	// The time when the time-based schedule was last updated.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The trigger message of the time-based schedule to be created. It must be in JSON object format.
	Payload string `pulumi:"payload"`
	// The ID of the time-based schedule.
	ScheduleId string `pulumi:"scheduleId"`
	// The name of the time-based schedule to be created.
	ScheduleName string `pulumi:"scheduleName"`
}

// GetSchedulesScheduleInput is an input type that accepts GetSchedulesScheduleArgs and GetSchedulesScheduleOutput values.
// You can construct a concrete instance of `GetSchedulesScheduleInput` via:
//
//          GetSchedulesScheduleArgs{...}
type GetSchedulesScheduleInput interface {
	pulumi.Input

	ToGetSchedulesScheduleOutput() GetSchedulesScheduleOutput
	ToGetSchedulesScheduleOutputWithContext(context.Context) GetSchedulesScheduleOutput
}

type GetSchedulesScheduleArgs struct {
	// The CRON expression of the time-based schedule to be created.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// The description of the time-based schedule to be created.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to enable the time-based schedule you want to create.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The ID of the Schedule.
	Id pulumi.StringInput `pulumi:"id"`
	// The time when the time-based schedule was last updated.
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// The trigger message of the time-based schedule to be created. It must be in JSON object format.
	Payload pulumi.StringInput `pulumi:"payload"`
	// The ID of the time-based schedule.
	ScheduleId pulumi.StringInput `pulumi:"scheduleId"`
	// The name of the time-based schedule to be created.
	ScheduleName pulumi.StringInput `pulumi:"scheduleName"`
}

func (GetSchedulesScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulesSchedule)(nil)).Elem()
}

func (i GetSchedulesScheduleArgs) ToGetSchedulesScheduleOutput() GetSchedulesScheduleOutput {
	return i.ToGetSchedulesScheduleOutputWithContext(context.Background())
}

func (i GetSchedulesScheduleArgs) ToGetSchedulesScheduleOutputWithContext(ctx context.Context) GetSchedulesScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulesScheduleOutput)
}

// GetSchedulesScheduleArrayInput is an input type that accepts GetSchedulesScheduleArray and GetSchedulesScheduleArrayOutput values.
// You can construct a concrete instance of `GetSchedulesScheduleArrayInput` via:
//
//          GetSchedulesScheduleArray{ GetSchedulesScheduleArgs{...} }
type GetSchedulesScheduleArrayInput interface {
	pulumi.Input

	ToGetSchedulesScheduleArrayOutput() GetSchedulesScheduleArrayOutput
	ToGetSchedulesScheduleArrayOutputWithContext(context.Context) GetSchedulesScheduleArrayOutput
}

type GetSchedulesScheduleArray []GetSchedulesScheduleInput

func (GetSchedulesScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulesSchedule)(nil)).Elem()
}

func (i GetSchedulesScheduleArray) ToGetSchedulesScheduleArrayOutput() GetSchedulesScheduleArrayOutput {
	return i.ToGetSchedulesScheduleArrayOutputWithContext(context.Background())
}

func (i GetSchedulesScheduleArray) ToGetSchedulesScheduleArrayOutputWithContext(ctx context.Context) GetSchedulesScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulesScheduleArrayOutput)
}

type GetSchedulesScheduleOutput struct{ *pulumi.OutputState }

func (GetSchedulesScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulesSchedule)(nil)).Elem()
}

func (o GetSchedulesScheduleOutput) ToGetSchedulesScheduleOutput() GetSchedulesScheduleOutput {
	return o
}

func (o GetSchedulesScheduleOutput) ToGetSchedulesScheduleOutputWithContext(ctx context.Context) GetSchedulesScheduleOutput {
	return o
}

// The CRON expression of the time-based schedule to be created.
func (o GetSchedulesScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// The description of the time-based schedule to be created.
func (o GetSchedulesScheduleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to enable the time-based schedule you want to create.
func (o GetSchedulesScheduleOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The ID of the Schedule.
func (o GetSchedulesScheduleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.Id }).(pulumi.StringOutput)
}

// The time when the time-based schedule was last updated.
func (o GetSchedulesScheduleOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The trigger message of the time-based schedule to be created. It must be in JSON object format.
func (o GetSchedulesScheduleOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.Payload }).(pulumi.StringOutput)
}

// The ID of the time-based schedule.
func (o GetSchedulesScheduleOutput) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.ScheduleId }).(pulumi.StringOutput)
}

// The name of the time-based schedule to be created.
func (o GetSchedulesScheduleOutput) ScheduleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulesSchedule) string { return v.ScheduleName }).(pulumi.StringOutput)
}

type GetSchedulesScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetSchedulesScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulesSchedule)(nil)).Elem()
}

func (o GetSchedulesScheduleArrayOutput) ToGetSchedulesScheduleArrayOutput() GetSchedulesScheduleArrayOutput {
	return o
}

func (o GetSchedulesScheduleArrayOutput) ToGetSchedulesScheduleArrayOutputWithContext(ctx context.Context) GetSchedulesScheduleArrayOutput {
	return o
}

func (o GetSchedulesScheduleArrayOutput) Index(i pulumi.IntInput) GetSchedulesScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchedulesSchedule {
		return vs[0].([]GetSchedulesSchedule)[vs[1].(int)]
	}).(GetSchedulesScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetExecutionsExecutionInput)(nil)).Elem(), GetExecutionsExecutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExecutionsExecutionArrayInput)(nil)).Elem(), GetExecutionsExecutionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowsFlowInput)(nil)).Elem(), GetFlowsFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowsFlowArrayInput)(nil)).Elem(), GetFlowsFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulesScheduleInput)(nil)).Elem(), GetSchedulesScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulesScheduleArrayInput)(nil)).Elem(), GetSchedulesScheduleArray{})
	pulumi.RegisterOutputType(GetExecutionsExecutionOutput{})
	pulumi.RegisterOutputType(GetExecutionsExecutionArrayOutput{})
	pulumi.RegisterOutputType(GetFlowsFlowOutput{})
	pulumi.RegisterOutputType(GetFlowsFlowArrayOutput{})
	pulumi.RegisterOutputType(GetSchedulesScheduleOutput{})
	pulumi.RegisterOutputType(GetSchedulesScheduleArrayOutput{})
}
