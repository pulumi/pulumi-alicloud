// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nlb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Network Load Balancer (NLB) Listener resource.
//
// For information about Network Load Balancer (NLB) Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/server-load-balancer/latest/api-nlb-2022-04-30-createlistener).
//
// > **NOTE:** Available since v1.191.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/nlb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetZones, err := nlb.GetZones(ctx, &nlb.GetZonesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.4.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				CidrBlock:   pulumi.String("10.4.0.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(defaultGetZones.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			default1, err := vpc.NewSwitch(ctx, "default1", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				CidrBlock:   pulumi.String("10.4.1.0/24"),
//				VpcId:       defaultNetwork.ID(),
//				ZoneId:      pulumi.String(defaultGetZones.Zones[1].Id),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				Name:  pulumi.String(name),
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultLoadBalancer, err := nlb.NewLoadBalancer(ctx, "default", &nlb.LoadBalancerArgs{
//				LoadBalancerName: pulumi.String(name),
//				ResourceGroupId:  pulumi.String(_default.Ids[0]),
//				LoadBalancerType: pulumi.String("Network"),
//				AddressType:      pulumi.String("Internet"),
//				AddressIpVersion: pulumi.String("Ipv4"),
//				VpcId:            defaultNetwork.ID(),
//				Tags: pulumi.StringMap{
//					"Created": pulumi.String("TF"),
//					"For":     pulumi.String("example"),
//				},
//				ZoneMappings: nlb.LoadBalancerZoneMappingArray{
//					&nlb.LoadBalancerZoneMappingArgs{
//						VswitchId: defaultSwitch.ID(),
//						ZoneId:    pulumi.String(defaultGetZones.Zones[0].Id),
//					},
//					&nlb.LoadBalancerZoneMappingArgs{
//						VswitchId: default1.ID(),
//						ZoneId:    pulumi.String(defaultGetZones.Zones[1].Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			defaultServerGroup, err := nlb.NewServerGroup(ctx, "default", &nlb.ServerGroupArgs{
//				ResourceGroupId:        pulumi.String(_default.Ids[0]),
//				ServerGroupName:        pulumi.String(name),
//				ServerGroupType:        pulumi.String("Instance"),
//				VpcId:                  defaultNetwork.ID(),
//				Scheduler:              pulumi.String("Wrr"),
//				Protocol:               pulumi.String("TCP"),
//				ConnectionDrainEnabled: pulumi.Bool(true),
//				ConnectionDrainTimeout: pulumi.Int(60),
//				AddressIpVersion:       pulumi.String("Ipv4"),
//				HealthCheck: &nlb.ServerGroupHealthCheckArgs{
//					HealthCheckEnabled:        pulumi.Bool(true),
//					HealthCheckType:           pulumi.String("TCP"),
//					HealthCheckConnectPort:    pulumi.Int(0),
//					HealthyThreshold:          pulumi.Int(2),
//					UnhealthyThreshold:        pulumi.Int(2),
//					HealthCheckConnectTimeout: pulumi.Int(5),
//					HealthCheckInterval:       pulumi.Int(10),
//					HttpCheckMethod:           pulumi.String("GET"),
//					HealthCheckHttpCodes: pulumi.StringArray{
//						pulumi.String("http_2xx"),
//						pulumi.String("http_3xx"),
//						pulumi.String("http_4xx"),
//					},
//				},
//				Tags: pulumi.StringMap{
//					"Created": pulumi.String("TF"),
//					"For":     pulumi.String("example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nlb.NewListener(ctx, "default", &nlb.ListenerArgs{
//				ListenerProtocol:     pulumi.String("TCP"),
//				ListenerPort:         pulumi.Int(80),
//				ListenerDescription:  pulumi.String(name),
//				LoadBalancerId:       defaultLoadBalancer.ID(),
//				ServerGroupId:        defaultServerGroup.ID(),
//				IdleTimeout:          pulumi.Int(900),
//				ProxyProtocolEnabled: pulumi.Bool(true),
//				Cps:                  pulumi.Int(10000),
//				Mss:                  pulumi.Int(0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Load Balancer (NLB) Listener can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:nlb/listener:Listener example <id>
// ```
type Listener struct {
	pulumi.CustomResourceState

	// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
	AlpnEnabled pulumi.BoolOutput `pulumi:"alpnEnabled"`
	// The ALPN policy. Valid values:
	// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	// - `HTTP2Only`: uses only HTTP 2.0.
	// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
	// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	//
	// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
	//
	// > **NOTE:**  Effective only for TCPSSL listener.
	AlpnPolicy pulumi.StringPtrOutput `pulumi:"alpnPolicy"`
	// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  Only one CA certificate is supported.
	CaCertificateIds pulumi.StringArrayOutput `pulumi:"caCertificateIds"`
	// Specifies whether to enable mutual authentication. Valid values:
	CaEnabled pulumi.BoolOutput `pulumi:"caEnabled"`
	// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
	CertificateIds pulumi.StringArrayOutput `pulumi:"certificateIds"`
	// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
	Cps pulumi.IntPtrOutput `pulumi:"cps"`
	// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	EndPort pulumi.IntPtrOutput `pulumi:"endPort"`
	// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
	IdleTimeout pulumi.IntOutput `pulumi:"idleTimeout"`
	// Enter a name for the listener.
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrOutput `pulumi:"listenerDescription"`
	// The listener port. Valid values: `0` to `65535`.
	// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
	ListenerPort pulumi.IntOutput `pulumi:"listenerPort"`
	// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
	ListenerProtocol pulumi.StringOutput `pulumi:"listenerProtocol"`
	// The ID of the Network Load Balancer (NLB) instance.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
	//
	// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
	Mss pulumi.IntPtrOutput `pulumi:"mss"`
	// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
	ProxyProtocolConfig ListenerProxyProtocolConfigOutput `pulumi:"proxyProtocolConfig"`
	// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
	ProxyProtocolEnabled pulumi.BoolOutput `pulumi:"proxyProtocolEnabled"`
	// The ID of the region where the Network Load Balancer (NLB) instance is deployed.
	// You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// Specifies whether to enable fine-grained monitoring. Valid values:
	SecSensorEnabled pulumi.BoolOutput `pulumi:"secSensorEnabled"`
	// The security policy ID. System security policies and custom security policies are supported.
	//
	// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
	//
	// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// The ID of the server group.
	ServerGroupId pulumi.StringOutput `pulumi:"serverGroupId"`
	// The first port in the listener port range. Valid values: `0` to `65535`.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	StartPort pulumi.IntPtrOutput `pulumi:"startPort"`
	// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewListener registers a new resource with the given unique name, arguments, and options.
func NewListener(ctx *pulumi.Context,
	name string, args *ListenerArgs, opts ...pulumi.ResourceOption) (*Listener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListenerPort == nil {
		return nil, errors.New("invalid value for required argument 'ListenerPort'")
	}
	if args.ListenerProtocol == nil {
		return nil, errors.New("invalid value for required argument 'ListenerProtocol'")
	}
	if args.LoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerId'")
	}
	if args.ServerGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ServerGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Listener
	err := ctx.RegisterResource("alicloud:nlb/listener:Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetListener gets an existing Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ListenerState, opts ...pulumi.ResourceOption) (*Listener, error) {
	var resource Listener
	err := ctx.ReadResource("alicloud:nlb/listener:Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Listener resources.
type listenerState struct {
	// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
	AlpnEnabled *bool `pulumi:"alpnEnabled"`
	// The ALPN policy. Valid values:
	// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	// - `HTTP2Only`: uses only HTTP 2.0.
	// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
	// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	//
	// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
	//
	// > **NOTE:**  Effective only for TCPSSL listener.
	AlpnPolicy *string `pulumi:"alpnPolicy"`
	// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  Only one CA certificate is supported.
	CaCertificateIds []string `pulumi:"caCertificateIds"`
	// Specifies whether to enable mutual authentication. Valid values:
	CaEnabled *bool `pulumi:"caEnabled"`
	// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
	CertificateIds []string `pulumi:"certificateIds"`
	// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
	Cps *int `pulumi:"cps"`
	// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	EndPort *int `pulumi:"endPort"`
	// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// Enter a name for the listener.
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription *string `pulumi:"listenerDescription"`
	// The listener port. Valid values: `0` to `65535`.
	// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
	ListenerPort *int `pulumi:"listenerPort"`
	// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
	ListenerProtocol *string `pulumi:"listenerProtocol"`
	// The ID of the Network Load Balancer (NLB) instance.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
	//
	// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
	Mss *int `pulumi:"mss"`
	// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
	ProxyProtocolConfig *ListenerProxyProtocolConfig `pulumi:"proxyProtocolConfig"`
	// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
	ProxyProtocolEnabled *bool `pulumi:"proxyProtocolEnabled"`
	// The ID of the region where the Network Load Balancer (NLB) instance is deployed.
	// You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
	RegionId *string `pulumi:"regionId"`
	// Specifies whether to enable fine-grained monitoring. Valid values:
	SecSensorEnabled *bool `pulumi:"secSensorEnabled"`
	// The security policy ID. System security policies and custom security policies are supported.
	//
	// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
	//
	// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The ID of the server group.
	ServerGroupId *string `pulumi:"serverGroupId"`
	// The first port in the listener port range. Valid values: `0` to `65535`.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	StartPort *int `pulumi:"startPort"`
	// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
	Status *string `pulumi:"status"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
}

type ListenerState struct {
	// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
	AlpnEnabled pulumi.BoolPtrInput
	// The ALPN policy. Valid values:
	// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	// - `HTTP2Only`: uses only HTTP 2.0.
	// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
	// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	//
	// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
	//
	// > **NOTE:**  Effective only for TCPSSL listener.
	AlpnPolicy pulumi.StringPtrInput
	// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  Only one CA certificate is supported.
	CaCertificateIds pulumi.StringArrayInput
	// Specifies whether to enable mutual authentication. Valid values:
	CaEnabled pulumi.BoolPtrInput
	// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
	CertificateIds pulumi.StringArrayInput
	// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
	Cps pulumi.IntPtrInput
	// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	EndPort pulumi.IntPtrInput
	// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
	IdleTimeout pulumi.IntPtrInput
	// Enter a name for the listener.
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrInput
	// The listener port. Valid values: `0` to `65535`.
	// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
	ListenerPort pulumi.IntPtrInput
	// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
	ListenerProtocol pulumi.StringPtrInput
	// The ID of the Network Load Balancer (NLB) instance.
	LoadBalancerId pulumi.StringPtrInput
	// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
	//
	// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
	Mss pulumi.IntPtrInput
	// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
	ProxyProtocolConfig ListenerProxyProtocolConfigPtrInput
	// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
	ProxyProtocolEnabled pulumi.BoolPtrInput
	// The ID of the region where the Network Load Balancer (NLB) instance is deployed.
	// You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
	RegionId pulumi.StringPtrInput
	// Specifies whether to enable fine-grained monitoring. Valid values:
	SecSensorEnabled pulumi.BoolPtrInput
	// The security policy ID. System security policies and custom security policies are supported.
	//
	// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
	//
	// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
	SecurityPolicyId pulumi.StringPtrInput
	// The ID of the server group.
	ServerGroupId pulumi.StringPtrInput
	// The first port in the listener port range. Valid values: `0` to `65535`.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	StartPort pulumi.IntPtrInput
	// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
	Status pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
}

func (ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerState)(nil)).Elem()
}

type listenerArgs struct {
	// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
	AlpnEnabled *bool `pulumi:"alpnEnabled"`
	// The ALPN policy. Valid values:
	// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	// - `HTTP2Only`: uses only HTTP 2.0.
	// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
	// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	//
	// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
	//
	// > **NOTE:**  Effective only for TCPSSL listener.
	AlpnPolicy *string `pulumi:"alpnPolicy"`
	// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  Only one CA certificate is supported.
	CaCertificateIds []string `pulumi:"caCertificateIds"`
	// Specifies whether to enable mutual authentication. Valid values:
	CaEnabled *bool `pulumi:"caEnabled"`
	// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
	CertificateIds []string `pulumi:"certificateIds"`
	// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
	Cps *int `pulumi:"cps"`
	// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	EndPort *int `pulumi:"endPort"`
	// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// Enter a name for the listener.
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription *string `pulumi:"listenerDescription"`
	// The listener port. Valid values: `0` to `65535`.
	// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
	ListenerPort int `pulumi:"listenerPort"`
	// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
	ListenerProtocol string `pulumi:"listenerProtocol"`
	// The ID of the Network Load Balancer (NLB) instance.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
	//
	// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
	Mss *int `pulumi:"mss"`
	// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
	ProxyProtocolConfig *ListenerProxyProtocolConfig `pulumi:"proxyProtocolConfig"`
	// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
	ProxyProtocolEnabled *bool `pulumi:"proxyProtocolEnabled"`
	// Specifies whether to enable fine-grained monitoring. Valid values:
	SecSensorEnabled *bool `pulumi:"secSensorEnabled"`
	// The security policy ID. System security policies and custom security policies are supported.
	//
	// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
	//
	// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The ID of the server group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The first port in the listener port range. Valid values: `0` to `65535`.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	StartPort *int `pulumi:"startPort"`
	// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
	Status *string `pulumi:"status"`
	// The tag of the resource
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Listener resource.
type ListenerArgs struct {
	// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
	AlpnEnabled pulumi.BoolPtrInput
	// The ALPN policy. Valid values:
	// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	// - `HTTP2Only`: uses only HTTP 2.0.
	// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
	// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
	//
	// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
	//
	// > **NOTE:**  Effective only for TCPSSL listener.
	AlpnPolicy pulumi.StringPtrInput
	// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  Only one CA certificate is supported.
	CaCertificateIds pulumi.StringArrayInput
	// Specifies whether to enable mutual authentication. Valid values:
	CaEnabled pulumi.BoolPtrInput
	// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
	//
	// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
	CertificateIds pulumi.StringArrayInput
	// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
	Cps pulumi.IntPtrInput
	// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	EndPort pulumi.IntPtrInput
	// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
	IdleTimeout pulumi.IntPtrInput
	// Enter a name for the listener.
	// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
	ListenerDescription pulumi.StringPtrInput
	// The listener port. Valid values: `0` to `65535`.
	// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
	ListenerPort pulumi.IntInput
	// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
	ListenerProtocol pulumi.StringInput
	// The ID of the Network Load Balancer (NLB) instance.
	LoadBalancerId pulumi.StringInput
	// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
	//
	// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
	Mss pulumi.IntPtrInput
	// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
	ProxyProtocolConfig ListenerProxyProtocolConfigPtrInput
	// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
	ProxyProtocolEnabled pulumi.BoolPtrInput
	// Specifies whether to enable fine-grained monitoring. Valid values:
	SecSensorEnabled pulumi.BoolPtrInput
	// The security policy ID. System security policies and custom security policies are supported.
	//
	// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
	//
	// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
	SecurityPolicyId pulumi.StringPtrInput
	// The ID of the server group.
	ServerGroupId pulumi.StringInput
	// The first port in the listener port range. Valid values: `0` to `65535`.
	//
	// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
	StartPort pulumi.IntPtrInput
	// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
	Status pulumi.StringPtrInput
	// The tag of the resource
	Tags pulumi.StringMapInput
}

func (ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerArgs)(nil)).Elem()
}

type ListenerInput interface {
	pulumi.Input

	ToListenerOutput() ListenerOutput
	ToListenerOutputWithContext(ctx context.Context) ListenerOutput
}

func (*Listener) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (i *Listener) ToListenerOutput() ListenerOutput {
	return i.ToListenerOutputWithContext(context.Background())
}

func (i *Listener) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerOutput)
}

// ListenerArrayInput is an input type that accepts ListenerArray and ListenerArrayOutput values.
// You can construct a concrete instance of `ListenerArrayInput` via:
//
//	ListenerArray{ ListenerArgs{...} }
type ListenerArrayInput interface {
	pulumi.Input

	ToListenerArrayOutput() ListenerArrayOutput
	ToListenerArrayOutputWithContext(context.Context) ListenerArrayOutput
}

type ListenerArray []ListenerInput

func (ListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (i ListenerArray) ToListenerArrayOutput() ListenerArrayOutput {
	return i.ToListenerArrayOutputWithContext(context.Background())
}

func (i ListenerArray) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerArrayOutput)
}

// ListenerMapInput is an input type that accepts ListenerMap and ListenerMapOutput values.
// You can construct a concrete instance of `ListenerMapInput` via:
//
//	ListenerMap{ "key": ListenerArgs{...} }
type ListenerMapInput interface {
	pulumi.Input

	ToListenerMapOutput() ListenerMapOutput
	ToListenerMapOutputWithContext(context.Context) ListenerMapOutput
}

type ListenerMap map[string]ListenerInput

func (ListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (i ListenerMap) ToListenerMapOutput() ListenerMapOutput {
	return i.ToListenerMapOutputWithContext(context.Background())
}

func (i ListenerMap) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMapOutput)
}

type ListenerOutput struct{ *pulumi.OutputState }

func (ListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Listener)(nil)).Elem()
}

func (o ListenerOutput) ToListenerOutput() ListenerOutput {
	return o
}

func (o ListenerOutput) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return o
}

// Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
func (o ListenerOutput) AlpnEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolOutput { return v.AlpnEnabled }).(pulumi.BoolOutput)
}

// The ALPN policy. Valid values:
// - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
// - `HTTP2Only`: uses only HTTP 2.0.
// - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
// - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
//
// > **NOTE:**  This parameter is required if AlpnEnabled is set to true.
//
// > **NOTE:**  Effective only for TCPSSL listener.
func (o ListenerOutput) AlpnPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.AlpnPolicy }).(pulumi.StringPtrOutput)
}

// The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
//
// > **NOTE:**  Only one CA certificate is supported.
func (o ListenerOutput) CaCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringArrayOutput { return v.CaCertificateIds }).(pulumi.StringArrayOutput)
}

// Specifies whether to enable mutual authentication. Valid values:
func (o ListenerOutput) CaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolOutput { return v.CaEnabled }).(pulumi.BoolOutput)
}

// The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
//
// > **NOTE:**  This parameter takes effect only for TCPSSL listeners.
func (o ListenerOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringArrayOutput { return v.CertificateIds }).(pulumi.StringArrayOutput)
}

// The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
func (o ListenerOutput) Cps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.Cps }).(pulumi.IntPtrOutput)
}

// The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
//
// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
func (o ListenerOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.EndPort }).(pulumi.IntPtrOutput)
}

// The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
func (o ListenerOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntOutput { return v.IdleTimeout }).(pulumi.IntOutput)
}

// Enter a name for the listener.
// The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (\_), and hyphens (-).
func (o ListenerOutput) ListenerDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringPtrOutput { return v.ListenerDescription }).(pulumi.StringPtrOutput)
}

// The listener port. Valid values: `0` to `65535`.
// If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
func (o ListenerOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntOutput { return v.ListenerPort }).(pulumi.IntOutput)
}

// The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
func (o ListenerOutput) ListenerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.ListenerProtocol }).(pulumi.StringOutput)
}

// The ID of the Network Load Balancer (NLB) instance.
func (o ListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
//
// > **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
func (o ListenerOutput) Mss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.Mss }).(pulumi.IntPtrOutput)
}

// The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxyProtocolConfig` below.
func (o ListenerOutput) ProxyProtocolConfig() ListenerProxyProtocolConfigOutput {
	return o.ApplyT(func(v *Listener) ListenerProxyProtocolConfigOutput { return v.ProxyProtocolConfig }).(ListenerProxyProtocolConfigOutput)
}

// Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
func (o ListenerOutput) ProxyProtocolEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolOutput { return v.ProxyProtocolEnabled }).(pulumi.BoolOutput)
}

// The ID of the region where the Network Load Balancer (NLB) instance is deployed.
// You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
func (o ListenerOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// Specifies whether to enable fine-grained monitoring. Valid values:
func (o ListenerOutput) SecSensorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Listener) pulumi.BoolOutput { return v.SecSensorEnabled }).(pulumi.BoolOutput)
}

// The security policy ID. System security policies and custom security policies are supported.
//
// Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
//
// > **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
func (o ListenerOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// The ID of the server group.
func (o ListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The first port in the listener port range. Valid values: `0` to `65535`.
//
// > **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
func (o ListenerOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Listener) pulumi.IntPtrOutput { return v.StartPort }).(pulumi.IntPtrOutput)
}

// The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
func (o ListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource
func (o ListenerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Listener) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ListenerArrayOutput struct{ *pulumi.OutputState }

func (ListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Listener)(nil)).Elem()
}

func (o ListenerArrayOutput) ToListenerArrayOutput() ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) ToListenerArrayOutputWithContext(ctx context.Context) ListenerArrayOutput {
	return o
}

func (o ListenerArrayOutput) Index(i pulumi.IntInput) ListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].([]*Listener)[vs[1].(int)]
	}).(ListenerOutput)
}

type ListenerMapOutput struct{ *pulumi.OutputState }

func (ListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Listener)(nil)).Elem()
}

func (o ListenerMapOutput) ToListenerMapOutput() ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) ToListenerMapOutputWithContext(ctx context.Context) ListenerMapOutput {
	return o
}

func (o ListenerMapOutput) MapIndex(k pulumi.StringInput) ListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Listener {
		return vs[0].(map[string]*Listener)[vs[1].(string)]
	}).(ListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerInput)(nil)).Elem(), &Listener{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerArrayInput)(nil)).Elem(), ListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMapInput)(nil)).Elem(), ListenerMap{})
	pulumi.RegisterOutputType(ListenerOutput{})
	pulumi.RegisterOutputType(ListenerArrayOutput{})
	pulumi.RegisterOutputType(ListenerMapOutput{})
}
