// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudphone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PolicyNetRedirectPolicy struct {
	// Whether to manually configure the transparent proxy.
	CustomProxy *string `pulumi:"customProxy"`
	// The transparent proxy IP address. The format is IPv4 address.
	HostAddr *string `pulumi:"hostAddr"`
	// Whether to enable network redirection.
	NetRedirect *string `pulumi:"netRedirect"`
	// Transparent proxy port. The Port value range is 1\~ 65535.
	Port *string `pulumi:"port"`
	// The proxy password. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
	ProxyPassword *string `pulumi:"proxyPassword"`
	// Agent protocol type.
	ProxyType *string `pulumi:"proxyType"`
	// The proxy user name. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
	ProxyUserName *string `pulumi:"proxyUserName"`
}

// PolicyNetRedirectPolicyInput is an input type that accepts PolicyNetRedirectPolicyArgs and PolicyNetRedirectPolicyOutput values.
// You can construct a concrete instance of `PolicyNetRedirectPolicyInput` via:
//
//	PolicyNetRedirectPolicyArgs{...}
type PolicyNetRedirectPolicyInput interface {
	pulumi.Input

	ToPolicyNetRedirectPolicyOutput() PolicyNetRedirectPolicyOutput
	ToPolicyNetRedirectPolicyOutputWithContext(context.Context) PolicyNetRedirectPolicyOutput
}

type PolicyNetRedirectPolicyArgs struct {
	// Whether to manually configure the transparent proxy.
	CustomProxy pulumi.StringPtrInput `pulumi:"customProxy"`
	// The transparent proxy IP address. The format is IPv4 address.
	HostAddr pulumi.StringPtrInput `pulumi:"hostAddr"`
	// Whether to enable network redirection.
	NetRedirect pulumi.StringPtrInput `pulumi:"netRedirect"`
	// Transparent proxy port. The Port value range is 1\~ 65535.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The proxy password. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
	ProxyPassword pulumi.StringPtrInput `pulumi:"proxyPassword"`
	// Agent protocol type.
	ProxyType pulumi.StringPtrInput `pulumi:"proxyType"`
	// The proxy user name. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
	ProxyUserName pulumi.StringPtrInput `pulumi:"proxyUserName"`
}

func (PolicyNetRedirectPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetRedirectPolicy)(nil)).Elem()
}

func (i PolicyNetRedirectPolicyArgs) ToPolicyNetRedirectPolicyOutput() PolicyNetRedirectPolicyOutput {
	return i.ToPolicyNetRedirectPolicyOutputWithContext(context.Background())
}

func (i PolicyNetRedirectPolicyArgs) ToPolicyNetRedirectPolicyOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetRedirectPolicyOutput)
}

func (i PolicyNetRedirectPolicyArgs) ToPolicyNetRedirectPolicyPtrOutput() PolicyNetRedirectPolicyPtrOutput {
	return i.ToPolicyNetRedirectPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyNetRedirectPolicyArgs) ToPolicyNetRedirectPolicyPtrOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetRedirectPolicyOutput).ToPolicyNetRedirectPolicyPtrOutputWithContext(ctx)
}

// PolicyNetRedirectPolicyPtrInput is an input type that accepts PolicyNetRedirectPolicyArgs, PolicyNetRedirectPolicyPtr and PolicyNetRedirectPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyNetRedirectPolicyPtrInput` via:
//
//	        PolicyNetRedirectPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyNetRedirectPolicyPtrInput interface {
	pulumi.Input

	ToPolicyNetRedirectPolicyPtrOutput() PolicyNetRedirectPolicyPtrOutput
	ToPolicyNetRedirectPolicyPtrOutputWithContext(context.Context) PolicyNetRedirectPolicyPtrOutput
}

type policyNetRedirectPolicyPtrType PolicyNetRedirectPolicyArgs

func PolicyNetRedirectPolicyPtr(v *PolicyNetRedirectPolicyArgs) PolicyNetRedirectPolicyPtrInput {
	return (*policyNetRedirectPolicyPtrType)(v)
}

func (*policyNetRedirectPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetRedirectPolicy)(nil)).Elem()
}

func (i *policyNetRedirectPolicyPtrType) ToPolicyNetRedirectPolicyPtrOutput() PolicyNetRedirectPolicyPtrOutput {
	return i.ToPolicyNetRedirectPolicyPtrOutputWithContext(context.Background())
}

func (i *policyNetRedirectPolicyPtrType) ToPolicyNetRedirectPolicyPtrOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetRedirectPolicyPtrOutput)
}

type PolicyNetRedirectPolicyOutput struct{ *pulumi.OutputState }

func (PolicyNetRedirectPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetRedirectPolicy)(nil)).Elem()
}

func (o PolicyNetRedirectPolicyOutput) ToPolicyNetRedirectPolicyOutput() PolicyNetRedirectPolicyOutput {
	return o
}

func (o PolicyNetRedirectPolicyOutput) ToPolicyNetRedirectPolicyOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyOutput {
	return o
}

func (o PolicyNetRedirectPolicyOutput) ToPolicyNetRedirectPolicyPtrOutput() PolicyNetRedirectPolicyPtrOutput {
	return o.ToPolicyNetRedirectPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyNetRedirectPolicyOutput) ToPolicyNetRedirectPolicyPtrOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetRedirectPolicy) *PolicyNetRedirectPolicy {
		return &v
	}).(PolicyNetRedirectPolicyPtrOutput)
}

// Whether to manually configure the transparent proxy.
func (o PolicyNetRedirectPolicyOutput) CustomProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.CustomProxy }).(pulumi.StringPtrOutput)
}

// The transparent proxy IP address. The format is IPv4 address.
func (o PolicyNetRedirectPolicyOutput) HostAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.HostAddr }).(pulumi.StringPtrOutput)
}

// Whether to enable network redirection.
func (o PolicyNetRedirectPolicyOutput) NetRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.NetRedirect }).(pulumi.StringPtrOutput)
}

// Transparent proxy port. The Port value range is 1\~ 65535.
func (o PolicyNetRedirectPolicyOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The proxy password. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
func (o PolicyNetRedirectPolicyOutput) ProxyPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.ProxyPassword }).(pulumi.StringPtrOutput)
}

// Agent protocol type.
func (o PolicyNetRedirectPolicyOutput) ProxyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.ProxyType }).(pulumi.StringPtrOutput)
}

// The proxy user name. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
func (o PolicyNetRedirectPolicyOutput) ProxyUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetRedirectPolicy) *string { return v.ProxyUserName }).(pulumi.StringPtrOutput)
}

type PolicyNetRedirectPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetRedirectPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetRedirectPolicy)(nil)).Elem()
}

func (o PolicyNetRedirectPolicyPtrOutput) ToPolicyNetRedirectPolicyPtrOutput() PolicyNetRedirectPolicyPtrOutput {
	return o
}

func (o PolicyNetRedirectPolicyPtrOutput) ToPolicyNetRedirectPolicyPtrOutputWithContext(ctx context.Context) PolicyNetRedirectPolicyPtrOutput {
	return o
}

func (o PolicyNetRedirectPolicyPtrOutput) Elem() PolicyNetRedirectPolicyOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) PolicyNetRedirectPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyNetRedirectPolicy
		return ret
	}).(PolicyNetRedirectPolicyOutput)
}

// Whether to manually configure the transparent proxy.
func (o PolicyNetRedirectPolicyPtrOutput) CustomProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.CustomProxy
	}).(pulumi.StringPtrOutput)
}

// The transparent proxy IP address. The format is IPv4 address.
func (o PolicyNetRedirectPolicyPtrOutput) HostAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.HostAddr
	}).(pulumi.StringPtrOutput)
}

// Whether to enable network redirection.
func (o PolicyNetRedirectPolicyPtrOutput) NetRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.NetRedirect
	}).(pulumi.StringPtrOutput)
}

// Transparent proxy port. The Port value range is 1\~ 65535.
func (o PolicyNetRedirectPolicyPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The proxy password. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
func (o PolicyNetRedirectPolicyPtrOutput) ProxyPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ProxyPassword
	}).(pulumi.StringPtrOutput)
}

// Agent protocol type.
func (o PolicyNetRedirectPolicyPtrOutput) ProxyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ProxyType
	}).(pulumi.StringPtrOutput)
}

// The proxy user name. The length range is 1\~ 256. Chinese characters and white space characters are not allowed.
func (o PolicyNetRedirectPolicyPtrOutput) ProxyUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyNetRedirectPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ProxyUserName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetRedirectPolicyInput)(nil)).Elem(), PolicyNetRedirectPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetRedirectPolicyPtrInput)(nil)).Elem(), PolicyNetRedirectPolicyArgs{})
	pulumi.RegisterOutputType(PolicyNetRedirectPolicyOutput{})
	pulumi.RegisterOutputType(PolicyNetRedirectPolicyPtrOutput{})
}
