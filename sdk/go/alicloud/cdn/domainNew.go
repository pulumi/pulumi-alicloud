// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CDN Domain resource. CDN domain name.
//
// For information about CDN Domain and how to use it, see [What is Domain](https://www.alibabacloud.com/help/en/cdn/developer-reference/api-cdn-2018-05-10-addcdndomain).
//
// > **NOTE:** Available since v1.34.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			domainName := "mycdndomain.alicloud-provider.cn"
//			if param := cfg.Get("domainName"); param != "" {
//				domainName = param
//			}
//			_, err := cdn.NewDomainNew(ctx, "default", &cdn.DomainNewArgs{
//				Scope:      pulumi.String("overseas"),
//				DomainName: pulumi.String(domainName),
//				CdnType:    pulumi.String("web"),
//				Sources: cdn.DomainNewSourceArray{
//					&cdn.DomainNewSourceArgs{
//						Type:     pulumi.String("ipaddr"),
//						Content:  pulumi.String("1.1.1.1"),
//						Priority: pulumi.Int(20),
//						Port:     pulumi.Int(80),
//						Weight:   pulumi.Int(15),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CDN Domain can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:cdn/domainNew:DomainNew example <id>
//
// ```
type DomainNew struct {
	pulumi.CustomResourceState

	// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
	CdnType pulumi.StringOutput `pulumi:"cdnType"`
	// Certificate configuration. See `certificateConfig` below.
	CertificateConfig DomainNewCertificateConfigOutput `pulumi:"certificateConfig"`
	// Health test URL.
	CheckUrl pulumi.StringPtrOutput `pulumi:"checkUrl"`
	// The CNAME domain name corresponding to the accelerated domain name.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
	// - **domestic**: Mainland China only.
	// - **overseas**: Global (excluding Mainland China).
	// - **global**: global.
	//   The default value is **domestic**.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// The source address list of the accelerated domain. Defaults to null. See `sources` below.
	Sources DomainNewSourceArrayOutput `pulumi:"sources"`
	// The status of the resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewDomainNew registers a new resource with the given unique name, arguments, and options.
func NewDomainNew(ctx *pulumi.Context,
	name string, args *DomainNewArgs, opts ...pulumi.ResourceOption) (*DomainNew, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnType == nil {
		return nil, errors.New("invalid value for required argument 'CdnType'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.Sources == nil {
		return nil, errors.New("invalid value for required argument 'Sources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainNew
	err := ctx.RegisterResource("alicloud:cdn/domainNew:DomainNew", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainNew gets an existing DomainNew resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainNew(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNewState, opts ...pulumi.ResourceOption) (*DomainNew, error) {
	var resource DomainNew
	err := ctx.ReadResource("alicloud:cdn/domainNew:DomainNew", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainNew resources.
type domainNewState struct {
	// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
	CdnType *string `pulumi:"cdnType"`
	// Certificate configuration. See `certificateConfig` below.
	CertificateConfig *DomainNewCertificateConfig `pulumi:"certificateConfig"`
	// Health test URL.
	CheckUrl *string `pulumi:"checkUrl"`
	// The CNAME domain name corresponding to the accelerated domain name.
	Cname *string `pulumi:"cname"`
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName *string `pulumi:"domainName"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
	// - **domestic**: Mainland China only.
	// - **overseas**: Global (excluding Mainland China).
	// - **global**: global.
	//   The default value is **domestic**.
	Scope *string `pulumi:"scope"`
	// The source address list of the accelerated domain. Defaults to null. See `sources` below.
	Sources []DomainNewSource `pulumi:"sources"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

type DomainNewState struct {
	// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
	CdnType pulumi.StringPtrInput
	// Certificate configuration. See `certificateConfig` below.
	CertificateConfig DomainNewCertificateConfigPtrInput
	// Health test URL.
	CheckUrl pulumi.StringPtrInput
	// The CNAME domain name corresponding to the accelerated domain name.
	Cname pulumi.StringPtrInput
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
	// - **domestic**: Mainland China only.
	// - **overseas**: Global (excluding Mainland China).
	// - **global**: global.
	//   The default value is **domestic**.
	Scope pulumi.StringPtrInput
	// The source address list of the accelerated domain. Defaults to null. See `sources` below.
	Sources DomainNewSourceArrayInput
	// The status of the resource.
	Status pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.MapInput
}

func (DomainNewState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNewState)(nil)).Elem()
}

type domainNewArgs struct {
	// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
	CdnType string `pulumi:"cdnType"`
	// Certificate configuration. See `certificateConfig` below.
	CertificateConfig *DomainNewCertificateConfig `pulumi:"certificateConfig"`
	// Health test URL.
	CheckUrl *string `pulumi:"checkUrl"`
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName string `pulumi:"domainName"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
	// - **domestic**: Mainland China only.
	// - **overseas**: Global (excluding Mainland China).
	// - **global**: global.
	//   The default value is **domestic**.
	Scope *string `pulumi:"scope"`
	// The source address list of the accelerated domain. Defaults to null. See `sources` below.
	Sources []DomainNewSource `pulumi:"sources"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a DomainNew resource.
type DomainNewArgs struct {
	// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
	CdnType pulumi.StringInput
	// Certificate configuration. See `certificateConfig` below.
	CertificateConfig DomainNewCertificateConfigPtrInput
	// Health test URL.
	CheckUrl pulumi.StringPtrInput
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName pulumi.StringInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
	// - **domestic**: Mainland China only.
	// - **overseas**: Global (excluding Mainland China).
	// - **global**: global.
	//   The default value is **domestic**.
	Scope pulumi.StringPtrInput
	// The source address list of the accelerated domain. Defaults to null. See `sources` below.
	Sources DomainNewSourceArrayInput
	// The tag of the resource.
	Tags pulumi.MapInput
}

func (DomainNewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNewArgs)(nil)).Elem()
}

type DomainNewInput interface {
	pulumi.Input

	ToDomainNewOutput() DomainNewOutput
	ToDomainNewOutputWithContext(ctx context.Context) DomainNewOutput
}

func (*DomainNew) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNew)(nil)).Elem()
}

func (i *DomainNew) ToDomainNewOutput() DomainNewOutput {
	return i.ToDomainNewOutputWithContext(context.Background())
}

func (i *DomainNew) ToDomainNewOutputWithContext(ctx context.Context) DomainNewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNewOutput)
}

// DomainNewArrayInput is an input type that accepts DomainNewArray and DomainNewArrayOutput values.
// You can construct a concrete instance of `DomainNewArrayInput` via:
//
//	DomainNewArray{ DomainNewArgs{...} }
type DomainNewArrayInput interface {
	pulumi.Input

	ToDomainNewArrayOutput() DomainNewArrayOutput
	ToDomainNewArrayOutputWithContext(context.Context) DomainNewArrayOutput
}

type DomainNewArray []DomainNewInput

func (DomainNewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainNew)(nil)).Elem()
}

func (i DomainNewArray) ToDomainNewArrayOutput() DomainNewArrayOutput {
	return i.ToDomainNewArrayOutputWithContext(context.Background())
}

func (i DomainNewArray) ToDomainNewArrayOutputWithContext(ctx context.Context) DomainNewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNewArrayOutput)
}

// DomainNewMapInput is an input type that accepts DomainNewMap and DomainNewMapOutput values.
// You can construct a concrete instance of `DomainNewMapInput` via:
//
//	DomainNewMap{ "key": DomainNewArgs{...} }
type DomainNewMapInput interface {
	pulumi.Input

	ToDomainNewMapOutput() DomainNewMapOutput
	ToDomainNewMapOutputWithContext(context.Context) DomainNewMapOutput
}

type DomainNewMap map[string]DomainNewInput

func (DomainNewMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainNew)(nil)).Elem()
}

func (i DomainNewMap) ToDomainNewMapOutput() DomainNewMapOutput {
	return i.ToDomainNewMapOutputWithContext(context.Background())
}

func (i DomainNewMap) ToDomainNewMapOutputWithContext(ctx context.Context) DomainNewMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNewMapOutput)
}

type DomainNewOutput struct{ *pulumi.OutputState }

func (DomainNewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNew)(nil)).Elem()
}

func (o DomainNewOutput) ToDomainNewOutput() DomainNewOutput {
	return o
}

func (o DomainNewOutput) ToDomainNewOutputWithContext(ctx context.Context) DomainNewOutput {
	return o
}

// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`.
func (o DomainNewOutput) CdnType() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.CdnType }).(pulumi.StringOutput)
}

// Certificate configuration. See `certificateConfig` below.
func (o DomainNewOutput) CertificateConfig() DomainNewCertificateConfigOutput {
	return o.ApplyT(func(v *DomainNew) DomainNewCertificateConfigOutput { return v.CertificateConfig }).(DomainNewCertificateConfigOutput)
}

// Health test URL.
func (o DomainNewOutput) CheckUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringPtrOutput { return v.CheckUrl }).(pulumi.StringPtrOutput)
}

// The CNAME domain name corresponding to the accelerated domain name.
func (o DomainNewOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
func (o DomainNewOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o DomainNewOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users. Value:
//   - **domestic**: Mainland China only.
//   - **overseas**: Global (excluding Mainland China).
//   - **global**: global.
//     The default value is **domestic**.
func (o DomainNewOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// The source address list of the accelerated domain. Defaults to null. See `sources` below.
func (o DomainNewOutput) Sources() DomainNewSourceArrayOutput {
	return o.ApplyT(func(v *DomainNew) DomainNewSourceArrayOutput { return v.Sources }).(DomainNewSourceArrayOutput)
}

// The status of the resource.
func (o DomainNewOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o DomainNewOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *DomainNew) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

type DomainNewArrayOutput struct{ *pulumi.OutputState }

func (DomainNewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainNew)(nil)).Elem()
}

func (o DomainNewArrayOutput) ToDomainNewArrayOutput() DomainNewArrayOutput {
	return o
}

func (o DomainNewArrayOutput) ToDomainNewArrayOutputWithContext(ctx context.Context) DomainNewArrayOutput {
	return o
}

func (o DomainNewArrayOutput) Index(i pulumi.IntInput) DomainNewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainNew {
		return vs[0].([]*DomainNew)[vs[1].(int)]
	}).(DomainNewOutput)
}

type DomainNewMapOutput struct{ *pulumi.OutputState }

func (DomainNewMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainNew)(nil)).Elem()
}

func (o DomainNewMapOutput) ToDomainNewMapOutput() DomainNewMapOutput {
	return o
}

func (o DomainNewMapOutput) ToDomainNewMapOutputWithContext(ctx context.Context) DomainNewMapOutput {
	return o
}

func (o DomainNewMapOutput) MapIndex(k pulumi.StringInput) DomainNewOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainNew {
		return vs[0].(map[string]*DomainNew)[vs[1].(string)]
	}).(DomainNewOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNewInput)(nil)).Elem(), &DomainNew{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNewArrayInput)(nil)).Elem(), DomainNewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNewMapInput)(nil)).Elem(), DomainNewMap{})
	pulumi.RegisterOutputType(DomainNewOutput{})
	pulumi.RegisterOutputType(DomainNewArrayOutput{})
	pulumi.RegisterOutputType(DomainNewMapOutput{})
}
