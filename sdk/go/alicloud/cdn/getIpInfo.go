// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the function of verifying whether an IP is a CDN node.
//
// > **NOTE:** Available in v1.153.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cdn"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cdn.GetIpInfo(ctx, &cdn.GetIpInfoArgs{
// 			Ip: "114.114.114.114",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIpInfo(ctx *pulumi.Context, args *GetIpInfoArgs, opts ...pulumi.InvokeOption) (*GetIpInfoResult, error) {
	var rv GetIpInfoResult
	err := ctx.Invoke("alicloud:cdn/getIpInfo:getIpInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpInfo.
type GetIpInfoArgs struct {
	// Specify IP address.
	Ip string `pulumi:"ip"`
}

// A collection of values returned by getIpInfo.
type GetIpInfoResult struct {
	CdnIp string `pulumi:"cdnIp"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Ip          string `pulumi:"ip"`
	Isp         string `pulumi:"isp"`
	IspEname    string `pulumi:"ispEname"`
	Region      string `pulumi:"region"`
	RegionEname string `pulumi:"regionEname"`
}

func GetIpInfoOutput(ctx *pulumi.Context, args GetIpInfoOutputArgs, opts ...pulumi.InvokeOption) GetIpInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpInfoResult, error) {
			args := v.(GetIpInfoArgs)
			r, err := GetIpInfo(ctx, &args, opts...)
			var s GetIpInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpInfoResultOutput)
}

// A collection of arguments for invoking getIpInfo.
type GetIpInfoOutputArgs struct {
	// Specify IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetIpInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInfoArgs)(nil)).Elem()
}

// A collection of values returned by getIpInfo.
type GetIpInfoResultOutput struct{ *pulumi.OutputState }

func (GetIpInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInfoResult)(nil)).Elem()
}

func (o GetIpInfoResultOutput) ToGetIpInfoResultOutput() GetIpInfoResultOutput {
	return o
}

func (o GetIpInfoResultOutput) ToGetIpInfoResultOutputWithContext(ctx context.Context) GetIpInfoResultOutput {
	return o
}

func (o GetIpInfoResultOutput) CdnIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.CdnIp }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpInfoResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetIpInfoResultOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.Isp }).(pulumi.StringOutput)
}

func (o GetIpInfoResultOutput) IspEname() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.IspEname }).(pulumi.StringOutput)
}

func (o GetIpInfoResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetIpInfoResultOutput) RegionEname() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInfoResult) string { return v.RegionEname }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpInfoResultOutput{})
}
