// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Cdn blocked regions.
//
// > **NOTE:** Available in v1.173.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cdn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cdn.GetBlockedRegions(ctx, &cdn.GetBlockedRegionsArgs{
//				Language: "zh",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBlockedRegions(ctx *pulumi.Context, args *GetBlockedRegionsArgs, opts ...pulumi.InvokeOption) (*GetBlockedRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBlockedRegionsResult
	err := ctx.Invoke("alicloud:cdn/getBlockedRegions:getBlockedRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockedRegions.
type GetBlockedRegionsArgs struct {
	// The language. Valid values: `zh`, `en`, `jp`.
	Language string `pulumi:"language"`
}

// A collection of values returned by getBlockedRegions.
type GetBlockedRegionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string                    `pulumi:"id"`
	Language string                    `pulumi:"language"`
	Regions  []GetBlockedRegionsRegion `pulumi:"regions"`
}

func GetBlockedRegionsOutput(ctx *pulumi.Context, args GetBlockedRegionsOutputArgs, opts ...pulumi.InvokeOption) GetBlockedRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBlockedRegionsResult, error) {
			args := v.(GetBlockedRegionsArgs)
			r, err := GetBlockedRegions(ctx, &args, opts...)
			var s GetBlockedRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBlockedRegionsResultOutput)
}

// A collection of arguments for invoking getBlockedRegions.
type GetBlockedRegionsOutputArgs struct {
	// The language. Valid values: `zh`, `en`, `jp`.
	Language pulumi.StringInput `pulumi:"language"`
}

func (GetBlockedRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockedRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getBlockedRegions.
type GetBlockedRegionsResultOutput struct{ *pulumi.OutputState }

func (GetBlockedRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockedRegionsResult)(nil)).Elem()
}

func (o GetBlockedRegionsResultOutput) ToGetBlockedRegionsResultOutput() GetBlockedRegionsResultOutput {
	return o
}

func (o GetBlockedRegionsResultOutput) ToGetBlockedRegionsResultOutputWithContext(ctx context.Context) GetBlockedRegionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetBlockedRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockedRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBlockedRegionsResultOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockedRegionsResult) string { return v.Language }).(pulumi.StringOutput)
}

func (o GetBlockedRegionsResultOutput) Regions() GetBlockedRegionsRegionArrayOutput {
	return o.ApplyT(func(v GetBlockedRegionsResult) []GetBlockedRegionsRegion { return v.Regions }).(GetBlockedRegionsRegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBlockedRegionsResultOutput{})
}
