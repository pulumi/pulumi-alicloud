// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gpdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a GPDB Account resource.
//
// For information about GPDB Account and how to use it, see [What is Account](https://www.alibabacloud.com/help/doc-detail/86924.htm).
//
// > **NOTE:** Available since v1.142.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/gpdb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := gpdb.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("^default-NODELETING$"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
//				VpcId:  pulumi.StringRef(defaultGetNetworks.Ids[0]),
//				ZoneId: pulumi.StringRef(_default.Ids[0]),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInstance, err := gpdb.NewInstance(ctx, "default", &gpdb.InstanceArgs{
//				DbInstanceCategory:  pulumi.String("HighAvailability"),
//				DbInstanceClass:     pulumi.String("gpdb.group.segsdx1"),
//				DbInstanceMode:      pulumi.String("StorageElastic"),
//				Description:         pulumi.String(name),
//				Engine:              pulumi.String("gpdb"),
//				EngineVersion:       pulumi.String("6.0"),
//				ZoneId:              pulumi.String(_default.Ids[0]),
//				InstanceNetworkType: pulumi.String("VPC"),
//				InstanceSpec:        pulumi.String("2C16G"),
//				PaymentType:         pulumi.String("PayAsYouGo"),
//				SegStorageType:      pulumi.String("cloud_essd"),
//				SegNodeNum:          pulumi.Int(4),
//				StorageSize:         pulumi.Int(50),
//				VpcId:               pulumi.String(defaultGetNetworks.Ids[0]),
//				VswitchId:           pulumi.String(defaultGetSwitches.Ids[0]),
//				IpWhitelists: gpdb.InstanceIpWhitelistArray{
//					&gpdb.InstanceIpWhitelistArgs{
//						SecurityIpList: pulumi.String("127.0.0.1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = gpdb.NewAccount(ctx, "default", &gpdb.AccountArgs{
//				AccountName:        pulumi.String("tf_example"),
//				DbInstanceId:       defaultInstance.ID(),
//				AccountPassword:    pulumi.String("Example1234"),
//				AccountDescription: pulumi.String("tf_example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// GPDB Account can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:gpdb/account:Account example <db_instance_id>:<account_name>
// ```
type Account struct {
	pulumi.CustomResourceState

	// The description of the account.
	AccountDescription pulumi.StringPtrOutput `pulumi:"accountDescription"`
	// The account name.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// AccountPassword
	AccountPassword pulumi.StringOutput `pulumi:"accountPassword"`
	// Account type. The value range is as follows:
	//
	// Normal: Normal account number.
	//
	// Super: a high-privilege account.
	AccountType pulumi.StringOutput `pulumi:"accountType"`
	// Database name, with the following restrictions:
	// - Can only contain letters, numbers and underscores.
	// - Must start with a letter.
	// - Length cannot exceed 63 characters.
	DatabaseName pulumi.StringPtrOutput `pulumi:"databaseName"`
	// The Adb pg instance ID.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// The status of the resource
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.AccountPassword == nil {
		return nil, errors.New("invalid value for required argument 'AccountPassword'")
	}
	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.AccountPassword != nil {
		args.AccountPassword = pulumi.ToSecret(args.AccountPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accountPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Account
	err := ctx.RegisterResource("alicloud:gpdb/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("alicloud:gpdb/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// The description of the account.
	AccountDescription *string `pulumi:"accountDescription"`
	// The account name.
	AccountName *string `pulumi:"accountName"`
	// AccountPassword
	AccountPassword *string `pulumi:"accountPassword"`
	// Account type. The value range is as follows:
	//
	// Normal: Normal account number.
	//
	// Super: a high-privilege account.
	AccountType *string `pulumi:"accountType"`
	// Database name, with the following restrictions:
	// - Can only contain letters, numbers and underscores.
	// - Must start with a letter.
	// - Length cannot exceed 63 characters.
	DatabaseName *string `pulumi:"databaseName"`
	// The Adb pg instance ID.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// The status of the resource
	Status *string `pulumi:"status"`
}

type AccountState struct {
	// The description of the account.
	AccountDescription pulumi.StringPtrInput
	// The account name.
	AccountName pulumi.StringPtrInput
	// AccountPassword
	AccountPassword pulumi.StringPtrInput
	// Account type. The value range is as follows:
	//
	// Normal: Normal account number.
	//
	// Super: a high-privilege account.
	AccountType pulumi.StringPtrInput
	// Database name, with the following restrictions:
	// - Can only contain letters, numbers and underscores.
	// - Must start with a letter.
	// - Length cannot exceed 63 characters.
	DatabaseName pulumi.StringPtrInput
	// The Adb pg instance ID.
	DbInstanceId pulumi.StringPtrInput
	// The status of the resource
	Status pulumi.StringPtrInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// The description of the account.
	AccountDescription *string `pulumi:"accountDescription"`
	// The account name.
	AccountName string `pulumi:"accountName"`
	// AccountPassword
	AccountPassword string `pulumi:"accountPassword"`
	// Account type. The value range is as follows:
	//
	// Normal: Normal account number.
	//
	// Super: a high-privilege account.
	AccountType *string `pulumi:"accountType"`
	// Database name, with the following restrictions:
	// - Can only contain letters, numbers and underscores.
	// - Must start with a letter.
	// - Length cannot exceed 63 characters.
	DatabaseName *string `pulumi:"databaseName"`
	// The Adb pg instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// The description of the account.
	AccountDescription pulumi.StringPtrInput
	// The account name.
	AccountName pulumi.StringInput
	// AccountPassword
	AccountPassword pulumi.StringInput
	// Account type. The value range is as follows:
	//
	// Normal: Normal account number.
	//
	// Super: a high-privilege account.
	AccountType pulumi.StringPtrInput
	// Database name, with the following restrictions:
	// - Can only contain letters, numbers and underscores.
	// - Must start with a letter.
	// - Length cannot exceed 63 characters.
	DatabaseName pulumi.StringPtrInput
	// The Adb pg instance ID.
	DbInstanceId pulumi.StringInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (*Account) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (i *Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i *Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

// AccountArrayInput is an input type that accepts AccountArray and AccountArrayOutput values.
// You can construct a concrete instance of `AccountArrayInput` via:
//
//	AccountArray{ AccountArgs{...} }
type AccountArrayInput interface {
	pulumi.Input

	ToAccountArrayOutput() AccountArrayOutput
	ToAccountArrayOutputWithContext(context.Context) AccountArrayOutput
}

type AccountArray []AccountInput

func (AccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (i AccountArray) ToAccountArrayOutput() AccountArrayOutput {
	return i.ToAccountArrayOutputWithContext(context.Background())
}

func (i AccountArray) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountArrayOutput)
}

// AccountMapInput is an input type that accepts AccountMap and AccountMapOutput values.
// You can construct a concrete instance of `AccountMapInput` via:
//
//	AccountMap{ "key": AccountArgs{...} }
type AccountMapInput interface {
	pulumi.Input

	ToAccountMapOutput() AccountMapOutput
	ToAccountMapOutputWithContext(context.Context) AccountMapOutput
}

type AccountMap map[string]AccountInput

func (AccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (i AccountMap) ToAccountMapOutput() AccountMapOutput {
	return i.ToAccountMapOutputWithContext(context.Background())
}

func (i AccountMap) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountMapOutput)
}

type AccountOutput struct{ *pulumi.OutputState }

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

// The description of the account.
func (o AccountOutput) AccountDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.AccountDescription }).(pulumi.StringPtrOutput)
}

// The account name.
func (o AccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// AccountPassword
func (o AccountOutput) AccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.AccountPassword }).(pulumi.StringOutput)
}

// Account type. The value range is as follows:
//
// Normal: Normal account number.
//
// Super: a high-privilege account.
func (o AccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.AccountType }).(pulumi.StringOutput)
}

// Database name, with the following restrictions:
// - Can only contain letters, numbers and underscores.
// - Must start with a letter.
// - Length cannot exceed 63 characters.
func (o AccountOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The Adb pg instance ID.
func (o AccountOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The status of the resource
func (o AccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type AccountArrayOutput struct{ *pulumi.OutputState }

func (AccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (o AccountArrayOutput) ToAccountArrayOutput() AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) Index(i pulumi.IntInput) AccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Account {
		return vs[0].([]*Account)[vs[1].(int)]
	}).(AccountOutput)
}

type AccountMapOutput struct{ *pulumi.OutputState }

func (AccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (o AccountMapOutput) ToAccountMapOutput() AccountMapOutput {
	return o
}

func (o AccountMapOutput) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return o
}

func (o AccountMapOutput) MapIndex(k pulumi.StringInput) AccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Account {
		return vs[0].(map[string]*Account)[vs[1].(string)]
	}).(AccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountInput)(nil)).Elem(), &Account{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountArrayInput)(nil)).Elem(), AccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountMapInput)(nil)).Elem(), AccountMap{})
	pulumi.RegisterOutputType(AccountOutput{})
	pulumi.RegisterOutputType(AccountArrayOutput{})
	pulumi.RegisterOutputType(AccountMapOutput{})
}
