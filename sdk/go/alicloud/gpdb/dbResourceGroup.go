// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gpdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a GPDB Db Resource Group resource.
//
// For information about Gpdb Db Resource Group and how to use it, see [What is Db Resource Group](https://www.alibabacloud.com/help/en/).
//
// > **NOTE:** Available since v1.225.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/gpdb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultZc8RD9, err := vpc.NewNetwork(ctx, "defaultZc8RD9", &vpc.NetworkArgs{
//				CidrBlock: pulumi.String("192.168.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultRv5UXt, err := vpc.NewSwitch(ctx, "defaultRv5UXt", &vpc.SwitchArgs{
//				VpcId:     defaultZc8RD9.ID(),
//				ZoneId:    pulumi.String(_default.Zones[0].Id),
//				CidrBlock: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultJXWSlW, err := gpdb.NewInstance(ctx, "defaultJXWSlW", &gpdb.InstanceArgs{
//				InstanceSpec:        pulumi.String("2C8G"),
//				SegNodeNum:          pulumi.Int(2),
//				SegStorageType:      pulumi.String("cloud_essd"),
//				InstanceNetworkType: pulumi.String("VPC"),
//				DbInstanceCategory:  pulumi.String("Basic"),
//				Engine:              pulumi.String("gpdb"),
//				PaymentType:         pulumi.String("PayAsYouGo"),
//				SslEnabled:          pulumi.Int(0),
//				EngineVersion:       pulumi.String("6.0"),
//				ZoneId:              pulumi.String(_default.Zones[0].Id),
//				VswitchId:           defaultRv5UXt.ID(),
//				StorageSize:         pulumi.Int(50),
//				MasterCu:            pulumi.Int(4),
//				VpcId:               defaultZc8RD9.ID(),
//				DbInstanceMode:      pulumi.String("StorageElastic"),
//				Description:         pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"CpuRateLimit":      10,
//				"MemoryLimit":       10,
//				"MemorySharedQuota": 80,
//				"MemorySpillRatio":  0,
//				"Concurrency":       10,
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = gpdb.NewDbResourceGroup(ctx, "default", &gpdb.DbResourceGroupArgs{
//				ResourceGroupConfig: pulumi.String(json0),
//				DbInstanceId:        defaultJXWSlW.ID(),
//				ResourceGroupName:   pulumi.String("yb_example_group"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// GPDB Db Resource Group can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:gpdb/dbResourceGroup:DbResourceGroup example <db_instance_id>:<resource_group_name>
// ```
type DbResourceGroup struct {
	pulumi.CustomResourceState

	// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// Resource group configuration.
	ResourceGroupConfig pulumi.StringOutput `pulumi:"resourceGroupConfig"`
	// Resource group name.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Role List
	RoleLists pulumi.StringArrayOutput `pulumi:"roleLists"`
}

// NewDbResourceGroup registers a new resource with the given unique name, arguments, and options.
func NewDbResourceGroup(ctx *pulumi.Context,
	name string, args *DbResourceGroupArgs, opts ...pulumi.ResourceOption) (*DbResourceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.ResourceGroupConfig == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupConfig'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbResourceGroup
	err := ctx.RegisterResource("alicloud:gpdb/dbResourceGroup:DbResourceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbResourceGroup gets an existing DbResourceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbResourceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbResourceGroupState, opts ...pulumi.ResourceOption) (*DbResourceGroup, error) {
	var resource DbResourceGroup
	err := ctx.ReadResource("alicloud:gpdb/dbResourceGroup:DbResourceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbResourceGroup resources.
type dbResourceGroupState struct {
	// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// Resource group configuration.
	ResourceGroupConfig *string `pulumi:"resourceGroupConfig"`
	// Resource group name.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Role List
	RoleLists []string `pulumi:"roleLists"`
}

type DbResourceGroupState struct {
	// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
	DbInstanceId pulumi.StringPtrInput
	// Resource group configuration.
	ResourceGroupConfig pulumi.StringPtrInput
	// Resource group name.
	ResourceGroupName pulumi.StringPtrInput
	// Role List
	RoleLists pulumi.StringArrayInput
}

func (DbResourceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbResourceGroupState)(nil)).Elem()
}

type dbResourceGroupArgs struct {
	// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Resource group configuration.
	ResourceGroupConfig string `pulumi:"resourceGroupConfig"`
	// Resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Role List
	RoleLists []string `pulumi:"roleLists"`
}

// The set of arguments for constructing a DbResourceGroup resource.
type DbResourceGroupArgs struct {
	// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
	DbInstanceId pulumi.StringInput
	// Resource group configuration.
	ResourceGroupConfig pulumi.StringInput
	// Resource group name.
	ResourceGroupName pulumi.StringInput
	// Role List
	RoleLists pulumi.StringArrayInput
}

func (DbResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbResourceGroupArgs)(nil)).Elem()
}

type DbResourceGroupInput interface {
	pulumi.Input

	ToDbResourceGroupOutput() DbResourceGroupOutput
	ToDbResourceGroupOutputWithContext(ctx context.Context) DbResourceGroupOutput
}

func (*DbResourceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DbResourceGroup)(nil)).Elem()
}

func (i *DbResourceGroup) ToDbResourceGroupOutput() DbResourceGroupOutput {
	return i.ToDbResourceGroupOutputWithContext(context.Background())
}

func (i *DbResourceGroup) ToDbResourceGroupOutputWithContext(ctx context.Context) DbResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbResourceGroupOutput)
}

// DbResourceGroupArrayInput is an input type that accepts DbResourceGroupArray and DbResourceGroupArrayOutput values.
// You can construct a concrete instance of `DbResourceGroupArrayInput` via:
//
//	DbResourceGroupArray{ DbResourceGroupArgs{...} }
type DbResourceGroupArrayInput interface {
	pulumi.Input

	ToDbResourceGroupArrayOutput() DbResourceGroupArrayOutput
	ToDbResourceGroupArrayOutputWithContext(context.Context) DbResourceGroupArrayOutput
}

type DbResourceGroupArray []DbResourceGroupInput

func (DbResourceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbResourceGroup)(nil)).Elem()
}

func (i DbResourceGroupArray) ToDbResourceGroupArrayOutput() DbResourceGroupArrayOutput {
	return i.ToDbResourceGroupArrayOutputWithContext(context.Background())
}

func (i DbResourceGroupArray) ToDbResourceGroupArrayOutputWithContext(ctx context.Context) DbResourceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbResourceGroupArrayOutput)
}

// DbResourceGroupMapInput is an input type that accepts DbResourceGroupMap and DbResourceGroupMapOutput values.
// You can construct a concrete instance of `DbResourceGroupMapInput` via:
//
//	DbResourceGroupMap{ "key": DbResourceGroupArgs{...} }
type DbResourceGroupMapInput interface {
	pulumi.Input

	ToDbResourceGroupMapOutput() DbResourceGroupMapOutput
	ToDbResourceGroupMapOutputWithContext(context.Context) DbResourceGroupMapOutput
}

type DbResourceGroupMap map[string]DbResourceGroupInput

func (DbResourceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbResourceGroup)(nil)).Elem()
}

func (i DbResourceGroupMap) ToDbResourceGroupMapOutput() DbResourceGroupMapOutput {
	return i.ToDbResourceGroupMapOutputWithContext(context.Background())
}

func (i DbResourceGroupMap) ToDbResourceGroupMapOutputWithContext(ctx context.Context) DbResourceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbResourceGroupMapOutput)
}

type DbResourceGroupOutput struct{ *pulumi.OutputState }

func (DbResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbResourceGroup)(nil)).Elem()
}

func (o DbResourceGroupOutput) ToDbResourceGroupOutput() DbResourceGroupOutput {
	return o
}

func (o DbResourceGroupOutput) ToDbResourceGroupOutputWithContext(ctx context.Context) DbResourceGroupOutput {
	return o
}

// The instance ID.> You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
func (o DbResourceGroupOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbResourceGroup) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Resource group configuration.
func (o DbResourceGroupOutput) ResourceGroupConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *DbResourceGroup) pulumi.StringOutput { return v.ResourceGroupConfig }).(pulumi.StringOutput)
}

// Resource group name.
func (o DbResourceGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbResourceGroup) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Role List
func (o DbResourceGroupOutput) RoleLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbResourceGroup) pulumi.StringArrayOutput { return v.RoleLists }).(pulumi.StringArrayOutput)
}

type DbResourceGroupArrayOutput struct{ *pulumi.OutputState }

func (DbResourceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbResourceGroup)(nil)).Elem()
}

func (o DbResourceGroupArrayOutput) ToDbResourceGroupArrayOutput() DbResourceGroupArrayOutput {
	return o
}

func (o DbResourceGroupArrayOutput) ToDbResourceGroupArrayOutputWithContext(ctx context.Context) DbResourceGroupArrayOutput {
	return o
}

func (o DbResourceGroupArrayOutput) Index(i pulumi.IntInput) DbResourceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbResourceGroup {
		return vs[0].([]*DbResourceGroup)[vs[1].(int)]
	}).(DbResourceGroupOutput)
}

type DbResourceGroupMapOutput struct{ *pulumi.OutputState }

func (DbResourceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbResourceGroup)(nil)).Elem()
}

func (o DbResourceGroupMapOutput) ToDbResourceGroupMapOutput() DbResourceGroupMapOutput {
	return o
}

func (o DbResourceGroupMapOutput) ToDbResourceGroupMapOutputWithContext(ctx context.Context) DbResourceGroupMapOutput {
	return o
}

func (o DbResourceGroupMapOutput) MapIndex(k pulumi.StringInput) DbResourceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbResourceGroup {
		return vs[0].(map[string]*DbResourceGroup)[vs[1].(string)]
	}).(DbResourceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbResourceGroupInput)(nil)).Elem(), &DbResourceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbResourceGroupArrayInput)(nil)).Elem(), DbResourceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbResourceGroupMapInput)(nil)).Elem(), DbResourceGroupMap{})
	pulumi.RegisterOutputType(DbResourceGroupOutput{})
	pulumi.RegisterOutputType(DbResourceGroupArrayOutput{})
	pulumi.RegisterOutputType(DbResourceGroupMapOutput{})
}
