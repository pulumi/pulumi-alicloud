// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gpdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a GPDB Hadoop Data Source resource.
//
// Hadoop DataSource Config.
//
// For information about GPDB Hadoop Data Source and how to use it, see [What is Hadoop Data Source](https://www.alibabacloud.com/help/en/analyticdb/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-createhadoopdatasource).
//
// > **NOTE:** Available since v1.230.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/emrv2"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/gpdb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/kms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ram"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("^default-NODELETING$"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
//				VpcId:  pulumi.StringRef(defaultGetNetworks.Ids[0]),
//				ZoneId: pulumi.StringRef("cn-beijing-h"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultEcsKeyPair, err := ecs.NewEcsKeyPair(ctx, "default", &ecs.EcsKeyPairArgs{
//				KeyPairName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				Name:  pulumi.String(name),
//				VpcId: pulumi.String(defaultGetNetworks.Ids[0]),
//			})
//			if err != nil {
//				return err
//			}
//			defaultRole, err := ram.NewRole(ctx, "default", &ram.RoleArgs{
//				Name: pulumi.String(name),
//				Document: pulumi.String(`    {
//	        "Statement": [
//	        {
//	            "Action": "sts:AssumeRole",
//	            "Effect": "Allow",
//	            "Principal": {
//	            "Service": [
//	                "emr.aliyuncs.com",
//	                "ecs.aliyuncs.com"
//	            ]
//	            }
//	        }
//	        ],
//	        "Version": "1"
//	    }
//
// `),
//
//				Description: pulumi.String("this is a role example."),
//				Force:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			defaultGetResourceGroups, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{
//				Status: pulumi.StringRef("OK"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetKeys, err := kms.GetKeys(ctx, &kms.GetKeysArgs{
//				Status: pulumi.StringRef("Enabled"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultCluster, err := emrv2.NewCluster(ctx, "default", &emrv2.ClusterArgs{
//				NodeGroups: emrv2.ClusterNodeGroupArray{
//					&emrv2.ClusterNodeGroupArgs{
//						VswitchIds: pulumi.StringArray{
//							pulumi.String(defaultGetSwitches.Ids[0]),
//						},
//						InstanceTypes: pulumi.StringArray{
//							pulumi.String("ecs.g6.xlarge"),
//						},
//						NodeCount:          pulumi.Int(1),
//						SpotInstanceRemedy: pulumi.Bool(false),
//						DataDisks: emrv2.ClusterNodeGroupDataDiskArray{
//							&emrv2.ClusterNodeGroupDataDiskArgs{
//								Count:            pulumi.Int(3),
//								Category:         pulumi.String("cloud_essd"),
//								Size:             pulumi.Int(80),
//								PerformanceLevel: pulumi.String("PL0"),
//							},
//						},
//						NodeGroupName:    pulumi.String("emr-master"),
//						PaymentType:      pulumi.String("PayAsYouGo"),
//						WithPublicIp:     pulumi.Bool(false),
//						GracefulShutdown: pulumi.Bool(false),
//						SystemDisk: &emrv2.ClusterNodeGroupSystemDiskArgs{
//							Category:         pulumi.String("cloud_essd"),
//							Size:             pulumi.Int(80),
//							PerformanceLevel: pulumi.String("PL0"),
//							Count:            pulumi.Int(1),
//						},
//						NodeGroupType: pulumi.String("MASTER"),
//					},
//					&emrv2.ClusterNodeGroupArgs{
//						SpotInstanceRemedy: pulumi.Bool(false),
//						NodeGroupType:      pulumi.String("CORE"),
//						VswitchIds: pulumi.StringArray{
//							pulumi.String(defaultGetSwitches.Ids[0]),
//						},
//						NodeCount:        pulumi.Int(2),
//						GracefulShutdown: pulumi.Bool(false),
//						SystemDisk: &emrv2.ClusterNodeGroupSystemDiskArgs{
//							PerformanceLevel: pulumi.String("PL0"),
//							Count:            pulumi.Int(1),
//							Category:         pulumi.String("cloud_essd"),
//							Size:             pulumi.Int(80),
//						},
//						DataDisks: emrv2.ClusterNodeGroupDataDiskArray{
//							&emrv2.ClusterNodeGroupDataDiskArgs{
//								Count:            pulumi.Int(3),
//								PerformanceLevel: pulumi.String("PL0"),
//								Category:         pulumi.String("cloud_essd"),
//								Size:             pulumi.Int(80),
//							},
//						},
//						NodeGroupName: pulumi.String("emr-core"),
//						PaymentType:   pulumi.String("PayAsYouGo"),
//						InstanceTypes: pulumi.StringArray{
//							pulumi.String("ecs.g6.xlarge"),
//						},
//						WithPublicIp: pulumi.Bool(false),
//					},
//				},
//				DeployMode: pulumi.String("NORMAL"),
//				Tags: pulumi.StringMap{
//					"Created": pulumi.String("TF"),
//					"For":     pulumi.String("example"),
//				},
//				ReleaseVersion: pulumi.String("EMR-5.10.0"),
//				Applications: pulumi.StringArray{
//					pulumi.String("HADOOP-COMMON"),
//					pulumi.String("HDFS"),
//					pulumi.String("YARN"),
//				},
//				NodeAttributes: emrv2.ClusterNodeAttributeArray{
//					&emrv2.ClusterNodeAttributeArgs{
//						ZoneId:            pulumi.String("cn-beijing-h"),
//						KeyPairName:       defaultEcsKeyPair.ID(),
//						DataDiskEncrypted: pulumi.Bool(true),
//						DataDiskKmsKeyId:  pulumi.String(defaultGetKeys.Ids[0]),
//						VpcId:             pulumi.String(defaultGetNetworks.Ids[0]),
//						RamRole:           defaultRole.Name,
//						SecurityGroupId:   defaultSecurityGroup.ID(),
//					},
//				},
//				ResourceGroupId: pulumi.String(defaultGetResourceGroups.Ids[0]),
//				ClusterName:     pulumi.String(name),
//				PaymentType:     pulumi.String("PayAsYouGo"),
//				ClusterType:     pulumi.String("DATAFLOW"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultZoepvx, err := gpdb.NewInstance(ctx, "defaultZoepvx", &gpdb.InstanceArgs{
//				InstanceSpec:        pulumi.String("2C8G"),
//				Description:         pulumi.String(name),
//				SegNodeNum:          pulumi.Int(2),
//				SegStorageType:      pulumi.String("cloud_essd"),
//				InstanceNetworkType: pulumi.String("VPC"),
//				PaymentType:         pulumi.String("PayAsYouGo"),
//				SslEnabled:          pulumi.Int(0),
//				EngineVersion:       pulumi.String("6.0"),
//				ZoneId:              pulumi.String("cn-beijing-h"),
//				VswitchId:           pulumi.String(defaultGetSwitches.Ids[0]),
//				StorageSize:         pulumi.Int(50),
//				MasterCu:            pulumi.Int(4),
//				VpcId:               pulumi.String(defaultGetNetworks.Ids[0]),
//				DbInstanceMode:      pulumi.String("StorageElastic"),
//				Engine:              pulumi.String("gpdb"),
//				DbInstanceCategory:  pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultyOxz1K, err := gpdb.NewExternalDataService(ctx, "defaultyOxz1K", &gpdb.ExternalDataServiceArgs{
//				ServiceName:        pulumi.String(name),
//				DbInstanceId:       defaultZoepvx.ID(),
//				ServiceDescription: pulumi.String(name),
//				ServiceSpec:        pulumi.String("8"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = gpdb.NewHadoopDataSource(ctx, "default", &gpdb.HadoopDataSourceArgs{
//				HdfsConf:              pulumi.String("aaa"),
//				DataSourceName:        defaultyOxz1K.ServiceName,
//				YarnConf:              pulumi.String("aaa"),
//				HiveConf:              pulumi.String("aaa"),
//				HadoopCreateType:      pulumi.String("emr"),
//				DataSourceDescription: pulumi.String(name),
//				MapReduceConf:         pulumi.String("aaa"),
//				DataSourceType:        pulumi.String("hive"),
//				HadoopCoreConf:        pulumi.String("aaa"),
//				EmrInstanceId:         defaultCluster.ID(),
//				DbInstanceId:          defaultZoepvx.ID(),
//				HadoopHostsAddress:    pulumi.String("aaa"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// GPDB Hadoop Data Source can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:gpdb/hadoopDataSource:HadoopDataSource example <db_instance_id>:<data_source_id>
// ```
type HadoopDataSource struct {
	pulumi.CustomResourceState

	// Creation time
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Data Source Description
	DataSourceDescription pulumi.StringPtrOutput `pulumi:"dataSourceDescription"`
	// The data source ID.
	DataSourceId pulumi.IntOutput `pulumi:"dataSourceId"`
	// Data Source Name
	DataSourceName pulumi.StringPtrOutput `pulumi:"dataSourceName"`
	// The type of the data source. Valid values:
	//
	// *   mysql
	// - postgresql
	//
	// *   hdfs
	// - hive
	DataSourceType pulumi.StringPtrOutput `pulumi:"dataSourceType"`
	// The instance ID.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// The ID of the Emr instance.
	EmrInstanceId pulumi.StringPtrOutput `pulumi:"emrInstanceId"`
	// The string that specifies the content of the Hadoop core-site.xml file.
	HadoopCoreConf pulumi.StringPtrOutput `pulumi:"hadoopCoreConf"`
	// The type of the external service. Valid values:
	// - emr: E-MapReduce (EMR) Hadoop cluster.
	// - selfCreate: self-managed Hadoop cluster.
	HadoopCreateType pulumi.StringPtrOutput `pulumi:"hadoopCreateType"`
	// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
	HadoopHostsAddress pulumi.StringPtrOutput `pulumi:"hadoopHostsAddress"`
	// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	HdfsConf pulumi.StringPtrOutput `pulumi:"hdfsConf"`
	// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
	HiveConf pulumi.StringPtrOutput `pulumi:"hiveConf"`
	// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	MapReduceConf pulumi.StringPtrOutput `pulumi:"mapReduceConf"`
	// Data Source Status
	Status pulumi.StringOutput `pulumi:"status"`
	// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	YarnConf pulumi.StringPtrOutput `pulumi:"yarnConf"`
}

// NewHadoopDataSource registers a new resource with the given unique name, arguments, and options.
func NewHadoopDataSource(ctx *pulumi.Context,
	name string, args *HadoopDataSourceArgs, opts ...pulumi.ResourceOption) (*HadoopDataSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HadoopDataSource
	err := ctx.RegisterResource("alicloud:gpdb/hadoopDataSource:HadoopDataSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHadoopDataSource gets an existing HadoopDataSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHadoopDataSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HadoopDataSourceState, opts ...pulumi.ResourceOption) (*HadoopDataSource, error) {
	var resource HadoopDataSource
	err := ctx.ReadResource("alicloud:gpdb/hadoopDataSource:HadoopDataSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HadoopDataSource resources.
type hadoopDataSourceState struct {
	// Creation time
	CreateTime *string `pulumi:"createTime"`
	// Data Source Description
	DataSourceDescription *string `pulumi:"dataSourceDescription"`
	// The data source ID.
	DataSourceId *int `pulumi:"dataSourceId"`
	// Data Source Name
	DataSourceName *string `pulumi:"dataSourceName"`
	// The type of the data source. Valid values:
	//
	// *   mysql
	// - postgresql
	//
	// *   hdfs
	// - hive
	DataSourceType *string `pulumi:"dataSourceType"`
	// The instance ID.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// The ID of the Emr instance.
	EmrInstanceId *string `pulumi:"emrInstanceId"`
	// The string that specifies the content of the Hadoop core-site.xml file.
	HadoopCoreConf *string `pulumi:"hadoopCoreConf"`
	// The type of the external service. Valid values:
	// - emr: E-MapReduce (EMR) Hadoop cluster.
	// - selfCreate: self-managed Hadoop cluster.
	HadoopCreateType *string `pulumi:"hadoopCreateType"`
	// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
	HadoopHostsAddress *string `pulumi:"hadoopHostsAddress"`
	// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	HdfsConf *string `pulumi:"hdfsConf"`
	// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
	HiveConf *string `pulumi:"hiveConf"`
	// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	MapReduceConf *string `pulumi:"mapReduceConf"`
	// Data Source Status
	Status *string `pulumi:"status"`
	// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	YarnConf *string `pulumi:"yarnConf"`
}

type HadoopDataSourceState struct {
	// Creation time
	CreateTime pulumi.StringPtrInput
	// Data Source Description
	DataSourceDescription pulumi.StringPtrInput
	// The data source ID.
	DataSourceId pulumi.IntPtrInput
	// Data Source Name
	DataSourceName pulumi.StringPtrInput
	// The type of the data source. Valid values:
	//
	// *   mysql
	// - postgresql
	//
	// *   hdfs
	// - hive
	DataSourceType pulumi.StringPtrInput
	// The instance ID.
	DbInstanceId pulumi.StringPtrInput
	// The ID of the Emr instance.
	EmrInstanceId pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop core-site.xml file.
	HadoopCoreConf pulumi.StringPtrInput
	// The type of the external service. Valid values:
	// - emr: E-MapReduce (EMR) Hadoop cluster.
	// - selfCreate: self-managed Hadoop cluster.
	HadoopCreateType pulumi.StringPtrInput
	// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
	HadoopHostsAddress pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	HdfsConf pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
	HiveConf pulumi.StringPtrInput
	// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	MapReduceConf pulumi.StringPtrInput
	// Data Source Status
	Status pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	YarnConf pulumi.StringPtrInput
}

func (HadoopDataSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*hadoopDataSourceState)(nil)).Elem()
}

type hadoopDataSourceArgs struct {
	// Data Source Description
	DataSourceDescription *string `pulumi:"dataSourceDescription"`
	// Data Source Name
	DataSourceName *string `pulumi:"dataSourceName"`
	// The type of the data source. Valid values:
	//
	// *   mysql
	// - postgresql
	//
	// *   hdfs
	// - hive
	DataSourceType *string `pulumi:"dataSourceType"`
	// The instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The ID of the Emr instance.
	EmrInstanceId *string `pulumi:"emrInstanceId"`
	// The string that specifies the content of the Hadoop core-site.xml file.
	HadoopCoreConf *string `pulumi:"hadoopCoreConf"`
	// The type of the external service. Valid values:
	// - emr: E-MapReduce (EMR) Hadoop cluster.
	// - selfCreate: self-managed Hadoop cluster.
	HadoopCreateType *string `pulumi:"hadoopCreateType"`
	// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
	HadoopHostsAddress *string `pulumi:"hadoopHostsAddress"`
	// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	HdfsConf *string `pulumi:"hdfsConf"`
	// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
	HiveConf *string `pulumi:"hiveConf"`
	// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	MapReduceConf *string `pulumi:"mapReduceConf"`
	// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	YarnConf *string `pulumi:"yarnConf"`
}

// The set of arguments for constructing a HadoopDataSource resource.
type HadoopDataSourceArgs struct {
	// Data Source Description
	DataSourceDescription pulumi.StringPtrInput
	// Data Source Name
	DataSourceName pulumi.StringPtrInput
	// The type of the data source. Valid values:
	//
	// *   mysql
	// - postgresql
	//
	// *   hdfs
	// - hive
	DataSourceType pulumi.StringPtrInput
	// The instance ID.
	DbInstanceId pulumi.StringInput
	// The ID of the Emr instance.
	EmrInstanceId pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop core-site.xml file.
	HadoopCoreConf pulumi.StringPtrInput
	// The type of the external service. Valid values:
	// - emr: E-MapReduce (EMR) Hadoop cluster.
	// - selfCreate: self-managed Hadoop cluster.
	HadoopCreateType pulumi.StringPtrInput
	// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
	HadoopHostsAddress pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	HdfsConf pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
	HiveConf pulumi.StringPtrInput
	// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	MapReduceConf pulumi.StringPtrInput
	// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
	YarnConf pulumi.StringPtrInput
}

func (HadoopDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hadoopDataSourceArgs)(nil)).Elem()
}

type HadoopDataSourceInput interface {
	pulumi.Input

	ToHadoopDataSourceOutput() HadoopDataSourceOutput
	ToHadoopDataSourceOutputWithContext(ctx context.Context) HadoopDataSourceOutput
}

func (*HadoopDataSource) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopDataSource)(nil)).Elem()
}

func (i *HadoopDataSource) ToHadoopDataSourceOutput() HadoopDataSourceOutput {
	return i.ToHadoopDataSourceOutputWithContext(context.Background())
}

func (i *HadoopDataSource) ToHadoopDataSourceOutputWithContext(ctx context.Context) HadoopDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopDataSourceOutput)
}

// HadoopDataSourceArrayInput is an input type that accepts HadoopDataSourceArray and HadoopDataSourceArrayOutput values.
// You can construct a concrete instance of `HadoopDataSourceArrayInput` via:
//
//	HadoopDataSourceArray{ HadoopDataSourceArgs{...} }
type HadoopDataSourceArrayInput interface {
	pulumi.Input

	ToHadoopDataSourceArrayOutput() HadoopDataSourceArrayOutput
	ToHadoopDataSourceArrayOutputWithContext(context.Context) HadoopDataSourceArrayOutput
}

type HadoopDataSourceArray []HadoopDataSourceInput

func (HadoopDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HadoopDataSource)(nil)).Elem()
}

func (i HadoopDataSourceArray) ToHadoopDataSourceArrayOutput() HadoopDataSourceArrayOutput {
	return i.ToHadoopDataSourceArrayOutputWithContext(context.Background())
}

func (i HadoopDataSourceArray) ToHadoopDataSourceArrayOutputWithContext(ctx context.Context) HadoopDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopDataSourceArrayOutput)
}

// HadoopDataSourceMapInput is an input type that accepts HadoopDataSourceMap and HadoopDataSourceMapOutput values.
// You can construct a concrete instance of `HadoopDataSourceMapInput` via:
//
//	HadoopDataSourceMap{ "key": HadoopDataSourceArgs{...} }
type HadoopDataSourceMapInput interface {
	pulumi.Input

	ToHadoopDataSourceMapOutput() HadoopDataSourceMapOutput
	ToHadoopDataSourceMapOutputWithContext(context.Context) HadoopDataSourceMapOutput
}

type HadoopDataSourceMap map[string]HadoopDataSourceInput

func (HadoopDataSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HadoopDataSource)(nil)).Elem()
}

func (i HadoopDataSourceMap) ToHadoopDataSourceMapOutput() HadoopDataSourceMapOutput {
	return i.ToHadoopDataSourceMapOutputWithContext(context.Background())
}

func (i HadoopDataSourceMap) ToHadoopDataSourceMapOutputWithContext(ctx context.Context) HadoopDataSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopDataSourceMapOutput)
}

type HadoopDataSourceOutput struct{ *pulumi.OutputState }

func (HadoopDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopDataSource)(nil)).Elem()
}

func (o HadoopDataSourceOutput) ToHadoopDataSourceOutput() HadoopDataSourceOutput {
	return o
}

func (o HadoopDataSourceOutput) ToHadoopDataSourceOutputWithContext(ctx context.Context) HadoopDataSourceOutput {
	return o
}

// Creation time
func (o HadoopDataSourceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Data Source Description
func (o HadoopDataSourceOutput) DataSourceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.DataSourceDescription }).(pulumi.StringPtrOutput)
}

// The data source ID.
func (o HadoopDataSourceOutput) DataSourceId() pulumi.IntOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.IntOutput { return v.DataSourceId }).(pulumi.IntOutput)
}

// Data Source Name
func (o HadoopDataSourceOutput) DataSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.DataSourceName }).(pulumi.StringPtrOutput)
}

// The type of the data source. Valid values:
//
// *   mysql
// - postgresql
//
// *   hdfs
// - hive
func (o HadoopDataSourceOutput) DataSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.DataSourceType }).(pulumi.StringPtrOutput)
}

// The instance ID.
func (o HadoopDataSourceOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The ID of the Emr instance.
func (o HadoopDataSourceOutput) EmrInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.EmrInstanceId }).(pulumi.StringPtrOutput)
}

// The string that specifies the content of the Hadoop core-site.xml file.
func (o HadoopDataSourceOutput) HadoopCoreConf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.HadoopCoreConf }).(pulumi.StringPtrOutput)
}

// The type of the external service. Valid values:
// - emr: E-MapReduce (EMR) Hadoop cluster.
// - selfCreate: self-managed Hadoop cluster.
func (o HadoopDataSourceOutput) HadoopCreateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.HadoopCreateType }).(pulumi.StringPtrOutput)
}

// The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
func (o HadoopDataSourceOutput) HadoopHostsAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.HadoopHostsAddress }).(pulumi.StringPtrOutput)
}

// The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
func (o HadoopDataSourceOutput) HdfsConf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.HdfsConf }).(pulumi.StringPtrOutput)
}

// The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
func (o HadoopDataSourceOutput) HiveConf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.HiveConf }).(pulumi.StringPtrOutput)
}

// The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
func (o HadoopDataSourceOutput) MapReduceConf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.MapReduceConf }).(pulumi.StringPtrOutput)
}

// Data Source Status
func (o HadoopDataSourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
func (o HadoopDataSourceOutput) YarnConf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopDataSource) pulumi.StringPtrOutput { return v.YarnConf }).(pulumi.StringPtrOutput)
}

type HadoopDataSourceArrayOutput struct{ *pulumi.OutputState }

func (HadoopDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HadoopDataSource)(nil)).Elem()
}

func (o HadoopDataSourceArrayOutput) ToHadoopDataSourceArrayOutput() HadoopDataSourceArrayOutput {
	return o
}

func (o HadoopDataSourceArrayOutput) ToHadoopDataSourceArrayOutputWithContext(ctx context.Context) HadoopDataSourceArrayOutput {
	return o
}

func (o HadoopDataSourceArrayOutput) Index(i pulumi.IntInput) HadoopDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HadoopDataSource {
		return vs[0].([]*HadoopDataSource)[vs[1].(int)]
	}).(HadoopDataSourceOutput)
}

type HadoopDataSourceMapOutput struct{ *pulumi.OutputState }

func (HadoopDataSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HadoopDataSource)(nil)).Elem()
}

func (o HadoopDataSourceMapOutput) ToHadoopDataSourceMapOutput() HadoopDataSourceMapOutput {
	return o
}

func (o HadoopDataSourceMapOutput) ToHadoopDataSourceMapOutputWithContext(ctx context.Context) HadoopDataSourceMapOutput {
	return o
}

func (o HadoopDataSourceMapOutput) MapIndex(k pulumi.StringInput) HadoopDataSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HadoopDataSource {
		return vs[0].(map[string]*HadoopDataSource)[vs[1].(string)]
	}).(HadoopDataSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HadoopDataSourceInput)(nil)).Elem(), &HadoopDataSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*HadoopDataSourceArrayInput)(nil)).Elem(), HadoopDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HadoopDataSourceMapInput)(nil)).Elem(), HadoopDataSourceMap{})
	pulumi.RegisterOutputType(HadoopDataSourceOutput{})
	pulumi.RegisterOutputType(HadoopDataSourceArrayOutput{})
	pulumi.RegisterOutputType(HadoopDataSourceMapOutput{})
}
