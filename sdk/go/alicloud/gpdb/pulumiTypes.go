// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gpdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DbInstancePlanPlanConfig struct {
	// Pause instance plan config. See `pause` below.
	Pause *DbInstancePlanPlanConfigPause `pulumi:"pause"`
	// Resume instance plan config. See `resume` below.
	Resume *DbInstancePlanPlanConfigResume `pulumi:"resume"`
	// Scale down instance plan config. See `scaleDown` below.
	ScaleDown *DbInstancePlanPlanConfigScaleDown `pulumi:"scaleDown"`
	// Scale In instance plan config. See `scaleIn` below.
	ScaleIn *DbInstancePlanPlanConfigScaleIn `pulumi:"scaleIn"`
	// Scale out instance plan config. See `scaleOut` below.
	ScaleOut *DbInstancePlanPlanConfigScaleOut `pulumi:"scaleOut"`
	// Scale up instance plan config. See `scaleUp` below.
	ScaleUp *DbInstancePlanPlanConfigScaleUp `pulumi:"scaleUp"`
}

// DbInstancePlanPlanConfigInput is an input type that accepts DbInstancePlanPlanConfigArgs and DbInstancePlanPlanConfigOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigInput` via:
//
//	DbInstancePlanPlanConfigArgs{...}
type DbInstancePlanPlanConfigInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigOutput() DbInstancePlanPlanConfigOutput
	ToDbInstancePlanPlanConfigOutputWithContext(context.Context) DbInstancePlanPlanConfigOutput
}

type DbInstancePlanPlanConfigArgs struct {
	// Pause instance plan config. See `pause` below.
	Pause DbInstancePlanPlanConfigPausePtrInput `pulumi:"pause"`
	// Resume instance plan config. See `resume` below.
	Resume DbInstancePlanPlanConfigResumePtrInput `pulumi:"resume"`
	// Scale down instance plan config. See `scaleDown` below.
	ScaleDown DbInstancePlanPlanConfigScaleDownPtrInput `pulumi:"scaleDown"`
	// Scale In instance plan config. See `scaleIn` below.
	ScaleIn DbInstancePlanPlanConfigScaleInPtrInput `pulumi:"scaleIn"`
	// Scale out instance plan config. See `scaleOut` below.
	ScaleOut DbInstancePlanPlanConfigScaleOutPtrInput `pulumi:"scaleOut"`
	// Scale up instance plan config. See `scaleUp` below.
	ScaleUp DbInstancePlanPlanConfigScaleUpPtrInput `pulumi:"scaleUp"`
}

func (DbInstancePlanPlanConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfig)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigArgs) ToDbInstancePlanPlanConfigOutput() DbInstancePlanPlanConfigOutput {
	return i.ToDbInstancePlanPlanConfigOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigArgs) ToDbInstancePlanPlanConfigOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigOutput)
}

// DbInstancePlanPlanConfigArrayInput is an input type that accepts DbInstancePlanPlanConfigArray and DbInstancePlanPlanConfigArrayOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigArrayInput` via:
//
//	DbInstancePlanPlanConfigArray{ DbInstancePlanPlanConfigArgs{...} }
type DbInstancePlanPlanConfigArrayInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigArrayOutput() DbInstancePlanPlanConfigArrayOutput
	ToDbInstancePlanPlanConfigArrayOutputWithContext(context.Context) DbInstancePlanPlanConfigArrayOutput
}

type DbInstancePlanPlanConfigArray []DbInstancePlanPlanConfigInput

func (DbInstancePlanPlanConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstancePlanPlanConfig)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigArray) ToDbInstancePlanPlanConfigArrayOutput() DbInstancePlanPlanConfigArrayOutput {
	return i.ToDbInstancePlanPlanConfigArrayOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigArray) ToDbInstancePlanPlanConfigArrayOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigArrayOutput)
}

type DbInstancePlanPlanConfigOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfig)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigOutput) ToDbInstancePlanPlanConfigOutput() DbInstancePlanPlanConfigOutput {
	return o
}

func (o DbInstancePlanPlanConfigOutput) ToDbInstancePlanPlanConfigOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigOutput {
	return o
}

// Pause instance plan config. See `pause` below.
func (o DbInstancePlanPlanConfigOutput) Pause() DbInstancePlanPlanConfigPausePtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigPause { return v.Pause }).(DbInstancePlanPlanConfigPausePtrOutput)
}

// Resume instance plan config. See `resume` below.
func (o DbInstancePlanPlanConfigOutput) Resume() DbInstancePlanPlanConfigResumePtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigResume { return v.Resume }).(DbInstancePlanPlanConfigResumePtrOutput)
}

// Scale down instance plan config. See `scaleDown` below.
func (o DbInstancePlanPlanConfigOutput) ScaleDown() DbInstancePlanPlanConfigScaleDownPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigScaleDown { return v.ScaleDown }).(DbInstancePlanPlanConfigScaleDownPtrOutput)
}

// Scale In instance plan config. See `scaleIn` below.
func (o DbInstancePlanPlanConfigOutput) ScaleIn() DbInstancePlanPlanConfigScaleInPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigScaleIn { return v.ScaleIn }).(DbInstancePlanPlanConfigScaleInPtrOutput)
}

// Scale out instance plan config. See `scaleOut` below.
func (o DbInstancePlanPlanConfigOutput) ScaleOut() DbInstancePlanPlanConfigScaleOutPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigScaleOut { return v.ScaleOut }).(DbInstancePlanPlanConfigScaleOutPtrOutput)
}

// Scale up instance plan config. See `scaleUp` below.
func (o DbInstancePlanPlanConfigOutput) ScaleUp() DbInstancePlanPlanConfigScaleUpPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfig) *DbInstancePlanPlanConfigScaleUp { return v.ScaleUp }).(DbInstancePlanPlanConfigScaleUpPtrOutput)
}

type DbInstancePlanPlanConfigArrayOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstancePlanPlanConfig)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigArrayOutput) ToDbInstancePlanPlanConfigArrayOutput() DbInstancePlanPlanConfigArrayOutput {
	return o
}

func (o DbInstancePlanPlanConfigArrayOutput) ToDbInstancePlanPlanConfigArrayOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigArrayOutput {
	return o
}

func (o DbInstancePlanPlanConfigArrayOutput) Index(i pulumi.IntInput) DbInstancePlanPlanConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstancePlanPlanConfig {
		return vs[0].([]DbInstancePlanPlanConfig)[vs[1].(int)]
	}).(DbInstancePlanPlanConfigOutput)
}

type DbInstancePlanPlanConfigPause struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
}

// DbInstancePlanPlanConfigPauseInput is an input type that accepts DbInstancePlanPlanConfigPauseArgs and DbInstancePlanPlanConfigPauseOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigPauseInput` via:
//
//	DbInstancePlanPlanConfigPauseArgs{...}
type DbInstancePlanPlanConfigPauseInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigPauseOutput() DbInstancePlanPlanConfigPauseOutput
	ToDbInstancePlanPlanConfigPauseOutputWithContext(context.Context) DbInstancePlanPlanConfigPauseOutput
}

type DbInstancePlanPlanConfigPauseArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
}

func (DbInstancePlanPlanConfigPauseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigPause)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigPauseArgs) ToDbInstancePlanPlanConfigPauseOutput() DbInstancePlanPlanConfigPauseOutput {
	return i.ToDbInstancePlanPlanConfigPauseOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigPauseArgs) ToDbInstancePlanPlanConfigPauseOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPauseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigPauseOutput)
}

func (i DbInstancePlanPlanConfigPauseArgs) ToDbInstancePlanPlanConfigPausePtrOutput() DbInstancePlanPlanConfigPausePtrOutput {
	return i.ToDbInstancePlanPlanConfigPausePtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigPauseArgs) ToDbInstancePlanPlanConfigPausePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPausePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigPauseOutput).ToDbInstancePlanPlanConfigPausePtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigPausePtrInput is an input type that accepts DbInstancePlanPlanConfigPauseArgs, DbInstancePlanPlanConfigPausePtr and DbInstancePlanPlanConfigPausePtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigPausePtrInput` via:
//
//	        DbInstancePlanPlanConfigPauseArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigPausePtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigPausePtrOutput() DbInstancePlanPlanConfigPausePtrOutput
	ToDbInstancePlanPlanConfigPausePtrOutputWithContext(context.Context) DbInstancePlanPlanConfigPausePtrOutput
}

type dbInstancePlanPlanConfigPausePtrType DbInstancePlanPlanConfigPauseArgs

func DbInstancePlanPlanConfigPausePtr(v *DbInstancePlanPlanConfigPauseArgs) DbInstancePlanPlanConfigPausePtrInput {
	return (*dbInstancePlanPlanConfigPausePtrType)(v)
}

func (*dbInstancePlanPlanConfigPausePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigPause)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigPausePtrType) ToDbInstancePlanPlanConfigPausePtrOutput() DbInstancePlanPlanConfigPausePtrOutput {
	return i.ToDbInstancePlanPlanConfigPausePtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigPausePtrType) ToDbInstancePlanPlanConfigPausePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPausePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigPausePtrOutput)
}

type DbInstancePlanPlanConfigPauseOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigPauseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigPause)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigPauseOutput) ToDbInstancePlanPlanConfigPauseOutput() DbInstancePlanPlanConfigPauseOutput {
	return o
}

func (o DbInstancePlanPlanConfigPauseOutput) ToDbInstancePlanPlanConfigPauseOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPauseOutput {
	return o
}

func (o DbInstancePlanPlanConfigPauseOutput) ToDbInstancePlanPlanConfigPausePtrOutput() DbInstancePlanPlanConfigPausePtrOutput {
	return o.ToDbInstancePlanPlanConfigPausePtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigPauseOutput) ToDbInstancePlanPlanConfigPausePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPausePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigPause) *DbInstancePlanPlanConfigPause {
		return &v
	}).(DbInstancePlanPlanConfigPausePtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigPauseOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigPause) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigPauseOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigPause) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigPauseOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigPause) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigPausePtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigPausePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigPause)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigPausePtrOutput) ToDbInstancePlanPlanConfigPausePtrOutput() DbInstancePlanPlanConfigPausePtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigPausePtrOutput) ToDbInstancePlanPlanConfigPausePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigPausePtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigPausePtrOutput) Elem() DbInstancePlanPlanConfigPauseOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigPause) DbInstancePlanPlanConfigPause {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigPause
		return ret
	}).(DbInstancePlanPlanConfigPauseOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigPausePtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigPause) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigPausePtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigPause) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigPausePtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigPause) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigResume struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
}

// DbInstancePlanPlanConfigResumeInput is an input type that accepts DbInstancePlanPlanConfigResumeArgs and DbInstancePlanPlanConfigResumeOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigResumeInput` via:
//
//	DbInstancePlanPlanConfigResumeArgs{...}
type DbInstancePlanPlanConfigResumeInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigResumeOutput() DbInstancePlanPlanConfigResumeOutput
	ToDbInstancePlanPlanConfigResumeOutputWithContext(context.Context) DbInstancePlanPlanConfigResumeOutput
}

type DbInstancePlanPlanConfigResumeArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
}

func (DbInstancePlanPlanConfigResumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigResume)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigResumeArgs) ToDbInstancePlanPlanConfigResumeOutput() DbInstancePlanPlanConfigResumeOutput {
	return i.ToDbInstancePlanPlanConfigResumeOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigResumeArgs) ToDbInstancePlanPlanConfigResumeOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigResumeOutput)
}

func (i DbInstancePlanPlanConfigResumeArgs) ToDbInstancePlanPlanConfigResumePtrOutput() DbInstancePlanPlanConfigResumePtrOutput {
	return i.ToDbInstancePlanPlanConfigResumePtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigResumeArgs) ToDbInstancePlanPlanConfigResumePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigResumeOutput).ToDbInstancePlanPlanConfigResumePtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigResumePtrInput is an input type that accepts DbInstancePlanPlanConfigResumeArgs, DbInstancePlanPlanConfigResumePtr and DbInstancePlanPlanConfigResumePtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigResumePtrInput` via:
//
//	        DbInstancePlanPlanConfigResumeArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigResumePtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigResumePtrOutput() DbInstancePlanPlanConfigResumePtrOutput
	ToDbInstancePlanPlanConfigResumePtrOutputWithContext(context.Context) DbInstancePlanPlanConfigResumePtrOutput
}

type dbInstancePlanPlanConfigResumePtrType DbInstancePlanPlanConfigResumeArgs

func DbInstancePlanPlanConfigResumePtr(v *DbInstancePlanPlanConfigResumeArgs) DbInstancePlanPlanConfigResumePtrInput {
	return (*dbInstancePlanPlanConfigResumePtrType)(v)
}

func (*dbInstancePlanPlanConfigResumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigResume)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigResumePtrType) ToDbInstancePlanPlanConfigResumePtrOutput() DbInstancePlanPlanConfigResumePtrOutput {
	return i.ToDbInstancePlanPlanConfigResumePtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigResumePtrType) ToDbInstancePlanPlanConfigResumePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigResumePtrOutput)
}

type DbInstancePlanPlanConfigResumeOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigResumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigResume)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigResumeOutput) ToDbInstancePlanPlanConfigResumeOutput() DbInstancePlanPlanConfigResumeOutput {
	return o
}

func (o DbInstancePlanPlanConfigResumeOutput) ToDbInstancePlanPlanConfigResumeOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumeOutput {
	return o
}

func (o DbInstancePlanPlanConfigResumeOutput) ToDbInstancePlanPlanConfigResumePtrOutput() DbInstancePlanPlanConfigResumePtrOutput {
	return o.ToDbInstancePlanPlanConfigResumePtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigResumeOutput) ToDbInstancePlanPlanConfigResumePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigResume) *DbInstancePlanPlanConfigResume {
		return &v
	}).(DbInstancePlanPlanConfigResumePtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigResumeOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigResume) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigResumeOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigResume) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigResumeOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigResume) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigResumePtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigResumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigResume)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigResumePtrOutput) ToDbInstancePlanPlanConfigResumePtrOutput() DbInstancePlanPlanConfigResumePtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigResumePtrOutput) ToDbInstancePlanPlanConfigResumePtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigResumePtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigResumePtrOutput) Elem() DbInstancePlanPlanConfigResumeOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigResume) DbInstancePlanPlanConfigResume {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigResume
		return ret
	}).(DbInstancePlanPlanConfigResumeOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigResumePtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigResume) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigResumePtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigResume) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigResumePtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigResume) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleDown struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The specification of segment nodes of the Plan.
	InstanceSpec *string `pulumi:"instanceSpec"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
}

// DbInstancePlanPlanConfigScaleDownInput is an input type that accepts DbInstancePlanPlanConfigScaleDownArgs and DbInstancePlanPlanConfigScaleDownOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleDownInput` via:
//
//	DbInstancePlanPlanConfigScaleDownArgs{...}
type DbInstancePlanPlanConfigScaleDownInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleDownOutput() DbInstancePlanPlanConfigScaleDownOutput
	ToDbInstancePlanPlanConfigScaleDownOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleDownOutput
}

type DbInstancePlanPlanConfigScaleDownArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The specification of segment nodes of the Plan.
	InstanceSpec pulumi.StringPtrInput `pulumi:"instanceSpec"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
}

func (DbInstancePlanPlanConfigScaleDownArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleDown)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigScaleDownArgs) ToDbInstancePlanPlanConfigScaleDownOutput() DbInstancePlanPlanConfigScaleDownOutput {
	return i.ToDbInstancePlanPlanConfigScaleDownOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleDownArgs) ToDbInstancePlanPlanConfigScaleDownOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleDownOutput)
}

func (i DbInstancePlanPlanConfigScaleDownArgs) ToDbInstancePlanPlanConfigScaleDownPtrOutput() DbInstancePlanPlanConfigScaleDownPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleDownArgs) ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleDownOutput).ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigScaleDownPtrInput is an input type that accepts DbInstancePlanPlanConfigScaleDownArgs, DbInstancePlanPlanConfigScaleDownPtr and DbInstancePlanPlanConfigScaleDownPtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleDownPtrInput` via:
//
//	        DbInstancePlanPlanConfigScaleDownArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigScaleDownPtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleDownPtrOutput() DbInstancePlanPlanConfigScaleDownPtrOutput
	ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleDownPtrOutput
}

type dbInstancePlanPlanConfigScaleDownPtrType DbInstancePlanPlanConfigScaleDownArgs

func DbInstancePlanPlanConfigScaleDownPtr(v *DbInstancePlanPlanConfigScaleDownArgs) DbInstancePlanPlanConfigScaleDownPtrInput {
	return (*dbInstancePlanPlanConfigScaleDownPtrType)(v)
}

func (*dbInstancePlanPlanConfigScaleDownPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleDown)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigScaleDownPtrType) ToDbInstancePlanPlanConfigScaleDownPtrOutput() DbInstancePlanPlanConfigScaleDownPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigScaleDownPtrType) ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleDownPtrOutput)
}

type DbInstancePlanPlanConfigScaleDownOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleDownOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleDown)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleDownOutput) ToDbInstancePlanPlanConfigScaleDownOutput() DbInstancePlanPlanConfigScaleDownOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleDownOutput) ToDbInstancePlanPlanConfigScaleDownOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleDownOutput) ToDbInstancePlanPlanConfigScaleDownPtrOutput() DbInstancePlanPlanConfigScaleDownPtrOutput {
	return o.ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigScaleDownOutput) ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigScaleDown) *DbInstancePlanPlanConfigScaleDown {
		return &v
	}).(DbInstancePlanPlanConfigScaleDownPtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleDownOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleDown) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The specification of segment nodes of the Plan.
func (o DbInstancePlanPlanConfigScaleDownOutput) InstanceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleDown) *string { return v.InstanceSpec }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleDownOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleDown) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleDownOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleDown) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleDownPtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleDownPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleDown)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleDownPtrOutput) ToDbInstancePlanPlanConfigScaleDownPtrOutput() DbInstancePlanPlanConfigScaleDownPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleDownPtrOutput) ToDbInstancePlanPlanConfigScaleDownPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleDownPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleDownPtrOutput) Elem() DbInstancePlanPlanConfigScaleDownOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleDown) DbInstancePlanPlanConfigScaleDown {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigScaleDown
		return ret
	}).(DbInstancePlanPlanConfigScaleDownOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleDownPtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleDown) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The specification of segment nodes of the Plan.
func (o DbInstancePlanPlanConfigScaleDownPtrOutput) InstanceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleDown) *string {
		if v == nil {
			return nil
		}
		return v.InstanceSpec
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleDownPtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleDown) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleDownPtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleDown) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleIn struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum *string `pulumi:"segmentNodeNum"`
}

// DbInstancePlanPlanConfigScaleInInput is an input type that accepts DbInstancePlanPlanConfigScaleInArgs and DbInstancePlanPlanConfigScaleInOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleInInput` via:
//
//	DbInstancePlanPlanConfigScaleInArgs{...}
type DbInstancePlanPlanConfigScaleInInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleInOutput() DbInstancePlanPlanConfigScaleInOutput
	ToDbInstancePlanPlanConfigScaleInOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleInOutput
}

type DbInstancePlanPlanConfigScaleInArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum pulumi.StringPtrInput `pulumi:"segmentNodeNum"`
}

func (DbInstancePlanPlanConfigScaleInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleIn)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigScaleInArgs) ToDbInstancePlanPlanConfigScaleInOutput() DbInstancePlanPlanConfigScaleInOutput {
	return i.ToDbInstancePlanPlanConfigScaleInOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleInArgs) ToDbInstancePlanPlanConfigScaleInOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleInOutput)
}

func (i DbInstancePlanPlanConfigScaleInArgs) ToDbInstancePlanPlanConfigScaleInPtrOutput() DbInstancePlanPlanConfigScaleInPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleInArgs) ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleInOutput).ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigScaleInPtrInput is an input type that accepts DbInstancePlanPlanConfigScaleInArgs, DbInstancePlanPlanConfigScaleInPtr and DbInstancePlanPlanConfigScaleInPtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleInPtrInput` via:
//
//	        DbInstancePlanPlanConfigScaleInArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigScaleInPtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleInPtrOutput() DbInstancePlanPlanConfigScaleInPtrOutput
	ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleInPtrOutput
}

type dbInstancePlanPlanConfigScaleInPtrType DbInstancePlanPlanConfigScaleInArgs

func DbInstancePlanPlanConfigScaleInPtr(v *DbInstancePlanPlanConfigScaleInArgs) DbInstancePlanPlanConfigScaleInPtrInput {
	return (*dbInstancePlanPlanConfigScaleInPtrType)(v)
}

func (*dbInstancePlanPlanConfigScaleInPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleIn)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigScaleInPtrType) ToDbInstancePlanPlanConfigScaleInPtrOutput() DbInstancePlanPlanConfigScaleInPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigScaleInPtrType) ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleInPtrOutput)
}

type DbInstancePlanPlanConfigScaleInOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleIn)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleInOutput) ToDbInstancePlanPlanConfigScaleInOutput() DbInstancePlanPlanConfigScaleInOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleInOutput) ToDbInstancePlanPlanConfigScaleInOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleInOutput) ToDbInstancePlanPlanConfigScaleInPtrOutput() DbInstancePlanPlanConfigScaleInPtrOutput {
	return o.ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigScaleInOutput) ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigScaleIn) *DbInstancePlanPlanConfigScaleIn {
		return &v
	}).(DbInstancePlanPlanConfigScaleInPtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleInOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleIn) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleInOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleIn) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleInOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleIn) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

// The segment Node Num of the Plan.
func (o DbInstancePlanPlanConfigScaleInOutput) SegmentNodeNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleIn) *string { return v.SegmentNodeNum }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleInPtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleInPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleIn)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleInPtrOutput) ToDbInstancePlanPlanConfigScaleInPtrOutput() DbInstancePlanPlanConfigScaleInPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleInPtrOutput) ToDbInstancePlanPlanConfigScaleInPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleInPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleInPtrOutput) Elem() DbInstancePlanPlanConfigScaleInOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleIn) DbInstancePlanPlanConfigScaleIn {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigScaleIn
		return ret
	}).(DbInstancePlanPlanConfigScaleInOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleInPtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleIn) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleInPtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleIn) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleInPtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleIn) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

// The segment Node Num of the Plan.
func (o DbInstancePlanPlanConfigScaleInPtrOutput) SegmentNodeNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleIn) *string {
		if v == nil {
			return nil
		}
		return v.SegmentNodeNum
	}).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleOut struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum *string `pulumi:"segmentNodeNum"`
}

// DbInstancePlanPlanConfigScaleOutInput is an input type that accepts DbInstancePlanPlanConfigScaleOutArgs and DbInstancePlanPlanConfigScaleOutOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleOutInput` via:
//
//	DbInstancePlanPlanConfigScaleOutArgs{...}
type DbInstancePlanPlanConfigScaleOutInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleOutOutput() DbInstancePlanPlanConfigScaleOutOutput
	ToDbInstancePlanPlanConfigScaleOutOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleOutOutput
}

type DbInstancePlanPlanConfigScaleOutArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum pulumi.StringPtrInput `pulumi:"segmentNodeNum"`
}

func (DbInstancePlanPlanConfigScaleOutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleOut)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigScaleOutArgs) ToDbInstancePlanPlanConfigScaleOutOutput() DbInstancePlanPlanConfigScaleOutOutput {
	return i.ToDbInstancePlanPlanConfigScaleOutOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleOutArgs) ToDbInstancePlanPlanConfigScaleOutOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleOutOutput)
}

func (i DbInstancePlanPlanConfigScaleOutArgs) ToDbInstancePlanPlanConfigScaleOutPtrOutput() DbInstancePlanPlanConfigScaleOutPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleOutArgs) ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleOutOutput).ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigScaleOutPtrInput is an input type that accepts DbInstancePlanPlanConfigScaleOutArgs, DbInstancePlanPlanConfigScaleOutPtr and DbInstancePlanPlanConfigScaleOutPtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleOutPtrInput` via:
//
//	        DbInstancePlanPlanConfigScaleOutArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigScaleOutPtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleOutPtrOutput() DbInstancePlanPlanConfigScaleOutPtrOutput
	ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleOutPtrOutput
}

type dbInstancePlanPlanConfigScaleOutPtrType DbInstancePlanPlanConfigScaleOutArgs

func DbInstancePlanPlanConfigScaleOutPtr(v *DbInstancePlanPlanConfigScaleOutArgs) DbInstancePlanPlanConfigScaleOutPtrInput {
	return (*dbInstancePlanPlanConfigScaleOutPtrType)(v)
}

func (*dbInstancePlanPlanConfigScaleOutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleOut)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigScaleOutPtrType) ToDbInstancePlanPlanConfigScaleOutPtrOutput() DbInstancePlanPlanConfigScaleOutPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigScaleOutPtrType) ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleOutPtrOutput)
}

type DbInstancePlanPlanConfigScaleOutOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleOutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleOut)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleOutOutput) ToDbInstancePlanPlanConfigScaleOutOutput() DbInstancePlanPlanConfigScaleOutOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleOutOutput) ToDbInstancePlanPlanConfigScaleOutOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleOutOutput) ToDbInstancePlanPlanConfigScaleOutPtrOutput() DbInstancePlanPlanConfigScaleOutPtrOutput {
	return o.ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigScaleOutOutput) ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigScaleOut) *DbInstancePlanPlanConfigScaleOut {
		return &v
	}).(DbInstancePlanPlanConfigScaleOutPtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleOutOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleOut) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleOutOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleOut) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleOutOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleOut) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

// The segment Node Num of the Plan.
func (o DbInstancePlanPlanConfigScaleOutOutput) SegmentNodeNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleOut) *string { return v.SegmentNodeNum }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleOutPtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleOutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleOut)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleOutPtrOutput) ToDbInstancePlanPlanConfigScaleOutPtrOutput() DbInstancePlanPlanConfigScaleOutPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleOutPtrOutput) ToDbInstancePlanPlanConfigScaleOutPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleOutPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleOutPtrOutput) Elem() DbInstancePlanPlanConfigScaleOutOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleOut) DbInstancePlanPlanConfigScaleOut {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigScaleOut
		return ret
	}).(DbInstancePlanPlanConfigScaleOutOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleOutPtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleOut) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleOutPtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleOut) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleOutPtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleOut) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

// The segment Node Num of the Plan.
func (o DbInstancePlanPlanConfigScaleOutPtrOutput) SegmentNodeNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleOut) *string {
		if v == nil {
			return nil
		}
		return v.SegmentNodeNum
	}).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleUp struct {
	// The executed time of the Plan.
	ExecuteTime *string `pulumi:"executeTime"`
	// The specification of segment nodes of the Plan.
	InstanceSpec *string `pulumi:"instanceSpec"`
	// The Cron Time of the plan.
	PlanCronTime *string `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus *string `pulumi:"planTaskStatus"`
}

// DbInstancePlanPlanConfigScaleUpInput is an input type that accepts DbInstancePlanPlanConfigScaleUpArgs and DbInstancePlanPlanConfigScaleUpOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleUpInput` via:
//
//	DbInstancePlanPlanConfigScaleUpArgs{...}
type DbInstancePlanPlanConfigScaleUpInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleUpOutput() DbInstancePlanPlanConfigScaleUpOutput
	ToDbInstancePlanPlanConfigScaleUpOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleUpOutput
}

type DbInstancePlanPlanConfigScaleUpArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringPtrInput `pulumi:"executeTime"`
	// The specification of segment nodes of the Plan.
	InstanceSpec pulumi.StringPtrInput `pulumi:"instanceSpec"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringPtrInput `pulumi:"planCronTime"`
	// (Available since v1.231.0) The status of the plan task.
	PlanTaskStatus pulumi.StringPtrInput `pulumi:"planTaskStatus"`
}

func (DbInstancePlanPlanConfigScaleUpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleUp)(nil)).Elem()
}

func (i DbInstancePlanPlanConfigScaleUpArgs) ToDbInstancePlanPlanConfigScaleUpOutput() DbInstancePlanPlanConfigScaleUpOutput {
	return i.ToDbInstancePlanPlanConfigScaleUpOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleUpArgs) ToDbInstancePlanPlanConfigScaleUpOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleUpOutput)
}

func (i DbInstancePlanPlanConfigScaleUpArgs) ToDbInstancePlanPlanConfigScaleUpPtrOutput() DbInstancePlanPlanConfigScaleUpPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(context.Background())
}

func (i DbInstancePlanPlanConfigScaleUpArgs) ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleUpOutput).ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(ctx)
}

// DbInstancePlanPlanConfigScaleUpPtrInput is an input type that accepts DbInstancePlanPlanConfigScaleUpArgs, DbInstancePlanPlanConfigScaleUpPtr and DbInstancePlanPlanConfigScaleUpPtrOutput values.
// You can construct a concrete instance of `DbInstancePlanPlanConfigScaleUpPtrInput` via:
//
//	        DbInstancePlanPlanConfigScaleUpArgs{...}
//
//	or:
//
//	        nil
type DbInstancePlanPlanConfigScaleUpPtrInput interface {
	pulumi.Input

	ToDbInstancePlanPlanConfigScaleUpPtrOutput() DbInstancePlanPlanConfigScaleUpPtrOutput
	ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(context.Context) DbInstancePlanPlanConfigScaleUpPtrOutput
}

type dbInstancePlanPlanConfigScaleUpPtrType DbInstancePlanPlanConfigScaleUpArgs

func DbInstancePlanPlanConfigScaleUpPtr(v *DbInstancePlanPlanConfigScaleUpArgs) DbInstancePlanPlanConfigScaleUpPtrInput {
	return (*dbInstancePlanPlanConfigScaleUpPtrType)(v)
}

func (*dbInstancePlanPlanConfigScaleUpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleUp)(nil)).Elem()
}

func (i *dbInstancePlanPlanConfigScaleUpPtrType) ToDbInstancePlanPlanConfigScaleUpPtrOutput() DbInstancePlanPlanConfigScaleUpPtrOutput {
	return i.ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(context.Background())
}

func (i *dbInstancePlanPlanConfigScaleUpPtrType) ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstancePlanPlanConfigScaleUpPtrOutput)
}

type DbInstancePlanPlanConfigScaleUpOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleUpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstancePlanPlanConfigScaleUp)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleUpOutput) ToDbInstancePlanPlanConfigScaleUpOutput() DbInstancePlanPlanConfigScaleUpOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleUpOutput) ToDbInstancePlanPlanConfigScaleUpOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleUpOutput) ToDbInstancePlanPlanConfigScaleUpPtrOutput() DbInstancePlanPlanConfigScaleUpPtrOutput {
	return o.ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(context.Background())
}

func (o DbInstancePlanPlanConfigScaleUpOutput) ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstancePlanPlanConfigScaleUp) *DbInstancePlanPlanConfigScaleUp {
		return &v
	}).(DbInstancePlanPlanConfigScaleUpPtrOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleUpOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleUp) *string { return v.ExecuteTime }).(pulumi.StringPtrOutput)
}

// The specification of segment nodes of the Plan.
func (o DbInstancePlanPlanConfigScaleUpOutput) InstanceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleUp) *string { return v.InstanceSpec }).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleUpOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleUp) *string { return v.PlanCronTime }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleUpOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstancePlanPlanConfigScaleUp) *string { return v.PlanTaskStatus }).(pulumi.StringPtrOutput)
}

type DbInstancePlanPlanConfigScaleUpPtrOutput struct{ *pulumi.OutputState }

func (DbInstancePlanPlanConfigScaleUpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstancePlanPlanConfigScaleUp)(nil)).Elem()
}

func (o DbInstancePlanPlanConfigScaleUpPtrOutput) ToDbInstancePlanPlanConfigScaleUpPtrOutput() DbInstancePlanPlanConfigScaleUpPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleUpPtrOutput) ToDbInstancePlanPlanConfigScaleUpPtrOutputWithContext(ctx context.Context) DbInstancePlanPlanConfigScaleUpPtrOutput {
	return o
}

func (o DbInstancePlanPlanConfigScaleUpPtrOutput) Elem() DbInstancePlanPlanConfigScaleUpOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleUp) DbInstancePlanPlanConfigScaleUp {
		if v != nil {
			return *v
		}
		var ret DbInstancePlanPlanConfigScaleUp
		return ret
	}).(DbInstancePlanPlanConfigScaleUpOutput)
}

// The executed time of the Plan.
func (o DbInstancePlanPlanConfigScaleUpPtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleUp) *string {
		if v == nil {
			return nil
		}
		return v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The specification of segment nodes of the Plan.
func (o DbInstancePlanPlanConfigScaleUpPtrOutput) InstanceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleUp) *string {
		if v == nil {
			return nil
		}
		return v.InstanceSpec
	}).(pulumi.StringPtrOutput)
}

// The Cron Time of the plan.
func (o DbInstancePlanPlanConfigScaleUpPtrOutput) PlanCronTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleUp) *string {
		if v == nil {
			return nil
		}
		return v.PlanCronTime
	}).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The status of the plan task.
func (o DbInstancePlanPlanConfigScaleUpPtrOutput) PlanTaskStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstancePlanPlanConfigScaleUp) *string {
		if v == nil {
			return nil
		}
		return v.PlanTaskStatus
	}).(pulumi.StringPtrOutput)
}

type InstanceIpWhitelist struct {
	// The value of this parameter is empty by default. The attribute of the whitelist group.
	// If the value contains `hidden`, this white list item will not output.
	IpGroupAttribute *string `pulumi:"ipGroupAttribute"`
	// IP whitelist group name.
	IpGroupName *string `pulumi:"ipGroupName"`
	// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
	SecurityIpList *string `pulumi:"securityIpList"`
}

// InstanceIpWhitelistInput is an input type that accepts InstanceIpWhitelistArgs and InstanceIpWhitelistOutput values.
// You can construct a concrete instance of `InstanceIpWhitelistInput` via:
//
//	InstanceIpWhitelistArgs{...}
type InstanceIpWhitelistInput interface {
	pulumi.Input

	ToInstanceIpWhitelistOutput() InstanceIpWhitelistOutput
	ToInstanceIpWhitelistOutputWithContext(context.Context) InstanceIpWhitelistOutput
}

type InstanceIpWhitelistArgs struct {
	// The value of this parameter is empty by default. The attribute of the whitelist group.
	// If the value contains `hidden`, this white list item will not output.
	IpGroupAttribute pulumi.StringPtrInput `pulumi:"ipGroupAttribute"`
	// IP whitelist group name.
	IpGroupName pulumi.StringPtrInput `pulumi:"ipGroupName"`
	// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
	SecurityIpList pulumi.StringPtrInput `pulumi:"securityIpList"`
}

func (InstanceIpWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIpWhitelist)(nil)).Elem()
}

func (i InstanceIpWhitelistArgs) ToInstanceIpWhitelistOutput() InstanceIpWhitelistOutput {
	return i.ToInstanceIpWhitelistOutputWithContext(context.Background())
}

func (i InstanceIpWhitelistArgs) ToInstanceIpWhitelistOutputWithContext(ctx context.Context) InstanceIpWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIpWhitelistOutput)
}

// InstanceIpWhitelistArrayInput is an input type that accepts InstanceIpWhitelistArray and InstanceIpWhitelistArrayOutput values.
// You can construct a concrete instance of `InstanceIpWhitelistArrayInput` via:
//
//	InstanceIpWhitelistArray{ InstanceIpWhitelistArgs{...} }
type InstanceIpWhitelistArrayInput interface {
	pulumi.Input

	ToInstanceIpWhitelistArrayOutput() InstanceIpWhitelistArrayOutput
	ToInstanceIpWhitelistArrayOutputWithContext(context.Context) InstanceIpWhitelistArrayOutput
}

type InstanceIpWhitelistArray []InstanceIpWhitelistInput

func (InstanceIpWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceIpWhitelist)(nil)).Elem()
}

func (i InstanceIpWhitelistArray) ToInstanceIpWhitelistArrayOutput() InstanceIpWhitelistArrayOutput {
	return i.ToInstanceIpWhitelistArrayOutputWithContext(context.Background())
}

func (i InstanceIpWhitelistArray) ToInstanceIpWhitelistArrayOutputWithContext(ctx context.Context) InstanceIpWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIpWhitelistArrayOutput)
}

type InstanceIpWhitelistOutput struct{ *pulumi.OutputState }

func (InstanceIpWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIpWhitelist)(nil)).Elem()
}

func (o InstanceIpWhitelistOutput) ToInstanceIpWhitelistOutput() InstanceIpWhitelistOutput {
	return o
}

func (o InstanceIpWhitelistOutput) ToInstanceIpWhitelistOutputWithContext(ctx context.Context) InstanceIpWhitelistOutput {
	return o
}

// The value of this parameter is empty by default. The attribute of the whitelist group.
// If the value contains `hidden`, this white list item will not output.
func (o InstanceIpWhitelistOutput) IpGroupAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIpWhitelist) *string { return v.IpGroupAttribute }).(pulumi.StringPtrOutput)
}

// IP whitelist group name.
func (o InstanceIpWhitelistOutput) IpGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIpWhitelist) *string { return v.IpGroupName }).(pulumi.StringPtrOutput)
}

// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
func (o InstanceIpWhitelistOutput) SecurityIpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIpWhitelist) *string { return v.SecurityIpList }).(pulumi.StringPtrOutput)
}

type InstanceIpWhitelistArrayOutput struct{ *pulumi.OutputState }

func (InstanceIpWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceIpWhitelist)(nil)).Elem()
}

func (o InstanceIpWhitelistArrayOutput) ToInstanceIpWhitelistArrayOutput() InstanceIpWhitelistArrayOutput {
	return o
}

func (o InstanceIpWhitelistArrayOutput) ToInstanceIpWhitelistArrayOutputWithContext(ctx context.Context) InstanceIpWhitelistArrayOutput {
	return o
}

func (o InstanceIpWhitelistArrayOutput) Index(i pulumi.IntInput) InstanceIpWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceIpWhitelist {
		return vs[0].([]InstanceIpWhitelist)[vs[1].(int)]
	}).(InstanceIpWhitelistOutput)
}

type InstanceParameter struct {
	// (Available since v1.231.0) The default value of the parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// (Available since v1.231.0) Whether to force restart the instance to config the parameter.
	ForceRestartInstance *string `pulumi:"forceRestartInstance"`
	// (Available since v1.231.0) Whether the parameter is changeable.
	IsChangeableConfig *string `pulumi:"isChangeableConfig"`
	// The name of the parameter.
	Name string `pulumi:"name"`
	// (Available since v1.231.0) The optional range of the parameter.
	OptionalRange *string `pulumi:"optionalRange"`
	// (Available since v1.231.0) The description of the parameter.
	ParameterDescription *string `pulumi:"parameterDescription"`
	// The value of the parameter.
	Value string `pulumi:"value"`
}

// InstanceParameterInput is an input type that accepts InstanceParameterArgs and InstanceParameterOutput values.
// You can construct a concrete instance of `InstanceParameterInput` via:
//
//	InstanceParameterArgs{...}
type InstanceParameterInput interface {
	pulumi.Input

	ToInstanceParameterOutput() InstanceParameterOutput
	ToInstanceParameterOutputWithContext(context.Context) InstanceParameterOutput
}

type InstanceParameterArgs struct {
	// (Available since v1.231.0) The default value of the parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// (Available since v1.231.0) Whether to force restart the instance to config the parameter.
	ForceRestartInstance pulumi.StringPtrInput `pulumi:"forceRestartInstance"`
	// (Available since v1.231.0) Whether the parameter is changeable.
	IsChangeableConfig pulumi.StringPtrInput `pulumi:"isChangeableConfig"`
	// The name of the parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// (Available since v1.231.0) The optional range of the parameter.
	OptionalRange pulumi.StringPtrInput `pulumi:"optionalRange"`
	// (Available since v1.231.0) The description of the parameter.
	ParameterDescription pulumi.StringPtrInput `pulumi:"parameterDescription"`
	// The value of the parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArgs) ToInstanceParameterOutput() InstanceParameterOutput {
	return i.ToInstanceParameterOutputWithContext(context.Background())
}

func (i InstanceParameterArgs) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterOutput)
}

// InstanceParameterArrayInput is an input type that accepts InstanceParameterArray and InstanceParameterArrayOutput values.
// You can construct a concrete instance of `InstanceParameterArrayInput` via:
//
//	InstanceParameterArray{ InstanceParameterArgs{...} }
type InstanceParameterArrayInput interface {
	pulumi.Input

	ToInstanceParameterArrayOutput() InstanceParameterArrayOutput
	ToInstanceParameterArrayOutputWithContext(context.Context) InstanceParameterArrayOutput
}

type InstanceParameterArray []InstanceParameterInput

func (InstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return i.ToInstanceParameterArrayOutputWithContext(context.Background())
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterArrayOutput)
}

type InstanceParameterOutput struct{ *pulumi.OutputState }

func (InstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterOutput) ToInstanceParameterOutput() InstanceParameterOutput {
	return o
}

func (o InstanceParameterOutput) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return o
}

// (Available since v1.231.0) The default value of the parameter.
func (o InstanceParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) Whether to force restart the instance to config the parameter.
func (o InstanceParameterOutput) ForceRestartInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceParameter) *string { return v.ForceRestartInstance }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) Whether the parameter is changeable.
func (o InstanceParameterOutput) IsChangeableConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceParameter) *string { return v.IsChangeableConfig }).(pulumi.StringPtrOutput)
}

// The name of the parameter.
func (o InstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

// (Available since v1.231.0) The optional range of the parameter.
func (o InstanceParameterOutput) OptionalRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceParameter) *string { return v.OptionalRange }).(pulumi.StringPtrOutput)
}

// (Available since v1.231.0) The description of the parameter.
func (o InstanceParameterOutput) ParameterDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceParameter) *string { return v.ParameterDescription }).(pulumi.StringPtrOutput)
}

// The value of the parameter.
func (o InstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (InstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) Index(i pulumi.IntInput) InstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceParameter {
		return vs[0].([]InstanceParameter)[vs[1].(int)]
	}).(InstanceParameterOutput)
}

type GetAccountsAccount struct {
	// The description of the account.
	AccountDescription string `pulumi:"accountDescription"`
	// The name of the account.
	AccountName string `pulumi:"accountName"`
	// The ID of the instance.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The ID of the Account. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The status of the account. Valid values: `Active`, `Creating` and `Deleting`.
	Status string `pulumi:"status"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The description of the account.
	AccountDescription pulumi.StringInput `pulumi:"accountDescription"`
	// The name of the account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The ID of the instance.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// The ID of the Account. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The status of the account. Valid values: `Active`, `Creating` and `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The description of the account.
func (o GetAccountsAccountOutput) AccountDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountDescription }).(pulumi.StringOutput)
}

// The name of the account.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetAccountsAccountOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The ID of the Account. Its value is same as Queue Name.
func (o GetAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The status of the account. Valid values: `Active`, `Creating` and `Deleting`.
func (o GetAccountsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetDataBackupsBackup struct {
	// The backup end time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
	BackupEndTime string `pulumi:"backupEndTime"`
	// The end time of the backup (local time).
	BackupEndTimeLocal string `pulumi:"backupEndTimeLocal"`
	// Backup method. Value Description:-**Physical**: Physical backup.-**Snapshot**: the Snapshot backup.
	BackupMethod string `pulumi:"backupMethod"`
	// Backup mode.Full Backup Value Description:-**Automated**: The system is automatically backed up.-**Manual**: Manual backup.Recovery point value description:-**Automated**: The recovery point after a full backup.-**Manual**: The recovery point triggered manually by the user.-**Period**: The recovery point triggered periodically because of the backup policy.
	BackupMode string `pulumi:"backupMode"`
	// The ID of the backup set.
	BackupSetId string `pulumi:"backupSetId"`
	// The size of the backup file. Unit: Byte.
	BackupSize int `pulumi:"backupSize"`
	// The backup start time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
	BackupStartTime string `pulumi:"backupStartTime"`
	// The start time of the backup (local time).
	BackupStartTimeLocal string `pulumi:"backupStartTimeLocal"`
	// The name of the recovery point or full backup set.
	BaksetName string `pulumi:"baksetName"`
	// -Full backup: Returns the timestamp of the consistent point in time.-Recoverable point: Returns the timestamp of the recoverable point in time.
	ConsistentTime int `pulumi:"consistentTime"`
	// The backup type. Value Description:-**DATA**: Full backup.-**RESTOREPOI**: Recoverable point.
	DataType string `pulumi:"dataType"`
	// The instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Backup set status. Value Description:-Success: The backup has been completed.-Failed: Backup Failed.If not, return all.
	Status string `pulumi:"status"`
}

// GetDataBackupsBackupInput is an input type that accepts GetDataBackupsBackupArgs and GetDataBackupsBackupOutput values.
// You can construct a concrete instance of `GetDataBackupsBackupInput` via:
//
//	GetDataBackupsBackupArgs{...}
type GetDataBackupsBackupInput interface {
	pulumi.Input

	ToGetDataBackupsBackupOutput() GetDataBackupsBackupOutput
	ToGetDataBackupsBackupOutputWithContext(context.Context) GetDataBackupsBackupOutput
}

type GetDataBackupsBackupArgs struct {
	// The backup end time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
	BackupEndTime pulumi.StringInput `pulumi:"backupEndTime"`
	// The end time of the backup (local time).
	BackupEndTimeLocal pulumi.StringInput `pulumi:"backupEndTimeLocal"`
	// Backup method. Value Description:-**Physical**: Physical backup.-**Snapshot**: the Snapshot backup.
	BackupMethod pulumi.StringInput `pulumi:"backupMethod"`
	// Backup mode.Full Backup Value Description:-**Automated**: The system is automatically backed up.-**Manual**: Manual backup.Recovery point value description:-**Automated**: The recovery point after a full backup.-**Manual**: The recovery point triggered manually by the user.-**Period**: The recovery point triggered periodically because of the backup policy.
	BackupMode pulumi.StringInput `pulumi:"backupMode"`
	// The ID of the backup set.
	BackupSetId pulumi.StringInput `pulumi:"backupSetId"`
	// The size of the backup file. Unit: Byte.
	BackupSize pulumi.IntInput `pulumi:"backupSize"`
	// The backup start time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
	BackupStartTime pulumi.StringInput `pulumi:"backupStartTime"`
	// The start time of the backup (local time).
	BackupStartTimeLocal pulumi.StringInput `pulumi:"backupStartTimeLocal"`
	// The name of the recovery point or full backup set.
	BaksetName pulumi.StringInput `pulumi:"baksetName"`
	// -Full backup: Returns the timestamp of the consistent point in time.-Recoverable point: Returns the timestamp of the recoverable point in time.
	ConsistentTime pulumi.IntInput `pulumi:"consistentTime"`
	// The backup type. Value Description:-**DATA**: Full backup.-**RESTOREPOI**: Recoverable point.
	DataType pulumi.StringInput `pulumi:"dataType"`
	// The instance ID.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// Backup set status. Value Description:-Success: The backup has been completed.-Failed: Backup Failed.If not, return all.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDataBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataBackupsBackup)(nil)).Elem()
}

func (i GetDataBackupsBackupArgs) ToGetDataBackupsBackupOutput() GetDataBackupsBackupOutput {
	return i.ToGetDataBackupsBackupOutputWithContext(context.Background())
}

func (i GetDataBackupsBackupArgs) ToGetDataBackupsBackupOutputWithContext(ctx context.Context) GetDataBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataBackupsBackupOutput)
}

// GetDataBackupsBackupArrayInput is an input type that accepts GetDataBackupsBackupArray and GetDataBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetDataBackupsBackupArrayInput` via:
//
//	GetDataBackupsBackupArray{ GetDataBackupsBackupArgs{...} }
type GetDataBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetDataBackupsBackupArrayOutput() GetDataBackupsBackupArrayOutput
	ToGetDataBackupsBackupArrayOutputWithContext(context.Context) GetDataBackupsBackupArrayOutput
}

type GetDataBackupsBackupArray []GetDataBackupsBackupInput

func (GetDataBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataBackupsBackup)(nil)).Elem()
}

func (i GetDataBackupsBackupArray) ToGetDataBackupsBackupArrayOutput() GetDataBackupsBackupArrayOutput {
	return i.ToGetDataBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetDataBackupsBackupArray) ToGetDataBackupsBackupArrayOutputWithContext(ctx context.Context) GetDataBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataBackupsBackupArrayOutput)
}

type GetDataBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetDataBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataBackupsBackup)(nil)).Elem()
}

func (o GetDataBackupsBackupOutput) ToGetDataBackupsBackupOutput() GetDataBackupsBackupOutput {
	return o
}

func (o GetDataBackupsBackupOutput) ToGetDataBackupsBackupOutputWithContext(ctx context.Context) GetDataBackupsBackupOutput {
	return o
}

// The backup end time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
func (o GetDataBackupsBackupOutput) BackupEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupEndTime }).(pulumi.StringOutput)
}

// The end time of the backup (local time).
func (o GetDataBackupsBackupOutput) BackupEndTimeLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupEndTimeLocal }).(pulumi.StringOutput)
}

// Backup method. Value Description:-**Physical**: Physical backup.-**Snapshot**: the Snapshot backup.
func (o GetDataBackupsBackupOutput) BackupMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupMethod }).(pulumi.StringOutput)
}

// Backup mode.Full Backup Value Description:-**Automated**: The system is automatically backed up.-**Manual**: Manual backup.Recovery point value description:-**Automated**: The recovery point after a full backup.-**Manual**: The recovery point triggered manually by the user.-**Period**: The recovery point triggered periodically because of the backup policy.
func (o GetDataBackupsBackupOutput) BackupMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupMode }).(pulumi.StringOutput)
}

// The ID of the backup set.
func (o GetDataBackupsBackupOutput) BackupSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupSetId }).(pulumi.StringOutput)
}

// The size of the backup file. Unit: Byte.
func (o GetDataBackupsBackupOutput) BackupSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) int { return v.BackupSize }).(pulumi.IntOutput)
}

// The backup start time. Format: yyyy-MM-ddTHH:mm:ssZ(UTC time).
func (o GetDataBackupsBackupOutput) BackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupStartTime }).(pulumi.StringOutput)
}

// The start time of the backup (local time).
func (o GetDataBackupsBackupOutput) BackupStartTimeLocal() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BackupStartTimeLocal }).(pulumi.StringOutput)
}

// The name of the recovery point or full backup set.
func (o GetDataBackupsBackupOutput) BaksetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.BaksetName }).(pulumi.StringOutput)
}

// -Full backup: Returns the timestamp of the consistent point in time.-Recoverable point: Returns the timestamp of the recoverable point in time.
func (o GetDataBackupsBackupOutput) ConsistentTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) int { return v.ConsistentTime }).(pulumi.IntOutput)
}

// The backup type. Value Description:-**DATA**: Full backup.-**RESTOREPOI**: Recoverable point.
func (o GetDataBackupsBackupOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.DataType }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetDataBackupsBackupOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Backup set status. Value Description:-Success: The backup has been completed.-Failed: Backup Failed.If not, return all.
func (o GetDataBackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataBackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

type GetDataBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetDataBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataBackupsBackup)(nil)).Elem()
}

func (o GetDataBackupsBackupArrayOutput) ToGetDataBackupsBackupArrayOutput() GetDataBackupsBackupArrayOutput {
	return o
}

func (o GetDataBackupsBackupArrayOutput) ToGetDataBackupsBackupArrayOutputWithContext(ctx context.Context) GetDataBackupsBackupArrayOutput {
	return o
}

func (o GetDataBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetDataBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataBackupsBackup {
		return vs[0].([]GetDataBackupsBackup)[vs[1].(int)]
	}).(GetDataBackupsBackupOutput)
}

type GetDbInstancePlansPlan struct {
	// The name of the Plan.
	DbInstancePlanName string `pulumi:"dbInstancePlanName"`
	// The ID of the resource. The value formats as `<db_instance_id>:<plan_id>`.
	Id string `pulumi:"id"`
	// Plan configuration information.
	PlanConfigs []GetDbInstancePlansPlanPlanConfig `pulumi:"planConfigs"`
	PlanDesc    string                             `pulumi:"planDesc"`
	// The end time of the Plan.
	PlanEndDate string `pulumi:"planEndDate"`
	// The ID of DB Instance Plan.
	PlanId string `pulumi:"planId"`
	// Plan scheduling type. Valid values: `Postpone`, `Regular`.
	PlanScheduleType string `pulumi:"planScheduleType"`
	// The start time of the Plan.
	PlanStartDate string `pulumi:"planStartDate"`
	// The type of the Plan. Valid values: `PauseResume`, `Resize`.
	PlanType string `pulumi:"planType"`
	// The Status of the Plan.
	Status string `pulumi:"status"`
}

// GetDbInstancePlansPlanInput is an input type that accepts GetDbInstancePlansPlanArgs and GetDbInstancePlansPlanOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanInput` via:
//
//	GetDbInstancePlansPlanArgs{...}
type GetDbInstancePlansPlanInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanOutput() GetDbInstancePlansPlanOutput
	ToGetDbInstancePlansPlanOutputWithContext(context.Context) GetDbInstancePlansPlanOutput
}

type GetDbInstancePlansPlanArgs struct {
	// The name of the Plan.
	DbInstancePlanName pulumi.StringInput `pulumi:"dbInstancePlanName"`
	// The ID of the resource. The value formats as `<db_instance_id>:<plan_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// Plan configuration information.
	PlanConfigs GetDbInstancePlansPlanPlanConfigArrayInput `pulumi:"planConfigs"`
	PlanDesc    pulumi.StringInput                         `pulumi:"planDesc"`
	// The end time of the Plan.
	PlanEndDate pulumi.StringInput `pulumi:"planEndDate"`
	// The ID of DB Instance Plan.
	PlanId pulumi.StringInput `pulumi:"planId"`
	// Plan scheduling type. Valid values: `Postpone`, `Regular`.
	PlanScheduleType pulumi.StringInput `pulumi:"planScheduleType"`
	// The start time of the Plan.
	PlanStartDate pulumi.StringInput `pulumi:"planStartDate"`
	// The type of the Plan. Valid values: `PauseResume`, `Resize`.
	PlanType pulumi.StringInput `pulumi:"planType"`
	// The Status of the Plan.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDbInstancePlansPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlan)(nil)).Elem()
}

func (i GetDbInstancePlansPlanArgs) ToGetDbInstancePlansPlanOutput() GetDbInstancePlansPlanOutput {
	return i.ToGetDbInstancePlansPlanOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanArgs) ToGetDbInstancePlansPlanOutputWithContext(ctx context.Context) GetDbInstancePlansPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanOutput)
}

// GetDbInstancePlansPlanArrayInput is an input type that accepts GetDbInstancePlansPlanArray and GetDbInstancePlansPlanArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanArrayInput` via:
//
//	GetDbInstancePlansPlanArray{ GetDbInstancePlansPlanArgs{...} }
type GetDbInstancePlansPlanArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanArrayOutput() GetDbInstancePlansPlanArrayOutput
	ToGetDbInstancePlansPlanArrayOutputWithContext(context.Context) GetDbInstancePlansPlanArrayOutput
}

type GetDbInstancePlansPlanArray []GetDbInstancePlansPlanInput

func (GetDbInstancePlansPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlan)(nil)).Elem()
}

func (i GetDbInstancePlansPlanArray) ToGetDbInstancePlansPlanArrayOutput() GetDbInstancePlansPlanArrayOutput {
	return i.ToGetDbInstancePlansPlanArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanArray) ToGetDbInstancePlansPlanArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanArrayOutput)
}

type GetDbInstancePlansPlanOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlan)(nil)).Elem()
}

func (o GetDbInstancePlansPlanOutput) ToGetDbInstancePlansPlanOutput() GetDbInstancePlansPlanOutput {
	return o
}

func (o GetDbInstancePlansPlanOutput) ToGetDbInstancePlansPlanOutputWithContext(ctx context.Context) GetDbInstancePlansPlanOutput {
	return o
}

// The name of the Plan.
func (o GetDbInstancePlansPlanOutput) DbInstancePlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.DbInstancePlanName }).(pulumi.StringOutput)
}

// The ID of the resource. The value formats as `<db_instance_id>:<plan_id>`.
func (o GetDbInstancePlansPlanOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.Id }).(pulumi.StringOutput)
}

// Plan configuration information.
func (o GetDbInstancePlansPlanOutput) PlanConfigs() GetDbInstancePlansPlanPlanConfigArrayOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) []GetDbInstancePlansPlanPlanConfig { return v.PlanConfigs }).(GetDbInstancePlansPlanPlanConfigArrayOutput)
}

func (o GetDbInstancePlansPlanOutput) PlanDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanDesc }).(pulumi.StringOutput)
}

// The end time of the Plan.
func (o GetDbInstancePlansPlanOutput) PlanEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanEndDate }).(pulumi.StringOutput)
}

// The ID of DB Instance Plan.
func (o GetDbInstancePlansPlanOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanId }).(pulumi.StringOutput)
}

// Plan scheduling type. Valid values: `Postpone`, `Regular`.
func (o GetDbInstancePlansPlanOutput) PlanScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanScheduleType }).(pulumi.StringOutput)
}

// The start time of the Plan.
func (o GetDbInstancePlansPlanOutput) PlanStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanStartDate }).(pulumi.StringOutput)
}

// The type of the Plan. Valid values: `PauseResume`, `Resize`.
func (o GetDbInstancePlansPlanOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.PlanType }).(pulumi.StringOutput)
}

// The Status of the Plan.
func (o GetDbInstancePlansPlanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlan) string { return v.Status }).(pulumi.StringOutput)
}

type GetDbInstancePlansPlanArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlan)(nil)).Elem()
}

func (o GetDbInstancePlansPlanArrayOutput) ToGetDbInstancePlansPlanArrayOutput() GetDbInstancePlansPlanArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanArrayOutput) ToGetDbInstancePlansPlanArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlan {
		return vs[0].([]GetDbInstancePlansPlan)[vs[1].(int)]
	}).(GetDbInstancePlansPlanOutput)
}

type GetDbInstancePlansPlanPlanConfig struct {
	// Pause instance plan config.
	Pauses []GetDbInstancePlansPlanPlanConfigPause `pulumi:"pauses"`
	// Resume instance plan config.
	Resumes []GetDbInstancePlansPlanPlanConfigResume `pulumi:"resumes"`
	// Scale In instance plan config.
	ScaleIns []GetDbInstancePlansPlanPlanConfigScaleIn `pulumi:"scaleIns"`
	// Scale out instance plan config.
	ScaleOuts []GetDbInstancePlansPlanPlanConfigScaleOut `pulumi:"scaleOuts"`
}

// GetDbInstancePlansPlanPlanConfigInput is an input type that accepts GetDbInstancePlansPlanPlanConfigArgs and GetDbInstancePlansPlanPlanConfigOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigInput` via:
//
//	GetDbInstancePlansPlanPlanConfigArgs{...}
type GetDbInstancePlansPlanPlanConfigInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigOutput() GetDbInstancePlansPlanPlanConfigOutput
	ToGetDbInstancePlansPlanPlanConfigOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigOutput
}

type GetDbInstancePlansPlanPlanConfigArgs struct {
	// Pause instance plan config.
	Pauses GetDbInstancePlansPlanPlanConfigPauseArrayInput `pulumi:"pauses"`
	// Resume instance plan config.
	Resumes GetDbInstancePlansPlanPlanConfigResumeArrayInput `pulumi:"resumes"`
	// Scale In instance plan config.
	ScaleIns GetDbInstancePlansPlanPlanConfigScaleInArrayInput `pulumi:"scaleIns"`
	// Scale out instance plan config.
	ScaleOuts GetDbInstancePlansPlanPlanConfigScaleOutArrayInput `pulumi:"scaleOuts"`
}

func (GetDbInstancePlansPlanPlanConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfig)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigArgs) ToGetDbInstancePlansPlanPlanConfigOutput() GetDbInstancePlansPlanPlanConfigOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigArgs) ToGetDbInstancePlansPlanPlanConfigOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigOutput)
}

// GetDbInstancePlansPlanPlanConfigArrayInput is an input type that accepts GetDbInstancePlansPlanPlanConfigArray and GetDbInstancePlansPlanPlanConfigArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigArrayInput` via:
//
//	GetDbInstancePlansPlanPlanConfigArray{ GetDbInstancePlansPlanPlanConfigArgs{...} }
type GetDbInstancePlansPlanPlanConfigArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigArrayOutput() GetDbInstancePlansPlanPlanConfigArrayOutput
	ToGetDbInstancePlansPlanPlanConfigArrayOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigArrayOutput
}

type GetDbInstancePlansPlanPlanConfigArray []GetDbInstancePlansPlanPlanConfigInput

func (GetDbInstancePlansPlanPlanConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfig)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigArray) ToGetDbInstancePlansPlanPlanConfigArrayOutput() GetDbInstancePlansPlanPlanConfigArrayOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigArray) ToGetDbInstancePlansPlanPlanConfigArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfig)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigOutput) ToGetDbInstancePlansPlanPlanConfigOutput() GetDbInstancePlansPlanPlanConfigOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigOutput) ToGetDbInstancePlansPlanPlanConfigOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigOutput {
	return o
}

// Pause instance plan config.
func (o GetDbInstancePlansPlanPlanConfigOutput) Pauses() GetDbInstancePlansPlanPlanConfigPauseArrayOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfig) []GetDbInstancePlansPlanPlanConfigPause { return v.Pauses }).(GetDbInstancePlansPlanPlanConfigPauseArrayOutput)
}

// Resume instance plan config.
func (o GetDbInstancePlansPlanPlanConfigOutput) Resumes() GetDbInstancePlansPlanPlanConfigResumeArrayOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfig) []GetDbInstancePlansPlanPlanConfigResume { return v.Resumes }).(GetDbInstancePlansPlanPlanConfigResumeArrayOutput)
}

// Scale In instance plan config.
func (o GetDbInstancePlansPlanPlanConfigOutput) ScaleIns() GetDbInstancePlansPlanPlanConfigScaleInArrayOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfig) []GetDbInstancePlansPlanPlanConfigScaleIn { return v.ScaleIns }).(GetDbInstancePlansPlanPlanConfigScaleInArrayOutput)
}

// Scale out instance plan config.
func (o GetDbInstancePlansPlanPlanConfigOutput) ScaleOuts() GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfig) []GetDbInstancePlansPlanPlanConfigScaleOut {
		return v.ScaleOuts
	}).(GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfig)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigArrayOutput) ToGetDbInstancePlansPlanPlanConfigArrayOutput() GetDbInstancePlansPlanPlanConfigArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigArrayOutput) ToGetDbInstancePlansPlanPlanConfigArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanPlanConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlanPlanConfig {
		return vs[0].([]GetDbInstancePlansPlanPlanConfig)[vs[1].(int)]
	}).(GetDbInstancePlansPlanPlanConfigOutput)
}

type GetDbInstancePlansPlanPlanConfigPause struct {
	// The executed time of the Plan.
	ExecuteTime string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime string `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus string `pulumi:"planTaskStatus"`
}

// GetDbInstancePlansPlanPlanConfigPauseInput is an input type that accepts GetDbInstancePlansPlanPlanConfigPauseArgs and GetDbInstancePlansPlanPlanConfigPauseOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigPauseInput` via:
//
//	GetDbInstancePlansPlanPlanConfigPauseArgs{...}
type GetDbInstancePlansPlanPlanConfigPauseInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigPauseOutput() GetDbInstancePlansPlanPlanConfigPauseOutput
	ToGetDbInstancePlansPlanPlanConfigPauseOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigPauseOutput
}

type GetDbInstancePlansPlanPlanConfigPauseArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringInput `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus pulumi.StringInput `pulumi:"planTaskStatus"`
}

func (GetDbInstancePlansPlanPlanConfigPauseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigPause)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigPauseArgs) ToGetDbInstancePlansPlanPlanConfigPauseOutput() GetDbInstancePlansPlanPlanConfigPauseOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigPauseOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigPauseArgs) ToGetDbInstancePlansPlanPlanConfigPauseOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigPauseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigPauseOutput)
}

// GetDbInstancePlansPlanPlanConfigPauseArrayInput is an input type that accepts GetDbInstancePlansPlanPlanConfigPauseArray and GetDbInstancePlansPlanPlanConfigPauseArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigPauseArrayInput` via:
//
//	GetDbInstancePlansPlanPlanConfigPauseArray{ GetDbInstancePlansPlanPlanConfigPauseArgs{...} }
type GetDbInstancePlansPlanPlanConfigPauseArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigPauseArrayOutput() GetDbInstancePlansPlanPlanConfigPauseArrayOutput
	ToGetDbInstancePlansPlanPlanConfigPauseArrayOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigPauseArrayOutput
}

type GetDbInstancePlansPlanPlanConfigPauseArray []GetDbInstancePlansPlanPlanConfigPauseInput

func (GetDbInstancePlansPlanPlanConfigPauseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigPause)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigPauseArray) ToGetDbInstancePlansPlanPlanConfigPauseArrayOutput() GetDbInstancePlansPlanPlanConfigPauseArrayOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigPauseArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigPauseArray) ToGetDbInstancePlansPlanPlanConfigPauseArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigPauseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigPauseArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigPauseOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigPauseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigPause)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigPauseOutput) ToGetDbInstancePlansPlanPlanConfigPauseOutput() GetDbInstancePlansPlanPlanConfigPauseOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigPauseOutput) ToGetDbInstancePlansPlanPlanConfigPauseOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigPauseOutput {
	return o
}

// The executed time of the Plan.
func (o GetDbInstancePlansPlanPlanConfigPauseOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigPause) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

// The Cron Time of the plan.
func (o GetDbInstancePlansPlanPlanConfigPauseOutput) PlanCronTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigPause) string { return v.PlanCronTime }).(pulumi.StringOutput)
}

// The Status of the plan Task.
func (o GetDbInstancePlansPlanPlanConfigPauseOutput) PlanTaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigPause) string { return v.PlanTaskStatus }).(pulumi.StringOutput)
}

type GetDbInstancePlansPlanPlanConfigPauseArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigPauseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigPause)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigPauseArrayOutput) ToGetDbInstancePlansPlanPlanConfigPauseArrayOutput() GetDbInstancePlansPlanPlanConfigPauseArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigPauseArrayOutput) ToGetDbInstancePlansPlanPlanConfigPauseArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigPauseArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigPauseArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanPlanConfigPauseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlanPlanConfigPause {
		return vs[0].([]GetDbInstancePlansPlanPlanConfigPause)[vs[1].(int)]
	}).(GetDbInstancePlansPlanPlanConfigPauseOutput)
}

type GetDbInstancePlansPlanPlanConfigResume struct {
	// The executed time of the Plan.
	ExecuteTime string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime string `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus string `pulumi:"planTaskStatus"`
}

// GetDbInstancePlansPlanPlanConfigResumeInput is an input type that accepts GetDbInstancePlansPlanPlanConfigResumeArgs and GetDbInstancePlansPlanPlanConfigResumeOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigResumeInput` via:
//
//	GetDbInstancePlansPlanPlanConfigResumeArgs{...}
type GetDbInstancePlansPlanPlanConfigResumeInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigResumeOutput() GetDbInstancePlansPlanPlanConfigResumeOutput
	ToGetDbInstancePlansPlanPlanConfigResumeOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigResumeOutput
}

type GetDbInstancePlansPlanPlanConfigResumeArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringInput `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus pulumi.StringInput `pulumi:"planTaskStatus"`
}

func (GetDbInstancePlansPlanPlanConfigResumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigResume)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigResumeArgs) ToGetDbInstancePlansPlanPlanConfigResumeOutput() GetDbInstancePlansPlanPlanConfigResumeOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigResumeOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigResumeArgs) ToGetDbInstancePlansPlanPlanConfigResumeOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigResumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigResumeOutput)
}

// GetDbInstancePlansPlanPlanConfigResumeArrayInput is an input type that accepts GetDbInstancePlansPlanPlanConfigResumeArray and GetDbInstancePlansPlanPlanConfigResumeArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigResumeArrayInput` via:
//
//	GetDbInstancePlansPlanPlanConfigResumeArray{ GetDbInstancePlansPlanPlanConfigResumeArgs{...} }
type GetDbInstancePlansPlanPlanConfigResumeArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigResumeArrayOutput() GetDbInstancePlansPlanPlanConfigResumeArrayOutput
	ToGetDbInstancePlansPlanPlanConfigResumeArrayOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigResumeArrayOutput
}

type GetDbInstancePlansPlanPlanConfigResumeArray []GetDbInstancePlansPlanPlanConfigResumeInput

func (GetDbInstancePlansPlanPlanConfigResumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigResume)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigResumeArray) ToGetDbInstancePlansPlanPlanConfigResumeArrayOutput() GetDbInstancePlansPlanPlanConfigResumeArrayOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigResumeArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigResumeArray) ToGetDbInstancePlansPlanPlanConfigResumeArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigResumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigResumeArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigResumeOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigResumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigResume)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigResumeOutput) ToGetDbInstancePlansPlanPlanConfigResumeOutput() GetDbInstancePlansPlanPlanConfigResumeOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigResumeOutput) ToGetDbInstancePlansPlanPlanConfigResumeOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigResumeOutput {
	return o
}

// The executed time of the Plan.
func (o GetDbInstancePlansPlanPlanConfigResumeOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigResume) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

// The Cron Time of the plan.
func (o GetDbInstancePlansPlanPlanConfigResumeOutput) PlanCronTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigResume) string { return v.PlanCronTime }).(pulumi.StringOutput)
}

// The Status of the plan Task.
func (o GetDbInstancePlansPlanPlanConfigResumeOutput) PlanTaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigResume) string { return v.PlanTaskStatus }).(pulumi.StringOutput)
}

type GetDbInstancePlansPlanPlanConfigResumeArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigResumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigResume)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigResumeArrayOutput) ToGetDbInstancePlansPlanPlanConfigResumeArrayOutput() GetDbInstancePlansPlanPlanConfigResumeArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigResumeArrayOutput) ToGetDbInstancePlansPlanPlanConfigResumeArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigResumeArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigResumeArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanPlanConfigResumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlanPlanConfigResume {
		return vs[0].([]GetDbInstancePlansPlanPlanConfigResume)[vs[1].(int)]
	}).(GetDbInstancePlansPlanPlanConfigResumeOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleIn struct {
	// The executed time of the Plan.
	ExecuteTime string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime string `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus string `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum string `pulumi:"segmentNodeNum"`
}

// GetDbInstancePlansPlanPlanConfigScaleInInput is an input type that accepts GetDbInstancePlansPlanPlanConfigScaleInArgs and GetDbInstancePlansPlanPlanConfigScaleInOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigScaleInInput` via:
//
//	GetDbInstancePlansPlanPlanConfigScaleInArgs{...}
type GetDbInstancePlansPlanPlanConfigScaleInInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigScaleInOutput() GetDbInstancePlansPlanPlanConfigScaleInOutput
	ToGetDbInstancePlansPlanPlanConfigScaleInOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigScaleInOutput
}

type GetDbInstancePlansPlanPlanConfigScaleInArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringInput `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus pulumi.StringInput `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum pulumi.StringInput `pulumi:"segmentNodeNum"`
}

func (GetDbInstancePlansPlanPlanConfigScaleInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleIn)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigScaleInArgs) ToGetDbInstancePlansPlanPlanConfigScaleInOutput() GetDbInstancePlansPlanPlanConfigScaleInOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigScaleInOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigScaleInArgs) ToGetDbInstancePlansPlanPlanConfigScaleInOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigScaleInOutput)
}

// GetDbInstancePlansPlanPlanConfigScaleInArrayInput is an input type that accepts GetDbInstancePlansPlanPlanConfigScaleInArray and GetDbInstancePlansPlanPlanConfigScaleInArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigScaleInArrayInput` via:
//
//	GetDbInstancePlansPlanPlanConfigScaleInArray{ GetDbInstancePlansPlanPlanConfigScaleInArgs{...} }
type GetDbInstancePlansPlanPlanConfigScaleInArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutput() GetDbInstancePlansPlanPlanConfigScaleInArrayOutput
	ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigScaleInArrayOutput
}

type GetDbInstancePlansPlanPlanConfigScaleInArray []GetDbInstancePlansPlanPlanConfigScaleInInput

func (GetDbInstancePlansPlanPlanConfigScaleInArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigScaleIn)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigScaleInArray) ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutput() GetDbInstancePlansPlanPlanConfigScaleInArrayOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigScaleInArray) ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleInArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigScaleInArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleInOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigScaleInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleIn)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) ToGetDbInstancePlansPlanPlanConfigScaleInOutput() GetDbInstancePlansPlanPlanConfigScaleInOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) ToGetDbInstancePlansPlanPlanConfigScaleInOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleInOutput {
	return o
}

// The executed time of the Plan.
func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleIn) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

// The Cron Time of the plan.
func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) PlanCronTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleIn) string { return v.PlanCronTime }).(pulumi.StringOutput)
}

// The Status of the plan Task.
func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) PlanTaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleIn) string { return v.PlanTaskStatus }).(pulumi.StringOutput)
}

// The segment Node Num of the Plan.
func (o GetDbInstancePlansPlanPlanConfigScaleInOutput) SegmentNodeNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleIn) string { return v.SegmentNodeNum }).(pulumi.StringOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleInArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigScaleInArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigScaleIn)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigScaleInArrayOutput) ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutput() GetDbInstancePlansPlanPlanConfigScaleInArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleInArrayOutput) ToGetDbInstancePlansPlanPlanConfigScaleInArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleInArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleInArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanPlanConfigScaleInOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlanPlanConfigScaleIn {
		return vs[0].([]GetDbInstancePlansPlanPlanConfigScaleIn)[vs[1].(int)]
	}).(GetDbInstancePlansPlanPlanConfigScaleInOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleOut struct {
	// The executed time of the Plan.
	ExecuteTime string `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime string `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus string `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum string `pulumi:"segmentNodeNum"`
}

// GetDbInstancePlansPlanPlanConfigScaleOutInput is an input type that accepts GetDbInstancePlansPlanPlanConfigScaleOutArgs and GetDbInstancePlansPlanPlanConfigScaleOutOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigScaleOutInput` via:
//
//	GetDbInstancePlansPlanPlanConfigScaleOutArgs{...}
type GetDbInstancePlansPlanPlanConfigScaleOutInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigScaleOutOutput() GetDbInstancePlansPlanPlanConfigScaleOutOutput
	ToGetDbInstancePlansPlanPlanConfigScaleOutOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigScaleOutOutput
}

type GetDbInstancePlansPlanPlanConfigScaleOutArgs struct {
	// The executed time of the Plan.
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
	// The Cron Time of the plan.
	PlanCronTime pulumi.StringInput `pulumi:"planCronTime"`
	// The Status of the plan Task.
	PlanTaskStatus pulumi.StringInput `pulumi:"planTaskStatus"`
	// The segment Node Num of the Plan.
	SegmentNodeNum pulumi.StringInput `pulumi:"segmentNodeNum"`
}

func (GetDbInstancePlansPlanPlanConfigScaleOutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleOut)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigScaleOutArgs) ToGetDbInstancePlansPlanPlanConfigScaleOutOutput() GetDbInstancePlansPlanPlanConfigScaleOutOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigScaleOutOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigScaleOutArgs) ToGetDbInstancePlansPlanPlanConfigScaleOutOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleOutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigScaleOutOutput)
}

// GetDbInstancePlansPlanPlanConfigScaleOutArrayInput is an input type that accepts GetDbInstancePlansPlanPlanConfigScaleOutArray and GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput values.
// You can construct a concrete instance of `GetDbInstancePlansPlanPlanConfigScaleOutArrayInput` via:
//
//	GetDbInstancePlansPlanPlanConfigScaleOutArray{ GetDbInstancePlansPlanPlanConfigScaleOutArgs{...} }
type GetDbInstancePlansPlanPlanConfigScaleOutArrayInput interface {
	pulumi.Input

	ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutput() GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput
	ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutputWithContext(context.Context) GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput
}

type GetDbInstancePlansPlanPlanConfigScaleOutArray []GetDbInstancePlansPlanPlanConfigScaleOutInput

func (GetDbInstancePlansPlanPlanConfigScaleOutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigScaleOut)(nil)).Elem()
}

func (i GetDbInstancePlansPlanPlanConfigScaleOutArray) ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutput() GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput {
	return i.ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutputWithContext(context.Background())
}

func (i GetDbInstancePlansPlanPlanConfigScaleOutArray) ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleOutOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigScaleOutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleOut)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) ToGetDbInstancePlansPlanPlanConfigScaleOutOutput() GetDbInstancePlansPlanPlanConfigScaleOutOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) ToGetDbInstancePlansPlanPlanConfigScaleOutOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleOutOutput {
	return o
}

// The executed time of the Plan.
func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleOut) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

// The Cron Time of the plan.
func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) PlanCronTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleOut) string { return v.PlanCronTime }).(pulumi.StringOutput)
}

// The Status of the plan Task.
func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) PlanTaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleOut) string { return v.PlanTaskStatus }).(pulumi.StringOutput)
}

// The segment Node Num of the Plan.
func (o GetDbInstancePlansPlanPlanConfigScaleOutOutput) SegmentNodeNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstancePlansPlanPlanConfigScaleOut) string { return v.SegmentNodeNum }).(pulumi.StringOutput)
}

type GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput struct{ *pulumi.OutputState }

func (GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbInstancePlansPlanPlanConfigScaleOut)(nil)).Elem()
}

func (o GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput) ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutput() GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput) ToGetDbInstancePlansPlanPlanConfigScaleOutArrayOutputWithContext(ctx context.Context) GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput {
	return o
}

func (o GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput) Index(i pulumi.IntInput) GetDbInstancePlansPlanPlanConfigScaleOutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbInstancePlansPlanPlanConfigScaleOut {
		return vs[0].([]GetDbInstancePlansPlanPlanConfigScaleOut)[vs[1].(int)]
	}).(GetDbInstancePlansPlanPlanConfigScaleOutOutput)
}

type GetInstancesInstance struct {
	// Instance availability zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	ChargeType       string `pulumi:"chargeType"`
	// The connection string of the instance.
	ConnectionString string `pulumi:"connectionString"`
	// The number of CPU cores of the computing node. Unit: Core.
	CpuCores string `pulumi:"cpuCores"`
	// The time when the instance was created. The time is in the YYYY-MM-DDThh:mm:ssZ format, such as 2011-05-30T12:11:4Z.
	CreateTime   string `pulumi:"createTime"`
	CreationTime string `pulumi:"creationTime"`
	// The db instance category. Valid values: `HighAvailability`, `Basic`.
	DbInstanceCategory string `pulumi:"dbInstanceCategory"`
	// The db instance class.
	DbInstanceClass string `pulumi:"dbInstanceClass"`
	// The db instance id.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The db instance mode. Valid values: `StorageElastic`, `Serverless`, `Classic`.
	DbInstanceMode string `pulumi:"dbInstanceMode"`
	// The description of the instance.
	Description string `pulumi:"description"`
	// The database engine used by the instance.
	Engine string `pulumi:"engine"`
	// The version of the database engine used by the instance.
	EngineVersion string `pulumi:"engineVersion"`
	// The ID of the db Instance.
	Id string `pulumi:"id"`
	// The network type of the instance.
	InstanceNetworkType string `pulumi:"instanceNetworkType"`
	// The ip whitelist.
	IpWhitelists []GetInstancesInstanceIpWhitelist `pulumi:"ipWhitelists"`
	// The end time of the maintenance window for the instance.
	MaintainEndTime string `pulumi:"maintainEndTime"`
	// The start time of the maintenance window for the instance.
	MaintainStartTime string `pulumi:"maintainStartTime"`
	// The number of Master nodes. Valid values: 1 to 2. if it is not filled in, the default value is 1 Master node.
	MasterNodeNum string `pulumi:"masterNodeNum"`
	// The memory size of the compute node.
	MemorySize string `pulumi:"memorySize"`
	// The billing method of the instance. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType string `pulumi:"paymentType"`
	// Region ID the instance belongs to.
	RegionId string `pulumi:"regionId"`
	// Calculate the number of nodes. The value range of the high-availability version of the storage elastic mode is 4 to 512, and the value must be a multiple of 4. The value range of the basic version of the storage elastic mode is 2 to 512, and the value must be a multiple of 2. The-Serverless version has a value range of 2 to 512. The value must be a multiple of 2.
	SegNodeNum string `pulumi:"segNodeNum"`
	// The status of the instance. Valid values: `Creating`, `DBInstanceClassChanging`, `DBInstanceNetTypeChanging`, `Deleting`, `EngineVersionUpgrading`, `GuardDBInstanceCreating`, `GuardSwitching`, `Importing`, `ImportingFromOtherInstance`, `Rebooting`, `Restoring`, `Running`, `Transfering`, `TransferingToOtherInstance`.
	Status string `pulumi:"status"`
	// The storage capacity. Unit: GB. Value: `50` to `4000`.
	StorageSize int `pulumi:"storageSize"`
	// The type of disks. Valid values: `cloudEssd`, `cloudEfficiency`.
	StorageType string `pulumi:"storageType"`
	// The tags of the instance.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC。.
	VpcId string `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
	// The zone ID of the instance.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Instance availability zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	ChargeType       pulumi.StringInput `pulumi:"chargeType"`
	// The connection string of the instance.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The number of CPU cores of the computing node. Unit: Core.
	CpuCores pulumi.StringInput `pulumi:"cpuCores"`
	// The time when the instance was created. The time is in the YYYY-MM-DDThh:mm:ssZ format, such as 2011-05-30T12:11:4Z.
	CreateTime   pulumi.StringInput `pulumi:"createTime"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The db instance category. Valid values: `HighAvailability`, `Basic`.
	DbInstanceCategory pulumi.StringInput `pulumi:"dbInstanceCategory"`
	// The db instance class.
	DbInstanceClass pulumi.StringInput `pulumi:"dbInstanceClass"`
	// The db instance id.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// The db instance mode. Valid values: `StorageElastic`, `Serverless`, `Classic`.
	DbInstanceMode pulumi.StringInput `pulumi:"dbInstanceMode"`
	// The description of the instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The database engine used by the instance.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The version of the database engine used by the instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The ID of the db Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The network type of the instance.
	InstanceNetworkType pulumi.StringInput `pulumi:"instanceNetworkType"`
	// The ip whitelist.
	IpWhitelists GetInstancesInstanceIpWhitelistArrayInput `pulumi:"ipWhitelists"`
	// The end time of the maintenance window for the instance.
	MaintainEndTime pulumi.StringInput `pulumi:"maintainEndTime"`
	// The start time of the maintenance window for the instance.
	MaintainStartTime pulumi.StringInput `pulumi:"maintainStartTime"`
	// The number of Master nodes. Valid values: 1 to 2. if it is not filled in, the default value is 1 Master node.
	MasterNodeNum pulumi.StringInput `pulumi:"masterNodeNum"`
	// The memory size of the compute node.
	MemorySize pulumi.StringInput `pulumi:"memorySize"`
	// The billing method of the instance. Valid values: `Subscription`, `PayAsYouGo`.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// Region ID the instance belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Calculate the number of nodes. The value range of the high-availability version of the storage elastic mode is 4 to 512, and the value must be a multiple of 4. The value range of the basic version of the storage elastic mode is 2 to 512, and the value must be a multiple of 2. The-Serverless version has a value range of 2 to 512. The value must be a multiple of 2.
	SegNodeNum pulumi.StringInput `pulumi:"segNodeNum"`
	// The status of the instance. Valid values: `Creating`, `DBInstanceClassChanging`, `DBInstanceNetTypeChanging`, `Deleting`, `EngineVersionUpgrading`, `GuardDBInstanceCreating`, `GuardSwitching`, `Importing`, `ImportingFromOtherInstance`, `Rebooting`, `Restoring`, `Running`, `Transfering`, `TransferingToOtherInstance`.
	Status pulumi.StringInput `pulumi:"status"`
	// The storage capacity. Unit: GB. Value: `50` to `4000`.
	StorageSize pulumi.IntInput `pulumi:"storageSize"`
	// The type of disks. Valid values: `cloudEssd`, `cloudEfficiency`.
	StorageType pulumi.StringInput `pulumi:"storageType"`
	// The tags of the instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The ID of the VPC。.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch id.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The zone ID of the instance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Instance availability zone.
func (o GetInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The connection string of the instance.
func (o GetInstancesInstanceOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The number of CPU cores of the computing node. Unit: Core.
func (o GetInstancesInstanceOutput) CpuCores() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CpuCores }).(pulumi.StringOutput)
}

// The time when the instance was created. The time is in the YYYY-MM-DDThh:mm:ssZ format, such as 2011-05-30T12:11:4Z.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The db instance category. Valid values: `HighAvailability`, `Basic`.
func (o GetInstancesInstanceOutput) DbInstanceCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbInstanceCategory }).(pulumi.StringOutput)
}

// The db instance class.
func (o GetInstancesInstanceOutput) DbInstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbInstanceClass }).(pulumi.StringOutput)
}

// The db instance id.
func (o GetInstancesInstanceOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The db instance mode. Valid values: `StorageElastic`, `Serverless`, `Classic`.
func (o GetInstancesInstanceOutput) DbInstanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbInstanceMode }).(pulumi.StringOutput)
}

// The description of the instance.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// The database engine used by the instance.
func (o GetInstancesInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Engine }).(pulumi.StringOutput)
}

// The version of the database engine used by the instance.
func (o GetInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The ID of the db Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The network type of the instance.
func (o GetInstancesInstanceOutput) InstanceNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceNetworkType }).(pulumi.StringOutput)
}

// The ip whitelist.
func (o GetInstancesInstanceOutput) IpWhitelists() GetInstancesInstanceIpWhitelistArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceIpWhitelist { return v.IpWhitelists }).(GetInstancesInstanceIpWhitelistArrayOutput)
}

// The end time of the maintenance window for the instance.
func (o GetInstancesInstanceOutput) MaintainEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MaintainEndTime }).(pulumi.StringOutput)
}

// The start time of the maintenance window for the instance.
func (o GetInstancesInstanceOutput) MaintainStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MaintainStartTime }).(pulumi.StringOutput)
}

// The number of Master nodes. Valid values: 1 to 2. if it is not filled in, the default value is 1 Master node.
func (o GetInstancesInstanceOutput) MasterNodeNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MasterNodeNum }).(pulumi.StringOutput)
}

// The memory size of the compute node.
func (o GetInstancesInstanceOutput) MemorySize() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MemorySize }).(pulumi.StringOutput)
}

// The billing method of the instance. Valid values: `Subscription`, `PayAsYouGo`.
func (o GetInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// Region ID the instance belongs to.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// Calculate the number of nodes. The value range of the high-availability version of the storage elastic mode is 4 to 512, and the value must be a multiple of 4. The value range of the basic version of the storage elastic mode is 2 to 512, and the value must be a multiple of 2. The-Serverless version has a value range of 2 to 512. The value must be a multiple of 2.
func (o GetInstancesInstanceOutput) SegNodeNum() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SegNodeNum }).(pulumi.StringOutput)
}

// The status of the instance. Valid values: `Creating`, `DBInstanceClassChanging`, `DBInstanceNetTypeChanging`, `Deleting`, `EngineVersionUpgrading`, `GuardDBInstanceCreating`, `GuardSwitching`, `Importing`, `ImportingFromOtherInstance`, `Rebooting`, `Restoring`, `Running`, `Transfering`, `TransferingToOtherInstance`.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The storage capacity. Unit: GB. Value: `50` to `4000`.
func (o GetInstancesInstanceOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.StorageSize }).(pulumi.IntOutput)
}

// The type of disks. Valid values: `cloudEssd`, `cloudEfficiency`.
func (o GetInstancesInstanceOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.StorageType }).(pulumi.StringOutput)
}

// The tags of the instance.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the VPC。.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch id.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The zone ID of the instance.
func (o GetInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceIpWhitelist struct {
	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	IpGroupAttribute string `pulumi:"ipGroupAttribute"`
	// IP whitelist group name
	IpGroupName string `pulumi:"ipGroupName"`
	// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
	SecurityIpList string `pulumi:"securityIpList"`
}

// GetInstancesInstanceIpWhitelistInput is an input type that accepts GetInstancesInstanceIpWhitelistArgs and GetInstancesInstanceIpWhitelistOutput values.
// You can construct a concrete instance of `GetInstancesInstanceIpWhitelistInput` via:
//
//	GetInstancesInstanceIpWhitelistArgs{...}
type GetInstancesInstanceIpWhitelistInput interface {
	pulumi.Input

	ToGetInstancesInstanceIpWhitelistOutput() GetInstancesInstanceIpWhitelistOutput
	ToGetInstancesInstanceIpWhitelistOutputWithContext(context.Context) GetInstancesInstanceIpWhitelistOutput
}

type GetInstancesInstanceIpWhitelistArgs struct {
	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	IpGroupAttribute pulumi.StringInput `pulumi:"ipGroupAttribute"`
	// IP whitelist group name
	IpGroupName pulumi.StringInput `pulumi:"ipGroupName"`
	// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
	SecurityIpList pulumi.StringInput `pulumi:"securityIpList"`
}

func (GetInstancesInstanceIpWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceIpWhitelist)(nil)).Elem()
}

func (i GetInstancesInstanceIpWhitelistArgs) ToGetInstancesInstanceIpWhitelistOutput() GetInstancesInstanceIpWhitelistOutput {
	return i.ToGetInstancesInstanceIpWhitelistOutputWithContext(context.Background())
}

func (i GetInstancesInstanceIpWhitelistArgs) ToGetInstancesInstanceIpWhitelistOutputWithContext(ctx context.Context) GetInstancesInstanceIpWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceIpWhitelistOutput)
}

// GetInstancesInstanceIpWhitelistArrayInput is an input type that accepts GetInstancesInstanceIpWhitelistArray and GetInstancesInstanceIpWhitelistArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceIpWhitelistArrayInput` via:
//
//	GetInstancesInstanceIpWhitelistArray{ GetInstancesInstanceIpWhitelistArgs{...} }
type GetInstancesInstanceIpWhitelistArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceIpWhitelistArrayOutput() GetInstancesInstanceIpWhitelistArrayOutput
	ToGetInstancesInstanceIpWhitelistArrayOutputWithContext(context.Context) GetInstancesInstanceIpWhitelistArrayOutput
}

type GetInstancesInstanceIpWhitelistArray []GetInstancesInstanceIpWhitelistInput

func (GetInstancesInstanceIpWhitelistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceIpWhitelist)(nil)).Elem()
}

func (i GetInstancesInstanceIpWhitelistArray) ToGetInstancesInstanceIpWhitelistArrayOutput() GetInstancesInstanceIpWhitelistArrayOutput {
	return i.ToGetInstancesInstanceIpWhitelistArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceIpWhitelistArray) ToGetInstancesInstanceIpWhitelistArrayOutputWithContext(ctx context.Context) GetInstancesInstanceIpWhitelistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceIpWhitelistArrayOutput)
}

type GetInstancesInstanceIpWhitelistOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceIpWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceIpWhitelist)(nil)).Elem()
}

func (o GetInstancesInstanceIpWhitelistOutput) ToGetInstancesInstanceIpWhitelistOutput() GetInstancesInstanceIpWhitelistOutput {
	return o
}

func (o GetInstancesInstanceIpWhitelistOutput) ToGetInstancesInstanceIpWhitelistOutputWithContext(ctx context.Context) GetInstancesInstanceIpWhitelistOutput {
	return o
}

// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
func (o GetInstancesInstanceIpWhitelistOutput) IpGroupAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceIpWhitelist) string { return v.IpGroupAttribute }).(pulumi.StringOutput)
}

// IP whitelist group name
func (o GetInstancesInstanceIpWhitelistOutput) IpGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceIpWhitelist) string { return v.IpGroupName }).(pulumi.StringOutput)
}

// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]). System default to `["127.0.0.1"]`.
func (o GetInstancesInstanceIpWhitelistOutput) SecurityIpList() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceIpWhitelist) string { return v.SecurityIpList }).(pulumi.StringOutput)
}

type GetInstancesInstanceIpWhitelistArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceIpWhitelistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceIpWhitelist)(nil)).Elem()
}

func (o GetInstancesInstanceIpWhitelistArrayOutput) ToGetInstancesInstanceIpWhitelistArrayOutput() GetInstancesInstanceIpWhitelistArrayOutput {
	return o
}

func (o GetInstancesInstanceIpWhitelistArrayOutput) ToGetInstancesInstanceIpWhitelistArrayOutputWithContext(ctx context.Context) GetInstancesInstanceIpWhitelistArrayOutput {
	return o
}

func (o GetInstancesInstanceIpWhitelistArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceIpWhitelistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceIpWhitelist {
		return vs[0].([]GetInstancesInstanceIpWhitelist)[vs[1].(int)]
	}).(GetInstancesInstanceIpWhitelistOutput)
}

type GetLogBackupsLogbackup struct {
	// The ID of the Master node of the instance.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The first ID of the resource
	LogBackupId string `pulumi:"logBackupId"`
	// Log file name (OSS path).
	LogFileName string `pulumi:"logFileName"`
	// Size of the backup log file. Unit: Byte.
	LogFileSize int `pulumi:"logFileSize"`
	// The log timestamp.
	LogTime string `pulumi:"logTime"`
	// Total number of records.
	RecordTotal int `pulumi:"recordTotal"`
	// The node name.
	SegmentName string `pulumi:"segmentName"`
}

// GetLogBackupsLogbackupInput is an input type that accepts GetLogBackupsLogbackupArgs and GetLogBackupsLogbackupOutput values.
// You can construct a concrete instance of `GetLogBackupsLogbackupInput` via:
//
//	GetLogBackupsLogbackupArgs{...}
type GetLogBackupsLogbackupInput interface {
	pulumi.Input

	ToGetLogBackupsLogbackupOutput() GetLogBackupsLogbackupOutput
	ToGetLogBackupsLogbackupOutputWithContext(context.Context) GetLogBackupsLogbackupOutput
}

type GetLogBackupsLogbackupArgs struct {
	// The ID of the Master node of the instance.
	DbInstanceId pulumi.StringInput `pulumi:"dbInstanceId"`
	// The first ID of the resource
	LogBackupId pulumi.StringInput `pulumi:"logBackupId"`
	// Log file name (OSS path).
	LogFileName pulumi.StringInput `pulumi:"logFileName"`
	// Size of the backup log file. Unit: Byte.
	LogFileSize pulumi.IntInput `pulumi:"logFileSize"`
	// The log timestamp.
	LogTime pulumi.StringInput `pulumi:"logTime"`
	// Total number of records.
	RecordTotal pulumi.IntInput `pulumi:"recordTotal"`
	// The node name.
	SegmentName pulumi.StringInput `pulumi:"segmentName"`
}

func (GetLogBackupsLogbackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogBackupsLogbackup)(nil)).Elem()
}

func (i GetLogBackupsLogbackupArgs) ToGetLogBackupsLogbackupOutput() GetLogBackupsLogbackupOutput {
	return i.ToGetLogBackupsLogbackupOutputWithContext(context.Background())
}

func (i GetLogBackupsLogbackupArgs) ToGetLogBackupsLogbackupOutputWithContext(ctx context.Context) GetLogBackupsLogbackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogBackupsLogbackupOutput)
}

// GetLogBackupsLogbackupArrayInput is an input type that accepts GetLogBackupsLogbackupArray and GetLogBackupsLogbackupArrayOutput values.
// You can construct a concrete instance of `GetLogBackupsLogbackupArrayInput` via:
//
//	GetLogBackupsLogbackupArray{ GetLogBackupsLogbackupArgs{...} }
type GetLogBackupsLogbackupArrayInput interface {
	pulumi.Input

	ToGetLogBackupsLogbackupArrayOutput() GetLogBackupsLogbackupArrayOutput
	ToGetLogBackupsLogbackupArrayOutputWithContext(context.Context) GetLogBackupsLogbackupArrayOutput
}

type GetLogBackupsLogbackupArray []GetLogBackupsLogbackupInput

func (GetLogBackupsLogbackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogBackupsLogbackup)(nil)).Elem()
}

func (i GetLogBackupsLogbackupArray) ToGetLogBackupsLogbackupArrayOutput() GetLogBackupsLogbackupArrayOutput {
	return i.ToGetLogBackupsLogbackupArrayOutputWithContext(context.Background())
}

func (i GetLogBackupsLogbackupArray) ToGetLogBackupsLogbackupArrayOutputWithContext(ctx context.Context) GetLogBackupsLogbackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogBackupsLogbackupArrayOutput)
}

type GetLogBackupsLogbackupOutput struct{ *pulumi.OutputState }

func (GetLogBackupsLogbackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogBackupsLogbackup)(nil)).Elem()
}

func (o GetLogBackupsLogbackupOutput) ToGetLogBackupsLogbackupOutput() GetLogBackupsLogbackupOutput {
	return o
}

func (o GetLogBackupsLogbackupOutput) ToGetLogBackupsLogbackupOutputWithContext(ctx context.Context) GetLogBackupsLogbackupOutput {
	return o
}

// The ID of the Master node of the instance.
func (o GetLogBackupsLogbackupOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) string { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The first ID of the resource
func (o GetLogBackupsLogbackupOutput) LogBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) string { return v.LogBackupId }).(pulumi.StringOutput)
}

// Log file name (OSS path).
func (o GetLogBackupsLogbackupOutput) LogFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) string { return v.LogFileName }).(pulumi.StringOutput)
}

// Size of the backup log file. Unit: Byte.
func (o GetLogBackupsLogbackupOutput) LogFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) int { return v.LogFileSize }).(pulumi.IntOutput)
}

// The log timestamp.
func (o GetLogBackupsLogbackupOutput) LogTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) string { return v.LogTime }).(pulumi.StringOutput)
}

// Total number of records.
func (o GetLogBackupsLogbackupOutput) RecordTotal() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) int { return v.RecordTotal }).(pulumi.IntOutput)
}

// The node name.
func (o GetLogBackupsLogbackupOutput) SegmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogBackupsLogbackup) string { return v.SegmentName }).(pulumi.StringOutput)
}

type GetLogBackupsLogbackupArrayOutput struct{ *pulumi.OutputState }

func (GetLogBackupsLogbackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogBackupsLogbackup)(nil)).Elem()
}

func (o GetLogBackupsLogbackupArrayOutput) ToGetLogBackupsLogbackupArrayOutput() GetLogBackupsLogbackupArrayOutput {
	return o
}

func (o GetLogBackupsLogbackupArrayOutput) ToGetLogBackupsLogbackupArrayOutputWithContext(ctx context.Context) GetLogBackupsLogbackupArrayOutput {
	return o
}

func (o GetLogBackupsLogbackupArrayOutput) Index(i pulumi.IntInput) GetLogBackupsLogbackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogBackupsLogbackup {
		return vs[0].([]GetLogBackupsLogbackup)[vs[1].(int)]
	}).(GetLogBackupsLogbackupOutput)
}

type GetZonesZone struct {
	// ID of the zone.
	Id string `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds []string `pulumi:"multiZoneIds"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// ID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds pulumi.StringArrayInput `pulumi:"multiZoneIds"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// ID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// A list of zone ids in which the multi zone.
func (o GetZonesZoneOutput) MultiZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.MultiZoneIds }).(pulumi.StringArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigInput)(nil)).Elem(), DbInstancePlanPlanConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigArrayInput)(nil)).Elem(), DbInstancePlanPlanConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigPauseInput)(nil)).Elem(), DbInstancePlanPlanConfigPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigPausePtrInput)(nil)).Elem(), DbInstancePlanPlanConfigPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigResumeInput)(nil)).Elem(), DbInstancePlanPlanConfigResumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigResumePtrInput)(nil)).Elem(), DbInstancePlanPlanConfigResumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleDownInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleDownArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleDownPtrInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleDownArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleInInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleInPtrInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleOutInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleOutPtrInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleUpInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleUpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstancePlanPlanConfigScaleUpPtrInput)(nil)).Elem(), DbInstancePlanPlanConfigScaleUpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIpWhitelistInput)(nil)).Elem(), InstanceIpWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIpWhitelistArrayInput)(nil)).Elem(), InstanceIpWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParameterInput)(nil)).Elem(), InstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParameterArrayInput)(nil)).Elem(), InstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataBackupsBackupInput)(nil)).Elem(), GetDataBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataBackupsBackupArrayInput)(nil)).Elem(), GetDataBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanInput)(nil)).Elem(), GetDbInstancePlansPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanArrayInput)(nil)).Elem(), GetDbInstancePlansPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigArrayInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigPauseInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigPauseArrayInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigPauseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigResumeInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigResumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigResumeArrayInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigResumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleInInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigScaleInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleInArrayInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigScaleInArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleOutInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigScaleOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbInstancePlansPlanPlanConfigScaleOutArrayInput)(nil)).Elem(), GetDbInstancePlansPlanPlanConfigScaleOutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceIpWhitelistInput)(nil)).Elem(), GetInstancesInstanceIpWhitelistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceIpWhitelistArrayInput)(nil)).Elem(), GetInstancesInstanceIpWhitelistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogBackupsLogbackupInput)(nil)).Elem(), GetLogBackupsLogbackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogBackupsLogbackupArrayInput)(nil)).Elem(), GetLogBackupsLogbackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigArrayOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigPauseOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigPausePtrOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigResumeOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigResumePtrOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleDownOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleDownPtrOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleInOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleInPtrOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleOutOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleOutPtrOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleUpOutput{})
	pulumi.RegisterOutputType(DbInstancePlanPlanConfigScaleUpPtrOutput{})
	pulumi.RegisterOutputType(InstanceIpWhitelistOutput{})
	pulumi.RegisterOutputType(InstanceIpWhitelistArrayOutput{})
	pulumi.RegisterOutputType(InstanceParameterOutput{})
	pulumi.RegisterOutputType(InstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetDataBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetDataBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigPauseOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigPauseArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigResumeOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigResumeArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigScaleInOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigScaleInArrayOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigScaleOutOutput{})
	pulumi.RegisterOutputType(GetDbInstancePlansPlanPlanConfigScaleOutArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceIpWhitelistOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceIpWhitelistArrayOutput{})
	pulumi.RegisterOutputType(GetLogBackupsLogbackupOutput{})
	pulumi.RegisterOutputType(GetLogBackupsLogbackupArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
