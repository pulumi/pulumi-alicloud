// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package actiontrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides a list of ALIKAFKA Consumer Groups in an Alibaba Cloud account according to the specified filters.
//
// > **NOTE:** Available in 1.56.0+
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/actiontrail"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		consumerGroupsDs, err := actiontrail.GetConsumerGroups(ctx, &actiontrail.GetConsumerGroupsArgs{
// 			ConsumerIdRegex: pulumi.StringRef("CID-alikafkaGroupDatasourceName"),
// 			InstanceId:      "xxx",
// 			OutputFile:      pulumi.StringRef("consumerGroups.txt"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("firstGroupName", consumerGroupsDs.ConsumerIds[0])
// 		return nil
// 	})
// }
// ```
func GetConsumerGroups(ctx *pulumi.Context, args *GetConsumerGroupsArgs, opts ...pulumi.InvokeOption) (*GetConsumerGroupsResult, error) {
	var rv GetConsumerGroupsResult
	err := ctx.Invoke("alicloud:actiontrail/getConsumerGroups:getConsumerGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConsumerGroups.
type GetConsumerGroupsArgs struct {
	// A regex string to filter results by the consumer group id.
	ConsumerIdRegex *string `pulumi:"consumerIdRegex"`
	// A list of ALIKAFKA Consumer Groups IDs, It is formatted to `<instance_id>:<consumer_id>`.
	Ids []string `pulumi:"ids"`
	// ID of the ALIKAFKA Instance that owns the consumer groups.
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getConsumerGroups.
type GetConsumerGroupsResult struct {
	ConsumerIdRegex *string  `pulumi:"consumerIdRegex"`
	ConsumerIds     []string `pulumi:"consumerIds"`
	// A list of consumer group. Each element contains the following attributes:
	Groups []GetConsumerGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The instanceId of the instance.
	InstanceId string `pulumi:"instanceId"`
	// A list of consumer group names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
}

func GetConsumerGroupsOutput(ctx *pulumi.Context, args GetConsumerGroupsOutputArgs, opts ...pulumi.InvokeOption) GetConsumerGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConsumerGroupsResult, error) {
			args := v.(GetConsumerGroupsArgs)
			r, err := GetConsumerGroups(ctx, &args, opts...)
			var s GetConsumerGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConsumerGroupsResultOutput)
}

// A collection of arguments for invoking getConsumerGroups.
type GetConsumerGroupsOutputArgs struct {
	// A regex string to filter results by the consumer group id.
	ConsumerIdRegex pulumi.StringPtrInput `pulumi:"consumerIdRegex"`
	// A list of ALIKAFKA Consumer Groups IDs, It is formatted to `<instance_id>:<consumer_id>`.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// ID of the ALIKAFKA Instance that owns the consumer groups.
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetConsumerGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getConsumerGroups.
type GetConsumerGroupsResultOutput struct{ *pulumi.OutputState }

func (GetConsumerGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerGroupsResult)(nil)).Elem()
}

func (o GetConsumerGroupsResultOutput) ToGetConsumerGroupsResultOutput() GetConsumerGroupsResultOutput {
	return o
}

func (o GetConsumerGroupsResultOutput) ToGetConsumerGroupsResultOutputWithContext(ctx context.Context) GetConsumerGroupsResultOutput {
	return o
}

func (o GetConsumerGroupsResultOutput) ConsumerIdRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) *string { return v.ConsumerIdRegex }).(pulumi.StringPtrOutput)
}

func (o GetConsumerGroupsResultOutput) ConsumerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) []string { return v.ConsumerIds }).(pulumi.StringArrayOutput)
}

// A list of consumer group. Each element contains the following attributes:
func (o GetConsumerGroupsResultOutput) Groups() GetConsumerGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) []GetConsumerGroupsGroup { return v.Groups }).(GetConsumerGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConsumerGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetConsumerGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The instanceId of the instance.
func (o GetConsumerGroupsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// A list of consumer group names.
func (o GetConsumerGroupsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetConsumerGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsumerGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConsumerGroupsResultOutput{})
}
