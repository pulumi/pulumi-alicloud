// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package actiontrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetConsumerGroupsGroup struct {
	// The name of the consumer group.
	ConsumerId string `pulumi:"consumerId"`
	// The ID of the consumer group, It is formatted to `<instance_id>:<consumer_id>`.
	Id string `pulumi:"id"`
	// ID of the ALIKAFKA Instance that owns the consumer groups.
	InstanceId string `pulumi:"instanceId"`
	// The remark of the consumer group.
	Remark string `pulumi:"remark"`
	// A mapping of tags to assign to the consumer group.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetConsumerGroupsGroupInput is an input type that accepts GetConsumerGroupsGroupArgs and GetConsumerGroupsGroupOutput values.
// You can construct a concrete instance of `GetConsumerGroupsGroupInput` via:
//
//          GetConsumerGroupsGroupArgs{...}
type GetConsumerGroupsGroupInput interface {
	pulumi.Input

	ToGetConsumerGroupsGroupOutput() GetConsumerGroupsGroupOutput
	ToGetConsumerGroupsGroupOutputWithContext(context.Context) GetConsumerGroupsGroupOutput
}

type GetConsumerGroupsGroupArgs struct {
	// The name of the consumer group.
	ConsumerId pulumi.StringInput `pulumi:"consumerId"`
	// The ID of the consumer group, It is formatted to `<instance_id>:<consumer_id>`.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the ALIKAFKA Instance that owns the consumer groups.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The remark of the consumer group.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A mapping of tags to assign to the consumer group.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetConsumerGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerGroupsGroup)(nil)).Elem()
}

func (i GetConsumerGroupsGroupArgs) ToGetConsumerGroupsGroupOutput() GetConsumerGroupsGroupOutput {
	return i.ToGetConsumerGroupsGroupOutputWithContext(context.Background())
}

func (i GetConsumerGroupsGroupArgs) ToGetConsumerGroupsGroupOutputWithContext(ctx context.Context) GetConsumerGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConsumerGroupsGroupOutput)
}

// GetConsumerGroupsGroupArrayInput is an input type that accepts GetConsumerGroupsGroupArray and GetConsumerGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetConsumerGroupsGroupArrayInput` via:
//
//          GetConsumerGroupsGroupArray{ GetConsumerGroupsGroupArgs{...} }
type GetConsumerGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetConsumerGroupsGroupArrayOutput() GetConsumerGroupsGroupArrayOutput
	ToGetConsumerGroupsGroupArrayOutputWithContext(context.Context) GetConsumerGroupsGroupArrayOutput
}

type GetConsumerGroupsGroupArray []GetConsumerGroupsGroupInput

func (GetConsumerGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConsumerGroupsGroup)(nil)).Elem()
}

func (i GetConsumerGroupsGroupArray) ToGetConsumerGroupsGroupArrayOutput() GetConsumerGroupsGroupArrayOutput {
	return i.ToGetConsumerGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetConsumerGroupsGroupArray) ToGetConsumerGroupsGroupArrayOutputWithContext(ctx context.Context) GetConsumerGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConsumerGroupsGroupArrayOutput)
}

type GetConsumerGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetConsumerGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumerGroupsGroup)(nil)).Elem()
}

func (o GetConsumerGroupsGroupOutput) ToGetConsumerGroupsGroupOutput() GetConsumerGroupsGroupOutput {
	return o
}

func (o GetConsumerGroupsGroupOutput) ToGetConsumerGroupsGroupOutputWithContext(ctx context.Context) GetConsumerGroupsGroupOutput {
	return o
}

// The name of the consumer group.
func (o GetConsumerGroupsGroupOutput) ConsumerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsGroup) string { return v.ConsumerId }).(pulumi.StringOutput)
}

// The ID of the consumer group, It is formatted to `<instance_id>:<consumer_id>`.
func (o GetConsumerGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the ALIKAFKA Instance that owns the consumer groups.
func (o GetConsumerGroupsGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsGroup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The remark of the consumer group.
func (o GetConsumerGroupsGroupOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumerGroupsGroup) string { return v.Remark }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the consumer group.
func (o GetConsumerGroupsGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetConsumerGroupsGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetConsumerGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetConsumerGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConsumerGroupsGroup)(nil)).Elem()
}

func (o GetConsumerGroupsGroupArrayOutput) ToGetConsumerGroupsGroupArrayOutput() GetConsumerGroupsGroupArrayOutput {
	return o
}

func (o GetConsumerGroupsGroupArrayOutput) ToGetConsumerGroupsGroupArrayOutputWithContext(ctx context.Context) GetConsumerGroupsGroupArrayOutput {
	return o
}

func (o GetConsumerGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetConsumerGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConsumerGroupsGroup {
		return vs[0].([]GetConsumerGroupsGroup)[vs[1].(int)]
	}).(GetConsumerGroupsGroupOutput)
}

type GetHistoryDeliveryJobsJob struct {
	// The time when the task was created.
	CreateTime string `pulumi:"createTime"`
	// The time when the task ended.
	EndTime              string `pulumi:"endTime"`
	HistoryDeliveryJobId string `pulumi:"historyDeliveryJobId"`
	// The home region of the trail.
	HomeRegion string `pulumi:"homeRegion"`
	// The ID of the History Delivery Job.
	Id string `pulumi:"id"`
	// Detail status of delivery job.
	JobStatuses []GetHistoryDeliveryJobsJobJobStatus `pulumi:"jobStatuses"`
	// The time when the task started.
	StartTime string `pulumi:"startTime"`
	// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
	Status int `pulumi:"status"`
	// The name of the trail.
	TrailName string `pulumi:"trailName"`
	// The time when the task was updated.
	UpdatedTime string `pulumi:"updatedTime"`
}

// GetHistoryDeliveryJobsJobInput is an input type that accepts GetHistoryDeliveryJobsJobArgs and GetHistoryDeliveryJobsJobOutput values.
// You can construct a concrete instance of `GetHistoryDeliveryJobsJobInput` via:
//
//          GetHistoryDeliveryJobsJobArgs{...}
type GetHistoryDeliveryJobsJobInput interface {
	pulumi.Input

	ToGetHistoryDeliveryJobsJobOutput() GetHistoryDeliveryJobsJobOutput
	ToGetHistoryDeliveryJobsJobOutputWithContext(context.Context) GetHistoryDeliveryJobsJobOutput
}

type GetHistoryDeliveryJobsJobArgs struct {
	// The time when the task was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The time when the task ended.
	EndTime              pulumi.StringInput `pulumi:"endTime"`
	HistoryDeliveryJobId pulumi.StringInput `pulumi:"historyDeliveryJobId"`
	// The home region of the trail.
	HomeRegion pulumi.StringInput `pulumi:"homeRegion"`
	// The ID of the History Delivery Job.
	Id pulumi.StringInput `pulumi:"id"`
	// Detail status of delivery job.
	JobStatuses GetHistoryDeliveryJobsJobJobStatusArrayInput `pulumi:"jobStatuses"`
	// The time when the task started.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
	Status pulumi.IntInput `pulumi:"status"`
	// The name of the trail.
	TrailName pulumi.StringInput `pulumi:"trailName"`
	// The time when the task was updated.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (GetHistoryDeliveryJobsJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHistoryDeliveryJobsJob)(nil)).Elem()
}

func (i GetHistoryDeliveryJobsJobArgs) ToGetHistoryDeliveryJobsJobOutput() GetHistoryDeliveryJobsJobOutput {
	return i.ToGetHistoryDeliveryJobsJobOutputWithContext(context.Background())
}

func (i GetHistoryDeliveryJobsJobArgs) ToGetHistoryDeliveryJobsJobOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHistoryDeliveryJobsJobOutput)
}

// GetHistoryDeliveryJobsJobArrayInput is an input type that accepts GetHistoryDeliveryJobsJobArray and GetHistoryDeliveryJobsJobArrayOutput values.
// You can construct a concrete instance of `GetHistoryDeliveryJobsJobArrayInput` via:
//
//          GetHistoryDeliveryJobsJobArray{ GetHistoryDeliveryJobsJobArgs{...} }
type GetHistoryDeliveryJobsJobArrayInput interface {
	pulumi.Input

	ToGetHistoryDeliveryJobsJobArrayOutput() GetHistoryDeliveryJobsJobArrayOutput
	ToGetHistoryDeliveryJobsJobArrayOutputWithContext(context.Context) GetHistoryDeliveryJobsJobArrayOutput
}

type GetHistoryDeliveryJobsJobArray []GetHistoryDeliveryJobsJobInput

func (GetHistoryDeliveryJobsJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHistoryDeliveryJobsJob)(nil)).Elem()
}

func (i GetHistoryDeliveryJobsJobArray) ToGetHistoryDeliveryJobsJobArrayOutput() GetHistoryDeliveryJobsJobArrayOutput {
	return i.ToGetHistoryDeliveryJobsJobArrayOutputWithContext(context.Background())
}

func (i GetHistoryDeliveryJobsJobArray) ToGetHistoryDeliveryJobsJobArrayOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHistoryDeliveryJobsJobArrayOutput)
}

type GetHistoryDeliveryJobsJobOutput struct{ *pulumi.OutputState }

func (GetHistoryDeliveryJobsJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHistoryDeliveryJobsJob)(nil)).Elem()
}

func (o GetHistoryDeliveryJobsJobOutput) ToGetHistoryDeliveryJobsJobOutput() GetHistoryDeliveryJobsJobOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobOutput) ToGetHistoryDeliveryJobsJobOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobOutput {
	return o
}

// The time when the task was created.
func (o GetHistoryDeliveryJobsJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The time when the task ended.
func (o GetHistoryDeliveryJobsJobOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetHistoryDeliveryJobsJobOutput) HistoryDeliveryJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.HistoryDeliveryJobId }).(pulumi.StringOutput)
}

// The home region of the trail.
func (o GetHistoryDeliveryJobsJobOutput) HomeRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.HomeRegion }).(pulumi.StringOutput)
}

// The ID of the History Delivery Job.
func (o GetHistoryDeliveryJobsJobOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.Id }).(pulumi.StringOutput)
}

// Detail status of delivery job.
func (o GetHistoryDeliveryJobsJobOutput) JobStatuses() GetHistoryDeliveryJobsJobJobStatusArrayOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) []GetHistoryDeliveryJobsJobJobStatus { return v.JobStatuses }).(GetHistoryDeliveryJobsJobJobStatusArrayOutput)
}

// The time when the task started.
func (o GetHistoryDeliveryJobsJobOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.StartTime }).(pulumi.StringOutput)
}

// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
func (o GetHistoryDeliveryJobsJobOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) int { return v.Status }).(pulumi.IntOutput)
}

// The name of the trail.
func (o GetHistoryDeliveryJobsJobOutput) TrailName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.TrailName }).(pulumi.StringOutput)
}

// The time when the task was updated.
func (o GetHistoryDeliveryJobsJobOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJob) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type GetHistoryDeliveryJobsJobArrayOutput struct{ *pulumi.OutputState }

func (GetHistoryDeliveryJobsJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHistoryDeliveryJobsJob)(nil)).Elem()
}

func (o GetHistoryDeliveryJobsJobArrayOutput) ToGetHistoryDeliveryJobsJobArrayOutput() GetHistoryDeliveryJobsJobArrayOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobArrayOutput) ToGetHistoryDeliveryJobsJobArrayOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobArrayOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobArrayOutput) Index(i pulumi.IntInput) GetHistoryDeliveryJobsJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHistoryDeliveryJobsJob {
		return vs[0].([]GetHistoryDeliveryJobsJob)[vs[1].(int)]
	}).(GetHistoryDeliveryJobsJobOutput)
}

type GetHistoryDeliveryJobsJobJobStatus struct {
	// The region of the delivery job.
	Region string `pulumi:"region"`
	// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
	Status int `pulumi:"status"`
}

// GetHistoryDeliveryJobsJobJobStatusInput is an input type that accepts GetHistoryDeliveryJobsJobJobStatusArgs and GetHistoryDeliveryJobsJobJobStatusOutput values.
// You can construct a concrete instance of `GetHistoryDeliveryJobsJobJobStatusInput` via:
//
//          GetHistoryDeliveryJobsJobJobStatusArgs{...}
type GetHistoryDeliveryJobsJobJobStatusInput interface {
	pulumi.Input

	ToGetHistoryDeliveryJobsJobJobStatusOutput() GetHistoryDeliveryJobsJobJobStatusOutput
	ToGetHistoryDeliveryJobsJobJobStatusOutputWithContext(context.Context) GetHistoryDeliveryJobsJobJobStatusOutput
}

type GetHistoryDeliveryJobsJobJobStatusArgs struct {
	// The region of the delivery job.
	Region pulumi.StringInput `pulumi:"region"`
	// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
	Status pulumi.IntInput `pulumi:"status"`
}

func (GetHistoryDeliveryJobsJobJobStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHistoryDeliveryJobsJobJobStatus)(nil)).Elem()
}

func (i GetHistoryDeliveryJobsJobJobStatusArgs) ToGetHistoryDeliveryJobsJobJobStatusOutput() GetHistoryDeliveryJobsJobJobStatusOutput {
	return i.ToGetHistoryDeliveryJobsJobJobStatusOutputWithContext(context.Background())
}

func (i GetHistoryDeliveryJobsJobJobStatusArgs) ToGetHistoryDeliveryJobsJobJobStatusOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobJobStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHistoryDeliveryJobsJobJobStatusOutput)
}

// GetHistoryDeliveryJobsJobJobStatusArrayInput is an input type that accepts GetHistoryDeliveryJobsJobJobStatusArray and GetHistoryDeliveryJobsJobJobStatusArrayOutput values.
// You can construct a concrete instance of `GetHistoryDeliveryJobsJobJobStatusArrayInput` via:
//
//          GetHistoryDeliveryJobsJobJobStatusArray{ GetHistoryDeliveryJobsJobJobStatusArgs{...} }
type GetHistoryDeliveryJobsJobJobStatusArrayInput interface {
	pulumi.Input

	ToGetHistoryDeliveryJobsJobJobStatusArrayOutput() GetHistoryDeliveryJobsJobJobStatusArrayOutput
	ToGetHistoryDeliveryJobsJobJobStatusArrayOutputWithContext(context.Context) GetHistoryDeliveryJobsJobJobStatusArrayOutput
}

type GetHistoryDeliveryJobsJobJobStatusArray []GetHistoryDeliveryJobsJobJobStatusInput

func (GetHistoryDeliveryJobsJobJobStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHistoryDeliveryJobsJobJobStatus)(nil)).Elem()
}

func (i GetHistoryDeliveryJobsJobJobStatusArray) ToGetHistoryDeliveryJobsJobJobStatusArrayOutput() GetHistoryDeliveryJobsJobJobStatusArrayOutput {
	return i.ToGetHistoryDeliveryJobsJobJobStatusArrayOutputWithContext(context.Background())
}

func (i GetHistoryDeliveryJobsJobJobStatusArray) ToGetHistoryDeliveryJobsJobJobStatusArrayOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobJobStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHistoryDeliveryJobsJobJobStatusArrayOutput)
}

type GetHistoryDeliveryJobsJobJobStatusOutput struct{ *pulumi.OutputState }

func (GetHistoryDeliveryJobsJobJobStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHistoryDeliveryJobsJobJobStatus)(nil)).Elem()
}

func (o GetHistoryDeliveryJobsJobJobStatusOutput) ToGetHistoryDeliveryJobsJobJobStatusOutput() GetHistoryDeliveryJobsJobJobStatusOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobJobStatusOutput) ToGetHistoryDeliveryJobsJobJobStatusOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobJobStatusOutput {
	return o
}

// The region of the delivery job.
func (o GetHistoryDeliveryJobsJobJobStatusOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJobJobStatus) string { return v.Region }).(pulumi.StringOutput)
}

// The status of the task. Valid values: `0`, `1`, `2`, `3`. `0`: The task is initializing. `1`: The task is delivering historical events. `2`: The delivery of historical events is complete. `3`: The task fails.
func (o GetHistoryDeliveryJobsJobJobStatusOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetHistoryDeliveryJobsJobJobStatus) int { return v.Status }).(pulumi.IntOutput)
}

type GetHistoryDeliveryJobsJobJobStatusArrayOutput struct{ *pulumi.OutputState }

func (GetHistoryDeliveryJobsJobJobStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHistoryDeliveryJobsJobJobStatus)(nil)).Elem()
}

func (o GetHistoryDeliveryJobsJobJobStatusArrayOutput) ToGetHistoryDeliveryJobsJobJobStatusArrayOutput() GetHistoryDeliveryJobsJobJobStatusArrayOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobJobStatusArrayOutput) ToGetHistoryDeliveryJobsJobJobStatusArrayOutputWithContext(ctx context.Context) GetHistoryDeliveryJobsJobJobStatusArrayOutput {
	return o
}

func (o GetHistoryDeliveryJobsJobJobStatusArrayOutput) Index(i pulumi.IntInput) GetHistoryDeliveryJobsJobJobStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHistoryDeliveryJobsJobJobStatus {
		return vs[0].([]GetHistoryDeliveryJobsJobJobStatus)[vs[1].(int)]
	}).(GetHistoryDeliveryJobsJobJobStatusOutput)
}

type GetInstancesInstance struct {
	// The allowed list of the instance.
	AllowedLists []GetInstancesInstanceAllowedList `pulumi:"allowedLists"`
	// The config the instance.
	Config string `pulumi:"config"`
	// The create time of the instance.
	CreateTime string `pulumi:"createTime"`
	// The deployed type of the instance.
	DeployType int `pulumi:"deployType"`
	// The disk size of the instance.
	DiskSize int `pulumi:"diskSize"`
	// The disk type of the instance. 0: efficient cloud disk , 1: SSD.
	DiskType int `pulumi:"diskType"`
	// The domain point of the instance.
	DomainEndpoint string `pulumi:"domainEndpoint"`
	// The peak bandwidth of the instance.
	EipMax int `pulumi:"eipMax"`
	// The endPoint to access the instance.
	EndPoint string `pulumi:"endPoint"`
	// The expired time  of the instance.
	ExpiredTime int `pulumi:"expiredTime"`
	// ID of the instance.
	Id string `pulumi:"id"`
	// The peak value of io of the instance.
	IoMax int `pulumi:"ioMax"`
	// The msg retain of the instance.
	MsgRetain int `pulumi:"msgRetain"`
	// Name of the instance.
	Name string `pulumi:"name"`
	// The paid type of the instance.
	PaidType string `pulumi:"paidType"`
	// The SASL domain point of the instance.
	SaslDomainEndpoint string `pulumi:"saslDomainEndpoint"`
	// The security group of the instance.
	SecurityGroup string `pulumi:"securityGroup"`
	// The current status of the instance. -1: unknown status, 0: wait deploy, 1: initializing, 2: preparing, 3 starting, 5: in service, 7: wait upgrade, 8: upgrading, 10: released, 15: freeze, 101: deploy error, 102: upgrade error.
	ServiceStatus int `pulumi:"serviceStatus"`
	// The kafka openSource version of the instance.
	ServiceVersion string `pulumi:"serviceVersion"`
	// The spec type of the instance.
	SpecType string `pulumi:"specType"`
	// The SSL domain point of the instance.
	SslDomainEndpoint string `pulumi:"sslDomainEndpoint"`
	// The SSL end point of the instance.
	SslEndPoint string `pulumi:"sslEndPoint"`
	// A mapping of tags to assign to the instance.
	Tags map[string]interface{} `pulumi:"tags"`
	// The max num of topic can be create of the instance.
	TopicQuota int `pulumi:"topicQuota"`
	// The UpgradeServiceDetailInfo List.
	UpgradeServiceDetailInfos []GetInstancesInstanceUpgradeServiceDetailInfo `pulumi:"upgradeServiceDetailInfos"`
	// The ID of attaching VPC to instance.
	VpcId string `pulumi:"vpcId"`
	// The ID of attaching vswitch to instance.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of attaching zone to instance.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The allowed list of the instance.
	AllowedLists GetInstancesInstanceAllowedListArrayInput `pulumi:"allowedLists"`
	// The config the instance.
	Config pulumi.StringInput `pulumi:"config"`
	// The create time of the instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The deployed type of the instance.
	DeployType pulumi.IntInput `pulumi:"deployType"`
	// The disk size of the instance.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The disk type of the instance. 0: efficient cloud disk , 1: SSD.
	DiskType pulumi.IntInput `pulumi:"diskType"`
	// The domain point of the instance.
	DomainEndpoint pulumi.StringInput `pulumi:"domainEndpoint"`
	// The peak bandwidth of the instance.
	EipMax pulumi.IntInput `pulumi:"eipMax"`
	// The endPoint to access the instance.
	EndPoint pulumi.StringInput `pulumi:"endPoint"`
	// The expired time  of the instance.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// ID of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The peak value of io of the instance.
	IoMax pulumi.IntInput `pulumi:"ioMax"`
	// The msg retain of the instance.
	MsgRetain pulumi.IntInput `pulumi:"msgRetain"`
	// Name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The paid type of the instance.
	PaidType pulumi.StringInput `pulumi:"paidType"`
	// The SASL domain point of the instance.
	SaslDomainEndpoint pulumi.StringInput `pulumi:"saslDomainEndpoint"`
	// The security group of the instance.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
	// The current status of the instance. -1: unknown status, 0: wait deploy, 1: initializing, 2: preparing, 3 starting, 5: in service, 7: wait upgrade, 8: upgrading, 10: released, 15: freeze, 101: deploy error, 102: upgrade error.
	ServiceStatus pulumi.IntInput `pulumi:"serviceStatus"`
	// The kafka openSource version of the instance.
	ServiceVersion pulumi.StringInput `pulumi:"serviceVersion"`
	// The spec type of the instance.
	SpecType pulumi.StringInput `pulumi:"specType"`
	// The SSL domain point of the instance.
	SslDomainEndpoint pulumi.StringInput `pulumi:"sslDomainEndpoint"`
	// The SSL end point of the instance.
	SslEndPoint pulumi.StringInput `pulumi:"sslEndPoint"`
	// A mapping of tags to assign to the instance.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The max num of topic can be create of the instance.
	TopicQuota pulumi.IntInput `pulumi:"topicQuota"`
	// The UpgradeServiceDetailInfo List.
	UpgradeServiceDetailInfos GetInstancesInstanceUpgradeServiceDetailInfoArrayInput `pulumi:"upgradeServiceDetailInfos"`
	// The ID of attaching VPC to instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of attaching vswitch to instance.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The ID of attaching zone to instance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The allowed list of the instance.
func (o GetInstancesInstanceOutput) AllowedLists() GetInstancesInstanceAllowedListArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceAllowedList { return v.AllowedLists }).(GetInstancesInstanceAllowedListArrayOutput)
}

// The config the instance.
func (o GetInstancesInstanceOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Config }).(pulumi.StringOutput)
}

// The create time of the instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The deployed type of the instance.
func (o GetInstancesInstanceOutput) DeployType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DeployType }).(pulumi.IntOutput)
}

// The disk size of the instance.
func (o GetInstancesInstanceOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The disk type of the instance. 0: efficient cloud disk , 1: SSD.
func (o GetInstancesInstanceOutput) DiskType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DiskType }).(pulumi.IntOutput)
}

// The domain point of the instance.
func (o GetInstancesInstanceOutput) DomainEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DomainEndpoint }).(pulumi.StringOutput)
}

// The peak bandwidth of the instance.
func (o GetInstancesInstanceOutput) EipMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.EipMax }).(pulumi.IntOutput)
}

// The endPoint to access the instance.
func (o GetInstancesInstanceOutput) EndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EndPoint }).(pulumi.StringOutput)
}

// The expired time  of the instance.
func (o GetInstancesInstanceOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// ID of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The peak value of io of the instance.
func (o GetInstancesInstanceOutput) IoMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.IoMax }).(pulumi.IntOutput)
}

// The msg retain of the instance.
func (o GetInstancesInstanceOutput) MsgRetain() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.MsgRetain }).(pulumi.IntOutput)
}

// Name of the instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The paid type of the instance.
func (o GetInstancesInstanceOutput) PaidType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaidType }).(pulumi.StringOutput)
}

// The SASL domain point of the instance.
func (o GetInstancesInstanceOutput) SaslDomainEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SaslDomainEndpoint }).(pulumi.StringOutput)
}

// The security group of the instance.
func (o GetInstancesInstanceOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

// The current status of the instance. -1: unknown status, 0: wait deploy, 1: initializing, 2: preparing, 3 starting, 5: in service, 7: wait upgrade, 8: upgrading, 10: released, 15: freeze, 101: deploy error, 102: upgrade error.
func (o GetInstancesInstanceOutput) ServiceStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ServiceStatus }).(pulumi.IntOutput)
}

// The kafka openSource version of the instance.
func (o GetInstancesInstanceOutput) ServiceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ServiceVersion }).(pulumi.StringOutput)
}

// The spec type of the instance.
func (o GetInstancesInstanceOutput) SpecType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SpecType }).(pulumi.StringOutput)
}

// The SSL domain point of the instance.
func (o GetInstancesInstanceOutput) SslDomainEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SslDomainEndpoint }).(pulumi.StringOutput)
}

// The SSL end point of the instance.
func (o GetInstancesInstanceOutput) SslEndPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SslEndPoint }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the instance.
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The max num of topic can be create of the instance.
func (o GetInstancesInstanceOutput) TopicQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.TopicQuota }).(pulumi.IntOutput)
}

// The UpgradeServiceDetailInfo List.
func (o GetInstancesInstanceOutput) UpgradeServiceDetailInfos() GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceUpgradeServiceDetailInfo {
		return v.UpgradeServiceDetailInfos
	}).(GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput)
}

// The ID of attaching VPC to instance.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of attaching vswitch to instance.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of attaching zone to instance.
func (o GetInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceAllowedList struct {
	// The deployed type of the instance.
	DeployType string `pulumi:"deployType"`
	// The internet list of the instance.
	InternetLists []GetInstancesInstanceAllowedListInternetList `pulumi:"internetLists"`
	// The vpc list of the instance.
	VpcLists []GetInstancesInstanceAllowedListVpcList `pulumi:"vpcLists"`
}

// GetInstancesInstanceAllowedListInput is an input type that accepts GetInstancesInstanceAllowedListArgs and GetInstancesInstanceAllowedListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListInput` via:
//
//          GetInstancesInstanceAllowedListArgs{...}
type GetInstancesInstanceAllowedListInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListOutput() GetInstancesInstanceAllowedListOutput
	ToGetInstancesInstanceAllowedListOutputWithContext(context.Context) GetInstancesInstanceAllowedListOutput
}

type GetInstancesInstanceAllowedListArgs struct {
	// The deployed type of the instance.
	DeployType pulumi.StringInput `pulumi:"deployType"`
	// The internet list of the instance.
	InternetLists GetInstancesInstanceAllowedListInternetListArrayInput `pulumi:"internetLists"`
	// The vpc list of the instance.
	VpcLists GetInstancesInstanceAllowedListVpcListArrayInput `pulumi:"vpcLists"`
}

func (GetInstancesInstanceAllowedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListArgs) ToGetInstancesInstanceAllowedListOutput() GetInstancesInstanceAllowedListOutput {
	return i.ToGetInstancesInstanceAllowedListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListArgs) ToGetInstancesInstanceAllowedListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListOutput)
}

// GetInstancesInstanceAllowedListArrayInput is an input type that accepts GetInstancesInstanceAllowedListArray and GetInstancesInstanceAllowedListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListArrayInput` via:
//
//          GetInstancesInstanceAllowedListArray{ GetInstancesInstanceAllowedListArgs{...} }
type GetInstancesInstanceAllowedListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListArrayOutput() GetInstancesInstanceAllowedListArrayOutput
	ToGetInstancesInstanceAllowedListArrayOutputWithContext(context.Context) GetInstancesInstanceAllowedListArrayOutput
}

type GetInstancesInstanceAllowedListArray []GetInstancesInstanceAllowedListInput

func (GetInstancesInstanceAllowedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListArray) ToGetInstancesInstanceAllowedListArrayOutput() GetInstancesInstanceAllowedListArrayOutput {
	return i.ToGetInstancesInstanceAllowedListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListArray) ToGetInstancesInstanceAllowedListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListArrayOutput)
}

type GetInstancesInstanceAllowedListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListOutput) ToGetInstancesInstanceAllowedListOutput() GetInstancesInstanceAllowedListOutput {
	return o
}

func (o GetInstancesInstanceAllowedListOutput) ToGetInstancesInstanceAllowedListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListOutput {
	return o
}

// The deployed type of the instance.
func (o GetInstancesInstanceAllowedListOutput) DeployType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedList) string { return v.DeployType }).(pulumi.StringOutput)
}

// The internet list of the instance.
func (o GetInstancesInstanceAllowedListOutput) InternetLists() GetInstancesInstanceAllowedListInternetListArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedList) []GetInstancesInstanceAllowedListInternetList {
		return v.InternetLists
	}).(GetInstancesInstanceAllowedListInternetListArrayOutput)
}

// The vpc list of the instance.
func (o GetInstancesInstanceAllowedListOutput) VpcLists() GetInstancesInstanceAllowedListVpcListArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedList) []GetInstancesInstanceAllowedListVpcList { return v.VpcLists }).(GetInstancesInstanceAllowedListVpcListArrayOutput)
}

type GetInstancesInstanceAllowedListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListArrayOutput) ToGetInstancesInstanceAllowedListArrayOutput() GetInstancesInstanceAllowedListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListArrayOutput) ToGetInstancesInstanceAllowedListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceAllowedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceAllowedList {
		return vs[0].([]GetInstancesInstanceAllowedList)[vs[1].(int)]
	}).(GetInstancesInstanceAllowedListOutput)
}

type GetInstancesInstanceAllowedListInternetList struct {
	// The allowed ip list of the internet_list.
	AllowedIpLists []string `pulumi:"allowedIpLists"`
	// The port range of the internet_list.
	PortRange string `pulumi:"portRange"`
}

// GetInstancesInstanceAllowedListInternetListInput is an input type that accepts GetInstancesInstanceAllowedListInternetListArgs and GetInstancesInstanceAllowedListInternetListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListInternetListInput` via:
//
//          GetInstancesInstanceAllowedListInternetListArgs{...}
type GetInstancesInstanceAllowedListInternetListInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListInternetListOutput() GetInstancesInstanceAllowedListInternetListOutput
	ToGetInstancesInstanceAllowedListInternetListOutputWithContext(context.Context) GetInstancesInstanceAllowedListInternetListOutput
}

type GetInstancesInstanceAllowedListInternetListArgs struct {
	// The allowed ip list of the internet_list.
	AllowedIpLists pulumi.StringArrayInput `pulumi:"allowedIpLists"`
	// The port range of the internet_list.
	PortRange pulumi.StringInput `pulumi:"portRange"`
}

func (GetInstancesInstanceAllowedListInternetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedListInternetList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListInternetListArgs) ToGetInstancesInstanceAllowedListInternetListOutput() GetInstancesInstanceAllowedListInternetListOutput {
	return i.ToGetInstancesInstanceAllowedListInternetListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListInternetListArgs) ToGetInstancesInstanceAllowedListInternetListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListInternetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListInternetListOutput)
}

// GetInstancesInstanceAllowedListInternetListArrayInput is an input type that accepts GetInstancesInstanceAllowedListInternetListArray and GetInstancesInstanceAllowedListInternetListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListInternetListArrayInput` via:
//
//          GetInstancesInstanceAllowedListInternetListArray{ GetInstancesInstanceAllowedListInternetListArgs{...} }
type GetInstancesInstanceAllowedListInternetListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListInternetListArrayOutput() GetInstancesInstanceAllowedListInternetListArrayOutput
	ToGetInstancesInstanceAllowedListInternetListArrayOutputWithContext(context.Context) GetInstancesInstanceAllowedListInternetListArrayOutput
}

type GetInstancesInstanceAllowedListInternetListArray []GetInstancesInstanceAllowedListInternetListInput

func (GetInstancesInstanceAllowedListInternetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedListInternetList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListInternetListArray) ToGetInstancesInstanceAllowedListInternetListArrayOutput() GetInstancesInstanceAllowedListInternetListArrayOutput {
	return i.ToGetInstancesInstanceAllowedListInternetListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListInternetListArray) ToGetInstancesInstanceAllowedListInternetListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListInternetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListInternetListArrayOutput)
}

type GetInstancesInstanceAllowedListInternetListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListInternetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedListInternetList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListInternetListOutput) ToGetInstancesInstanceAllowedListInternetListOutput() GetInstancesInstanceAllowedListInternetListOutput {
	return o
}

func (o GetInstancesInstanceAllowedListInternetListOutput) ToGetInstancesInstanceAllowedListInternetListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListInternetListOutput {
	return o
}

// The allowed ip list of the internet_list.
func (o GetInstancesInstanceAllowedListInternetListOutput) AllowedIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedListInternetList) []string { return v.AllowedIpLists }).(pulumi.StringArrayOutput)
}

// The port range of the internet_list.
func (o GetInstancesInstanceAllowedListInternetListOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedListInternetList) string { return v.PortRange }).(pulumi.StringOutput)
}

type GetInstancesInstanceAllowedListInternetListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListInternetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedListInternetList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListInternetListArrayOutput) ToGetInstancesInstanceAllowedListInternetListArrayOutput() GetInstancesInstanceAllowedListInternetListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListInternetListArrayOutput) ToGetInstancesInstanceAllowedListInternetListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListInternetListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListInternetListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceAllowedListInternetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceAllowedListInternetList {
		return vs[0].([]GetInstancesInstanceAllowedListInternetList)[vs[1].(int)]
	}).(GetInstancesInstanceAllowedListInternetListOutput)
}

type GetInstancesInstanceAllowedListVpcList struct {
	// The allowed ip list of the internet_list.
	AllowedIpLists []string `pulumi:"allowedIpLists"`
	// The port range of the internet_list.
	PortRange string `pulumi:"portRange"`
}

// GetInstancesInstanceAllowedListVpcListInput is an input type that accepts GetInstancesInstanceAllowedListVpcListArgs and GetInstancesInstanceAllowedListVpcListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListVpcListInput` via:
//
//          GetInstancesInstanceAllowedListVpcListArgs{...}
type GetInstancesInstanceAllowedListVpcListInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListVpcListOutput() GetInstancesInstanceAllowedListVpcListOutput
	ToGetInstancesInstanceAllowedListVpcListOutputWithContext(context.Context) GetInstancesInstanceAllowedListVpcListOutput
}

type GetInstancesInstanceAllowedListVpcListArgs struct {
	// The allowed ip list of the internet_list.
	AllowedIpLists pulumi.StringArrayInput `pulumi:"allowedIpLists"`
	// The port range of the internet_list.
	PortRange pulumi.StringInput `pulumi:"portRange"`
}

func (GetInstancesInstanceAllowedListVpcListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedListVpcList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListVpcListArgs) ToGetInstancesInstanceAllowedListVpcListOutput() GetInstancesInstanceAllowedListVpcListOutput {
	return i.ToGetInstancesInstanceAllowedListVpcListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListVpcListArgs) ToGetInstancesInstanceAllowedListVpcListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListVpcListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListVpcListOutput)
}

// GetInstancesInstanceAllowedListVpcListArrayInput is an input type that accepts GetInstancesInstanceAllowedListVpcListArray and GetInstancesInstanceAllowedListVpcListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceAllowedListVpcListArrayInput` via:
//
//          GetInstancesInstanceAllowedListVpcListArray{ GetInstancesInstanceAllowedListVpcListArgs{...} }
type GetInstancesInstanceAllowedListVpcListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceAllowedListVpcListArrayOutput() GetInstancesInstanceAllowedListVpcListArrayOutput
	ToGetInstancesInstanceAllowedListVpcListArrayOutputWithContext(context.Context) GetInstancesInstanceAllowedListVpcListArrayOutput
}

type GetInstancesInstanceAllowedListVpcListArray []GetInstancesInstanceAllowedListVpcListInput

func (GetInstancesInstanceAllowedListVpcListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedListVpcList)(nil)).Elem()
}

func (i GetInstancesInstanceAllowedListVpcListArray) ToGetInstancesInstanceAllowedListVpcListArrayOutput() GetInstancesInstanceAllowedListVpcListArrayOutput {
	return i.ToGetInstancesInstanceAllowedListVpcListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceAllowedListVpcListArray) ToGetInstancesInstanceAllowedListVpcListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListVpcListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceAllowedListVpcListArrayOutput)
}

type GetInstancesInstanceAllowedListVpcListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListVpcListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceAllowedListVpcList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListVpcListOutput) ToGetInstancesInstanceAllowedListVpcListOutput() GetInstancesInstanceAllowedListVpcListOutput {
	return o
}

func (o GetInstancesInstanceAllowedListVpcListOutput) ToGetInstancesInstanceAllowedListVpcListOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListVpcListOutput {
	return o
}

// The allowed ip list of the internet_list.
func (o GetInstancesInstanceAllowedListVpcListOutput) AllowedIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedListVpcList) []string { return v.AllowedIpLists }).(pulumi.StringArrayOutput)
}

// The port range of the internet_list.
func (o GetInstancesInstanceAllowedListVpcListOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceAllowedListVpcList) string { return v.PortRange }).(pulumi.StringOutput)
}

type GetInstancesInstanceAllowedListVpcListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceAllowedListVpcListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceAllowedListVpcList)(nil)).Elem()
}

func (o GetInstancesInstanceAllowedListVpcListArrayOutput) ToGetInstancesInstanceAllowedListVpcListArrayOutput() GetInstancesInstanceAllowedListVpcListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListVpcListArrayOutput) ToGetInstancesInstanceAllowedListVpcListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceAllowedListVpcListArrayOutput {
	return o
}

func (o GetInstancesInstanceAllowedListVpcListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceAllowedListVpcListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceAllowedListVpcList {
		return vs[0].([]GetInstancesInstanceAllowedListVpcList)[vs[1].(int)]
	}).(GetInstancesInstanceAllowedListVpcListOutput)
}

type GetInstancesInstanceUpgradeServiceDetailInfo struct {
	// The Current2OpenSourceVersion of the instance.
	Current2OpenSourceVersion string `pulumi:"current2OpenSourceVersion"`
}

// GetInstancesInstanceUpgradeServiceDetailInfoInput is an input type that accepts GetInstancesInstanceUpgradeServiceDetailInfoArgs and GetInstancesInstanceUpgradeServiceDetailInfoOutput values.
// You can construct a concrete instance of `GetInstancesInstanceUpgradeServiceDetailInfoInput` via:
//
//          GetInstancesInstanceUpgradeServiceDetailInfoArgs{...}
type GetInstancesInstanceUpgradeServiceDetailInfoInput interface {
	pulumi.Input

	ToGetInstancesInstanceUpgradeServiceDetailInfoOutput() GetInstancesInstanceUpgradeServiceDetailInfoOutput
	ToGetInstancesInstanceUpgradeServiceDetailInfoOutputWithContext(context.Context) GetInstancesInstanceUpgradeServiceDetailInfoOutput
}

type GetInstancesInstanceUpgradeServiceDetailInfoArgs struct {
	// The Current2OpenSourceVersion of the instance.
	Current2OpenSourceVersion pulumi.StringInput `pulumi:"current2OpenSourceVersion"`
}

func (GetInstancesInstanceUpgradeServiceDetailInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceUpgradeServiceDetailInfo)(nil)).Elem()
}

func (i GetInstancesInstanceUpgradeServiceDetailInfoArgs) ToGetInstancesInstanceUpgradeServiceDetailInfoOutput() GetInstancesInstanceUpgradeServiceDetailInfoOutput {
	return i.ToGetInstancesInstanceUpgradeServiceDetailInfoOutputWithContext(context.Background())
}

func (i GetInstancesInstanceUpgradeServiceDetailInfoArgs) ToGetInstancesInstanceUpgradeServiceDetailInfoOutputWithContext(ctx context.Context) GetInstancesInstanceUpgradeServiceDetailInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceUpgradeServiceDetailInfoOutput)
}

// GetInstancesInstanceUpgradeServiceDetailInfoArrayInput is an input type that accepts GetInstancesInstanceUpgradeServiceDetailInfoArray and GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceUpgradeServiceDetailInfoArrayInput` via:
//
//          GetInstancesInstanceUpgradeServiceDetailInfoArray{ GetInstancesInstanceUpgradeServiceDetailInfoArgs{...} }
type GetInstancesInstanceUpgradeServiceDetailInfoArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutput() GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput
	ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutputWithContext(context.Context) GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput
}

type GetInstancesInstanceUpgradeServiceDetailInfoArray []GetInstancesInstanceUpgradeServiceDetailInfoInput

func (GetInstancesInstanceUpgradeServiceDetailInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceUpgradeServiceDetailInfo)(nil)).Elem()
}

func (i GetInstancesInstanceUpgradeServiceDetailInfoArray) ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutput() GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput {
	return i.ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceUpgradeServiceDetailInfoArray) ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput)
}

type GetInstancesInstanceUpgradeServiceDetailInfoOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceUpgradeServiceDetailInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceUpgradeServiceDetailInfo)(nil)).Elem()
}

func (o GetInstancesInstanceUpgradeServiceDetailInfoOutput) ToGetInstancesInstanceUpgradeServiceDetailInfoOutput() GetInstancesInstanceUpgradeServiceDetailInfoOutput {
	return o
}

func (o GetInstancesInstanceUpgradeServiceDetailInfoOutput) ToGetInstancesInstanceUpgradeServiceDetailInfoOutputWithContext(ctx context.Context) GetInstancesInstanceUpgradeServiceDetailInfoOutput {
	return o
}

// The Current2OpenSourceVersion of the instance.
func (o GetInstancesInstanceUpgradeServiceDetailInfoOutput) Current2OpenSourceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceUpgradeServiceDetailInfo) string { return v.Current2OpenSourceVersion }).(pulumi.StringOutput)
}

type GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceUpgradeServiceDetailInfo)(nil)).Elem()
}

func (o GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput) ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutput() GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput) ToGetInstancesInstanceUpgradeServiceDetailInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceUpgradeServiceDetailInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceUpgradeServiceDetailInfo {
		return vs[0].([]GetInstancesInstanceUpgradeServiceDetailInfo)[vs[1].(int)]
	}).(GetInstancesInstanceUpgradeServiceDetailInfoOutput)
}

type GetSaslAclsAcl struct {
	// The operation type of the sasl acl.
	AclOperationType string `pulumi:"aclOperationType"`
	// Get results for the specified resource name.
	AclResourceName string `pulumi:"aclResourceName"`
	// The resource pattern type of the sasl acl.
	AclResourcePatternType string `pulumi:"aclResourcePatternType"`
	// Get results for the specified resource type.
	AclResourceType string `pulumi:"aclResourceType"`
	// The host of the sasl acl.
	Host string `pulumi:"host"`
	// Get results for the specified username.
	Username string `pulumi:"username"`
}

// GetSaslAclsAclInput is an input type that accepts GetSaslAclsAclArgs and GetSaslAclsAclOutput values.
// You can construct a concrete instance of `GetSaslAclsAclInput` via:
//
//          GetSaslAclsAclArgs{...}
type GetSaslAclsAclInput interface {
	pulumi.Input

	ToGetSaslAclsAclOutput() GetSaslAclsAclOutput
	ToGetSaslAclsAclOutputWithContext(context.Context) GetSaslAclsAclOutput
}

type GetSaslAclsAclArgs struct {
	// The operation type of the sasl acl.
	AclOperationType pulumi.StringInput `pulumi:"aclOperationType"`
	// Get results for the specified resource name.
	AclResourceName pulumi.StringInput `pulumi:"aclResourceName"`
	// The resource pattern type of the sasl acl.
	AclResourcePatternType pulumi.StringInput `pulumi:"aclResourcePatternType"`
	// Get results for the specified resource type.
	AclResourceType pulumi.StringInput `pulumi:"aclResourceType"`
	// The host of the sasl acl.
	Host pulumi.StringInput `pulumi:"host"`
	// Get results for the specified username.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSaslAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslAclsAcl)(nil)).Elem()
}

func (i GetSaslAclsAclArgs) ToGetSaslAclsAclOutput() GetSaslAclsAclOutput {
	return i.ToGetSaslAclsAclOutputWithContext(context.Background())
}

func (i GetSaslAclsAclArgs) ToGetSaslAclsAclOutputWithContext(ctx context.Context) GetSaslAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSaslAclsAclOutput)
}

// GetSaslAclsAclArrayInput is an input type that accepts GetSaslAclsAclArray and GetSaslAclsAclArrayOutput values.
// You can construct a concrete instance of `GetSaslAclsAclArrayInput` via:
//
//          GetSaslAclsAclArray{ GetSaslAclsAclArgs{...} }
type GetSaslAclsAclArrayInput interface {
	pulumi.Input

	ToGetSaslAclsAclArrayOutput() GetSaslAclsAclArrayOutput
	ToGetSaslAclsAclArrayOutputWithContext(context.Context) GetSaslAclsAclArrayOutput
}

type GetSaslAclsAclArray []GetSaslAclsAclInput

func (GetSaslAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSaslAclsAcl)(nil)).Elem()
}

func (i GetSaslAclsAclArray) ToGetSaslAclsAclArrayOutput() GetSaslAclsAclArrayOutput {
	return i.ToGetSaslAclsAclArrayOutputWithContext(context.Background())
}

func (i GetSaslAclsAclArray) ToGetSaslAclsAclArrayOutputWithContext(ctx context.Context) GetSaslAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSaslAclsAclArrayOutput)
}

type GetSaslAclsAclOutput struct{ *pulumi.OutputState }

func (GetSaslAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslAclsAcl)(nil)).Elem()
}

func (o GetSaslAclsAclOutput) ToGetSaslAclsAclOutput() GetSaslAclsAclOutput {
	return o
}

func (o GetSaslAclsAclOutput) ToGetSaslAclsAclOutputWithContext(ctx context.Context) GetSaslAclsAclOutput {
	return o
}

// The operation type of the sasl acl.
func (o GetSaslAclsAclOutput) AclOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.AclOperationType }).(pulumi.StringOutput)
}

// Get results for the specified resource name.
func (o GetSaslAclsAclOutput) AclResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.AclResourceName }).(pulumi.StringOutput)
}

// The resource pattern type of the sasl acl.
func (o GetSaslAclsAclOutput) AclResourcePatternType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.AclResourcePatternType }).(pulumi.StringOutput)
}

// Get results for the specified resource type.
func (o GetSaslAclsAclOutput) AclResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.AclResourceType }).(pulumi.StringOutput)
}

// The host of the sasl acl.
func (o GetSaslAclsAclOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.Host }).(pulumi.StringOutput)
}

// Get results for the specified username.
func (o GetSaslAclsAclOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslAclsAcl) string { return v.Username }).(pulumi.StringOutput)
}

type GetSaslAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetSaslAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSaslAclsAcl)(nil)).Elem()
}

func (o GetSaslAclsAclArrayOutput) ToGetSaslAclsAclArrayOutput() GetSaslAclsAclArrayOutput {
	return o
}

func (o GetSaslAclsAclArrayOutput) ToGetSaslAclsAclArrayOutputWithContext(ctx context.Context) GetSaslAclsAclArrayOutput {
	return o
}

func (o GetSaslAclsAclArrayOutput) Index(i pulumi.IntInput) GetSaslAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSaslAclsAcl {
		return vs[0].([]GetSaslAclsAcl)[vs[1].(int)]
	}).(GetSaslAclsAclOutput)
}

type GetSaslUsersUser struct {
	// The password of the user.
	Password string `pulumi:"password"`
	// The username of the user.
	Username string `pulumi:"username"`
}

// GetSaslUsersUserInput is an input type that accepts GetSaslUsersUserArgs and GetSaslUsersUserOutput values.
// You can construct a concrete instance of `GetSaslUsersUserInput` via:
//
//          GetSaslUsersUserArgs{...}
type GetSaslUsersUserInput interface {
	pulumi.Input

	ToGetSaslUsersUserOutput() GetSaslUsersUserOutput
	ToGetSaslUsersUserOutputWithContext(context.Context) GetSaslUsersUserOutput
}

type GetSaslUsersUserArgs struct {
	// The password of the user.
	Password pulumi.StringInput `pulumi:"password"`
	// The username of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSaslUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslUsersUser)(nil)).Elem()
}

func (i GetSaslUsersUserArgs) ToGetSaslUsersUserOutput() GetSaslUsersUserOutput {
	return i.ToGetSaslUsersUserOutputWithContext(context.Background())
}

func (i GetSaslUsersUserArgs) ToGetSaslUsersUserOutputWithContext(ctx context.Context) GetSaslUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSaslUsersUserOutput)
}

// GetSaslUsersUserArrayInput is an input type that accepts GetSaslUsersUserArray and GetSaslUsersUserArrayOutput values.
// You can construct a concrete instance of `GetSaslUsersUserArrayInput` via:
//
//          GetSaslUsersUserArray{ GetSaslUsersUserArgs{...} }
type GetSaslUsersUserArrayInput interface {
	pulumi.Input

	ToGetSaslUsersUserArrayOutput() GetSaslUsersUserArrayOutput
	ToGetSaslUsersUserArrayOutputWithContext(context.Context) GetSaslUsersUserArrayOutput
}

type GetSaslUsersUserArray []GetSaslUsersUserInput

func (GetSaslUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSaslUsersUser)(nil)).Elem()
}

func (i GetSaslUsersUserArray) ToGetSaslUsersUserArrayOutput() GetSaslUsersUserArrayOutput {
	return i.ToGetSaslUsersUserArrayOutputWithContext(context.Background())
}

func (i GetSaslUsersUserArray) ToGetSaslUsersUserArrayOutputWithContext(ctx context.Context) GetSaslUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSaslUsersUserArrayOutput)
}

type GetSaslUsersUserOutput struct{ *pulumi.OutputState }

func (GetSaslUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslUsersUser)(nil)).Elem()
}

func (o GetSaslUsersUserOutput) ToGetSaslUsersUserOutput() GetSaslUsersUserOutput {
	return o
}

func (o GetSaslUsersUserOutput) ToGetSaslUsersUserOutputWithContext(ctx context.Context) GetSaslUsersUserOutput {
	return o
}

// The password of the user.
func (o GetSaslUsersUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslUsersUser) string { return v.Password }).(pulumi.StringOutput)
}

// The username of the user.
func (o GetSaslUsersUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslUsersUser) string { return v.Username }).(pulumi.StringOutput)
}

type GetSaslUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetSaslUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSaslUsersUser)(nil)).Elem()
}

func (o GetSaslUsersUserArrayOutput) ToGetSaslUsersUserArrayOutput() GetSaslUsersUserArrayOutput {
	return o
}

func (o GetSaslUsersUserArrayOutput) ToGetSaslUsersUserArrayOutputWithContext(ctx context.Context) GetSaslUsersUserArrayOutput {
	return o
}

func (o GetSaslUsersUserArrayOutput) Index(i pulumi.IntInput) GetSaslUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSaslUsersUser {
		return vs[0].([]GetSaslUsersUser)[vs[1].(int)]
	}).(GetSaslUsersUserOutput)
}

type GetTopicsTopic struct {
	// whether the current topic is kafka compact topic or not.
	CompactTopic bool `pulumi:"compactTopic"`
	// Time of creation.
	CreateTime string `pulumi:"createTime"`
	// The ID of the topic, It is formatted to `<instance_id>:<topic>`.
	Id string `pulumi:"id"`
	// ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// whether the current topic is kafka local topic or not.
	LocalTopic bool `pulumi:"localTopic"`
	// Partition number of the topic.
	PartitionNum int `pulumi:"partitionNum"`
	// Remark of the topic.
	Remark string `pulumi:"remark"`
	// The current status code of the topic. There are three values to describe the topic status: 0 stands for the topic is in service, 1 stands for freezing and 2 stands for pause.
	Status int `pulumi:"status"`
	// The statusName of the topic.
	StatusName string `pulumi:"statusName"`
	// A mapping of tags to assign to the topic.
	Tags map[string]interface{} `pulumi:"tags"`
	// A topic to filter results by the topic name.
	Topic string `pulumi:"topic"`
}

// GetTopicsTopicInput is an input type that accepts GetTopicsTopicArgs and GetTopicsTopicOutput values.
// You can construct a concrete instance of `GetTopicsTopicInput` via:
//
//          GetTopicsTopicArgs{...}
type GetTopicsTopicInput interface {
	pulumi.Input

	ToGetTopicsTopicOutput() GetTopicsTopicOutput
	ToGetTopicsTopicOutputWithContext(context.Context) GetTopicsTopicOutput
}

type GetTopicsTopicArgs struct {
	// whether the current topic is kafka compact topic or not.
	CompactTopic pulumi.BoolInput `pulumi:"compactTopic"`
	// Time of creation.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the topic, It is formatted to `<instance_id>:<topic>`.
	Id pulumi.StringInput `pulumi:"id"`
	// ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// whether the current topic is kafka local topic or not.
	LocalTopic pulumi.BoolInput `pulumi:"localTopic"`
	// Partition number of the topic.
	PartitionNum pulumi.IntInput `pulumi:"partitionNum"`
	// Remark of the topic.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The current status code of the topic. There are three values to describe the topic status: 0 stands for the topic is in service, 1 stands for freezing and 2 stands for pause.
	Status pulumi.IntInput `pulumi:"status"`
	// The statusName of the topic.
	StatusName pulumi.StringInput `pulumi:"statusName"`
	// A mapping of tags to assign to the topic.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A topic to filter results by the topic name.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetTopicsTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return i.ToGetTopicsTopicOutputWithContext(context.Background())
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicOutput)
}

// GetTopicsTopicArrayInput is an input type that accepts GetTopicsTopicArray and GetTopicsTopicArrayOutput values.
// You can construct a concrete instance of `GetTopicsTopicArrayInput` via:
//
//          GetTopicsTopicArray{ GetTopicsTopicArgs{...} }
type GetTopicsTopicArrayInput interface {
	pulumi.Input

	ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput
	ToGetTopicsTopicArrayOutputWithContext(context.Context) GetTopicsTopicArrayOutput
}

type GetTopicsTopicArray []GetTopicsTopicInput

func (GetTopicsTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return i.ToGetTopicsTopicArrayOutputWithContext(context.Background())
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicArrayOutput)
}

type GetTopicsTopicOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return o
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return o
}

// whether the current topic is kafka compact topic or not.
func (o GetTopicsTopicOutput) CompactTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsTopic) bool { return v.CompactTopic }).(pulumi.BoolOutput)
}

// Time of creation.
func (o GetTopicsTopicOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the topic, It is formatted to `<instance_id>:<topic>`.
func (o GetTopicsTopicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the instance.
func (o GetTopicsTopicOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.InstanceId }).(pulumi.StringOutput)
}

// whether the current topic is kafka local topic or not.
func (o GetTopicsTopicOutput) LocalTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTopicsTopic) bool { return v.LocalTopic }).(pulumi.BoolOutput)
}

// Partition number of the topic.
func (o GetTopicsTopicOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.PartitionNum }).(pulumi.IntOutput)
}

// Remark of the topic.
func (o GetTopicsTopicOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Remark }).(pulumi.StringOutput)
}

// The current status code of the topic. There are three values to describe the topic status: 0 stands for the topic is in service, 1 stands for freezing and 2 stands for pause.
func (o GetTopicsTopicOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.Status }).(pulumi.IntOutput)
}

// The statusName of the topic.
func (o GetTopicsTopicOutput) StatusName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.StatusName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the topic.
func (o GetTopicsTopicOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTopicsTopic) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// A topic to filter results by the topic name.
func (o GetTopicsTopicOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Topic }).(pulumi.StringOutput)
}

type GetTopicsTopicArrayOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) Index(i pulumi.IntInput) GetTopicsTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicsTopic {
		return vs[0].([]GetTopicsTopic)[vs[1].(int)]
	}).(GetTopicsTopicOutput)
}

type GetTrailsActiontrail struct {
	// Indicates whether the event is a read or a write event.
	EventRw string `pulumi:"eventRw"`
	// The id of the ActionTrail Trail. It is the same as trail name.
	Id                  string `pulumi:"id"`
	IsOrganizationTrail bool   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    string `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn string `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn string `pulumi:"slsWriteRoleArn"`
	// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
	Status string `pulumi:"status"`
	// The name of the ActionTrail Trail.
	TrailName string `pulumi:"trailName"`
	// The regions to which the trail is applied.
	TrailRegion string `pulumi:"trailRegion"`
}

// GetTrailsActiontrailInput is an input type that accepts GetTrailsActiontrailArgs and GetTrailsActiontrailOutput values.
// You can construct a concrete instance of `GetTrailsActiontrailInput` via:
//
//          GetTrailsActiontrailArgs{...}
type GetTrailsActiontrailInput interface {
	pulumi.Input

	ToGetTrailsActiontrailOutput() GetTrailsActiontrailOutput
	ToGetTrailsActiontrailOutputWithContext(context.Context) GetTrailsActiontrailOutput
}

type GetTrailsActiontrailArgs struct {
	// Indicates whether the event is a read or a write event.
	EventRw pulumi.StringInput `pulumi:"eventRw"`
	// The id of the ActionTrail Trail. It is the same as trail name.
	Id                  pulumi.StringInput `pulumi:"id"`
	IsOrganizationTrail pulumi.BoolInput   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName pulumi.StringInput `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    pulumi.StringInput `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn pulumi.StringInput `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringInput `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringInput `pulumi:"slsWriteRoleArn"`
	// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the ActionTrail Trail.
	TrailName pulumi.StringInput `pulumi:"trailName"`
	// The regions to which the trail is applied.
	TrailRegion pulumi.StringInput `pulumi:"trailRegion"`
}

func (GetTrailsActiontrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsActiontrail)(nil)).Elem()
}

func (i GetTrailsActiontrailArgs) ToGetTrailsActiontrailOutput() GetTrailsActiontrailOutput {
	return i.ToGetTrailsActiontrailOutputWithContext(context.Background())
}

func (i GetTrailsActiontrailArgs) ToGetTrailsActiontrailOutputWithContext(ctx context.Context) GetTrailsActiontrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsActiontrailOutput)
}

// GetTrailsActiontrailArrayInput is an input type that accepts GetTrailsActiontrailArray and GetTrailsActiontrailArrayOutput values.
// You can construct a concrete instance of `GetTrailsActiontrailArrayInput` via:
//
//          GetTrailsActiontrailArray{ GetTrailsActiontrailArgs{...} }
type GetTrailsActiontrailArrayInput interface {
	pulumi.Input

	ToGetTrailsActiontrailArrayOutput() GetTrailsActiontrailArrayOutput
	ToGetTrailsActiontrailArrayOutputWithContext(context.Context) GetTrailsActiontrailArrayOutput
}

type GetTrailsActiontrailArray []GetTrailsActiontrailInput

func (GetTrailsActiontrailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsActiontrail)(nil)).Elem()
}

func (i GetTrailsActiontrailArray) ToGetTrailsActiontrailArrayOutput() GetTrailsActiontrailArrayOutput {
	return i.ToGetTrailsActiontrailArrayOutputWithContext(context.Background())
}

func (i GetTrailsActiontrailArray) ToGetTrailsActiontrailArrayOutputWithContext(ctx context.Context) GetTrailsActiontrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsActiontrailArrayOutput)
}

type GetTrailsActiontrailOutput struct{ *pulumi.OutputState }

func (GetTrailsActiontrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsActiontrail)(nil)).Elem()
}

func (o GetTrailsActiontrailOutput) ToGetTrailsActiontrailOutput() GetTrailsActiontrailOutput {
	return o
}

func (o GetTrailsActiontrailOutput) ToGetTrailsActiontrailOutputWithContext(ctx context.Context) GetTrailsActiontrailOutput {
	return o
}

// Indicates whether the event is a read or a write event.
func (o GetTrailsActiontrailOutput) EventRw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.EventRw }).(pulumi.StringOutput)
}

// The id of the ActionTrail Trail. It is the same as trail name.
func (o GetTrailsActiontrailOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrailsActiontrailOutput) IsOrganizationTrail() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) bool { return v.IsOrganizationTrail }).(pulumi.BoolOutput)
}

// The name of the specified OSS bucket.
func (o GetTrailsActiontrailOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.OssBucketName }).(pulumi.StringOutput)
}

// The prefix of the specified OSS bucket name.
func (o GetTrailsActiontrailOutput) OssKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.OssKeyPrefix }).(pulumi.StringOutput)
}

func (o GetTrailsActiontrailOutput) OssWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.OssWriteRoleArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service project.
func (o GetTrailsActiontrailOutput) SlsProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.SlsProjectArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service role.
func (o GetTrailsActiontrailOutput) SlsWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.SlsWriteRoleArn }).(pulumi.StringOutput)
}

// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
func (o GetTrailsActiontrailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the ActionTrail Trail.
func (o GetTrailsActiontrailOutput) TrailName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.TrailName }).(pulumi.StringOutput)
}

// The regions to which the trail is applied.
func (o GetTrailsActiontrailOutput) TrailRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsActiontrail) string { return v.TrailRegion }).(pulumi.StringOutput)
}

type GetTrailsActiontrailArrayOutput struct{ *pulumi.OutputState }

func (GetTrailsActiontrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsActiontrail)(nil)).Elem()
}

func (o GetTrailsActiontrailArrayOutput) ToGetTrailsActiontrailArrayOutput() GetTrailsActiontrailArrayOutput {
	return o
}

func (o GetTrailsActiontrailArrayOutput) ToGetTrailsActiontrailArrayOutputWithContext(ctx context.Context) GetTrailsActiontrailArrayOutput {
	return o
}

func (o GetTrailsActiontrailArrayOutput) Index(i pulumi.IntInput) GetTrailsActiontrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrailsActiontrail {
		return vs[0].([]GetTrailsActiontrail)[vs[1].(int)]
	}).(GetTrailsActiontrailOutput)
}

type GetTrailsDeprecatedActiontrail struct {
	// Indicates whether the event is a read or a write event.
	EventRw             string `pulumi:"eventRw"`
	Id                  string `pulumi:"id"`
	IsOrganizationTrail bool   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    string `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn string `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn string `pulumi:"slsWriteRoleArn"`
	Status          string `pulumi:"status"`
	TrailName       string `pulumi:"trailName"`
	TrailRegion     string `pulumi:"trailRegion"`
}

// GetTrailsDeprecatedActiontrailInput is an input type that accepts GetTrailsDeprecatedActiontrailArgs and GetTrailsDeprecatedActiontrailOutput values.
// You can construct a concrete instance of `GetTrailsDeprecatedActiontrailInput` via:
//
//          GetTrailsDeprecatedActiontrailArgs{...}
type GetTrailsDeprecatedActiontrailInput interface {
	pulumi.Input

	ToGetTrailsDeprecatedActiontrailOutput() GetTrailsDeprecatedActiontrailOutput
	ToGetTrailsDeprecatedActiontrailOutputWithContext(context.Context) GetTrailsDeprecatedActiontrailOutput
}

type GetTrailsDeprecatedActiontrailArgs struct {
	// Indicates whether the event is a read or a write event.
	EventRw             pulumi.StringInput `pulumi:"eventRw"`
	Id                  pulumi.StringInput `pulumi:"id"`
	IsOrganizationTrail pulumi.BoolInput   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName pulumi.StringInput `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    pulumi.StringInput `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn pulumi.StringInput `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringInput `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringInput `pulumi:"slsWriteRoleArn"`
	Status          pulumi.StringInput `pulumi:"status"`
	TrailName       pulumi.StringInput `pulumi:"trailName"`
	TrailRegion     pulumi.StringInput `pulumi:"trailRegion"`
}

func (GetTrailsDeprecatedActiontrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsDeprecatedActiontrail)(nil)).Elem()
}

func (i GetTrailsDeprecatedActiontrailArgs) ToGetTrailsDeprecatedActiontrailOutput() GetTrailsDeprecatedActiontrailOutput {
	return i.ToGetTrailsDeprecatedActiontrailOutputWithContext(context.Background())
}

func (i GetTrailsDeprecatedActiontrailArgs) ToGetTrailsDeprecatedActiontrailOutputWithContext(ctx context.Context) GetTrailsDeprecatedActiontrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsDeprecatedActiontrailOutput)
}

// GetTrailsDeprecatedActiontrailArrayInput is an input type that accepts GetTrailsDeprecatedActiontrailArray and GetTrailsDeprecatedActiontrailArrayOutput values.
// You can construct a concrete instance of `GetTrailsDeprecatedActiontrailArrayInput` via:
//
//          GetTrailsDeprecatedActiontrailArray{ GetTrailsDeprecatedActiontrailArgs{...} }
type GetTrailsDeprecatedActiontrailArrayInput interface {
	pulumi.Input

	ToGetTrailsDeprecatedActiontrailArrayOutput() GetTrailsDeprecatedActiontrailArrayOutput
	ToGetTrailsDeprecatedActiontrailArrayOutputWithContext(context.Context) GetTrailsDeprecatedActiontrailArrayOutput
}

type GetTrailsDeprecatedActiontrailArray []GetTrailsDeprecatedActiontrailInput

func (GetTrailsDeprecatedActiontrailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsDeprecatedActiontrail)(nil)).Elem()
}

func (i GetTrailsDeprecatedActiontrailArray) ToGetTrailsDeprecatedActiontrailArrayOutput() GetTrailsDeprecatedActiontrailArrayOutput {
	return i.ToGetTrailsDeprecatedActiontrailArrayOutputWithContext(context.Background())
}

func (i GetTrailsDeprecatedActiontrailArray) ToGetTrailsDeprecatedActiontrailArrayOutputWithContext(ctx context.Context) GetTrailsDeprecatedActiontrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsDeprecatedActiontrailArrayOutput)
}

type GetTrailsDeprecatedActiontrailOutput struct{ *pulumi.OutputState }

func (GetTrailsDeprecatedActiontrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsDeprecatedActiontrail)(nil)).Elem()
}

func (o GetTrailsDeprecatedActiontrailOutput) ToGetTrailsDeprecatedActiontrailOutput() GetTrailsDeprecatedActiontrailOutput {
	return o
}

func (o GetTrailsDeprecatedActiontrailOutput) ToGetTrailsDeprecatedActiontrailOutputWithContext(ctx context.Context) GetTrailsDeprecatedActiontrailOutput {
	return o
}

// Indicates whether the event is a read or a write event.
func (o GetTrailsDeprecatedActiontrailOutput) EventRw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.EventRw }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) IsOrganizationTrail() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) bool { return v.IsOrganizationTrail }).(pulumi.BoolOutput)
}

// The name of the specified OSS bucket.
func (o GetTrailsDeprecatedActiontrailOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.OssBucketName }).(pulumi.StringOutput)
}

// The prefix of the specified OSS bucket name.
func (o GetTrailsDeprecatedActiontrailOutput) OssKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.OssKeyPrefix }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) OssWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.OssWriteRoleArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service project.
func (o GetTrailsDeprecatedActiontrailOutput) SlsProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.SlsProjectArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service role.
func (o GetTrailsDeprecatedActiontrailOutput) SlsWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.SlsWriteRoleArn }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) TrailName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.TrailName }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedActiontrailOutput) TrailRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedActiontrail) string { return v.TrailRegion }).(pulumi.StringOutput)
}

type GetTrailsDeprecatedActiontrailArrayOutput struct{ *pulumi.OutputState }

func (GetTrailsDeprecatedActiontrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsDeprecatedActiontrail)(nil)).Elem()
}

func (o GetTrailsDeprecatedActiontrailArrayOutput) ToGetTrailsDeprecatedActiontrailArrayOutput() GetTrailsDeprecatedActiontrailArrayOutput {
	return o
}

func (o GetTrailsDeprecatedActiontrailArrayOutput) ToGetTrailsDeprecatedActiontrailArrayOutputWithContext(ctx context.Context) GetTrailsDeprecatedActiontrailArrayOutput {
	return o
}

func (o GetTrailsDeprecatedActiontrailArrayOutput) Index(i pulumi.IntInput) GetTrailsDeprecatedActiontrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrailsDeprecatedActiontrail {
		return vs[0].([]GetTrailsDeprecatedActiontrail)[vs[1].(int)]
	}).(GetTrailsDeprecatedActiontrailOutput)
}

type GetTrailsDeprecatedTrail struct {
	// Indicates whether the event is a read or a write event.
	EventRw             string `pulumi:"eventRw"`
	Id                  string `pulumi:"id"`
	IsOrganizationTrail bool   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    string `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn string `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn string `pulumi:"slsWriteRoleArn"`
	Status          string `pulumi:"status"`
	TrailName       string `pulumi:"trailName"`
	TrailRegion     string `pulumi:"trailRegion"`
}

// GetTrailsDeprecatedTrailInput is an input type that accepts GetTrailsDeprecatedTrailArgs and GetTrailsDeprecatedTrailOutput values.
// You can construct a concrete instance of `GetTrailsDeprecatedTrailInput` via:
//
//          GetTrailsDeprecatedTrailArgs{...}
type GetTrailsDeprecatedTrailInput interface {
	pulumi.Input

	ToGetTrailsDeprecatedTrailOutput() GetTrailsDeprecatedTrailOutput
	ToGetTrailsDeprecatedTrailOutputWithContext(context.Context) GetTrailsDeprecatedTrailOutput
}

type GetTrailsDeprecatedTrailArgs struct {
	// Indicates whether the event is a read or a write event.
	EventRw             pulumi.StringInput `pulumi:"eventRw"`
	Id                  pulumi.StringInput `pulumi:"id"`
	IsOrganizationTrail pulumi.BoolInput   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName pulumi.StringInput `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    pulumi.StringInput `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn pulumi.StringInput `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringInput `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringInput `pulumi:"slsWriteRoleArn"`
	Status          pulumi.StringInput `pulumi:"status"`
	TrailName       pulumi.StringInput `pulumi:"trailName"`
	TrailRegion     pulumi.StringInput `pulumi:"trailRegion"`
}

func (GetTrailsDeprecatedTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsDeprecatedTrail)(nil)).Elem()
}

func (i GetTrailsDeprecatedTrailArgs) ToGetTrailsDeprecatedTrailOutput() GetTrailsDeprecatedTrailOutput {
	return i.ToGetTrailsDeprecatedTrailOutputWithContext(context.Background())
}

func (i GetTrailsDeprecatedTrailArgs) ToGetTrailsDeprecatedTrailOutputWithContext(ctx context.Context) GetTrailsDeprecatedTrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsDeprecatedTrailOutput)
}

// GetTrailsDeprecatedTrailArrayInput is an input type that accepts GetTrailsDeprecatedTrailArray and GetTrailsDeprecatedTrailArrayOutput values.
// You can construct a concrete instance of `GetTrailsDeprecatedTrailArrayInput` via:
//
//          GetTrailsDeprecatedTrailArray{ GetTrailsDeprecatedTrailArgs{...} }
type GetTrailsDeprecatedTrailArrayInput interface {
	pulumi.Input

	ToGetTrailsDeprecatedTrailArrayOutput() GetTrailsDeprecatedTrailArrayOutput
	ToGetTrailsDeprecatedTrailArrayOutputWithContext(context.Context) GetTrailsDeprecatedTrailArrayOutput
}

type GetTrailsDeprecatedTrailArray []GetTrailsDeprecatedTrailInput

func (GetTrailsDeprecatedTrailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsDeprecatedTrail)(nil)).Elem()
}

func (i GetTrailsDeprecatedTrailArray) ToGetTrailsDeprecatedTrailArrayOutput() GetTrailsDeprecatedTrailArrayOutput {
	return i.ToGetTrailsDeprecatedTrailArrayOutputWithContext(context.Background())
}

func (i GetTrailsDeprecatedTrailArray) ToGetTrailsDeprecatedTrailArrayOutputWithContext(ctx context.Context) GetTrailsDeprecatedTrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsDeprecatedTrailArrayOutput)
}

type GetTrailsDeprecatedTrailOutput struct{ *pulumi.OutputState }

func (GetTrailsDeprecatedTrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsDeprecatedTrail)(nil)).Elem()
}

func (o GetTrailsDeprecatedTrailOutput) ToGetTrailsDeprecatedTrailOutput() GetTrailsDeprecatedTrailOutput {
	return o
}

func (o GetTrailsDeprecatedTrailOutput) ToGetTrailsDeprecatedTrailOutputWithContext(ctx context.Context) GetTrailsDeprecatedTrailOutput {
	return o
}

// Indicates whether the event is a read or a write event.
func (o GetTrailsDeprecatedTrailOutput) EventRw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.EventRw }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) IsOrganizationTrail() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) bool { return v.IsOrganizationTrail }).(pulumi.BoolOutput)
}

// The name of the specified OSS bucket.
func (o GetTrailsDeprecatedTrailOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.OssBucketName }).(pulumi.StringOutput)
}

// The prefix of the specified OSS bucket name.
func (o GetTrailsDeprecatedTrailOutput) OssKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.OssKeyPrefix }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) OssWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.OssWriteRoleArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service project.
func (o GetTrailsDeprecatedTrailOutput) SlsProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.SlsProjectArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service role.
func (o GetTrailsDeprecatedTrailOutput) SlsWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.SlsWriteRoleArn }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) TrailName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.TrailName }).(pulumi.StringOutput)
}

func (o GetTrailsDeprecatedTrailOutput) TrailRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsDeprecatedTrail) string { return v.TrailRegion }).(pulumi.StringOutput)
}

type GetTrailsDeprecatedTrailArrayOutput struct{ *pulumi.OutputState }

func (GetTrailsDeprecatedTrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsDeprecatedTrail)(nil)).Elem()
}

func (o GetTrailsDeprecatedTrailArrayOutput) ToGetTrailsDeprecatedTrailArrayOutput() GetTrailsDeprecatedTrailArrayOutput {
	return o
}

func (o GetTrailsDeprecatedTrailArrayOutput) ToGetTrailsDeprecatedTrailArrayOutputWithContext(ctx context.Context) GetTrailsDeprecatedTrailArrayOutput {
	return o
}

func (o GetTrailsDeprecatedTrailArrayOutput) Index(i pulumi.IntInput) GetTrailsDeprecatedTrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrailsDeprecatedTrail {
		return vs[0].([]GetTrailsDeprecatedTrail)[vs[1].(int)]
	}).(GetTrailsDeprecatedTrailOutput)
}

type GetTrailsTrail struct {
	// Indicates whether the event is a read or a write event.
	EventRw string `pulumi:"eventRw"`
	// The id of the ActionTrail Trail. It is the same as trail name.
	Id                  string `pulumi:"id"`
	IsOrganizationTrail bool   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    string `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn string `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn string `pulumi:"slsWriteRoleArn"`
	// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
	Status string `pulumi:"status"`
	// The name of the ActionTrail Trail.
	TrailName string `pulumi:"trailName"`
	// The regions to which the trail is applied.
	TrailRegion string `pulumi:"trailRegion"`
}

// GetTrailsTrailInput is an input type that accepts GetTrailsTrailArgs and GetTrailsTrailOutput values.
// You can construct a concrete instance of `GetTrailsTrailInput` via:
//
//          GetTrailsTrailArgs{...}
type GetTrailsTrailInput interface {
	pulumi.Input

	ToGetTrailsTrailOutput() GetTrailsTrailOutput
	ToGetTrailsTrailOutputWithContext(context.Context) GetTrailsTrailOutput
}

type GetTrailsTrailArgs struct {
	// Indicates whether the event is a read or a write event.
	EventRw pulumi.StringInput `pulumi:"eventRw"`
	// The id of the ActionTrail Trail. It is the same as trail name.
	Id                  pulumi.StringInput `pulumi:"id"`
	IsOrganizationTrail pulumi.BoolInput   `pulumi:"isOrganizationTrail"`
	// The name of the specified OSS bucket.
	OssBucketName pulumi.StringInput `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name.
	OssKeyPrefix    pulumi.StringInput `pulumi:"ossKeyPrefix"`
	OssWriteRoleArn pulumi.StringInput `pulumi:"ossWriteRoleArn"`
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringInput `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringInput `pulumi:"slsWriteRoleArn"`
	// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
	Status pulumi.StringInput `pulumi:"status"`
	// The name of the ActionTrail Trail.
	TrailName pulumi.StringInput `pulumi:"trailName"`
	// The regions to which the trail is applied.
	TrailRegion pulumi.StringInput `pulumi:"trailRegion"`
}

func (GetTrailsTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsTrail)(nil)).Elem()
}

func (i GetTrailsTrailArgs) ToGetTrailsTrailOutput() GetTrailsTrailOutput {
	return i.ToGetTrailsTrailOutputWithContext(context.Background())
}

func (i GetTrailsTrailArgs) ToGetTrailsTrailOutputWithContext(ctx context.Context) GetTrailsTrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsTrailOutput)
}

// GetTrailsTrailArrayInput is an input type that accepts GetTrailsTrailArray and GetTrailsTrailArrayOutput values.
// You can construct a concrete instance of `GetTrailsTrailArrayInput` via:
//
//          GetTrailsTrailArray{ GetTrailsTrailArgs{...} }
type GetTrailsTrailArrayInput interface {
	pulumi.Input

	ToGetTrailsTrailArrayOutput() GetTrailsTrailArrayOutput
	ToGetTrailsTrailArrayOutputWithContext(context.Context) GetTrailsTrailArrayOutput
}

type GetTrailsTrailArray []GetTrailsTrailInput

func (GetTrailsTrailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsTrail)(nil)).Elem()
}

func (i GetTrailsTrailArray) ToGetTrailsTrailArrayOutput() GetTrailsTrailArrayOutput {
	return i.ToGetTrailsTrailArrayOutputWithContext(context.Background())
}

func (i GetTrailsTrailArray) ToGetTrailsTrailArrayOutputWithContext(ctx context.Context) GetTrailsTrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrailsTrailArrayOutput)
}

type GetTrailsTrailOutput struct{ *pulumi.OutputState }

func (GetTrailsTrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrailsTrail)(nil)).Elem()
}

func (o GetTrailsTrailOutput) ToGetTrailsTrailOutput() GetTrailsTrailOutput {
	return o
}

func (o GetTrailsTrailOutput) ToGetTrailsTrailOutputWithContext(ctx context.Context) GetTrailsTrailOutput {
	return o
}

// Indicates whether the event is a read or a write event.
func (o GetTrailsTrailOutput) EventRw() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.EventRw }).(pulumi.StringOutput)
}

// The id of the ActionTrail Trail. It is the same as trail name.
func (o GetTrailsTrailOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrailsTrailOutput) IsOrganizationTrail() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrailsTrail) bool { return v.IsOrganizationTrail }).(pulumi.BoolOutput)
}

// The name of the specified OSS bucket.
func (o GetTrailsTrailOutput) OssBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.OssBucketName }).(pulumi.StringOutput)
}

// The prefix of the specified OSS bucket name.
func (o GetTrailsTrailOutput) OssKeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.OssKeyPrefix }).(pulumi.StringOutput)
}

func (o GetTrailsTrailOutput) OssWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.OssWriteRoleArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service project.
func (o GetTrailsTrailOutput) SlsProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.SlsProjectArn }).(pulumi.StringOutput)
}

// The unique ARN of the Log Service role.
func (o GetTrailsTrailOutput) SlsWriteRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.SlsWriteRoleArn }).(pulumi.StringOutput)
}

// Filter the results by status of the ActionTrail Trail. Valid values: `Disable`, `Enable`, `Fresh`.
func (o GetTrailsTrailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the ActionTrail Trail.
func (o GetTrailsTrailOutput) TrailName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.TrailName }).(pulumi.StringOutput)
}

// The regions to which the trail is applied.
func (o GetTrailsTrailOutput) TrailRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrailsTrail) string { return v.TrailRegion }).(pulumi.StringOutput)
}

type GetTrailsTrailArrayOutput struct{ *pulumi.OutputState }

func (GetTrailsTrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrailsTrail)(nil)).Elem()
}

func (o GetTrailsTrailArrayOutput) ToGetTrailsTrailArrayOutput() GetTrailsTrailArrayOutput {
	return o
}

func (o GetTrailsTrailArrayOutput) ToGetTrailsTrailArrayOutputWithContext(ctx context.Context) GetTrailsTrailArrayOutput {
	return o
}

func (o GetTrailsTrailArrayOutput) Index(i pulumi.IntInput) GetTrailsTrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrailsTrail {
		return vs[0].([]GetTrailsTrail)[vs[1].(int)]
	}).(GetTrailsTrailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetConsumerGroupsGroupInput)(nil)).Elem(), GetConsumerGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConsumerGroupsGroupArrayInput)(nil)).Elem(), GetConsumerGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHistoryDeliveryJobsJobInput)(nil)).Elem(), GetHistoryDeliveryJobsJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHistoryDeliveryJobsJobArrayInput)(nil)).Elem(), GetHistoryDeliveryJobsJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHistoryDeliveryJobsJobJobStatusInput)(nil)).Elem(), GetHistoryDeliveryJobsJobJobStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHistoryDeliveryJobsJobJobStatusArrayInput)(nil)).Elem(), GetHistoryDeliveryJobsJobJobStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListInput)(nil)).Elem(), GetInstancesInstanceAllowedListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListArrayInput)(nil)).Elem(), GetInstancesInstanceAllowedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListInternetListInput)(nil)).Elem(), GetInstancesInstanceAllowedListInternetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListInternetListArrayInput)(nil)).Elem(), GetInstancesInstanceAllowedListInternetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListVpcListInput)(nil)).Elem(), GetInstancesInstanceAllowedListVpcListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceAllowedListVpcListArrayInput)(nil)).Elem(), GetInstancesInstanceAllowedListVpcListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceUpgradeServiceDetailInfoInput)(nil)).Elem(), GetInstancesInstanceUpgradeServiceDetailInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceUpgradeServiceDetailInfoArrayInput)(nil)).Elem(), GetInstancesInstanceUpgradeServiceDetailInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSaslAclsAclInput)(nil)).Elem(), GetSaslAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSaslAclsAclArrayInput)(nil)).Elem(), GetSaslAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSaslUsersUserInput)(nil)).Elem(), GetSaslUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSaslUsersUserArrayInput)(nil)).Elem(), GetSaslUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicInput)(nil)).Elem(), GetTopicsTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicArrayInput)(nil)).Elem(), GetTopicsTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsActiontrailInput)(nil)).Elem(), GetTrailsActiontrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsActiontrailArrayInput)(nil)).Elem(), GetTrailsActiontrailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsDeprecatedActiontrailInput)(nil)).Elem(), GetTrailsDeprecatedActiontrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsDeprecatedActiontrailArrayInput)(nil)).Elem(), GetTrailsDeprecatedActiontrailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsDeprecatedTrailInput)(nil)).Elem(), GetTrailsDeprecatedTrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsDeprecatedTrailArrayInput)(nil)).Elem(), GetTrailsDeprecatedTrailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsTrailInput)(nil)).Elem(), GetTrailsTrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrailsTrailArrayInput)(nil)).Elem(), GetTrailsTrailArray{})
	pulumi.RegisterOutputType(GetConsumerGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetConsumerGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetHistoryDeliveryJobsJobOutput{})
	pulumi.RegisterOutputType(GetHistoryDeliveryJobsJobArrayOutput{})
	pulumi.RegisterOutputType(GetHistoryDeliveryJobsJobJobStatusOutput{})
	pulumi.RegisterOutputType(GetHistoryDeliveryJobsJobJobStatusArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListInternetListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListInternetListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListVpcListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceAllowedListVpcListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceUpgradeServiceDetailInfoOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceUpgradeServiceDetailInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSaslAclsAclOutput{})
	pulumi.RegisterOutputType(GetSaslAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetSaslUsersUserOutput{})
	pulumi.RegisterOutputType(GetSaslUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetTopicsTopicOutput{})
	pulumi.RegisterOutputType(GetTopicsTopicArrayOutput{})
	pulumi.RegisterOutputType(GetTrailsActiontrailOutput{})
	pulumi.RegisterOutputType(GetTrailsActiontrailArrayOutput{})
	pulumi.RegisterOutputType(GetTrailsDeprecatedActiontrailOutput{})
	pulumi.RegisterOutputType(GetTrailsDeprecatedActiontrailArrayOutput{})
	pulumi.RegisterOutputType(GetTrailsDeprecatedTrailOutput{})
	pulumi.RegisterOutputType(GetTrailsDeprecatedTrailArrayOutput{})
	pulumi.RegisterOutputType(GetTrailsTrailOutput{})
	pulumi.RegisterOutputType(GetTrailsTrailArrayOutput{})
}
