// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package actiontrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Alikafka Sasl Users of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.66.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/actiontrail"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/alikafka"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := alicloud.GetZones(ctx, &alicloud.GetZonesArgs{
//				AvailableResourceCreation: pulumi.StringRef("VSwitch"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("10.4.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.String(name),
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("10.4.0.0/24"),
//				ZoneId:      pulumi.String(_default.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultInstance, err := alikafka.NewInstance(ctx, "default", &alikafka.InstanceArgs{
//				Name:           pulumi.String(name),
//				PartitionNum:   pulumi.Int(50),
//				DiskType:       pulumi.Int(1),
//				DiskSize:       pulumi.Int(500),
//				DeployType:     pulumi.Int(5),
//				IoMax:          pulumi.Int(20),
//				SpecType:       pulumi.String("professional"),
//				ServiceVersion: pulumi.String("2.2.0"),
//				VswitchId:      defaultSwitch.ID(),
//				SecurityGroup:  defaultSecurityGroup.ID(),
//				Config:         pulumi.String("  {\n    \\\"enable.acl\\\": \\\"true\\\"\n  }\n"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSaslUser, err := alikafka.NewSaslUser(ctx, "default", &alikafka.SaslUserArgs{
//				InstanceId: defaultInstance.ID(),
//				Username:   pulumi.String(name),
//				Password:   pulumi.String("YourPassword1234!"),
//			})
//			if err != nil {
//				return err
//			}
//			ids := actiontrail.GetSaslUsersOutput(ctx, actiontrail.GetSaslUsersOutputArgs{
//				Ids: pulumi.StringArray{
//					defaultSaslUser.ID(),
//				},
//				InstanceId: defaultSaslUser.InstanceId,
//			}, nil)
//			ctx.Export("alikafkaSaslUsersId0", ids.ApplyT(func(ids actiontrail.GetSaslUsersResult) (*string, error) {
//				return &ids.Users[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetSaslUsers(ctx *pulumi.Context, args *GetSaslUsersArgs, opts ...pulumi.InvokeOption) (*GetSaslUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSaslUsersResult
	err := ctx.Invoke("alicloud:actiontrail/getSaslUsers:getSaslUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSaslUsers.
type GetSaslUsersArgs struct {
	// A list of Sasl User IDs.
	Ids []string `pulumi:"ids"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by Sasl User name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getSaslUsers.
type GetSaslUsersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	InstanceId string   `pulumi:"instanceId"`
	NameRegex  *string  `pulumi:"nameRegex"`
	// A list of Sasl User names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Sasl Users. Each element contains the following attributes:
	Users []GetSaslUsersUser `pulumi:"users"`
}

func GetSaslUsersOutput(ctx *pulumi.Context, args GetSaslUsersOutputArgs, opts ...pulumi.InvokeOption) GetSaslUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSaslUsersResultOutput, error) {
			args := v.(GetSaslUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:actiontrail/getSaslUsers:getSaslUsers", args, GetSaslUsersResultOutput{}, options).(GetSaslUsersResultOutput), nil
		}).(GetSaslUsersResultOutput)
}

// A collection of arguments for invoking getSaslUsers.
type GetSaslUsersOutputArgs struct {
	// A list of Sasl User IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A regex string to filter results by Sasl User name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetSaslUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslUsersArgs)(nil)).Elem()
}

// A collection of values returned by getSaslUsers.
type GetSaslUsersResultOutput struct{ *pulumi.OutputState }

func (GetSaslUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSaslUsersResult)(nil)).Elem()
}

func (o GetSaslUsersResultOutput) ToGetSaslUsersResultOutput() GetSaslUsersResultOutput {
	return o
}

func (o GetSaslUsersResultOutput) ToGetSaslUsersResultOutputWithContext(ctx context.Context) GetSaslUsersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSaslUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSaslUsersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSaslUsersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSaslUsersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSaslUsersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetSaslUsersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSaslUsersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Sasl User names.
func (o GetSaslUsersResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSaslUsersResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSaslUsersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSaslUsersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Sasl Users. Each element contains the following attributes:
func (o GetSaslUsersResultOutput) Users() GetSaslUsersUserArrayOutput {
	return o.ApplyT(func(v GetSaslUsersResult) []GetSaslUsersUser { return v.Users }).(GetSaslUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSaslUsersResultOutput{})
}
