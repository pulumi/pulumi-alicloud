// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Elastic Cloud Phone (ECP) Instance resource.
//
// For information about Elastic Cloud Phone (ECP) Instance and how to use it, see [What is Instance](https://next.api.aliyun.com/document/cloudphone/2020-12-30/RunInstances).
//
// > **NOTE:** Available since v1.158.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecp"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := ecp.GetZones(ctx, &ecp.GetZonesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceTypes, err := ecp.GetInstanceTypes(ctx, &ecp.GetInstanceTypesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultNetwork, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
//				CidrBlock: pulumi.String("192.168.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSwitch, err := vpc.NewSwitch(ctx, "default", &vpc.SwitchArgs{
//				VswitchName: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
//				VpcId:       defaultNetwork.ID(),
//				CidrBlock:   pulumi.String("192.168.192.0/24"),
//				ZoneId:      pulumi.String(_default.Zones[0].ZoneId),
//			})
//			if err != nil {
//				return err
//			}
//			defaultSecurityGroup, err := ecs.NewSecurityGroup(ctx, "default", &ecs.SecurityGroupArgs{
//				Name:  pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
//				VpcId: defaultNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			defaultKeyPair, err := ecp.NewKeyPair(ctx, "default", &ecp.KeyPairArgs{
//				KeyPairName:   pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
//				PublicKeyBody: pulumi.String("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecp.NewInstance(ctx, "default", &ecp.InstanceArgs{
//				InstanceType:    pulumi.String(defaultGetInstanceTypes.InstanceTypes[0].InstanceType),
//				ImageId:         pulumi.String("android-image-release5501072_a11_20240530.raw"),
//				VswitchId:       defaultSwitch.ID(),
//				SecurityGroupId: defaultSecurityGroup.ID(),
//				KeyPairName:     defaultKeyPair.KeyPairName,
//				VncPassword:     pulumi.String("Ecp123"),
//				PaymentType:     pulumi.String("PayAsYouGo"),
//				InstanceName:    pulumi.String(name),
//				Description:     pulumi.String(name),
//				Force:           pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Elastic Cloud Phone (ECP) Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:ecp/instance:Instance example <id>
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Specifies whether to enable the auto-payment feature. Valid values:
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// Specifies whether to enable the auto-renewal feature. Valid values:
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
	EipBandwidth pulumi.IntPtrOutput `pulumi:"eipBandwidth"`
	// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The ID of the image.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The specifications of the ECP instance.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The name of the key pair that you want to use to connect to the instance.
	KeyPairName pulumi.StringPtrOutput `pulumi:"keyPairName"`
	// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// The subscription duration. Default value: `1`. Valid values:
	// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
	// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
	Resolution pulumi.StringOutput `pulumi:"resolution"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// The status of the Instance. Valid values: `Running`, `Stopped`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
	VncPassword pulumi.StringPtrOutput `pulumi:"vncPassword"`
	// The ID of the vSwitch.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	if args.VncPassword != nil {
		args.VncPassword = pulumi.ToSecret(args.VncPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"vncPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("alicloud:ecp/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("alicloud:ecp/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Specifies whether to enable the auto-payment feature. Valid values:
	AutoPay *bool `pulumi:"autoPay"`
	// Specifies whether to enable the auto-renewal feature. Valid values:
	AutoRenew *bool `pulumi:"autoRenew"`
	// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
	EipBandwidth *int `pulumi:"eipBandwidth"`
	// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
	Force *bool `pulumi:"force"`
	// The ID of the image.
	ImageId *string `pulumi:"imageId"`
	// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	InstanceName *string `pulumi:"instanceName"`
	// The specifications of the ECP instance.
	InstanceType *string `pulumi:"instanceType"`
	// The name of the key pair that you want to use to connect to the instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
	PaymentType *string `pulumi:"paymentType"`
	// The subscription duration. Default value: `1`. Valid values:
	// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
	// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
	Period *string `pulumi:"period"`
	// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
	Resolution *string `pulumi:"resolution"`
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The status of the Instance. Valid values: `Running`, `Stopped`.
	Status *string `pulumi:"status"`
	// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
	VncPassword *string `pulumi:"vncPassword"`
	// The ID of the vSwitch.
	VswitchId *string `pulumi:"vswitchId"`
}

type InstanceState struct {
	// Specifies whether to enable the auto-payment feature. Valid values:
	AutoPay pulumi.BoolPtrInput
	// Specifies whether to enable the auto-renewal feature. Valid values:
	AutoRenew pulumi.BoolPtrInput
	// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
	EipBandwidth pulumi.IntPtrInput
	// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
	Force pulumi.BoolPtrInput
	// The ID of the image.
	ImageId pulumi.StringPtrInput
	// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	InstanceName pulumi.StringPtrInput
	// The specifications of the ECP instance.
	InstanceType pulumi.StringPtrInput
	// The name of the key pair that you want to use to connect to the instance.
	KeyPairName pulumi.StringPtrInput
	// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
	PaymentType pulumi.StringPtrInput
	// The subscription duration. Default value: `1`. Valid values:
	// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
	// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
	Period pulumi.StringPtrInput
	// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
	PeriodUnit pulumi.StringPtrInput
	// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
	Resolution pulumi.StringPtrInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput
	// The status of the Instance. Valid values: `Running`, `Stopped`.
	Status pulumi.StringPtrInput
	// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
	VncPassword pulumi.StringPtrInput
	// The ID of the vSwitch.
	VswitchId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Specifies whether to enable the auto-payment feature. Valid values:
	AutoPay *bool `pulumi:"autoPay"`
	// Specifies whether to enable the auto-renewal feature. Valid values:
	AutoRenew *bool `pulumi:"autoRenew"`
	// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description *string `pulumi:"description"`
	// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
	EipBandwidth *int `pulumi:"eipBandwidth"`
	// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
	Force *bool `pulumi:"force"`
	// The ID of the image.
	ImageId string `pulumi:"imageId"`
	// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	InstanceName *string `pulumi:"instanceName"`
	// The specifications of the ECP instance.
	InstanceType string `pulumi:"instanceType"`
	// The name of the key pair that you want to use to connect to the instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
	PaymentType *string `pulumi:"paymentType"`
	// The subscription duration. Default value: `1`. Valid values:
	// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
	// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
	Period *string `pulumi:"period"`
	// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
	Resolution *string `pulumi:"resolution"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The status of the Instance. Valid values: `Running`, `Stopped`.
	Status *string `pulumi:"status"`
	// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
	VncPassword *string `pulumi:"vncPassword"`
	// The ID of the vSwitch.
	VswitchId string `pulumi:"vswitchId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Specifies whether to enable the auto-payment feature. Valid values:
	AutoPay pulumi.BoolPtrInput
	// Specifies whether to enable the auto-renewal feature. Valid values:
	AutoRenew pulumi.BoolPtrInput
	// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
	Description pulumi.StringPtrInput
	// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
	EipBandwidth pulumi.IntPtrInput
	// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
	Force pulumi.BoolPtrInput
	// The ID of the image.
	ImageId pulumi.StringInput
	// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	InstanceName pulumi.StringPtrInput
	// The specifications of the ECP instance.
	InstanceType pulumi.StringInput
	// The name of the key pair that you want to use to connect to the instance.
	KeyPairName pulumi.StringPtrInput
	// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
	PaymentType pulumi.StringPtrInput
	// The subscription duration. Default value: `1`. Valid values:
	// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
	// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
	Period pulumi.StringPtrInput
	// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
	PeriodUnit pulumi.StringPtrInput
	// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
	Resolution pulumi.StringPtrInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput
	// The status of the Instance. Valid values: `Running`, `Stopped`.
	Status pulumi.StringPtrInput
	// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
	VncPassword pulumi.StringPtrInput
	// The ID of the vSwitch.
	VswitchId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Specifies whether to enable the auto-payment feature. Valid values:
func (o InstanceOutput) AutoPay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoPay }).(pulumi.BoolPtrOutput)
}

// Specifies whether to enable the auto-renewal feature. Valid values:
func (o InstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The description of the ECP instance. The description must be `2` to `256` characters in length and cannot start with `http://` or `https://`.
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The bandwidth of the elastic IP address (EIP). **NOTE:** From version 1.232.0, `eipBandwidth` cannot be modified.
func (o InstanceOutput) EipBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.EipBandwidth }).(pulumi.IntPtrOutput)
}

// Specifies whether to forcefully stop and release the instance. Default value: `false`. Valid values:
func (o InstanceOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.Force }).(pulumi.BoolPtrOutput)
}

// The ID of the image.
func (o InstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the ECP instance. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The specifications of the ECP instance.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The name of the key pair that you want to use to connect to the instance.
func (o InstanceOutput) KeyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.KeyPairName }).(pulumi.StringPtrOutput)
}

// The billing method of the ECP instance. Default value: `PayAsYouGo`. Valid values: `PayAsYouGo`,`Subscription`. **NOTE:** From version 1.232.0, `paymentType` cannot be modified.
func (o InstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// The subscription duration. Default value: `1`. Valid values:
// - If `periodUnit` is set to `Month`. Valid values: `1`, `2`, `3`, and `6`.
// - If `periodUnit` is set to `Year`. Valid values: `1` to `5`.
func (o InstanceOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Period }).(pulumi.StringPtrOutput)
}

// The unit of the subscription duration. Default value: `Month`. Valid values: `Month`, `Year`.
func (o InstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The resolution that you want to select for the ECP instance. **NOTE:** From version 1.232.0, `resolution` can be modified.
func (o InstanceOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Resolution }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o InstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The status of the Instance. Valid values: `Running`, `Stopped`.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The VNC password of the instance. The password must be `6` characters in length and can contain only uppercase letters, lowercase letters, and digits.
func (o InstanceOutput) VncPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.VncPassword }).(pulumi.StringPtrOutput)
}

// The ID of the vSwitch.
func (o InstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
