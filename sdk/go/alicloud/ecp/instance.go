// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Elastic Cloud Phone (ECP) Instance resource.
//
// For information about Elastic Cloud Phone (ECP) Instance and how to use it,
// see [What is Instance](https://help.aliyun.com/document_detail/258178.html/).
//
// > **NOTE:** Available in v1.158.0+.
//
// ## Import
//
// Elastic Cloud Phone (ECP) Instance can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:ecp/instance:Instance example <id>
// ```
type Instance struct {
	pulumi.CustomResourceState

	// The auto pay.
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// The auto renew.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// Description of the instance. 2 to 256 English or Chinese characters in length and cannot
	// start with `http://` and `https`.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The eip bandwidth.
	EipBandwidth pulumi.IntPtrOutput `pulumi:"eipBandwidth"`
	// The force.
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The ID Of The Image.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// Instance Type.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The name of the key pair of the mobile phone instance.
	KeyPairName pulumi.StringPtrOutput `pulumi:"keyPairName"`
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType pulumi.StringPtrOutput `pulumi:"paymentType"`
	// The period. It is valid when `periodUnit` is 'Year'. Valid value: `1`, `2`, `3`, `4`, `5`. It
	// is valid when `periodUnit` is 'Month'. Valid value: `1`, `2`, `3`, `5`
	Period pulumi.StringPtrOutput `pulumi:"period"`
	// The duration unit that you will buy the resource. Valid value: `Year`,`Month`. Default
	// to `Month`.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The selected resolution for the cloud mobile phone instance.
	Resolution pulumi.StringOutput `pulumi:"resolution"`
	// The ID of the security group. The security group is the same as that of the
	// ECS instance.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Instance status. Valid values: `Running`, `Stopped`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Cloud mobile phone VNC password. The password must be six characters in length and must
	// contain only uppercase, lowercase English letters and Arabic numerals.
	VncPassword pulumi.StringPtrOutput `pulumi:"vncPassword"`
	// The vswitch id.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	var resource Instance
	err := ctx.RegisterResource("alicloud:ecp/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("alicloud:ecp/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// The auto pay.
	AutoPay *bool `pulumi:"autoPay"`
	// The auto renew.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Description of the instance. 2 to 256 English or Chinese characters in length and cannot
	// start with `http://` and `https`.
	Description *string `pulumi:"description"`
	// The eip bandwidth.
	EipBandwidth *int `pulumi:"eipBandwidth"`
	// The force.
	Force *bool `pulumi:"force"`
	// The ID Of The Image.
	ImageId *string `pulumi:"imageId"`
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName *string `pulumi:"instanceName"`
	// Instance Type.
	InstanceType *string `pulumi:"instanceType"`
	// The name of the key pair of the mobile phone instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType *string `pulumi:"paymentType"`
	// The period. It is valid when `periodUnit` is 'Year'. Valid value: `1`, `2`, `3`, `4`, `5`. It
	// is valid when `periodUnit` is 'Month'. Valid value: `1`, `2`, `3`, `5`
	Period *string `pulumi:"period"`
	// The duration unit that you will buy the resource. Valid value: `Year`,`Month`. Default
	// to `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The selected resolution for the cloud mobile phone instance.
	Resolution *string `pulumi:"resolution"`
	// The ID of the security group. The security group is the same as that of the
	// ECS instance.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Instance status. Valid values: `Running`, `Stopped`.
	Status *string `pulumi:"status"`
	// Cloud mobile phone VNC password. The password must be six characters in length and must
	// contain only uppercase, lowercase English letters and Arabic numerals.
	VncPassword *string `pulumi:"vncPassword"`
	// The vswitch id.
	VswitchId *string `pulumi:"vswitchId"`
}

type InstanceState struct {
	// The auto pay.
	AutoPay pulumi.BoolPtrInput
	// The auto renew.
	AutoRenew pulumi.BoolPtrInput
	// Description of the instance. 2 to 256 English or Chinese characters in length and cannot
	// start with `http://` and `https`.
	Description pulumi.StringPtrInput
	// The eip bandwidth.
	EipBandwidth pulumi.IntPtrInput
	// The force.
	Force pulumi.BoolPtrInput
	// The ID Of The Image.
	ImageId pulumi.StringPtrInput
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName pulumi.StringPtrInput
	// Instance Type.
	InstanceType pulumi.StringPtrInput
	// The name of the key pair of the mobile phone instance.
	KeyPairName pulumi.StringPtrInput
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType pulumi.StringPtrInput
	// The period. It is valid when `periodUnit` is 'Year'. Valid value: `1`, `2`, `3`, `4`, `5`. It
	// is valid when `periodUnit` is 'Month'. Valid value: `1`, `2`, `3`, `5`
	Period pulumi.StringPtrInput
	// The duration unit that you will buy the resource. Valid value: `Year`,`Month`. Default
	// to `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The selected resolution for the cloud mobile phone instance.
	Resolution pulumi.StringPtrInput
	// The ID of the security group. The security group is the same as that of the
	// ECS instance.
	SecurityGroupId pulumi.StringPtrInput
	// Instance status. Valid values: `Running`, `Stopped`.
	Status pulumi.StringPtrInput
	// Cloud mobile phone VNC password. The password must be six characters in length and must
	// contain only uppercase, lowercase English letters and Arabic numerals.
	VncPassword pulumi.StringPtrInput
	// The vswitch id.
	VswitchId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// The auto pay.
	AutoPay *bool `pulumi:"autoPay"`
	// The auto renew.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Description of the instance. 2 to 256 English or Chinese characters in length and cannot
	// start with `http://` and `https`.
	Description *string `pulumi:"description"`
	// The eip bandwidth.
	EipBandwidth *int `pulumi:"eipBandwidth"`
	// The force.
	Force *bool `pulumi:"force"`
	// The ID Of The Image.
	ImageId string `pulumi:"imageId"`
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName *string `pulumi:"instanceName"`
	// Instance Type.
	InstanceType string `pulumi:"instanceType"`
	// The name of the key pair of the mobile phone instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType *string `pulumi:"paymentType"`
	// The period. It is valid when `periodUnit` is 'Year'. Valid value: `1`, `2`, `3`, `4`, `5`. It
	// is valid when `periodUnit` is 'Month'. Valid value: `1`, `2`, `3`, `5`
	Period *string `pulumi:"period"`
	// The duration unit that you will buy the resource. Valid value: `Year`,`Month`. Default
	// to `Month`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The selected resolution for the cloud mobile phone instance.
	Resolution *string `pulumi:"resolution"`
	// The ID of the security group. The security group is the same as that of the
	// ECS instance.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Instance status. Valid values: `Running`, `Stopped`.
	Status *string `pulumi:"status"`
	// Cloud mobile phone VNC password. The password must be six characters in length and must
	// contain only uppercase, lowercase English letters and Arabic numerals.
	VncPassword *string `pulumi:"vncPassword"`
	// The vswitch id.
	VswitchId string `pulumi:"vswitchId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The auto pay.
	AutoPay pulumi.BoolPtrInput
	// The auto renew.
	AutoRenew pulumi.BoolPtrInput
	// Description of the instance. 2 to 256 English or Chinese characters in length and cannot
	// start with `http://` and `https`.
	Description pulumi.StringPtrInput
	// The eip bandwidth.
	EipBandwidth pulumi.IntPtrInput
	// The force.
	Force pulumi.BoolPtrInput
	// The ID Of The Image.
	ImageId pulumi.StringInput
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName pulumi.StringPtrInput
	// Instance Type.
	InstanceType pulumi.StringInput
	// The name of the key pair of the mobile phone instance.
	KeyPairName pulumi.StringPtrInput
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType pulumi.StringPtrInput
	// The period. It is valid when `periodUnit` is 'Year'. Valid value: `1`, `2`, `3`, `4`, `5`. It
	// is valid when `periodUnit` is 'Month'. Valid value: `1`, `2`, `3`, `5`
	Period pulumi.StringPtrInput
	// The duration unit that you will buy the resource. Valid value: `Year`,`Month`. Default
	// to `Month`.
	PeriodUnit pulumi.StringPtrInput
	// The selected resolution for the cloud mobile phone instance.
	Resolution pulumi.StringPtrInput
	// The ID of the security group. The security group is the same as that of the
	// ECS instance.
	SecurityGroupId pulumi.StringInput
	// Instance status. Valid values: `Running`, `Stopped`.
	Status pulumi.StringPtrInput
	// Cloud mobile phone VNC password. The password must be six characters in length and must
	// contain only uppercase, lowercase English letters and Arabic numerals.
	VncPassword pulumi.StringPtrInput
	// The vswitch id.
	VswitchId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//          InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//          InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
