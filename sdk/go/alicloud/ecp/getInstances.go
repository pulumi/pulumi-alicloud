// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecp Instances of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.158.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecp"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := ecp.GetZones(ctx, &ecp.GetZonesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetInstanceTypes, err := ecp.GetInstanceTypes(ctx, &ecp.GetInstanceTypesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			countSize := len(_default.Zones)
//			zoneId := _default.Zones[countSize-1].ZoneId
//			instanceTypeCountSize := len(defaultGetInstanceTypes.InstanceTypes)
//			_ := defaultGetInstanceTypes.InstanceTypes[instanceTypeCountSize-1].InstanceType
//			defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("default-NODELETING"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetSwitches, err := vpc.GetSwitches(ctx, &vpc.GetSwitchesArgs{
//				VpcId:  pulumi.StringRef(defaultGetNetworks.Ids[0]),
//				ZoneId: pulumi.StringRef(zoneId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewSecurityGroup(ctx, "group", &ecs.SecurityGroupArgs{
//				Name:  pulumi.Any(name),
//				VpcId: pulumi.String(defaultGetNetworks.Ids[0]),
//			})
//			if err != nil {
//				return err
//			}
//			defaultKeyPair, err := ecp.NewKeyPair(ctx, "default", &ecp.KeyPairArgs{
//				KeyPairName:   pulumi.Any(name),
//				PublicKeyBody: pulumi.String("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecp.NewInstance(ctx, "default", &ecp.InstanceArgs{
//				InstanceName: pulumi.Any(name),
//				Description:  pulumi.Any(name),
//				Force:        pulumi.Bool(true),
//				KeyPairName:  defaultKeyPair.KeyPairName,
//				VswitchId:    pulumi.String(defaultGetSwitches.Ids[0]),
//				ImageId:      pulumi.String("android_9_0_0_release_2851157_20211201.vhd"),
//				InstanceType: pulumi.String(defaultGetInstanceTypes.InstanceTypes[instanceTypeCountSize-1].InstanceType),
//				PaymentType:  pulumi.String("PayAsYouGo"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstancesResult
	err := ctx.Invoke("alicloud:ecp/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Ecp Instances IDs.
	Ids []string `pulumi:"ids"`
	// The ID Of The Image.
	ImageId *string `pulumi:"imageId"`
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName *string `pulumi:"instanceName"`
	// Instance Type.
	InstanceType *string `pulumi:"instanceType"`
	// The name of the key pair of the mobile phone instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// A regex string to filter results by mobile phone name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType *string `pulumi:"paymentType"`
	// The selected resolution for the cloud mobile phone instance.
	Resolution *string `pulumi:"resolution"`
	// Instance status. Valid values: `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`
	// .
	Status *string `pulumi:"status"`
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                 `pulumi:"id"`
	Ids          []string               `pulumi:"ids"`
	ImageId      *string                `pulumi:"imageId"`
	InstanceName *string                `pulumi:"instanceName"`
	InstanceType *string                `pulumi:"instanceType"`
	Instances    []GetInstancesInstance `pulumi:"instances"`
	KeyPairName  *string                `pulumi:"keyPairName"`
	NameRegex    *string                `pulumi:"nameRegex"`
	Names        []string               `pulumi:"names"`
	OutputFile   *string                `pulumi:"outputFile"`
	PaymentType  *string                `pulumi:"paymentType"`
	Resolution   *string                `pulumi:"resolution"`
	Status       *string                `pulumi:"status"`
	ZoneId       *string                `pulumi:"zoneId"`
}

func GetInstancesOutput(ctx *pulumi.Context, args GetInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstancesResultOutput, error) {
			args := v.(GetInstancesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetInstancesResult
			secret, err := ctx.InvokePackageRaw("alicloud:ecp/getInstances:getInstances", args, &rv, "", opts...)
			if err != nil {
				return GetInstancesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetInstancesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetInstancesResultOutput), nil
			}
			return output, nil
		}).(GetInstancesResultOutput)
}

// A collection of arguments for invoking getInstances.
type GetInstancesOutputArgs struct {
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Ecp Instances IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The ID Of The Image.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The name of the instance. It must be 2 to 128 characters in length and must start with an
	// uppercase letter or Chinese. It cannot start with http:// or https. It can contain Chinese, English, numbers,
	// half-width colons (:), underscores (_), half-width periods (.), or dashes (-). The default value is the InstanceId of
	// the instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Instance Type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The name of the key pair of the mobile phone instance.
	KeyPairName pulumi.StringPtrInput `pulumi:"keyPairName"`
	// A regex string to filter results by mobile phone name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The payment type.Valid values: `PayAsYouGo`,`Subscription`
	PaymentType pulumi.StringPtrInput `pulumi:"paymentType"`
	// The selected resolution for the cloud mobile phone instance.
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// Instance status. Valid values: `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`
	// .
	Status pulumi.StringPtrInput `pulumi:"status"`
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getInstances.
type GetInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesResult)(nil)).Elem()
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutput() GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutputWithContext(ctx context.Context) GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstancesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetInstancesResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) Instances() GetInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesInstance { return v.Instances }).(GetInstancesInstanceArrayOutput)
}

func (o GetInstancesResultOutput) KeyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.KeyPairName }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) PaymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.PaymentType }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesResultOutput{})
}
