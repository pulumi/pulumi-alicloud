// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type K8sSlbAttachmentSlbConfig struct {
	// The name of this SLB configuration, empty for auto-generated by EDAS server.
	Name *string `pulumi:"name"`
	// The port configuration for SLB instance, which is supported for multiple configurations. See `portMappings` below.
	PortMappings []K8sSlbAttachmentSlbConfigPortMapping `pulumi:"portMappings"`
	// The scheduler policy of SLB configuration, values can be 'rr'(round-robin) or 'wrr'(weighted round-robin).
	Scheduler string `pulumi:"scheduler"`
	// The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with 'specification' field.
	SlbId *string `pulumi:"slbId"`
	// The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for 'slb.s1.small'.
	Specification *string `pulumi:"specification"`
	// The type of SLB instance, values can be 'internet' or 'intranet'.
	Type string `pulumi:"type"`
}

// K8sSlbAttachmentSlbConfigInput is an input type that accepts K8sSlbAttachmentSlbConfigArgs and K8sSlbAttachmentSlbConfigOutput values.
// You can construct a concrete instance of `K8sSlbAttachmentSlbConfigInput` via:
//
//	K8sSlbAttachmentSlbConfigArgs{...}
type K8sSlbAttachmentSlbConfigInput interface {
	pulumi.Input

	ToK8sSlbAttachmentSlbConfigOutput() K8sSlbAttachmentSlbConfigOutput
	ToK8sSlbAttachmentSlbConfigOutputWithContext(context.Context) K8sSlbAttachmentSlbConfigOutput
}

type K8sSlbAttachmentSlbConfigArgs struct {
	// The name of this SLB configuration, empty for auto-generated by EDAS server.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port configuration for SLB instance, which is supported for multiple configurations. See `portMappings` below.
	PortMappings K8sSlbAttachmentSlbConfigPortMappingArrayInput `pulumi:"portMappings"`
	// The scheduler policy of SLB configuration, values can be 'rr'(round-robin) or 'wrr'(weighted round-robin).
	Scheduler pulumi.StringInput `pulumi:"scheduler"`
	// The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with 'specification' field.
	SlbId pulumi.StringPtrInput `pulumi:"slbId"`
	// The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for 'slb.s1.small'.
	Specification pulumi.StringPtrInput `pulumi:"specification"`
	// The type of SLB instance, values can be 'internet' or 'intranet'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (K8sSlbAttachmentSlbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfig)(nil)).Elem()
}

func (i K8sSlbAttachmentSlbConfigArgs) ToK8sSlbAttachmentSlbConfigOutput() K8sSlbAttachmentSlbConfigOutput {
	return i.ToK8sSlbAttachmentSlbConfigOutputWithContext(context.Background())
}

func (i K8sSlbAttachmentSlbConfigArgs) ToK8sSlbAttachmentSlbConfigOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSlbAttachmentSlbConfigOutput)
}

// K8sSlbAttachmentSlbConfigArrayInput is an input type that accepts K8sSlbAttachmentSlbConfigArray and K8sSlbAttachmentSlbConfigArrayOutput values.
// You can construct a concrete instance of `K8sSlbAttachmentSlbConfigArrayInput` via:
//
//	K8sSlbAttachmentSlbConfigArray{ K8sSlbAttachmentSlbConfigArgs{...} }
type K8sSlbAttachmentSlbConfigArrayInput interface {
	pulumi.Input

	ToK8sSlbAttachmentSlbConfigArrayOutput() K8sSlbAttachmentSlbConfigArrayOutput
	ToK8sSlbAttachmentSlbConfigArrayOutputWithContext(context.Context) K8sSlbAttachmentSlbConfigArrayOutput
}

type K8sSlbAttachmentSlbConfigArray []K8sSlbAttachmentSlbConfigInput

func (K8sSlbAttachmentSlbConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sSlbAttachmentSlbConfig)(nil)).Elem()
}

func (i K8sSlbAttachmentSlbConfigArray) ToK8sSlbAttachmentSlbConfigArrayOutput() K8sSlbAttachmentSlbConfigArrayOutput {
	return i.ToK8sSlbAttachmentSlbConfigArrayOutputWithContext(context.Background())
}

func (i K8sSlbAttachmentSlbConfigArray) ToK8sSlbAttachmentSlbConfigArrayOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSlbAttachmentSlbConfigArrayOutput)
}

type K8sSlbAttachmentSlbConfigOutput struct{ *pulumi.OutputState }

func (K8sSlbAttachmentSlbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfig)(nil)).Elem()
}

func (o K8sSlbAttachmentSlbConfigOutput) ToK8sSlbAttachmentSlbConfigOutput() K8sSlbAttachmentSlbConfigOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigOutput) ToK8sSlbAttachmentSlbConfigOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigOutput {
	return o
}

// The name of this SLB configuration, empty for auto-generated by EDAS server.
func (o K8sSlbAttachmentSlbConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port configuration for SLB instance, which is supported for multiple configurations. See `portMappings` below.
func (o K8sSlbAttachmentSlbConfigOutput) PortMappings() K8sSlbAttachmentSlbConfigPortMappingArrayOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) []K8sSlbAttachmentSlbConfigPortMapping { return v.PortMappings }).(K8sSlbAttachmentSlbConfigPortMappingArrayOutput)
}

// The scheduler policy of SLB configuration, values can be 'rr'(round-robin) or 'wrr'(weighted round-robin).
func (o K8sSlbAttachmentSlbConfigOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) string { return v.Scheduler }).(pulumi.StringOutput)
}

// The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with 'specification' field.
func (o K8sSlbAttachmentSlbConfigOutput) SlbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) *string { return v.SlbId }).(pulumi.StringPtrOutput)
}

// The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for 'slb.s1.small'.
func (o K8sSlbAttachmentSlbConfigOutput) Specification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) *string { return v.Specification }).(pulumi.StringPtrOutput)
}

// The type of SLB instance, values can be 'internet' or 'intranet'.
func (o K8sSlbAttachmentSlbConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfig) string { return v.Type }).(pulumi.StringOutput)
}

type K8sSlbAttachmentSlbConfigArrayOutput struct{ *pulumi.OutputState }

func (K8sSlbAttachmentSlbConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sSlbAttachmentSlbConfig)(nil)).Elem()
}

func (o K8sSlbAttachmentSlbConfigArrayOutput) ToK8sSlbAttachmentSlbConfigArrayOutput() K8sSlbAttachmentSlbConfigArrayOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigArrayOutput) ToK8sSlbAttachmentSlbConfigArrayOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigArrayOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigArrayOutput) Index(i pulumi.IntInput) K8sSlbAttachmentSlbConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) K8sSlbAttachmentSlbConfig {
		return vs[0].([]K8sSlbAttachmentSlbConfig)[vs[1].(int)]
	}).(K8sSlbAttachmentSlbConfigOutput)
}

type K8sSlbAttachmentSlbConfigPortMapping struct {
	// The ID of your tls certification, this is used for 'HTTPS' protocol only.
	CertId *string `pulumi:"certId"`
	// The protocol of SLB instance configuration, values can be 'TCP', 'HTTP' or 'HTTPS'.
	LoadbalancerProtocol string `pulumi:"loadbalancerProtocol"`
	// The backend k8s service configuration for SLB instance, which is supported for multiple configurations. See `servicePort` below.
	ServicePort K8sSlbAttachmentSlbConfigPortMappingServicePort `pulumi:"servicePort"`
}

// K8sSlbAttachmentSlbConfigPortMappingInput is an input type that accepts K8sSlbAttachmentSlbConfigPortMappingArgs and K8sSlbAttachmentSlbConfigPortMappingOutput values.
// You can construct a concrete instance of `K8sSlbAttachmentSlbConfigPortMappingInput` via:
//
//	K8sSlbAttachmentSlbConfigPortMappingArgs{...}
type K8sSlbAttachmentSlbConfigPortMappingInput interface {
	pulumi.Input

	ToK8sSlbAttachmentSlbConfigPortMappingOutput() K8sSlbAttachmentSlbConfigPortMappingOutput
	ToK8sSlbAttachmentSlbConfigPortMappingOutputWithContext(context.Context) K8sSlbAttachmentSlbConfigPortMappingOutput
}

type K8sSlbAttachmentSlbConfigPortMappingArgs struct {
	// The ID of your tls certification, this is used for 'HTTPS' protocol only.
	CertId pulumi.StringPtrInput `pulumi:"certId"`
	// The protocol of SLB instance configuration, values can be 'TCP', 'HTTP' or 'HTTPS'.
	LoadbalancerProtocol pulumi.StringInput `pulumi:"loadbalancerProtocol"`
	// The backend k8s service configuration for SLB instance, which is supported for multiple configurations. See `servicePort` below.
	ServicePort K8sSlbAttachmentSlbConfigPortMappingServicePortInput `pulumi:"servicePort"`
}

func (K8sSlbAttachmentSlbConfigPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMapping)(nil)).Elem()
}

func (i K8sSlbAttachmentSlbConfigPortMappingArgs) ToK8sSlbAttachmentSlbConfigPortMappingOutput() K8sSlbAttachmentSlbConfigPortMappingOutput {
	return i.ToK8sSlbAttachmentSlbConfigPortMappingOutputWithContext(context.Background())
}

func (i K8sSlbAttachmentSlbConfigPortMappingArgs) ToK8sSlbAttachmentSlbConfigPortMappingOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSlbAttachmentSlbConfigPortMappingOutput)
}

// K8sSlbAttachmentSlbConfigPortMappingArrayInput is an input type that accepts K8sSlbAttachmentSlbConfigPortMappingArray and K8sSlbAttachmentSlbConfigPortMappingArrayOutput values.
// You can construct a concrete instance of `K8sSlbAttachmentSlbConfigPortMappingArrayInput` via:
//
//	K8sSlbAttachmentSlbConfigPortMappingArray{ K8sSlbAttachmentSlbConfigPortMappingArgs{...} }
type K8sSlbAttachmentSlbConfigPortMappingArrayInput interface {
	pulumi.Input

	ToK8sSlbAttachmentSlbConfigPortMappingArrayOutput() K8sSlbAttachmentSlbConfigPortMappingArrayOutput
	ToK8sSlbAttachmentSlbConfigPortMappingArrayOutputWithContext(context.Context) K8sSlbAttachmentSlbConfigPortMappingArrayOutput
}

type K8sSlbAttachmentSlbConfigPortMappingArray []K8sSlbAttachmentSlbConfigPortMappingInput

func (K8sSlbAttachmentSlbConfigPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sSlbAttachmentSlbConfigPortMapping)(nil)).Elem()
}

func (i K8sSlbAttachmentSlbConfigPortMappingArray) ToK8sSlbAttachmentSlbConfigPortMappingArrayOutput() K8sSlbAttachmentSlbConfigPortMappingArrayOutput {
	return i.ToK8sSlbAttachmentSlbConfigPortMappingArrayOutputWithContext(context.Background())
}

func (i K8sSlbAttachmentSlbConfigPortMappingArray) ToK8sSlbAttachmentSlbConfigPortMappingArrayOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSlbAttachmentSlbConfigPortMappingArrayOutput)
}

type K8sSlbAttachmentSlbConfigPortMappingOutput struct{ *pulumi.OutputState }

func (K8sSlbAttachmentSlbConfigPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMapping)(nil)).Elem()
}

func (o K8sSlbAttachmentSlbConfigPortMappingOutput) ToK8sSlbAttachmentSlbConfigPortMappingOutput() K8sSlbAttachmentSlbConfigPortMappingOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigPortMappingOutput) ToK8sSlbAttachmentSlbConfigPortMappingOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingOutput {
	return o
}

// The ID of your tls certification, this is used for 'HTTPS' protocol only.
func (o K8sSlbAttachmentSlbConfigPortMappingOutput) CertId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMapping) *string { return v.CertId }).(pulumi.StringPtrOutput)
}

// The protocol of SLB instance configuration, values can be 'TCP', 'HTTP' or 'HTTPS'.
func (o K8sSlbAttachmentSlbConfigPortMappingOutput) LoadbalancerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMapping) string { return v.LoadbalancerProtocol }).(pulumi.StringOutput)
}

// The backend k8s service configuration for SLB instance, which is supported for multiple configurations. See `servicePort` below.
func (o K8sSlbAttachmentSlbConfigPortMappingOutput) ServicePort() K8sSlbAttachmentSlbConfigPortMappingServicePortOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMapping) K8sSlbAttachmentSlbConfigPortMappingServicePort {
		return v.ServicePort
	}).(K8sSlbAttachmentSlbConfigPortMappingServicePortOutput)
}

type K8sSlbAttachmentSlbConfigPortMappingArrayOutput struct{ *pulumi.OutputState }

func (K8sSlbAttachmentSlbConfigPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sSlbAttachmentSlbConfigPortMapping)(nil)).Elem()
}

func (o K8sSlbAttachmentSlbConfigPortMappingArrayOutput) ToK8sSlbAttachmentSlbConfigPortMappingArrayOutput() K8sSlbAttachmentSlbConfigPortMappingArrayOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigPortMappingArrayOutput) ToK8sSlbAttachmentSlbConfigPortMappingArrayOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingArrayOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigPortMappingArrayOutput) Index(i pulumi.IntInput) K8sSlbAttachmentSlbConfigPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) K8sSlbAttachmentSlbConfigPortMapping {
		return vs[0].([]K8sSlbAttachmentSlbConfigPortMapping)[vs[1].(int)]
	}).(K8sSlbAttachmentSlbConfigPortMappingOutput)
}

type K8sSlbAttachmentSlbConfigPortMappingServicePort struct {
	// The port of k8s service, values should be within range [1, 65535].
	Port int `pulumi:"port"`
	// The protocol of k8s service, values can be 'TCP' or 'UDP'.
	Protocol string `pulumi:"protocol"`
	// The port of k8s pod, values should be within range [1, 65535].
	TargetPort int `pulumi:"targetPort"`
}

// K8sSlbAttachmentSlbConfigPortMappingServicePortInput is an input type that accepts K8sSlbAttachmentSlbConfigPortMappingServicePortArgs and K8sSlbAttachmentSlbConfigPortMappingServicePortOutput values.
// You can construct a concrete instance of `K8sSlbAttachmentSlbConfigPortMappingServicePortInput` via:
//
//	K8sSlbAttachmentSlbConfigPortMappingServicePortArgs{...}
type K8sSlbAttachmentSlbConfigPortMappingServicePortInput interface {
	pulumi.Input

	ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutput() K8sSlbAttachmentSlbConfigPortMappingServicePortOutput
	ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutputWithContext(context.Context) K8sSlbAttachmentSlbConfigPortMappingServicePortOutput
}

type K8sSlbAttachmentSlbConfigPortMappingServicePortArgs struct {
	// The port of k8s service, values should be within range [1, 65535].
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of k8s service, values can be 'TCP' or 'UDP'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The port of k8s pod, values should be within range [1, 65535].
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
}

func (K8sSlbAttachmentSlbConfigPortMappingServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMappingServicePort)(nil)).Elem()
}

func (i K8sSlbAttachmentSlbConfigPortMappingServicePortArgs) ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutput() K8sSlbAttachmentSlbConfigPortMappingServicePortOutput {
	return i.ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutputWithContext(context.Background())
}

func (i K8sSlbAttachmentSlbConfigPortMappingServicePortArgs) ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sSlbAttachmentSlbConfigPortMappingServicePortOutput)
}

type K8sSlbAttachmentSlbConfigPortMappingServicePortOutput struct{ *pulumi.OutputState }

func (K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMappingServicePort)(nil)).Elem()
}

func (o K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutput() K8sSlbAttachmentSlbConfigPortMappingServicePortOutput {
	return o
}

func (o K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) ToK8sSlbAttachmentSlbConfigPortMappingServicePortOutputWithContext(ctx context.Context) K8sSlbAttachmentSlbConfigPortMappingServicePortOutput {
	return o
}

// The port of k8s service, values should be within range [1, 65535].
func (o K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMappingServicePort) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of k8s service, values can be 'TCP' or 'UDP'.
func (o K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMappingServicePort) string { return v.Protocol }).(pulumi.StringOutput)
}

// The port of k8s pod, values should be within range [1, 65535].
func (o K8sSlbAttachmentSlbConfigPortMappingServicePortOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v K8sSlbAttachmentSlbConfigPortMappingServicePort) int { return v.TargetPort }).(pulumi.IntOutput)
}

type GetApplicationsApplication struct {
	// The ID of the application that you want to deploy.
	AppId string `pulumi:"appId"`
	// The name of your EDAS application. Only letters '-' '_' and numbers are allowed. The length cannot exceed 36 characters.
	AppName string `pulumi:"appName"`
	// The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
	ApplicationType string `pulumi:"applicationType"`
	// The package ID of Enterprise Distributed Application Service (EDAS) Container.
	BuildPackageId int `pulumi:"buildPackageId"`
	// The ID of the cluster that you want to create the application.
	ClusterId string `pulumi:"clusterId"`
	// The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
	ClusterType int `pulumi:"clusterType"`
	// The ID of the namespace the application belongs to.
	RegionId string `pulumi:"regionId"`
}

// GetApplicationsApplicationInput is an input type that accepts GetApplicationsApplicationArgs and GetApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationInput` via:
//
//	GetApplicationsApplicationArgs{...}
type GetApplicationsApplicationInput interface {
	pulumi.Input

	ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput
	ToGetApplicationsApplicationOutputWithContext(context.Context) GetApplicationsApplicationOutput
}

type GetApplicationsApplicationArgs struct {
	// The ID of the application that you want to deploy.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The name of your EDAS application. Only letters '-' '_' and numbers are allowed. The length cannot exceed 36 characters.
	AppName pulumi.StringInput `pulumi:"appName"`
	// The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
	ApplicationType pulumi.StringInput `pulumi:"applicationType"`
	// The package ID of Enterprise Distributed Application Service (EDAS) Container.
	BuildPackageId pulumi.IntInput `pulumi:"buildPackageId"`
	// The ID of the cluster that you want to create the application.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
	ClusterType pulumi.IntInput `pulumi:"clusterType"`
	// The ID of the namespace the application belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (GetApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return i.ToGetApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArgs) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationOutput)
}

// GetApplicationsApplicationArrayInput is an input type that accepts GetApplicationsApplicationArray and GetApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetApplicationsApplicationArrayInput` via:
//
//	GetApplicationsApplicationArray{ GetApplicationsApplicationArgs{...} }
type GetApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput
	ToGetApplicationsApplicationArrayOutputWithContext(context.Context) GetApplicationsApplicationArrayOutput
}

type GetApplicationsApplicationArray []GetApplicationsApplicationInput

func (GetApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return i.ToGetApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetApplicationsApplicationArray) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationsApplicationArrayOutput)
}

type GetApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutput() GetApplicationsApplicationOutput {
	return o
}

func (o GetApplicationsApplicationOutput) ToGetApplicationsApplicationOutputWithContext(ctx context.Context) GetApplicationsApplicationOutput {
	return o
}

// The ID of the application that you want to deploy.
func (o GetApplicationsApplicationOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.AppId }).(pulumi.StringOutput)
}

// The name of your EDAS application. Only letters '-' '_' and numbers are allowed. The length cannot exceed 36 characters.
func (o GetApplicationsApplicationOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.AppName }).(pulumi.StringOutput)
}

// The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
func (o GetApplicationsApplicationOutput) ApplicationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.ApplicationType }).(pulumi.StringOutput)
}

// The package ID of Enterprise Distributed Application Service (EDAS) Container.
func (o GetApplicationsApplicationOutput) BuildPackageId() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationsApplication) int { return v.BuildPackageId }).(pulumi.IntOutput)
}

// The ID of the cluster that you want to create the application.
func (o GetApplicationsApplicationOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
func (o GetApplicationsApplicationOutput) ClusterType() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationsApplication) int { return v.ClusterType }).(pulumi.IntOutput)
}

// The ID of the namespace the application belongs to.
func (o GetApplicationsApplicationOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationsApplication) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationsApplication)(nil)).Elem()
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutput() GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) ToGetApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetApplicationsApplicationArrayOutput {
	return o
}

func (o GetApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationsApplication {
		return vs[0].([]GetApplicationsApplication)[vs[1].(int)]
	}).(GetApplicationsApplicationOutput)
}

type GetClustersCluster struct {
	// The ID of the cluster that you want to create the application.
	ClusterId string `pulumi:"clusterId"`
	// The name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// The type of the cluster, Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
	ClusterType int `pulumi:"clusterType"`
	// The total number of CPUs in the cluster.
	Cpu int `pulumi:"cpu"`
	// The number of used CPUs in the cluster.
	CpuUsed int `pulumi:"cpuUsed"`
	// Cluster's creation time.
	CreateTime int `pulumi:"createTime"`
	// The total amount of memory in the cluser. Unit: MB.
	Mem int `pulumi:"mem"`
	// The amount of used memory in the cluser. Unit: MB.
	MemUsed int `pulumi:"memUsed"`
	// The network type of the cluster. Valid values: 1: classic network. 2: VPC.
	NetworkMode int `pulumi:"networkMode"`
	// The number of the Elastic Compute Service (ECS) instances that are deployed to the cluster.
	NodeNum int `pulumi:"nodeNum"`
	// The ID of the namespace the application belongs to.
	RegionId string `pulumi:"regionId"`
	// The time when the cluster was last updated.
	UpdateTime int `pulumi:"updateTime"`
	// The ID of the Virtual Private Cloud (VPC) for the cluster.
	VpcId string `pulumi:"vpcId"`
}

// GetClustersClusterInput is an input type that accepts GetClustersClusterArgs and GetClustersClusterOutput values.
// You can construct a concrete instance of `GetClustersClusterInput` via:
//
//	GetClustersClusterArgs{...}
type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	// The ID of the cluster that you want to create the application.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The type of the cluster, Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
	ClusterType pulumi.IntInput `pulumi:"clusterType"`
	// The total number of CPUs in the cluster.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// The number of used CPUs in the cluster.
	CpuUsed pulumi.IntInput `pulumi:"cpuUsed"`
	// Cluster's creation time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The total amount of memory in the cluser. Unit: MB.
	Mem pulumi.IntInput `pulumi:"mem"`
	// The amount of used memory in the cluser. Unit: MB.
	MemUsed pulumi.IntInput `pulumi:"memUsed"`
	// The network type of the cluster. Valid values: 1: classic network. 2: VPC.
	NetworkMode pulumi.IntInput `pulumi:"networkMode"`
	// The number of the Elastic Compute Service (ECS) instances that are deployed to the cluster.
	NodeNum pulumi.IntInput `pulumi:"nodeNum"`
	// The ID of the namespace the application belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The time when the cluster was last updated.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// The ID of the Virtual Private Cloud (VPC) for the cluster.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

// GetClustersClusterArrayInput is an input type that accepts GetClustersClusterArray and GetClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterArrayInput` via:
//
//	GetClustersClusterArray{ GetClustersClusterArgs{...} }
type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

// The ID of the cluster that you want to create the application.
func (o GetClustersClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The name of the cluster.
func (o GetClustersClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The type of the cluster, Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
func (o GetClustersClusterOutput) ClusterType() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.ClusterType }).(pulumi.IntOutput)
}

// The total number of CPUs in the cluster.
func (o GetClustersClusterOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.Cpu }).(pulumi.IntOutput)
}

// The number of used CPUs in the cluster.
func (o GetClustersClusterOutput) CpuUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.CpuUsed }).(pulumi.IntOutput)
}

// Cluster's creation time.
func (o GetClustersClusterOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The total amount of memory in the cluser. Unit: MB.
func (o GetClustersClusterOutput) Mem() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.Mem }).(pulumi.IntOutput)
}

// The amount of used memory in the cluser. Unit: MB.
func (o GetClustersClusterOutput) MemUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.MemUsed }).(pulumi.IntOutput)
}

// The network type of the cluster. Valid values: 1: classic network. 2: VPC.
func (o GetClustersClusterOutput) NetworkMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.NetworkMode }).(pulumi.IntOutput)
}

// The number of the Elastic Compute Service (ECS) instances that are deployed to the cluster.
func (o GetClustersClusterOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.NodeNum }).(pulumi.IntOutput)
}

// The ID of the namespace the application belongs to.
func (o GetClustersClusterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.RegionId }).(pulumi.StringOutput)
}

// The time when the cluster was last updated.
func (o GetClustersClusterOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// The ID of the Virtual Private Cloud (VPC) for the cluster.
func (o GetClustersClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetDeployGroupsGroup struct {
	// ID of the EDAS application.
	AppId string `pulumi:"appId"`
	// The version of the deployment package for the application.
	AppVersionId string `pulumi:"appVersionId"`
	// The ID of the cluster that you want to create the application.
	ClusterId string `pulumi:"clusterId"`
	// The time when the instance group was created.
	CreateTime int `pulumi:"createTime"`
	// The ID of the instance group.
	GroupId string `pulumi:"groupId"`
	// The name of the instance group. The length cannot exceed 64 characters.
	GroupName string `pulumi:"groupName"`
	// The type of the instance group. Valid values: 0: Default group. 1: Phased release is disabled for traffic management. 2: Phased release is enabled for traffic management.
	GroupType int `pulumi:"groupType"`
	// The version of the deployment package for the instance group that was created.
	PackageVersionId string `pulumi:"packageVersionId"`
	// The time when the instance group was updated.
	UpdateTime int `pulumi:"updateTime"`
}

// GetDeployGroupsGroupInput is an input type that accepts GetDeployGroupsGroupArgs and GetDeployGroupsGroupOutput values.
// You can construct a concrete instance of `GetDeployGroupsGroupInput` via:
//
//	GetDeployGroupsGroupArgs{...}
type GetDeployGroupsGroupInput interface {
	pulumi.Input

	ToGetDeployGroupsGroupOutput() GetDeployGroupsGroupOutput
	ToGetDeployGroupsGroupOutputWithContext(context.Context) GetDeployGroupsGroupOutput
}

type GetDeployGroupsGroupArgs struct {
	// ID of the EDAS application.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The version of the deployment package for the application.
	AppVersionId pulumi.StringInput `pulumi:"appVersionId"`
	// The ID of the cluster that you want to create the application.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The time when the instance group was created.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The ID of the instance group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the instance group. The length cannot exceed 64 characters.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The type of the instance group. Valid values: 0: Default group. 1: Phased release is disabled for traffic management. 2: Phased release is enabled for traffic management.
	GroupType pulumi.IntInput `pulumi:"groupType"`
	// The version of the deployment package for the instance group that was created.
	PackageVersionId pulumi.StringInput `pulumi:"packageVersionId"`
	// The time when the instance group was updated.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (GetDeployGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployGroupsGroup)(nil)).Elem()
}

func (i GetDeployGroupsGroupArgs) ToGetDeployGroupsGroupOutput() GetDeployGroupsGroupOutput {
	return i.ToGetDeployGroupsGroupOutputWithContext(context.Background())
}

func (i GetDeployGroupsGroupArgs) ToGetDeployGroupsGroupOutputWithContext(ctx context.Context) GetDeployGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeployGroupsGroupOutput)
}

// GetDeployGroupsGroupArrayInput is an input type that accepts GetDeployGroupsGroupArray and GetDeployGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDeployGroupsGroupArrayInput` via:
//
//	GetDeployGroupsGroupArray{ GetDeployGroupsGroupArgs{...} }
type GetDeployGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDeployGroupsGroupArrayOutput() GetDeployGroupsGroupArrayOutput
	ToGetDeployGroupsGroupArrayOutputWithContext(context.Context) GetDeployGroupsGroupArrayOutput
}

type GetDeployGroupsGroupArray []GetDeployGroupsGroupInput

func (GetDeployGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeployGroupsGroup)(nil)).Elem()
}

func (i GetDeployGroupsGroupArray) ToGetDeployGroupsGroupArrayOutput() GetDeployGroupsGroupArrayOutput {
	return i.ToGetDeployGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDeployGroupsGroupArray) ToGetDeployGroupsGroupArrayOutputWithContext(ctx context.Context) GetDeployGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeployGroupsGroupArrayOutput)
}

type GetDeployGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDeployGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployGroupsGroup)(nil)).Elem()
}

func (o GetDeployGroupsGroupOutput) ToGetDeployGroupsGroupOutput() GetDeployGroupsGroupOutput {
	return o
}

func (o GetDeployGroupsGroupOutput) ToGetDeployGroupsGroupOutputWithContext(ctx context.Context) GetDeployGroupsGroupOutput {
	return o
}

// ID of the EDAS application.
func (o GetDeployGroupsGroupOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.AppId }).(pulumi.StringOutput)
}

// The version of the deployment package for the application.
func (o GetDeployGroupsGroupOutput) AppVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.AppVersionId }).(pulumi.StringOutput)
}

// The ID of the cluster that you want to create the application.
func (o GetDeployGroupsGroupOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The time when the instance group was created.
func (o GetDeployGroupsGroupOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The ID of the instance group.
func (o GetDeployGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the instance group. The length cannot exceed 64 characters.
func (o GetDeployGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// The type of the instance group. Valid values: 0: Default group. 1: Phased release is disabled for traffic management. 2: Phased release is enabled for traffic management.
func (o GetDeployGroupsGroupOutput) GroupType() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) int { return v.GroupType }).(pulumi.IntOutput)
}

// The version of the deployment package for the instance group that was created.
func (o GetDeployGroupsGroupOutput) PackageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) string { return v.PackageVersionId }).(pulumi.StringOutput)
}

// The time when the instance group was updated.
func (o GetDeployGroupsGroupOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeployGroupsGroup) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type GetDeployGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDeployGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeployGroupsGroup)(nil)).Elem()
}

func (o GetDeployGroupsGroupArrayOutput) ToGetDeployGroupsGroupArrayOutput() GetDeployGroupsGroupArrayOutput {
	return o
}

func (o GetDeployGroupsGroupArrayOutput) ToGetDeployGroupsGroupArrayOutputWithContext(ctx context.Context) GetDeployGroupsGroupArrayOutput {
	return o
}

func (o GetDeployGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDeployGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeployGroupsGroup {
		return vs[0].([]GetDeployGroupsGroup)[vs[1].(int)]
	}).(GetDeployGroupsGroupOutput)
}

type GetNamespacesNamespace struct {
	// The ID of the physical region to which the namespace belongs.
	BelongRegion string `pulumi:"belongRegion"`
	// Indicates whether remote debugging is allowed in this region.
	DebugEnable bool `pulumi:"debugEnable"`
	// The description of the namespace.
	Description string `pulumi:"description"`
	// The ID of the resource.
	Id string `pulumi:"id"`
	// The unique ID of the namespace generated by Enterprise Distributed Application Service (EDAS).
	NamespaceId string `pulumi:"namespaceId"`
	// The ID of the namespace. **Note:** The ID cannot be changed after the namespace is created. The ID is in the format of `Physical region ID:Logical region identifier`.
	NamespaceLogicalId string `pulumi:"namespaceLogicalId"`
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
	// The ID of the Alibaba Cloud account to which the namespace belongs.
	UserId string `pulumi:"userId"`
}

// GetNamespacesNamespaceInput is an input type that accepts GetNamespacesNamespaceArgs and GetNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceInput` via:
//
//	GetNamespacesNamespaceArgs{...}
type GetNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput
	ToGetNamespacesNamespaceOutputWithContext(context.Context) GetNamespacesNamespaceOutput
}

type GetNamespacesNamespaceArgs struct {
	// The ID of the physical region to which the namespace belongs.
	BelongRegion pulumi.StringInput `pulumi:"belongRegion"`
	// Indicates whether remote debugging is allowed in this region.
	DebugEnable pulumi.BoolInput `pulumi:"debugEnable"`
	// The description of the namespace.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The unique ID of the namespace generated by Enterprise Distributed Application Service (EDAS).
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// The ID of the namespace. **Note:** The ID cannot be changed after the namespace is created. The ID is in the format of `Physical region ID:Logical region identifier`.
	NamespaceLogicalId pulumi.StringInput `pulumi:"namespaceLogicalId"`
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The ID of the Alibaba Cloud account to which the namespace belongs.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return i.ToGetNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceOutput)
}

// GetNamespacesNamespaceArrayInput is an input type that accepts GetNamespacesNamespaceArray and GetNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceArrayInput` via:
//
//	GetNamespacesNamespaceArray{ GetNamespacesNamespaceArgs{...} }
type GetNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput
	ToGetNamespacesNamespaceArrayOutputWithContext(context.Context) GetNamespacesNamespaceArrayOutput
}

type GetNamespacesNamespaceArray []GetNamespacesNamespaceInput

func (GetNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return i.ToGetNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceArrayOutput)
}

type GetNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return o
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return o
}

// The ID of the physical region to which the namespace belongs.
func (o GetNamespacesNamespaceOutput) BelongRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.BelongRegion }).(pulumi.StringOutput)
}

// Indicates whether remote debugging is allowed in this region.
func (o GetNamespacesNamespaceOutput) DebugEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) bool { return v.DebugEnable }).(pulumi.BoolOutput)
}

// The description of the namespace.
func (o GetNamespacesNamespaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o GetNamespacesNamespaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Id }).(pulumi.StringOutput)
}

// The unique ID of the namespace generated by Enterprise Distributed Application Service (EDAS).
func (o GetNamespacesNamespaceOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The ID of the namespace. **Note:** The ID cannot be changed after the namespace is created. The ID is in the format of `Physical region ID:Logical region identifier`.
func (o GetNamespacesNamespaceOutput) NamespaceLogicalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.NamespaceLogicalId }).(pulumi.StringOutput)
}

// The name of the namespace.
func (o GetNamespacesNamespaceOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud account to which the namespace belongs.
func (o GetNamespacesNamespaceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.UserId }).(pulumi.StringOutput)
}

type GetNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespace {
		return vs[0].([]GetNamespacesNamespace)[vs[1].(int)]
	}).(GetNamespacesNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*K8sSlbAttachmentSlbConfigInput)(nil)).Elem(), K8sSlbAttachmentSlbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sSlbAttachmentSlbConfigArrayInput)(nil)).Elem(), K8sSlbAttachmentSlbConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMappingInput)(nil)).Elem(), K8sSlbAttachmentSlbConfigPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMappingArrayInput)(nil)).Elem(), K8sSlbAttachmentSlbConfigPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sSlbAttachmentSlbConfigPortMappingServicePortInput)(nil)).Elem(), K8sSlbAttachmentSlbConfigPortMappingServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationInput)(nil)).Elem(), GetApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationsApplicationArrayInput)(nil)).Elem(), GetApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterInput)(nil)).Elem(), GetClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterArrayInput)(nil)).Elem(), GetClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeployGroupsGroupInput)(nil)).Elem(), GetDeployGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeployGroupsGroupArrayInput)(nil)).Elem(), GetDeployGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceInput)(nil)).Elem(), GetNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceArrayInput)(nil)).Elem(), GetNamespacesNamespaceArray{})
	pulumi.RegisterOutputType(K8sSlbAttachmentSlbConfigOutput{})
	pulumi.RegisterOutputType(K8sSlbAttachmentSlbConfigArrayOutput{})
	pulumi.RegisterOutputType(K8sSlbAttachmentSlbConfigPortMappingOutput{})
	pulumi.RegisterOutputType(K8sSlbAttachmentSlbConfigPortMappingArrayOutput{})
	pulumi.RegisterOutputType(K8sSlbAttachmentSlbConfigPortMappingServicePortOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetDeployGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDeployGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceArrayOutput{})
}
