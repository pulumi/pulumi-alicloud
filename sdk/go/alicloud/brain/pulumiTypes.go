// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package brain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetIndustrialPidLoopsLoop struct {
	// The ID of the Pid Loop.
	Id                   string `pulumi:"id"`
	PidLoopConfiguration string `pulumi:"pidLoopConfiguration"`
	// The dcs type of Pid Loop.
	PidLoopDcsType string `pulumi:"pidLoopDcsType"`
	PidLoopDesc    string `pulumi:"pidLoopDesc"`
	// The ID of the Pid Loop.
	PidLoopId string `pulumi:"pidLoopId"`
	// Whether is crucial Pid Loop.
	PidLoopIsCrucial bool `pulumi:"pidLoopIsCrucial"`
	// The name of Pid Loop.
	PidLoopName string `pulumi:"pidLoopName"`
	// The type of Pid Loop.
	PidLoopType string `pulumi:"pidLoopType"`
	// The pid project id.
	PidProjectId string `pulumi:"pidProjectId"`
	// The status of Pid Loop.
	Status string `pulumi:"status"`
}

// GetIndustrialPidLoopsLoopInput is an input type that accepts GetIndustrialPidLoopsLoopArgs and GetIndustrialPidLoopsLoopOutput values.
// You can construct a concrete instance of `GetIndustrialPidLoopsLoopInput` via:
//
//          GetIndustrialPidLoopsLoopArgs{...}
type GetIndustrialPidLoopsLoopInput interface {
	pulumi.Input

	ToGetIndustrialPidLoopsLoopOutput() GetIndustrialPidLoopsLoopOutput
	ToGetIndustrialPidLoopsLoopOutputWithContext(context.Context) GetIndustrialPidLoopsLoopOutput
}

type GetIndustrialPidLoopsLoopArgs struct {
	// The ID of the Pid Loop.
	Id                   pulumi.StringInput `pulumi:"id"`
	PidLoopConfiguration pulumi.StringInput `pulumi:"pidLoopConfiguration"`
	// The dcs type of Pid Loop.
	PidLoopDcsType pulumi.StringInput `pulumi:"pidLoopDcsType"`
	PidLoopDesc    pulumi.StringInput `pulumi:"pidLoopDesc"`
	// The ID of the Pid Loop.
	PidLoopId pulumi.StringInput `pulumi:"pidLoopId"`
	// Whether is crucial Pid Loop.
	PidLoopIsCrucial pulumi.BoolInput `pulumi:"pidLoopIsCrucial"`
	// The name of Pid Loop.
	PidLoopName pulumi.StringInput `pulumi:"pidLoopName"`
	// The type of Pid Loop.
	PidLoopType pulumi.StringInput `pulumi:"pidLoopType"`
	// The pid project id.
	PidProjectId pulumi.StringInput `pulumi:"pidProjectId"`
	// The status of Pid Loop.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetIndustrialPidLoopsLoopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidLoopsLoop)(nil)).Elem()
}

func (i GetIndustrialPidLoopsLoopArgs) ToGetIndustrialPidLoopsLoopOutput() GetIndustrialPidLoopsLoopOutput {
	return i.ToGetIndustrialPidLoopsLoopOutputWithContext(context.Background())
}

func (i GetIndustrialPidLoopsLoopArgs) ToGetIndustrialPidLoopsLoopOutputWithContext(ctx context.Context) GetIndustrialPidLoopsLoopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidLoopsLoopOutput)
}

// GetIndustrialPidLoopsLoopArrayInput is an input type that accepts GetIndustrialPidLoopsLoopArray and GetIndustrialPidLoopsLoopArrayOutput values.
// You can construct a concrete instance of `GetIndustrialPidLoopsLoopArrayInput` via:
//
//          GetIndustrialPidLoopsLoopArray{ GetIndustrialPidLoopsLoopArgs{...} }
type GetIndustrialPidLoopsLoopArrayInput interface {
	pulumi.Input

	ToGetIndustrialPidLoopsLoopArrayOutput() GetIndustrialPidLoopsLoopArrayOutput
	ToGetIndustrialPidLoopsLoopArrayOutputWithContext(context.Context) GetIndustrialPidLoopsLoopArrayOutput
}

type GetIndustrialPidLoopsLoopArray []GetIndustrialPidLoopsLoopInput

func (GetIndustrialPidLoopsLoopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidLoopsLoop)(nil)).Elem()
}

func (i GetIndustrialPidLoopsLoopArray) ToGetIndustrialPidLoopsLoopArrayOutput() GetIndustrialPidLoopsLoopArrayOutput {
	return i.ToGetIndustrialPidLoopsLoopArrayOutputWithContext(context.Background())
}

func (i GetIndustrialPidLoopsLoopArray) ToGetIndustrialPidLoopsLoopArrayOutputWithContext(ctx context.Context) GetIndustrialPidLoopsLoopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidLoopsLoopArrayOutput)
}

type GetIndustrialPidLoopsLoopOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidLoopsLoopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidLoopsLoop)(nil)).Elem()
}

func (o GetIndustrialPidLoopsLoopOutput) ToGetIndustrialPidLoopsLoopOutput() GetIndustrialPidLoopsLoopOutput {
	return o
}

func (o GetIndustrialPidLoopsLoopOutput) ToGetIndustrialPidLoopsLoopOutputWithContext(ctx context.Context) GetIndustrialPidLoopsLoopOutput {
	return o
}

// The ID of the Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIndustrialPidLoopsLoopOutput) PidLoopConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopConfiguration }).(pulumi.StringOutput)
}

// The dcs type of Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) PidLoopDcsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopDcsType }).(pulumi.StringOutput)
}

func (o GetIndustrialPidLoopsLoopOutput) PidLoopDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopDesc }).(pulumi.StringOutput)
}

// The ID of the Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) PidLoopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopId }).(pulumi.StringOutput)
}

// Whether is crucial Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) PidLoopIsCrucial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) bool { return v.PidLoopIsCrucial }).(pulumi.BoolOutput)
}

// The name of Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) PidLoopName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopName }).(pulumi.StringOutput)
}

// The type of Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) PidLoopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidLoopType }).(pulumi.StringOutput)
}

// The pid project id.
func (o GetIndustrialPidLoopsLoopOutput) PidProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.PidProjectId }).(pulumi.StringOutput)
}

// The status of Pid Loop.
func (o GetIndustrialPidLoopsLoopOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidLoopsLoop) string { return v.Status }).(pulumi.StringOutput)
}

type GetIndustrialPidLoopsLoopArrayOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidLoopsLoopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidLoopsLoop)(nil)).Elem()
}

func (o GetIndustrialPidLoopsLoopArrayOutput) ToGetIndustrialPidLoopsLoopArrayOutput() GetIndustrialPidLoopsLoopArrayOutput {
	return o
}

func (o GetIndustrialPidLoopsLoopArrayOutput) ToGetIndustrialPidLoopsLoopArrayOutputWithContext(ctx context.Context) GetIndustrialPidLoopsLoopArrayOutput {
	return o
}

func (o GetIndustrialPidLoopsLoopArrayOutput) Index(i pulumi.IntInput) GetIndustrialPidLoopsLoopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIndustrialPidLoopsLoop {
		return vs[0].([]GetIndustrialPidLoopsLoop)[vs[1].(int)]
	}).(GetIndustrialPidLoopsLoopOutput)
}

type GetIndustrialPidOrganizationsOrganization struct {
	// The ID of the Pid Organization.
	Id string `pulumi:"id"`
	// The parent organization id.
	ParentPidOrganizationId string `pulumi:"parentPidOrganizationId"`
	// The organization id.
	PidOrganizationId string `pulumi:"pidOrganizationId"`
	// The organization level.
	PidOrganizationLevel int `pulumi:"pidOrganizationLevel"`
	// The organization name.
	PidOrganizationName string `pulumi:"pidOrganizationName"`
}

// GetIndustrialPidOrganizationsOrganizationInput is an input type that accepts GetIndustrialPidOrganizationsOrganizationArgs and GetIndustrialPidOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetIndustrialPidOrganizationsOrganizationInput` via:
//
//          GetIndustrialPidOrganizationsOrganizationArgs{...}
type GetIndustrialPidOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetIndustrialPidOrganizationsOrganizationOutput() GetIndustrialPidOrganizationsOrganizationOutput
	ToGetIndustrialPidOrganizationsOrganizationOutputWithContext(context.Context) GetIndustrialPidOrganizationsOrganizationOutput
}

type GetIndustrialPidOrganizationsOrganizationArgs struct {
	// The ID of the Pid Organization.
	Id pulumi.StringInput `pulumi:"id"`
	// The parent organization id.
	ParentPidOrganizationId pulumi.StringInput `pulumi:"parentPidOrganizationId"`
	// The organization id.
	PidOrganizationId pulumi.StringInput `pulumi:"pidOrganizationId"`
	// The organization level.
	PidOrganizationLevel pulumi.IntInput `pulumi:"pidOrganizationLevel"`
	// The organization name.
	PidOrganizationName pulumi.StringInput `pulumi:"pidOrganizationName"`
}

func (GetIndustrialPidOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidOrganizationsOrganization)(nil)).Elem()
}

func (i GetIndustrialPidOrganizationsOrganizationArgs) ToGetIndustrialPidOrganizationsOrganizationOutput() GetIndustrialPidOrganizationsOrganizationOutput {
	return i.ToGetIndustrialPidOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetIndustrialPidOrganizationsOrganizationArgs) ToGetIndustrialPidOrganizationsOrganizationOutputWithContext(ctx context.Context) GetIndustrialPidOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidOrganizationsOrganizationOutput)
}

// GetIndustrialPidOrganizationsOrganizationArrayInput is an input type that accepts GetIndustrialPidOrganizationsOrganizationArray and GetIndustrialPidOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetIndustrialPidOrganizationsOrganizationArrayInput` via:
//
//          GetIndustrialPidOrganizationsOrganizationArray{ GetIndustrialPidOrganizationsOrganizationArgs{...} }
type GetIndustrialPidOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetIndustrialPidOrganizationsOrganizationArrayOutput() GetIndustrialPidOrganizationsOrganizationArrayOutput
	ToGetIndustrialPidOrganizationsOrganizationArrayOutputWithContext(context.Context) GetIndustrialPidOrganizationsOrganizationArrayOutput
}

type GetIndustrialPidOrganizationsOrganizationArray []GetIndustrialPidOrganizationsOrganizationInput

func (GetIndustrialPidOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidOrganizationsOrganization)(nil)).Elem()
}

func (i GetIndustrialPidOrganizationsOrganizationArray) ToGetIndustrialPidOrganizationsOrganizationArrayOutput() GetIndustrialPidOrganizationsOrganizationArrayOutput {
	return i.ToGetIndustrialPidOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetIndustrialPidOrganizationsOrganizationArray) ToGetIndustrialPidOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetIndustrialPidOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidOrganizationsOrganizationArrayOutput)
}

type GetIndustrialPidOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidOrganizationsOrganization)(nil)).Elem()
}

func (o GetIndustrialPidOrganizationsOrganizationOutput) ToGetIndustrialPidOrganizationsOrganizationOutput() GetIndustrialPidOrganizationsOrganizationOutput {
	return o
}

func (o GetIndustrialPidOrganizationsOrganizationOutput) ToGetIndustrialPidOrganizationsOrganizationOutputWithContext(ctx context.Context) GetIndustrialPidOrganizationsOrganizationOutput {
	return o
}

// The ID of the Pid Organization.
func (o GetIndustrialPidOrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidOrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The parent organization id.
func (o GetIndustrialPidOrganizationsOrganizationOutput) ParentPidOrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidOrganizationsOrganization) string { return v.ParentPidOrganizationId }).(pulumi.StringOutput)
}

// The organization id.
func (o GetIndustrialPidOrganizationsOrganizationOutput) PidOrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidOrganizationsOrganization) string { return v.PidOrganizationId }).(pulumi.StringOutput)
}

// The organization level.
func (o GetIndustrialPidOrganizationsOrganizationOutput) PidOrganizationLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetIndustrialPidOrganizationsOrganization) int { return v.PidOrganizationLevel }).(pulumi.IntOutput)
}

// The organization name.
func (o GetIndustrialPidOrganizationsOrganizationOutput) PidOrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidOrganizationsOrganization) string { return v.PidOrganizationName }).(pulumi.StringOutput)
}

type GetIndustrialPidOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidOrganizationsOrganization)(nil)).Elem()
}

func (o GetIndustrialPidOrganizationsOrganizationArrayOutput) ToGetIndustrialPidOrganizationsOrganizationArrayOutput() GetIndustrialPidOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetIndustrialPidOrganizationsOrganizationArrayOutput) ToGetIndustrialPidOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetIndustrialPidOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetIndustrialPidOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetIndustrialPidOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIndustrialPidOrganizationsOrganization {
		return vs[0].([]GetIndustrialPidOrganizationsOrganization)[vs[1].(int)]
	}).(GetIndustrialPidOrganizationsOrganizationOutput)
}

type GetIndustrialPidProjectsProject struct {
	// The ID of the Pid Project.
	Id string `pulumi:"id"`
	// The ID of Pid Organization.
	PidOrganizationId string `pulumi:"pidOrganizationId"`
	// The description of Pid Project.
	PidProjectDesc string `pulumi:"pidProjectDesc"`
	// The ID of Pid Project.
	PidProjectId string `pulumi:"pidProjectId"`
	// The name of Pid Project.
	PidProjectName string `pulumi:"pidProjectName"`
}

// GetIndustrialPidProjectsProjectInput is an input type that accepts GetIndustrialPidProjectsProjectArgs and GetIndustrialPidProjectsProjectOutput values.
// You can construct a concrete instance of `GetIndustrialPidProjectsProjectInput` via:
//
//          GetIndustrialPidProjectsProjectArgs{...}
type GetIndustrialPidProjectsProjectInput interface {
	pulumi.Input

	ToGetIndustrialPidProjectsProjectOutput() GetIndustrialPidProjectsProjectOutput
	ToGetIndustrialPidProjectsProjectOutputWithContext(context.Context) GetIndustrialPidProjectsProjectOutput
}

type GetIndustrialPidProjectsProjectArgs struct {
	// The ID of the Pid Project.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of Pid Organization.
	PidOrganizationId pulumi.StringInput `pulumi:"pidOrganizationId"`
	// The description of Pid Project.
	PidProjectDesc pulumi.StringInput `pulumi:"pidProjectDesc"`
	// The ID of Pid Project.
	PidProjectId pulumi.StringInput `pulumi:"pidProjectId"`
	// The name of Pid Project.
	PidProjectName pulumi.StringInput `pulumi:"pidProjectName"`
}

func (GetIndustrialPidProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidProjectsProject)(nil)).Elem()
}

func (i GetIndustrialPidProjectsProjectArgs) ToGetIndustrialPidProjectsProjectOutput() GetIndustrialPidProjectsProjectOutput {
	return i.ToGetIndustrialPidProjectsProjectOutputWithContext(context.Background())
}

func (i GetIndustrialPidProjectsProjectArgs) ToGetIndustrialPidProjectsProjectOutputWithContext(ctx context.Context) GetIndustrialPidProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidProjectsProjectOutput)
}

// GetIndustrialPidProjectsProjectArrayInput is an input type that accepts GetIndustrialPidProjectsProjectArray and GetIndustrialPidProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetIndustrialPidProjectsProjectArrayInput` via:
//
//          GetIndustrialPidProjectsProjectArray{ GetIndustrialPidProjectsProjectArgs{...} }
type GetIndustrialPidProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetIndustrialPidProjectsProjectArrayOutput() GetIndustrialPidProjectsProjectArrayOutput
	ToGetIndustrialPidProjectsProjectArrayOutputWithContext(context.Context) GetIndustrialPidProjectsProjectArrayOutput
}

type GetIndustrialPidProjectsProjectArray []GetIndustrialPidProjectsProjectInput

func (GetIndustrialPidProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidProjectsProject)(nil)).Elem()
}

func (i GetIndustrialPidProjectsProjectArray) ToGetIndustrialPidProjectsProjectArrayOutput() GetIndustrialPidProjectsProjectArrayOutput {
	return i.ToGetIndustrialPidProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetIndustrialPidProjectsProjectArray) ToGetIndustrialPidProjectsProjectArrayOutputWithContext(ctx context.Context) GetIndustrialPidProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndustrialPidProjectsProjectArrayOutput)
}

type GetIndustrialPidProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndustrialPidProjectsProject)(nil)).Elem()
}

func (o GetIndustrialPidProjectsProjectOutput) ToGetIndustrialPidProjectsProjectOutput() GetIndustrialPidProjectsProjectOutput {
	return o
}

func (o GetIndustrialPidProjectsProjectOutput) ToGetIndustrialPidProjectsProjectOutputWithContext(ctx context.Context) GetIndustrialPidProjectsProjectOutput {
	return o
}

// The ID of the Pid Project.
func (o GetIndustrialPidProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of Pid Organization.
func (o GetIndustrialPidProjectsProjectOutput) PidOrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidProjectsProject) string { return v.PidOrganizationId }).(pulumi.StringOutput)
}

// The description of Pid Project.
func (o GetIndustrialPidProjectsProjectOutput) PidProjectDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidProjectsProject) string { return v.PidProjectDesc }).(pulumi.StringOutput)
}

// The ID of Pid Project.
func (o GetIndustrialPidProjectsProjectOutput) PidProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidProjectsProject) string { return v.PidProjectId }).(pulumi.StringOutput)
}

// The name of Pid Project.
func (o GetIndustrialPidProjectsProjectOutput) PidProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIndustrialPidProjectsProject) string { return v.PidProjectName }).(pulumi.StringOutput)
}

type GetIndustrialPidProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetIndustrialPidProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIndustrialPidProjectsProject)(nil)).Elem()
}

func (o GetIndustrialPidProjectsProjectArrayOutput) ToGetIndustrialPidProjectsProjectArrayOutput() GetIndustrialPidProjectsProjectArrayOutput {
	return o
}

func (o GetIndustrialPidProjectsProjectArrayOutput) ToGetIndustrialPidProjectsProjectArrayOutputWithContext(ctx context.Context) GetIndustrialPidProjectsProjectArrayOutput {
	return o
}

func (o GetIndustrialPidProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetIndustrialPidProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIndustrialPidProjectsProject {
		return vs[0].([]GetIndustrialPidProjectsProject)[vs[1].(int)]
	}).(GetIndustrialPidProjectsProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidLoopsLoopInput)(nil)).Elem(), GetIndustrialPidLoopsLoopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidLoopsLoopArrayInput)(nil)).Elem(), GetIndustrialPidLoopsLoopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidOrganizationsOrganizationInput)(nil)).Elem(), GetIndustrialPidOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidOrganizationsOrganizationArrayInput)(nil)).Elem(), GetIndustrialPidOrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidProjectsProjectInput)(nil)).Elem(), GetIndustrialPidProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIndustrialPidProjectsProjectArrayInput)(nil)).Elem(), GetIndustrialPidProjectsProjectArray{})
	pulumi.RegisterOutputType(GetIndustrialPidLoopsLoopOutput{})
	pulumi.RegisterOutputType(GetIndustrialPidLoopsLoopArrayOutput{})
	pulumi.RegisterOutputType(GetIndustrialPidOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetIndustrialPidOrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GetIndustrialPidProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetIndustrialPidProjectsProjectArrayOutput{})
}
