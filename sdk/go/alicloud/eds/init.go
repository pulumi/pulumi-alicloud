// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "alicloud:eds/command:Command":
		r = &Command{}
	case "alicloud:eds/desktop:Desktop":
		r = &Desktop{}
	case "alicloud:eds/ecdPolicyGroup:EcdPolicyGroup":
		r = &EcdPolicyGroup{}
	case "alicloud:eds/image:Image":
		r = &Image{}
	case "alicloud:eds/nasFileSystem:NasFileSystem":
		r = &NasFileSystem{}
	case "alicloud:eds/networkPackage:NetworkPackage":
		r = &NetworkPackage{}
	case "alicloud:eds/simpleOfficeSite:SimpleOfficeSite":
		r = &SimpleOfficeSite{}
	case "alicloud:eds/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := alicloud.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/command",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/desktop",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/ecdPolicyGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/image",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/nasFileSystem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/networkPackage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/simpleOfficeSite",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"eds/user",
		&module{version},
	)
}
