// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Ecd Desktop Types of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.170.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := eds.GetDesktopTypes(ctx, &eds.GetDesktopTypesArgs{
//				InstanceTypeFamily: pulumi.StringRef("eds.hf"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ecdDesktopTypeId1", ids.Types[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetDesktopTypes(ctx *pulumi.Context, args *GetDesktopTypesArgs, opts ...pulumi.InvokeOption) (*GetDesktopTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDesktopTypesResult
	err := ctx.Invoke("alicloud:eds/getDesktopTypes:getDesktopTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDesktopTypes.
type GetDesktopTypesArgs struct {
	// The CPU cores.
	CpuCount *int `pulumi:"cpuCount"`
	// The GPU cores.
	GpuCount *float64 `pulumi:"gpuCount"`
	// A list of Desktop Type IDs.
	Ids []string `pulumi:"ids"`
	// The Specification family.
	InstanceTypeFamily *string `pulumi:"instanceTypeFamily"`
	// The Memory size. Unit: MiB.
	MemorySize *int `pulumi:"memorySize"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The status of the resource.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getDesktopTypes.
type GetDesktopTypesResult struct {
	CpuCount *int     `pulumi:"cpuCount"`
	GpuCount *float64 `pulumi:"gpuCount"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                `pulumi:"id"`
	Ids                []string              `pulumi:"ids"`
	InstanceTypeFamily *string               `pulumi:"instanceTypeFamily"`
	MemorySize         *int                  `pulumi:"memorySize"`
	OutputFile         *string               `pulumi:"outputFile"`
	Status             *string               `pulumi:"status"`
	Types              []GetDesktopTypesType `pulumi:"types"`
}

func GetDesktopTypesOutput(ctx *pulumi.Context, args GetDesktopTypesOutputArgs, opts ...pulumi.InvokeOption) GetDesktopTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDesktopTypesResult, error) {
			args := v.(GetDesktopTypesArgs)
			r, err := GetDesktopTypes(ctx, &args, opts...)
			var s GetDesktopTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDesktopTypesResultOutput)
}

// A collection of arguments for invoking getDesktopTypes.
type GetDesktopTypesOutputArgs struct {
	// The CPU cores.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
	// The GPU cores.
	GpuCount pulumi.Float64PtrInput `pulumi:"gpuCount"`
	// A list of Desktop Type IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The Specification family.
	InstanceTypeFamily pulumi.StringPtrInput `pulumi:"instanceTypeFamily"`
	// The Memory size. Unit: MiB.
	MemorySize pulumi.IntPtrInput `pulumi:"memorySize"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetDesktopTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopTypesArgs)(nil)).Elem()
}

// A collection of values returned by getDesktopTypes.
type GetDesktopTypesResultOutput struct{ *pulumi.OutputState }

func (GetDesktopTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopTypesResult)(nil)).Elem()
}

func (o GetDesktopTypesResultOutput) ToGetDesktopTypesResultOutput() GetDesktopTypesResultOutput {
	return o
}

func (o GetDesktopTypesResultOutput) ToGetDesktopTypesResultOutputWithContext(ctx context.Context) GetDesktopTypesResultOutput {
	return o
}

func (o GetDesktopTypesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDesktopTypesResult] {
	return pulumix.Output[GetDesktopTypesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDesktopTypesResultOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

func (o GetDesktopTypesResultOutput) GpuCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *float64 { return v.GpuCount }).(pulumi.Float64PtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDesktopTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDesktopTypesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetDesktopTypesResultOutput) InstanceTypeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *string { return v.InstanceTypeFamily }).(pulumi.StringPtrOutput)
}

func (o GetDesktopTypesResultOutput) MemorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *int { return v.MemorySize }).(pulumi.IntPtrOutput)
}

func (o GetDesktopTypesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDesktopTypesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetDesktopTypesResultOutput) Types() GetDesktopTypesTypeArrayOutput {
	return o.ApplyT(func(v GetDesktopTypesResult) []GetDesktopTypesType { return v.Types }).(GetDesktopTypesTypeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDesktopTypesResultOutput{})
}
