// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecd bundles of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.143.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eds"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := eds.GetBundles(ctx, &eds.GetBundlesArgs{
// 			BundleType: pulumi.StringRef("SYSTEM"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetBundles(ctx *pulumi.Context, args *GetBundlesArgs, opts ...pulumi.InvokeOption) (*GetBundlesResult, error) {
	var rv GetBundlesResult
	err := ctx.Invoke("alicloud:eds/getBundles:getBundles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBundles.
type GetBundlesArgs struct {
	// The bundle id of the bundle.
	BundleIds []string `pulumi:"bundleIds"`
	// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
	BundleType *string `pulumi:"bundleType"`
	// A list of Bundle IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Bundle name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getBundles.
type GetBundlesResult struct {
	BundleIds  []string           `pulumi:"bundleIds"`
	BundleType *string            `pulumi:"bundleType"`
	Bundles    []GetBundlesBundle `pulumi:"bundles"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
}

func GetBundlesOutput(ctx *pulumi.Context, args GetBundlesOutputArgs, opts ...pulumi.InvokeOption) GetBundlesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBundlesResult, error) {
			args := v.(GetBundlesArgs)
			r, err := GetBundles(ctx, &args, opts...)
			var s GetBundlesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBundlesResultOutput)
}

// A collection of arguments for invoking getBundles.
type GetBundlesOutputArgs struct {
	// The bundle id of the bundle.
	BundleIds pulumi.StringArrayInput `pulumi:"bundleIds"`
	// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
	BundleType pulumi.StringPtrInput `pulumi:"bundleType"`
	// A list of Bundle IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Bundle name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetBundlesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesArgs)(nil)).Elem()
}

// A collection of values returned by getBundles.
type GetBundlesResultOutput struct{ *pulumi.OutputState }

func (GetBundlesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesResult)(nil)).Elem()
}

func (o GetBundlesResultOutput) ToGetBundlesResultOutput() GetBundlesResultOutput {
	return o
}

func (o GetBundlesResultOutput) ToGetBundlesResultOutputWithContext(ctx context.Context) GetBundlesResultOutput {
	return o
}

func (o GetBundlesResultOutput) BundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBundlesResult) []string { return v.BundleIds }).(pulumi.StringArrayOutput)
}

func (o GetBundlesResultOutput) BundleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundlesResult) *string { return v.BundleType }).(pulumi.StringPtrOutput)
}

func (o GetBundlesResultOutput) Bundles() GetBundlesBundleArrayOutput {
	return o.ApplyT(func(v GetBundlesResult) []GetBundlesBundle { return v.Bundles }).(GetBundlesBundleArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBundlesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBundlesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBundlesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetBundlesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundlesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetBundlesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBundlesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetBundlesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundlesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBundlesResultOutput{})
}
