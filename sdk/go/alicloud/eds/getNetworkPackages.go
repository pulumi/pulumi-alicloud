// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecd Network Packages of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.142.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eds"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultSimpleOfficeSite, err := eds.NewSimpleOfficeSite(ctx, "defaultSimpleOfficeSite", &eds.SimpleOfficeSiteArgs{
// 			CidrBlock:         pulumi.String("172.16.0.0/12"),
// 			DesktopAccessType: pulumi.String("Internet"),
// 			OfficeSiteName:    pulumi.String("example_value"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultNetworkPackage, err := eds.NewNetworkPackage(ctx, "defaultNetworkPackage", &eds.NetworkPackageArgs{
// 			Bandwidth:    pulumi.Int(10),
// 			OfficeSiteId: defaultSimpleOfficeSite.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultNetworkPackages := eds.GetNetworkPackagesOutput(ctx, eds.GetNetworkPackagesOutputArgs{
// 			Ids: pulumi.StringArray{
// 				defaultNetworkPackage.ID(),
// 			},
// 		}, nil)
// 		ctx.Export("ecdNetworkPackageId1", defaultNetworkPackages.ApplyT(func(defaultNetworkPackages eds.GetNetworkPackagesResult) (string, error) {
// 			return defaultNetworkPackages.Packages[0].Id, nil
// 		}).(pulumi.StringOutput))
// 		return nil
// 	})
// }
// ```
func GetNetworkPackages(ctx *pulumi.Context, args *GetNetworkPackagesArgs, opts ...pulumi.InvokeOption) (*GetNetworkPackagesResult, error) {
	var rv GetNetworkPackagesResult
	err := ctx.Invoke("alicloud:eds/getNetworkPackages:getNetworkPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkPackages.
type GetNetworkPackagesArgs struct {
	// A list of Network Package IDs.
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of network package. Valid values: `Creating`, `InUse`, `Releasing`,`Released`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getNetworkPackages.
type GetNetworkPackagesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                      `pulumi:"id"`
	Ids        []string                    `pulumi:"ids"`
	OutputFile *string                     `pulumi:"outputFile"`
	Packages   []GetNetworkPackagesPackage `pulumi:"packages"`
	Status     *string                     `pulumi:"status"`
}

func GetNetworkPackagesOutput(ctx *pulumi.Context, args GetNetworkPackagesOutputArgs, opts ...pulumi.InvokeOption) GetNetworkPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkPackagesResult, error) {
			args := v.(GetNetworkPackagesArgs)
			r, err := GetNetworkPackages(ctx, &args, opts...)
			return *r, err
		}).(GetNetworkPackagesResultOutput)
}

// A collection of arguments for invoking getNetworkPackages.
type GetNetworkPackagesOutputArgs struct {
	// A list of Network Package IDs.
	Ids        pulumi.StringArrayInput `pulumi:"ids"`
	OutputFile pulumi.StringPtrInput   `pulumi:"outputFile"`
	// The status of network package. Valid values: `Creating`, `InUse`, `Releasing`,`Released`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetNetworkPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkPackages.
type GetNetworkPackagesResultOutput struct{ *pulumi.OutputState }

func (GetNetworkPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPackagesResult)(nil)).Elem()
}

func (o GetNetworkPackagesResultOutput) ToGetNetworkPackagesResultOutput() GetNetworkPackagesResultOutput {
	return o
}

func (o GetNetworkPackagesResultOutput) ToGetNetworkPackagesResultOutputWithContext(ctx context.Context) GetNetworkPackagesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNetworkPackagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkPackagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetNetworkPackagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkPackagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetNetworkPackagesResultOutput) Packages() GetNetworkPackagesPackageArrayOutput {
	return o.ApplyT(func(v GetNetworkPackagesResult) []GetNetworkPackagesPackage { return v.Packages }).(GetNetworkPackagesPackageArrayOutput)
}

func (o GetNetworkPackagesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkPackagesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkPackagesResultOutput{})
}
