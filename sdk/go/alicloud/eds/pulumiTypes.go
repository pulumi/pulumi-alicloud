// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EcdPolicyGroupAuthorizeAccessPolicyRule struct {
	// The cidrip of authorize access rule.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description *string `pulumi:"description"`
}

// EcdPolicyGroupAuthorizeAccessPolicyRuleInput is an input type that accepts EcdPolicyGroupAuthorizeAccessPolicyRuleArgs and EcdPolicyGroupAuthorizeAccessPolicyRuleOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeAccessPolicyRuleInput` via:
//
//          EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{...}
type EcdPolicyGroupAuthorizeAccessPolicyRuleInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput
	ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArgs struct {
	// The cidrip of authorize access rule.
	CidrIp pulumi.StringPtrInput `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return i.ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput)
}

// EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput is an input type that accepts EcdPolicyGroupAuthorizeAccessPolicyRuleArray and EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput` via:
//
//          EcdPolicyGroupAuthorizeAccessPolicyRuleArray{ EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{...} }
type EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput
	ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArray []EcdPolicyGroupAuthorizeAccessPolicyRuleInput

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return i.ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput)
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

// The cidrip of authorize access rule.
func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeAccessPolicyRule) *string { return v.CidrIp }).(pulumi.StringPtrOutput)
}

// The description of authorize access rule.
func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeAccessPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) Index(i pulumi.IntInput) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcdPolicyGroupAuthorizeAccessPolicyRule {
		return vs[0].([]EcdPolicyGroupAuthorizeAccessPolicyRule)[vs[1].(int)]
	}).(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRule struct {
	// The cidrip of authorize access rule.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description *string `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol *string `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy *string `pulumi:"policy"`
	// The port range of security rules.
	PortRange *string `pulumi:"portRange"`
	// The priority of security rules.
	Priority *string `pulumi:"priority"`
	// The type of security rules.
	Type *string `pulumi:"type"`
}

// EcdPolicyGroupAuthorizeSecurityPolicyRuleInput is an input type that accepts EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs and EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeSecurityPolicyRuleInput` via:
//
//          EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{...}
type EcdPolicyGroupAuthorizeSecurityPolicyRuleInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput
	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs struct {
	// The cidrip of authorize access rule.
	CidrIp pulumi.StringPtrInput `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port range of security rules.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The priority of security rules.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// The type of security rules.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return i.ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput)
}

// EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput is an input type that accepts EcdPolicyGroupAuthorizeSecurityPolicyRuleArray and EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput` via:
//
//          EcdPolicyGroupAuthorizeSecurityPolicyRuleArray{ EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{...} }
type EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput
	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArray []EcdPolicyGroupAuthorizeSecurityPolicyRuleInput

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return i.ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

// The cidrip of authorize access rule.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.CidrIp }).(pulumi.StringPtrOutput)
}

// The description of authorize access rule.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ip protocol of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// The policy of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port range of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The priority of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// The type of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcdPolicyGroupAuthorizeSecurityPolicyRule {
		return vs[0].([]EcdPolicyGroupAuthorizeSecurityPolicyRule)[vs[1].(int)]
	}).(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput)
}

type GetBundlesBundle struct {
	// The bundle id of the bundle.
	BundleId string `pulumi:"bundleId"`
	// The name of the bundle.
	BundleName string `pulumi:"bundleName"`
	// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
	BundleType string `pulumi:"bundleType"`
	// The description of the bundle.
	Description string `pulumi:"description"`
	// The desktop type of the bundle.
	DesktopType string `pulumi:"desktopType"`
	// The desktop type attribute of the bundle.
	DesktopTypeAttributes []GetBundlesBundleDesktopTypeAttribute `pulumi:"desktopTypeAttributes"`
	// The disks of the bundle.
	Disks []GetBundlesBundleDisk `pulumi:"disks"`
	// The ID of the bundle.
	Id string `pulumi:"id"`
	// The image id attribute of the bundle.
	ImageId string `pulumi:"imageId"`
	// The os type attribute of the bundle.
	OsType string `pulumi:"osType"`
}

// GetBundlesBundleInput is an input type that accepts GetBundlesBundleArgs and GetBundlesBundleOutput values.
// You can construct a concrete instance of `GetBundlesBundleInput` via:
//
//          GetBundlesBundleArgs{...}
type GetBundlesBundleInput interface {
	pulumi.Input

	ToGetBundlesBundleOutput() GetBundlesBundleOutput
	ToGetBundlesBundleOutputWithContext(context.Context) GetBundlesBundleOutput
}

type GetBundlesBundleArgs struct {
	// The bundle id of the bundle.
	BundleId pulumi.StringInput `pulumi:"bundleId"`
	// The name of the bundle.
	BundleName pulumi.StringInput `pulumi:"bundleName"`
	// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
	BundleType pulumi.StringInput `pulumi:"bundleType"`
	// The description of the bundle.
	Description pulumi.StringInput `pulumi:"description"`
	// The desktop type of the bundle.
	DesktopType pulumi.StringInput `pulumi:"desktopType"`
	// The desktop type attribute of the bundle.
	DesktopTypeAttributes GetBundlesBundleDesktopTypeAttributeArrayInput `pulumi:"desktopTypeAttributes"`
	// The disks of the bundle.
	Disks GetBundlesBundleDiskArrayInput `pulumi:"disks"`
	// The ID of the bundle.
	Id pulumi.StringInput `pulumi:"id"`
	// The image id attribute of the bundle.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The os type attribute of the bundle.
	OsType pulumi.StringInput `pulumi:"osType"`
}

func (GetBundlesBundleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundle)(nil)).Elem()
}

func (i GetBundlesBundleArgs) ToGetBundlesBundleOutput() GetBundlesBundleOutput {
	return i.ToGetBundlesBundleOutputWithContext(context.Background())
}

func (i GetBundlesBundleArgs) ToGetBundlesBundleOutputWithContext(ctx context.Context) GetBundlesBundleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleOutput)
}

// GetBundlesBundleArrayInput is an input type that accepts GetBundlesBundleArray and GetBundlesBundleArrayOutput values.
// You can construct a concrete instance of `GetBundlesBundleArrayInput` via:
//
//          GetBundlesBundleArray{ GetBundlesBundleArgs{...} }
type GetBundlesBundleArrayInput interface {
	pulumi.Input

	ToGetBundlesBundleArrayOutput() GetBundlesBundleArrayOutput
	ToGetBundlesBundleArrayOutputWithContext(context.Context) GetBundlesBundleArrayOutput
}

type GetBundlesBundleArray []GetBundlesBundleInput

func (GetBundlesBundleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundle)(nil)).Elem()
}

func (i GetBundlesBundleArray) ToGetBundlesBundleArrayOutput() GetBundlesBundleArrayOutput {
	return i.ToGetBundlesBundleArrayOutputWithContext(context.Background())
}

func (i GetBundlesBundleArray) ToGetBundlesBundleArrayOutputWithContext(ctx context.Context) GetBundlesBundleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleArrayOutput)
}

type GetBundlesBundleOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundle)(nil)).Elem()
}

func (o GetBundlesBundleOutput) ToGetBundlesBundleOutput() GetBundlesBundleOutput {
	return o
}

func (o GetBundlesBundleOutput) ToGetBundlesBundleOutputWithContext(ctx context.Context) GetBundlesBundleOutput {
	return o
}

// The bundle id of the bundle.
func (o GetBundlesBundleOutput) BundleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.BundleId }).(pulumi.StringOutput)
}

// The name of the bundle.
func (o GetBundlesBundleOutput) BundleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.BundleName }).(pulumi.StringOutput)
}

// The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
func (o GetBundlesBundleOutput) BundleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.BundleType }).(pulumi.StringOutput)
}

// The description of the bundle.
func (o GetBundlesBundleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.Description }).(pulumi.StringOutput)
}

// The desktop type of the bundle.
func (o GetBundlesBundleOutput) DesktopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.DesktopType }).(pulumi.StringOutput)
}

// The desktop type attribute of the bundle.
func (o GetBundlesBundleOutput) DesktopTypeAttributes() GetBundlesBundleDesktopTypeAttributeArrayOutput {
	return o.ApplyT(func(v GetBundlesBundle) []GetBundlesBundleDesktopTypeAttribute { return v.DesktopTypeAttributes }).(GetBundlesBundleDesktopTypeAttributeArrayOutput)
}

// The disks of the bundle.
func (o GetBundlesBundleOutput) Disks() GetBundlesBundleDiskArrayOutput {
	return o.ApplyT(func(v GetBundlesBundle) []GetBundlesBundleDisk { return v.Disks }).(GetBundlesBundleDiskArrayOutput)
}

// The ID of the bundle.
func (o GetBundlesBundleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.Id }).(pulumi.StringOutput)
}

// The image id attribute of the bundle.
func (o GetBundlesBundleOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.ImageId }).(pulumi.StringOutput)
}

// The os type attribute of the bundle.
func (o GetBundlesBundleOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundle) string { return v.OsType }).(pulumi.StringOutput)
}

type GetBundlesBundleArrayOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundle)(nil)).Elem()
}

func (o GetBundlesBundleArrayOutput) ToGetBundlesBundleArrayOutput() GetBundlesBundleArrayOutput {
	return o
}

func (o GetBundlesBundleArrayOutput) ToGetBundlesBundleArrayOutputWithContext(ctx context.Context) GetBundlesBundleArrayOutput {
	return o
}

func (o GetBundlesBundleArrayOutput) Index(i pulumi.IntInput) GetBundlesBundleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundlesBundle {
		return vs[0].([]GetBundlesBundle)[vs[1].(int)]
	}).(GetBundlesBundleOutput)
}

type GetBundlesBundleDesktopTypeAttribute struct {
	// The cpu count attribute of the bundle.
	CpuCount int `pulumi:"cpuCount"`
	// The gpu count attribute of the bundle.
	GpuCount string `pulumi:"gpuCount"`
	// The gpu spec attribute of the bundle.
	GpuSpec string `pulumi:"gpuSpec"`
	// The memory size attribute of the bundle.
	MemorySize string `pulumi:"memorySize"`
}

// GetBundlesBundleDesktopTypeAttributeInput is an input type that accepts GetBundlesBundleDesktopTypeAttributeArgs and GetBundlesBundleDesktopTypeAttributeOutput values.
// You can construct a concrete instance of `GetBundlesBundleDesktopTypeAttributeInput` via:
//
//          GetBundlesBundleDesktopTypeAttributeArgs{...}
type GetBundlesBundleDesktopTypeAttributeInput interface {
	pulumi.Input

	ToGetBundlesBundleDesktopTypeAttributeOutput() GetBundlesBundleDesktopTypeAttributeOutput
	ToGetBundlesBundleDesktopTypeAttributeOutputWithContext(context.Context) GetBundlesBundleDesktopTypeAttributeOutput
}

type GetBundlesBundleDesktopTypeAttributeArgs struct {
	// The cpu count attribute of the bundle.
	CpuCount pulumi.IntInput `pulumi:"cpuCount"`
	// The gpu count attribute of the bundle.
	GpuCount pulumi.StringInput `pulumi:"gpuCount"`
	// The gpu spec attribute of the bundle.
	GpuSpec pulumi.StringInput `pulumi:"gpuSpec"`
	// The memory size attribute of the bundle.
	MemorySize pulumi.StringInput `pulumi:"memorySize"`
}

func (GetBundlesBundleDesktopTypeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundleDesktopTypeAttribute)(nil)).Elem()
}

func (i GetBundlesBundleDesktopTypeAttributeArgs) ToGetBundlesBundleDesktopTypeAttributeOutput() GetBundlesBundleDesktopTypeAttributeOutput {
	return i.ToGetBundlesBundleDesktopTypeAttributeOutputWithContext(context.Background())
}

func (i GetBundlesBundleDesktopTypeAttributeArgs) ToGetBundlesBundleDesktopTypeAttributeOutputWithContext(ctx context.Context) GetBundlesBundleDesktopTypeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleDesktopTypeAttributeOutput)
}

// GetBundlesBundleDesktopTypeAttributeArrayInput is an input type that accepts GetBundlesBundleDesktopTypeAttributeArray and GetBundlesBundleDesktopTypeAttributeArrayOutput values.
// You can construct a concrete instance of `GetBundlesBundleDesktopTypeAttributeArrayInput` via:
//
//          GetBundlesBundleDesktopTypeAttributeArray{ GetBundlesBundleDesktopTypeAttributeArgs{...} }
type GetBundlesBundleDesktopTypeAttributeArrayInput interface {
	pulumi.Input

	ToGetBundlesBundleDesktopTypeAttributeArrayOutput() GetBundlesBundleDesktopTypeAttributeArrayOutput
	ToGetBundlesBundleDesktopTypeAttributeArrayOutputWithContext(context.Context) GetBundlesBundleDesktopTypeAttributeArrayOutput
}

type GetBundlesBundleDesktopTypeAttributeArray []GetBundlesBundleDesktopTypeAttributeInput

func (GetBundlesBundleDesktopTypeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundleDesktopTypeAttribute)(nil)).Elem()
}

func (i GetBundlesBundleDesktopTypeAttributeArray) ToGetBundlesBundleDesktopTypeAttributeArrayOutput() GetBundlesBundleDesktopTypeAttributeArrayOutput {
	return i.ToGetBundlesBundleDesktopTypeAttributeArrayOutputWithContext(context.Background())
}

func (i GetBundlesBundleDesktopTypeAttributeArray) ToGetBundlesBundleDesktopTypeAttributeArrayOutputWithContext(ctx context.Context) GetBundlesBundleDesktopTypeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleDesktopTypeAttributeArrayOutput)
}

type GetBundlesBundleDesktopTypeAttributeOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleDesktopTypeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundleDesktopTypeAttribute)(nil)).Elem()
}

func (o GetBundlesBundleDesktopTypeAttributeOutput) ToGetBundlesBundleDesktopTypeAttributeOutput() GetBundlesBundleDesktopTypeAttributeOutput {
	return o
}

func (o GetBundlesBundleDesktopTypeAttributeOutput) ToGetBundlesBundleDesktopTypeAttributeOutputWithContext(ctx context.Context) GetBundlesBundleDesktopTypeAttributeOutput {
	return o
}

// The cpu count attribute of the bundle.
func (o GetBundlesBundleDesktopTypeAttributeOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBundlesBundleDesktopTypeAttribute) int { return v.CpuCount }).(pulumi.IntOutput)
}

// The gpu count attribute of the bundle.
func (o GetBundlesBundleDesktopTypeAttributeOutput) GpuCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundleDesktopTypeAttribute) string { return v.GpuCount }).(pulumi.StringOutput)
}

// The gpu spec attribute of the bundle.
func (o GetBundlesBundleDesktopTypeAttributeOutput) GpuSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundleDesktopTypeAttribute) string { return v.GpuSpec }).(pulumi.StringOutput)
}

// The memory size attribute of the bundle.
func (o GetBundlesBundleDesktopTypeAttributeOutput) MemorySize() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundleDesktopTypeAttribute) string { return v.MemorySize }).(pulumi.StringOutput)
}

type GetBundlesBundleDesktopTypeAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleDesktopTypeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundleDesktopTypeAttribute)(nil)).Elem()
}

func (o GetBundlesBundleDesktopTypeAttributeArrayOutput) ToGetBundlesBundleDesktopTypeAttributeArrayOutput() GetBundlesBundleDesktopTypeAttributeArrayOutput {
	return o
}

func (o GetBundlesBundleDesktopTypeAttributeArrayOutput) ToGetBundlesBundleDesktopTypeAttributeArrayOutputWithContext(ctx context.Context) GetBundlesBundleDesktopTypeAttributeArrayOutput {
	return o
}

func (o GetBundlesBundleDesktopTypeAttributeArrayOutput) Index(i pulumi.IntInput) GetBundlesBundleDesktopTypeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundlesBundleDesktopTypeAttribute {
		return vs[0].([]GetBundlesBundleDesktopTypeAttribute)[vs[1].(int)]
	}).(GetBundlesBundleDesktopTypeAttributeOutput)
}

type GetBundlesBundleDisk struct {
	// The disk size attribute of the bundle.
	DiskSize string `pulumi:"diskSize"`
	// The disk type attribute of the bundle.
	DiskType string `pulumi:"diskType"`
}

// GetBundlesBundleDiskInput is an input type that accepts GetBundlesBundleDiskArgs and GetBundlesBundleDiskOutput values.
// You can construct a concrete instance of `GetBundlesBundleDiskInput` via:
//
//          GetBundlesBundleDiskArgs{...}
type GetBundlesBundleDiskInput interface {
	pulumi.Input

	ToGetBundlesBundleDiskOutput() GetBundlesBundleDiskOutput
	ToGetBundlesBundleDiskOutputWithContext(context.Context) GetBundlesBundleDiskOutput
}

type GetBundlesBundleDiskArgs struct {
	// The disk size attribute of the bundle.
	DiskSize pulumi.StringInput `pulumi:"diskSize"`
	// The disk type attribute of the bundle.
	DiskType pulumi.StringInput `pulumi:"diskType"`
}

func (GetBundlesBundleDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundleDisk)(nil)).Elem()
}

func (i GetBundlesBundleDiskArgs) ToGetBundlesBundleDiskOutput() GetBundlesBundleDiskOutput {
	return i.ToGetBundlesBundleDiskOutputWithContext(context.Background())
}

func (i GetBundlesBundleDiskArgs) ToGetBundlesBundleDiskOutputWithContext(ctx context.Context) GetBundlesBundleDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleDiskOutput)
}

// GetBundlesBundleDiskArrayInput is an input type that accepts GetBundlesBundleDiskArray and GetBundlesBundleDiskArrayOutput values.
// You can construct a concrete instance of `GetBundlesBundleDiskArrayInput` via:
//
//          GetBundlesBundleDiskArray{ GetBundlesBundleDiskArgs{...} }
type GetBundlesBundleDiskArrayInput interface {
	pulumi.Input

	ToGetBundlesBundleDiskArrayOutput() GetBundlesBundleDiskArrayOutput
	ToGetBundlesBundleDiskArrayOutputWithContext(context.Context) GetBundlesBundleDiskArrayOutput
}

type GetBundlesBundleDiskArray []GetBundlesBundleDiskInput

func (GetBundlesBundleDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundleDisk)(nil)).Elem()
}

func (i GetBundlesBundleDiskArray) ToGetBundlesBundleDiskArrayOutput() GetBundlesBundleDiskArrayOutput {
	return i.ToGetBundlesBundleDiskArrayOutputWithContext(context.Background())
}

func (i GetBundlesBundleDiskArray) ToGetBundlesBundleDiskArrayOutputWithContext(ctx context.Context) GetBundlesBundleDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundlesBundleDiskArrayOutput)
}

type GetBundlesBundleDiskOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundlesBundleDisk)(nil)).Elem()
}

func (o GetBundlesBundleDiskOutput) ToGetBundlesBundleDiskOutput() GetBundlesBundleDiskOutput {
	return o
}

func (o GetBundlesBundleDiskOutput) ToGetBundlesBundleDiskOutputWithContext(ctx context.Context) GetBundlesBundleDiskOutput {
	return o
}

// The disk size attribute of the bundle.
func (o GetBundlesBundleDiskOutput) DiskSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundleDisk) string { return v.DiskSize }).(pulumi.StringOutput)
}

// The disk type attribute of the bundle.
func (o GetBundlesBundleDiskOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundlesBundleDisk) string { return v.DiskType }).(pulumi.StringOutput)
}

type GetBundlesBundleDiskArrayOutput struct{ *pulumi.OutputState }

func (GetBundlesBundleDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundlesBundleDisk)(nil)).Elem()
}

func (o GetBundlesBundleDiskArrayOutput) ToGetBundlesBundleDiskArrayOutput() GetBundlesBundleDiskArrayOutput {
	return o
}

func (o GetBundlesBundleDiskArrayOutput) ToGetBundlesBundleDiskArrayOutputWithContext(ctx context.Context) GetBundlesBundleDiskArrayOutput {
	return o
}

func (o GetBundlesBundleDiskArrayOutput) Index(i pulumi.IntInput) GetBundlesBundleDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundlesBundleDisk {
		return vs[0].([]GetBundlesBundleDisk)[vs[1].(int)]
	}).(GetBundlesBundleDiskOutput)
}

type GetCommandsCommand struct {
	// The Contents of the Script to Base64 Encoded Transmission.
	CommandContent string `pulumi:"commandContent"`
	// The Script Type. Valid values: `RunBatScript`, `RunPowerShellScript`.
	CommandType string `pulumi:"commandType"`
	// The Task of Creation Time.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Command.
	Id string `pulumi:"id"`
	// The Implementation of the Target Cloud Desktop Collection.
	InvokeDesktops []GetCommandsCommandInvokeDesktop `pulumi:"invokeDesktops"`
	// The invoke id of the Command.
	InvokeId string `pulumi:"invokeId"`
	// Script Is Executed in the Overall Implementation of the State. Valid values: `Pending`, `Failed`, `PartialFailed`, `Running`, `Stopped`, `Stopping`, `Finished`, `Success`.
	Status string `pulumi:"status"`
}

// GetCommandsCommandInput is an input type that accepts GetCommandsCommandArgs and GetCommandsCommandOutput values.
// You can construct a concrete instance of `GetCommandsCommandInput` via:
//
//          GetCommandsCommandArgs{...}
type GetCommandsCommandInput interface {
	pulumi.Input

	ToGetCommandsCommandOutput() GetCommandsCommandOutput
	ToGetCommandsCommandOutputWithContext(context.Context) GetCommandsCommandOutput
}

type GetCommandsCommandArgs struct {
	// The Contents of the Script to Base64 Encoded Transmission.
	CommandContent pulumi.StringInput `pulumi:"commandContent"`
	// The Script Type. Valid values: `RunBatScript`, `RunPowerShellScript`.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// The Task of Creation Time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Command.
	Id pulumi.StringInput `pulumi:"id"`
	// The Implementation of the Target Cloud Desktop Collection.
	InvokeDesktops GetCommandsCommandInvokeDesktopArrayInput `pulumi:"invokeDesktops"`
	// The invoke id of the Command.
	InvokeId pulumi.StringInput `pulumi:"invokeId"`
	// Script Is Executed in the Overall Implementation of the State. Valid values: `Pending`, `Failed`, `PartialFailed`, `Running`, `Stopped`, `Stopping`, `Finished`, `Success`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetCommandsCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommand)(nil)).Elem()
}

func (i GetCommandsCommandArgs) ToGetCommandsCommandOutput() GetCommandsCommandOutput {
	return i.ToGetCommandsCommandOutputWithContext(context.Background())
}

func (i GetCommandsCommandArgs) ToGetCommandsCommandOutputWithContext(ctx context.Context) GetCommandsCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandOutput)
}

// GetCommandsCommandArrayInput is an input type that accepts GetCommandsCommandArray and GetCommandsCommandArrayOutput values.
// You can construct a concrete instance of `GetCommandsCommandArrayInput` via:
//
//          GetCommandsCommandArray{ GetCommandsCommandArgs{...} }
type GetCommandsCommandArrayInput interface {
	pulumi.Input

	ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput
	ToGetCommandsCommandArrayOutputWithContext(context.Context) GetCommandsCommandArrayOutput
}

type GetCommandsCommandArray []GetCommandsCommandInput

func (GetCommandsCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommand)(nil)).Elem()
}

func (i GetCommandsCommandArray) ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput {
	return i.ToGetCommandsCommandArrayOutputWithContext(context.Background())
}

func (i GetCommandsCommandArray) ToGetCommandsCommandArrayOutputWithContext(ctx context.Context) GetCommandsCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandArrayOutput)
}

type GetCommandsCommandOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommand)(nil)).Elem()
}

func (o GetCommandsCommandOutput) ToGetCommandsCommandOutput() GetCommandsCommandOutput {
	return o
}

func (o GetCommandsCommandOutput) ToGetCommandsCommandOutputWithContext(ctx context.Context) GetCommandsCommandOutput {
	return o
}

// The Contents of the Script to Base64 Encoded Transmission.
func (o GetCommandsCommandOutput) CommandContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.CommandContent }).(pulumi.StringOutput)
}

// The Script Type. Valid values: `RunBatScript`, `RunPowerShellScript`.
func (o GetCommandsCommandOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.CommandType }).(pulumi.StringOutput)
}

// The Task of Creation Time.
func (o GetCommandsCommandOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Command.
func (o GetCommandsCommandOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Id }).(pulumi.StringOutput)
}

// The Implementation of the Target Cloud Desktop Collection.
func (o GetCommandsCommandOutput) InvokeDesktops() GetCommandsCommandInvokeDesktopArrayOutput {
	return o.ApplyT(func(v GetCommandsCommand) []GetCommandsCommandInvokeDesktop { return v.InvokeDesktops }).(GetCommandsCommandInvokeDesktopArrayOutput)
}

// The invoke id of the Command.
func (o GetCommandsCommandOutput) InvokeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.InvokeId }).(pulumi.StringOutput)
}

// Script Is Executed in the Overall Implementation of the State. Valid values: `Pending`, `Failed`, `PartialFailed`, `Running`, `Stopped`, `Stopping`, `Finished`, `Success`.
func (o GetCommandsCommandOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommand) string { return v.Status }).(pulumi.StringOutput)
}

type GetCommandsCommandArrayOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommand)(nil)).Elem()
}

func (o GetCommandsCommandArrayOutput) ToGetCommandsCommandArrayOutput() GetCommandsCommandArrayOutput {
	return o
}

func (o GetCommandsCommandArrayOutput) ToGetCommandsCommandArrayOutputWithContext(ctx context.Context) GetCommandsCommandArrayOutput {
	return o
}

func (o GetCommandsCommandArrayOutput) Index(i pulumi.IntInput) GetCommandsCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommandsCommand {
		return vs[0].([]GetCommandsCommand)[vs[1].(int)]
	}).(GetCommandsCommandOutput)
}

type GetCommandsCommandInvokeDesktop struct {
	// The desktop id of the Desktop.
	DesktopId string `pulumi:"desktopId"`
	// Output Field Text Length Exceeds 24 KB of Truncated Discarded Text Length.
	Dropped int `pulumi:"dropped"`
	// Command of the Failure Or Perform the Reason for the Failure of the Code.
	ErrorCode string `pulumi:"errorCode"`
	// Command of the Failure Or Perform the Reason for the Failure of the Details.
	ErrorInfo string `pulumi:"errorInfo"`
	// Command of the Failure Or Perform the Reason for the Failure of the Details.
	ExitCode string `pulumi:"exitCode"`
	// The Script Process until the End of Time.
	FinishTime string `pulumi:"finishTime"`
	// A Single Cloud Desktop Script Progress Status.
	InvocationStatus string `pulumi:"invocationStatus"`
	// Script the Output of the Process.
	Output string `pulumi:"output"`
	// Command in the Desktop Implementation.
	Repeats int `pulumi:"repeats"`
	// The Script Process on the Desktop, in the Start Timing of the Execution.
	StartTime string `pulumi:"startTime"`
	// If You Use the invocation Indicates That the Call of the Time.
	StopTime string `pulumi:"stopTime"`
}

// GetCommandsCommandInvokeDesktopInput is an input type that accepts GetCommandsCommandInvokeDesktopArgs and GetCommandsCommandInvokeDesktopOutput values.
// You can construct a concrete instance of `GetCommandsCommandInvokeDesktopInput` via:
//
//          GetCommandsCommandInvokeDesktopArgs{...}
type GetCommandsCommandInvokeDesktopInput interface {
	pulumi.Input

	ToGetCommandsCommandInvokeDesktopOutput() GetCommandsCommandInvokeDesktopOutput
	ToGetCommandsCommandInvokeDesktopOutputWithContext(context.Context) GetCommandsCommandInvokeDesktopOutput
}

type GetCommandsCommandInvokeDesktopArgs struct {
	// The desktop id of the Desktop.
	DesktopId pulumi.StringInput `pulumi:"desktopId"`
	// Output Field Text Length Exceeds 24 KB of Truncated Discarded Text Length.
	Dropped pulumi.IntInput `pulumi:"dropped"`
	// Command of the Failure Or Perform the Reason for the Failure of the Code.
	ErrorCode pulumi.StringInput `pulumi:"errorCode"`
	// Command of the Failure Or Perform the Reason for the Failure of the Details.
	ErrorInfo pulumi.StringInput `pulumi:"errorInfo"`
	// Command of the Failure Or Perform the Reason for the Failure of the Details.
	ExitCode pulumi.StringInput `pulumi:"exitCode"`
	// The Script Process until the End of Time.
	FinishTime pulumi.StringInput `pulumi:"finishTime"`
	// A Single Cloud Desktop Script Progress Status.
	InvocationStatus pulumi.StringInput `pulumi:"invocationStatus"`
	// Script the Output of the Process.
	Output pulumi.StringInput `pulumi:"output"`
	// Command in the Desktop Implementation.
	Repeats pulumi.IntInput `pulumi:"repeats"`
	// The Script Process on the Desktop, in the Start Timing of the Execution.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// If You Use the invocation Indicates That the Call of the Time.
	StopTime pulumi.StringInput `pulumi:"stopTime"`
}

func (GetCommandsCommandInvokeDesktopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommandInvokeDesktop)(nil)).Elem()
}

func (i GetCommandsCommandInvokeDesktopArgs) ToGetCommandsCommandInvokeDesktopOutput() GetCommandsCommandInvokeDesktopOutput {
	return i.ToGetCommandsCommandInvokeDesktopOutputWithContext(context.Background())
}

func (i GetCommandsCommandInvokeDesktopArgs) ToGetCommandsCommandInvokeDesktopOutputWithContext(ctx context.Context) GetCommandsCommandInvokeDesktopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandInvokeDesktopOutput)
}

// GetCommandsCommandInvokeDesktopArrayInput is an input type that accepts GetCommandsCommandInvokeDesktopArray and GetCommandsCommandInvokeDesktopArrayOutput values.
// You can construct a concrete instance of `GetCommandsCommandInvokeDesktopArrayInput` via:
//
//          GetCommandsCommandInvokeDesktopArray{ GetCommandsCommandInvokeDesktopArgs{...} }
type GetCommandsCommandInvokeDesktopArrayInput interface {
	pulumi.Input

	ToGetCommandsCommandInvokeDesktopArrayOutput() GetCommandsCommandInvokeDesktopArrayOutput
	ToGetCommandsCommandInvokeDesktopArrayOutputWithContext(context.Context) GetCommandsCommandInvokeDesktopArrayOutput
}

type GetCommandsCommandInvokeDesktopArray []GetCommandsCommandInvokeDesktopInput

func (GetCommandsCommandInvokeDesktopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommandInvokeDesktop)(nil)).Elem()
}

func (i GetCommandsCommandInvokeDesktopArray) ToGetCommandsCommandInvokeDesktopArrayOutput() GetCommandsCommandInvokeDesktopArrayOutput {
	return i.ToGetCommandsCommandInvokeDesktopArrayOutputWithContext(context.Background())
}

func (i GetCommandsCommandInvokeDesktopArray) ToGetCommandsCommandInvokeDesktopArrayOutputWithContext(ctx context.Context) GetCommandsCommandInvokeDesktopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCommandsCommandInvokeDesktopArrayOutput)
}

type GetCommandsCommandInvokeDesktopOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandInvokeDesktopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCommandsCommandInvokeDesktop)(nil)).Elem()
}

func (o GetCommandsCommandInvokeDesktopOutput) ToGetCommandsCommandInvokeDesktopOutput() GetCommandsCommandInvokeDesktopOutput {
	return o
}

func (o GetCommandsCommandInvokeDesktopOutput) ToGetCommandsCommandInvokeDesktopOutputWithContext(ctx context.Context) GetCommandsCommandInvokeDesktopOutput {
	return o
}

// The desktop id of the Desktop.
func (o GetCommandsCommandInvokeDesktopOutput) DesktopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.DesktopId }).(pulumi.StringOutput)
}

// Output Field Text Length Exceeds 24 KB of Truncated Discarded Text Length.
func (o GetCommandsCommandInvokeDesktopOutput) Dropped() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) int { return v.Dropped }).(pulumi.IntOutput)
}

// Command of the Failure Or Perform the Reason for the Failure of the Code.
func (o GetCommandsCommandInvokeDesktopOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Command of the Failure Or Perform the Reason for the Failure of the Details.
func (o GetCommandsCommandInvokeDesktopOutput) ErrorInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.ErrorInfo }).(pulumi.StringOutput)
}

// Command of the Failure Or Perform the Reason for the Failure of the Details.
func (o GetCommandsCommandInvokeDesktopOutput) ExitCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.ExitCode }).(pulumi.StringOutput)
}

// The Script Process until the End of Time.
func (o GetCommandsCommandInvokeDesktopOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.FinishTime }).(pulumi.StringOutput)
}

// A Single Cloud Desktop Script Progress Status.
func (o GetCommandsCommandInvokeDesktopOutput) InvocationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.InvocationStatus }).(pulumi.StringOutput)
}

// Script the Output of the Process.
func (o GetCommandsCommandInvokeDesktopOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.Output }).(pulumi.StringOutput)
}

// Command in the Desktop Implementation.
func (o GetCommandsCommandInvokeDesktopOutput) Repeats() pulumi.IntOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) int { return v.Repeats }).(pulumi.IntOutput)
}

// The Script Process on the Desktop, in the Start Timing of the Execution.
func (o GetCommandsCommandInvokeDesktopOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.StartTime }).(pulumi.StringOutput)
}

// If You Use the invocation Indicates That the Call of the Time.
func (o GetCommandsCommandInvokeDesktopOutput) StopTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCommandsCommandInvokeDesktop) string { return v.StopTime }).(pulumi.StringOutput)
}

type GetCommandsCommandInvokeDesktopArrayOutput struct{ *pulumi.OutputState }

func (GetCommandsCommandInvokeDesktopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCommandsCommandInvokeDesktop)(nil)).Elem()
}

func (o GetCommandsCommandInvokeDesktopArrayOutput) ToGetCommandsCommandInvokeDesktopArrayOutput() GetCommandsCommandInvokeDesktopArrayOutput {
	return o
}

func (o GetCommandsCommandInvokeDesktopArrayOutput) ToGetCommandsCommandInvokeDesktopArrayOutputWithContext(ctx context.Context) GetCommandsCommandInvokeDesktopArrayOutput {
	return o
}

func (o GetCommandsCommandInvokeDesktopArrayOutput) Index(i pulumi.IntInput) GetCommandsCommandInvokeDesktopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCommandsCommandInvokeDesktop {
		return vs[0].([]GetCommandsCommandInvokeDesktop)[vs[1].(int)]
	}).(GetCommandsCommandInvokeDesktopOutput)
}

type GetDesktopsDesktop struct {
	// The number of CPUs.
	Cpu int `pulumi:"cpu"`
	// The creation time of the Desktop.
	CreateTime string `pulumi:"createTime"`
	// The desktop id of the Desktop.
	DesktopId string `pulumi:"desktopId"`
	// The desktop name of the Desktop.
	DesktopName string `pulumi:"desktopName"`
	// The desktop type of the Desktop.
	DesktopType string `pulumi:"desktopType"`
	// The directory id of the Desktop.
	DirectoryId string `pulumi:"directoryId"`
	// The desktop end user id of the Desktop.
	EndUserIds []string `pulumi:"endUserIds"`
	// The expired time of the Desktop.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Desktop.
	Id string `pulumi:"id"`
	// The image id of the Desktop.
	ImageId string `pulumi:"imageId"`
	// The memory of the Desktop.
	Memory string `pulumi:"memory"`
	// The network interface id of the Desktop.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The payment type of the Desktop.
	PaymentType string `pulumi:"paymentType"`
	// The policy group id of the Desktop.
	PolicyGroupId string `pulumi:"policyGroupId"`
	// The status of the Desktop. Valid values: `Deleted`, `Expired`, `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`.
	Status string `pulumi:"status"`
	// The system disk size of the Desktop.
	SystemDiskSize int `pulumi:"systemDiskSize"`
}

// GetDesktopsDesktopInput is an input type that accepts GetDesktopsDesktopArgs and GetDesktopsDesktopOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopInput` via:
//
//          GetDesktopsDesktopArgs{...}
type GetDesktopsDesktopInput interface {
	pulumi.Input

	ToGetDesktopsDesktopOutput() GetDesktopsDesktopOutput
	ToGetDesktopsDesktopOutputWithContext(context.Context) GetDesktopsDesktopOutput
}

type GetDesktopsDesktopArgs struct {
	// The number of CPUs.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// The creation time of the Desktop.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The desktop id of the Desktop.
	DesktopId pulumi.StringInput `pulumi:"desktopId"`
	// The desktop name of the Desktop.
	DesktopName pulumi.StringInput `pulumi:"desktopName"`
	// The desktop type of the Desktop.
	DesktopType pulumi.StringInput `pulumi:"desktopType"`
	// The directory id of the Desktop.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
	// The desktop end user id of the Desktop.
	EndUserIds pulumi.StringArrayInput `pulumi:"endUserIds"`
	// The expired time of the Desktop.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Desktop.
	Id pulumi.StringInput `pulumi:"id"`
	// The image id of the Desktop.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The memory of the Desktop.
	Memory pulumi.StringInput `pulumi:"memory"`
	// The network interface id of the Desktop.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The payment type of the Desktop.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The policy group id of the Desktop.
	PolicyGroupId pulumi.StringInput `pulumi:"policyGroupId"`
	// The status of the Desktop. Valid values: `Deleted`, `Expired`, `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`.
	Status pulumi.StringInput `pulumi:"status"`
	// The system disk size of the Desktop.
	SystemDiskSize pulumi.IntInput `pulumi:"systemDiskSize"`
}

func (GetDesktopsDesktopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktop)(nil)).Elem()
}

func (i GetDesktopsDesktopArgs) ToGetDesktopsDesktopOutput() GetDesktopsDesktopOutput {
	return i.ToGetDesktopsDesktopOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopArgs) ToGetDesktopsDesktopOutputWithContext(ctx context.Context) GetDesktopsDesktopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopOutput)
}

// GetDesktopsDesktopArrayInput is an input type that accepts GetDesktopsDesktopArray and GetDesktopsDesktopArrayOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopArrayInput` via:
//
//          GetDesktopsDesktopArray{ GetDesktopsDesktopArgs{...} }
type GetDesktopsDesktopArrayInput interface {
	pulumi.Input

	ToGetDesktopsDesktopArrayOutput() GetDesktopsDesktopArrayOutput
	ToGetDesktopsDesktopArrayOutputWithContext(context.Context) GetDesktopsDesktopArrayOutput
}

type GetDesktopsDesktopArray []GetDesktopsDesktopInput

func (GetDesktopsDesktopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktop)(nil)).Elem()
}

func (i GetDesktopsDesktopArray) ToGetDesktopsDesktopArrayOutput() GetDesktopsDesktopArrayOutput {
	return i.ToGetDesktopsDesktopArrayOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopArray) ToGetDesktopsDesktopArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopArrayOutput)
}

type GetDesktopsDesktopOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktop)(nil)).Elem()
}

func (o GetDesktopsDesktopOutput) ToGetDesktopsDesktopOutput() GetDesktopsDesktopOutput {
	return o
}

func (o GetDesktopsDesktopOutput) ToGetDesktopsDesktopOutputWithContext(ctx context.Context) GetDesktopsDesktopOutput {
	return o
}

// The number of CPUs.
func (o GetDesktopsDesktopOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) int { return v.Cpu }).(pulumi.IntOutput)
}

// The creation time of the Desktop.
func (o GetDesktopsDesktopOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The desktop id of the Desktop.
func (o GetDesktopsDesktopOutput) DesktopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.DesktopId }).(pulumi.StringOutput)
}

// The desktop name of the Desktop.
func (o GetDesktopsDesktopOutput) DesktopName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.DesktopName }).(pulumi.StringOutput)
}

// The desktop type of the Desktop.
func (o GetDesktopsDesktopOutput) DesktopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.DesktopType }).(pulumi.StringOutput)
}

// The directory id of the Desktop.
func (o GetDesktopsDesktopOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The desktop end user id of the Desktop.
func (o GetDesktopsDesktopOutput) EndUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) []string { return v.EndUserIds }).(pulumi.StringArrayOutput)
}

// The expired time of the Desktop.
func (o GetDesktopsDesktopOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Desktop.
func (o GetDesktopsDesktopOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.Id }).(pulumi.StringOutput)
}

// The image id of the Desktop.
func (o GetDesktopsDesktopOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.ImageId }).(pulumi.StringOutput)
}

// The memory of the Desktop.
func (o GetDesktopsDesktopOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.Memory }).(pulumi.StringOutput)
}

// The network interface id of the Desktop.
func (o GetDesktopsDesktopOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The payment type of the Desktop.
func (o GetDesktopsDesktopOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The policy group id of the Desktop.
func (o GetDesktopsDesktopOutput) PolicyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.PolicyGroupId }).(pulumi.StringOutput)
}

// The status of the Desktop. Valid values: `Deleted`, `Expired`, `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`.
func (o GetDesktopsDesktopOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) string { return v.Status }).(pulumi.StringOutput)
}

// The system disk size of the Desktop.
func (o GetDesktopsDesktopOutput) SystemDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopsDesktop) int { return v.SystemDiskSize }).(pulumi.IntOutput)
}

type GetDesktopsDesktopArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktop)(nil)).Elem()
}

func (o GetDesktopsDesktopArrayOutput) ToGetDesktopsDesktopArrayOutput() GetDesktopsDesktopArrayOutput {
	return o
}

func (o GetDesktopsDesktopArrayOutput) ToGetDesktopsDesktopArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopArrayOutput {
	return o
}

func (o GetDesktopsDesktopArrayOutput) Index(i pulumi.IntInput) GetDesktopsDesktopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopsDesktop {
		return vs[0].([]GetDesktopsDesktop)[vs[1].(int)]
	}).(GetDesktopsDesktopOutput)
}

type GetImagesImage struct {
	// The creation time of the image.
	CreateTime string `pulumi:"createTime"`
	// The size of data disk of the image.
	DataDiskSize int `pulumi:"dataDiskSize"`
	// The description of the image.
	Description string `pulumi:"description"`
	// The Gpu Category of the image.
	GpuCategory bool `pulumi:"gpuCategory"`
	// The ID of the Image.
	Id string `pulumi:"id"`
	// The image id of the image.
	ImageId string `pulumi:"imageId"`
	// The image name.
	ImageName string `pulumi:"imageName"`
	// The image type of the image. Valid values: `SYSTEM`, `CUSTOM`.
	ImageType string `pulumi:"imageType"`
	// The os type of the image.
	OsType string `pulumi:"osType"`
	// The progress of the image.
	Progress string `pulumi:"progress"`
	// The size of the image.
	Size int `pulumi:"size"`
	// The status of the image. Valid values: `Creating`, `Available`, `CreateFailed`.
	Status string `pulumi:"status"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//          GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	// The creation time of the image.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The size of data disk of the image.
	DataDiskSize pulumi.IntInput `pulumi:"dataDiskSize"`
	// The description of the image.
	Description pulumi.StringInput `pulumi:"description"`
	// The Gpu Category of the image.
	GpuCategory pulumi.BoolInput `pulumi:"gpuCategory"`
	// The ID of the Image.
	Id pulumi.StringInput `pulumi:"id"`
	// The image id of the image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The image name.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The image type of the image. Valid values: `SYSTEM`, `CUSTOM`.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// The os type of the image.
	OsType pulumi.StringInput `pulumi:"osType"`
	// The progress of the image.
	Progress pulumi.StringInput `pulumi:"progress"`
	// The size of the image.
	Size pulumi.IntInput `pulumi:"size"`
	// The status of the image. Valid values: `Creating`, `Available`, `CreateFailed`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//          GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

// The creation time of the image.
func (o GetImagesImageOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The size of data disk of the image.
func (o GetImagesImageOutput) DataDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.DataDiskSize }).(pulumi.IntOutput)
}

// The description of the image.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// The Gpu Category of the image.
func (o GetImagesImageOutput) GpuCategory() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.GpuCategory }).(pulumi.BoolOutput)
}

// The ID of the Image.
func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

// The image id of the image.
func (o GetImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The image name.
func (o GetImagesImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The image type of the image. Valid values: `SYSTEM`, `CUSTOM`.
func (o GetImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

// The os type of the image.
func (o GetImagesImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsType }).(pulumi.StringOutput)
}

// The progress of the image.
func (o GetImagesImageOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Progress }).(pulumi.StringOutput)
}

// The size of the image.
func (o GetImagesImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Size }).(pulumi.IntOutput)
}

// The status of the image. Valid values: `Creating`, `Available`, `CreateFailed`.
func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetNasFileSystemsSystem struct {
	// The capacity of nas file system.
	Capacity string `pulumi:"capacity"`
	// The create time of nas file system.
	CreateTime string `pulumi:"createTime"`
	// The description of nas file system.
	Description string `pulumi:"description"`
	// The filesystem id of nas file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The type of nas file system.
	FileSystemType string `pulumi:"fileSystemType"`
	// The ID of the Nas File System.
	Id string `pulumi:"id"`
	// The size of metered.
	MeteredSize string `pulumi:"meteredSize"`
	// The domain of mount target.
	MountTargetDomain string `pulumi:"mountTargetDomain"`
	// The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
	MountTargetStatus string `pulumi:"mountTargetStatus"`
	// The name of nas file system.
	NasFileSystemName string `pulumi:"nasFileSystemName"`
	// The ID of office site.
	OfficeSiteId string `pulumi:"officeSiteId"`
	// The name of office site.
	OfficeSiteName string `pulumi:"officeSiteName"`
	// The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
	Status string `pulumi:"status"`
	// The storage type of nas file system.
	StorageType string `pulumi:"storageType"`
	// Whether to support Acl.
	SupportAcl bool `pulumi:"supportAcl"`
	// The zone id of nas file system.
	ZoneId string `pulumi:"zoneId"`
}

// GetNasFileSystemsSystemInput is an input type that accepts GetNasFileSystemsSystemArgs and GetNasFileSystemsSystemOutput values.
// You can construct a concrete instance of `GetNasFileSystemsSystemInput` via:
//
//          GetNasFileSystemsSystemArgs{...}
type GetNasFileSystemsSystemInput interface {
	pulumi.Input

	ToGetNasFileSystemsSystemOutput() GetNasFileSystemsSystemOutput
	ToGetNasFileSystemsSystemOutputWithContext(context.Context) GetNasFileSystemsSystemOutput
}

type GetNasFileSystemsSystemArgs struct {
	// The capacity of nas file system.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The create time of nas file system.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of nas file system.
	Description pulumi.StringInput `pulumi:"description"`
	// The filesystem id of nas file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The type of nas file system.
	FileSystemType pulumi.StringInput `pulumi:"fileSystemType"`
	// The ID of the Nas File System.
	Id pulumi.StringInput `pulumi:"id"`
	// The size of metered.
	MeteredSize pulumi.StringInput `pulumi:"meteredSize"`
	// The domain of mount target.
	MountTargetDomain pulumi.StringInput `pulumi:"mountTargetDomain"`
	// The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
	MountTargetStatus pulumi.StringInput `pulumi:"mountTargetStatus"`
	// The name of nas file system.
	NasFileSystemName pulumi.StringInput `pulumi:"nasFileSystemName"`
	// The ID of office site.
	OfficeSiteId pulumi.StringInput `pulumi:"officeSiteId"`
	// The name of office site.
	OfficeSiteName pulumi.StringInput `pulumi:"officeSiteName"`
	// The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
	Status pulumi.StringInput `pulumi:"status"`
	// The storage type of nas file system.
	StorageType pulumi.StringInput `pulumi:"storageType"`
	// Whether to support Acl.
	SupportAcl pulumi.BoolInput `pulumi:"supportAcl"`
	// The zone id of nas file system.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetNasFileSystemsSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNasFileSystemsSystem)(nil)).Elem()
}

func (i GetNasFileSystemsSystemArgs) ToGetNasFileSystemsSystemOutput() GetNasFileSystemsSystemOutput {
	return i.ToGetNasFileSystemsSystemOutputWithContext(context.Background())
}

func (i GetNasFileSystemsSystemArgs) ToGetNasFileSystemsSystemOutputWithContext(ctx context.Context) GetNasFileSystemsSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNasFileSystemsSystemOutput)
}

// GetNasFileSystemsSystemArrayInput is an input type that accepts GetNasFileSystemsSystemArray and GetNasFileSystemsSystemArrayOutput values.
// You can construct a concrete instance of `GetNasFileSystemsSystemArrayInput` via:
//
//          GetNasFileSystemsSystemArray{ GetNasFileSystemsSystemArgs{...} }
type GetNasFileSystemsSystemArrayInput interface {
	pulumi.Input

	ToGetNasFileSystemsSystemArrayOutput() GetNasFileSystemsSystemArrayOutput
	ToGetNasFileSystemsSystemArrayOutputWithContext(context.Context) GetNasFileSystemsSystemArrayOutput
}

type GetNasFileSystemsSystemArray []GetNasFileSystemsSystemInput

func (GetNasFileSystemsSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNasFileSystemsSystem)(nil)).Elem()
}

func (i GetNasFileSystemsSystemArray) ToGetNasFileSystemsSystemArrayOutput() GetNasFileSystemsSystemArrayOutput {
	return i.ToGetNasFileSystemsSystemArrayOutputWithContext(context.Background())
}

func (i GetNasFileSystemsSystemArray) ToGetNasFileSystemsSystemArrayOutputWithContext(ctx context.Context) GetNasFileSystemsSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNasFileSystemsSystemArrayOutput)
}

type GetNasFileSystemsSystemOutput struct{ *pulumi.OutputState }

func (GetNasFileSystemsSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNasFileSystemsSystem)(nil)).Elem()
}

func (o GetNasFileSystemsSystemOutput) ToGetNasFileSystemsSystemOutput() GetNasFileSystemsSystemOutput {
	return o
}

func (o GetNasFileSystemsSystemOutput) ToGetNasFileSystemsSystemOutputWithContext(ctx context.Context) GetNasFileSystemsSystemOutput {
	return o
}

// The capacity of nas file system.
func (o GetNasFileSystemsSystemOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.Capacity }).(pulumi.StringOutput)
}

// The create time of nas file system.
func (o GetNasFileSystemsSystemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of nas file system.
func (o GetNasFileSystemsSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.Description }).(pulumi.StringOutput)
}

// The filesystem id of nas file system.
func (o GetNasFileSystemsSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The type of nas file system.
func (o GetNasFileSystemsSystemOutput) FileSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.FileSystemType }).(pulumi.StringOutput)
}

// The ID of the Nas File System.
func (o GetNasFileSystemsSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.Id }).(pulumi.StringOutput)
}

// The size of metered.
func (o GetNasFileSystemsSystemOutput) MeteredSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.MeteredSize }).(pulumi.StringOutput)
}

// The domain of mount target.
func (o GetNasFileSystemsSystemOutput) MountTargetDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.MountTargetDomain }).(pulumi.StringOutput)
}

// The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
func (o GetNasFileSystemsSystemOutput) MountTargetStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.MountTargetStatus }).(pulumi.StringOutput)
}

// The name of nas file system.
func (o GetNasFileSystemsSystemOutput) NasFileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.NasFileSystemName }).(pulumi.StringOutput)
}

// The ID of office site.
func (o GetNasFileSystemsSystemOutput) OfficeSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.OfficeSiteId }).(pulumi.StringOutput)
}

// The name of office site.
func (o GetNasFileSystemsSystemOutput) OfficeSiteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.OfficeSiteName }).(pulumi.StringOutput)
}

// The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
func (o GetNasFileSystemsSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.Status }).(pulumi.StringOutput)
}

// The storage type of nas file system.
func (o GetNasFileSystemsSystemOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.StorageType }).(pulumi.StringOutput)
}

// Whether to support Acl.
func (o GetNasFileSystemsSystemOutput) SupportAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) bool { return v.SupportAcl }).(pulumi.BoolOutput)
}

// The zone id of nas file system.
func (o GetNasFileSystemsSystemOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNasFileSystemsSystem) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetNasFileSystemsSystemArrayOutput struct{ *pulumi.OutputState }

func (GetNasFileSystemsSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNasFileSystemsSystem)(nil)).Elem()
}

func (o GetNasFileSystemsSystemArrayOutput) ToGetNasFileSystemsSystemArrayOutput() GetNasFileSystemsSystemArrayOutput {
	return o
}

func (o GetNasFileSystemsSystemArrayOutput) ToGetNasFileSystemsSystemArrayOutputWithContext(ctx context.Context) GetNasFileSystemsSystemArrayOutput {
	return o
}

func (o GetNasFileSystemsSystemArrayOutput) Index(i pulumi.IntInput) GetNasFileSystemsSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNasFileSystemsSystem {
		return vs[0].([]GetNasFileSystemsSystem)[vs[1].(int)]
	}).(GetNasFileSystemsSystemOutput)
}

type GetNetworkPackagesPackage struct {
	// The bandwidth of package.
	Bandwidth int `pulumi:"bandwidth"`
	// The creation time of network package.
	CreateTime string `pulumi:"createTime"`
	// The expired time of package.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Network Package.
	Id string `pulumi:"id"`
	// The internet charge type  of  package.
	InternetChargeType string `pulumi:"internetChargeType"`
	// The ID of network package.
	NetworkPackageId string `pulumi:"networkPackageId"`
	// The ID of office site.
	OfficeSiteId string `pulumi:"officeSiteId"`
	// The name of office site.
	OfficeSiteName string `pulumi:"officeSiteName"`
	// The status of network package. Valid values: `Creating`, `InUse`, `Releasing`,`Released`.
	Status string `pulumi:"status"`
}

// GetNetworkPackagesPackageInput is an input type that accepts GetNetworkPackagesPackageArgs and GetNetworkPackagesPackageOutput values.
// You can construct a concrete instance of `GetNetworkPackagesPackageInput` via:
//
//          GetNetworkPackagesPackageArgs{...}
type GetNetworkPackagesPackageInput interface {
	pulumi.Input

	ToGetNetworkPackagesPackageOutput() GetNetworkPackagesPackageOutput
	ToGetNetworkPackagesPackageOutputWithContext(context.Context) GetNetworkPackagesPackageOutput
}

type GetNetworkPackagesPackageArgs struct {
	// The bandwidth of package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The creation time of network package.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expired time of package.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Network Package.
	Id pulumi.StringInput `pulumi:"id"`
	// The internet charge type  of  package.
	InternetChargeType pulumi.StringInput `pulumi:"internetChargeType"`
	// The ID of network package.
	NetworkPackageId pulumi.StringInput `pulumi:"networkPackageId"`
	// The ID of office site.
	OfficeSiteId pulumi.StringInput `pulumi:"officeSiteId"`
	// The name of office site.
	OfficeSiteName pulumi.StringInput `pulumi:"officeSiteName"`
	// The status of network package. Valid values: `Creating`, `InUse`, `Releasing`,`Released`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNetworkPackagesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPackagesPackage)(nil)).Elem()
}

func (i GetNetworkPackagesPackageArgs) ToGetNetworkPackagesPackageOutput() GetNetworkPackagesPackageOutput {
	return i.ToGetNetworkPackagesPackageOutputWithContext(context.Background())
}

func (i GetNetworkPackagesPackageArgs) ToGetNetworkPackagesPackageOutputWithContext(ctx context.Context) GetNetworkPackagesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPackagesPackageOutput)
}

// GetNetworkPackagesPackageArrayInput is an input type that accepts GetNetworkPackagesPackageArray and GetNetworkPackagesPackageArrayOutput values.
// You can construct a concrete instance of `GetNetworkPackagesPackageArrayInput` via:
//
//          GetNetworkPackagesPackageArray{ GetNetworkPackagesPackageArgs{...} }
type GetNetworkPackagesPackageArrayInput interface {
	pulumi.Input

	ToGetNetworkPackagesPackageArrayOutput() GetNetworkPackagesPackageArrayOutput
	ToGetNetworkPackagesPackageArrayOutputWithContext(context.Context) GetNetworkPackagesPackageArrayOutput
}

type GetNetworkPackagesPackageArray []GetNetworkPackagesPackageInput

func (GetNetworkPackagesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPackagesPackage)(nil)).Elem()
}

func (i GetNetworkPackagesPackageArray) ToGetNetworkPackagesPackageArrayOutput() GetNetworkPackagesPackageArrayOutput {
	return i.ToGetNetworkPackagesPackageArrayOutputWithContext(context.Background())
}

func (i GetNetworkPackagesPackageArray) ToGetNetworkPackagesPackageArrayOutputWithContext(ctx context.Context) GetNetworkPackagesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPackagesPackageArrayOutput)
}

type GetNetworkPackagesPackageOutput struct{ *pulumi.OutputState }

func (GetNetworkPackagesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPackagesPackage)(nil)).Elem()
}

func (o GetNetworkPackagesPackageOutput) ToGetNetworkPackagesPackageOutput() GetNetworkPackagesPackageOutput {
	return o
}

func (o GetNetworkPackagesPackageOutput) ToGetNetworkPackagesPackageOutputWithContext(ctx context.Context) GetNetworkPackagesPackageOutput {
	return o
}

// The bandwidth of package.
func (o GetNetworkPackagesPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The creation time of network package.
func (o GetNetworkPackagesPackageOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expired time of package.
func (o GetNetworkPackagesPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Network Package.
func (o GetNetworkPackagesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The internet charge type  of  package.
func (o GetNetworkPackagesPackageOutput) InternetChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.InternetChargeType }).(pulumi.StringOutput)
}

// The ID of network package.
func (o GetNetworkPackagesPackageOutput) NetworkPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.NetworkPackageId }).(pulumi.StringOutput)
}

// The ID of office site.
func (o GetNetworkPackagesPackageOutput) OfficeSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.OfficeSiteId }).(pulumi.StringOutput)
}

// The name of office site.
func (o GetNetworkPackagesPackageOutput) OfficeSiteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.OfficeSiteName }).(pulumi.StringOutput)
}

// The status of network package. Valid values: `Creating`, `InUse`, `Releasing`,`Released`.
func (o GetNetworkPackagesPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPackagesPackage) string { return v.Status }).(pulumi.StringOutput)
}

type GetNetworkPackagesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPackagesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPackagesPackage)(nil)).Elem()
}

func (o GetNetworkPackagesPackageArrayOutput) ToGetNetworkPackagesPackageArrayOutput() GetNetworkPackagesPackageArrayOutput {
	return o
}

func (o GetNetworkPackagesPackageArrayOutput) ToGetNetworkPackagesPackageArrayOutputWithContext(ctx context.Context) GetNetworkPackagesPackageArrayOutput {
	return o
}

func (o GetNetworkPackagesPackageArrayOutput) Index(i pulumi.IntInput) GetNetworkPackagesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPackagesPackage {
		return vs[0].([]GetNetworkPackagesPackage)[vs[1].(int)]
	}).(GetNetworkPackagesPackageOutput)
}

type GetPolicyGroupsGroup struct {
	// The rule of authorize access rule.
	AuthorizeAccessPolicyRules []GetPolicyGroupsGroupAuthorizeAccessPolicyRule `pulumi:"authorizeAccessPolicyRules"`
	// The policy rule.
	AuthorizeSecurityPolicyRules []GetPolicyGroupsGroupAuthorizeSecurityPolicyRule `pulumi:"authorizeSecurityPolicyRules"`
	// The clipboard policy.
	Clipboard string `pulumi:"clipboard"`
	// The list of domain.
	DomainList string `pulumi:"domainList"`
	// The count of eds.
	EdsCount int `pulumi:"edsCount"`
	// The access of html5.
	HtmlAccess string `pulumi:"htmlAccess"`
	// The html5 file transfer.
	HtmlFileTransfer string `pulumi:"htmlFileTransfer"`
	// The ID of the Policy Group.
	Id string `pulumi:"id"`
	// Local drive redirect policy.
	LocalDrive string `pulumi:"localDrive"`
	// The policy group id.
	PolicyGroupId string `pulumi:"policyGroupId"`
	// The name of policy group.
	PolicyGroupName string `pulumi:"policyGroupName"`
	// The type of policy group.
	PolicyGroupType string `pulumi:"policyGroupType"`
	// The status of policy.
	Status string `pulumi:"status"`
	// The usb redirect policy.
	UsbRedirect string `pulumi:"usbRedirect"`
	// The quality of visual.sae_ecdsae_nameecd_po
	VisualQuality string `pulumi:"visualQuality"`
	// The watermark policy.
	Watermark string `pulumi:"watermark"`
	// The watermark transparency.
	WatermarkTransparency string `pulumi:"watermarkTransparency"`
	// The type of watemark.
	WatermarkType string `pulumi:"watermarkType"`
}

// GetPolicyGroupsGroupInput is an input type that accepts GetPolicyGroupsGroupArgs and GetPolicyGroupsGroupOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupInput` via:
//
//          GetPolicyGroupsGroupArgs{...}
type GetPolicyGroupsGroupInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput
	ToGetPolicyGroupsGroupOutputWithContext(context.Context) GetPolicyGroupsGroupOutput
}

type GetPolicyGroupsGroupArgs struct {
	// The rule of authorize access rule.
	AuthorizeAccessPolicyRules GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput `pulumi:"authorizeAccessPolicyRules"`
	// The policy rule.
	AuthorizeSecurityPolicyRules GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput `pulumi:"authorizeSecurityPolicyRules"`
	// The clipboard policy.
	Clipboard pulumi.StringInput `pulumi:"clipboard"`
	// The list of domain.
	DomainList pulumi.StringInput `pulumi:"domainList"`
	// The count of eds.
	EdsCount pulumi.IntInput `pulumi:"edsCount"`
	// The access of html5.
	HtmlAccess pulumi.StringInput `pulumi:"htmlAccess"`
	// The html5 file transfer.
	HtmlFileTransfer pulumi.StringInput `pulumi:"htmlFileTransfer"`
	// The ID of the Policy Group.
	Id pulumi.StringInput `pulumi:"id"`
	// Local drive redirect policy.
	LocalDrive pulumi.StringInput `pulumi:"localDrive"`
	// The policy group id.
	PolicyGroupId pulumi.StringInput `pulumi:"policyGroupId"`
	// The name of policy group.
	PolicyGroupName pulumi.StringInput `pulumi:"policyGroupName"`
	// The type of policy group.
	PolicyGroupType pulumi.StringInput `pulumi:"policyGroupType"`
	// The status of policy.
	Status pulumi.StringInput `pulumi:"status"`
	// The usb redirect policy.
	UsbRedirect pulumi.StringInput `pulumi:"usbRedirect"`
	// The quality of visual.sae_ecdsae_nameecd_po
	VisualQuality pulumi.StringInput `pulumi:"visualQuality"`
	// The watermark policy.
	Watermark pulumi.StringInput `pulumi:"watermark"`
	// The watermark transparency.
	WatermarkTransparency pulumi.StringInput `pulumi:"watermarkTransparency"`
	// The type of watemark.
	WatermarkType pulumi.StringInput `pulumi:"watermarkType"`
}

func (GetPolicyGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroup)(nil)).Elem()
}

func (i GetPolicyGroupsGroupArgs) ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput {
	return i.ToGetPolicyGroupsGroupOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupArgs) ToGetPolicyGroupsGroupOutputWithContext(ctx context.Context) GetPolicyGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupOutput)
}

// GetPolicyGroupsGroupArrayInput is an input type that accepts GetPolicyGroupsGroupArray and GetPolicyGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupArrayInput` via:
//
//          GetPolicyGroupsGroupArray{ GetPolicyGroupsGroupArgs{...} }
type GetPolicyGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput
	ToGetPolicyGroupsGroupArrayOutputWithContext(context.Context) GetPolicyGroupsGroupArrayOutput
}

type GetPolicyGroupsGroupArray []GetPolicyGroupsGroupInput

func (GetPolicyGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroup)(nil)).Elem()
}

func (i GetPolicyGroupsGroupArray) ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput {
	return i.ToGetPolicyGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupArray) ToGetPolicyGroupsGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupArrayOutput)
}

type GetPolicyGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroup)(nil)).Elem()
}

func (o GetPolicyGroupsGroupOutput) ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput {
	return o
}

func (o GetPolicyGroupsGroupOutput) ToGetPolicyGroupsGroupOutputWithContext(ctx context.Context) GetPolicyGroupsGroupOutput {
	return o
}

// The rule of authorize access rule.
func (o GetPolicyGroupsGroupOutput) AuthorizeAccessPolicyRules() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) []GetPolicyGroupsGroupAuthorizeAccessPolicyRule {
		return v.AuthorizeAccessPolicyRules
	}).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput)
}

// The policy rule.
func (o GetPolicyGroupsGroupOutput) AuthorizeSecurityPolicyRules() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) []GetPolicyGroupsGroupAuthorizeSecurityPolicyRule {
		return v.AuthorizeSecurityPolicyRules
	}).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

// The clipboard policy.
func (o GetPolicyGroupsGroupOutput) Clipboard() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Clipboard }).(pulumi.StringOutput)
}

// The list of domain.
func (o GetPolicyGroupsGroupOutput) DomainList() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.DomainList }).(pulumi.StringOutput)
}

// The count of eds.
func (o GetPolicyGroupsGroupOutput) EdsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) int { return v.EdsCount }).(pulumi.IntOutput)
}

// The access of html5.
func (o GetPolicyGroupsGroupOutput) HtmlAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.HtmlAccess }).(pulumi.StringOutput)
}

// The html5 file transfer.
func (o GetPolicyGroupsGroupOutput) HtmlFileTransfer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.HtmlFileTransfer }).(pulumi.StringOutput)
}

// The ID of the Policy Group.
func (o GetPolicyGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Local drive redirect policy.
func (o GetPolicyGroupsGroupOutput) LocalDrive() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.LocalDrive }).(pulumi.StringOutput)
}

// The policy group id.
func (o GetPolicyGroupsGroupOutput) PolicyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupId }).(pulumi.StringOutput)
}

// The name of policy group.
func (o GetPolicyGroupsGroupOutput) PolicyGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupName }).(pulumi.StringOutput)
}

// The type of policy group.
func (o GetPolicyGroupsGroupOutput) PolicyGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupType }).(pulumi.StringOutput)
}

// The status of policy.
func (o GetPolicyGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The usb redirect policy.
func (o GetPolicyGroupsGroupOutput) UsbRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.UsbRedirect }).(pulumi.StringOutput)
}

// The quality of visual.sae_ecdsae_nameecd_po
func (o GetPolicyGroupsGroupOutput) VisualQuality() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.VisualQuality }).(pulumi.StringOutput)
}

// The watermark policy.
func (o GetPolicyGroupsGroupOutput) Watermark() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Watermark }).(pulumi.StringOutput)
}

// The watermark transparency.
func (o GetPolicyGroupsGroupOutput) WatermarkTransparency() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.WatermarkTransparency }).(pulumi.StringOutput)
}

// The type of watemark.
func (o GetPolicyGroupsGroupOutput) WatermarkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.WatermarkType }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroup)(nil)).Elem()
}

func (o GetPolicyGroupsGroupArrayOutput) ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupArrayOutput) ToGetPolicyGroupsGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroup {
		return vs[0].([]GetPolicyGroupsGroup)[vs[1].(int)]
	}).(GetPolicyGroupsGroupOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRule struct {
	// The cidrip of security rules.
	CidrIp string `pulumi:"cidrIp"`
	// The description of security rules.
	Description string `pulumi:"description"`
}

// GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput is an input type that accepts GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs and GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput` via:
//
//          GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs{...}
type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput
	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs struct {
	// The cidrip of security rules.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The description of security rules.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput)
}

// GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput is an input type that accepts GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray and GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput` via:
//
//          GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray{ GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs{...} }
type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput
	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray []GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

// The cidrip of security rules.
func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeAccessPolicyRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The description of security rules.
func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeAccessPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroupAuthorizeAccessPolicyRule {
		return vs[0].([]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)[vs[1].(int)]
	}).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRule struct {
	// The cidrip of security rules.
	CidrIp string `pulumi:"cidrIp"`
	// The description of security rules.
	Description string `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol string `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy string `pulumi:"policy"`
	// The port range of security rules.
	PortRange string `pulumi:"portRange"`
	// The priority of security rules.
	Priority string `pulumi:"priority"`
	// The type of security rules.
	Type string `pulumi:"type"`
}

// GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput is an input type that accepts GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs and GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput` via:
//
//          GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs{...}
type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput
	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs struct {
	// The cidrip of security rules.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The description of security rules.
	Description pulumi.StringInput `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port range of security rules.
	PortRange pulumi.StringInput `pulumi:"portRange"`
	// The priority of security rules.
	Priority pulumi.StringInput `pulumi:"priority"`
	// The type of security rules.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput)
}

// GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput is an input type that accepts GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray and GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput` via:
//
//          GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray{ GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs{...} }
type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput
	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray []GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

// The cidrip of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The description of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ip protocol of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// The policy of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The port range of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.PortRange }).(pulumi.StringOutput)
}

// The priority of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Priority }).(pulumi.StringOutput)
}

// The type of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroupAuthorizeSecurityPolicyRule {
		return vs[0].([]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)[vs[1].(int)]
	}).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput)
}

type GetSimpleOfficeSitesSite struct {
	// The Internet Bandwidth Peak. It has been deprecated from version 1.142.0 and can be found in the new datasource alicloud_ecd_network_packages.
	//
	// Deprecated: Field 'bandwidth' has been deprecated from provider version 1.142.0.
	Bandwidth int `pulumi:"bandwidth"`
	// Cloud Enterprise Network Instance Id.
	CenId string `pulumi:"cenId"`
	// Workspace Corresponds to the Security Office Network of IPv4 Segment.
	CidrBlock string `pulumi:"cidrBlock"`
	// Workspace Creation Time.
	CreateTime string `pulumi:"createTime"`
	// Security Group ID.
	CustomSecurityGroupId string `pulumi:"customSecurityGroupId"`
	// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
	DesktopAccessType string `pulumi:"desktopAccessType"`
	// The Desktop Vpc Endpoint.
	DesktopVpcEndpoint string `pulumi:"desktopVpcEndpoint"`
	// Enterprise Ad Corresponding DNS Address.
	DnsAddresses []string `pulumi:"dnsAddresses"`
	// Easy-to-Use DNS Name.
	DnsUserName string `pulumi:"dnsUserName"`
	// Enterprise of Ad Domain Name.
	DomainName string `pulumi:"domainName"`
	// Domain of the User Who Will Administer This Target Application Password.
	DomainPassword string `pulumi:"domainPassword"`
	// The Domain Administrator's Username.
	DomainUserName string `pulumi:"domainUserName"`
	// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
	EnableAdminAccess bool `pulumi:"enableAdminAccess"`
	// Enable Cross-Desktop Access.
	EnableCrossDesktopAccess bool `pulumi:"enableCrossDesktopAccess"`
	// Whether the Open Internet Access Function.
	//
	// Deprecated: Field 'enable_internet_access' has been deprecated from provider version 1.142.0.
	EnableInternetAccess bool `pulumi:"enableInternetAccess"`
	// NAS File System ID.
	FileSystemIds []string `pulumi:"fileSystemIds"`
	// The ID of the Simple Office Site.
	Id string `pulumi:"id"`
	// Whether to Enable Multi-Factor Authentication MFA.
	MfaEnabled bool `pulumi:"mfaEnabled"`
	// Internet Access ID.
	NetworkPackageId string `pulumi:"networkPackageId"`
	// The Workspace ID.
	OfficeSiteId string `pulumi:"officeSiteId"`
	// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
	OfficeSiteType string `pulumi:"officeSiteType"`
	// The simple office site name.
	SimpleOfficeSiteName string `pulumi:"simpleOfficeSiteName"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoEnabled bool `pulumi:"ssoEnabled"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoStatus bool `pulumi:"ssoStatus"`
	// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
	Status string `pulumi:"status"`
	// AD Subdomain of the DNS Address.
	SubDnsAddresses []string `pulumi:"subDnsAddresses"`
	// AD Domain DNS Name.
	SubDomainName string `pulumi:"subDomainName"`
	// AD Trust Password.
	TrustPassword string `pulumi:"trustPassword"`
	// Security Office VPC ID.
	VpcId string `pulumi:"vpcId"`
	// The vswitch ids.
	VswitchIds []string `pulumi:"vswitchIds"`
}

// GetSimpleOfficeSitesSiteInput is an input type that accepts GetSimpleOfficeSitesSiteArgs and GetSimpleOfficeSitesSiteOutput values.
// You can construct a concrete instance of `GetSimpleOfficeSitesSiteInput` via:
//
//          GetSimpleOfficeSitesSiteArgs{...}
type GetSimpleOfficeSitesSiteInput interface {
	pulumi.Input

	ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput
	ToGetSimpleOfficeSitesSiteOutputWithContext(context.Context) GetSimpleOfficeSitesSiteOutput
}

type GetSimpleOfficeSitesSiteArgs struct {
	// The Internet Bandwidth Peak. It has been deprecated from version 1.142.0 and can be found in the new datasource alicloud_ecd_network_packages.
	//
	// Deprecated: Field 'bandwidth' has been deprecated from provider version 1.142.0.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Cloud Enterprise Network Instance Id.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Workspace Corresponds to the Security Office Network of IPv4 Segment.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Workspace Creation Time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Security Group ID.
	CustomSecurityGroupId pulumi.StringInput `pulumi:"customSecurityGroupId"`
	// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
	DesktopAccessType pulumi.StringInput `pulumi:"desktopAccessType"`
	// The Desktop Vpc Endpoint.
	DesktopVpcEndpoint pulumi.StringInput `pulumi:"desktopVpcEndpoint"`
	// Enterprise Ad Corresponding DNS Address.
	DnsAddresses pulumi.StringArrayInput `pulumi:"dnsAddresses"`
	// Easy-to-Use DNS Name.
	DnsUserName pulumi.StringInput `pulumi:"dnsUserName"`
	// Enterprise of Ad Domain Name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Domain of the User Who Will Administer This Target Application Password.
	DomainPassword pulumi.StringInput `pulumi:"domainPassword"`
	// The Domain Administrator's Username.
	DomainUserName pulumi.StringInput `pulumi:"domainUserName"`
	// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
	EnableAdminAccess pulumi.BoolInput `pulumi:"enableAdminAccess"`
	// Enable Cross-Desktop Access.
	EnableCrossDesktopAccess pulumi.BoolInput `pulumi:"enableCrossDesktopAccess"`
	// Whether the Open Internet Access Function.
	//
	// Deprecated: Field 'enable_internet_access' has been deprecated from provider version 1.142.0.
	EnableInternetAccess pulumi.BoolInput `pulumi:"enableInternetAccess"`
	// NAS File System ID.
	FileSystemIds pulumi.StringArrayInput `pulumi:"fileSystemIds"`
	// The ID of the Simple Office Site.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether to Enable Multi-Factor Authentication MFA.
	MfaEnabled pulumi.BoolInput `pulumi:"mfaEnabled"`
	// Internet Access ID.
	NetworkPackageId pulumi.StringInput `pulumi:"networkPackageId"`
	// The Workspace ID.
	OfficeSiteId pulumi.StringInput `pulumi:"officeSiteId"`
	// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
	OfficeSiteType pulumi.StringInput `pulumi:"officeSiteType"`
	// The simple office site name.
	SimpleOfficeSiteName pulumi.StringInput `pulumi:"simpleOfficeSiteName"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoEnabled pulumi.BoolInput `pulumi:"ssoEnabled"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoStatus pulumi.BoolInput `pulumi:"ssoStatus"`
	// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
	Status pulumi.StringInput `pulumi:"status"`
	// AD Subdomain of the DNS Address.
	SubDnsAddresses pulumi.StringArrayInput `pulumi:"subDnsAddresses"`
	// AD Domain DNS Name.
	SubDomainName pulumi.StringInput `pulumi:"subDomainName"`
	// AD Trust Password.
	TrustPassword pulumi.StringInput `pulumi:"trustPassword"`
	// Security Office VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch ids.
	VswitchIds pulumi.StringArrayInput `pulumi:"vswitchIds"`
}

func (GetSimpleOfficeSitesSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (i GetSimpleOfficeSitesSiteArgs) ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput {
	return i.ToGetSimpleOfficeSitesSiteOutputWithContext(context.Background())
}

func (i GetSimpleOfficeSitesSiteArgs) ToGetSimpleOfficeSitesSiteOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleOfficeSitesSiteOutput)
}

// GetSimpleOfficeSitesSiteArrayInput is an input type that accepts GetSimpleOfficeSitesSiteArray and GetSimpleOfficeSitesSiteArrayOutput values.
// You can construct a concrete instance of `GetSimpleOfficeSitesSiteArrayInput` via:
//
//          GetSimpleOfficeSitesSiteArray{ GetSimpleOfficeSitesSiteArgs{...} }
type GetSimpleOfficeSitesSiteArrayInput interface {
	pulumi.Input

	ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput
	ToGetSimpleOfficeSitesSiteArrayOutputWithContext(context.Context) GetSimpleOfficeSitesSiteArrayOutput
}

type GetSimpleOfficeSitesSiteArray []GetSimpleOfficeSitesSiteInput

func (GetSimpleOfficeSitesSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (i GetSimpleOfficeSitesSiteArray) ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput {
	return i.ToGetSimpleOfficeSitesSiteArrayOutputWithContext(context.Background())
}

func (i GetSimpleOfficeSitesSiteArray) ToGetSimpleOfficeSitesSiteArrayOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleOfficeSitesSiteArrayOutput)
}

type GetSimpleOfficeSitesSiteOutput struct{ *pulumi.OutputState }

func (GetSimpleOfficeSitesSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (o GetSimpleOfficeSitesSiteOutput) ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteOutput) ToGetSimpleOfficeSitesSiteOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteOutput {
	return o
}

// The Internet Bandwidth Peak. It has been deprecated from version 1.142.0 and can be found in the new datasource alicloud_ecd_network_packages.
//
// Deprecated: Field 'bandwidth' has been deprecated from provider version 1.142.0.
func (o GetSimpleOfficeSitesSiteOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Cloud Enterprise Network Instance Id.
func (o GetSimpleOfficeSitesSiteOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CenId }).(pulumi.StringOutput)
}

// Workspace Corresponds to the Security Office Network of IPv4 Segment.
func (o GetSimpleOfficeSitesSiteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Workspace Creation Time.
func (o GetSimpleOfficeSitesSiteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Security Group ID.
func (o GetSimpleOfficeSitesSiteOutput) CustomSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CustomSecurityGroupId }).(pulumi.StringOutput)
}

// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
func (o GetSimpleOfficeSitesSiteOutput) DesktopAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DesktopAccessType }).(pulumi.StringOutput)
}

// The Desktop Vpc Endpoint.
func (o GetSimpleOfficeSitesSiteOutput) DesktopVpcEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DesktopVpcEndpoint }).(pulumi.StringOutput)
}

// Enterprise Ad Corresponding DNS Address.
func (o GetSimpleOfficeSitesSiteOutput) DnsAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.DnsAddresses }).(pulumi.StringArrayOutput)
}

// Easy-to-Use DNS Name.
func (o GetSimpleOfficeSitesSiteOutput) DnsUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DnsUserName }).(pulumi.StringOutput)
}

// Enterprise of Ad Domain Name.
func (o GetSimpleOfficeSitesSiteOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainName }).(pulumi.StringOutput)
}

// Domain of the User Who Will Administer This Target Application Password.
func (o GetSimpleOfficeSitesSiteOutput) DomainPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainPassword }).(pulumi.StringOutput)
}

// The Domain Administrator's Username.
func (o GetSimpleOfficeSitesSiteOutput) DomainUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainUserName }).(pulumi.StringOutput)
}

// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
func (o GetSimpleOfficeSitesSiteOutput) EnableAdminAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableAdminAccess }).(pulumi.BoolOutput)
}

// Enable Cross-Desktop Access.
func (o GetSimpleOfficeSitesSiteOutput) EnableCrossDesktopAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableCrossDesktopAccess }).(pulumi.BoolOutput)
}

// Whether the Open Internet Access Function.
//
// Deprecated: Field 'enable_internet_access' has been deprecated from provider version 1.142.0.
func (o GetSimpleOfficeSitesSiteOutput) EnableInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableInternetAccess }).(pulumi.BoolOutput)
}

// NAS File System ID.
func (o GetSimpleOfficeSitesSiteOutput) FileSystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.FileSystemIds }).(pulumi.StringArrayOutput)
}

// The ID of the Simple Office Site.
func (o GetSimpleOfficeSitesSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to Enable Multi-Factor Authentication MFA.
func (o GetSimpleOfficeSitesSiteOutput) MfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.MfaEnabled }).(pulumi.BoolOutput)
}

// Internet Access ID.
func (o GetSimpleOfficeSitesSiteOutput) NetworkPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.NetworkPackageId }).(pulumi.StringOutput)
}

// The Workspace ID.
func (o GetSimpleOfficeSitesSiteOutput) OfficeSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.OfficeSiteId }).(pulumi.StringOutput)
}

// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
func (o GetSimpleOfficeSitesSiteOutput) OfficeSiteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.OfficeSiteType }).(pulumi.StringOutput)
}

// The simple office site name.
func (o GetSimpleOfficeSitesSiteOutput) SimpleOfficeSiteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.SimpleOfficeSiteName }).(pulumi.StringOutput)
}

// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
func (o GetSimpleOfficeSitesSiteOutput) SsoEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.SsoEnabled }).(pulumi.BoolOutput)
}

// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
func (o GetSimpleOfficeSitesSiteOutput) SsoStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.SsoStatus }).(pulumi.BoolOutput)
}

// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
func (o GetSimpleOfficeSitesSiteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.Status }).(pulumi.StringOutput)
}

// AD Subdomain of the DNS Address.
func (o GetSimpleOfficeSitesSiteOutput) SubDnsAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.SubDnsAddresses }).(pulumi.StringArrayOutput)
}

// AD Domain DNS Name.
func (o GetSimpleOfficeSitesSiteOutput) SubDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.SubDomainName }).(pulumi.StringOutput)
}

// AD Trust Password.
func (o GetSimpleOfficeSitesSiteOutput) TrustPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.TrustPassword }).(pulumi.StringOutput)
}

// Security Office VPC ID.
func (o GetSimpleOfficeSitesSiteOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch ids.
func (o GetSimpleOfficeSitesSiteOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

type GetSimpleOfficeSitesSiteArrayOutput struct{ *pulumi.OutputState }

func (GetSimpleOfficeSitesSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (o GetSimpleOfficeSitesSiteArrayOutput) ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteArrayOutput) ToGetSimpleOfficeSitesSiteArrayOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteArrayOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteArrayOutput) Index(i pulumi.IntInput) GetSimpleOfficeSitesSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSimpleOfficeSitesSite {
		return vs[0].([]GetSimpleOfficeSitesSite)[vs[1].(int)]
	}).(GetSimpleOfficeSitesSiteOutput)
}

type GetUsersUser struct {
	// The email of the user email.
	Email string `pulumi:"email"`
	// The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
	EndUserId string `pulumi:"endUserId"`
	// The ID of the user id.
	Id string `pulumi:"id"`
	// The phone of the mobile phone number.
	Phone string `pulumi:"phone"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//          GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	// The email of the user email.
	Email pulumi.StringInput `pulumi:"email"`
	// The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
	EndUserId pulumi.StringInput `pulumi:"endUserId"`
	// The ID of the user id.
	Id pulumi.StringInput `pulumi:"id"`
	// The phone of the mobile phone number.
	Phone pulumi.StringInput `pulumi:"phone"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//          GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

// The email of the user email.
func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
func (o GetUsersUserOutput) EndUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.EndUserId }).(pulumi.StringOutput)
}

// The ID of the user id.
func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// The phone of the mobile phone number.
func (o GetUsersUserOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Phone }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRuleInput)(nil)).Elem(), EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput)(nil)).Elem(), EcdPolicyGroupAuthorizeAccessPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRuleInput)(nil)).Elem(), EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput)(nil)).Elem(), EcdPolicyGroupAuthorizeSecurityPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleInput)(nil)).Elem(), GetBundlesBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleArrayInput)(nil)).Elem(), GetBundlesBundleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleDesktopTypeAttributeInput)(nil)).Elem(), GetBundlesBundleDesktopTypeAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleDesktopTypeAttributeArrayInput)(nil)).Elem(), GetBundlesBundleDesktopTypeAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleDiskInput)(nil)).Elem(), GetBundlesBundleDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundlesBundleDiskArrayInput)(nil)).Elem(), GetBundlesBundleDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandsCommandInput)(nil)).Elem(), GetCommandsCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandsCommandArrayInput)(nil)).Elem(), GetCommandsCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandsCommandInvokeDesktopInput)(nil)).Elem(), GetCommandsCommandInvokeDesktopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCommandsCommandInvokeDesktopArrayInput)(nil)).Elem(), GetCommandsCommandInvokeDesktopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopInput)(nil)).Elem(), GetDesktopsDesktopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopArrayInput)(nil)).Elem(), GetDesktopsDesktopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNasFileSystemsSystemInput)(nil)).Elem(), GetNasFileSystemsSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNasFileSystemsSystemArrayInput)(nil)).Elem(), GetNasFileSystemsSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPackagesPackageInput)(nil)).Elem(), GetNetworkPackagesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPackagesPackageArrayInput)(nil)).Elem(), GetNetworkPackagesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupInput)(nil)).Elem(), GetPolicyGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupArrayInput)(nil)).Elem(), GetPolicyGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput)(nil)).Elem(), GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput)(nil)).Elem(), GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput)(nil)).Elem(), GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput)(nil)).Elem(), GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSimpleOfficeSitesSiteInput)(nil)).Elem(), GetSimpleOfficeSitesSiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSimpleOfficeSitesSiteArrayInput)(nil)).Elem(), GetSimpleOfficeSitesSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleArrayOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleDesktopTypeAttributeOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleDesktopTypeAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleDiskOutput{})
	pulumi.RegisterOutputType(GetBundlesBundleDiskArrayOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandArrayOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandInvokeDesktopOutput{})
	pulumi.RegisterOutputType(GetCommandsCommandInvokeDesktopArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetNasFileSystemsSystemOutput{})
	pulumi.RegisterOutputType(GetNasFileSystemsSystemArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPackagesPackageOutput{})
	pulumi.RegisterOutputType(GetNetworkPackagesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSimpleOfficeSitesSiteOutput{})
	pulumi.RegisterOutputType(GetSimpleOfficeSitesSiteArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
