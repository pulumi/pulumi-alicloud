// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ECD Custom Property resource.
//
// For information about ECD Custom Property and how to use it, see [What is Custom Property](https://help.aliyun.com/document_detail/436381.html).
//
// > **NOTE:** Available in v1.176.0+.
//
// > **NOTE:** Up to 10 different attributes can be created under an alibaba cloud account. Up to 50 different attribute values can be added under an attribute.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := eds.NewCustomProperty(ctx, "example", &eds.CustomPropertyArgs{
//				PropertyKey: pulumi.String("example_key"),
//				PropertyValues: eds.CustomPropertyPropertyValueArray{
//					&eds.CustomPropertyPropertyValueArgs{
//						PropertyValue: pulumi.String("example_value"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ECD Custom Property can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:eds/customProperty:CustomProperty example <id>
//
// ```
type CustomProperty struct {
	pulumi.CustomResourceState

	// The Custom attribute key.
	PropertyKey pulumi.StringOutput `pulumi:"propertyKey"`
	// Custom attribute sets the value of. See the following `Block propertyValues`.
	PropertyValues CustomPropertyPropertyValueArrayOutput `pulumi:"propertyValues"`
}

// NewCustomProperty registers a new resource with the given unique name, arguments, and options.
func NewCustomProperty(ctx *pulumi.Context,
	name string, args *CustomPropertyArgs, opts ...pulumi.ResourceOption) (*CustomProperty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PropertyKey == nil {
		return nil, errors.New("invalid value for required argument 'PropertyKey'")
	}
	var resource CustomProperty
	err := ctx.RegisterResource("alicloud:eds/customProperty:CustomProperty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomProperty gets an existing CustomProperty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomProperty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPropertyState, opts ...pulumi.ResourceOption) (*CustomProperty, error) {
	var resource CustomProperty
	err := ctx.ReadResource("alicloud:eds/customProperty:CustomProperty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomProperty resources.
type customPropertyState struct {
	// The Custom attribute key.
	PropertyKey *string `pulumi:"propertyKey"`
	// Custom attribute sets the value of. See the following `Block propertyValues`.
	PropertyValues []CustomPropertyPropertyValue `pulumi:"propertyValues"`
}

type CustomPropertyState struct {
	// The Custom attribute key.
	PropertyKey pulumi.StringPtrInput
	// Custom attribute sets the value of. See the following `Block propertyValues`.
	PropertyValues CustomPropertyPropertyValueArrayInput
}

func (CustomPropertyState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPropertyState)(nil)).Elem()
}

type customPropertyArgs struct {
	// The Custom attribute key.
	PropertyKey string `pulumi:"propertyKey"`
	// Custom attribute sets the value of. See the following `Block propertyValues`.
	PropertyValues []CustomPropertyPropertyValue `pulumi:"propertyValues"`
}

// The set of arguments for constructing a CustomProperty resource.
type CustomPropertyArgs struct {
	// The Custom attribute key.
	PropertyKey pulumi.StringInput
	// Custom attribute sets the value of. See the following `Block propertyValues`.
	PropertyValues CustomPropertyPropertyValueArrayInput
}

func (CustomPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPropertyArgs)(nil)).Elem()
}

type CustomPropertyInput interface {
	pulumi.Input

	ToCustomPropertyOutput() CustomPropertyOutput
	ToCustomPropertyOutputWithContext(ctx context.Context) CustomPropertyOutput
}

func (*CustomProperty) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomProperty)(nil)).Elem()
}

func (i *CustomProperty) ToCustomPropertyOutput() CustomPropertyOutput {
	return i.ToCustomPropertyOutputWithContext(context.Background())
}

func (i *CustomProperty) ToCustomPropertyOutputWithContext(ctx context.Context) CustomPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPropertyOutput)
}

// CustomPropertyArrayInput is an input type that accepts CustomPropertyArray and CustomPropertyArrayOutput values.
// You can construct a concrete instance of `CustomPropertyArrayInput` via:
//
//	CustomPropertyArray{ CustomPropertyArgs{...} }
type CustomPropertyArrayInput interface {
	pulumi.Input

	ToCustomPropertyArrayOutput() CustomPropertyArrayOutput
	ToCustomPropertyArrayOutputWithContext(context.Context) CustomPropertyArrayOutput
}

type CustomPropertyArray []CustomPropertyInput

func (CustomPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomProperty)(nil)).Elem()
}

func (i CustomPropertyArray) ToCustomPropertyArrayOutput() CustomPropertyArrayOutput {
	return i.ToCustomPropertyArrayOutputWithContext(context.Background())
}

func (i CustomPropertyArray) ToCustomPropertyArrayOutputWithContext(ctx context.Context) CustomPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPropertyArrayOutput)
}

// CustomPropertyMapInput is an input type that accepts CustomPropertyMap and CustomPropertyMapOutput values.
// You can construct a concrete instance of `CustomPropertyMapInput` via:
//
//	CustomPropertyMap{ "key": CustomPropertyArgs{...} }
type CustomPropertyMapInput interface {
	pulumi.Input

	ToCustomPropertyMapOutput() CustomPropertyMapOutput
	ToCustomPropertyMapOutputWithContext(context.Context) CustomPropertyMapOutput
}

type CustomPropertyMap map[string]CustomPropertyInput

func (CustomPropertyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomProperty)(nil)).Elem()
}

func (i CustomPropertyMap) ToCustomPropertyMapOutput() CustomPropertyMapOutput {
	return i.ToCustomPropertyMapOutputWithContext(context.Background())
}

func (i CustomPropertyMap) ToCustomPropertyMapOutputWithContext(ctx context.Context) CustomPropertyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPropertyMapOutput)
}

type CustomPropertyOutput struct{ *pulumi.OutputState }

func (CustomPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomProperty)(nil)).Elem()
}

func (o CustomPropertyOutput) ToCustomPropertyOutput() CustomPropertyOutput {
	return o
}

func (o CustomPropertyOutput) ToCustomPropertyOutputWithContext(ctx context.Context) CustomPropertyOutput {
	return o
}

// The Custom attribute key.
func (o CustomPropertyOutput) PropertyKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomProperty) pulumi.StringOutput { return v.PropertyKey }).(pulumi.StringOutput)
}

// Custom attribute sets the value of. See the following `Block propertyValues`.
func (o CustomPropertyOutput) PropertyValues() CustomPropertyPropertyValueArrayOutput {
	return o.ApplyT(func(v *CustomProperty) CustomPropertyPropertyValueArrayOutput { return v.PropertyValues }).(CustomPropertyPropertyValueArrayOutput)
}

type CustomPropertyArrayOutput struct{ *pulumi.OutputState }

func (CustomPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomProperty)(nil)).Elem()
}

func (o CustomPropertyArrayOutput) ToCustomPropertyArrayOutput() CustomPropertyArrayOutput {
	return o
}

func (o CustomPropertyArrayOutput) ToCustomPropertyArrayOutputWithContext(ctx context.Context) CustomPropertyArrayOutput {
	return o
}

func (o CustomPropertyArrayOutput) Index(i pulumi.IntInput) CustomPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomProperty {
		return vs[0].([]*CustomProperty)[vs[1].(int)]
	}).(CustomPropertyOutput)
}

type CustomPropertyMapOutput struct{ *pulumi.OutputState }

func (CustomPropertyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomProperty)(nil)).Elem()
}

func (o CustomPropertyMapOutput) ToCustomPropertyMapOutput() CustomPropertyMapOutput {
	return o
}

func (o CustomPropertyMapOutput) ToCustomPropertyMapOutputWithContext(ctx context.Context) CustomPropertyMapOutput {
	return o
}

func (o CustomPropertyMapOutput) MapIndex(k pulumi.StringInput) CustomPropertyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomProperty {
		return vs[0].(map[string]*CustomProperty)[vs[1].(string)]
	}).(CustomPropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPropertyInput)(nil)).Elem(), &CustomProperty{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPropertyArrayInput)(nil)).Elem(), CustomPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPropertyMapInput)(nil)).Elem(), CustomPropertyMap{})
	pulumi.RegisterOutputType(CustomPropertyOutput{})
	pulumi.RegisterOutputType(CustomPropertyArrayOutput{})
	pulumi.RegisterOutputType(CustomPropertyMapOutput{})
}
