// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AlarmEscalationsCritical struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsCriticalInput is an input type that accepts AlarmEscalationsCriticalArgs and AlarmEscalationsCriticalOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalInput` via:
//
//	AlarmEscalationsCriticalArgs{...}
type AlarmEscalationsCriticalInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput
	ToAlarmEscalationsCriticalOutputWithContext(context.Context) AlarmEscalationsCriticalOutput
}

type AlarmEscalationsCriticalArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return i.ToAlarmEscalationsCriticalOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput)
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput).ToAlarmEscalationsCriticalPtrOutputWithContext(ctx)
}

// AlarmEscalationsCriticalPtrInput is an input type that accepts AlarmEscalationsCriticalArgs, AlarmEscalationsCriticalPtr and AlarmEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalPtrInput` via:
//
//	        AlarmEscalationsCriticalArgs{...}
//
//	or:
//
//	        nil
type AlarmEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput
	ToAlarmEscalationsCriticalPtrOutputWithContext(context.Context) AlarmEscalationsCriticalPtrOutput
}

type alarmEscalationsCriticalPtrType AlarmEscalationsCriticalArgs

func AlarmEscalationsCriticalPtr(v *AlarmEscalationsCriticalArgs) AlarmEscalationsCriticalPtrInput {
	return (*alarmEscalationsCriticalPtrType)(v)
}

func (*alarmEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalPtrOutput)
}

type AlarmEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsCritical) *AlarmEscalationsCritical {
		return &v
	}).(AlarmEscalationsCriticalPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) Elem() AlarmEscalationsCriticalOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) AlarmEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsCritical
		return ret
	}).(AlarmEscalationsCriticalOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfo struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsInfoInput is an input type that accepts AlarmEscalationsInfoArgs and AlarmEscalationsInfoOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoInput` via:
//
//	AlarmEscalationsInfoArgs{...}
type AlarmEscalationsInfoInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput
	ToAlarmEscalationsInfoOutputWithContext(context.Context) AlarmEscalationsInfoOutput
}

type AlarmEscalationsInfoArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return i.ToAlarmEscalationsInfoOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput)
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput).ToAlarmEscalationsInfoPtrOutputWithContext(ctx)
}

// AlarmEscalationsInfoPtrInput is an input type that accepts AlarmEscalationsInfoArgs, AlarmEscalationsInfoPtr and AlarmEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoPtrInput` via:
//
//	        AlarmEscalationsInfoArgs{...}
//
//	or:
//
//	        nil
type AlarmEscalationsInfoPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput
	ToAlarmEscalationsInfoPtrOutputWithContext(context.Context) AlarmEscalationsInfoPtrOutput
}

type alarmEscalationsInfoPtrType AlarmEscalationsInfoArgs

func AlarmEscalationsInfoPtr(v *AlarmEscalationsInfoArgs) AlarmEscalationsInfoPtrInput {
	return (*alarmEscalationsInfoPtrType)(v)
}

func (*alarmEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoPtrOutput)
}

type AlarmEscalationsInfoOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsInfo) *AlarmEscalationsInfo {
		return &v
	}).(AlarmEscalationsInfoPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) Elem() AlarmEscalationsInfoOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) AlarmEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsInfo
		return ret
	}).(AlarmEscalationsInfoOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarn struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsWarnInput is an input type that accepts AlarmEscalationsWarnArgs and AlarmEscalationsWarnOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnInput` via:
//
//	AlarmEscalationsWarnArgs{...}
type AlarmEscalationsWarnInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput
	ToAlarmEscalationsWarnOutputWithContext(context.Context) AlarmEscalationsWarnOutput
}

type AlarmEscalationsWarnArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return i.ToAlarmEscalationsWarnOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput)
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput).ToAlarmEscalationsWarnPtrOutputWithContext(ctx)
}

// AlarmEscalationsWarnPtrInput is an input type that accepts AlarmEscalationsWarnArgs, AlarmEscalationsWarnPtr and AlarmEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnPtrInput` via:
//
//	        AlarmEscalationsWarnArgs{...}
//
//	or:
//
//	        nil
type AlarmEscalationsWarnPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput
	ToAlarmEscalationsWarnPtrOutputWithContext(context.Context) AlarmEscalationsWarnPtrOutput
}

type alarmEscalationsWarnPtrType AlarmEscalationsWarnArgs

func AlarmEscalationsWarnPtr(v *AlarmEscalationsWarnArgs) AlarmEscalationsWarnPtrInput {
	return (*alarmEscalationsWarnPtrType)(v)
}

func (*alarmEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnPtrOutput)
}

type AlarmEscalationsWarnOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsWarn) *AlarmEscalationsWarn {
		return &v
	}).(AlarmEscalationsWarnPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) Elem() AlarmEscalationsWarnOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) AlarmEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsWarn
		return ret
	}).(AlarmEscalationsWarnOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
func (o AlarmEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmPrometheus struct {
	// The annotations of the Prometheus alert rule. When a Prometheus alert is triggered, the system renders the annotated keys and values to help you understand the metrics and alert rule.
	Annotations map[string]interface{} `pulumi:"annotations"`
	// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
	Level *string `pulumi:"level"`
	// The PromQL query statement. **Note:** The data obtained by using the PromQL query statement is the monitoring data. You must include the alert threshold in this statement.
	PromQl *string `pulumi:"promQl"`
	// The number of consecutive triggers. If the number of times that the metric values meet the trigger conditions reaches the value of this parameter, CloudMonitor sends alert notifications.
	Times *int `pulumi:"times"`
}

// AlarmPrometheusInput is an input type that accepts AlarmPrometheusArgs and AlarmPrometheusOutput values.
// You can construct a concrete instance of `AlarmPrometheusInput` via:
//
//	AlarmPrometheusArgs{...}
type AlarmPrometheusInput interface {
	pulumi.Input

	ToAlarmPrometheusOutput() AlarmPrometheusOutput
	ToAlarmPrometheusOutputWithContext(context.Context) AlarmPrometheusOutput
}

type AlarmPrometheusArgs struct {
	// The annotations of the Prometheus alert rule. When a Prometheus alert is triggered, the system renders the annotated keys and values to help you understand the metrics and alert rule.
	Annotations pulumi.MapInput `pulumi:"annotations"`
	// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The PromQL query statement. **Note:** The data obtained by using the PromQL query statement is the monitoring data. You must include the alert threshold in this statement.
	PromQl pulumi.StringPtrInput `pulumi:"promQl"`
	// The number of consecutive triggers. If the number of times that the metric values meet the trigger conditions reaches the value of this parameter, CloudMonitor sends alert notifications.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPrometheus)(nil)).Elem()
}

func (i AlarmPrometheusArgs) ToAlarmPrometheusOutput() AlarmPrometheusOutput {
	return i.ToAlarmPrometheusOutputWithContext(context.Background())
}

func (i AlarmPrometheusArgs) ToAlarmPrometheusOutputWithContext(ctx context.Context) AlarmPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPrometheusOutput)
}

// AlarmPrometheusArrayInput is an input type that accepts AlarmPrometheusArray and AlarmPrometheusArrayOutput values.
// You can construct a concrete instance of `AlarmPrometheusArrayInput` via:
//
//	AlarmPrometheusArray{ AlarmPrometheusArgs{...} }
type AlarmPrometheusArrayInput interface {
	pulumi.Input

	ToAlarmPrometheusArrayOutput() AlarmPrometheusArrayOutput
	ToAlarmPrometheusArrayOutputWithContext(context.Context) AlarmPrometheusArrayOutput
}

type AlarmPrometheusArray []AlarmPrometheusInput

func (AlarmPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPrometheus)(nil)).Elem()
}

func (i AlarmPrometheusArray) ToAlarmPrometheusArrayOutput() AlarmPrometheusArrayOutput {
	return i.ToAlarmPrometheusArrayOutputWithContext(context.Background())
}

func (i AlarmPrometheusArray) ToAlarmPrometheusArrayOutputWithContext(ctx context.Context) AlarmPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmPrometheusArrayOutput)
}

type AlarmPrometheusOutput struct{ *pulumi.OutputState }

func (AlarmPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmPrometheus)(nil)).Elem()
}

func (o AlarmPrometheusOutput) ToAlarmPrometheusOutput() AlarmPrometheusOutput {
	return o
}

func (o AlarmPrometheusOutput) ToAlarmPrometheusOutputWithContext(ctx context.Context) AlarmPrometheusOutput {
	return o
}

// The annotations of the Prometheus alert rule. When a Prometheus alert is triggered, the system renders the annotated keys and values to help you understand the metrics and alert rule.
func (o AlarmPrometheusOutput) Annotations() pulumi.MapOutput {
	return o.ApplyT(func(v AlarmPrometheus) map[string]interface{} { return v.Annotations }).(pulumi.MapOutput)
}

// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
func (o AlarmPrometheusOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPrometheus) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The PromQL query statement. **Note:** The data obtained by using the PromQL query statement is the monitoring data. You must include the alert threshold in this statement.
func (o AlarmPrometheusOutput) PromQl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmPrometheus) *string { return v.PromQl }).(pulumi.StringPtrOutput)
}

// The number of consecutive triggers. If the number of times that the metric values meet the trigger conditions reaches the value of this parameter, CloudMonitor sends alert notifications.
func (o AlarmPrometheusOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmPrometheus) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmPrometheusArrayOutput struct{ *pulumi.OutputState }

func (AlarmPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmPrometheus)(nil)).Elem()
}

func (o AlarmPrometheusArrayOutput) ToAlarmPrometheusArrayOutput() AlarmPrometheusArrayOutput {
	return o
}

func (o AlarmPrometheusArrayOutput) ToAlarmPrometheusArrayOutputWithContext(ctx context.Context) AlarmPrometheusArrayOutput {
	return o
}

func (o AlarmPrometheusArrayOutput) Index(i pulumi.IntInput) AlarmPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmPrometheus {
		return vs[0].([]AlarmPrometheus)[vs[1].(int)]
	}).(AlarmPrometheusOutput)
}

type DynamicTagGroupMatchExpress struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue string `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction string `pulumi:"tagValueMatchFunction"`
}

// DynamicTagGroupMatchExpressInput is an input type that accepts DynamicTagGroupMatchExpressArgs and DynamicTagGroupMatchExpressOutput values.
// You can construct a concrete instance of `DynamicTagGroupMatchExpressInput` via:
//
//	DynamicTagGroupMatchExpressArgs{...}
type DynamicTagGroupMatchExpressInput interface {
	pulumi.Input

	ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput
	ToDynamicTagGroupMatchExpressOutputWithContext(context.Context) DynamicTagGroupMatchExpressOutput
}

type DynamicTagGroupMatchExpressArgs struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction pulumi.StringInput `pulumi:"tagValueMatchFunction"`
}

func (DynamicTagGroupMatchExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (i DynamicTagGroupMatchExpressArgs) ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput {
	return i.ToDynamicTagGroupMatchExpressOutputWithContext(context.Background())
}

func (i DynamicTagGroupMatchExpressArgs) ToDynamicTagGroupMatchExpressOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicTagGroupMatchExpressOutput)
}

// DynamicTagGroupMatchExpressArrayInput is an input type that accepts DynamicTagGroupMatchExpressArray and DynamicTagGroupMatchExpressArrayOutput values.
// You can construct a concrete instance of `DynamicTagGroupMatchExpressArrayInput` via:
//
//	DynamicTagGroupMatchExpressArray{ DynamicTagGroupMatchExpressArgs{...} }
type DynamicTagGroupMatchExpressArrayInput interface {
	pulumi.Input

	ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput
	ToDynamicTagGroupMatchExpressArrayOutputWithContext(context.Context) DynamicTagGroupMatchExpressArrayOutput
}

type DynamicTagGroupMatchExpressArray []DynamicTagGroupMatchExpressInput

func (DynamicTagGroupMatchExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (i DynamicTagGroupMatchExpressArray) ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput {
	return i.ToDynamicTagGroupMatchExpressArrayOutputWithContext(context.Background())
}

func (i DynamicTagGroupMatchExpressArray) ToDynamicTagGroupMatchExpressArrayOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicTagGroupMatchExpressArrayOutput)
}

type DynamicTagGroupMatchExpressOutput struct{ *pulumi.OutputState }

func (DynamicTagGroupMatchExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (o DynamicTagGroupMatchExpressOutput) ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput {
	return o
}

func (o DynamicTagGroupMatchExpressOutput) ToDynamicTagGroupMatchExpressOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressOutput {
	return o
}

// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
func (o DynamicTagGroupMatchExpressOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicTagGroupMatchExpress) string { return v.TagValue }).(pulumi.StringOutput)
}

// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
func (o DynamicTagGroupMatchExpressOutput) TagValueMatchFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicTagGroupMatchExpress) string { return v.TagValueMatchFunction }).(pulumi.StringOutput)
}

type DynamicTagGroupMatchExpressArrayOutput struct{ *pulumi.OutputState }

func (DynamicTagGroupMatchExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (o DynamicTagGroupMatchExpressArrayOutput) ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput {
	return o
}

func (o DynamicTagGroupMatchExpressArrayOutput) ToDynamicTagGroupMatchExpressArrayOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressArrayOutput {
	return o
}

func (o DynamicTagGroupMatchExpressArrayOutput) Index(i pulumi.IntInput) DynamicTagGroupMatchExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicTagGroupMatchExpress {
		return vs[0].([]DynamicTagGroupMatchExpress)[vs[1].(int)]
	}).(DynamicTagGroupMatchExpressOutput)
}

type EventRuleEventPattern struct {
	// The type of the event-triggered alert rule. Valid values:
	EventTypeLists []string `pulumi:"eventTypeLists"`
	// The level of the event-triggered alert rule. Valid values:
	LevelLists []string `pulumi:"levelLists"`
	// The name of the event-triggered alert rule.
	NameLists []string `pulumi:"nameLists"`
	// The type of the cloud service.
	Product string `pulumi:"product"`
	// The SQL condition that is used to filter events. If the content of an event meets the specified SQL condition, an alert is automatically triggered.
	SqlFilter *string `pulumi:"sqlFilter"`
}

// EventRuleEventPatternInput is an input type that accepts EventRuleEventPatternArgs and EventRuleEventPatternOutput values.
// You can construct a concrete instance of `EventRuleEventPatternInput` via:
//
//	EventRuleEventPatternArgs{...}
type EventRuleEventPatternInput interface {
	pulumi.Input

	ToEventRuleEventPatternOutput() EventRuleEventPatternOutput
	ToEventRuleEventPatternOutputWithContext(context.Context) EventRuleEventPatternOutput
}

type EventRuleEventPatternArgs struct {
	// The type of the event-triggered alert rule. Valid values:
	EventTypeLists pulumi.StringArrayInput `pulumi:"eventTypeLists"`
	// The level of the event-triggered alert rule. Valid values:
	LevelLists pulumi.StringArrayInput `pulumi:"levelLists"`
	// The name of the event-triggered alert rule.
	NameLists pulumi.StringArrayInput `pulumi:"nameLists"`
	// The type of the cloud service.
	Product pulumi.StringInput `pulumi:"product"`
	// The SQL condition that is used to filter events. If the content of an event meets the specified SQL condition, an alert is automatically triggered.
	SqlFilter pulumi.StringPtrInput `pulumi:"sqlFilter"`
}

func (EventRuleEventPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRuleEventPattern)(nil)).Elem()
}

func (i EventRuleEventPatternArgs) ToEventRuleEventPatternOutput() EventRuleEventPatternOutput {
	return i.ToEventRuleEventPatternOutputWithContext(context.Background())
}

func (i EventRuleEventPatternArgs) ToEventRuleEventPatternOutputWithContext(ctx context.Context) EventRuleEventPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleEventPatternOutput)
}

func (i EventRuleEventPatternArgs) ToEventRuleEventPatternPtrOutput() EventRuleEventPatternPtrOutput {
	return i.ToEventRuleEventPatternPtrOutputWithContext(context.Background())
}

func (i EventRuleEventPatternArgs) ToEventRuleEventPatternPtrOutputWithContext(ctx context.Context) EventRuleEventPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleEventPatternOutput).ToEventRuleEventPatternPtrOutputWithContext(ctx)
}

// EventRuleEventPatternPtrInput is an input type that accepts EventRuleEventPatternArgs, EventRuleEventPatternPtr and EventRuleEventPatternPtrOutput values.
// You can construct a concrete instance of `EventRuleEventPatternPtrInput` via:
//
//	        EventRuleEventPatternArgs{...}
//
//	or:
//
//	        nil
type EventRuleEventPatternPtrInput interface {
	pulumi.Input

	ToEventRuleEventPatternPtrOutput() EventRuleEventPatternPtrOutput
	ToEventRuleEventPatternPtrOutputWithContext(context.Context) EventRuleEventPatternPtrOutput
}

type eventRuleEventPatternPtrType EventRuleEventPatternArgs

func EventRuleEventPatternPtr(v *EventRuleEventPatternArgs) EventRuleEventPatternPtrInput {
	return (*eventRuleEventPatternPtrType)(v)
}

func (*eventRuleEventPatternPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRuleEventPattern)(nil)).Elem()
}

func (i *eventRuleEventPatternPtrType) ToEventRuleEventPatternPtrOutput() EventRuleEventPatternPtrOutput {
	return i.ToEventRuleEventPatternPtrOutputWithContext(context.Background())
}

func (i *eventRuleEventPatternPtrType) ToEventRuleEventPatternPtrOutputWithContext(ctx context.Context) EventRuleEventPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleEventPatternPtrOutput)
}

type EventRuleEventPatternOutput struct{ *pulumi.OutputState }

func (EventRuleEventPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRuleEventPattern)(nil)).Elem()
}

func (o EventRuleEventPatternOutput) ToEventRuleEventPatternOutput() EventRuleEventPatternOutput {
	return o
}

func (o EventRuleEventPatternOutput) ToEventRuleEventPatternOutputWithContext(ctx context.Context) EventRuleEventPatternOutput {
	return o
}

func (o EventRuleEventPatternOutput) ToEventRuleEventPatternPtrOutput() EventRuleEventPatternPtrOutput {
	return o.ToEventRuleEventPatternPtrOutputWithContext(context.Background())
}

func (o EventRuleEventPatternOutput) ToEventRuleEventPatternPtrOutputWithContext(ctx context.Context) EventRuleEventPatternPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventRuleEventPattern) *EventRuleEventPattern {
		return &v
	}).(EventRuleEventPatternPtrOutput)
}

// The type of the event-triggered alert rule. Valid values:
func (o EventRuleEventPatternOutput) EventTypeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventRuleEventPattern) []string { return v.EventTypeLists }).(pulumi.StringArrayOutput)
}

// The level of the event-triggered alert rule. Valid values:
func (o EventRuleEventPatternOutput) LevelLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventRuleEventPattern) []string { return v.LevelLists }).(pulumi.StringArrayOutput)
}

// The name of the event-triggered alert rule.
func (o EventRuleEventPatternOutput) NameLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventRuleEventPattern) []string { return v.NameLists }).(pulumi.StringArrayOutput)
}

// The type of the cloud service.
func (o EventRuleEventPatternOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v EventRuleEventPattern) string { return v.Product }).(pulumi.StringOutput)
}

// The SQL condition that is used to filter events. If the content of an event meets the specified SQL condition, an alert is automatically triggered.
func (o EventRuleEventPatternOutput) SqlFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRuleEventPattern) *string { return v.SqlFilter }).(pulumi.StringPtrOutput)
}

type EventRuleEventPatternPtrOutput struct{ *pulumi.OutputState }

func (EventRuleEventPatternPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRuleEventPattern)(nil)).Elem()
}

func (o EventRuleEventPatternPtrOutput) ToEventRuleEventPatternPtrOutput() EventRuleEventPatternPtrOutput {
	return o
}

func (o EventRuleEventPatternPtrOutput) ToEventRuleEventPatternPtrOutputWithContext(ctx context.Context) EventRuleEventPatternPtrOutput {
	return o
}

func (o EventRuleEventPatternPtrOutput) Elem() EventRuleEventPatternOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) EventRuleEventPattern {
		if v != nil {
			return *v
		}
		var ret EventRuleEventPattern
		return ret
	}).(EventRuleEventPatternOutput)
}

// The type of the event-triggered alert rule. Valid values:
func (o EventRuleEventPatternPtrOutput) EventTypeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) []string {
		if v == nil {
			return nil
		}
		return v.EventTypeLists
	}).(pulumi.StringArrayOutput)
}

// The level of the event-triggered alert rule. Valid values:
func (o EventRuleEventPatternPtrOutput) LevelLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) []string {
		if v == nil {
			return nil
		}
		return v.LevelLists
	}).(pulumi.StringArrayOutput)
}

// The name of the event-triggered alert rule.
func (o EventRuleEventPatternPtrOutput) NameLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) []string {
		if v == nil {
			return nil
		}
		return v.NameLists
	}).(pulumi.StringArrayOutput)
}

// The type of the cloud service.
func (o EventRuleEventPatternPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// The SQL condition that is used to filter events. If the content of an event meets the specified SQL condition, an alert is automatically triggered.
func (o EventRuleEventPatternPtrOutput) SqlFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRuleEventPattern) *string {
		if v == nil {
			return nil
		}
		return v.SqlFilter
	}).(pulumi.StringPtrOutput)
}

type GroupMetricRuleEscalations struct {
	// The critical level. See `critical` below.
	Critical *GroupMetricRuleEscalationsCritical `pulumi:"critical"`
	// The info level. See `info` below.
	Info *GroupMetricRuleEscalationsInfo `pulumi:"info"`
	// The warn level. See `warn` below.
	Warn *GroupMetricRuleEscalationsWarn `pulumi:"warn"`
}

// GroupMetricRuleEscalationsInput is an input type that accepts GroupMetricRuleEscalationsArgs and GroupMetricRuleEscalationsOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInput` via:
//
//	GroupMetricRuleEscalationsArgs{...}
type GroupMetricRuleEscalationsInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput
	ToGroupMetricRuleEscalationsOutputWithContext(context.Context) GroupMetricRuleEscalationsOutput
}

type GroupMetricRuleEscalationsArgs struct {
	// The critical level. See `critical` below.
	Critical GroupMetricRuleEscalationsCriticalPtrInput `pulumi:"critical"`
	// The info level. See `info` below.
	Info GroupMetricRuleEscalationsInfoPtrInput `pulumi:"info"`
	// The warn level. See `warn` below.
	Warn GroupMetricRuleEscalationsWarnPtrInput `pulumi:"warn"`
}

func (GroupMetricRuleEscalationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return i.ToGroupMetricRuleEscalationsOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput)
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput).ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsPtrInput is an input type that accepts GroupMetricRuleEscalationsArgs, GroupMetricRuleEscalationsPtr and GroupMetricRuleEscalationsPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsPtrInput` via:
//
//	        GroupMetricRuleEscalationsArgs{...}
//
//	or:
//
//	        nil
type GroupMetricRuleEscalationsPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput
	ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsPtrOutput
}

type groupMetricRuleEscalationsPtrType GroupMetricRuleEscalationsArgs

func GroupMetricRuleEscalationsPtr(v *GroupMetricRuleEscalationsArgs) GroupMetricRuleEscalationsPtrInput {
	return (*groupMetricRuleEscalationsPtrType)(v)
}

func (*groupMetricRuleEscalationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsPtrOutput)
}

type GroupMetricRuleEscalationsOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalations) *GroupMetricRuleEscalations {
		return &v
	}).(GroupMetricRuleEscalationsPtrOutput)
}

// The critical level. See `critical` below.
func (o GroupMetricRuleEscalationsOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical { return v.Critical }).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level. See `info` below.
func (o GroupMetricRuleEscalationsOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo { return v.Info }).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level. See `warn` below.
func (o GroupMetricRuleEscalationsOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn { return v.Warn }).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) Elem() GroupMetricRuleEscalationsOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) GroupMetricRuleEscalations {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalations
		return ret
	}).(GroupMetricRuleEscalationsOutput)
}

// The critical level. See `critical` below.
func (o GroupMetricRuleEscalationsPtrOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level. See `info` below.
func (o GroupMetricRuleEscalationsPtrOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level. See `warn` below.
func (o GroupMetricRuleEscalationsPtrOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsCritical struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsCriticalInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs and GroupMetricRuleEscalationsCriticalOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalInput` via:
//
//	GroupMetricRuleEscalationsCriticalArgs{...}
type GroupMetricRuleEscalationsCriticalInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput
	ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalOutput
}

type GroupMetricRuleEscalationsCriticalArgs struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return i.ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput)
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput).ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsCriticalPtrInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs, GroupMetricRuleEscalationsCriticalPtr and GroupMetricRuleEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalPtrInput` via:
//
//	        GroupMetricRuleEscalationsCriticalArgs{...}
//
//	or:
//
//	        nil
type GroupMetricRuleEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput
	ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalPtrOutput
}

type groupMetricRuleEscalationsCriticalPtrType GroupMetricRuleEscalationsCriticalArgs

func GroupMetricRuleEscalationsCriticalPtr(v *GroupMetricRuleEscalationsCriticalArgs) GroupMetricRuleEscalationsCriticalPtrInput {
	return (*groupMetricRuleEscalationsCriticalPtrType)(v)
}

func (*groupMetricRuleEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

type GroupMetricRuleEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsCritical) *GroupMetricRuleEscalationsCritical {
		return &v
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) Elem() GroupMetricRuleEscalationsCriticalOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) GroupMetricRuleEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsCritical
		return ret
	}).(GroupMetricRuleEscalationsCriticalOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfo struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsInfoInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs and GroupMetricRuleEscalationsInfoOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoInput` via:
//
//	GroupMetricRuleEscalationsInfoArgs{...}
type GroupMetricRuleEscalationsInfoInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput
	ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoOutput
}

type GroupMetricRuleEscalationsInfoArgs struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return i.ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput)
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput).ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsInfoPtrInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs, GroupMetricRuleEscalationsInfoPtr and GroupMetricRuleEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoPtrInput` via:
//
//	        GroupMetricRuleEscalationsInfoArgs{...}
//
//	or:
//
//	        nil
type GroupMetricRuleEscalationsInfoPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput
	ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoPtrOutput
}

type groupMetricRuleEscalationsInfoPtrType GroupMetricRuleEscalationsInfoArgs

func GroupMetricRuleEscalationsInfoPtr(v *GroupMetricRuleEscalationsInfoArgs) GroupMetricRuleEscalationsInfoPtrInput {
	return (*groupMetricRuleEscalationsInfoPtrType)(v)
}

func (*groupMetricRuleEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoPtrOutput)
}

type GroupMetricRuleEscalationsInfoOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsInfo) *GroupMetricRuleEscalationsInfo {
		return &v
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) Elem() GroupMetricRuleEscalationsInfoOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) GroupMetricRuleEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsInfo
		return ret
	}).(GroupMetricRuleEscalationsInfoOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarn struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsWarnInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs and GroupMetricRuleEscalationsWarnOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnInput` via:
//
//	GroupMetricRuleEscalationsWarnArgs{...}
type GroupMetricRuleEscalationsWarnInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput
	ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnOutput
}

type GroupMetricRuleEscalationsWarnArgs struct {
	// The comparison operator of the threshold for critical-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return i.ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput)
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput).ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsWarnPtrInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs, GroupMetricRuleEscalationsWarnPtr and GroupMetricRuleEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnPtrInput` via:
//
//	        GroupMetricRuleEscalationsWarnArgs{...}
//
//	or:
//
//	        nil
type GroupMetricRuleEscalationsWarnPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput
	ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnPtrOutput
}

type groupMetricRuleEscalationsWarnPtrType GroupMetricRuleEscalationsWarnArgs

func GroupMetricRuleEscalationsWarnPtr(v *GroupMetricRuleEscalationsWarnArgs) GroupMetricRuleEscalationsWarnPtrInput {
	return (*groupMetricRuleEscalationsWarnPtrType)(v)
}

func (*groupMetricRuleEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsWarnOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsWarn) *GroupMetricRuleEscalationsWarn {
		return &v
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) Elem() GroupMetricRuleEscalationsWarnOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) GroupMetricRuleEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsWarn
		return ret
	}).(GroupMetricRuleEscalationsWarnOutput)
}

// The comparison operator of the threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleTarget struct {
	// The Alibaba Cloud Resource Name (ARN) of the resource.
	Arn *string `pulumi:"arn"`
	// The ID of the resource for which alerts are triggered.
	Id *string `pulumi:"id"`
	// The parameters of the alert callback. The parameters are in the JSON format.
	//
	// > **NOTE:** Currently, the Alibaba Cloud Resource Name (ARN) of the resource. To use, please [submit an application](https://www.alibabacloud.com/help/en/cloudmonitor/latest/describemetricruletargets).
	JsonParams *string `pulumi:"jsonParams"`
	// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
	Level *string `pulumi:"level"`
}

// GroupMetricRuleTargetInput is an input type that accepts GroupMetricRuleTargetArgs and GroupMetricRuleTargetOutput values.
// You can construct a concrete instance of `GroupMetricRuleTargetInput` via:
//
//	GroupMetricRuleTargetArgs{...}
type GroupMetricRuleTargetInput interface {
	pulumi.Input

	ToGroupMetricRuleTargetOutput() GroupMetricRuleTargetOutput
	ToGroupMetricRuleTargetOutputWithContext(context.Context) GroupMetricRuleTargetOutput
}

type GroupMetricRuleTargetArgs struct {
	// The Alibaba Cloud Resource Name (ARN) of the resource.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The ID of the resource for which alerts are triggered.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The parameters of the alert callback. The parameters are in the JSON format.
	//
	// > **NOTE:** Currently, the Alibaba Cloud Resource Name (ARN) of the resource. To use, please [submit an application](https://www.alibabacloud.com/help/en/cloudmonitor/latest/describemetricruletargets).
	JsonParams pulumi.StringPtrInput `pulumi:"jsonParams"`
	// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (GroupMetricRuleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleTarget)(nil)).Elem()
}

func (i GroupMetricRuleTargetArgs) ToGroupMetricRuleTargetOutput() GroupMetricRuleTargetOutput {
	return i.ToGroupMetricRuleTargetOutputWithContext(context.Background())
}

func (i GroupMetricRuleTargetArgs) ToGroupMetricRuleTargetOutputWithContext(ctx context.Context) GroupMetricRuleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleTargetOutput)
}

// GroupMetricRuleTargetArrayInput is an input type that accepts GroupMetricRuleTargetArray and GroupMetricRuleTargetArrayOutput values.
// You can construct a concrete instance of `GroupMetricRuleTargetArrayInput` via:
//
//	GroupMetricRuleTargetArray{ GroupMetricRuleTargetArgs{...} }
type GroupMetricRuleTargetArrayInput interface {
	pulumi.Input

	ToGroupMetricRuleTargetArrayOutput() GroupMetricRuleTargetArrayOutput
	ToGroupMetricRuleTargetArrayOutputWithContext(context.Context) GroupMetricRuleTargetArrayOutput
}

type GroupMetricRuleTargetArray []GroupMetricRuleTargetInput

func (GroupMetricRuleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMetricRuleTarget)(nil)).Elem()
}

func (i GroupMetricRuleTargetArray) ToGroupMetricRuleTargetArrayOutput() GroupMetricRuleTargetArrayOutput {
	return i.ToGroupMetricRuleTargetArrayOutputWithContext(context.Background())
}

func (i GroupMetricRuleTargetArray) ToGroupMetricRuleTargetArrayOutputWithContext(ctx context.Context) GroupMetricRuleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleTargetArrayOutput)
}

type GroupMetricRuleTargetOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleTarget)(nil)).Elem()
}

func (o GroupMetricRuleTargetOutput) ToGroupMetricRuleTargetOutput() GroupMetricRuleTargetOutput {
	return o
}

func (o GroupMetricRuleTargetOutput) ToGroupMetricRuleTargetOutputWithContext(ctx context.Context) GroupMetricRuleTargetOutput {
	return o
}

// The Alibaba Cloud Resource Name (ARN) of the resource.
func (o GroupMetricRuleTargetOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleTarget) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The ID of the resource for which alerts are triggered.
func (o GroupMetricRuleTargetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleTarget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The parameters of the alert callback. The parameters are in the JSON format.
//
// > **NOTE:** Currently, the Alibaba Cloud Resource Name (ARN) of the resource. To use, please [submit an application](https://www.alibabacloud.com/help/en/cloudmonitor/latest/describemetricruletargets).
func (o GroupMetricRuleTargetOutput) JsonParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleTarget) *string { return v.JsonParams }).(pulumi.StringPtrOutput)
}

// The level of the alert. Valid values: `Critical`, `Warn`, `Info`.
func (o GroupMetricRuleTargetOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleTarget) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type GroupMetricRuleTargetArrayOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMetricRuleTarget)(nil)).Elem()
}

func (o GroupMetricRuleTargetArrayOutput) ToGroupMetricRuleTargetArrayOutput() GroupMetricRuleTargetArrayOutput {
	return o
}

func (o GroupMetricRuleTargetArrayOutput) ToGroupMetricRuleTargetArrayOutputWithContext(ctx context.Context) GroupMetricRuleTargetArrayOutput {
	return o
}

func (o GroupMetricRuleTargetArrayOutput) Index(i pulumi.IntInput) GroupMetricRuleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMetricRuleTarget {
		return vs[0].([]GroupMetricRuleTarget)[vs[1].(int)]
	}).(GroupMetricRuleTargetOutput)
}

type HybridMonitorSlsTaskAttachLabel struct {
	// The tag key of the metric.
	Name *string `pulumi:"name"`
	// The tag value of the metric.
	Value *string `pulumi:"value"`
}

// HybridMonitorSlsTaskAttachLabelInput is an input type that accepts HybridMonitorSlsTaskAttachLabelArgs and HybridMonitorSlsTaskAttachLabelOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskAttachLabelInput` via:
//
//	HybridMonitorSlsTaskAttachLabelArgs{...}
type HybridMonitorSlsTaskAttachLabelInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskAttachLabelOutput() HybridMonitorSlsTaskAttachLabelOutput
	ToHybridMonitorSlsTaskAttachLabelOutputWithContext(context.Context) HybridMonitorSlsTaskAttachLabelOutput
}

type HybridMonitorSlsTaskAttachLabelArgs struct {
	// The tag key of the metric.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tag value of the metric.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HybridMonitorSlsTaskAttachLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskAttachLabel)(nil)).Elem()
}

func (i HybridMonitorSlsTaskAttachLabelArgs) ToHybridMonitorSlsTaskAttachLabelOutput() HybridMonitorSlsTaskAttachLabelOutput {
	return i.ToHybridMonitorSlsTaskAttachLabelOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskAttachLabelArgs) ToHybridMonitorSlsTaskAttachLabelOutputWithContext(ctx context.Context) HybridMonitorSlsTaskAttachLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskAttachLabelOutput)
}

// HybridMonitorSlsTaskAttachLabelArrayInput is an input type that accepts HybridMonitorSlsTaskAttachLabelArray and HybridMonitorSlsTaskAttachLabelArrayOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskAttachLabelArrayInput` via:
//
//	HybridMonitorSlsTaskAttachLabelArray{ HybridMonitorSlsTaskAttachLabelArgs{...} }
type HybridMonitorSlsTaskAttachLabelArrayInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskAttachLabelArrayOutput() HybridMonitorSlsTaskAttachLabelArrayOutput
	ToHybridMonitorSlsTaskAttachLabelArrayOutputWithContext(context.Context) HybridMonitorSlsTaskAttachLabelArrayOutput
}

type HybridMonitorSlsTaskAttachLabelArray []HybridMonitorSlsTaskAttachLabelInput

func (HybridMonitorSlsTaskAttachLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskAttachLabel)(nil)).Elem()
}

func (i HybridMonitorSlsTaskAttachLabelArray) ToHybridMonitorSlsTaskAttachLabelArrayOutput() HybridMonitorSlsTaskAttachLabelArrayOutput {
	return i.ToHybridMonitorSlsTaskAttachLabelArrayOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskAttachLabelArray) ToHybridMonitorSlsTaskAttachLabelArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskAttachLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskAttachLabelArrayOutput)
}

type HybridMonitorSlsTaskAttachLabelOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskAttachLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskAttachLabel)(nil)).Elem()
}

func (o HybridMonitorSlsTaskAttachLabelOutput) ToHybridMonitorSlsTaskAttachLabelOutput() HybridMonitorSlsTaskAttachLabelOutput {
	return o
}

func (o HybridMonitorSlsTaskAttachLabelOutput) ToHybridMonitorSlsTaskAttachLabelOutputWithContext(ctx context.Context) HybridMonitorSlsTaskAttachLabelOutput {
	return o
}

// The tag key of the metric.
func (o HybridMonitorSlsTaskAttachLabelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskAttachLabel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tag value of the metric.
func (o HybridMonitorSlsTaskAttachLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskAttachLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskAttachLabelArrayOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskAttachLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskAttachLabel)(nil)).Elem()
}

func (o HybridMonitorSlsTaskAttachLabelArrayOutput) ToHybridMonitorSlsTaskAttachLabelArrayOutput() HybridMonitorSlsTaskAttachLabelArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskAttachLabelArrayOutput) ToHybridMonitorSlsTaskAttachLabelArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskAttachLabelArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskAttachLabelArrayOutput) Index(i pulumi.IntInput) HybridMonitorSlsTaskAttachLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HybridMonitorSlsTaskAttachLabel {
		return vs[0].([]HybridMonitorSlsTaskAttachLabel)[vs[1].(int)]
	}).(HybridMonitorSlsTaskAttachLabelOutput)
}

type HybridMonitorSlsTaskSlsProcessConfig struct {
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Expresses []HybridMonitorSlsTaskSlsProcessConfigExpress `pulumi:"expresses"`
	// The conditions that are used to filter logs imported from Log Service. See `filter` below.
	Filter *HybridMonitorSlsTaskSlsProcessConfigFilter `pulumi:"filter"`
	// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL. See `groupBy` below.
	GroupBies []HybridMonitorSlsTaskSlsProcessConfigGroupBy `pulumi:"groupBies"`
	// The method that is used to aggregate logs imported from Log Service. See `statistics` below.
	Statistics []HybridMonitorSlsTaskSlsProcessConfigStatistic `pulumi:"statistics"`
}

// HybridMonitorSlsTaskSlsProcessConfigInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigArgs and HybridMonitorSlsTaskSlsProcessConfigOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigOutput() HybridMonitorSlsTaskSlsProcessConfigOutput
	ToHybridMonitorSlsTaskSlsProcessConfigOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigOutput
}

type HybridMonitorSlsTaskSlsProcessConfigArgs struct {
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Expresses HybridMonitorSlsTaskSlsProcessConfigExpressArrayInput `pulumi:"expresses"`
	// The conditions that are used to filter logs imported from Log Service. See `filter` below.
	Filter HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput `pulumi:"filter"`
	// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL. See `groupBy` below.
	GroupBies HybridMonitorSlsTaskSlsProcessConfigGroupByArrayInput `pulumi:"groupBies"`
	// The method that is used to aggregate logs imported from Log Service. See `statistics` below.
	Statistics HybridMonitorSlsTaskSlsProcessConfigStatisticArrayInput `pulumi:"statistics"`
}

func (HybridMonitorSlsTaskSlsProcessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfig)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigArgs) ToHybridMonitorSlsTaskSlsProcessConfigOutput() HybridMonitorSlsTaskSlsProcessConfigOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigArgs) ToHybridMonitorSlsTaskSlsProcessConfigOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigOutput)
}

func (i HybridMonitorSlsTaskSlsProcessConfigArgs) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutput() HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigArgs) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigOutput).ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(ctx)
}

// HybridMonitorSlsTaskSlsProcessConfigPtrInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigArgs, HybridMonitorSlsTaskSlsProcessConfigPtr and HybridMonitorSlsTaskSlsProcessConfigPtrOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigPtrInput` via:
//
//	        HybridMonitorSlsTaskSlsProcessConfigArgs{...}
//
//	or:
//
//	        nil
type HybridMonitorSlsTaskSlsProcessConfigPtrInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigPtrOutput() HybridMonitorSlsTaskSlsProcessConfigPtrOutput
	ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigPtrOutput
}

type hybridMonitorSlsTaskSlsProcessConfigPtrType HybridMonitorSlsTaskSlsProcessConfigArgs

func HybridMonitorSlsTaskSlsProcessConfigPtr(v *HybridMonitorSlsTaskSlsProcessConfigArgs) HybridMonitorSlsTaskSlsProcessConfigPtrInput {
	return (*hybridMonitorSlsTaskSlsProcessConfigPtrType)(v)
}

func (*hybridMonitorSlsTaskSlsProcessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridMonitorSlsTaskSlsProcessConfig)(nil)).Elem()
}

func (i *hybridMonitorSlsTaskSlsProcessConfigPtrType) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutput() HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(context.Background())
}

func (i *hybridMonitorSlsTaskSlsProcessConfigPtrType) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfig)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigOutput) ToHybridMonitorSlsTaskSlsProcessConfigOutput() HybridMonitorSlsTaskSlsProcessConfigOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigOutput) ToHybridMonitorSlsTaskSlsProcessConfigOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigOutput) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutput() HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return o.ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(context.Background())
}

func (o HybridMonitorSlsTaskSlsProcessConfigOutput) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HybridMonitorSlsTaskSlsProcessConfig) *HybridMonitorSlsTaskSlsProcessConfig {
		return &v
	}).(HybridMonitorSlsTaskSlsProcessConfigPtrOutput)
}

// The extended field that specifies the result of basic operations that are performed on aggregation results.
func (o HybridMonitorSlsTaskSlsProcessConfigOutput) Expresses() HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigExpress {
		return v.Expresses
	}).(HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput)
}

// The conditions that are used to filter logs imported from Log Service. See `filter` below.
func (o HybridMonitorSlsTaskSlsProcessConfigOutput) Filter() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfig) *HybridMonitorSlsTaskSlsProcessConfigFilter {
		return v.Filter
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput)
}

// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL. See `groupBy` below.
func (o HybridMonitorSlsTaskSlsProcessConfigOutput) GroupBies() HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigGroupBy {
		return v.GroupBies
	}).(HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput)
}

// The method that is used to aggregate logs imported from Log Service. See `statistics` below.
func (o HybridMonitorSlsTaskSlsProcessConfigOutput) Statistics() HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigStatistic {
		return v.Statistics
	}).(HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigPtrOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridMonitorSlsTaskSlsProcessConfig)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutput() HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) ToHybridMonitorSlsTaskSlsProcessConfigPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigPtrOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) Elem() HybridMonitorSlsTaskSlsProcessConfigOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfig) HybridMonitorSlsTaskSlsProcessConfig {
		if v != nil {
			return *v
		}
		var ret HybridMonitorSlsTaskSlsProcessConfig
		return ret
	}).(HybridMonitorSlsTaskSlsProcessConfigOutput)
}

// The extended field that specifies the result of basic operations that are performed on aggregation results.
func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) Expresses() HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigExpress {
		if v == nil {
			return nil
		}
		return v.Expresses
	}).(HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput)
}

// The conditions that are used to filter logs imported from Log Service. See `filter` below.
func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) Filter() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfig) *HybridMonitorSlsTaskSlsProcessConfigFilter {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput)
}

// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL. See `groupBy` below.
func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) GroupBies() HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput)
}

// The method that is used to aggregate logs imported from Log Service. See `statistics` below.
func (o HybridMonitorSlsTaskSlsProcessConfigPtrOutput) Statistics() HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfig) []HybridMonitorSlsTaskSlsProcessConfigStatistic {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigExpress struct {
	// The alias of the aggregation result.
	Alias *string `pulumi:"alias"`
	// The extended fields that specify the results of basic operations that are performed on aggregation results. See `express` below.
	Express *string `pulumi:"express"`
}

// HybridMonitorSlsTaskSlsProcessConfigExpressInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigExpressArgs and HybridMonitorSlsTaskSlsProcessConfigExpressOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigExpressInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigExpressArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigExpressInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigExpressOutput() HybridMonitorSlsTaskSlsProcessConfigExpressOutput
	ToHybridMonitorSlsTaskSlsProcessConfigExpressOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressOutput
}

type HybridMonitorSlsTaskSlsProcessConfigExpressArgs struct {
	// The alias of the aggregation result.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The extended fields that specify the results of basic operations that are performed on aggregation results. See `express` below.
	Express pulumi.StringPtrInput `pulumi:"express"`
}

func (HybridMonitorSlsTaskSlsProcessConfigExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigExpressArgs) ToHybridMonitorSlsTaskSlsProcessConfigExpressOutput() HybridMonitorSlsTaskSlsProcessConfigExpressOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigExpressOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigExpressArgs) ToHybridMonitorSlsTaskSlsProcessConfigExpressOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigExpressOutput)
}

// HybridMonitorSlsTaskSlsProcessConfigExpressArrayInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigExpressArray and HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigExpressArrayInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigExpressArray{ HybridMonitorSlsTaskSlsProcessConfigExpressArgs{...} }
type HybridMonitorSlsTaskSlsProcessConfigExpressArrayInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput() HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput
	ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput
}

type HybridMonitorSlsTaskSlsProcessConfigExpressArray []HybridMonitorSlsTaskSlsProcessConfigExpressInput

func (HybridMonitorSlsTaskSlsProcessConfigExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigExpressArray) ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput() HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigExpressArray) ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigExpressOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigExpressOutput) ToHybridMonitorSlsTaskSlsProcessConfigExpressOutput() HybridMonitorSlsTaskSlsProcessConfigExpressOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigExpressOutput) ToHybridMonitorSlsTaskSlsProcessConfigExpressOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressOutput {
	return o
}

// The alias of the aggregation result.
func (o HybridMonitorSlsTaskSlsProcessConfigExpressOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigExpress) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The extended fields that specify the results of basic operations that are performed on aggregation results. See `express` below.
func (o HybridMonitorSlsTaskSlsProcessConfigExpressOutput) Express() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigExpress) *string { return v.Express }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput() HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigExpressArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput) Index(i pulumi.IntInput) HybridMonitorSlsTaskSlsProcessConfigExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HybridMonitorSlsTaskSlsProcessConfigExpress {
		return vs[0].([]HybridMonitorSlsTaskSlsProcessConfigExpress)[vs[1].(int)]
	}).(HybridMonitorSlsTaskSlsProcessConfigExpressOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilter struct {
	// The conditions that are used to filter logs imported from Log Service. See `filters` below.
	Filters []HybridMonitorSlsTaskSlsProcessConfigFilterFilter `pulumi:"filters"`
	// The relationship between multiple filter conditions. Valid values: `and`(default value), `or`.
	Relation *string `pulumi:"relation"`
}

// HybridMonitorSlsTaskSlsProcessConfigFilterInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigFilterArgs and HybridMonitorSlsTaskSlsProcessConfigFilterOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigFilterInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigFilterArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigFilterInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterOutput
	ToHybridMonitorSlsTaskSlsProcessConfigFilterOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterOutput
}

type HybridMonitorSlsTaskSlsProcessConfigFilterArgs struct {
	// The conditions that are used to filter logs imported from Log Service. See `filters` below.
	Filters HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayInput `pulumi:"filters"`
	// The relationship between multiple filter conditions. Valid values: `and`(default value), `or`.
	Relation pulumi.StringPtrInput `pulumi:"relation"`
}

func (HybridMonitorSlsTaskSlsProcessConfigFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigFilterOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigFilterOutput)
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigFilterOutput).ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(ctx)
}

// HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigFilterArgs, HybridMonitorSlsTaskSlsProcessConfigFilterPtr and HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput` via:
//
//	        HybridMonitorSlsTaskSlsProcessConfigFilterArgs{...}
//
//	or:
//
//	        nil
type HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput
	ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput
}

type hybridMonitorSlsTaskSlsProcessConfigFilterPtrType HybridMonitorSlsTaskSlsProcessConfigFilterArgs

func HybridMonitorSlsTaskSlsProcessConfigFilterPtr(v *HybridMonitorSlsTaskSlsProcessConfigFilterArgs) HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput {
	return (*hybridMonitorSlsTaskSlsProcessConfigFilterPtrType)(v)
}

func (*hybridMonitorSlsTaskSlsProcessConfigFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridMonitorSlsTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (i *hybridMonitorSlsTaskSlsProcessConfigFilterPtrType) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(context.Background())
}

func (i *hybridMonitorSlsTaskSlsProcessConfigFilterPtrType) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilterOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o.ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(context.Background())
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HybridMonitorSlsTaskSlsProcessConfigFilter) *HybridMonitorSlsTaskSlsProcessConfigFilter {
		return &v
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput)
}

// The conditions that are used to filter logs imported from Log Service. See `filters` below.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) Filters() HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigFilter) []HybridMonitorSlsTaskSlsProcessConfigFilterFilter {
		return v.Filters
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput)
}

// The relationship between multiple filter conditions. Valid values: `and`(default value), `or`.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterOutput) Relation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigFilter) *string { return v.Relation }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridMonitorSlsTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput() HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterPtrOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) Elem() HybridMonitorSlsTaskSlsProcessConfigFilterOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfigFilter) HybridMonitorSlsTaskSlsProcessConfigFilter {
		if v != nil {
			return *v
		}
		var ret HybridMonitorSlsTaskSlsProcessConfigFilter
		return ret
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterOutput)
}

// The conditions that are used to filter logs imported from Log Service. See `filters` below.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) Filters() HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfigFilter) []HybridMonitorSlsTaskSlsProcessConfigFilterFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput)
}

// The relationship between multiple filter conditions. Valid values: `and`(default value), `or`.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput) Relation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridMonitorSlsTaskSlsProcessConfigFilter) *string {
		if v == nil {
			return nil
		}
		return v.Relation
	}).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilterFilter struct {
	// The method that is used to filter logs imported from Log Service. Valid values: `>`, `>=`, `=`, `<=`, `<`, `!=`, `contain`, `notContain`.
	Operator *string `pulumi:"operator"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName *string `pulumi:"slsKeyName"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value *string `pulumi:"value"`
}

// HybridMonitorSlsTaskSlsProcessConfigFilterFilterInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs and HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigFilterFilterInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigFilterFilterInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput
	ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput
}

type HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs struct {
	// The method that is used to filter logs imported from Log Service. Valid values: `>`, `>=`, `=`, `<=`, `<`, `!=`, `contain`, `notContain`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName pulumi.StringPtrInput `pulumi:"slsKeyName"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput)
}

// HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray and HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray{ HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs{...} }
type HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput
	ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput
}

type HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray []HybridMonitorSlsTaskSlsProcessConfigFilterFilterInput

func (HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput {
	return o
}

// The method that is used to filter logs imported from Log Service. Valid values: `>`, `>=`, `=`, `<=`, `<`, `!=`, `contain`, `notContain`.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigFilterFilter) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The name of the key that is used to aggregate logs imported from Log Service.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) SlsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigFilterFilter) *string { return v.SlsKeyName }).(pulumi.StringPtrOutput)
}

// The value of the key that is used to filter logs imported from Log Service.
func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigFilterFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput() HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput) Index(i pulumi.IntInput) HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HybridMonitorSlsTaskSlsProcessConfigFilterFilter {
		return vs[0].([]HybridMonitorSlsTaskSlsProcessConfigFilterFilter)[vs[1].(int)]
	}).(HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigGroupBy struct {
	// The alias of the aggregation result.
	Alias *string `pulumi:"alias"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName *string `pulumi:"slsKeyName"`
}

// HybridMonitorSlsTaskSlsProcessConfigGroupByInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigGroupByArgs and HybridMonitorSlsTaskSlsProcessConfigGroupByOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigGroupByInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigGroupByArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigGroupByInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByOutput
	ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByOutput
}

type HybridMonitorSlsTaskSlsProcessConfigGroupByArgs struct {
	// The alias of the aggregation result.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName pulumi.StringPtrInput `pulumi:"slsKeyName"`
}

func (HybridMonitorSlsTaskSlsProcessConfigGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigGroupByArgs) ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigGroupByArgs) ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigGroupByOutput)
}

// HybridMonitorSlsTaskSlsProcessConfigGroupByArrayInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigGroupByArray and HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigGroupByArrayInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigGroupByArray{ HybridMonitorSlsTaskSlsProcessConfigGroupByArgs{...} }
type HybridMonitorSlsTaskSlsProcessConfigGroupByArrayInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput
	ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput
}

type HybridMonitorSlsTaskSlsProcessConfigGroupByArray []HybridMonitorSlsTaskSlsProcessConfigGroupByInput

func (HybridMonitorSlsTaskSlsProcessConfigGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigGroupByArray) ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigGroupByArray) ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigGroupByOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigGroupByOutput) ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigGroupByOutput) ToHybridMonitorSlsTaskSlsProcessConfigGroupByOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByOutput {
	return o
}

// The alias of the aggregation result.
func (o HybridMonitorSlsTaskSlsProcessConfigGroupByOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigGroupBy) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The name of the key that is used to aggregate logs imported from Log Service.
func (o HybridMonitorSlsTaskSlsProcessConfigGroupByOutput) SlsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigGroupBy) *string { return v.SlsKeyName }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput() HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput) Index(i pulumi.IntInput) HybridMonitorSlsTaskSlsProcessConfigGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HybridMonitorSlsTaskSlsProcessConfigGroupBy {
		return vs[0].([]HybridMonitorSlsTaskSlsProcessConfigGroupBy)[vs[1].(int)]
	}).(HybridMonitorSlsTaskSlsProcessConfigGroupByOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigStatistic struct {
	// The alias of the aggregation result.
	Alias *string `pulumi:"alias"`
	// The function that is used to aggregate log data within a statistical period. Valid values: `count`, `sum`, `avg`, `max`, `min`, `value`, `countps`, `sumps`, `distinct`, `distribution`, `percentile`.
	Function *string `pulumi:"function"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	// - If you set the `function` parameter to `distribution`, this parameter specifies the lower limit of the statistical interval. For example, if you want to calculate the number of HTTP requests whose status code is 2XX, set this parameter to 200.
	// - If you set the `function` parameter to `percentile`, this parameter specifies the percentile at which the expected value is. For example, 0.5 specifies P50.
	ParameterOne *string `pulumi:"parameterOne"`
	// The value of the function that is used to aggregate logs imported from Log Service. **Note:** This parameter is required only if the `function` parameter is set to `distribution`. This parameter specifies the upper limit of the statistical interval.
	ParameterTwo *string `pulumi:"parameterTwo"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName *string `pulumi:"slsKeyName"`
}

// HybridMonitorSlsTaskSlsProcessConfigStatisticInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigStatisticArgs and HybridMonitorSlsTaskSlsProcessConfigStatisticOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigStatisticInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigStatisticArgs{...}
type HybridMonitorSlsTaskSlsProcessConfigStatisticInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticOutput
	ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticOutput
}

type HybridMonitorSlsTaskSlsProcessConfigStatisticArgs struct {
	// The alias of the aggregation result.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The function that is used to aggregate log data within a statistical period. Valid values: `count`, `sum`, `avg`, `max`, `min`, `value`, `countps`, `sumps`, `distinct`, `distribution`, `percentile`.
	Function pulumi.StringPtrInput `pulumi:"function"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	// - If you set the `function` parameter to `distribution`, this parameter specifies the lower limit of the statistical interval. For example, if you want to calculate the number of HTTP requests whose status code is 2XX, set this parameter to 200.
	// - If you set the `function` parameter to `percentile`, this parameter specifies the percentile at which the expected value is. For example, 0.5 specifies P50.
	ParameterOne pulumi.StringPtrInput `pulumi:"parameterOne"`
	// The value of the function that is used to aggregate logs imported from Log Service. **Note:** This parameter is required only if the `function` parameter is set to `distribution`. This parameter specifies the upper limit of the statistical interval.
	ParameterTwo pulumi.StringPtrInput `pulumi:"parameterTwo"`
	// The name of the key that is used to aggregate logs imported from Log Service.
	SlsKeyName pulumi.StringPtrInput `pulumi:"slsKeyName"`
}

func (HybridMonitorSlsTaskSlsProcessConfigStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigStatisticArgs) ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigStatisticArgs) ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigStatisticOutput)
}

// HybridMonitorSlsTaskSlsProcessConfigStatisticArrayInput is an input type that accepts HybridMonitorSlsTaskSlsProcessConfigStatisticArray and HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput values.
// You can construct a concrete instance of `HybridMonitorSlsTaskSlsProcessConfigStatisticArrayInput` via:
//
//	HybridMonitorSlsTaskSlsProcessConfigStatisticArray{ HybridMonitorSlsTaskSlsProcessConfigStatisticArgs{...} }
type HybridMonitorSlsTaskSlsProcessConfigStatisticArrayInput interface {
	pulumi.Input

	ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput
	ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutputWithContext(context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput
}

type HybridMonitorSlsTaskSlsProcessConfigStatisticArray []HybridMonitorSlsTaskSlsProcessConfigStatisticInput

func (HybridMonitorSlsTaskSlsProcessConfigStatisticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (i HybridMonitorSlsTaskSlsProcessConfigStatisticArray) ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return i.ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutputWithContext(context.Background())
}

func (i HybridMonitorSlsTaskSlsProcessConfigStatisticArray) ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigStatisticOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) ToHybridMonitorSlsTaskSlsProcessConfigStatisticOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticOutput {
	return o
}

// The alias of the aggregation result.
func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigStatistic) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The function that is used to aggregate log data within a statistical period. Valid values: `count`, `sum`, `avg`, `max`, `min`, `value`, `countps`, `sumps`, `distinct`, `distribution`, `percentile`.
func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigStatistic) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// The value of the function that is used to aggregate logs imported from Log Service.
// - If you set the `function` parameter to `distribution`, this parameter specifies the lower limit of the statistical interval. For example, if you want to calculate the number of HTTP requests whose status code is 2XX, set this parameter to 200.
// - If you set the `function` parameter to `percentile`, this parameter specifies the percentile at which the expected value is. For example, 0.5 specifies P50.
func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) ParameterOne() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigStatistic) *string { return v.ParameterOne }).(pulumi.StringPtrOutput)
}

// The value of the function that is used to aggregate logs imported from Log Service. **Note:** This parameter is required only if the `function` parameter is set to `distribution`. This parameter specifies the upper limit of the statistical interval.
func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) ParameterTwo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigStatistic) *string { return v.ParameterTwo }).(pulumi.StringPtrOutput)
}

// The name of the key that is used to aggregate logs imported from Log Service.
func (o HybridMonitorSlsTaskSlsProcessConfigStatisticOutput) SlsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridMonitorSlsTaskSlsProcessConfigStatistic) *string { return v.SlsKeyName }).(pulumi.StringPtrOutput)
}

type HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput struct{ *pulumi.OutputState }

func (HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HybridMonitorSlsTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (o HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput() HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput) ToHybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutputWithContext(ctx context.Context) HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput {
	return o
}

func (o HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput) Index(i pulumi.IntInput) HybridMonitorSlsTaskSlsProcessConfigStatisticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HybridMonitorSlsTaskSlsProcessConfigStatistic {
		return vs[0].([]HybridMonitorSlsTaskSlsProcessConfigStatistic)[vs[1].(int)]
	}).(HybridMonitorSlsTaskSlsProcessConfigStatisticOutput)
}

type MetricRuleBlackListMetric struct {
	// The name of the monitoring indicator.
	MetricName string `pulumi:"metricName"`
	// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
	Resource *string `pulumi:"resource"`
}

// MetricRuleBlackListMetricInput is an input type that accepts MetricRuleBlackListMetricArgs and MetricRuleBlackListMetricOutput values.
// You can construct a concrete instance of `MetricRuleBlackListMetricInput` via:
//
//	MetricRuleBlackListMetricArgs{...}
type MetricRuleBlackListMetricInput interface {
	pulumi.Input

	ToMetricRuleBlackListMetricOutput() MetricRuleBlackListMetricOutput
	ToMetricRuleBlackListMetricOutputWithContext(context.Context) MetricRuleBlackListMetricOutput
}

type MetricRuleBlackListMetricArgs struct {
	// The name of the monitoring indicator.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
}

func (MetricRuleBlackListMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleBlackListMetric)(nil)).Elem()
}

func (i MetricRuleBlackListMetricArgs) ToMetricRuleBlackListMetricOutput() MetricRuleBlackListMetricOutput {
	return i.ToMetricRuleBlackListMetricOutputWithContext(context.Background())
}

func (i MetricRuleBlackListMetricArgs) ToMetricRuleBlackListMetricOutputWithContext(ctx context.Context) MetricRuleBlackListMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleBlackListMetricOutput)
}

// MetricRuleBlackListMetricArrayInput is an input type that accepts MetricRuleBlackListMetricArray and MetricRuleBlackListMetricArrayOutput values.
// You can construct a concrete instance of `MetricRuleBlackListMetricArrayInput` via:
//
//	MetricRuleBlackListMetricArray{ MetricRuleBlackListMetricArgs{...} }
type MetricRuleBlackListMetricArrayInput interface {
	pulumi.Input

	ToMetricRuleBlackListMetricArrayOutput() MetricRuleBlackListMetricArrayOutput
	ToMetricRuleBlackListMetricArrayOutputWithContext(context.Context) MetricRuleBlackListMetricArrayOutput
}

type MetricRuleBlackListMetricArray []MetricRuleBlackListMetricInput

func (MetricRuleBlackListMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleBlackListMetric)(nil)).Elem()
}

func (i MetricRuleBlackListMetricArray) ToMetricRuleBlackListMetricArrayOutput() MetricRuleBlackListMetricArrayOutput {
	return i.ToMetricRuleBlackListMetricArrayOutputWithContext(context.Background())
}

func (i MetricRuleBlackListMetricArray) ToMetricRuleBlackListMetricArrayOutputWithContext(ctx context.Context) MetricRuleBlackListMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleBlackListMetricArrayOutput)
}

type MetricRuleBlackListMetricOutput struct{ *pulumi.OutputState }

func (MetricRuleBlackListMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleBlackListMetric)(nil)).Elem()
}

func (o MetricRuleBlackListMetricOutput) ToMetricRuleBlackListMetricOutput() MetricRuleBlackListMetricOutput {
	return o
}

func (o MetricRuleBlackListMetricOutput) ToMetricRuleBlackListMetricOutputWithContext(ctx context.Context) MetricRuleBlackListMetricOutput {
	return o
}

// The name of the monitoring indicator.
func (o MetricRuleBlackListMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleBlackListMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
func (o MetricRuleBlackListMetricOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleBlackListMetric) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type MetricRuleBlackListMetricArrayOutput struct{ *pulumi.OutputState }

func (MetricRuleBlackListMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleBlackListMetric)(nil)).Elem()
}

func (o MetricRuleBlackListMetricArrayOutput) ToMetricRuleBlackListMetricArrayOutput() MetricRuleBlackListMetricArrayOutput {
	return o
}

func (o MetricRuleBlackListMetricArrayOutput) ToMetricRuleBlackListMetricArrayOutputWithContext(ctx context.Context) MetricRuleBlackListMetricArrayOutput {
	return o
}

func (o MetricRuleBlackListMetricArrayOutput) Index(i pulumi.IntInput) MetricRuleBlackListMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricRuleBlackListMetric {
		return vs[0].([]MetricRuleBlackListMetric)[vs[1].(int)]
	}).(MetricRuleBlackListMetricOutput)
}

type MetricRuleTemplateAlertTemplate struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category string `pulumi:"category"`
	// The information about the trigger condition based on the alert level. See `escalations` below.
	Escalations *MetricRuleTemplateAlertTemplateEscalations `pulumi:"escalations"`
	// The name of the metric.
	//
	// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	//
	// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
	Namespace string `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName string `pulumi:"ruleName"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook *string `pulumi:"webhook"`
}

// MetricRuleTemplateAlertTemplateInput is an input type that accepts MetricRuleTemplateAlertTemplateArgs and MetricRuleTemplateAlertTemplateOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateInput` via:
//
//	MetricRuleTemplateAlertTemplateArgs{...}
type MetricRuleTemplateAlertTemplateInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput
	ToMetricRuleTemplateAlertTemplateOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateOutput
}

type MetricRuleTemplateAlertTemplateArgs struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category pulumi.StringInput `pulumi:"category"`
	// The information about the trigger condition based on the alert level. See `escalations` below.
	Escalations MetricRuleTemplateAlertTemplateEscalationsPtrInput `pulumi:"escalations"`
	// The name of the metric.
	//
	// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	//
	// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook pulumi.StringPtrInput `pulumi:"webhook"`
}

func (MetricRuleTemplateAlertTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateArgs) ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput {
	return i.ToMetricRuleTemplateAlertTemplateOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateArgs) ToMetricRuleTemplateAlertTemplateOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateOutput)
}

// MetricRuleTemplateAlertTemplateArrayInput is an input type that accepts MetricRuleTemplateAlertTemplateArray and MetricRuleTemplateAlertTemplateArrayOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateArrayInput` via:
//
//	MetricRuleTemplateAlertTemplateArray{ MetricRuleTemplateAlertTemplateArgs{...} }
type MetricRuleTemplateAlertTemplateArrayInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput
	ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateArrayOutput
}

type MetricRuleTemplateAlertTemplateArray []MetricRuleTemplateAlertTemplateInput

func (MetricRuleTemplateAlertTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateArray) ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput {
	return i.ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateArray) ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateArrayOutput)
}

type MetricRuleTemplateAlertTemplateOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateOutput) ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateOutput) ToMetricRuleTemplateAlertTemplateOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateOutput {
	return o
}

// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
func (o MetricRuleTemplateAlertTemplateOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.Category }).(pulumi.StringOutput)
}

// The information about the trigger condition based on the alert level. See `escalations` below.
func (o MetricRuleTemplateAlertTemplateOutput) Escalations() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) *MetricRuleTemplateAlertTemplateEscalations {
		return v.Escalations
	}).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

// The name of the metric.
//
// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
func (o MetricRuleTemplateAlertTemplateOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
//
// > **NOTE:** For more information, see [DescribeMetricMetaList](https://www.alibabacloud.com/help/doc-detail/98846.htm) or [Appendix 1: Metrics](https://www.alibabacloud.com/help/doc-detail/28619.htm).
func (o MetricRuleTemplateAlertTemplateOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o MetricRuleTemplateAlertTemplateOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.RuleName }).(pulumi.StringOutput)
}

// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
func (o MetricRuleTemplateAlertTemplateOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) *string { return v.Webhook }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateArrayOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateArrayOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) Index(i pulumi.IntInput) MetricRuleTemplateAlertTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricRuleTemplateAlertTemplate {
		return vs[0].([]MetricRuleTemplateAlertTemplate)[vs[1].(int)]
	}).(MetricRuleTemplateAlertTemplateOutput)
}

type MetricRuleTemplateAlertTemplateEscalations struct {
	// The condition for triggering critical-level alerts. See `critical` below.
	Critical *MetricRuleTemplateAlertTemplateEscalationsCritical `pulumi:"critical"`
	// The condition for triggering info-level alerts. See `info` below.
	Info *MetricRuleTemplateAlertTemplateEscalationsInfo `pulumi:"info"`
	// The condition for triggering warn-level alerts. See `warn` below.
	Warn *MetricRuleTemplateAlertTemplateEscalationsWarn `pulumi:"warn"`
}

// MetricRuleTemplateAlertTemplateEscalationsInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsArgs and MetricRuleTemplateAlertTemplateEscalationsOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInput` via:
//
//	MetricRuleTemplateAlertTemplateEscalationsArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput
	ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput
}

type MetricRuleTemplateAlertTemplateEscalationsArgs struct {
	// The condition for triggering critical-level alerts. See `critical` below.
	Critical MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput `pulumi:"critical"`
	// The condition for triggering info-level alerts. See `info` below.
	Info MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput `pulumi:"info"`
	// The condition for triggering warn-level alerts. See `warn` below.
	Warn MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput `pulumi:"warn"`
}

func (MetricRuleTemplateAlertTemplateEscalationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsOutput).ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsArgs, MetricRuleTemplateAlertTemplateEscalationsPtr and MetricRuleTemplateAlertTemplateEscalationsPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsPtrInput` via:
//
//	        MetricRuleTemplateAlertTemplateEscalationsArgs{...}
//
//	or:
//
//	        nil
type MetricRuleTemplateAlertTemplateEscalationsPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsPtrType MetricRuleTemplateAlertTemplateEscalationsArgs

func MetricRuleTemplateAlertTemplateEscalationsPtr(v *MetricRuleTemplateAlertTemplateEscalationsArgs) MetricRuleTemplateAlertTemplateEscalationsPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsPtrType) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsPtrType) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalations {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

// The condition for triggering critical-level alerts. See `critical` below.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Critical() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		return v.Critical
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The condition for triggering info-level alerts. See `info` below.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Info() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		return v.Info
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The condition for triggering warn-level alerts. See `warn` below.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Warn() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		return v.Warn
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) MetricRuleTemplateAlertTemplateEscalations {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalations
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsOutput)
}

// The condition for triggering critical-level alerts. See `critical` below.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Critical() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The condition for triggering info-level alerts. See `info` below.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Info() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The condition for triggering warn-level alerts. See `warn` below.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Warn() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCritical struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsCriticalInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsCriticalArgs and MetricRuleTemplateAlertTemplateEscalationsCriticalOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsCriticalInput` via:
//
//	MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsCriticalInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput
	ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput).ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsCriticalArgs, MetricRuleTemplateAlertTemplateEscalationsCriticalPtr and MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput` via:
//
//	        MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{...}
//
//	or:
//
//	        nil
type MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsCriticalPtrType MetricRuleTemplateAlertTemplateEscalationsCriticalArgs

func MetricRuleTemplateAlertTemplateEscalationsCriticalPtr(v *MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsCriticalPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsCritical) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) MetricRuleTemplateAlertTemplateEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsCritical
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfo struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsInfoInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsInfoArgs and MetricRuleTemplateAlertTemplateEscalationsInfoOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInfoInput` via:
//
//	MetricRuleTemplateAlertTemplateEscalationsInfoArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsInfoInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput
	ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput
}

type MetricRuleTemplateAlertTemplateEscalationsInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput).ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsInfoArgs, MetricRuleTemplateAlertTemplateEscalationsInfoPtr and MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput` via:
//
//	        MetricRuleTemplateAlertTemplateEscalationsInfoArgs{...}
//
//	or:
//
//	        nil
type MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsInfoPtrType MetricRuleTemplateAlertTemplateEscalationsInfoArgs

func MetricRuleTemplateAlertTemplateEscalationsInfoPtr(v *MetricRuleTemplateAlertTemplateEscalationsInfoArgs) MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsInfoPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfoOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsInfo) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) MetricRuleTemplateAlertTemplateEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsInfo
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarn struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsWarnInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsWarnArgs and MetricRuleTemplateAlertTemplateEscalationsWarnOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsWarnInput` via:
//
//	MetricRuleTemplateAlertTemplateEscalationsWarnArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsWarnInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput
	ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput
}

type MetricRuleTemplateAlertTemplateEscalationsWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput).ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsWarnArgs, MetricRuleTemplateAlertTemplateEscalationsWarnPtr and MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput` via:
//
//	        MetricRuleTemplateAlertTemplateEscalationsWarnArgs{...}
//
//	or:
//
//	        nil
type MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsWarnPtrType MetricRuleTemplateAlertTemplateEscalationsWarnArgs

func MetricRuleTemplateAlertTemplateEscalationsWarnPtr(v *MetricRuleTemplateAlertTemplateEscalationsWarnArgs) MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsWarnPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarnOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsWarn) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) MetricRuleTemplateAlertTemplateEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsWarn
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput)
}

// The comparison operator of the threshold for warn-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MonitorGroupInstancesInstance struct {
	// The category of instance.
	Category string `pulumi:"category"`
	// The id of instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The region id of instance.
	RegionId string `pulumi:"regionId"`
}

// MonitorGroupInstancesInstanceInput is an input type that accepts MonitorGroupInstancesInstanceArgs and MonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceInput` via:
//
//	MonitorGroupInstancesInstanceArgs{...}
type MonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput
	ToMonitorGroupInstancesInstanceOutputWithContext(context.Context) MonitorGroupInstancesInstanceOutput
}

type MonitorGroupInstancesInstanceArgs struct {
	// The category of instance.
	Category pulumi.StringInput `pulumi:"category"`
	// The id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The region id of instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (MonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return i.ToMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceOutput)
}

// MonitorGroupInstancesInstanceArrayInput is an input type that accepts MonitorGroupInstancesInstanceArray and MonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceArrayInput` via:
//
//	MonitorGroupInstancesInstanceArray{ MonitorGroupInstancesInstanceArgs{...} }
type MonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput
	ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) MonitorGroupInstancesInstanceArrayOutput
}

type MonitorGroupInstancesInstanceArray []MonitorGroupInstancesInstanceInput

func (MonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return i.ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceArrayOutput)
}

type MonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return o
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return o
}

// The category of instance.
func (o MonitorGroupInstancesInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.Category }).(pulumi.StringOutput)
}

// The id of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The region id of instance.
func (o MonitorGroupInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type MonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) MonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorGroupInstancesInstance {
		return vs[0].([]MonitorGroupInstancesInstance)[vs[1].(int)]
	}).(MonitorGroupInstancesInstanceOutput)
}

type SiteMonitorIspCity struct {
	// The ID of the city.
	City string `pulumi:"city"`
	// The ID of the carrier.
	Isp string `pulumi:"isp"`
}

// SiteMonitorIspCityInput is an input type that accepts SiteMonitorIspCityArgs and SiteMonitorIspCityOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityInput` via:
//
//	SiteMonitorIspCityArgs{...}
type SiteMonitorIspCityInput interface {
	pulumi.Input

	ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput
	ToSiteMonitorIspCityOutputWithContext(context.Context) SiteMonitorIspCityOutput
}

type SiteMonitorIspCityArgs struct {
	// The ID of the city.
	City pulumi.StringInput `pulumi:"city"`
	// The ID of the carrier.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (SiteMonitorIspCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return i.ToSiteMonitorIspCityOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityOutput)
}

// SiteMonitorIspCityArrayInput is an input type that accepts SiteMonitorIspCityArray and SiteMonitorIspCityArrayOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityArrayInput` via:
//
//	SiteMonitorIspCityArray{ SiteMonitorIspCityArgs{...} }
type SiteMonitorIspCityArrayInput interface {
	pulumi.Input

	ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput
	ToSiteMonitorIspCityArrayOutputWithContext(context.Context) SiteMonitorIspCityArrayOutput
}

type SiteMonitorIspCityArray []SiteMonitorIspCityInput

func (SiteMonitorIspCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return i.ToSiteMonitorIspCityArrayOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityArrayOutput)
}

type SiteMonitorIspCityOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return o
}

// The ID of the city.
func (o SiteMonitorIspCityOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.City }).(pulumi.StringOutput)
}

// The ID of the carrier.
func (o SiteMonitorIspCityOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.Isp }).(pulumi.StringOutput)
}

type SiteMonitorIspCityArrayOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) Index(i pulumi.IntInput) SiteMonitorIspCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteMonitorIspCity {
		return vs[0].([]SiteMonitorIspCity)[vs[1].(int)]
	}).(SiteMonitorIspCityOutput)
}

type SlsGroupSlsGroupConfig struct {
	// The name of the Log Store.
	SlsLogstore string `pulumi:"slsLogstore"`
	// The name of the Project.
	SlsProject string `pulumi:"slsProject"`
	// The Sls Region.
	SlsRegion string `pulumi:"slsRegion"`
	// The ID of the Sls User.
	SlsUserId *string `pulumi:"slsUserId"`
}

// SlsGroupSlsGroupConfigInput is an input type that accepts SlsGroupSlsGroupConfigArgs and SlsGroupSlsGroupConfigOutput values.
// You can construct a concrete instance of `SlsGroupSlsGroupConfigInput` via:
//
//	SlsGroupSlsGroupConfigArgs{...}
type SlsGroupSlsGroupConfigInput interface {
	pulumi.Input

	ToSlsGroupSlsGroupConfigOutput() SlsGroupSlsGroupConfigOutput
	ToSlsGroupSlsGroupConfigOutputWithContext(context.Context) SlsGroupSlsGroupConfigOutput
}

type SlsGroupSlsGroupConfigArgs struct {
	// The name of the Log Store.
	SlsLogstore pulumi.StringInput `pulumi:"slsLogstore"`
	// The name of the Project.
	SlsProject pulumi.StringInput `pulumi:"slsProject"`
	// The Sls Region.
	SlsRegion pulumi.StringInput `pulumi:"slsRegion"`
	// The ID of the Sls User.
	SlsUserId pulumi.StringPtrInput `pulumi:"slsUserId"`
}

func (SlsGroupSlsGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlsGroupSlsGroupConfig)(nil)).Elem()
}

func (i SlsGroupSlsGroupConfigArgs) ToSlsGroupSlsGroupConfigOutput() SlsGroupSlsGroupConfigOutput {
	return i.ToSlsGroupSlsGroupConfigOutputWithContext(context.Background())
}

func (i SlsGroupSlsGroupConfigArgs) ToSlsGroupSlsGroupConfigOutputWithContext(ctx context.Context) SlsGroupSlsGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlsGroupSlsGroupConfigOutput)
}

// SlsGroupSlsGroupConfigArrayInput is an input type that accepts SlsGroupSlsGroupConfigArray and SlsGroupSlsGroupConfigArrayOutput values.
// You can construct a concrete instance of `SlsGroupSlsGroupConfigArrayInput` via:
//
//	SlsGroupSlsGroupConfigArray{ SlsGroupSlsGroupConfigArgs{...} }
type SlsGroupSlsGroupConfigArrayInput interface {
	pulumi.Input

	ToSlsGroupSlsGroupConfigArrayOutput() SlsGroupSlsGroupConfigArrayOutput
	ToSlsGroupSlsGroupConfigArrayOutputWithContext(context.Context) SlsGroupSlsGroupConfigArrayOutput
}

type SlsGroupSlsGroupConfigArray []SlsGroupSlsGroupConfigInput

func (SlsGroupSlsGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlsGroupSlsGroupConfig)(nil)).Elem()
}

func (i SlsGroupSlsGroupConfigArray) ToSlsGroupSlsGroupConfigArrayOutput() SlsGroupSlsGroupConfigArrayOutput {
	return i.ToSlsGroupSlsGroupConfigArrayOutputWithContext(context.Background())
}

func (i SlsGroupSlsGroupConfigArray) ToSlsGroupSlsGroupConfigArrayOutputWithContext(ctx context.Context) SlsGroupSlsGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlsGroupSlsGroupConfigArrayOutput)
}

type SlsGroupSlsGroupConfigOutput struct{ *pulumi.OutputState }

func (SlsGroupSlsGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlsGroupSlsGroupConfig)(nil)).Elem()
}

func (o SlsGroupSlsGroupConfigOutput) ToSlsGroupSlsGroupConfigOutput() SlsGroupSlsGroupConfigOutput {
	return o
}

func (o SlsGroupSlsGroupConfigOutput) ToSlsGroupSlsGroupConfigOutputWithContext(ctx context.Context) SlsGroupSlsGroupConfigOutput {
	return o
}

// The name of the Log Store.
func (o SlsGroupSlsGroupConfigOutput) SlsLogstore() pulumi.StringOutput {
	return o.ApplyT(func(v SlsGroupSlsGroupConfig) string { return v.SlsLogstore }).(pulumi.StringOutput)
}

// The name of the Project.
func (o SlsGroupSlsGroupConfigOutput) SlsProject() pulumi.StringOutput {
	return o.ApplyT(func(v SlsGroupSlsGroupConfig) string { return v.SlsProject }).(pulumi.StringOutput)
}

// The Sls Region.
func (o SlsGroupSlsGroupConfigOutput) SlsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v SlsGroupSlsGroupConfig) string { return v.SlsRegion }).(pulumi.StringOutput)
}

// The ID of the Sls User.
func (o SlsGroupSlsGroupConfigOutput) SlsUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlsGroupSlsGroupConfig) *string { return v.SlsUserId }).(pulumi.StringPtrOutput)
}

type SlsGroupSlsGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (SlsGroupSlsGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlsGroupSlsGroupConfig)(nil)).Elem()
}

func (o SlsGroupSlsGroupConfigArrayOutput) ToSlsGroupSlsGroupConfigArrayOutput() SlsGroupSlsGroupConfigArrayOutput {
	return o
}

func (o SlsGroupSlsGroupConfigArrayOutput) ToSlsGroupSlsGroupConfigArrayOutputWithContext(ctx context.Context) SlsGroupSlsGroupConfigArrayOutput {
	return o
}

func (o SlsGroupSlsGroupConfigArrayOutput) Index(i pulumi.IntInput) SlsGroupSlsGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlsGroupSlsGroupConfig {
		return vs[0].([]SlsGroupSlsGroupConfig)[vs[1].(int)]
	}).(SlsGroupSlsGroupConfigOutput)
}

type GetAlarmContactGroupsGroup struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName string `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts []string `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe string `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed bool `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id string `pulumi:"id"`
}

// GetAlarmContactGroupsGroupInput is an input type that accepts GetAlarmContactGroupsGroupArgs and GetAlarmContactGroupsGroupOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupInput` via:
//
//	GetAlarmContactGroupsGroupArgs{...}
type GetAlarmContactGroupsGroupInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput
	ToGetAlarmContactGroupsGroupOutputWithContext(context.Context) GetAlarmContactGroupsGroupOutput
}

type GetAlarmContactGroupsGroupArgs struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName pulumi.StringInput `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts pulumi.StringArrayInput `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe pulumi.StringInput `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed pulumi.BoolInput `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAlarmContactGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return i.ToGetAlarmContactGroupsGroupOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupOutput)
}

// GetAlarmContactGroupsGroupArrayInput is an input type that accepts GetAlarmContactGroupsGroupArray and GetAlarmContactGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupArrayInput` via:
//
//	GetAlarmContactGroupsGroupArray{ GetAlarmContactGroupsGroupArgs{...} }
type GetAlarmContactGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput
	ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Context) GetAlarmContactGroupsGroupArrayOutput
}

type GetAlarmContactGroupsGroupArray []GetAlarmContactGroupsGroupInput

func (GetAlarmContactGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return i.ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupArrayOutput)
}

type GetAlarmContactGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return o
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return o
}

// The name of Alarm Contact Group.
func (o GetAlarmContactGroupsGroupOutput) AlarmContactGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.AlarmContactGroupName }).(pulumi.StringOutput)
}

// The alarm contacts in the alarm group.
func (o GetAlarmContactGroupsGroupOutput) Contacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) []string { return v.Contacts }).(pulumi.StringArrayOutput)
}

// The description of the Alarm Group.
func (o GetAlarmContactGroupsGroupOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Describe }).(pulumi.StringOutput)
}

// Indicates whether the alarm group subscribes to weekly reports.
func (o GetAlarmContactGroupsGroupOutput) EnableSubscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) bool { return v.EnableSubscribed }).(pulumi.BoolOutput)
}

// The ID of the CMS.
func (o GetAlarmContactGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetAlarmContactGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAlarmContactGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactGroupsGroup {
		return vs[0].([]GetAlarmContactGroupsGroup)[vs[1].(int)]
	}).(GetAlarmContactGroupsGroupOutput)
}

type GetAlarmContactsContact struct {
	// The name of the alarm contact.
	AlarmContactName string `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim string `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook string `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail string `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms string `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim string `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook string `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail string `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms string `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups []string `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe string `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   string `pulumi:"id"`
	Lang string `pulumi:"lang"`
}

// GetAlarmContactsContactInput is an input type that accepts GetAlarmContactsContactArgs and GetAlarmContactsContactOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactInput` via:
//
//	GetAlarmContactsContactArgs{...}
type GetAlarmContactsContactInput interface {
	pulumi.Input

	ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput
	ToGetAlarmContactsContactOutputWithContext(context.Context) GetAlarmContactsContactOutput
}

type GetAlarmContactsContactArgs struct {
	// The name of the alarm contact.
	AlarmContactName pulumi.StringInput `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim pulumi.StringInput `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook pulumi.StringInput `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail pulumi.StringInput `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms pulumi.StringInput `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim pulumi.StringInput `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook pulumi.StringInput `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail pulumi.StringInput `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms pulumi.StringInput `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe pulumi.StringInput `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   pulumi.StringInput `pulumi:"id"`
	Lang pulumi.StringInput `pulumi:"lang"`
}

func (GetAlarmContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return i.ToGetAlarmContactsContactOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactOutput)
}

// GetAlarmContactsContactArrayInput is an input type that accepts GetAlarmContactsContactArray and GetAlarmContactsContactArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactArrayInput` via:
//
//	GetAlarmContactsContactArray{ GetAlarmContactsContactArgs{...} }
type GetAlarmContactsContactArrayInput interface {
	pulumi.Input

	ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput
	ToGetAlarmContactsContactArrayOutputWithContext(context.Context) GetAlarmContactsContactArrayOutput
}

type GetAlarmContactsContactArray []GetAlarmContactsContactInput

func (GetAlarmContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return i.ToGetAlarmContactsContactArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactArrayOutput)
}

type GetAlarmContactsContactOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return o
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return o
}

// The name of the alarm contact.
func (o GetAlarmContactsContactOutput) AlarmContactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.AlarmContactName }).(pulumi.StringOutput)
}

// The TradeManager ID of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsAliim }).(pulumi.StringOutput)
}

// The webhook URL of the DingTalk chatbot.
func (o GetAlarmContactsContactOutput) ChannelsDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsDingWebHook }).(pulumi.StringOutput)
}

// The email address of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsMail }).(pulumi.StringOutput)
}

// The phone number of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsSms }).(pulumi.StringOutput)
}

// Indicates whether the TradeManager ID is valid.
func (o GetAlarmContactsContactOutput) ChannelsStateAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateAliim }).(pulumi.StringOutput)
}

// Indicates whether the DingTalk chatbot is normal.
func (o GetAlarmContactsContactOutput) ChannelsStateDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateDingWebHook }).(pulumi.StringOutput)
}

// The status of the email address.
func (o GetAlarmContactsContactOutput) ChannelsStateMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateMail }).(pulumi.StringOutput)
}

// The status of the phone number.
func (o GetAlarmContactsContactOutput) ChannelsStatusSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStatusSms }).(pulumi.StringOutput)
}

// The alert groups to which the alarm contact is added.
func (o GetAlarmContactsContactOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The description of the alarm contact.
func (o GetAlarmContactsContactOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Describe }).(pulumi.StringOutput)
}

// The ID of the alarm contact.
func (o GetAlarmContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmContactsContactOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Lang }).(pulumi.StringOutput)
}

type GetAlarmContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) Index(i pulumi.IntInput) GetAlarmContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactsContact {
		return vs[0].([]GetAlarmContactsContact)[vs[1].(int)]
	}).(GetAlarmContactsContactOutput)
}

type GetDynamicTagGroupsGroup struct {
	// The ID of the tag rule.
	DynamicTagRuleId string `pulumi:"dynamicTagRuleId"`
	// The ID of the Dynamic Tag Group.
	Id string `pulumi:"id"`
	// The relationship between conditional expressions. Valid values: `and`, `or`.
	MatchExpressFilterRelation string `pulumi:"matchExpressFilterRelation"`
	// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
	MatchExpresses []GetDynamicTagGroupsGroupMatchExpress `pulumi:"matchExpresses"`
	// The status of the resource. Valid values: `RUNNING`, `FINISH`.
	Status string `pulumi:"status"`
	// The tag key of the tag.
	TagKey string `pulumi:"tagKey"`
}

// GetDynamicTagGroupsGroupInput is an input type that accepts GetDynamicTagGroupsGroupArgs and GetDynamicTagGroupsGroupOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupInput` via:
//
//	GetDynamicTagGroupsGroupArgs{...}
type GetDynamicTagGroupsGroupInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput
	ToGetDynamicTagGroupsGroupOutputWithContext(context.Context) GetDynamicTagGroupsGroupOutput
}

type GetDynamicTagGroupsGroupArgs struct {
	// The ID of the tag rule.
	DynamicTagRuleId pulumi.StringInput `pulumi:"dynamicTagRuleId"`
	// The ID of the Dynamic Tag Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The relationship between conditional expressions. Valid values: `and`, `or`.
	MatchExpressFilterRelation pulumi.StringInput `pulumi:"matchExpressFilterRelation"`
	// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
	MatchExpresses GetDynamicTagGroupsGroupMatchExpressArrayInput `pulumi:"matchExpresses"`
	// The status of the resource. Valid values: `RUNNING`, `FINISH`.
	Status pulumi.StringInput `pulumi:"status"`
	// The tag key of the tag.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
}

func (GetDynamicTagGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupArgs) ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput {
	return i.ToGetDynamicTagGroupsGroupOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupArgs) ToGetDynamicTagGroupsGroupOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupOutput)
}

// GetDynamicTagGroupsGroupArrayInput is an input type that accepts GetDynamicTagGroupsGroupArray and GetDynamicTagGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupArrayInput` via:
//
//	GetDynamicTagGroupsGroupArray{ GetDynamicTagGroupsGroupArgs{...} }
type GetDynamicTagGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput
	ToGetDynamicTagGroupsGroupArrayOutputWithContext(context.Context) GetDynamicTagGroupsGroupArrayOutput
}

type GetDynamicTagGroupsGroupArray []GetDynamicTagGroupsGroupInput

func (GetDynamicTagGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupArray) ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput {
	return i.ToGetDynamicTagGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupArray) ToGetDynamicTagGroupsGroupArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupArrayOutput)
}

type GetDynamicTagGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupOutput) ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput {
	return o
}

func (o GetDynamicTagGroupsGroupOutput) ToGetDynamicTagGroupsGroupOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupOutput {
	return o
}

// The ID of the tag rule.
func (o GetDynamicTagGroupsGroupOutput) DynamicTagRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.DynamicTagRuleId }).(pulumi.StringOutput)
}

// The ID of the Dynamic Tag Group.
func (o GetDynamicTagGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The relationship between conditional expressions. Valid values: `and`, `or`.
func (o GetDynamicTagGroupsGroupOutput) MatchExpressFilterRelation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.MatchExpressFilterRelation }).(pulumi.StringOutput)
}

// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
func (o GetDynamicTagGroupsGroupOutput) MatchExpresses() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) []GetDynamicTagGroupsGroupMatchExpress { return v.MatchExpresses }).(GetDynamicTagGroupsGroupMatchExpressArrayOutput)
}

// The status of the resource. Valid values: `RUNNING`, `FINISH`.
func (o GetDynamicTagGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The tag key of the tag.
func (o GetDynamicTagGroupsGroupOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.TagKey }).(pulumi.StringOutput)
}

type GetDynamicTagGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupArrayOutput) ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupArrayOutput) ToGetDynamicTagGroupsGroupArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDynamicTagGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDynamicTagGroupsGroup {
		return vs[0].([]GetDynamicTagGroupsGroup)[vs[1].(int)]
	}).(GetDynamicTagGroupsGroupOutput)
}

type GetDynamicTagGroupsGroupMatchExpress struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue string `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction string `pulumi:"tagValueMatchFunction"`
}

// GetDynamicTagGroupsGroupMatchExpressInput is an input type that accepts GetDynamicTagGroupsGroupMatchExpressArgs and GetDynamicTagGroupsGroupMatchExpressOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupMatchExpressInput` via:
//
//	GetDynamicTagGroupsGroupMatchExpressArgs{...}
type GetDynamicTagGroupsGroupMatchExpressInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput
	ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(context.Context) GetDynamicTagGroupsGroupMatchExpressOutput
}

type GetDynamicTagGroupsGroupMatchExpressArgs struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction pulumi.StringInput `pulumi:"tagValueMatchFunction"`
}

func (GetDynamicTagGroupsGroupMatchExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupMatchExpressArgs) ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput {
	return i.ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupMatchExpressArgs) ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupMatchExpressOutput)
}

// GetDynamicTagGroupsGroupMatchExpressArrayInput is an input type that accepts GetDynamicTagGroupsGroupMatchExpressArray and GetDynamicTagGroupsGroupMatchExpressArrayOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupMatchExpressArrayInput` via:
//
//	GetDynamicTagGroupsGroupMatchExpressArray{ GetDynamicTagGroupsGroupMatchExpressArgs{...} }
type GetDynamicTagGroupsGroupMatchExpressArrayInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput
	ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput
}

type GetDynamicTagGroupsGroupMatchExpressArray []GetDynamicTagGroupsGroupMatchExpressInput

func (GetDynamicTagGroupsGroupMatchExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupMatchExpressArray) ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return i.ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupMatchExpressArray) ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupMatchExpressArrayOutput)
}

type GetDynamicTagGroupsGroupMatchExpressOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupMatchExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupMatchExpressOutput) ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressOutput) ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressOutput {
	return o
}

// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
func (o GetDynamicTagGroupsGroupMatchExpressOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroupMatchExpress) string { return v.TagValue }).(pulumi.StringOutput)
}

// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
func (o GetDynamicTagGroupsGroupMatchExpressOutput) TagValueMatchFunction() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroupMatchExpress) string { return v.TagValueMatchFunction }).(pulumi.StringOutput)
}

type GetDynamicTagGroupsGroupMatchExpressArrayOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupMatchExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) Index(i pulumi.IntInput) GetDynamicTagGroupsGroupMatchExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDynamicTagGroupsGroupMatchExpress {
		return vs[0].([]GetDynamicTagGroupsGroupMatchExpress)[vs[1].(int)]
	}).(GetDynamicTagGroupsGroupMatchExpressOutput)
}

type GetEventRulesRule struct {
	// The description of the rule.
	Description string `pulumi:"description"`
	// Event mode, used to describe the trigger conditions for this event.
	EventPatterns []GetEventRulesRuleEventPattern `pulumi:"eventPatterns"`
	// The name of the event rule.
	EventRuleName string `pulumi:"eventRuleName"`
	// The type of event.
	EventType string `pulumi:"eventType"`
	// The ID of the application Group.
	GroupId string `pulumi:"groupId"`
	// The ID of the Event Rule. Its value is same as Event Rule Name.
	Id string `pulumi:"id"`
	// The mute period during which new alerts are not sent even if the trigger conditions are met.
	SilenceTime int `pulumi:"silenceTime"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetEventRulesRuleInput is an input type that accepts GetEventRulesRuleArgs and GetEventRulesRuleOutput values.
// You can construct a concrete instance of `GetEventRulesRuleInput` via:
//
//	GetEventRulesRuleArgs{...}
type GetEventRulesRuleInput interface {
	pulumi.Input

	ToGetEventRulesRuleOutput() GetEventRulesRuleOutput
	ToGetEventRulesRuleOutputWithContext(context.Context) GetEventRulesRuleOutput
}

type GetEventRulesRuleArgs struct {
	// The description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Event mode, used to describe the trigger conditions for this event.
	EventPatterns GetEventRulesRuleEventPatternArrayInput `pulumi:"eventPatterns"`
	// The name of the event rule.
	EventRuleName pulumi.StringInput `pulumi:"eventRuleName"`
	// The type of event.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// The ID of the application Group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Event Rule. Its value is same as Event Rule Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The mute period during which new alerts are not sent even if the trigger conditions are met.
	SilenceTime pulumi.IntInput `pulumi:"silenceTime"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetEventRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRule)(nil)).Elem()
}

func (i GetEventRulesRuleArgs) ToGetEventRulesRuleOutput() GetEventRulesRuleOutput {
	return i.ToGetEventRulesRuleOutputWithContext(context.Background())
}

func (i GetEventRulesRuleArgs) ToGetEventRulesRuleOutputWithContext(ctx context.Context) GetEventRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleOutput)
}

// GetEventRulesRuleArrayInput is an input type that accepts GetEventRulesRuleArray and GetEventRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetEventRulesRuleArrayInput` via:
//
//	GetEventRulesRuleArray{ GetEventRulesRuleArgs{...} }
type GetEventRulesRuleArrayInput interface {
	pulumi.Input

	ToGetEventRulesRuleArrayOutput() GetEventRulesRuleArrayOutput
	ToGetEventRulesRuleArrayOutputWithContext(context.Context) GetEventRulesRuleArrayOutput
}

type GetEventRulesRuleArray []GetEventRulesRuleInput

func (GetEventRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRule)(nil)).Elem()
}

func (i GetEventRulesRuleArray) ToGetEventRulesRuleArrayOutput() GetEventRulesRuleArrayOutput {
	return i.ToGetEventRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetEventRulesRuleArray) ToGetEventRulesRuleArrayOutputWithContext(ctx context.Context) GetEventRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleArrayOutput)
}

type GetEventRulesRuleOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRule)(nil)).Elem()
}

func (o GetEventRulesRuleOutput) ToGetEventRulesRuleOutput() GetEventRulesRuleOutput {
	return o
}

func (o GetEventRulesRuleOutput) ToGetEventRulesRuleOutputWithContext(ctx context.Context) GetEventRulesRuleOutput {
	return o
}

// The description of the rule.
func (o GetEventRulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// Event mode, used to describe the trigger conditions for this event.
func (o GetEventRulesRuleOutput) EventPatterns() GetEventRulesRuleEventPatternArrayOutput {
	return o.ApplyT(func(v GetEventRulesRule) []GetEventRulesRuleEventPattern { return v.EventPatterns }).(GetEventRulesRuleEventPatternArrayOutput)
}

// The name of the event rule.
func (o GetEventRulesRuleOutput) EventRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.EventRuleName }).(pulumi.StringOutput)
}

// The type of event.
func (o GetEventRulesRuleOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.EventType }).(pulumi.StringOutput)
}

// The ID of the application Group.
func (o GetEventRulesRuleOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Event Rule. Its value is same as Event Rule Name.
func (o GetEventRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The mute period during which new alerts are not sent even if the trigger conditions are met.
func (o GetEventRulesRuleOutput) SilenceTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetEventRulesRule) int { return v.SilenceTime }).(pulumi.IntOutput)
}

// The status of the resource.
func (o GetEventRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

type GetEventRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRule)(nil)).Elem()
}

func (o GetEventRulesRuleArrayOutput) ToGetEventRulesRuleArrayOutput() GetEventRulesRuleArrayOutput {
	return o
}

func (o GetEventRulesRuleArrayOutput) ToGetEventRulesRuleArrayOutputWithContext(ctx context.Context) GetEventRulesRuleArrayOutput {
	return o
}

func (o GetEventRulesRuleArrayOutput) Index(i pulumi.IntInput) GetEventRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventRulesRule {
		return vs[0].([]GetEventRulesRule)[vs[1].(int)]
	}).(GetEventRulesRuleOutput)
}

type GetEventRulesRuleEventPattern struct {
	// The list of event types.
	EventTypeLists []string `pulumi:"eventTypeLists"`
	// The filter keyword.
	KeywordFilters []GetEventRulesRuleEventPatternKeywordFilter `pulumi:"keywordFilters"`
	// The list of event levels.
	LevelLists []string `pulumi:"levelLists"`
	// The list of event names.
	NameLists []string `pulumi:"nameLists"`
	// The type of the cloud service.
	Product string `pulumi:"product"`
	// The SQL condition that is used to filter events.
	SqlFilter string `pulumi:"sqlFilter"`
}

// GetEventRulesRuleEventPatternInput is an input type that accepts GetEventRulesRuleEventPatternArgs and GetEventRulesRuleEventPatternOutput values.
// You can construct a concrete instance of `GetEventRulesRuleEventPatternInput` via:
//
//	GetEventRulesRuleEventPatternArgs{...}
type GetEventRulesRuleEventPatternInput interface {
	pulumi.Input

	ToGetEventRulesRuleEventPatternOutput() GetEventRulesRuleEventPatternOutput
	ToGetEventRulesRuleEventPatternOutputWithContext(context.Context) GetEventRulesRuleEventPatternOutput
}

type GetEventRulesRuleEventPatternArgs struct {
	// The list of event types.
	EventTypeLists pulumi.StringArrayInput `pulumi:"eventTypeLists"`
	// The filter keyword.
	KeywordFilters GetEventRulesRuleEventPatternKeywordFilterArrayInput `pulumi:"keywordFilters"`
	// The list of event levels.
	LevelLists pulumi.StringArrayInput `pulumi:"levelLists"`
	// The list of event names.
	NameLists pulumi.StringArrayInput `pulumi:"nameLists"`
	// The type of the cloud service.
	Product pulumi.StringInput `pulumi:"product"`
	// The SQL condition that is used to filter events.
	SqlFilter pulumi.StringInput `pulumi:"sqlFilter"`
}

func (GetEventRulesRuleEventPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRuleEventPattern)(nil)).Elem()
}

func (i GetEventRulesRuleEventPatternArgs) ToGetEventRulesRuleEventPatternOutput() GetEventRulesRuleEventPatternOutput {
	return i.ToGetEventRulesRuleEventPatternOutputWithContext(context.Background())
}

func (i GetEventRulesRuleEventPatternArgs) ToGetEventRulesRuleEventPatternOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleEventPatternOutput)
}

// GetEventRulesRuleEventPatternArrayInput is an input type that accepts GetEventRulesRuleEventPatternArray and GetEventRulesRuleEventPatternArrayOutput values.
// You can construct a concrete instance of `GetEventRulesRuleEventPatternArrayInput` via:
//
//	GetEventRulesRuleEventPatternArray{ GetEventRulesRuleEventPatternArgs{...} }
type GetEventRulesRuleEventPatternArrayInput interface {
	pulumi.Input

	ToGetEventRulesRuleEventPatternArrayOutput() GetEventRulesRuleEventPatternArrayOutput
	ToGetEventRulesRuleEventPatternArrayOutputWithContext(context.Context) GetEventRulesRuleEventPatternArrayOutput
}

type GetEventRulesRuleEventPatternArray []GetEventRulesRuleEventPatternInput

func (GetEventRulesRuleEventPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRuleEventPattern)(nil)).Elem()
}

func (i GetEventRulesRuleEventPatternArray) ToGetEventRulesRuleEventPatternArrayOutput() GetEventRulesRuleEventPatternArrayOutput {
	return i.ToGetEventRulesRuleEventPatternArrayOutputWithContext(context.Background())
}

func (i GetEventRulesRuleEventPatternArray) ToGetEventRulesRuleEventPatternArrayOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleEventPatternArrayOutput)
}

type GetEventRulesRuleEventPatternOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleEventPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRuleEventPattern)(nil)).Elem()
}

func (o GetEventRulesRuleEventPatternOutput) ToGetEventRulesRuleEventPatternOutput() GetEventRulesRuleEventPatternOutput {
	return o
}

func (o GetEventRulesRuleEventPatternOutput) ToGetEventRulesRuleEventPatternOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternOutput {
	return o
}

// The list of event types.
func (o GetEventRulesRuleEventPatternOutput) EventTypeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) []string { return v.EventTypeLists }).(pulumi.StringArrayOutput)
}

// The filter keyword.
func (o GetEventRulesRuleEventPatternOutput) KeywordFilters() GetEventRulesRuleEventPatternKeywordFilterArrayOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) []GetEventRulesRuleEventPatternKeywordFilter {
		return v.KeywordFilters
	}).(GetEventRulesRuleEventPatternKeywordFilterArrayOutput)
}

// The list of event levels.
func (o GetEventRulesRuleEventPatternOutput) LevelLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) []string { return v.LevelLists }).(pulumi.StringArrayOutput)
}

// The list of event names.
func (o GetEventRulesRuleEventPatternOutput) NameLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) []string { return v.NameLists }).(pulumi.StringArrayOutput)
}

// The type of the cloud service.
func (o GetEventRulesRuleEventPatternOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) string { return v.Product }).(pulumi.StringOutput)
}

// The SQL condition that is used to filter events.
func (o GetEventRulesRuleEventPatternOutput) SqlFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPattern) string { return v.SqlFilter }).(pulumi.StringOutput)
}

type GetEventRulesRuleEventPatternArrayOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleEventPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRuleEventPattern)(nil)).Elem()
}

func (o GetEventRulesRuleEventPatternArrayOutput) ToGetEventRulesRuleEventPatternArrayOutput() GetEventRulesRuleEventPatternArrayOutput {
	return o
}

func (o GetEventRulesRuleEventPatternArrayOutput) ToGetEventRulesRuleEventPatternArrayOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternArrayOutput {
	return o
}

func (o GetEventRulesRuleEventPatternArrayOutput) Index(i pulumi.IntInput) GetEventRulesRuleEventPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventRulesRuleEventPattern {
		return vs[0].([]GetEventRulesRuleEventPattern)[vs[1].(int)]
	}).(GetEventRulesRuleEventPatternOutput)
}

type GetEventRulesRuleEventPatternKeywordFilter struct {
	// The keywords that are used to match events.
	KeyWords []string `pulumi:"keyWords"`
	// The relationship between multiple keywords in a condition.
	Relation string `pulumi:"relation"`
}

// GetEventRulesRuleEventPatternKeywordFilterInput is an input type that accepts GetEventRulesRuleEventPatternKeywordFilterArgs and GetEventRulesRuleEventPatternKeywordFilterOutput values.
// You can construct a concrete instance of `GetEventRulesRuleEventPatternKeywordFilterInput` via:
//
//	GetEventRulesRuleEventPatternKeywordFilterArgs{...}
type GetEventRulesRuleEventPatternKeywordFilterInput interface {
	pulumi.Input

	ToGetEventRulesRuleEventPatternKeywordFilterOutput() GetEventRulesRuleEventPatternKeywordFilterOutput
	ToGetEventRulesRuleEventPatternKeywordFilterOutputWithContext(context.Context) GetEventRulesRuleEventPatternKeywordFilterOutput
}

type GetEventRulesRuleEventPatternKeywordFilterArgs struct {
	// The keywords that are used to match events.
	KeyWords pulumi.StringArrayInput `pulumi:"keyWords"`
	// The relationship between multiple keywords in a condition.
	Relation pulumi.StringInput `pulumi:"relation"`
}

func (GetEventRulesRuleEventPatternKeywordFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRuleEventPatternKeywordFilter)(nil)).Elem()
}

func (i GetEventRulesRuleEventPatternKeywordFilterArgs) ToGetEventRulesRuleEventPatternKeywordFilterOutput() GetEventRulesRuleEventPatternKeywordFilterOutput {
	return i.ToGetEventRulesRuleEventPatternKeywordFilterOutputWithContext(context.Background())
}

func (i GetEventRulesRuleEventPatternKeywordFilterArgs) ToGetEventRulesRuleEventPatternKeywordFilterOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternKeywordFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleEventPatternKeywordFilterOutput)
}

// GetEventRulesRuleEventPatternKeywordFilterArrayInput is an input type that accepts GetEventRulesRuleEventPatternKeywordFilterArray and GetEventRulesRuleEventPatternKeywordFilterArrayOutput values.
// You can construct a concrete instance of `GetEventRulesRuleEventPatternKeywordFilterArrayInput` via:
//
//	GetEventRulesRuleEventPatternKeywordFilterArray{ GetEventRulesRuleEventPatternKeywordFilterArgs{...} }
type GetEventRulesRuleEventPatternKeywordFilterArrayInput interface {
	pulumi.Input

	ToGetEventRulesRuleEventPatternKeywordFilterArrayOutput() GetEventRulesRuleEventPatternKeywordFilterArrayOutput
	ToGetEventRulesRuleEventPatternKeywordFilterArrayOutputWithContext(context.Context) GetEventRulesRuleEventPatternKeywordFilterArrayOutput
}

type GetEventRulesRuleEventPatternKeywordFilterArray []GetEventRulesRuleEventPatternKeywordFilterInput

func (GetEventRulesRuleEventPatternKeywordFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRuleEventPatternKeywordFilter)(nil)).Elem()
}

func (i GetEventRulesRuleEventPatternKeywordFilterArray) ToGetEventRulesRuleEventPatternKeywordFilterArrayOutput() GetEventRulesRuleEventPatternKeywordFilterArrayOutput {
	return i.ToGetEventRulesRuleEventPatternKeywordFilterArrayOutputWithContext(context.Background())
}

func (i GetEventRulesRuleEventPatternKeywordFilterArray) ToGetEventRulesRuleEventPatternKeywordFilterArrayOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternKeywordFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventRulesRuleEventPatternKeywordFilterArrayOutput)
}

type GetEventRulesRuleEventPatternKeywordFilterOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleEventPatternKeywordFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesRuleEventPatternKeywordFilter)(nil)).Elem()
}

func (o GetEventRulesRuleEventPatternKeywordFilterOutput) ToGetEventRulesRuleEventPatternKeywordFilterOutput() GetEventRulesRuleEventPatternKeywordFilterOutput {
	return o
}

func (o GetEventRulesRuleEventPatternKeywordFilterOutput) ToGetEventRulesRuleEventPatternKeywordFilterOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternKeywordFilterOutput {
	return o
}

// The keywords that are used to match events.
func (o GetEventRulesRuleEventPatternKeywordFilterOutput) KeyWords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPatternKeywordFilter) []string { return v.KeyWords }).(pulumi.StringArrayOutput)
}

// The relationship between multiple keywords in a condition.
func (o GetEventRulesRuleEventPatternKeywordFilterOutput) Relation() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesRuleEventPatternKeywordFilter) string { return v.Relation }).(pulumi.StringOutput)
}

type GetEventRulesRuleEventPatternKeywordFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEventRulesRuleEventPatternKeywordFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventRulesRuleEventPatternKeywordFilter)(nil)).Elem()
}

func (o GetEventRulesRuleEventPatternKeywordFilterArrayOutput) ToGetEventRulesRuleEventPatternKeywordFilterArrayOutput() GetEventRulesRuleEventPatternKeywordFilterArrayOutput {
	return o
}

func (o GetEventRulesRuleEventPatternKeywordFilterArrayOutput) ToGetEventRulesRuleEventPatternKeywordFilterArrayOutputWithContext(ctx context.Context) GetEventRulesRuleEventPatternKeywordFilterArrayOutput {
	return o
}

func (o GetEventRulesRuleEventPatternKeywordFilterArrayOutput) Index(i pulumi.IntInput) GetEventRulesRuleEventPatternKeywordFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventRulesRuleEventPatternKeywordFilter {
		return vs[0].([]GetEventRulesRuleEventPatternKeywordFilter)[vs[1].(int)]
	}).(GetEventRulesRuleEventPatternKeywordFilterOutput)
}

type GetGroupMetricRulesRule struct {
	// Alarm contact group.
	ContactGroups string `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions string `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval string `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject string `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState bool `pulumi:"enableState"`
	// Alarm level.
	Escalations []GetGroupMetricRulesRuleEscalation `pulumi:"escalations"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName string `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id string `pulumi:"id"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval string `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period int `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources string `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId string `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime int `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType string `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status string `pulumi:"status"`
	// The callback URL.
	Webhook string `pulumi:"webhook"`
}

// GetGroupMetricRulesRuleInput is an input type that accepts GetGroupMetricRulesRuleArgs and GetGroupMetricRulesRuleOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleInput` via:
//
//	GetGroupMetricRulesRuleArgs{...}
type GetGroupMetricRulesRuleInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput
	ToGetGroupMetricRulesRuleOutputWithContext(context.Context) GetGroupMetricRulesRuleOutput
}

type GetGroupMetricRulesRuleArgs struct {
	// Alarm contact group.
	ContactGroups pulumi.StringInput `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions pulumi.StringInput `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval pulumi.StringInput `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject pulumi.StringInput `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState pulumi.BoolInput `pulumi:"enableState"`
	// Alarm level.
	Escalations GetGroupMetricRulesRuleEscalationArrayInput `pulumi:"escalations"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName pulumi.StringInput `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval pulumi.StringInput `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period pulumi.IntInput `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources pulumi.StringInput `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime pulumi.IntInput `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status pulumi.StringInput `pulumi:"status"`
	// The callback URL.
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (GetGroupMetricRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return i.ToGetGroupMetricRulesRuleOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleOutput)
}

// GetGroupMetricRulesRuleArrayInput is an input type that accepts GetGroupMetricRulesRuleArray and GetGroupMetricRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleArrayInput` via:
//
//	GetGroupMetricRulesRuleArray{ GetGroupMetricRulesRuleArgs{...} }
type GetGroupMetricRulesRuleArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput
	ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleArrayOutput
}

type GetGroupMetricRulesRuleArray []GetGroupMetricRulesRuleInput

func (GetGroupMetricRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return i.ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleArrayOutput)
}

type GetGroupMetricRulesRuleOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return o
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return o
}

// Alarm contact group.
func (o GetGroupMetricRulesRuleOutput) ContactGroups() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.ContactGroups }).(pulumi.StringOutput)
}

// The dimensions that specify the resources to be associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Dimensions() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Dimensions }).(pulumi.StringOutput)
}

// The time period during which the alert rule is effective.
func (o GetGroupMetricRulesRuleOutput) EffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EffectiveInterval }).(pulumi.StringOutput)
}

// The subject of the alert notification email.
func (o GetGroupMetricRulesRuleOutput) EmailSubject() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EmailSubject }).(pulumi.StringOutput)
}

// Indicates whether the alert rule is enabled.
func (o GetGroupMetricRulesRuleOutput) EnableState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) bool { return v.EnableState }).(pulumi.BoolOutput)
}

// Alarm level.
func (o GetGroupMetricRulesRuleOutput) Escalations() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) []GetGroupMetricRulesRuleEscalation { return v.Escalations }).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

// The ID of the application group.
func (o GetGroupMetricRulesRuleOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o GetGroupMetricRulesRuleOutput) GroupMetricRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupMetricRuleName }).(pulumi.StringOutput)
}

// The ID of the Group Metric Rule.
func (o GetGroupMetricRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the metric.
func (o GetGroupMetricRulesRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o GetGroupMetricRulesRuleOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Namespace }).(pulumi.StringOutput)
}

// The time period during which the alert rule is ineffective.
func (o GetGroupMetricRulesRuleOutput) NoEffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.NoEffectiveInterval }).(pulumi.StringOutput)
}

// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
func (o GetGroupMetricRulesRuleOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.Period }).(pulumi.IntOutput)
}

// The resources that are associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Resources() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Resources }).(pulumi.StringOutput)
}

// The ID of the alert rule.
func (o GetGroupMetricRulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
func (o GetGroupMetricRulesRuleOutput) SilenceTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.SilenceTime }).(pulumi.IntOutput)
}

// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
func (o GetGroupMetricRulesRuleOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.SourceType }).(pulumi.StringOutput)
}

// The status of Group Metric Rule..
func (o GetGroupMetricRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The callback URL.
func (o GetGroupMetricRulesRuleOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Webhook }).(pulumi.StringOutput)
}

type GetGroupMetricRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRule {
		return vs[0].([]GetGroupMetricRulesRule)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleOutput)
}

type GetGroupMetricRulesRuleEscalation struct {
	// The critical level.
	Criticals []GetGroupMetricRulesRuleEscalationCritical `pulumi:"criticals"`
	// The info level.
	Infos []GetGroupMetricRulesRuleEscalationInfo `pulumi:"infos"`
	// The warn level.
	Warns []GetGroupMetricRulesRuleEscalationWarn `pulumi:"warns"`
}

// GetGroupMetricRulesRuleEscalationInput is an input type that accepts GetGroupMetricRulesRuleEscalationArgs and GetGroupMetricRulesRuleEscalationOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInput` via:
//
//	GetGroupMetricRulesRuleEscalationArgs{...}
type GetGroupMetricRulesRuleEscalationInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput
	ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationOutput
}

type GetGroupMetricRulesRuleEscalationArgs struct {
	// The critical level.
	Criticals GetGroupMetricRulesRuleEscalationCriticalArrayInput `pulumi:"criticals"`
	// The info level.
	Infos GetGroupMetricRulesRuleEscalationInfoArrayInput `pulumi:"infos"`
	// The warn level.
	Warns GetGroupMetricRulesRuleEscalationWarnArrayInput `pulumi:"warns"`
}

func (GetGroupMetricRulesRuleEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return i.ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationOutput)
}

// GetGroupMetricRulesRuleEscalationArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationArray and GetGroupMetricRulesRuleEscalationArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationArrayInput` via:
//
//	GetGroupMetricRulesRuleEscalationArray{ GetGroupMetricRulesRuleEscalationArgs{...} }
type GetGroupMetricRulesRuleEscalationArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput
	ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationArrayOutput
}

type GetGroupMetricRulesRuleEscalationArray []GetGroupMetricRulesRuleEscalationInput

func (GetGroupMetricRulesRuleEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

type GetGroupMetricRulesRuleEscalationOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return o
}

// The critical level.
func (o GetGroupMetricRulesRuleEscalationOutput) Criticals() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationCritical {
		return v.Criticals
	}).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

// The info level.
func (o GetGroupMetricRulesRuleEscalationOutput) Infos() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationInfo { return v.Infos }).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

// The warn level.
func (o GetGroupMetricRulesRuleEscalationOutput) Warns() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationWarn { return v.Warns }).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalation {
		return vs[0].([]GetGroupMetricRulesRuleEscalation)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationOutput)
}

type GetGroupMetricRulesRuleEscalationCritical struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationCriticalInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArgs and GetGroupMetricRulesRuleEscalationCriticalOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalInput` via:
//
//	GetGroupMetricRulesRuleEscalationCriticalArgs{...}
type GetGroupMetricRulesRuleEscalationCriticalInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput
	ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

// GetGroupMetricRulesRuleEscalationCriticalArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArray and GetGroupMetricRulesRuleEscalationCriticalArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalArrayInput` via:
//
//	GetGroupMetricRulesRuleEscalationCriticalArray{ GetGroupMetricRulesRuleEscalationCriticalArgs{...} }
type GetGroupMetricRulesRuleEscalationCriticalArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput
	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArray []GetGroupMetricRulesRuleEscalationCriticalInput

func (GetGroupMetricRulesRuleEscalationCriticalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationCritical {
		return vs[0].([]GetGroupMetricRulesRuleEscalationCritical)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

type GetGroupMetricRulesRuleEscalationInfo struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationInfoInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArgs and GetGroupMetricRulesRuleEscalationInfoOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoInput` via:
//
//	GetGroupMetricRulesRuleEscalationInfoArgs{...}
type GetGroupMetricRulesRuleEscalationInfoInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput
	ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoOutput
}

type GetGroupMetricRulesRuleEscalationInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

// GetGroupMetricRulesRuleEscalationInfoArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArray and GetGroupMetricRulesRuleEscalationInfoArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoArrayInput` via:
//
//	GetGroupMetricRulesRuleEscalationInfoArray{ GetGroupMetricRulesRuleEscalationInfoArgs{...} }
type GetGroupMetricRulesRuleEscalationInfoArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput
	ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput
}

type GetGroupMetricRulesRuleEscalationInfoArray []GetGroupMetricRulesRuleEscalationInfoInput

func (GetGroupMetricRulesRuleEscalationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

type GetGroupMetricRulesRuleEscalationInfoOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationInfo {
		return vs[0].([]GetGroupMetricRulesRuleEscalationInfo)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

type GetGroupMetricRulesRuleEscalationWarn struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationWarnInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArgs and GetGroupMetricRulesRuleEscalationWarnOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnInput` via:
//
//	GetGroupMetricRulesRuleEscalationWarnArgs{...}
type GetGroupMetricRulesRuleEscalationWarnInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput
	ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnOutput
}

type GetGroupMetricRulesRuleEscalationWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

// GetGroupMetricRulesRuleEscalationWarnArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArray and GetGroupMetricRulesRuleEscalationWarnArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnArrayInput` via:
//
//	GetGroupMetricRulesRuleEscalationWarnArray{ GetGroupMetricRulesRuleEscalationWarnArgs{...} }
type GetGroupMetricRulesRuleEscalationWarnArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput
	ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput
}

type GetGroupMetricRulesRuleEscalationWarnArray []GetGroupMetricRulesRuleEscalationWarnInput

func (GetGroupMetricRulesRuleEscalationWarnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationWarnOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationWarnArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationWarn {
		return vs[0].([]GetGroupMetricRulesRuleEscalationWarn)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

type GetHybridMonitorDatasData struct {
	// The label of the time dimension.
	Labels []GetHybridMonitorDatasDataLabel `pulumi:"labels"`
	// The name of the monitoring indicator.
	MetricName string `pulumi:"metricName"`
	// The metric values that are collected at different timestamps.
	Values []GetHybridMonitorDatasDataValue `pulumi:"values"`
}

// GetHybridMonitorDatasDataInput is an input type that accepts GetHybridMonitorDatasDataArgs and GetHybridMonitorDatasDataOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataInput` via:
//
//	GetHybridMonitorDatasDataArgs{...}
type GetHybridMonitorDatasDataInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataOutput() GetHybridMonitorDatasDataOutput
	ToGetHybridMonitorDatasDataOutputWithContext(context.Context) GetHybridMonitorDatasDataOutput
}

type GetHybridMonitorDatasDataArgs struct {
	// The label of the time dimension.
	Labels GetHybridMonitorDatasDataLabelArrayInput `pulumi:"labels"`
	// The name of the monitoring indicator.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The metric values that are collected at different timestamps.
	Values GetHybridMonitorDatasDataValueArrayInput `pulumi:"values"`
}

func (GetHybridMonitorDatasDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasData)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataArgs) ToGetHybridMonitorDatasDataOutput() GetHybridMonitorDatasDataOutput {
	return i.ToGetHybridMonitorDatasDataOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataArgs) ToGetHybridMonitorDatasDataOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataOutput)
}

// GetHybridMonitorDatasDataArrayInput is an input type that accepts GetHybridMonitorDatasDataArray and GetHybridMonitorDatasDataArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataArrayInput` via:
//
//	GetHybridMonitorDatasDataArray{ GetHybridMonitorDatasDataArgs{...} }
type GetHybridMonitorDatasDataArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataArrayOutput() GetHybridMonitorDatasDataArrayOutput
	ToGetHybridMonitorDatasDataArrayOutputWithContext(context.Context) GetHybridMonitorDatasDataArrayOutput
}

type GetHybridMonitorDatasDataArray []GetHybridMonitorDatasDataInput

func (GetHybridMonitorDatasDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasData)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataArray) ToGetHybridMonitorDatasDataArrayOutput() GetHybridMonitorDatasDataArrayOutput {
	return i.ToGetHybridMonitorDatasDataArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataArray) ToGetHybridMonitorDatasDataArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataArrayOutput)
}

type GetHybridMonitorDatasDataOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasData)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataOutput) ToGetHybridMonitorDatasDataOutput() GetHybridMonitorDatasDataOutput {
	return o
}

func (o GetHybridMonitorDatasDataOutput) ToGetHybridMonitorDatasDataOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataOutput {
	return o
}

// The label of the time dimension.
func (o GetHybridMonitorDatasDataOutput) Labels() GetHybridMonitorDatasDataLabelArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasData) []GetHybridMonitorDatasDataLabel { return v.Labels }).(GetHybridMonitorDatasDataLabelArrayOutput)
}

// The name of the monitoring indicator.
func (o GetHybridMonitorDatasDataOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasData) string { return v.MetricName }).(pulumi.StringOutput)
}

// The metric values that are collected at different timestamps.
func (o GetHybridMonitorDatasDataOutput) Values() GetHybridMonitorDatasDataValueArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasData) []GetHybridMonitorDatasDataValue { return v.Values }).(GetHybridMonitorDatasDataValueArrayOutput)
}

type GetHybridMonitorDatasDataArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasData)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataArrayOutput) ToGetHybridMonitorDatasDataArrayOutput() GetHybridMonitorDatasDataArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataArrayOutput) ToGetHybridMonitorDatasDataArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorDatasDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorDatasData {
		return vs[0].([]GetHybridMonitorDatasData)[vs[1].(int)]
	}).(GetHybridMonitorDatasDataOutput)
}

type GetHybridMonitorDatasDataLabel struct {
	// Label key.
	Key string `pulumi:"key"`
	// Label value.
	Value string `pulumi:"value"`
}

// GetHybridMonitorDatasDataLabelInput is an input type that accepts GetHybridMonitorDatasDataLabelArgs and GetHybridMonitorDatasDataLabelOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataLabelInput` via:
//
//	GetHybridMonitorDatasDataLabelArgs{...}
type GetHybridMonitorDatasDataLabelInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataLabelOutput() GetHybridMonitorDatasDataLabelOutput
	ToGetHybridMonitorDatasDataLabelOutputWithContext(context.Context) GetHybridMonitorDatasDataLabelOutput
}

type GetHybridMonitorDatasDataLabelArgs struct {
	// Label key.
	Key pulumi.StringInput `pulumi:"key"`
	// Label value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHybridMonitorDatasDataLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasDataLabel)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataLabelArgs) ToGetHybridMonitorDatasDataLabelOutput() GetHybridMonitorDatasDataLabelOutput {
	return i.ToGetHybridMonitorDatasDataLabelOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataLabelArgs) ToGetHybridMonitorDatasDataLabelOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataLabelOutput)
}

// GetHybridMonitorDatasDataLabelArrayInput is an input type that accepts GetHybridMonitorDatasDataLabelArray and GetHybridMonitorDatasDataLabelArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataLabelArrayInput` via:
//
//	GetHybridMonitorDatasDataLabelArray{ GetHybridMonitorDatasDataLabelArgs{...} }
type GetHybridMonitorDatasDataLabelArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataLabelArrayOutput() GetHybridMonitorDatasDataLabelArrayOutput
	ToGetHybridMonitorDatasDataLabelArrayOutputWithContext(context.Context) GetHybridMonitorDatasDataLabelArrayOutput
}

type GetHybridMonitorDatasDataLabelArray []GetHybridMonitorDatasDataLabelInput

func (GetHybridMonitorDatasDataLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasDataLabel)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataLabelArray) ToGetHybridMonitorDatasDataLabelArrayOutput() GetHybridMonitorDatasDataLabelArrayOutput {
	return i.ToGetHybridMonitorDatasDataLabelArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataLabelArray) ToGetHybridMonitorDatasDataLabelArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataLabelArrayOutput)
}

type GetHybridMonitorDatasDataLabelOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasDataLabel)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataLabelOutput) ToGetHybridMonitorDatasDataLabelOutput() GetHybridMonitorDatasDataLabelOutput {
	return o
}

func (o GetHybridMonitorDatasDataLabelOutput) ToGetHybridMonitorDatasDataLabelOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataLabelOutput {
	return o
}

// Label key.
func (o GetHybridMonitorDatasDataLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasDataLabel) string { return v.Key }).(pulumi.StringOutput)
}

// Label value.
func (o GetHybridMonitorDatasDataLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasDataLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetHybridMonitorDatasDataLabelArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasDataLabel)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataLabelArrayOutput) ToGetHybridMonitorDatasDataLabelArrayOutput() GetHybridMonitorDatasDataLabelArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataLabelArrayOutput) ToGetHybridMonitorDatasDataLabelArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataLabelArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataLabelArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorDatasDataLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorDatasDataLabel {
		return vs[0].([]GetHybridMonitorDatasDataLabel)[vs[1].(int)]
	}).(GetHybridMonitorDatasDataLabelOutput)
}

type GetHybridMonitorDatasDataValue struct {
	// The timestamp that indicates the time when the metric value is collected. Unit: seconds.
	Ts string `pulumi:"ts"`
	// Label value.
	Value string `pulumi:"value"`
}

// GetHybridMonitorDatasDataValueInput is an input type that accepts GetHybridMonitorDatasDataValueArgs and GetHybridMonitorDatasDataValueOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataValueInput` via:
//
//	GetHybridMonitorDatasDataValueArgs{...}
type GetHybridMonitorDatasDataValueInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataValueOutput() GetHybridMonitorDatasDataValueOutput
	ToGetHybridMonitorDatasDataValueOutputWithContext(context.Context) GetHybridMonitorDatasDataValueOutput
}

type GetHybridMonitorDatasDataValueArgs struct {
	// The timestamp that indicates the time when the metric value is collected. Unit: seconds.
	Ts pulumi.StringInput `pulumi:"ts"`
	// Label value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHybridMonitorDatasDataValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasDataValue)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataValueArgs) ToGetHybridMonitorDatasDataValueOutput() GetHybridMonitorDatasDataValueOutput {
	return i.ToGetHybridMonitorDatasDataValueOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataValueArgs) ToGetHybridMonitorDatasDataValueOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataValueOutput)
}

// GetHybridMonitorDatasDataValueArrayInput is an input type that accepts GetHybridMonitorDatasDataValueArray and GetHybridMonitorDatasDataValueArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorDatasDataValueArrayInput` via:
//
//	GetHybridMonitorDatasDataValueArray{ GetHybridMonitorDatasDataValueArgs{...} }
type GetHybridMonitorDatasDataValueArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorDatasDataValueArrayOutput() GetHybridMonitorDatasDataValueArrayOutput
	ToGetHybridMonitorDatasDataValueArrayOutputWithContext(context.Context) GetHybridMonitorDatasDataValueArrayOutput
}

type GetHybridMonitorDatasDataValueArray []GetHybridMonitorDatasDataValueInput

func (GetHybridMonitorDatasDataValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasDataValue)(nil)).Elem()
}

func (i GetHybridMonitorDatasDataValueArray) ToGetHybridMonitorDatasDataValueArrayOutput() GetHybridMonitorDatasDataValueArrayOutput {
	return i.ToGetHybridMonitorDatasDataValueArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorDatasDataValueArray) ToGetHybridMonitorDatasDataValueArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorDatasDataValueArrayOutput)
}

type GetHybridMonitorDatasDataValueOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorDatasDataValue)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataValueOutput) ToGetHybridMonitorDatasDataValueOutput() GetHybridMonitorDatasDataValueOutput {
	return o
}

func (o GetHybridMonitorDatasDataValueOutput) ToGetHybridMonitorDatasDataValueOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataValueOutput {
	return o
}

// The timestamp that indicates the time when the metric value is collected. Unit: seconds.
func (o GetHybridMonitorDatasDataValueOutput) Ts() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasDataValue) string { return v.Ts }).(pulumi.StringOutput)
}

// Label value.
func (o GetHybridMonitorDatasDataValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorDatasDataValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetHybridMonitorDatasDataValueArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorDatasDataValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorDatasDataValue)(nil)).Elem()
}

func (o GetHybridMonitorDatasDataValueArrayOutput) ToGetHybridMonitorDatasDataValueArrayOutput() GetHybridMonitorDatasDataValueArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataValueArrayOutput) ToGetHybridMonitorDatasDataValueArrayOutputWithContext(ctx context.Context) GetHybridMonitorDatasDataValueArrayOutput {
	return o
}

func (o GetHybridMonitorDatasDataValueArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorDatasDataValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorDatasDataValue {
		return vs[0].([]GetHybridMonitorDatasDataValue)[vs[1].(int)]
	}).(GetHybridMonitorDatasDataValueOutput)
}

type GetHybridMonitorFcTasksTask struct {
	// Create the timestamp of the monitoring task. Unit: milliseconds.
	CreateTime string `pulumi:"createTime"`
	// The ID of the monitoring task.
	HybridMonitorFcTaskId string `pulumi:"hybridMonitorFcTaskId"`
	// The ID of the Hybrid Monitor Fc Task. The value formats as `<hybrid_monitor_fc_task_id>:<namespace>`.
	Id string `pulumi:"id"`
	// The index warehouse where the host belongs.
	Namespace string `pulumi:"namespace"`
	// The ID of the member account.
	TargetUserId string `pulumi:"targetUserId"`
	// The configuration file of the Alibaba Cloud service that you want to monitor by using Hybrid Cloud Monitoring.
	YarmConfig string `pulumi:"yarmConfig"`
}

// GetHybridMonitorFcTasksTaskInput is an input type that accepts GetHybridMonitorFcTasksTaskArgs and GetHybridMonitorFcTasksTaskOutput values.
// You can construct a concrete instance of `GetHybridMonitorFcTasksTaskInput` via:
//
//	GetHybridMonitorFcTasksTaskArgs{...}
type GetHybridMonitorFcTasksTaskInput interface {
	pulumi.Input

	ToGetHybridMonitorFcTasksTaskOutput() GetHybridMonitorFcTasksTaskOutput
	ToGetHybridMonitorFcTasksTaskOutputWithContext(context.Context) GetHybridMonitorFcTasksTaskOutput
}

type GetHybridMonitorFcTasksTaskArgs struct {
	// Create the timestamp of the monitoring task. Unit: milliseconds.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the monitoring task.
	HybridMonitorFcTaskId pulumi.StringInput `pulumi:"hybridMonitorFcTaskId"`
	// The ID of the Hybrid Monitor Fc Task. The value formats as `<hybrid_monitor_fc_task_id>:<namespace>`.
	Id pulumi.StringInput `pulumi:"id"`
	// The index warehouse where the host belongs.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The ID of the member account.
	TargetUserId pulumi.StringInput `pulumi:"targetUserId"`
	// The configuration file of the Alibaba Cloud service that you want to monitor by using Hybrid Cloud Monitoring.
	YarmConfig pulumi.StringInput `pulumi:"yarmConfig"`
}

func (GetHybridMonitorFcTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorFcTasksTask)(nil)).Elem()
}

func (i GetHybridMonitorFcTasksTaskArgs) ToGetHybridMonitorFcTasksTaskOutput() GetHybridMonitorFcTasksTaskOutput {
	return i.ToGetHybridMonitorFcTasksTaskOutputWithContext(context.Background())
}

func (i GetHybridMonitorFcTasksTaskArgs) ToGetHybridMonitorFcTasksTaskOutputWithContext(ctx context.Context) GetHybridMonitorFcTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorFcTasksTaskOutput)
}

// GetHybridMonitorFcTasksTaskArrayInput is an input type that accepts GetHybridMonitorFcTasksTaskArray and GetHybridMonitorFcTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorFcTasksTaskArrayInput` via:
//
//	GetHybridMonitorFcTasksTaskArray{ GetHybridMonitorFcTasksTaskArgs{...} }
type GetHybridMonitorFcTasksTaskArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorFcTasksTaskArrayOutput() GetHybridMonitorFcTasksTaskArrayOutput
	ToGetHybridMonitorFcTasksTaskArrayOutputWithContext(context.Context) GetHybridMonitorFcTasksTaskArrayOutput
}

type GetHybridMonitorFcTasksTaskArray []GetHybridMonitorFcTasksTaskInput

func (GetHybridMonitorFcTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorFcTasksTask)(nil)).Elem()
}

func (i GetHybridMonitorFcTasksTaskArray) ToGetHybridMonitorFcTasksTaskArrayOutput() GetHybridMonitorFcTasksTaskArrayOutput {
	return i.ToGetHybridMonitorFcTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorFcTasksTaskArray) ToGetHybridMonitorFcTasksTaskArrayOutputWithContext(ctx context.Context) GetHybridMonitorFcTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorFcTasksTaskArrayOutput)
}

type GetHybridMonitorFcTasksTaskOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorFcTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorFcTasksTask)(nil)).Elem()
}

func (o GetHybridMonitorFcTasksTaskOutput) ToGetHybridMonitorFcTasksTaskOutput() GetHybridMonitorFcTasksTaskOutput {
	return o
}

func (o GetHybridMonitorFcTasksTaskOutput) ToGetHybridMonitorFcTasksTaskOutputWithContext(ctx context.Context) GetHybridMonitorFcTasksTaskOutput {
	return o
}

// Create the timestamp of the monitoring task. Unit: milliseconds.
func (o GetHybridMonitorFcTasksTaskOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the monitoring task.
func (o GetHybridMonitorFcTasksTaskOutput) HybridMonitorFcTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.HybridMonitorFcTaskId }).(pulumi.StringOutput)
}

// The ID of the Hybrid Monitor Fc Task. The value formats as `<hybrid_monitor_fc_task_id>:<namespace>`.
func (o GetHybridMonitorFcTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// The index warehouse where the host belongs.
func (o GetHybridMonitorFcTasksTaskOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.Namespace }).(pulumi.StringOutput)
}

// The ID of the member account.
func (o GetHybridMonitorFcTasksTaskOutput) TargetUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.TargetUserId }).(pulumi.StringOutput)
}

// The configuration file of the Alibaba Cloud service that you want to monitor by using Hybrid Cloud Monitoring.
func (o GetHybridMonitorFcTasksTaskOutput) YarmConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorFcTasksTask) string { return v.YarmConfig }).(pulumi.StringOutput)
}

type GetHybridMonitorFcTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorFcTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorFcTasksTask)(nil)).Elem()
}

func (o GetHybridMonitorFcTasksTaskArrayOutput) ToGetHybridMonitorFcTasksTaskArrayOutput() GetHybridMonitorFcTasksTaskArrayOutput {
	return o
}

func (o GetHybridMonitorFcTasksTaskArrayOutput) ToGetHybridMonitorFcTasksTaskArrayOutputWithContext(ctx context.Context) GetHybridMonitorFcTasksTaskArrayOutput {
	return o
}

func (o GetHybridMonitorFcTasksTaskArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorFcTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorFcTasksTask {
		return vs[0].([]GetHybridMonitorFcTasksTask)[vs[1].(int)]
	}).(GetHybridMonitorFcTasksTaskOutput)
}

type GetHybridMonitorSlsTasksTask struct {
	// The tags of the metric import task.
	AttachLabels []GetHybridMonitorSlsTasksTaskAttachLabel `pulumi:"attachLabels"`
	// The interval between the cloud monitoring plug-in collecting host monitoring data.
	CollectInterval int `pulumi:"collectInterval"`
	// The address where the cloudmonitor Plug-In collects the monitoring data of the host.
	CollectTargetEndpoint string `pulumi:"collectTargetEndpoint"`
	// When the cloud monitor Agent collects, the relative path of the collection.
	CollectTargetPath string `pulumi:"collectTargetPath"`
	// The type of the monitoring data. Valid values: Spring, Tomcat, Nginx, Tengine, JVM, Redis, MySQL, and AWS.
	CollectTargetType string `pulumi:"collectTargetType"`
	// The timeout period for the cloudmonitor plug-in to collect host monitoring data.
	CollectTimout int `pulumi:"collectTimout"`
	// Create the timestamp of the monitoring task. Unit: milliseconds.
	CreateTime string `pulumi:"createTime"`
	// Monitoring task description.
	Description string `pulumi:"description"`
	// Additional information for the instance.
	ExtraInfo string `pulumi:"extraInfo"`
	// The ID of the application Group.
	GroupId string `pulumi:"groupId"`
	// The ID of the monitoring task.
	HybridMonitorSlsTaskId string `pulumi:"hybridMonitorSlsTaskId"`
	// The ID of the Hybrid Monitor Sls Task.
	Id string `pulumi:"id"`
	// A list of instances where monitoring data is collected in batches.
	Instances []string `pulumi:"instances"`
	// The path where on-premises log data is stored. On-premises log data is stored in the specified path of the host where CloudMonitor is deployed.
	LogFilePath string `pulumi:"logFilePath"`
	// Local Log Monitoring and calculation method.
	LogProcess string `pulumi:"logProcess"`
	// The sample on-premises log.
	LogSample string `pulumi:"logSample"`
	// The local log data is divided according to different matching patterns.
	LogSplit string `pulumi:"logSplit"`
	// The filter condition of the instance of the monitoring task.
	MatchExpressRelation string `pulumi:"matchExpressRelation"`
	// The matching condition of the instance in the application Group.
	MatchExpresses []GetHybridMonitorSlsTasksTaskMatchExpress `pulumi:"matchExpresses"`
	// The namespace to which the host belongs.
	Namespace string `pulumi:"namespace"`
	// The network type of the host.
	NetworkType string `pulumi:"networkType"`
	// The configurations of the logs that are imported from Log Service.
	SlsProcess string `pulumi:"slsProcess"`
	// The configurations of the logs that are imported from Log Service.
	SlsProcessConfigs []GetHybridMonitorSlsTasksTaskSlsProcessConfig `pulumi:"slsProcessConfigs"`
	// The name of the metric import task.
	TaskName string `pulumi:"taskName"`
	// Monitoring Task type.
	TaskType string `pulumi:"taskType"`
	// The region where the host resides.
	UploadRegion string `pulumi:"uploadRegion"`
	YarmConfig   string `pulumi:"yarmConfig"`
}

// GetHybridMonitorSlsTasksTaskInput is an input type that accepts GetHybridMonitorSlsTasksTaskArgs and GetHybridMonitorSlsTasksTaskOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskInput` via:
//
//	GetHybridMonitorSlsTasksTaskArgs{...}
type GetHybridMonitorSlsTasksTaskInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskOutput() GetHybridMonitorSlsTasksTaskOutput
	ToGetHybridMonitorSlsTasksTaskOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskOutput
}

type GetHybridMonitorSlsTasksTaskArgs struct {
	// The tags of the metric import task.
	AttachLabels GetHybridMonitorSlsTasksTaskAttachLabelArrayInput `pulumi:"attachLabels"`
	// The interval between the cloud monitoring plug-in collecting host monitoring data.
	CollectInterval pulumi.IntInput `pulumi:"collectInterval"`
	// The address where the cloudmonitor Plug-In collects the monitoring data of the host.
	CollectTargetEndpoint pulumi.StringInput `pulumi:"collectTargetEndpoint"`
	// When the cloud monitor Agent collects, the relative path of the collection.
	CollectTargetPath pulumi.StringInput `pulumi:"collectTargetPath"`
	// The type of the monitoring data. Valid values: Spring, Tomcat, Nginx, Tengine, JVM, Redis, MySQL, and AWS.
	CollectTargetType pulumi.StringInput `pulumi:"collectTargetType"`
	// The timeout period for the cloudmonitor plug-in to collect host monitoring data.
	CollectTimout pulumi.IntInput `pulumi:"collectTimout"`
	// Create the timestamp of the monitoring task. Unit: milliseconds.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Monitoring task description.
	Description pulumi.StringInput `pulumi:"description"`
	// Additional information for the instance.
	ExtraInfo pulumi.StringInput `pulumi:"extraInfo"`
	// The ID of the application Group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the monitoring task.
	HybridMonitorSlsTaskId pulumi.StringInput `pulumi:"hybridMonitorSlsTaskId"`
	// The ID of the Hybrid Monitor Sls Task.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of instances where monitoring data is collected in batches.
	Instances pulumi.StringArrayInput `pulumi:"instances"`
	// The path where on-premises log data is stored. On-premises log data is stored in the specified path of the host where CloudMonitor is deployed.
	LogFilePath pulumi.StringInput `pulumi:"logFilePath"`
	// Local Log Monitoring and calculation method.
	LogProcess pulumi.StringInput `pulumi:"logProcess"`
	// The sample on-premises log.
	LogSample pulumi.StringInput `pulumi:"logSample"`
	// The local log data is divided according to different matching patterns.
	LogSplit pulumi.StringInput `pulumi:"logSplit"`
	// The filter condition of the instance of the monitoring task.
	MatchExpressRelation pulumi.StringInput `pulumi:"matchExpressRelation"`
	// The matching condition of the instance in the application Group.
	MatchExpresses GetHybridMonitorSlsTasksTaskMatchExpressArrayInput `pulumi:"matchExpresses"`
	// The namespace to which the host belongs.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The network type of the host.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The configurations of the logs that are imported from Log Service.
	SlsProcess pulumi.StringInput `pulumi:"slsProcess"`
	// The configurations of the logs that are imported from Log Service.
	SlsProcessConfigs GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayInput `pulumi:"slsProcessConfigs"`
	// The name of the metric import task.
	TaskName pulumi.StringInput `pulumi:"taskName"`
	// Monitoring Task type.
	TaskType pulumi.StringInput `pulumi:"taskType"`
	// The region where the host resides.
	UploadRegion pulumi.StringInput `pulumi:"uploadRegion"`
	YarmConfig   pulumi.StringInput `pulumi:"yarmConfig"`
}

func (GetHybridMonitorSlsTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTask)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskArgs) ToGetHybridMonitorSlsTasksTaskOutput() GetHybridMonitorSlsTasksTaskOutput {
	return i.ToGetHybridMonitorSlsTasksTaskOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskArgs) ToGetHybridMonitorSlsTasksTaskOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskOutput)
}

// GetHybridMonitorSlsTasksTaskArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskArray and GetHybridMonitorSlsTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskArray{ GetHybridMonitorSlsTasksTaskArgs{...} }
type GetHybridMonitorSlsTasksTaskArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskArrayOutput() GetHybridMonitorSlsTasksTaskArrayOutput
	ToGetHybridMonitorSlsTasksTaskArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskArrayOutput
}

type GetHybridMonitorSlsTasksTaskArray []GetHybridMonitorSlsTasksTaskInput

func (GetHybridMonitorSlsTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTask)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskArray) ToGetHybridMonitorSlsTasksTaskArrayOutput() GetHybridMonitorSlsTasksTaskArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskArray) ToGetHybridMonitorSlsTasksTaskArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskArrayOutput)
}

type GetHybridMonitorSlsTasksTaskOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTask)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskOutput) ToGetHybridMonitorSlsTasksTaskOutput() GetHybridMonitorSlsTasksTaskOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskOutput) ToGetHybridMonitorSlsTasksTaskOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskOutput {
	return o
}

// The tags of the metric import task.
func (o GetHybridMonitorSlsTasksTaskOutput) AttachLabels() GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) []GetHybridMonitorSlsTasksTaskAttachLabel { return v.AttachLabels }).(GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput)
}

// The interval between the cloud monitoring plug-in collecting host monitoring data.
func (o GetHybridMonitorSlsTasksTaskOutput) CollectInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) int { return v.CollectInterval }).(pulumi.IntOutput)
}

// The address where the cloudmonitor Plug-In collects the monitoring data of the host.
func (o GetHybridMonitorSlsTasksTaskOutput) CollectTargetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.CollectTargetEndpoint }).(pulumi.StringOutput)
}

// When the cloud monitor Agent collects, the relative path of the collection.
func (o GetHybridMonitorSlsTasksTaskOutput) CollectTargetPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.CollectTargetPath }).(pulumi.StringOutput)
}

// The type of the monitoring data. Valid values: Spring, Tomcat, Nginx, Tengine, JVM, Redis, MySQL, and AWS.
func (o GetHybridMonitorSlsTasksTaskOutput) CollectTargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.CollectTargetType }).(pulumi.StringOutput)
}

// The timeout period for the cloudmonitor plug-in to collect host monitoring data.
func (o GetHybridMonitorSlsTasksTaskOutput) CollectTimout() pulumi.IntOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) int { return v.CollectTimout }).(pulumi.IntOutput)
}

// Create the timestamp of the monitoring task. Unit: milliseconds.
func (o GetHybridMonitorSlsTasksTaskOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Monitoring task description.
func (o GetHybridMonitorSlsTasksTaskOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.Description }).(pulumi.StringOutput)
}

// Additional information for the instance.
func (o GetHybridMonitorSlsTasksTaskOutput) ExtraInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.ExtraInfo }).(pulumi.StringOutput)
}

// The ID of the application Group.
func (o GetHybridMonitorSlsTasksTaskOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the monitoring task.
func (o GetHybridMonitorSlsTasksTaskOutput) HybridMonitorSlsTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.HybridMonitorSlsTaskId }).(pulumi.StringOutput)
}

// The ID of the Hybrid Monitor Sls Task.
func (o GetHybridMonitorSlsTasksTaskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.Id }).(pulumi.StringOutput)
}

// A list of instances where monitoring data is collected in batches.
func (o GetHybridMonitorSlsTasksTaskOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) []string { return v.Instances }).(pulumi.StringArrayOutput)
}

// The path where on-premises log data is stored. On-premises log data is stored in the specified path of the host where CloudMonitor is deployed.
func (o GetHybridMonitorSlsTasksTaskOutput) LogFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.LogFilePath }).(pulumi.StringOutput)
}

// Local Log Monitoring and calculation method.
func (o GetHybridMonitorSlsTasksTaskOutput) LogProcess() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.LogProcess }).(pulumi.StringOutput)
}

// The sample on-premises log.
func (o GetHybridMonitorSlsTasksTaskOutput) LogSample() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.LogSample }).(pulumi.StringOutput)
}

// The local log data is divided according to different matching patterns.
func (o GetHybridMonitorSlsTasksTaskOutput) LogSplit() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.LogSplit }).(pulumi.StringOutput)
}

// The filter condition of the instance of the monitoring task.
func (o GetHybridMonitorSlsTasksTaskOutput) MatchExpressRelation() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.MatchExpressRelation }).(pulumi.StringOutput)
}

// The matching condition of the instance in the application Group.
func (o GetHybridMonitorSlsTasksTaskOutput) MatchExpresses() GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) []GetHybridMonitorSlsTasksTaskMatchExpress {
		return v.MatchExpresses
	}).(GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput)
}

// The namespace to which the host belongs.
func (o GetHybridMonitorSlsTasksTaskOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.Namespace }).(pulumi.StringOutput)
}

// The network type of the host.
func (o GetHybridMonitorSlsTasksTaskOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The configurations of the logs that are imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskOutput) SlsProcess() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.SlsProcess }).(pulumi.StringOutput)
}

// The configurations of the logs that are imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskOutput) SlsProcessConfigs() GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) []GetHybridMonitorSlsTasksTaskSlsProcessConfig {
		return v.SlsProcessConfigs
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput)
}

// The name of the metric import task.
func (o GetHybridMonitorSlsTasksTaskOutput) TaskName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.TaskName }).(pulumi.StringOutput)
}

// Monitoring Task type.
func (o GetHybridMonitorSlsTasksTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.TaskType }).(pulumi.StringOutput)
}

// The region where the host resides.
func (o GetHybridMonitorSlsTasksTaskOutput) UploadRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.UploadRegion }).(pulumi.StringOutput)
}

func (o GetHybridMonitorSlsTasksTaskOutput) YarmConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTask) string { return v.YarmConfig }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTask)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskArrayOutput) ToGetHybridMonitorSlsTasksTaskArrayOutput() GetHybridMonitorSlsTasksTaskArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskArrayOutput) ToGetHybridMonitorSlsTasksTaskArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTask {
		return vs[0].([]GetHybridMonitorSlsTasksTask)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskOutput)
}

type GetHybridMonitorSlsTasksTaskAttachLabel struct {
	// The name of the instance.
	Name string `pulumi:"name"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value string `pulumi:"value"`
}

// GetHybridMonitorSlsTasksTaskAttachLabelInput is an input type that accepts GetHybridMonitorSlsTasksTaskAttachLabelArgs and GetHybridMonitorSlsTasksTaskAttachLabelOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskAttachLabelInput` via:
//
//	GetHybridMonitorSlsTasksTaskAttachLabelArgs{...}
type GetHybridMonitorSlsTasksTaskAttachLabelInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskAttachLabelOutput() GetHybridMonitorSlsTasksTaskAttachLabelOutput
	ToGetHybridMonitorSlsTasksTaskAttachLabelOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskAttachLabelOutput
}

type GetHybridMonitorSlsTasksTaskAttachLabelArgs struct {
	// The name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHybridMonitorSlsTasksTaskAttachLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskAttachLabel)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskAttachLabelArgs) ToGetHybridMonitorSlsTasksTaskAttachLabelOutput() GetHybridMonitorSlsTasksTaskAttachLabelOutput {
	return i.ToGetHybridMonitorSlsTasksTaskAttachLabelOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskAttachLabelArgs) ToGetHybridMonitorSlsTasksTaskAttachLabelOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskAttachLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskAttachLabelOutput)
}

// GetHybridMonitorSlsTasksTaskAttachLabelArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskAttachLabelArray and GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskAttachLabelArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskAttachLabelArray{ GetHybridMonitorSlsTasksTaskAttachLabelArgs{...} }
type GetHybridMonitorSlsTasksTaskAttachLabelArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutput() GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput
	ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput
}

type GetHybridMonitorSlsTasksTaskAttachLabelArray []GetHybridMonitorSlsTasksTaskAttachLabelInput

func (GetHybridMonitorSlsTasksTaskAttachLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskAttachLabel)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskAttachLabelArray) ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutput() GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskAttachLabelArray) ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput)
}

type GetHybridMonitorSlsTasksTaskAttachLabelOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskAttachLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskAttachLabel)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskAttachLabelOutput) ToGetHybridMonitorSlsTasksTaskAttachLabelOutput() GetHybridMonitorSlsTasksTaskAttachLabelOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskAttachLabelOutput) ToGetHybridMonitorSlsTasksTaskAttachLabelOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskAttachLabelOutput {
	return o
}

// The name of the instance.
func (o GetHybridMonitorSlsTasksTaskAttachLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskAttachLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskAttachLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskAttachLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskAttachLabel)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput) ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutput() GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput) ToGetHybridMonitorSlsTasksTaskAttachLabelArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskAttachLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskAttachLabel {
		return vs[0].([]GetHybridMonitorSlsTasksTaskAttachLabel)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskAttachLabelOutput)
}

type GetHybridMonitorSlsTasksTaskMatchExpress struct {
	// The function that is used to aggregate log data within a statistical period.
	Function string `pulumi:"function"`
	// The name of the instance.
	Name string `pulumi:"name"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value string `pulumi:"value"`
}

// GetHybridMonitorSlsTasksTaskMatchExpressInput is an input type that accepts GetHybridMonitorSlsTasksTaskMatchExpressArgs and GetHybridMonitorSlsTasksTaskMatchExpressOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskMatchExpressInput` via:
//
//	GetHybridMonitorSlsTasksTaskMatchExpressArgs{...}
type GetHybridMonitorSlsTasksTaskMatchExpressInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskMatchExpressOutput() GetHybridMonitorSlsTasksTaskMatchExpressOutput
	ToGetHybridMonitorSlsTasksTaskMatchExpressOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskMatchExpressOutput
}

type GetHybridMonitorSlsTasksTaskMatchExpressArgs struct {
	// The function that is used to aggregate log data within a statistical period.
	Function pulumi.StringInput `pulumi:"function"`
	// The name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHybridMonitorSlsTasksTaskMatchExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskMatchExpress)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskMatchExpressArgs) ToGetHybridMonitorSlsTasksTaskMatchExpressOutput() GetHybridMonitorSlsTasksTaskMatchExpressOutput {
	return i.ToGetHybridMonitorSlsTasksTaskMatchExpressOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskMatchExpressArgs) ToGetHybridMonitorSlsTasksTaskMatchExpressOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskMatchExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskMatchExpressOutput)
}

// GetHybridMonitorSlsTasksTaskMatchExpressArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskMatchExpressArray and GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskMatchExpressArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskMatchExpressArray{ GetHybridMonitorSlsTasksTaskMatchExpressArgs{...} }
type GetHybridMonitorSlsTasksTaskMatchExpressArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutput() GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput
	ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput
}

type GetHybridMonitorSlsTasksTaskMatchExpressArray []GetHybridMonitorSlsTasksTaskMatchExpressInput

func (GetHybridMonitorSlsTasksTaskMatchExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskMatchExpress)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskMatchExpressArray) ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutput() GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskMatchExpressArray) ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput)
}

type GetHybridMonitorSlsTasksTaskMatchExpressOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskMatchExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskMatchExpress)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskMatchExpressOutput) ToGetHybridMonitorSlsTasksTaskMatchExpressOutput() GetHybridMonitorSlsTasksTaskMatchExpressOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskMatchExpressOutput) ToGetHybridMonitorSlsTasksTaskMatchExpressOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskMatchExpressOutput {
	return o
}

// The function that is used to aggregate log data within a statistical period.
func (o GetHybridMonitorSlsTasksTaskMatchExpressOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskMatchExpress) string { return v.Function }).(pulumi.StringOutput)
}

// The name of the instance.
func (o GetHybridMonitorSlsTasksTaskMatchExpressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskMatchExpress) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskMatchExpressOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskMatchExpress) string { return v.Value }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskMatchExpress)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput) ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutput() GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput) ToGetHybridMonitorSlsTasksTaskMatchExpressArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskMatchExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskMatchExpress {
		return vs[0].([]GetHybridMonitorSlsTasksTaskMatchExpress)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskMatchExpressOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfig struct {
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Expresses []GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress `pulumi:"expresses"`
	// The conditions that are used to filter logs imported from Log Service.
	Filters []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter `pulumi:"filters"`
	// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL.
	GroupBies []GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy `pulumi:"groupBies"`
	// The method that is used to aggregate logs imported from Log Service.
	Statistics []GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic `pulumi:"statistics"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs struct {
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Expresses GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayInput `pulumi:"expresses"`
	// The conditions that are used to filter logs imported from Log Service.
	Filters GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayInput `pulumi:"filters"`
	// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL.
	GroupBies GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayInput `pulumi:"groupBies"`
	// The method that is used to aggregate logs imported from Log Service.
	Statistics GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayInput `pulumi:"statistics"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfig)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfig)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfig)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput {
	return o
}

// The extended field that specifies the result of basic operations that are performed on aggregation results.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) Expresses() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfig) []GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress {
		return v.Expresses
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput)
}

// The conditions that are used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) Filters() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfig) []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter {
		return v.Filters
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput)
}

// The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) GroupBies() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfig) []GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy {
		return v.GroupBies
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput)
}

// The method that is used to aggregate logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput) Statistics() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfig) []GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic {
		return v.Statistics
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfig)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfig {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfig)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias string `pulumi:"alias"`
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Express string `pulumi:"express"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The extended field that specifies the result of basic operations that are performed on aggregation results.
	Express pulumi.StringInput `pulumi:"express"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput {
	return o
}

// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress) string { return v.Alias }).(pulumi.StringOutput)
}

// The extended field that specifies the result of basic operations that are performed on aggregation results.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput) Express() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress) string { return v.Express }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter struct {
	// The conditions that are used to filter logs imported from Log Service.
	Filters []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter `pulumi:"filters"`
	// The relationship between multiple filter conditions.
	Relation string `pulumi:"relation"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs struct {
	// The conditions that are used to filter logs imported from Log Service.
	Filters GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayInput `pulumi:"filters"`
	// The relationship between multiple filter conditions.
	Relation pulumi.StringInput `pulumi:"relation"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput {
	return o
}

// The conditions that are used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput) Filters() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter) []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter {
		return v.Filters
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput)
}

// The relationship between multiple filter conditions.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput) Relation() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter) string { return v.Relation }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter struct {
	// The method that is used to filter logs imported from Log Service.
	Operator string `pulumi:"operator"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName string `pulumi:"slsKeyName"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value string `pulumi:"value"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs struct {
	// The method that is used to filter logs imported from Log Service.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName pulumi.StringInput `pulumi:"slsKeyName"`
	// The value of the key that is used to filter logs imported from Log Service.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput {
	return o
}

// The method that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter) string { return v.Operator }).(pulumi.StringOutput)
}

// The name of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) SlsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter) string { return v.SlsKeyName }).(pulumi.StringOutput)
}

// The value of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilter)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias string `pulumi:"alias"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName string `pulumi:"slsKeyName"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName pulumi.StringInput `pulumi:"slsKeyName"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput {
	return o
}

// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy) string { return v.Alias }).(pulumi.StringOutput)
}

// The name of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput) SlsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy) string { return v.SlsKeyName }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias string `pulumi:"alias"`
	// The function that is used to aggregate log data within a statistical period.
	Function string `pulumi:"function"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	ParameterOne string `pulumi:"parameterOne"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	ParameterTwo string `pulumi:"parameterTwo"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName string `pulumi:"slsKeyName"`
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs and GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs{...}
type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs struct {
	// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The function that is used to aggregate log data within a statistical period.
	Function pulumi.StringInput `pulumi:"function"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	ParameterOne pulumi.StringInput `pulumi:"parameterOne"`
	// The value of the function that is used to aggregate logs imported from Log Service.
	ParameterTwo pulumi.StringInput `pulumi:"parameterTwo"`
	// The name of the key that is used to filter logs imported from Log Service.
	SlsKeyName pulumi.StringInput `pulumi:"slsKeyName"`
}

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput)
}

// GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayInput is an input type that accepts GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray and GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput values.
// You can construct a concrete instance of `GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayInput` via:
//
//	GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray{ GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs{...} }
type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayInput interface {
	pulumi.Input

	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput
	ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutputWithContext(context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray []GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticInput

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput {
	return i.ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutputWithContext(context.Background())
}

func (i GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput {
	return o
}

// The alias of the extended field that specifies the result of basic operations that are performed on aggregation results.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic) string { return v.Alias }).(pulumi.StringOutput)
}

// The function that is used to aggregate log data within a statistical period.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic) string { return v.Function }).(pulumi.StringOutput)
}

// The value of the function that is used to aggregate logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) ParameterOne() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic) string { return v.ParameterOne }).(pulumi.StringOutput)
}

// The value of the function that is used to aggregate logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) ParameterTwo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic) string { return v.ParameterTwo }).(pulumi.StringOutput)
}

// The name of the key that is used to filter logs imported from Log Service.
func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput) SlsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic) string { return v.SlsKeyName }).(pulumi.StringOutput)
}

type GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput struct{ *pulumi.OutputState }

func (GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic)(nil)).Elem()
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput() GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput) ToGetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutputWithContext(ctx context.Context) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput {
	return o
}

func (o GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput) Index(i pulumi.IntInput) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic {
		return vs[0].([]GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic)[vs[1].(int)]
	}).(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput)
}

type GetMetricRuleBlackListsList struct {
	// Cloud service classification. For example, Redis includes kvstore_standard, kvstore_sharding, and kvstore_splitrw.
	Category string `pulumi:"category"`
	// The timestamp for creating an alert blacklist policy.Unit: milliseconds.
	CreateTime string `pulumi:"createTime"`
	// The effective time range of the alert blacklist policy.
	EffectiveTime string `pulumi:"effectiveTime"`
	// The start timestamp of the alert blacklist policy.Unit: milliseconds.
	EnableEndTime string `pulumi:"enableEndTime"`
	// The end timestamp of the alert blacklist policy.Unit: milliseconds.
	EnableStartTime string `pulumi:"enableStartTime"`
	Id              string `pulumi:"id"`
	// The list of instances of cloud services specified in the alert blacklist policy.
	Instances []string `pulumi:"instances"`
	// The status of the alert blacklist policy. Value:-true: enabled.-false: disabled.
	IsEnable bool `pulumi:"isEnable"`
	// The first ID of the resource
	MetricRuleBlackListId string `pulumi:"metricRuleBlackListId"`
	// The name of the alert blacklist policy.
	MetricRuleBlackListName string `pulumi:"metricRuleBlackListName"`
	// Monitoring metrics in the instance.
	Metrics []GetMetricRuleBlackListsListMetric `pulumi:"metrics"`
	// The data namespace of the cloud service.
	Namespace string `pulumi:"namespace"`
	// The effective range of the alert blacklist policy. Value:-USER: The alert blacklist policy only takes effect in the current Alibaba cloud account.-GROUP: The alert blacklist policy takes effect in the specified application GROUP.
	ScopeType string `pulumi:"scopeType"`
	// Application Group ID list. The format is JSON Array.> This parameter is displayed only when 'ScopeType' is 'GROUP.
	ScopeValues []string `pulumi:"scopeValues"`
}

// GetMetricRuleBlackListsListInput is an input type that accepts GetMetricRuleBlackListsListArgs and GetMetricRuleBlackListsListOutput values.
// You can construct a concrete instance of `GetMetricRuleBlackListsListInput` via:
//
//	GetMetricRuleBlackListsListArgs{...}
type GetMetricRuleBlackListsListInput interface {
	pulumi.Input

	ToGetMetricRuleBlackListsListOutput() GetMetricRuleBlackListsListOutput
	ToGetMetricRuleBlackListsListOutputWithContext(context.Context) GetMetricRuleBlackListsListOutput
}

type GetMetricRuleBlackListsListArgs struct {
	// Cloud service classification. For example, Redis includes kvstore_standard, kvstore_sharding, and kvstore_splitrw.
	Category pulumi.StringInput `pulumi:"category"`
	// The timestamp for creating an alert blacklist policy.Unit: milliseconds.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The effective time range of the alert blacklist policy.
	EffectiveTime pulumi.StringInput `pulumi:"effectiveTime"`
	// The start timestamp of the alert blacklist policy.Unit: milliseconds.
	EnableEndTime pulumi.StringInput `pulumi:"enableEndTime"`
	// The end timestamp of the alert blacklist policy.Unit: milliseconds.
	EnableStartTime pulumi.StringInput `pulumi:"enableStartTime"`
	Id              pulumi.StringInput `pulumi:"id"`
	// The list of instances of cloud services specified in the alert blacklist policy.
	Instances pulumi.StringArrayInput `pulumi:"instances"`
	// The status of the alert blacklist policy. Value:-true: enabled.-false: disabled.
	IsEnable pulumi.BoolInput `pulumi:"isEnable"`
	// The first ID of the resource
	MetricRuleBlackListId pulumi.StringInput `pulumi:"metricRuleBlackListId"`
	// The name of the alert blacklist policy.
	MetricRuleBlackListName pulumi.StringInput `pulumi:"metricRuleBlackListName"`
	// Monitoring metrics in the instance.
	Metrics GetMetricRuleBlackListsListMetricArrayInput `pulumi:"metrics"`
	// The data namespace of the cloud service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The effective range of the alert blacklist policy. Value:-USER: The alert blacklist policy only takes effect in the current Alibaba cloud account.-GROUP: The alert blacklist policy takes effect in the specified application GROUP.
	ScopeType pulumi.StringInput `pulumi:"scopeType"`
	// Application Group ID list. The format is JSON Array.> This parameter is displayed only when 'ScopeType' is 'GROUP.
	ScopeValues pulumi.StringArrayInput `pulumi:"scopeValues"`
}

func (GetMetricRuleBlackListsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleBlackListsList)(nil)).Elem()
}

func (i GetMetricRuleBlackListsListArgs) ToGetMetricRuleBlackListsListOutput() GetMetricRuleBlackListsListOutput {
	return i.ToGetMetricRuleBlackListsListOutputWithContext(context.Background())
}

func (i GetMetricRuleBlackListsListArgs) ToGetMetricRuleBlackListsListOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleBlackListsListOutput)
}

// GetMetricRuleBlackListsListArrayInput is an input type that accepts GetMetricRuleBlackListsListArray and GetMetricRuleBlackListsListArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleBlackListsListArrayInput` via:
//
//	GetMetricRuleBlackListsListArray{ GetMetricRuleBlackListsListArgs{...} }
type GetMetricRuleBlackListsListArrayInput interface {
	pulumi.Input

	ToGetMetricRuleBlackListsListArrayOutput() GetMetricRuleBlackListsListArrayOutput
	ToGetMetricRuleBlackListsListArrayOutputWithContext(context.Context) GetMetricRuleBlackListsListArrayOutput
}

type GetMetricRuleBlackListsListArray []GetMetricRuleBlackListsListInput

func (GetMetricRuleBlackListsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleBlackListsList)(nil)).Elem()
}

func (i GetMetricRuleBlackListsListArray) ToGetMetricRuleBlackListsListArrayOutput() GetMetricRuleBlackListsListArrayOutput {
	return i.ToGetMetricRuleBlackListsListArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleBlackListsListArray) ToGetMetricRuleBlackListsListArrayOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleBlackListsListArrayOutput)
}

type GetMetricRuleBlackListsListOutput struct{ *pulumi.OutputState }

func (GetMetricRuleBlackListsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleBlackListsList)(nil)).Elem()
}

func (o GetMetricRuleBlackListsListOutput) ToGetMetricRuleBlackListsListOutput() GetMetricRuleBlackListsListOutput {
	return o
}

func (o GetMetricRuleBlackListsListOutput) ToGetMetricRuleBlackListsListOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListOutput {
	return o
}

// Cloud service classification. For example, Redis includes kvstore_standard, kvstore_sharding, and kvstore_splitrw.
func (o GetMetricRuleBlackListsListOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.Category }).(pulumi.StringOutput)
}

// The timestamp for creating an alert blacklist policy.Unit: milliseconds.
func (o GetMetricRuleBlackListsListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The effective time range of the alert blacklist policy.
func (o GetMetricRuleBlackListsListOutput) EffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.EffectiveTime }).(pulumi.StringOutput)
}

// The start timestamp of the alert blacklist policy.Unit: milliseconds.
func (o GetMetricRuleBlackListsListOutput) EnableEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.EnableEndTime }).(pulumi.StringOutput)
}

// The end timestamp of the alert blacklist policy.Unit: milliseconds.
func (o GetMetricRuleBlackListsListOutput) EnableStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.EnableStartTime }).(pulumi.StringOutput)
}

func (o GetMetricRuleBlackListsListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.Id }).(pulumi.StringOutput)
}

// The list of instances of cloud services specified in the alert blacklist policy.
func (o GetMetricRuleBlackListsListOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) []string { return v.Instances }).(pulumi.StringArrayOutput)
}

// The status of the alert blacklist policy. Value:-true: enabled.-false: disabled.
func (o GetMetricRuleBlackListsListOutput) IsEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) bool { return v.IsEnable }).(pulumi.BoolOutput)
}

// The first ID of the resource
func (o GetMetricRuleBlackListsListOutput) MetricRuleBlackListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.MetricRuleBlackListId }).(pulumi.StringOutput)
}

// The name of the alert blacklist policy.
func (o GetMetricRuleBlackListsListOutput) MetricRuleBlackListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.MetricRuleBlackListName }).(pulumi.StringOutput)
}

// Monitoring metrics in the instance.
func (o GetMetricRuleBlackListsListOutput) Metrics() GetMetricRuleBlackListsListMetricArrayOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) []GetMetricRuleBlackListsListMetric { return v.Metrics }).(GetMetricRuleBlackListsListMetricArrayOutput)
}

// The data namespace of the cloud service.
func (o GetMetricRuleBlackListsListOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.Namespace }).(pulumi.StringOutput)
}

// The effective range of the alert blacklist policy. Value:-USER: The alert blacklist policy only takes effect in the current Alibaba cloud account.-GROUP: The alert blacklist policy takes effect in the specified application GROUP.
func (o GetMetricRuleBlackListsListOutput) ScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) string { return v.ScopeType }).(pulumi.StringOutput)
}

// Application Group ID list. The format is JSON Array.> This parameter is displayed only when 'ScopeType' is 'GROUP.
func (o GetMetricRuleBlackListsListOutput) ScopeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsList) []string { return v.ScopeValues }).(pulumi.StringArrayOutput)
}

type GetMetricRuleBlackListsListArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleBlackListsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleBlackListsList)(nil)).Elem()
}

func (o GetMetricRuleBlackListsListArrayOutput) ToGetMetricRuleBlackListsListArrayOutput() GetMetricRuleBlackListsListArrayOutput {
	return o
}

func (o GetMetricRuleBlackListsListArrayOutput) ToGetMetricRuleBlackListsListArrayOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListArrayOutput {
	return o
}

func (o GetMetricRuleBlackListsListArrayOutput) Index(i pulumi.IntInput) GetMetricRuleBlackListsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleBlackListsList {
		return vs[0].([]GetMetricRuleBlackListsList)[vs[1].(int)]
	}).(GetMetricRuleBlackListsListOutput)
}

type GetMetricRuleBlackListsListMetric struct {
	// The name of the monitoring indicator.
	MetricName string `pulumi:"metricName"`
	// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
	Resource string `pulumi:"resource"`
}

// GetMetricRuleBlackListsListMetricInput is an input type that accepts GetMetricRuleBlackListsListMetricArgs and GetMetricRuleBlackListsListMetricOutput values.
// You can construct a concrete instance of `GetMetricRuleBlackListsListMetricInput` via:
//
//	GetMetricRuleBlackListsListMetricArgs{...}
type GetMetricRuleBlackListsListMetricInput interface {
	pulumi.Input

	ToGetMetricRuleBlackListsListMetricOutput() GetMetricRuleBlackListsListMetricOutput
	ToGetMetricRuleBlackListsListMetricOutputWithContext(context.Context) GetMetricRuleBlackListsListMetricOutput
}

type GetMetricRuleBlackListsListMetricArgs struct {
	// The name of the monitoring indicator.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (GetMetricRuleBlackListsListMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleBlackListsListMetric)(nil)).Elem()
}

func (i GetMetricRuleBlackListsListMetricArgs) ToGetMetricRuleBlackListsListMetricOutput() GetMetricRuleBlackListsListMetricOutput {
	return i.ToGetMetricRuleBlackListsListMetricOutputWithContext(context.Background())
}

func (i GetMetricRuleBlackListsListMetricArgs) ToGetMetricRuleBlackListsListMetricOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleBlackListsListMetricOutput)
}

// GetMetricRuleBlackListsListMetricArrayInput is an input type that accepts GetMetricRuleBlackListsListMetricArray and GetMetricRuleBlackListsListMetricArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleBlackListsListMetricArrayInput` via:
//
//	GetMetricRuleBlackListsListMetricArray{ GetMetricRuleBlackListsListMetricArgs{...} }
type GetMetricRuleBlackListsListMetricArrayInput interface {
	pulumi.Input

	ToGetMetricRuleBlackListsListMetricArrayOutput() GetMetricRuleBlackListsListMetricArrayOutput
	ToGetMetricRuleBlackListsListMetricArrayOutputWithContext(context.Context) GetMetricRuleBlackListsListMetricArrayOutput
}

type GetMetricRuleBlackListsListMetricArray []GetMetricRuleBlackListsListMetricInput

func (GetMetricRuleBlackListsListMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleBlackListsListMetric)(nil)).Elem()
}

func (i GetMetricRuleBlackListsListMetricArray) ToGetMetricRuleBlackListsListMetricArrayOutput() GetMetricRuleBlackListsListMetricArrayOutput {
	return i.ToGetMetricRuleBlackListsListMetricArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleBlackListsListMetricArray) ToGetMetricRuleBlackListsListMetricArrayOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleBlackListsListMetricArrayOutput)
}

type GetMetricRuleBlackListsListMetricOutput struct{ *pulumi.OutputState }

func (GetMetricRuleBlackListsListMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleBlackListsListMetric)(nil)).Elem()
}

func (o GetMetricRuleBlackListsListMetricOutput) ToGetMetricRuleBlackListsListMetricOutput() GetMetricRuleBlackListsListMetricOutput {
	return o
}

func (o GetMetricRuleBlackListsListMetricOutput) ToGetMetricRuleBlackListsListMetricOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListMetricOutput {
	return o
}

// The name of the monitoring indicator.
func (o GetMetricRuleBlackListsListMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsListMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

// The extended dimension information of the instance. For example, '{"device":"C:"}' indicates that the blacklist policy is applied to all C disks under the ECS instance.
func (o GetMetricRuleBlackListsListMetricOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleBlackListsListMetric) string { return v.Resource }).(pulumi.StringOutput)
}

type GetMetricRuleBlackListsListMetricArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleBlackListsListMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleBlackListsListMetric)(nil)).Elem()
}

func (o GetMetricRuleBlackListsListMetricArrayOutput) ToGetMetricRuleBlackListsListMetricArrayOutput() GetMetricRuleBlackListsListMetricArrayOutput {
	return o
}

func (o GetMetricRuleBlackListsListMetricArrayOutput) ToGetMetricRuleBlackListsListMetricArrayOutputWithContext(ctx context.Context) GetMetricRuleBlackListsListMetricArrayOutput {
	return o
}

func (o GetMetricRuleBlackListsListMetricArrayOutput) Index(i pulumi.IntInput) GetMetricRuleBlackListsListMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleBlackListsListMetric {
		return vs[0].([]GetMetricRuleBlackListsListMetric)[vs[1].(int)]
	}).(GetMetricRuleBlackListsListMetricOutput)
}

type GetMetricRuleTemplatesTemplate struct {
	// The details of alert rules that are generated based on the alert template.
	AlertTemplates []GetMetricRuleTemplatesTemplateAlertTemplate `pulumi:"alertTemplates"`
	// The description of the alert template.
	Description string `pulumi:"description"`
	// GroupId.
	GroupId string `pulumi:"groupId"`
	// The ID of the Metric Rule Template.
	Id string `pulumi:"id"`
	// The name of the alert template.
	MetricRuleTemplateName string `pulumi:"metricRuleTemplateName"`
	// The version of the alert template.
	//
	// > **NOTE:** The version changes with the number of times that the alert template is modified.
	RestVersion string `pulumi:"restVersion"`
	// The ID of the alert template.
	TemplateId string `pulumi:"templateId"`
}

// GetMetricRuleTemplatesTemplateInput is an input type that accepts GetMetricRuleTemplatesTemplateArgs and GetMetricRuleTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateInput` via:
//
//	GetMetricRuleTemplatesTemplateArgs{...}
type GetMetricRuleTemplatesTemplateInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput
	ToGetMetricRuleTemplatesTemplateOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateOutput
}

type GetMetricRuleTemplatesTemplateArgs struct {
	// The details of alert rules that are generated based on the alert template.
	AlertTemplates GetMetricRuleTemplatesTemplateAlertTemplateArrayInput `pulumi:"alertTemplates"`
	// The description of the alert template.
	Description pulumi.StringInput `pulumi:"description"`
	// GroupId.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Metric Rule Template.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the alert template.
	MetricRuleTemplateName pulumi.StringInput `pulumi:"metricRuleTemplateName"`
	// The version of the alert template.
	//
	// > **NOTE:** The version changes with the number of times that the alert template is modified.
	RestVersion pulumi.StringInput `pulumi:"restVersion"`
	// The ID of the alert template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
}

func (GetMetricRuleTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateArgs) ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput {
	return i.ToGetMetricRuleTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateArgs) ToGetMetricRuleTemplatesTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateOutput)
}

// GetMetricRuleTemplatesTemplateArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateArray and GetMetricRuleTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateArray{ GetMetricRuleTemplatesTemplateArgs{...} }
type GetMetricRuleTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput
	ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateArrayOutput
}

type GetMetricRuleTemplatesTemplateArray []GetMetricRuleTemplatesTemplateInput

func (GetMetricRuleTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateArray) ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateArray) ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateArrayOutput)
}

type GetMetricRuleTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateOutput) ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateOutput) ToGetMetricRuleTemplatesTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateOutput {
	return o
}

// The details of alert rules that are generated based on the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) AlertTemplates() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) []GetMetricRuleTemplatesTemplateAlertTemplate {
		return v.AlertTemplates
	}).(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput)
}

// The description of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// GroupId.
func (o GetMetricRuleTemplatesTemplateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Metric Rule Template.
func (o GetMetricRuleTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) MetricRuleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.MetricRuleTemplateName }).(pulumi.StringOutput)
}

// The version of the alert template.
//
// > **NOTE:** The version changes with the number of times that the alert template is modified.
func (o GetMetricRuleTemplatesTemplateOutput) RestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.RestVersion }).(pulumi.StringOutput)
}

// The ID of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplate {
		return vs[0].([]GetMetricRuleTemplatesTemplate)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplate struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category string `pulumi:"category"`
	// The information about the trigger condition based on the alert level.
	Escalations []GetMetricRuleTemplatesTemplateAlertTemplateEscalation `pulumi:"escalations"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName string `pulumi:"ruleName"`
	Selector string `pulumi:"selector"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook string `pulumi:"webhook"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateArgs and GetMetricRuleTemplatesTemplateAlertTemplateOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateArgs struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category pulumi.StringInput `pulumi:"category"`
	// The information about the trigger condition based on the alert level.
	Escalations GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput `pulumi:"escalations"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	Selector pulumi.StringInput `pulumi:"selector"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateArray and GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateArray{ GetMetricRuleTemplatesTemplateAlertTemplateArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateArray []GetMetricRuleTemplatesTemplateAlertTemplateInput

func (GetMetricRuleTemplatesTemplateAlertTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArray) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArray) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return o
}

// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Category }).(pulumi.StringOutput)
}

// The information about the trigger condition based on the alert level.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Escalations() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) []GetMetricRuleTemplatesTemplateAlertTemplateEscalation {
		return v.Escalations
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput)
}

// The name of the metric.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Selector }).(pulumi.StringOutput)
}

// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Webhook }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplate {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplate)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalation struct {
	// The condition for triggering critical-level alerts.
	Criticals []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical `pulumi:"criticals"`
	// The condition for triggering info-level alerts.
	Infos []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo `pulumi:"infos"`
	// The condition for triggering warn-level alerts.
	Warns []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn `pulumi:"warns"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs struct {
	// The condition for triggering critical-level alerts.
	Criticals GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput `pulumi:"criticals"`
	// The condition for triggering info-level alerts.
	Infos GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput `pulumi:"infos"`
	// The condition for triggering warn-level alerts.
	Warns GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput `pulumi:"warns"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return o
}

// The condition for triggering critical-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Criticals() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical {
		return v.Criticals
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput)
}

// The condition for triggering info-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Infos() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo {
		return v.Infos
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput)
}

// The condition for triggering warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Warns() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn {
		return v.Warns
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalation {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string {
		return v.ComparisonOperator
	}).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput` via:
//
//	GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput)
}

type GetMonitorGroupInstancesInstance struct {
	Instances []GetMonitorGroupInstancesInstanceInstance `pulumi:"instances"`
}

// GetMonitorGroupInstancesInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceArgs and GetMonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInput` via:
//
//	GetMonitorGroupInstancesInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput
	ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceOutput
}

type GetMonitorGroupInstancesInstanceArgs struct {
	Instances GetMonitorGroupInstancesInstanceInstanceArrayInput `pulumi:"instances"`
}

func (GetMonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceOutput)
}

// GetMonitorGroupInstancesInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceArray and GetMonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceArrayInput` via:
//
//	GetMonitorGroupInstancesInstanceArray{ GetMonitorGroupInstancesInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceArray []GetMonitorGroupInstancesInstanceInput

func (GetMonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) Instances() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstance) []GetMonitorGroupInstancesInstanceInstance {
		return v.Instances
	}).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstance {
		return vs[0].([]GetMonitorGroupInstancesInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceOutput)
}

type GetMonitorGroupInstancesInstanceInstance struct {
	Category     string `pulumi:"category"`
	InstanceId   string `pulumi:"instanceId"`
	InstanceName string `pulumi:"instanceName"`
	RegionId     string `pulumi:"regionId"`
}

// GetMonitorGroupInstancesInstanceInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArgs and GetMonitorGroupInstancesInstanceInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceInput` via:
//
//	GetMonitorGroupInstancesInstanceInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput
	ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceOutput
}

type GetMonitorGroupInstancesInstanceInstanceArgs struct {
	Category     pulumi.StringInput `pulumi:"category"`
	InstanceId   pulumi.StringInput `pulumi:"instanceId"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	RegionId     pulumi.StringInput `pulumi:"regionId"`
}

func (GetMonitorGroupInstancesInstanceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

// GetMonitorGroupInstancesInstanceInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArray and GetMonitorGroupInstancesInstanceInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceArrayInput` via:
//
//	GetMonitorGroupInstancesInstanceInstanceArray{ GetMonitorGroupInstancesInstanceInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceInstanceArray []GetMonitorGroupInstancesInstanceInstanceInput

func (GetMonitorGroupInstancesInstanceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetMonitorGroupInstancesInstanceInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstanceInstance {
		return vs[0].([]GetMonitorGroupInstancesInstanceInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

type GetMonitorGroupsGroup struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl string `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups []string `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId string `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate int `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified int `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id string `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName string `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId string `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags map[string]interface{} `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds []string `pulumi:"templateIds"`
	// The type of the application group.
	Type string `pulumi:"type"`
}

// GetMonitorGroupsGroupInput is an input type that accepts GetMonitorGroupsGroupArgs and GetMonitorGroupsGroupOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupInput` via:
//
//	GetMonitorGroupsGroupArgs{...}
type GetMonitorGroupsGroupInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput
	ToGetMonitorGroupsGroupOutputWithContext(context.Context) GetMonitorGroupsGroupOutput
}

type GetMonitorGroupsGroupArgs struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl pulumi.StringInput `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId pulumi.StringInput `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate pulumi.IntInput `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified pulumi.IntInput `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName pulumi.StringInput `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds pulumi.StringArrayInput `pulumi:"templateIds"`
	// The type of the application group.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return i.ToGetMonitorGroupsGroupOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupOutput)
}

// GetMonitorGroupsGroupArrayInput is an input type that accepts GetMonitorGroupsGroupArray and GetMonitorGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupArrayInput` via:
//
//	GetMonitorGroupsGroupArray{ GetMonitorGroupsGroupArgs{...} }
type GetMonitorGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput
	ToGetMonitorGroupsGroupArrayOutputWithContext(context.Context) GetMonitorGroupsGroupArrayOutput
}

type GetMonitorGroupsGroupArray []GetMonitorGroupsGroupInput

func (GetMonitorGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return i.ToGetMonitorGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupArrayOutput)
}

type GetMonitorGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return o
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return o
}

// The URL of the Kubernetes cluster from which the application group is synchronized.
func (o GetMonitorGroupsGroupOutput) BindUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.BindUrl }).(pulumi.StringOutput)
}

// The list of  alert groups that receive alert notifications for the application group.
func (o GetMonitorGroupsGroupOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The ID of the tag rule.
func (o GetMonitorGroupsGroupOutput) DynamicTagRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.DynamicTagRuleId }).(pulumi.StringOutput)
}

// The time when the application group was created.
func (o GetMonitorGroupsGroupOutput) GmtCreate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtCreate }).(pulumi.IntOutput)
}

// The time when the application group was modified.
func (o GetMonitorGroupsGroupOutput) GmtModified() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtModified }).(pulumi.IntOutput)
}

// The ID of the application group.
func (o GetMonitorGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Monitor Group.
func (o GetMonitorGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application group.
func (o GetMonitorGroupsGroupOutput) MonitorGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.MonitorGroupName }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud service.
func (o GetMonitorGroupsGroupOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.ServiceId }).(pulumi.StringOutput)
}

// A map of tags assigned to the Cms Monitor Group.
func (o GetMonitorGroupsGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The alert templates applied to the application group.
func (o GetMonitorGroupsGroupOutput) TemplateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.TemplateIds }).(pulumi.StringArrayOutput)
}

// The type of the application group.
func (o GetMonitorGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupsGroup {
		return vs[0].([]GetMonitorGroupsGroup)[vs[1].(int)]
	}).(GetMonitorGroupsGroupOutput)
}

type GetNamespacesNamespace struct {
	// Create the timestamp of the indicator warehouse.
	CreateTime string `pulumi:"createTime"`
	// Description of indicator warehouse.
	Description string `pulumi:"description"`
	// The ID of the Namespace.
	Id string `pulumi:"id"`
	// The timestamp of the last modification indicator warehouse.
	ModifyTime string `pulumi:"modifyTime"`
	// Indicator warehouse name.
	Namespace string `pulumi:"namespace"`
	// The ID of the Namespace.
	NamespaceId string `pulumi:"namespaceId"`
	// Data storage duration.
	Specification string `pulumi:"specification"`
}

// GetNamespacesNamespaceInput is an input type that accepts GetNamespacesNamespaceArgs and GetNamespacesNamespaceOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceInput` via:
//
//	GetNamespacesNamespaceArgs{...}
type GetNamespacesNamespaceInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput
	ToGetNamespacesNamespaceOutputWithContext(context.Context) GetNamespacesNamespaceOutput
}

type GetNamespacesNamespaceArgs struct {
	// Create the timestamp of the indicator warehouse.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Description of indicator warehouse.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Namespace.
	Id pulumi.StringInput `pulumi:"id"`
	// The timestamp of the last modification indicator warehouse.
	ModifyTime pulumi.StringInput `pulumi:"modifyTime"`
	// Indicator warehouse name.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The ID of the Namespace.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// Data storage duration.
	Specification pulumi.StringInput `pulumi:"specification"`
}

func (GetNamespacesNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return i.ToGetNamespacesNamespaceOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArgs) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceOutput)
}

// GetNamespacesNamespaceArrayInput is an input type that accepts GetNamespacesNamespaceArray and GetNamespacesNamespaceArrayOutput values.
// You can construct a concrete instance of `GetNamespacesNamespaceArrayInput` via:
//
//	GetNamespacesNamespaceArray{ GetNamespacesNamespaceArgs{...} }
type GetNamespacesNamespaceArrayInput interface {
	pulumi.Input

	ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput
	ToGetNamespacesNamespaceArrayOutputWithContext(context.Context) GetNamespacesNamespaceArrayOutput
}

type GetNamespacesNamespaceArray []GetNamespacesNamespaceInput

func (GetNamespacesNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return i.ToGetNamespacesNamespaceArrayOutputWithContext(context.Background())
}

func (i GetNamespacesNamespaceArray) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNamespacesNamespaceArrayOutput)
}

type GetNamespacesNamespaceOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutput() GetNamespacesNamespaceOutput {
	return o
}

func (o GetNamespacesNamespaceOutput) ToGetNamespacesNamespaceOutputWithContext(ctx context.Context) GetNamespacesNamespaceOutput {
	return o
}

// Create the timestamp of the indicator warehouse.
func (o GetNamespacesNamespaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of indicator warehouse.
func (o GetNamespacesNamespaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Namespace.
func (o GetNamespacesNamespaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of the last modification indicator warehouse.
func (o GetNamespacesNamespaceOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.ModifyTime }).(pulumi.StringOutput)
}

// Indicator warehouse name.
func (o GetNamespacesNamespaceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Namespace }).(pulumi.StringOutput)
}

// The ID of the Namespace.
func (o GetNamespacesNamespaceOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// Data storage duration.
func (o GetNamespacesNamespaceOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespacesNamespace) string { return v.Specification }).(pulumi.StringOutput)
}

type GetNamespacesNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetNamespacesNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespacesNamespace)(nil)).Elem()
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutput() GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) ToGetNamespacesNamespaceArrayOutputWithContext(ctx context.Context) GetNamespacesNamespaceArrayOutput {
	return o
}

func (o GetNamespacesNamespaceArrayOutput) Index(i pulumi.IntInput) GetNamespacesNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespacesNamespace {
		return vs[0].([]GetNamespacesNamespace)[vs[1].(int)]
	}).(GetNamespacesNamespaceOutput)
}

type GetSlsGroupsGroup struct {
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The ID of the Sls Group. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The Config of the Sls Group.
	SlsGroupConfigs []GetSlsGroupsGroupSlsGroupConfig `pulumi:"slsGroupConfigs"`
	// The Description of the Sls Group.
	SlsGroupDescription string `pulumi:"slsGroupDescription"`
	// The name of the resource.
	SlsGroupName string `pulumi:"slsGroupName"`
}

// GetSlsGroupsGroupInput is an input type that accepts GetSlsGroupsGroupArgs and GetSlsGroupsGroupOutput values.
// You can construct a concrete instance of `GetSlsGroupsGroupInput` via:
//
//	GetSlsGroupsGroupArgs{...}
type GetSlsGroupsGroupInput interface {
	pulumi.Input

	ToGetSlsGroupsGroupOutput() GetSlsGroupsGroupOutput
	ToGetSlsGroupsGroupOutputWithContext(context.Context) GetSlsGroupsGroupOutput
}

type GetSlsGroupsGroupArgs struct {
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the Sls Group. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The Config of the Sls Group.
	SlsGroupConfigs GetSlsGroupsGroupSlsGroupConfigArrayInput `pulumi:"slsGroupConfigs"`
	// The Description of the Sls Group.
	SlsGroupDescription pulumi.StringInput `pulumi:"slsGroupDescription"`
	// The name of the resource.
	SlsGroupName pulumi.StringInput `pulumi:"slsGroupName"`
}

func (GetSlsGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlsGroupsGroup)(nil)).Elem()
}

func (i GetSlsGroupsGroupArgs) ToGetSlsGroupsGroupOutput() GetSlsGroupsGroupOutput {
	return i.ToGetSlsGroupsGroupOutputWithContext(context.Background())
}

func (i GetSlsGroupsGroupArgs) ToGetSlsGroupsGroupOutputWithContext(ctx context.Context) GetSlsGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlsGroupsGroupOutput)
}

// GetSlsGroupsGroupArrayInput is an input type that accepts GetSlsGroupsGroupArray and GetSlsGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetSlsGroupsGroupArrayInput` via:
//
//	GetSlsGroupsGroupArray{ GetSlsGroupsGroupArgs{...} }
type GetSlsGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetSlsGroupsGroupArrayOutput() GetSlsGroupsGroupArrayOutput
	ToGetSlsGroupsGroupArrayOutputWithContext(context.Context) GetSlsGroupsGroupArrayOutput
}

type GetSlsGroupsGroupArray []GetSlsGroupsGroupInput

func (GetSlsGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlsGroupsGroup)(nil)).Elem()
}

func (i GetSlsGroupsGroupArray) ToGetSlsGroupsGroupArrayOutput() GetSlsGroupsGroupArrayOutput {
	return i.ToGetSlsGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetSlsGroupsGroupArray) ToGetSlsGroupsGroupArrayOutputWithContext(ctx context.Context) GetSlsGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlsGroupsGroupArrayOutput)
}

type GetSlsGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetSlsGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlsGroupsGroup)(nil)).Elem()
}

func (o GetSlsGroupsGroupOutput) ToGetSlsGroupsGroupOutput() GetSlsGroupsGroupOutput {
	return o
}

func (o GetSlsGroupsGroupOutput) ToGetSlsGroupsGroupOutputWithContext(ctx context.Context) GetSlsGroupsGroupOutput {
	return o
}

// The creation time of the resource.
func (o GetSlsGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the Sls Group. Its value is same as Queue Name.
func (o GetSlsGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The Config of the Sls Group.
func (o GetSlsGroupsGroupOutput) SlsGroupConfigs() GetSlsGroupsGroupSlsGroupConfigArrayOutput {
	return o.ApplyT(func(v GetSlsGroupsGroup) []GetSlsGroupsGroupSlsGroupConfig { return v.SlsGroupConfigs }).(GetSlsGroupsGroupSlsGroupConfigArrayOutput)
}

// The Description of the Sls Group.
func (o GetSlsGroupsGroupOutput) SlsGroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroup) string { return v.SlsGroupDescription }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetSlsGroupsGroupOutput) SlsGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroup) string { return v.SlsGroupName }).(pulumi.StringOutput)
}

type GetSlsGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSlsGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlsGroupsGroup)(nil)).Elem()
}

func (o GetSlsGroupsGroupArrayOutput) ToGetSlsGroupsGroupArrayOutput() GetSlsGroupsGroupArrayOutput {
	return o
}

func (o GetSlsGroupsGroupArrayOutput) ToGetSlsGroupsGroupArrayOutputWithContext(ctx context.Context) GetSlsGroupsGroupArrayOutput {
	return o
}

func (o GetSlsGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetSlsGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlsGroupsGroup {
		return vs[0].([]GetSlsGroupsGroup)[vs[1].(int)]
	}).(GetSlsGroupsGroupOutput)
}

type GetSlsGroupsGroupSlsGroupConfig struct {
	// The name of the Log Store.
	SlsLogstore string `pulumi:"slsLogstore"`
	// The name of the Project.
	SlsProject string `pulumi:"slsProject"`
	// The Sls Region.
	SlsRegion string `pulumi:"slsRegion"`
	// The ID of the Sls User.
	SlsUserId string `pulumi:"slsUserId"`
}

// GetSlsGroupsGroupSlsGroupConfigInput is an input type that accepts GetSlsGroupsGroupSlsGroupConfigArgs and GetSlsGroupsGroupSlsGroupConfigOutput values.
// You can construct a concrete instance of `GetSlsGroupsGroupSlsGroupConfigInput` via:
//
//	GetSlsGroupsGroupSlsGroupConfigArgs{...}
type GetSlsGroupsGroupSlsGroupConfigInput interface {
	pulumi.Input

	ToGetSlsGroupsGroupSlsGroupConfigOutput() GetSlsGroupsGroupSlsGroupConfigOutput
	ToGetSlsGroupsGroupSlsGroupConfigOutputWithContext(context.Context) GetSlsGroupsGroupSlsGroupConfigOutput
}

type GetSlsGroupsGroupSlsGroupConfigArgs struct {
	// The name of the Log Store.
	SlsLogstore pulumi.StringInput `pulumi:"slsLogstore"`
	// The name of the Project.
	SlsProject pulumi.StringInput `pulumi:"slsProject"`
	// The Sls Region.
	SlsRegion pulumi.StringInput `pulumi:"slsRegion"`
	// The ID of the Sls User.
	SlsUserId pulumi.StringInput `pulumi:"slsUserId"`
}

func (GetSlsGroupsGroupSlsGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlsGroupsGroupSlsGroupConfig)(nil)).Elem()
}

func (i GetSlsGroupsGroupSlsGroupConfigArgs) ToGetSlsGroupsGroupSlsGroupConfigOutput() GetSlsGroupsGroupSlsGroupConfigOutput {
	return i.ToGetSlsGroupsGroupSlsGroupConfigOutputWithContext(context.Background())
}

func (i GetSlsGroupsGroupSlsGroupConfigArgs) ToGetSlsGroupsGroupSlsGroupConfigOutputWithContext(ctx context.Context) GetSlsGroupsGroupSlsGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlsGroupsGroupSlsGroupConfigOutput)
}

// GetSlsGroupsGroupSlsGroupConfigArrayInput is an input type that accepts GetSlsGroupsGroupSlsGroupConfigArray and GetSlsGroupsGroupSlsGroupConfigArrayOutput values.
// You can construct a concrete instance of `GetSlsGroupsGroupSlsGroupConfigArrayInput` via:
//
//	GetSlsGroupsGroupSlsGroupConfigArray{ GetSlsGroupsGroupSlsGroupConfigArgs{...} }
type GetSlsGroupsGroupSlsGroupConfigArrayInput interface {
	pulumi.Input

	ToGetSlsGroupsGroupSlsGroupConfigArrayOutput() GetSlsGroupsGroupSlsGroupConfigArrayOutput
	ToGetSlsGroupsGroupSlsGroupConfigArrayOutputWithContext(context.Context) GetSlsGroupsGroupSlsGroupConfigArrayOutput
}

type GetSlsGroupsGroupSlsGroupConfigArray []GetSlsGroupsGroupSlsGroupConfigInput

func (GetSlsGroupsGroupSlsGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlsGroupsGroupSlsGroupConfig)(nil)).Elem()
}

func (i GetSlsGroupsGroupSlsGroupConfigArray) ToGetSlsGroupsGroupSlsGroupConfigArrayOutput() GetSlsGroupsGroupSlsGroupConfigArrayOutput {
	return i.ToGetSlsGroupsGroupSlsGroupConfigArrayOutputWithContext(context.Background())
}

func (i GetSlsGroupsGroupSlsGroupConfigArray) ToGetSlsGroupsGroupSlsGroupConfigArrayOutputWithContext(ctx context.Context) GetSlsGroupsGroupSlsGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlsGroupsGroupSlsGroupConfigArrayOutput)
}

type GetSlsGroupsGroupSlsGroupConfigOutput struct{ *pulumi.OutputState }

func (GetSlsGroupsGroupSlsGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlsGroupsGroupSlsGroupConfig)(nil)).Elem()
}

func (o GetSlsGroupsGroupSlsGroupConfigOutput) ToGetSlsGroupsGroupSlsGroupConfigOutput() GetSlsGroupsGroupSlsGroupConfigOutput {
	return o
}

func (o GetSlsGroupsGroupSlsGroupConfigOutput) ToGetSlsGroupsGroupSlsGroupConfigOutputWithContext(ctx context.Context) GetSlsGroupsGroupSlsGroupConfigOutput {
	return o
}

// The name of the Log Store.
func (o GetSlsGroupsGroupSlsGroupConfigOutput) SlsLogstore() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroupSlsGroupConfig) string { return v.SlsLogstore }).(pulumi.StringOutput)
}

// The name of the Project.
func (o GetSlsGroupsGroupSlsGroupConfigOutput) SlsProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroupSlsGroupConfig) string { return v.SlsProject }).(pulumi.StringOutput)
}

// The Sls Region.
func (o GetSlsGroupsGroupSlsGroupConfigOutput) SlsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroupSlsGroupConfig) string { return v.SlsRegion }).(pulumi.StringOutput)
}

// The ID of the Sls User.
func (o GetSlsGroupsGroupSlsGroupConfigOutput) SlsUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlsGroupsGroupSlsGroupConfig) string { return v.SlsUserId }).(pulumi.StringOutput)
}

type GetSlsGroupsGroupSlsGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (GetSlsGroupsGroupSlsGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSlsGroupsGroupSlsGroupConfig)(nil)).Elem()
}

func (o GetSlsGroupsGroupSlsGroupConfigArrayOutput) ToGetSlsGroupsGroupSlsGroupConfigArrayOutput() GetSlsGroupsGroupSlsGroupConfigArrayOutput {
	return o
}

func (o GetSlsGroupsGroupSlsGroupConfigArrayOutput) ToGetSlsGroupsGroupSlsGroupConfigArrayOutputWithContext(ctx context.Context) GetSlsGroupsGroupSlsGroupConfigArrayOutput {
	return o
}

func (o GetSlsGroupsGroupSlsGroupConfigArrayOutput) Index(i pulumi.IntInput) GetSlsGroupsGroupSlsGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSlsGroupsGroupSlsGroupConfig {
		return vs[0].([]GetSlsGroupsGroupSlsGroupConfig)[vs[1].(int)]
	}).(GetSlsGroupsGroupSlsGroupConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsCriticalInput)(nil)).Elem(), AlarmEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsCriticalPtrInput)(nil)).Elem(), AlarmEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsInfoInput)(nil)).Elem(), AlarmEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsInfoPtrInput)(nil)).Elem(), AlarmEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsWarnInput)(nil)).Elem(), AlarmEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsWarnPtrInput)(nil)).Elem(), AlarmEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPrometheusInput)(nil)).Elem(), AlarmPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmPrometheusArrayInput)(nil)).Elem(), AlarmPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicTagGroupMatchExpressInput)(nil)).Elem(), DynamicTagGroupMatchExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicTagGroupMatchExpressArrayInput)(nil)).Elem(), DynamicTagGroupMatchExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventRuleEventPatternInput)(nil)).Elem(), EventRuleEventPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventRuleEventPatternPtrInput)(nil)).Elem(), EventRuleEventPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInput)(nil)).Elem(), GroupMetricRuleEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsCriticalInput)(nil)).Elem(), GroupMetricRuleEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsCriticalPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInfoInput)(nil)).Elem(), GroupMetricRuleEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInfoPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsWarnInput)(nil)).Elem(), GroupMetricRuleEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsWarnPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleTargetInput)(nil)).Elem(), GroupMetricRuleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleTargetArrayInput)(nil)).Elem(), GroupMetricRuleTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskAttachLabelInput)(nil)).Elem(), HybridMonitorSlsTaskAttachLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskAttachLabelArrayInput)(nil)).Elem(), HybridMonitorSlsTaskAttachLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigPtrInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigExpressInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigExpressArrayInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterPtrInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterFilterInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigFilterFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigFilterFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigGroupByInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigGroupByArrayInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigStatisticInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigStatisticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridMonitorSlsTaskSlsProcessConfigStatisticArrayInput)(nil)).Elem(), HybridMonitorSlsTaskSlsProcessConfigStatisticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleBlackListMetricInput)(nil)).Elem(), MetricRuleBlackListMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleBlackListMetricArrayInput)(nil)).Elem(), MetricRuleBlackListMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateArrayInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCriticalInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfoInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarnInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorGroupInstancesInstanceInput)(nil)).Elem(), MonitorGroupInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorGroupInstancesInstanceArrayInput)(nil)).Elem(), MonitorGroupInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteMonitorIspCityInput)(nil)).Elem(), SiteMonitorIspCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteMonitorIspCityArrayInput)(nil)).Elem(), SiteMonitorIspCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlsGroupSlsGroupConfigInput)(nil)).Elem(), SlsGroupSlsGroupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlsGroupSlsGroupConfigArrayInput)(nil)).Elem(), SlsGroupSlsGroupConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactGroupsGroupInput)(nil)).Elem(), GetAlarmContactGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactGroupsGroupArrayInput)(nil)).Elem(), GetAlarmContactGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactsContactInput)(nil)).Elem(), GetAlarmContactsContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactsContactArrayInput)(nil)).Elem(), GetAlarmContactsContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupInput)(nil)).Elem(), GetDynamicTagGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupArrayInput)(nil)).Elem(), GetDynamicTagGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpressInput)(nil)).Elem(), GetDynamicTagGroupsGroupMatchExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpressArrayInput)(nil)).Elem(), GetDynamicTagGroupsGroupMatchExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleInput)(nil)).Elem(), GetEventRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleArrayInput)(nil)).Elem(), GetEventRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleEventPatternInput)(nil)).Elem(), GetEventRulesRuleEventPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleEventPatternArrayInput)(nil)).Elem(), GetEventRulesRuleEventPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleEventPatternKeywordFilterInput)(nil)).Elem(), GetEventRulesRuleEventPatternKeywordFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventRulesRuleEventPatternKeywordFilterArrayInput)(nil)).Elem(), GetEventRulesRuleEventPatternKeywordFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleInput)(nil)).Elem(), GetGroupMetricRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCriticalInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCriticalArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationCriticalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfoInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfoArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarnInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarnArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationWarnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataInput)(nil)).Elem(), GetHybridMonitorDatasDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataArrayInput)(nil)).Elem(), GetHybridMonitorDatasDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataLabelInput)(nil)).Elem(), GetHybridMonitorDatasDataLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataLabelArrayInput)(nil)).Elem(), GetHybridMonitorDatasDataLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataValueInput)(nil)).Elem(), GetHybridMonitorDatasDataValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorDatasDataValueArrayInput)(nil)).Elem(), GetHybridMonitorDatasDataValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorFcTasksTaskInput)(nil)).Elem(), GetHybridMonitorFcTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorFcTasksTaskArrayInput)(nil)).Elem(), GetHybridMonitorFcTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskAttachLabelInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskAttachLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskAttachLabelArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskAttachLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskMatchExpressInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskMatchExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskMatchExpressArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskMatchExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayInput)(nil)).Elem(), GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleBlackListsListInput)(nil)).Elem(), GetMetricRuleBlackListsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleBlackListsListArrayInput)(nil)).Elem(), GetMetricRuleBlackListsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleBlackListsListMetricInput)(nil)).Elem(), GetMetricRuleBlackListsListMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleBlackListsListMetricArrayInput)(nil)).Elem(), GetMetricRuleBlackListsListMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceArrayInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstanceInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstanceArrayInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupsGroupInput)(nil)).Elem(), GetMonitorGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupsGroupArrayInput)(nil)).Elem(), GetMonitorGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceInput)(nil)).Elem(), GetNamespacesNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNamespacesNamespaceArrayInput)(nil)).Elem(), GetNamespacesNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlsGroupsGroupInput)(nil)).Elem(), GetSlsGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlsGroupsGroupArrayInput)(nil)).Elem(), GetSlsGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlsGroupsGroupSlsGroupConfigInput)(nil)).Elem(), GetSlsGroupsGroupSlsGroupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSlsGroupsGroupSlsGroupConfigArrayInput)(nil)).Elem(), GetSlsGroupsGroupSlsGroupConfigArray{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(AlarmPrometheusOutput{})
	pulumi.RegisterOutputType(AlarmPrometheusArrayOutput{})
	pulumi.RegisterOutputType(DynamicTagGroupMatchExpressOutput{})
	pulumi.RegisterOutputType(DynamicTagGroupMatchExpressArrayOutput{})
	pulumi.RegisterOutputType(EventRuleEventPatternOutput{})
	pulumi.RegisterOutputType(EventRuleEventPatternPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleTargetOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleTargetArrayOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskAttachLabelOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskAttachLabelArrayOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigPtrOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigExpressOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigExpressArrayOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigFilterOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigFilterPtrOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigFilterFilterOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigFilterFilterArrayOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigGroupByOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigGroupByArrayOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigStatisticOutput{})
	pulumi.RegisterOutputType(HybridMonitorSlsTaskSlsProcessConfigStatisticArrayOutput{})
	pulumi.RegisterOutputType(MetricRuleBlackListMetricOutput{})
	pulumi.RegisterOutputType(MetricRuleBlackListMetricArrayOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateArrayOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsInfoOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsWarnOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityArrayOutput{})
	pulumi.RegisterOutputType(SlsGroupSlsGroupConfigOutput{})
	pulumi.RegisterOutputType(SlsGroupSlsGroupConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactArrayOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupMatchExpressOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupMatchExpressArrayOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleEventPatternOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleEventPatternArrayOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleEventPatternKeywordFilterOutput{})
	pulumi.RegisterOutputType(GetEventRulesRuleEventPatternKeywordFilterArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataLabelOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataLabelArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataValueOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorDatasDataValueArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorFcTasksTaskOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorFcTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskAttachLabelOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskAttachLabelArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskMatchExpressOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskMatchExpressArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpressArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilterFilterArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupByArrayOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticOutput{})
	pulumi.RegisterOutputType(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatisticArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleBlackListsListOutput{})
	pulumi.RegisterOutputType(GetMetricRuleBlackListsListArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleBlackListsListMetricOutput{})
	pulumi.RegisterOutputType(GetMetricRuleBlackListsListMetricArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceOutput{})
	pulumi.RegisterOutputType(GetNamespacesNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetSlsGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetSlsGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSlsGroupsGroupSlsGroupConfigOutput{})
	pulumi.RegisterOutputType(GetSlsGroupsGroupSlsGroupConfigArrayOutput{})
}
