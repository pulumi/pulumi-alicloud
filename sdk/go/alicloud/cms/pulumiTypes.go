// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlarmEscalationsCritical struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsCriticalInput is an input type that accepts AlarmEscalationsCriticalArgs and AlarmEscalationsCriticalOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
type AlarmEscalationsCriticalInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput
	ToAlarmEscalationsCriticalOutputWithContext(context.Context) AlarmEscalationsCriticalOutput
}

type AlarmEscalationsCriticalArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return i.ToAlarmEscalationsCriticalOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput)
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput).ToAlarmEscalationsCriticalPtrOutputWithContext(ctx)
}

// AlarmEscalationsCriticalPtrInput is an input type that accepts AlarmEscalationsCriticalArgs, AlarmEscalationsCriticalPtr and AlarmEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalPtrInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput
	ToAlarmEscalationsCriticalPtrOutputWithContext(context.Context) AlarmEscalationsCriticalPtrOutput
}

type alarmEscalationsCriticalPtrType AlarmEscalationsCriticalArgs

func AlarmEscalationsCriticalPtr(v *AlarmEscalationsCriticalArgs) AlarmEscalationsCriticalPtrInput {
	return (*alarmEscalationsCriticalPtrType)(v)
}

func (*alarmEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalPtrOutput)
}

type AlarmEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsCritical) *AlarmEscalationsCritical {
		return &v
	}).(AlarmEscalationsCriticalPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) Elem() AlarmEscalationsCriticalOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) AlarmEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsCritical
		return ret
	}).(AlarmEscalationsCriticalOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfo struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsInfoInput is an input type that accepts AlarmEscalationsInfoArgs and AlarmEscalationsInfoOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoInput` via:
//
//          AlarmEscalationsInfoArgs{...}
type AlarmEscalationsInfoInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput
	ToAlarmEscalationsInfoOutputWithContext(context.Context) AlarmEscalationsInfoOutput
}

type AlarmEscalationsInfoArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return i.ToAlarmEscalationsInfoOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput)
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput).ToAlarmEscalationsInfoPtrOutputWithContext(ctx)
}

// AlarmEscalationsInfoPtrInput is an input type that accepts AlarmEscalationsInfoArgs, AlarmEscalationsInfoPtr and AlarmEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoPtrInput` via:
//
//          AlarmEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsInfoPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput
	ToAlarmEscalationsInfoPtrOutputWithContext(context.Context) AlarmEscalationsInfoPtrOutput
}

type alarmEscalationsInfoPtrType AlarmEscalationsInfoArgs

func AlarmEscalationsInfoPtr(v *AlarmEscalationsInfoArgs) AlarmEscalationsInfoPtrInput {
	return (*alarmEscalationsInfoPtrType)(v)
}

func (*alarmEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoPtrOutput)
}

type AlarmEscalationsInfoOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsInfo) *AlarmEscalationsInfo {
		return &v
	}).(AlarmEscalationsInfoPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) Elem() AlarmEscalationsInfoOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) AlarmEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsInfo
		return ret
	}).(AlarmEscalationsInfoOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarn struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsWarnInput is an input type that accepts AlarmEscalationsWarnArgs and AlarmEscalationsWarnOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnInput` via:
//
//          AlarmEscalationsWarnArgs{...}
type AlarmEscalationsWarnInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput
	ToAlarmEscalationsWarnOutputWithContext(context.Context) AlarmEscalationsWarnOutput
}

type AlarmEscalationsWarnArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return i.ToAlarmEscalationsWarnOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput)
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput).ToAlarmEscalationsWarnPtrOutputWithContext(ctx)
}

// AlarmEscalationsWarnPtrInput is an input type that accepts AlarmEscalationsWarnArgs, AlarmEscalationsWarnPtr and AlarmEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnPtrInput` via:
//
//          AlarmEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsWarnPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput
	ToAlarmEscalationsWarnPtrOutputWithContext(context.Context) AlarmEscalationsWarnPtrOutput
}

type alarmEscalationsWarnPtrType AlarmEscalationsWarnArgs

func AlarmEscalationsWarnPtr(v *AlarmEscalationsWarnArgs) AlarmEscalationsWarnPtrInput {
	return (*alarmEscalationsWarnPtrType)(v)
}

func (*alarmEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnPtrOutput)
}

type AlarmEscalationsWarnOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmEscalationsWarn) *AlarmEscalationsWarn {
		return &v
	}).(AlarmEscalationsWarnPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) Elem() AlarmEscalationsWarnOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) AlarmEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret AlarmEscalationsWarn
		return ret
	}).(AlarmEscalationsWarnOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum", "Value", "ErrorCodeMaximum", "Sum", "Count"]. Default to "Average".
func (o AlarmEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type DynamicTagGroupMatchExpress struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue string `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction string `pulumi:"tagValueMatchFunction"`
}

// DynamicTagGroupMatchExpressInput is an input type that accepts DynamicTagGroupMatchExpressArgs and DynamicTagGroupMatchExpressOutput values.
// You can construct a concrete instance of `DynamicTagGroupMatchExpressInput` via:
//
//          DynamicTagGroupMatchExpressArgs{...}
type DynamicTagGroupMatchExpressInput interface {
	pulumi.Input

	ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput
	ToDynamicTagGroupMatchExpressOutputWithContext(context.Context) DynamicTagGroupMatchExpressOutput
}

type DynamicTagGroupMatchExpressArgs struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction pulumi.StringInput `pulumi:"tagValueMatchFunction"`
}

func (DynamicTagGroupMatchExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (i DynamicTagGroupMatchExpressArgs) ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput {
	return i.ToDynamicTagGroupMatchExpressOutputWithContext(context.Background())
}

func (i DynamicTagGroupMatchExpressArgs) ToDynamicTagGroupMatchExpressOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicTagGroupMatchExpressOutput)
}

// DynamicTagGroupMatchExpressArrayInput is an input type that accepts DynamicTagGroupMatchExpressArray and DynamicTagGroupMatchExpressArrayOutput values.
// You can construct a concrete instance of `DynamicTagGroupMatchExpressArrayInput` via:
//
//          DynamicTagGroupMatchExpressArray{ DynamicTagGroupMatchExpressArgs{...} }
type DynamicTagGroupMatchExpressArrayInput interface {
	pulumi.Input

	ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput
	ToDynamicTagGroupMatchExpressArrayOutputWithContext(context.Context) DynamicTagGroupMatchExpressArrayOutput
}

type DynamicTagGroupMatchExpressArray []DynamicTagGroupMatchExpressInput

func (DynamicTagGroupMatchExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (i DynamicTagGroupMatchExpressArray) ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput {
	return i.ToDynamicTagGroupMatchExpressArrayOutputWithContext(context.Background())
}

func (i DynamicTagGroupMatchExpressArray) ToDynamicTagGroupMatchExpressArrayOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicTagGroupMatchExpressArrayOutput)
}

type DynamicTagGroupMatchExpressOutput struct{ *pulumi.OutputState }

func (DynamicTagGroupMatchExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (o DynamicTagGroupMatchExpressOutput) ToDynamicTagGroupMatchExpressOutput() DynamicTagGroupMatchExpressOutput {
	return o
}

func (o DynamicTagGroupMatchExpressOutput) ToDynamicTagGroupMatchExpressOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressOutput {
	return o
}

// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
func (o DynamicTagGroupMatchExpressOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicTagGroupMatchExpress) string { return v.TagValue }).(pulumi.StringOutput)
}

// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
func (o DynamicTagGroupMatchExpressOutput) TagValueMatchFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicTagGroupMatchExpress) string { return v.TagValueMatchFunction }).(pulumi.StringOutput)
}

type DynamicTagGroupMatchExpressArrayOutput struct{ *pulumi.OutputState }

func (DynamicTagGroupMatchExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicTagGroupMatchExpress)(nil)).Elem()
}

func (o DynamicTagGroupMatchExpressArrayOutput) ToDynamicTagGroupMatchExpressArrayOutput() DynamicTagGroupMatchExpressArrayOutput {
	return o
}

func (o DynamicTagGroupMatchExpressArrayOutput) ToDynamicTagGroupMatchExpressArrayOutputWithContext(ctx context.Context) DynamicTagGroupMatchExpressArrayOutput {
	return o
}

func (o DynamicTagGroupMatchExpressArrayOutput) Index(i pulumi.IntInput) DynamicTagGroupMatchExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicTagGroupMatchExpress {
		return vs[0].([]DynamicTagGroupMatchExpress)[vs[1].(int)]
	}).(DynamicTagGroupMatchExpressOutput)
}

type GroupMetricRuleEscalations struct {
	// The critical level.
	Critical *GroupMetricRuleEscalationsCritical `pulumi:"critical"`
	// The info level.
	Info *GroupMetricRuleEscalationsInfo `pulumi:"info"`
	// The warn level.
	Warn *GroupMetricRuleEscalationsWarn `pulumi:"warn"`
}

// GroupMetricRuleEscalationsInput is an input type that accepts GroupMetricRuleEscalationsArgs and GroupMetricRuleEscalationsOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInput` via:
//
//          GroupMetricRuleEscalationsArgs{...}
type GroupMetricRuleEscalationsInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput
	ToGroupMetricRuleEscalationsOutputWithContext(context.Context) GroupMetricRuleEscalationsOutput
}

type GroupMetricRuleEscalationsArgs struct {
	// The critical level.
	Critical GroupMetricRuleEscalationsCriticalPtrInput `pulumi:"critical"`
	// The info level.
	Info GroupMetricRuleEscalationsInfoPtrInput `pulumi:"info"`
	// The warn level.
	Warn GroupMetricRuleEscalationsWarnPtrInput `pulumi:"warn"`
}

func (GroupMetricRuleEscalationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return i.ToGroupMetricRuleEscalationsOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput)
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput).ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsPtrInput is an input type that accepts GroupMetricRuleEscalationsArgs, GroupMetricRuleEscalationsPtr and GroupMetricRuleEscalationsPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsPtrInput` via:
//
//          GroupMetricRuleEscalationsArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput
	ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsPtrOutput
}

type groupMetricRuleEscalationsPtrType GroupMetricRuleEscalationsArgs

func GroupMetricRuleEscalationsPtr(v *GroupMetricRuleEscalationsArgs) GroupMetricRuleEscalationsPtrInput {
	return (*groupMetricRuleEscalationsPtrType)(v)
}

func (*groupMetricRuleEscalationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsPtrOutput)
}

type GroupMetricRuleEscalationsOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalations) *GroupMetricRuleEscalations {
		return &v
	}).(GroupMetricRuleEscalationsPtrOutput)
}

// The critical level.
func (o GroupMetricRuleEscalationsOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical { return v.Critical }).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level.
func (o GroupMetricRuleEscalationsOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo { return v.Info }).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level.
func (o GroupMetricRuleEscalationsOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn { return v.Warn }).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) Elem() GroupMetricRuleEscalationsOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) GroupMetricRuleEscalations {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalations
		return ret
	}).(GroupMetricRuleEscalationsOutput)
}

// The critical level.
func (o GroupMetricRuleEscalationsPtrOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level.
func (o GroupMetricRuleEscalationsPtrOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level.
func (o GroupMetricRuleEscalationsPtrOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsCritical struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsCriticalInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs and GroupMetricRuleEscalationsCriticalOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalInput` via:
//
//          GroupMetricRuleEscalationsCriticalArgs{...}
type GroupMetricRuleEscalationsCriticalInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput
	ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalOutput
}

type GroupMetricRuleEscalationsCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return i.ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput)
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput).ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsCriticalPtrInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs, GroupMetricRuleEscalationsCriticalPtr and GroupMetricRuleEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalPtrInput` via:
//
//          GroupMetricRuleEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput
	ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalPtrOutput
}

type groupMetricRuleEscalationsCriticalPtrType GroupMetricRuleEscalationsCriticalArgs

func GroupMetricRuleEscalationsCriticalPtr(v *GroupMetricRuleEscalationsCriticalArgs) GroupMetricRuleEscalationsCriticalPtrInput {
	return (*groupMetricRuleEscalationsCriticalPtrType)(v)
}

func (*groupMetricRuleEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

type GroupMetricRuleEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsCritical) *GroupMetricRuleEscalationsCritical {
		return &v
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) Elem() GroupMetricRuleEscalationsCriticalOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) GroupMetricRuleEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsCritical
		return ret
	}).(GroupMetricRuleEscalationsCriticalOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfo struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsInfoInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs and GroupMetricRuleEscalationsInfoOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoInput` via:
//
//          GroupMetricRuleEscalationsInfoArgs{...}
type GroupMetricRuleEscalationsInfoInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput
	ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoOutput
}

type GroupMetricRuleEscalationsInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return i.ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput)
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput).ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsInfoPtrInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs, GroupMetricRuleEscalationsInfoPtr and GroupMetricRuleEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoPtrInput` via:
//
//          GroupMetricRuleEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsInfoPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput
	ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoPtrOutput
}

type groupMetricRuleEscalationsInfoPtrType GroupMetricRuleEscalationsInfoArgs

func GroupMetricRuleEscalationsInfoPtr(v *GroupMetricRuleEscalationsInfoArgs) GroupMetricRuleEscalationsInfoPtrInput {
	return (*groupMetricRuleEscalationsInfoPtrType)(v)
}

func (*groupMetricRuleEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoPtrOutput)
}

type GroupMetricRuleEscalationsInfoOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsInfo) *GroupMetricRuleEscalationsInfo {
		return &v
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) Elem() GroupMetricRuleEscalationsInfoOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) GroupMetricRuleEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsInfo
		return ret
	}).(GroupMetricRuleEscalationsInfoOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarn struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsWarnInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs and GroupMetricRuleEscalationsWarnOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnInput` via:
//
//          GroupMetricRuleEscalationsWarnArgs{...}
type GroupMetricRuleEscalationsWarnInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput
	ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnOutput
}

type GroupMetricRuleEscalationsWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return i.ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput)
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput).ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsWarnPtrInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs, GroupMetricRuleEscalationsWarnPtr and GroupMetricRuleEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnPtrInput` via:
//
//          GroupMetricRuleEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsWarnPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput
	ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnPtrOutput
}

type groupMetricRuleEscalationsWarnPtrType GroupMetricRuleEscalationsWarnArgs

func GroupMetricRuleEscalationsWarnPtr(v *GroupMetricRuleEscalationsWarnArgs) GroupMetricRuleEscalationsWarnPtrInput {
	return (*groupMetricRuleEscalationsWarnPtrType)(v)
}

func (*groupMetricRuleEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsWarnOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupMetricRuleEscalationsWarn) *GroupMetricRuleEscalationsWarn {
		return &v
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) Elem() GroupMetricRuleEscalationsWarnOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) GroupMetricRuleEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret GroupMetricRuleEscalationsWarn
		return ret
	}).(GroupMetricRuleEscalationsWarnOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type MetricRuleTemplateAlertTemplate struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category string `pulumi:"category"`
	// The information about the trigger condition based on the alert level. See the following `Block escalations`.
	Escalations *MetricRuleTemplateAlertTemplateEscalations `pulumi:"escalations"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName string `pulumi:"ruleName"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook *string `pulumi:"webhook"`
}

// MetricRuleTemplateAlertTemplateInput is an input type that accepts MetricRuleTemplateAlertTemplateArgs and MetricRuleTemplateAlertTemplateOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateInput` via:
//
//          MetricRuleTemplateAlertTemplateArgs{...}
type MetricRuleTemplateAlertTemplateInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput
	ToMetricRuleTemplateAlertTemplateOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateOutput
}

type MetricRuleTemplateAlertTemplateArgs struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category pulumi.StringInput `pulumi:"category"`
	// The information about the trigger condition based on the alert level. See the following `Block escalations`.
	Escalations MetricRuleTemplateAlertTemplateEscalationsPtrInput `pulumi:"escalations"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook pulumi.StringPtrInput `pulumi:"webhook"`
}

func (MetricRuleTemplateAlertTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateArgs) ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput {
	return i.ToMetricRuleTemplateAlertTemplateOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateArgs) ToMetricRuleTemplateAlertTemplateOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateOutput)
}

// MetricRuleTemplateAlertTemplateArrayInput is an input type that accepts MetricRuleTemplateAlertTemplateArray and MetricRuleTemplateAlertTemplateArrayOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateArrayInput` via:
//
//          MetricRuleTemplateAlertTemplateArray{ MetricRuleTemplateAlertTemplateArgs{...} }
type MetricRuleTemplateAlertTemplateArrayInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput
	ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateArrayOutput
}

type MetricRuleTemplateAlertTemplateArray []MetricRuleTemplateAlertTemplateInput

func (MetricRuleTemplateAlertTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateArray) ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput {
	return i.ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateArray) ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateArrayOutput)
}

type MetricRuleTemplateAlertTemplateOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateOutput) ToMetricRuleTemplateAlertTemplateOutput() MetricRuleTemplateAlertTemplateOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateOutput) ToMetricRuleTemplateAlertTemplateOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateOutput {
	return o
}

// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
func (o MetricRuleTemplateAlertTemplateOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.Category }).(pulumi.StringOutput)
}

// The information about the trigger condition based on the alert level. See the following `Block escalations`.
func (o MetricRuleTemplateAlertTemplateOutput) Escalations() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) *MetricRuleTemplateAlertTemplateEscalations {
		return v.Escalations
	}).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

// The name of the metric.
func (o MetricRuleTemplateAlertTemplateOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o MetricRuleTemplateAlertTemplateOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o MetricRuleTemplateAlertTemplateOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) string { return v.RuleName }).(pulumi.StringOutput)
}

// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
func (o MetricRuleTemplateAlertTemplateOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplate) *string { return v.Webhook }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateArrayOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricRuleTemplateAlertTemplate)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) ToMetricRuleTemplateAlertTemplateArrayOutput() MetricRuleTemplateAlertTemplateArrayOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) ToMetricRuleTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateArrayOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateArrayOutput) Index(i pulumi.IntInput) MetricRuleTemplateAlertTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricRuleTemplateAlertTemplate {
		return vs[0].([]MetricRuleTemplateAlertTemplate)[vs[1].(int)]
	}).(MetricRuleTemplateAlertTemplateOutput)
}

type MetricRuleTemplateAlertTemplateEscalations struct {
	// The condition for triggering critical-level alerts. See the following `Block critical`.
	Critical *MetricRuleTemplateAlertTemplateEscalationsCritical `pulumi:"critical"`
	// The condition for triggering info-level alerts. See the following `Block info`.
	Info *MetricRuleTemplateAlertTemplateEscalationsInfo `pulumi:"info"`
	// The condition for triggering warn-level alerts. See the following `Block warn`.
	Warn *MetricRuleTemplateAlertTemplateEscalationsWarn `pulumi:"warn"`
}

// MetricRuleTemplateAlertTemplateEscalationsInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsArgs and MetricRuleTemplateAlertTemplateEscalationsOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput
	ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput
}

type MetricRuleTemplateAlertTemplateEscalationsArgs struct {
	// The condition for triggering critical-level alerts. See the following `Block critical`.
	Critical MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput `pulumi:"critical"`
	// The condition for triggering info-level alerts. See the following `Block info`.
	Info MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput `pulumi:"info"`
	// The condition for triggering warn-level alerts. See the following `Block warn`.
	Warn MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput `pulumi:"warn"`
}

func (MetricRuleTemplateAlertTemplateEscalationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsArgs) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsOutput).ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsArgs, MetricRuleTemplateAlertTemplateEscalationsPtr and MetricRuleTemplateAlertTemplateEscalationsPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsPtrInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsArgs{...}
//
//  or:
//
//          nil
type MetricRuleTemplateAlertTemplateEscalationsPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsPtrType MetricRuleTemplateAlertTemplateEscalationsArgs

func MetricRuleTemplateAlertTemplateEscalationsPtr(v *MetricRuleTemplateAlertTemplateEscalationsArgs) MetricRuleTemplateAlertTemplateEscalationsPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsPtrType) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsPtrType) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsOutput() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalations {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsPtrOutput)
}

// The condition for triggering critical-level alerts. See the following `Block critical`.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Critical() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		return v.Critical
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The condition for triggering info-level alerts. See the following `Block info`.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Info() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		return v.Info
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The condition for triggering warn-level alerts. See the following `Block warn`.
func (o MetricRuleTemplateAlertTemplateEscalationsOutput) Warn() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		return v.Warn
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalations)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutput() MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) MetricRuleTemplateAlertTemplateEscalations {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalations
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsOutput)
}

// The condition for triggering critical-level alerts. See the following `Block critical`.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Critical() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The condition for triggering info-level alerts. See the following `Block info`.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Info() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The condition for triggering warn-level alerts. See the following `Block warn`.
func (o MetricRuleTemplateAlertTemplateEscalationsPtrOutput) Warn() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalations) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCritical struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsCriticalInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsCriticalArgs and MetricRuleTemplateAlertTemplateEscalationsCriticalOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsCriticalInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsCriticalInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput
	ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalArgs struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput).ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsCriticalArgs, MetricRuleTemplateAlertTemplateEscalationsCriticalPtr and MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsCriticalPtrType MetricRuleTemplateAlertTemplateEscalationsCriticalArgs

func MetricRuleTemplateAlertTemplateEscalationsCriticalPtr(v *MetricRuleTemplateAlertTemplateEscalationsCriticalArgs) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsCriticalPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsCriticalPtrType) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsCritical) *MetricRuleTemplateAlertTemplateEscalationsCritical {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsCritical) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsCritical)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput() MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsCriticalOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) MetricRuleTemplateAlertTemplateEscalationsCritical {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsCritical
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfo struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsInfoInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsInfoArgs and MetricRuleTemplateAlertTemplateEscalationsInfoOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInfoInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsInfoArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsInfoInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput
	ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput
}

type MetricRuleTemplateAlertTemplateEscalationsInfoArgs struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsInfoArgs) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput).ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsInfoArgs, MetricRuleTemplateAlertTemplateEscalationsInfoPtr and MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsInfoPtrType MetricRuleTemplateAlertTemplateEscalationsInfoArgs

func MetricRuleTemplateAlertTemplateEscalationsInfoPtr(v *MetricRuleTemplateAlertTemplateEscalationsInfoArgs) MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsInfoPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsInfoPtrType) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfoOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutput() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsInfo) *MetricRuleTemplateAlertTemplateEscalationsInfo {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsInfo) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsInfo)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput() MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsInfoPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsInfoOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) MetricRuleTemplateAlertTemplateEscalationsInfo {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsInfo
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsInfoOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarn struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times *string `pulumi:"times"`
}

// MetricRuleTemplateAlertTemplateEscalationsWarnInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsWarnArgs and MetricRuleTemplateAlertTemplateEscalationsWarnOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsWarnInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsWarnArgs{...}
type MetricRuleTemplateAlertTemplateEscalationsWarnInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput
	ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput
}

type MetricRuleTemplateAlertTemplateEscalationsWarnArgs struct {
	// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for critical-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for critical-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
	Times pulumi.StringPtrInput `pulumi:"times"`
}

func (MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput)
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i MetricRuleTemplateAlertTemplateEscalationsWarnArgs) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput).ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx)
}

// MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput is an input type that accepts MetricRuleTemplateAlertTemplateEscalationsWarnArgs, MetricRuleTemplateAlertTemplateEscalationsWarnPtr and MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput` via:
//
//          MetricRuleTemplateAlertTemplateEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput interface {
	pulumi.Input

	ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput
	ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput
}

type metricRuleTemplateAlertTemplateEscalationsWarnPtrType MetricRuleTemplateAlertTemplateEscalationsWarnArgs

func MetricRuleTemplateAlertTemplateEscalationsWarnPtr(v *MetricRuleTemplateAlertTemplateEscalationsWarnArgs) MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput {
	return (*metricRuleTemplateAlertTemplateEscalationsWarnPtrType)(v)
}

func (*metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (i *metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return i.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *metricRuleTemplateAlertTemplateEscalationsWarnPtrType) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarnOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutput() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricRuleTemplateAlertTemplateEscalationsWarn) *MetricRuleTemplateAlertTemplateEscalationsWarn {
		return &v
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricRuleTemplateAlertTemplateEscalationsWarn) *string { return v.Times }).(pulumi.StringPtrOutput)
}

type MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricRuleTemplateAlertTemplateEscalationsWarn)(nil)).Elem()
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput() MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ToMetricRuleTemplateAlertTemplateEscalationsWarnPtrOutputWithContext(ctx context.Context) MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput {
	return o
}

func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Elem() MetricRuleTemplateAlertTemplateEscalationsWarnOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) MetricRuleTemplateAlertTemplateEscalationsWarn {
		if v != nil {
			return *v
		}
		var ret MetricRuleTemplateAlertTemplateEscalationsWarn
		return ret
	}).(MetricRuleTemplateAlertTemplateEscalationsWarnOutput)
}

// The comparison operator of the threshold for critical-level alerts. Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for critical-level alerts.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a critical-level alert is triggered.
func (o MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput) Times() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricRuleTemplateAlertTemplateEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringPtrOutput)
}

type MonitorGroupInstancesInstance struct {
	// The category of instance.
	Category string `pulumi:"category"`
	// The id of instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The region id of instance.
	RegionId string `pulumi:"regionId"`
}

// MonitorGroupInstancesInstanceInput is an input type that accepts MonitorGroupInstancesInstanceArgs and MonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceInput` via:
//
//          MonitorGroupInstancesInstanceArgs{...}
type MonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput
	ToMonitorGroupInstancesInstanceOutputWithContext(context.Context) MonitorGroupInstancesInstanceOutput
}

type MonitorGroupInstancesInstanceArgs struct {
	// The category of instance.
	Category pulumi.StringInput `pulumi:"category"`
	// The id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The region id of instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (MonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return i.ToMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceOutput)
}

// MonitorGroupInstancesInstanceArrayInput is an input type that accepts MonitorGroupInstancesInstanceArray and MonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceArrayInput` via:
//
//          MonitorGroupInstancesInstanceArray{ MonitorGroupInstancesInstanceArgs{...} }
type MonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput
	ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) MonitorGroupInstancesInstanceArrayOutput
}

type MonitorGroupInstancesInstanceArray []MonitorGroupInstancesInstanceInput

func (MonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return i.ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceArrayOutput)
}

type MonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return o
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return o
}

// The category of instance.
func (o MonitorGroupInstancesInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.Category }).(pulumi.StringOutput)
}

// The id of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The region id of instance.
func (o MonitorGroupInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type MonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) MonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorGroupInstancesInstance {
		return vs[0].([]MonitorGroupInstancesInstance)[vs[1].(int)]
	}).(MonitorGroupInstancesInstanceOutput)
}

type SiteMonitorIspCity struct {
	City string `pulumi:"city"`
	Isp  string `pulumi:"isp"`
}

// SiteMonitorIspCityInput is an input type that accepts SiteMonitorIspCityArgs and SiteMonitorIspCityOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityInput` via:
//
//          SiteMonitorIspCityArgs{...}
type SiteMonitorIspCityInput interface {
	pulumi.Input

	ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput
	ToSiteMonitorIspCityOutputWithContext(context.Context) SiteMonitorIspCityOutput
}

type SiteMonitorIspCityArgs struct {
	City pulumi.StringInput `pulumi:"city"`
	Isp  pulumi.StringInput `pulumi:"isp"`
}

func (SiteMonitorIspCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return i.ToSiteMonitorIspCityOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityOutput)
}

// SiteMonitorIspCityArrayInput is an input type that accepts SiteMonitorIspCityArray and SiteMonitorIspCityArrayOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityArrayInput` via:
//
//          SiteMonitorIspCityArray{ SiteMonitorIspCityArgs{...} }
type SiteMonitorIspCityArrayInput interface {
	pulumi.Input

	ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput
	ToSiteMonitorIspCityArrayOutputWithContext(context.Context) SiteMonitorIspCityArrayOutput
}

type SiteMonitorIspCityArray []SiteMonitorIspCityInput

func (SiteMonitorIspCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return i.ToSiteMonitorIspCityArrayOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityArrayOutput)
}

type SiteMonitorIspCityOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.City }).(pulumi.StringOutput)
}

func (o SiteMonitorIspCityOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.Isp }).(pulumi.StringOutput)
}

type SiteMonitorIspCityArrayOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) Index(i pulumi.IntInput) SiteMonitorIspCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteMonitorIspCity {
		return vs[0].([]SiteMonitorIspCity)[vs[1].(int)]
	}).(SiteMonitorIspCityOutput)
}

type GetAlarmContactGroupsGroup struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName string `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts []string `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe string `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed bool `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id string `pulumi:"id"`
}

// GetAlarmContactGroupsGroupInput is an input type that accepts GetAlarmContactGroupsGroupArgs and GetAlarmContactGroupsGroupOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupInput` via:
//
//          GetAlarmContactGroupsGroupArgs{...}
type GetAlarmContactGroupsGroupInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput
	ToGetAlarmContactGroupsGroupOutputWithContext(context.Context) GetAlarmContactGroupsGroupOutput
}

type GetAlarmContactGroupsGroupArgs struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName pulumi.StringInput `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts pulumi.StringArrayInput `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe pulumi.StringInput `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed pulumi.BoolInput `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAlarmContactGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return i.ToGetAlarmContactGroupsGroupOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupOutput)
}

// GetAlarmContactGroupsGroupArrayInput is an input type that accepts GetAlarmContactGroupsGroupArray and GetAlarmContactGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupArrayInput` via:
//
//          GetAlarmContactGroupsGroupArray{ GetAlarmContactGroupsGroupArgs{...} }
type GetAlarmContactGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput
	ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Context) GetAlarmContactGroupsGroupArrayOutput
}

type GetAlarmContactGroupsGroupArray []GetAlarmContactGroupsGroupInput

func (GetAlarmContactGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return i.ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupArrayOutput)
}

type GetAlarmContactGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return o
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return o
}

// The name of Alarm Contact Group.
func (o GetAlarmContactGroupsGroupOutput) AlarmContactGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.AlarmContactGroupName }).(pulumi.StringOutput)
}

// The alarm contacts in the alarm group.
func (o GetAlarmContactGroupsGroupOutput) Contacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) []string { return v.Contacts }).(pulumi.StringArrayOutput)
}

// The description of the Alarm Group.
func (o GetAlarmContactGroupsGroupOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Describe }).(pulumi.StringOutput)
}

// Indicates whether the alarm group subscribes to weekly reports.
func (o GetAlarmContactGroupsGroupOutput) EnableSubscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) bool { return v.EnableSubscribed }).(pulumi.BoolOutput)
}

// The ID of the CMS.
func (o GetAlarmContactGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetAlarmContactGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAlarmContactGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactGroupsGroup {
		return vs[0].([]GetAlarmContactGroupsGroup)[vs[1].(int)]
	}).(GetAlarmContactGroupsGroupOutput)
}

type GetAlarmContactsContact struct {
	// The name of the alarm contact.
	AlarmContactName string `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim string `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook string `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail string `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms string `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim string `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook string `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail string `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms string `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups []string `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe string `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   string `pulumi:"id"`
	Lang string `pulumi:"lang"`
}

// GetAlarmContactsContactInput is an input type that accepts GetAlarmContactsContactArgs and GetAlarmContactsContactOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactInput` via:
//
//          GetAlarmContactsContactArgs{...}
type GetAlarmContactsContactInput interface {
	pulumi.Input

	ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput
	ToGetAlarmContactsContactOutputWithContext(context.Context) GetAlarmContactsContactOutput
}

type GetAlarmContactsContactArgs struct {
	// The name of the alarm contact.
	AlarmContactName pulumi.StringInput `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim pulumi.StringInput `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook pulumi.StringInput `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail pulumi.StringInput `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms pulumi.StringInput `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim pulumi.StringInput `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook pulumi.StringInput `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail pulumi.StringInput `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms pulumi.StringInput `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe pulumi.StringInput `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   pulumi.StringInput `pulumi:"id"`
	Lang pulumi.StringInput `pulumi:"lang"`
}

func (GetAlarmContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return i.ToGetAlarmContactsContactOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactOutput)
}

// GetAlarmContactsContactArrayInput is an input type that accepts GetAlarmContactsContactArray and GetAlarmContactsContactArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactArrayInput` via:
//
//          GetAlarmContactsContactArray{ GetAlarmContactsContactArgs{...} }
type GetAlarmContactsContactArrayInput interface {
	pulumi.Input

	ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput
	ToGetAlarmContactsContactArrayOutputWithContext(context.Context) GetAlarmContactsContactArrayOutput
}

type GetAlarmContactsContactArray []GetAlarmContactsContactInput

func (GetAlarmContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return i.ToGetAlarmContactsContactArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactArrayOutput)
}

type GetAlarmContactsContactOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return o
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return o
}

// The name of the alarm contact.
func (o GetAlarmContactsContactOutput) AlarmContactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.AlarmContactName }).(pulumi.StringOutput)
}

// The TradeManager ID of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsAliim }).(pulumi.StringOutput)
}

// The webhook URL of the DingTalk chatbot.
func (o GetAlarmContactsContactOutput) ChannelsDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsDingWebHook }).(pulumi.StringOutput)
}

// The email address of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsMail }).(pulumi.StringOutput)
}

// The phone number of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsSms }).(pulumi.StringOutput)
}

// Indicates whether the TradeManager ID is valid.
func (o GetAlarmContactsContactOutput) ChannelsStateAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateAliim }).(pulumi.StringOutput)
}

// Indicates whether the DingTalk chatbot is normal.
func (o GetAlarmContactsContactOutput) ChannelsStateDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateDingWebHook }).(pulumi.StringOutput)
}

// The status of the email address.
func (o GetAlarmContactsContactOutput) ChannelsStateMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateMail }).(pulumi.StringOutput)
}

// The status of the phone number.
func (o GetAlarmContactsContactOutput) ChannelsStatusSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStatusSms }).(pulumi.StringOutput)
}

// The alert groups to which the alarm contact is added.
func (o GetAlarmContactsContactOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The description of the alarm contact.
func (o GetAlarmContactsContactOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Describe }).(pulumi.StringOutput)
}

// The ID of the alarm contact.
func (o GetAlarmContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmContactsContactOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Lang }).(pulumi.StringOutput)
}

type GetAlarmContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) Index(i pulumi.IntInput) GetAlarmContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactsContact {
		return vs[0].([]GetAlarmContactsContact)[vs[1].(int)]
	}).(GetAlarmContactsContactOutput)
}

type GetDynamicTagGroupsGroup struct {
	// The ID of the tag rule.
	DynamicTagRuleId string `pulumi:"dynamicTagRuleId"`
	// The ID of the Dynamic Tag Group.
	Id string `pulumi:"id"`
	// The relationship between conditional expressions. Valid values: `and`, `or`.
	MatchExpressFilterRelation string `pulumi:"matchExpressFilterRelation"`
	// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
	MatchExpresses []GetDynamicTagGroupsGroupMatchExpress `pulumi:"matchExpresses"`
	// The status of the resource. Valid values: `RUNNING`, `FINISH`.
	Status string `pulumi:"status"`
	// The tag key of the tag.
	TagKey string `pulumi:"tagKey"`
}

// GetDynamicTagGroupsGroupInput is an input type that accepts GetDynamicTagGroupsGroupArgs and GetDynamicTagGroupsGroupOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupInput` via:
//
//          GetDynamicTagGroupsGroupArgs{...}
type GetDynamicTagGroupsGroupInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput
	ToGetDynamicTagGroupsGroupOutputWithContext(context.Context) GetDynamicTagGroupsGroupOutput
}

type GetDynamicTagGroupsGroupArgs struct {
	// The ID of the tag rule.
	DynamicTagRuleId pulumi.StringInput `pulumi:"dynamicTagRuleId"`
	// The ID of the Dynamic Tag Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The relationship between conditional expressions. Valid values: `and`, `or`.
	MatchExpressFilterRelation pulumi.StringInput `pulumi:"matchExpressFilterRelation"`
	// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
	MatchExpresses GetDynamicTagGroupsGroupMatchExpressArrayInput `pulumi:"matchExpresses"`
	// The status of the resource. Valid values: `RUNNING`, `FINISH`.
	Status pulumi.StringInput `pulumi:"status"`
	// The tag key of the tag.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
}

func (GetDynamicTagGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupArgs) ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput {
	return i.ToGetDynamicTagGroupsGroupOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupArgs) ToGetDynamicTagGroupsGroupOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupOutput)
}

// GetDynamicTagGroupsGroupArrayInput is an input type that accepts GetDynamicTagGroupsGroupArray and GetDynamicTagGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupArrayInput` via:
//
//          GetDynamicTagGroupsGroupArray{ GetDynamicTagGroupsGroupArgs{...} }
type GetDynamicTagGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput
	ToGetDynamicTagGroupsGroupArrayOutputWithContext(context.Context) GetDynamicTagGroupsGroupArrayOutput
}

type GetDynamicTagGroupsGroupArray []GetDynamicTagGroupsGroupInput

func (GetDynamicTagGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupArray) ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput {
	return i.ToGetDynamicTagGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupArray) ToGetDynamicTagGroupsGroupArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupArrayOutput)
}

type GetDynamicTagGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupOutput) ToGetDynamicTagGroupsGroupOutput() GetDynamicTagGroupsGroupOutput {
	return o
}

func (o GetDynamicTagGroupsGroupOutput) ToGetDynamicTagGroupsGroupOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupOutput {
	return o
}

// The ID of the tag rule.
func (o GetDynamicTagGroupsGroupOutput) DynamicTagRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.DynamicTagRuleId }).(pulumi.StringOutput)
}

// The ID of the Dynamic Tag Group.
func (o GetDynamicTagGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The relationship between conditional expressions. Valid values: `and`, `or`.
func (o GetDynamicTagGroupsGroupOutput) MatchExpressFilterRelation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.MatchExpressFilterRelation }).(pulumi.StringOutput)
}

// The label generates a matching expression that applies the grouping. See the following `Block matchExpress`.
func (o GetDynamicTagGroupsGroupOutput) MatchExpresses() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) []GetDynamicTagGroupsGroupMatchExpress { return v.MatchExpresses }).(GetDynamicTagGroupsGroupMatchExpressArrayOutput)
}

// The status of the resource. Valid values: `RUNNING`, `FINISH`.
func (o GetDynamicTagGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The tag key of the tag.
func (o GetDynamicTagGroupsGroupOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroup) string { return v.TagKey }).(pulumi.StringOutput)
}

type GetDynamicTagGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroup)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupArrayOutput) ToGetDynamicTagGroupsGroupArrayOutput() GetDynamicTagGroupsGroupArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupArrayOutput) ToGetDynamicTagGroupsGroupArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDynamicTagGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDynamicTagGroupsGroup {
		return vs[0].([]GetDynamicTagGroupsGroup)[vs[1].(int)]
	}).(GetDynamicTagGroupsGroupOutput)
}

type GetDynamicTagGroupsGroupMatchExpress struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue string `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction string `pulumi:"tagValueMatchFunction"`
}

// GetDynamicTagGroupsGroupMatchExpressInput is an input type that accepts GetDynamicTagGroupsGroupMatchExpressArgs and GetDynamicTagGroupsGroupMatchExpressOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupMatchExpressInput` via:
//
//          GetDynamicTagGroupsGroupMatchExpressArgs{...}
type GetDynamicTagGroupsGroupMatchExpressInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput
	ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(context.Context) GetDynamicTagGroupsGroupMatchExpressOutput
}

type GetDynamicTagGroupsGroupMatchExpressArgs struct {
	// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
	// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	TagValueMatchFunction pulumi.StringInput `pulumi:"tagValueMatchFunction"`
}

func (GetDynamicTagGroupsGroupMatchExpressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupMatchExpressArgs) ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput {
	return i.ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupMatchExpressArgs) ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupMatchExpressOutput)
}

// GetDynamicTagGroupsGroupMatchExpressArrayInput is an input type that accepts GetDynamicTagGroupsGroupMatchExpressArray and GetDynamicTagGroupsGroupMatchExpressArrayOutput values.
// You can construct a concrete instance of `GetDynamicTagGroupsGroupMatchExpressArrayInput` via:
//
//          GetDynamicTagGroupsGroupMatchExpressArray{ GetDynamicTagGroupsGroupMatchExpressArgs{...} }
type GetDynamicTagGroupsGroupMatchExpressArrayInput interface {
	pulumi.Input

	ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput
	ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput
}

type GetDynamicTagGroupsGroupMatchExpressArray []GetDynamicTagGroupsGroupMatchExpressInput

func (GetDynamicTagGroupsGroupMatchExpressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (i GetDynamicTagGroupsGroupMatchExpressArray) ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return i.ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(context.Background())
}

func (i GetDynamicTagGroupsGroupMatchExpressArray) ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDynamicTagGroupsGroupMatchExpressArrayOutput)
}

type GetDynamicTagGroupsGroupMatchExpressOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupMatchExpressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupMatchExpressOutput) ToGetDynamicTagGroupsGroupMatchExpressOutput() GetDynamicTagGroupsGroupMatchExpressOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressOutput) ToGetDynamicTagGroupsGroupMatchExpressOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressOutput {
	return o
}

// The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
func (o GetDynamicTagGroupsGroupMatchExpressOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroupMatchExpress) string { return v.TagValue }).(pulumi.StringOutput)
}

// Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
func (o GetDynamicTagGroupsGroupMatchExpressOutput) TagValueMatchFunction() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTagGroupsGroupMatchExpress) string { return v.TagValueMatchFunction }).(pulumi.StringOutput)
}

type GetDynamicTagGroupsGroupMatchExpressArrayOutput struct{ *pulumi.OutputState }

func (GetDynamicTagGroupsGroupMatchExpressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDynamicTagGroupsGroupMatchExpress)(nil)).Elem()
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) ToGetDynamicTagGroupsGroupMatchExpressArrayOutput() GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) ToGetDynamicTagGroupsGroupMatchExpressArrayOutputWithContext(ctx context.Context) GetDynamicTagGroupsGroupMatchExpressArrayOutput {
	return o
}

func (o GetDynamicTagGroupsGroupMatchExpressArrayOutput) Index(i pulumi.IntInput) GetDynamicTagGroupsGroupMatchExpressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDynamicTagGroupsGroupMatchExpress {
		return vs[0].([]GetDynamicTagGroupsGroupMatchExpress)[vs[1].(int)]
	}).(GetDynamicTagGroupsGroupMatchExpressOutput)
}

type GetGroupMetricRulesRule struct {
	// Alarm contact group.
	ContactGroups string `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions string `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval string `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject string `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState bool `pulumi:"enableState"`
	// Alarm level.
	Escalations []GetGroupMetricRulesRuleEscalation `pulumi:"escalations"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName string `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id string `pulumi:"id"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval string `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period int `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources string `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId string `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime int `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType string `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status string `pulumi:"status"`
	// The callback URL.
	Webhook string `pulumi:"webhook"`
}

// GetGroupMetricRulesRuleInput is an input type that accepts GetGroupMetricRulesRuleArgs and GetGroupMetricRulesRuleOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleInput` via:
//
//          GetGroupMetricRulesRuleArgs{...}
type GetGroupMetricRulesRuleInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput
	ToGetGroupMetricRulesRuleOutputWithContext(context.Context) GetGroupMetricRulesRuleOutput
}

type GetGroupMetricRulesRuleArgs struct {
	// Alarm contact group.
	ContactGroups pulumi.StringInput `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions pulumi.StringInput `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval pulumi.StringInput `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject pulumi.StringInput `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState pulumi.BoolInput `pulumi:"enableState"`
	// Alarm level.
	Escalations GetGroupMetricRulesRuleEscalationArrayInput `pulumi:"escalations"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName pulumi.StringInput `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval pulumi.StringInput `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period pulumi.IntInput `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources pulumi.StringInput `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime pulumi.IntInput `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status pulumi.StringInput `pulumi:"status"`
	// The callback URL.
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (GetGroupMetricRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return i.ToGetGroupMetricRulesRuleOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleOutput)
}

// GetGroupMetricRulesRuleArrayInput is an input type that accepts GetGroupMetricRulesRuleArray and GetGroupMetricRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleArrayInput` via:
//
//          GetGroupMetricRulesRuleArray{ GetGroupMetricRulesRuleArgs{...} }
type GetGroupMetricRulesRuleArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput
	ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleArrayOutput
}

type GetGroupMetricRulesRuleArray []GetGroupMetricRulesRuleInput

func (GetGroupMetricRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return i.ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleArrayOutput)
}

type GetGroupMetricRulesRuleOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return o
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return o
}

// Alarm contact group.
func (o GetGroupMetricRulesRuleOutput) ContactGroups() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.ContactGroups }).(pulumi.StringOutput)
}

// The dimensions that specify the resources to be associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Dimensions() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Dimensions }).(pulumi.StringOutput)
}

// The time period during which the alert rule is effective.
func (o GetGroupMetricRulesRuleOutput) EffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EffectiveInterval }).(pulumi.StringOutput)
}

// The subject of the alert notification email.
func (o GetGroupMetricRulesRuleOutput) EmailSubject() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EmailSubject }).(pulumi.StringOutput)
}

// Indicates whether the alert rule is enabled.
func (o GetGroupMetricRulesRuleOutput) EnableState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) bool { return v.EnableState }).(pulumi.BoolOutput)
}

// Alarm level.
func (o GetGroupMetricRulesRuleOutput) Escalations() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) []GetGroupMetricRulesRuleEscalation { return v.Escalations }).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

// The ID of the application group.
func (o GetGroupMetricRulesRuleOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o GetGroupMetricRulesRuleOutput) GroupMetricRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupMetricRuleName }).(pulumi.StringOutput)
}

// The ID of the Group Metric Rule.
func (o GetGroupMetricRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the metric.
func (o GetGroupMetricRulesRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o GetGroupMetricRulesRuleOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Namespace }).(pulumi.StringOutput)
}

// The time period during which the alert rule is ineffective.
func (o GetGroupMetricRulesRuleOutput) NoEffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.NoEffectiveInterval }).(pulumi.StringOutput)
}

// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
func (o GetGroupMetricRulesRuleOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.Period }).(pulumi.IntOutput)
}

// The resources that are associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Resources() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Resources }).(pulumi.StringOutput)
}

// The ID of the alert rule.
func (o GetGroupMetricRulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
func (o GetGroupMetricRulesRuleOutput) SilenceTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.SilenceTime }).(pulumi.IntOutput)
}

// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
func (o GetGroupMetricRulesRuleOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.SourceType }).(pulumi.StringOutput)
}

// The status of Group Metric Rule..
func (o GetGroupMetricRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The callback URL.
func (o GetGroupMetricRulesRuleOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Webhook }).(pulumi.StringOutput)
}

type GetGroupMetricRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRule {
		return vs[0].([]GetGroupMetricRulesRule)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleOutput)
}

type GetGroupMetricRulesRuleEscalation struct {
	// The critical level.
	Criticals []GetGroupMetricRulesRuleEscalationCritical `pulumi:"criticals"`
	// The info level.
	Infos []GetGroupMetricRulesRuleEscalationInfo `pulumi:"infos"`
	// The warn level.
	Warns []GetGroupMetricRulesRuleEscalationWarn `pulumi:"warns"`
}

// GetGroupMetricRulesRuleEscalationInput is an input type that accepts GetGroupMetricRulesRuleEscalationArgs and GetGroupMetricRulesRuleEscalationOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInput` via:
//
//          GetGroupMetricRulesRuleEscalationArgs{...}
type GetGroupMetricRulesRuleEscalationInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput
	ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationOutput
}

type GetGroupMetricRulesRuleEscalationArgs struct {
	// The critical level.
	Criticals GetGroupMetricRulesRuleEscalationCriticalArrayInput `pulumi:"criticals"`
	// The info level.
	Infos GetGroupMetricRulesRuleEscalationInfoArrayInput `pulumi:"infos"`
	// The warn level.
	Warns GetGroupMetricRulesRuleEscalationWarnArrayInput `pulumi:"warns"`
}

func (GetGroupMetricRulesRuleEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return i.ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationOutput)
}

// GetGroupMetricRulesRuleEscalationArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationArray and GetGroupMetricRulesRuleEscalationArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationArray{ GetGroupMetricRulesRuleEscalationArgs{...} }
type GetGroupMetricRulesRuleEscalationArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput
	ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationArrayOutput
}

type GetGroupMetricRulesRuleEscalationArray []GetGroupMetricRulesRuleEscalationInput

func (GetGroupMetricRulesRuleEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

type GetGroupMetricRulesRuleEscalationOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return o
}

// The critical level.
func (o GetGroupMetricRulesRuleEscalationOutput) Criticals() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationCritical {
		return v.Criticals
	}).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

// The info level.
func (o GetGroupMetricRulesRuleEscalationOutput) Infos() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationInfo { return v.Infos }).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

// The warn level.
func (o GetGroupMetricRulesRuleEscalationOutput) Warns() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationWarn { return v.Warns }).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalation {
		return vs[0].([]GetGroupMetricRulesRuleEscalation)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationOutput)
}

type GetGroupMetricRulesRuleEscalationCritical struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationCriticalInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArgs and GetGroupMetricRulesRuleEscalationCriticalOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalInput` via:
//
//          GetGroupMetricRulesRuleEscalationCriticalArgs{...}
type GetGroupMetricRulesRuleEscalationCriticalInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput
	ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

// GetGroupMetricRulesRuleEscalationCriticalArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArray and GetGroupMetricRulesRuleEscalationCriticalArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationCriticalArray{ GetGroupMetricRulesRuleEscalationCriticalArgs{...} }
type GetGroupMetricRulesRuleEscalationCriticalArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput
	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArray []GetGroupMetricRulesRuleEscalationCriticalInput

func (GetGroupMetricRulesRuleEscalationCriticalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationCritical {
		return vs[0].([]GetGroupMetricRulesRuleEscalationCritical)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

type GetGroupMetricRulesRuleEscalationInfo struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationInfoInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArgs and GetGroupMetricRulesRuleEscalationInfoOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoInput` via:
//
//          GetGroupMetricRulesRuleEscalationInfoArgs{...}
type GetGroupMetricRulesRuleEscalationInfoInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput
	ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoOutput
}

type GetGroupMetricRulesRuleEscalationInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

// GetGroupMetricRulesRuleEscalationInfoArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArray and GetGroupMetricRulesRuleEscalationInfoArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationInfoArray{ GetGroupMetricRulesRuleEscalationInfoArgs{...} }
type GetGroupMetricRulesRuleEscalationInfoArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput
	ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput
}

type GetGroupMetricRulesRuleEscalationInfoArray []GetGroupMetricRulesRuleEscalationInfoInput

func (GetGroupMetricRulesRuleEscalationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

type GetGroupMetricRulesRuleEscalationInfoOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationInfo {
		return vs[0].([]GetGroupMetricRulesRuleEscalationInfo)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

type GetGroupMetricRulesRuleEscalationWarn struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationWarnInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArgs and GetGroupMetricRulesRuleEscalationWarnOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnInput` via:
//
//          GetGroupMetricRulesRuleEscalationWarnArgs{...}
type GetGroupMetricRulesRuleEscalationWarnInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput
	ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnOutput
}

type GetGroupMetricRulesRuleEscalationWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

// GetGroupMetricRulesRuleEscalationWarnArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArray and GetGroupMetricRulesRuleEscalationWarnArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationWarnArray{ GetGroupMetricRulesRuleEscalationWarnArgs{...} }
type GetGroupMetricRulesRuleEscalationWarnArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput
	ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput
}

type GetGroupMetricRulesRuleEscalationWarnArray []GetGroupMetricRulesRuleEscalationWarnInput

func (GetGroupMetricRulesRuleEscalationWarnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationWarnOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationWarnArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationWarn {
		return vs[0].([]GetGroupMetricRulesRuleEscalationWarn)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

type GetMetricRuleTemplatesTemplate struct {
	// The details of alert rules that are generated based on the alert template.
	AlertTemplates []GetMetricRuleTemplatesTemplateAlertTemplate `pulumi:"alertTemplates"`
	// The description of the alert template.
	Description string `pulumi:"description"`
	// GroupId.
	GroupId string `pulumi:"groupId"`
	// The ID of the Metric Rule Template.
	Id string `pulumi:"id"`
	// The name of the alert template.
	MetricRuleTemplateName string `pulumi:"metricRuleTemplateName"`
	// The version of the alert template.
	RestVersion string `pulumi:"restVersion"`
	// The ID of the alert template.
	TemplateId string `pulumi:"templateId"`
}

// GetMetricRuleTemplatesTemplateInput is an input type that accepts GetMetricRuleTemplatesTemplateArgs and GetMetricRuleTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateInput` via:
//
//          GetMetricRuleTemplatesTemplateArgs{...}
type GetMetricRuleTemplatesTemplateInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput
	ToGetMetricRuleTemplatesTemplateOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateOutput
}

type GetMetricRuleTemplatesTemplateArgs struct {
	// The details of alert rules that are generated based on the alert template.
	AlertTemplates GetMetricRuleTemplatesTemplateAlertTemplateArrayInput `pulumi:"alertTemplates"`
	// The description of the alert template.
	Description pulumi.StringInput `pulumi:"description"`
	// GroupId.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Metric Rule Template.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the alert template.
	MetricRuleTemplateName pulumi.StringInput `pulumi:"metricRuleTemplateName"`
	// The version of the alert template.
	RestVersion pulumi.StringInput `pulumi:"restVersion"`
	// The ID of the alert template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
}

func (GetMetricRuleTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateArgs) ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput {
	return i.ToGetMetricRuleTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateArgs) ToGetMetricRuleTemplatesTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateOutput)
}

// GetMetricRuleTemplatesTemplateArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateArray and GetMetricRuleTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateArray{ GetMetricRuleTemplatesTemplateArgs{...} }
type GetMetricRuleTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput
	ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateArrayOutput
}

type GetMetricRuleTemplatesTemplateArray []GetMetricRuleTemplatesTemplateInput

func (GetMetricRuleTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateArray) ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateArray) ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateArrayOutput)
}

type GetMetricRuleTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateOutput) ToGetMetricRuleTemplatesTemplateOutput() GetMetricRuleTemplatesTemplateOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateOutput) ToGetMetricRuleTemplatesTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateOutput {
	return o
}

// The details of alert rules that are generated based on the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) AlertTemplates() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) []GetMetricRuleTemplatesTemplateAlertTemplate {
		return v.AlertTemplates
	}).(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput)
}

// The description of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// GroupId.
func (o GetMetricRuleTemplatesTemplateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Metric Rule Template.
func (o GetMetricRuleTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) MetricRuleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.MetricRuleTemplateName }).(pulumi.StringOutput)
}

// The version of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) RestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.RestVersion }).(pulumi.StringOutput)
}

// The ID of the alert template.
func (o GetMetricRuleTemplatesTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateArrayOutput() GetMetricRuleTemplatesTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplate {
		return vs[0].([]GetMetricRuleTemplatesTemplate)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplate struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category string `pulumi:"category"`
	// The information about the trigger condition based on the alert level.
	Escalations []GetMetricRuleTemplatesTemplateAlertTemplateEscalation `pulumi:"escalations"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName string `pulumi:"ruleName"`
	Selector string `pulumi:"selector"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook string `pulumi:"webhook"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateArgs and GetMetricRuleTemplatesTemplateAlertTemplateOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateArgs struct {
	// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
	Category pulumi.StringInput `pulumi:"category"`
	// The information about the trigger condition based on the alert level.
	Escalations GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput `pulumi:"escalations"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name of the alert rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	Selector pulumi.StringInput `pulumi:"selector"`
	// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateArray and GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateArray{ GetMetricRuleTemplatesTemplateAlertTemplateArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateArray []GetMetricRuleTemplatesTemplateAlertTemplateInput

func (GetMetricRuleTemplatesTemplateAlertTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArray) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateArray) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateOutput() GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return o
}

// The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iotEdge`, `kvstoreSharding`, `kvstoreSplitrw`, `kvstoreStandard`, `memcache`, `mns`, `mongodb`, `mongodbCluster`, `mongodbSharding`, `mqTopic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Category }).(pulumi.StringOutput)
}

// The information about the trigger condition based on the alert level.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Escalations() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) []GetMetricRuleTemplatesTemplateAlertTemplateEscalation {
		return v.Escalations
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput)
}

// The name of the metric.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Selector }).(pulumi.StringOutput)
}

// The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
func (o GetMetricRuleTemplatesTemplateAlertTemplateOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplate) string { return v.Webhook }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplate)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplate {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplate)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalation struct {
	// The condition for triggering critical-level alerts.
	Criticals []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical `pulumi:"criticals"`
	// The condition for triggering info-level alerts.
	Infos []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo `pulumi:"infos"`
	// The condition for triggering warn-level alerts.
	Warns []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn `pulumi:"warns"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs struct {
	// The condition for triggering critical-level alerts.
	Criticals GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput `pulumi:"criticals"`
	// The condition for triggering info-level alerts.
	Infos GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput `pulumi:"infos"`
	// The condition for triggering warn-level alerts.
	Warns GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput `pulumi:"warns"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return o
}

// The condition for triggering critical-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Criticals() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical {
		return v.Criticals
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput)
}

// The condition for triggering info-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Infos() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo {
		return v.Infos
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput)
}

// The condition for triggering warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput) Warns() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalation) []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn {
		return v.Warns
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalation {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalation)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string {
		return v.ComparisonOperator
	}).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationCritical)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfo)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times string `pulumi:"times"`
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs and GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{...}
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level
	// alert is triggered.
	Times pulumi.StringInput `pulumi:"times"`
}

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput)
}

// GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput is an input type that accepts GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray and GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput values.
// You can construct a concrete instance of `GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput` via:
//
//          GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray{ GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{...} }
type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput interface {
	pulumi.Input

	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput
	ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray []GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return i.ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(context.Background())
}

func (i GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.Valid values: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanOrEqualToThreshold`, `LessThanThreshold`, `NotEqualToThreshold`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level
// alert is triggered.
func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput) Times() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn) string { return v.Times }).(pulumi.StringOutput)
}

type GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput struct{ *pulumi.OutputState }

func (GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)(nil)).Elem()
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput() GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) ToGetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutputWithContext(ctx context.Context) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput {
	return o
}

func (o GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput) Index(i pulumi.IntInput) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn {
		return vs[0].([]GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarn)[vs[1].(int)]
	}).(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput)
}

type GetMonitorGroupInstancesInstance struct {
	Instances []GetMonitorGroupInstancesInstanceInstance `pulumi:"instances"`
}

// GetMonitorGroupInstancesInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceArgs and GetMonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInput` via:
//
//          GetMonitorGroupInstancesInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput
	ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceOutput
}

type GetMonitorGroupInstancesInstanceArgs struct {
	Instances GetMonitorGroupInstancesInstanceInstanceArrayInput `pulumi:"instances"`
}

func (GetMonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceOutput)
}

// GetMonitorGroupInstancesInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceArray and GetMonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceArrayInput` via:
//
//          GetMonitorGroupInstancesInstanceArray{ GetMonitorGroupInstancesInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceArray []GetMonitorGroupInstancesInstanceInput

func (GetMonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) Instances() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstance) []GetMonitorGroupInstancesInstanceInstance {
		return v.Instances
	}).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstance {
		return vs[0].([]GetMonitorGroupInstancesInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceOutput)
}

type GetMonitorGroupInstancesInstanceInstance struct {
	Category     string `pulumi:"category"`
	InstanceId   string `pulumi:"instanceId"`
	InstanceName string `pulumi:"instanceName"`
	RegionId     string `pulumi:"regionId"`
}

// GetMonitorGroupInstancesInstanceInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArgs and GetMonitorGroupInstancesInstanceInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceInput` via:
//
//          GetMonitorGroupInstancesInstanceInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput
	ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceOutput
}

type GetMonitorGroupInstancesInstanceInstanceArgs struct {
	Category     pulumi.StringInput `pulumi:"category"`
	InstanceId   pulumi.StringInput `pulumi:"instanceId"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	RegionId     pulumi.StringInput `pulumi:"regionId"`
}

func (GetMonitorGroupInstancesInstanceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

// GetMonitorGroupInstancesInstanceInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArray and GetMonitorGroupInstancesInstanceInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceArrayInput` via:
//
//          GetMonitorGroupInstancesInstanceInstanceArray{ GetMonitorGroupInstancesInstanceInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceInstanceArray []GetMonitorGroupInstancesInstanceInstanceInput

func (GetMonitorGroupInstancesInstanceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetMonitorGroupInstancesInstanceInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstanceInstance {
		return vs[0].([]GetMonitorGroupInstancesInstanceInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

type GetMonitorGroupsGroup struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl string `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups []string `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId string `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate int `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified int `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id string `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName string `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId string `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags map[string]interface{} `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds []string `pulumi:"templateIds"`
	// The type of the application group.
	Type string `pulumi:"type"`
}

// GetMonitorGroupsGroupInput is an input type that accepts GetMonitorGroupsGroupArgs and GetMonitorGroupsGroupOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupInput` via:
//
//          GetMonitorGroupsGroupArgs{...}
type GetMonitorGroupsGroupInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput
	ToGetMonitorGroupsGroupOutputWithContext(context.Context) GetMonitorGroupsGroupOutput
}

type GetMonitorGroupsGroupArgs struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl pulumi.StringInput `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId pulumi.StringInput `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate pulumi.IntInput `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified pulumi.IntInput `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName pulumi.StringInput `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds pulumi.StringArrayInput `pulumi:"templateIds"`
	// The type of the application group.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return i.ToGetMonitorGroupsGroupOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupOutput)
}

// GetMonitorGroupsGroupArrayInput is an input type that accepts GetMonitorGroupsGroupArray and GetMonitorGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupArrayInput` via:
//
//          GetMonitorGroupsGroupArray{ GetMonitorGroupsGroupArgs{...} }
type GetMonitorGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput
	ToGetMonitorGroupsGroupArrayOutputWithContext(context.Context) GetMonitorGroupsGroupArrayOutput
}

type GetMonitorGroupsGroupArray []GetMonitorGroupsGroupInput

func (GetMonitorGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return i.ToGetMonitorGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupArrayOutput)
}

type GetMonitorGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return o
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return o
}

// The URL of the Kubernetes cluster from which the application group is synchronized.
func (o GetMonitorGroupsGroupOutput) BindUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.BindUrl }).(pulumi.StringOutput)
}

// The list of  alert groups that receive alert notifications for the application group.
func (o GetMonitorGroupsGroupOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The ID of the tag rule.
func (o GetMonitorGroupsGroupOutput) DynamicTagRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.DynamicTagRuleId }).(pulumi.StringOutput)
}

// The time when the application group was created.
func (o GetMonitorGroupsGroupOutput) GmtCreate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtCreate }).(pulumi.IntOutput)
}

// The time when the application group was modified.
func (o GetMonitorGroupsGroupOutput) GmtModified() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtModified }).(pulumi.IntOutput)
}

// The ID of the application group.
func (o GetMonitorGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Monitor Group.
func (o GetMonitorGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application group.
func (o GetMonitorGroupsGroupOutput) MonitorGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.MonitorGroupName }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud service.
func (o GetMonitorGroupsGroupOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.ServiceId }).(pulumi.StringOutput)
}

// A map of tags assigned to the Cms Monitor Group.
func (o GetMonitorGroupsGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The alert templates applied to the application group.
func (o GetMonitorGroupsGroupOutput) TemplateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.TemplateIds }).(pulumi.StringArrayOutput)
}

// The type of the application group.
func (o GetMonitorGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupsGroup {
		return vs[0].([]GetMonitorGroupsGroup)[vs[1].(int)]
	}).(GetMonitorGroupsGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsCriticalInput)(nil)).Elem(), AlarmEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsCriticalPtrInput)(nil)).Elem(), AlarmEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsInfoInput)(nil)).Elem(), AlarmEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsInfoPtrInput)(nil)).Elem(), AlarmEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsWarnInput)(nil)).Elem(), AlarmEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmEscalationsWarnPtrInput)(nil)).Elem(), AlarmEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicTagGroupMatchExpressInput)(nil)).Elem(), DynamicTagGroupMatchExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicTagGroupMatchExpressArrayInput)(nil)).Elem(), DynamicTagGroupMatchExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInput)(nil)).Elem(), GroupMetricRuleEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsCriticalInput)(nil)).Elem(), GroupMetricRuleEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsCriticalPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInfoInput)(nil)).Elem(), GroupMetricRuleEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsInfoPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsWarnInput)(nil)).Elem(), GroupMetricRuleEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMetricRuleEscalationsWarnPtrInput)(nil)).Elem(), GroupMetricRuleEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateArrayInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCriticalInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsCriticalPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfoInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsInfoPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarnInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricRuleTemplateAlertTemplateEscalationsWarnPtrInput)(nil)).Elem(), MetricRuleTemplateAlertTemplateEscalationsWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorGroupInstancesInstanceInput)(nil)).Elem(), MonitorGroupInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorGroupInstancesInstanceArrayInput)(nil)).Elem(), MonitorGroupInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteMonitorIspCityInput)(nil)).Elem(), SiteMonitorIspCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteMonitorIspCityArrayInput)(nil)).Elem(), SiteMonitorIspCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactGroupsGroupInput)(nil)).Elem(), GetAlarmContactGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactGroupsGroupArrayInput)(nil)).Elem(), GetAlarmContactGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactsContactInput)(nil)).Elem(), GetAlarmContactsContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlarmContactsContactArrayInput)(nil)).Elem(), GetAlarmContactsContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupInput)(nil)).Elem(), GetDynamicTagGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupArrayInput)(nil)).Elem(), GetDynamicTagGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpressInput)(nil)).Elem(), GetDynamicTagGroupsGroupMatchExpressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDynamicTagGroupsGroupMatchExpressArrayInput)(nil)).Elem(), GetDynamicTagGroupsGroupMatchExpressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleInput)(nil)).Elem(), GetGroupMetricRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCriticalInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCriticalArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationCriticalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfoInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfoArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarnInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarnArrayInput)(nil)).Elem(), GetGroupMetricRulesRuleEscalationWarnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayInput)(nil)).Elem(), GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceArrayInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstanceInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstanceArrayInput)(nil)).Elem(), GetMonitorGroupInstancesInstanceInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupsGroupInput)(nil)).Elem(), GetMonitorGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorGroupsGroupArrayInput)(nil)).Elem(), GetMonitorGroupsGroupArray{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(DynamicTagGroupMatchExpressOutput{})
	pulumi.RegisterOutputType(DynamicTagGroupMatchExpressArrayOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateArrayOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsInfoOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsWarnOutput{})
	pulumi.RegisterOutputType(MetricRuleTemplateAlertTemplateEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactArrayOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupMatchExpressOutput{})
	pulumi.RegisterOutputType(GetDynamicTagGroupsGroupMatchExpressArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationCriticalArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnOutput{})
	pulumi.RegisterOutputType(GetMetricRuleTemplatesTemplateAlertTemplateEscalationWarnArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupArrayOutput{})
}
