// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Cloud Monitor Service Event Rule resource.
//
// For information about Cloud Monitor Service Event Rule and how to use it, see [What is Event Rule](https://www.alibabacloud.com/help/en/cloudmonitor/latest/puteventrule).
//
// > **NOTE:** Available since v1.182.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "tf-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := cms.NewMonitorGroup(ctx, "default", &cms.MonitorGroupArgs{
//				MonitorGroupName: pulumi.String(name),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cms.NewEventRule(ctx, "example", &cms.EventRuleArgs{
//				RuleName:    pulumi.String(name),
//				GroupId:     _default.ID(),
//				SilenceTime: pulumi.Int(100),
//				Description: pulumi.String(name),
//				Status:      pulumi.String("ENABLED"),
//				EventPattern: &cms.EventRuleEventPatternArgs{
//					Product:   pulumi.String("ecs"),
//					SqlFilter: pulumi.String("example_value"),
//					NameLists: pulumi.StringArray{
//						pulumi.String("example_value"),
//					},
//					LevelLists: pulumi.StringArray{
//						pulumi.String("CRITICAL"),
//					},
//					EventTypeLists: pulumi.StringArray{
//						pulumi.String("StatusNotification"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cloud Monitor Service Event Rule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:cms/eventRule:EventRule example <rule_name>
// ```
type EventRule struct {
	pulumi.CustomResourceState

	// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
	ContactParameters EventRuleContactParameterArrayOutput `pulumi:"contactParameters"`
	// The description of the event-triggered alert rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
	EventPattern EventRuleEventPatternOutput `pulumi:"eventPattern"`
	// The information about the recipients in Function Compute. See `fcParameters` below.
	FcParameters EventRuleFcParameterArrayOutput `pulumi:"fcParameters"`
	// The ID of the application group to which the event-triggered alert rule belongs.
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
	MnsParameters EventRuleMnsParameterArrayOutput `pulumi:"mnsParameters"`
	// The parameters of API callback notification. See `openApiParameters` below.
	OpenApiParameters EventRuleOpenApiParameterArrayOutput `pulumi:"openApiParameters"`
	// The name of the event-triggered alert rule.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// The silence time.
	SilenceTime pulumi.IntPtrOutput `pulumi:"silenceTime"`
	// The information about the recipients in Simple Log Service. See `slsParameters` below.
	SlsParameters EventRuleSlsParameterArrayOutput `pulumi:"slsParameters"`
	// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringOutput `pulumi:"status"`
	// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
	WebhookParameters EventRuleWebhookParameterArrayOutput `pulumi:"webhookParameters"`
}

// NewEventRule registers a new resource with the given unique name, arguments, and options.
func NewEventRule(ctx *pulumi.Context,
	name string, args *EventRuleArgs, opts ...pulumi.ResourceOption) (*EventRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventPattern == nil {
		return nil, errors.New("invalid value for required argument 'EventPattern'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventRule
	err := ctx.RegisterResource("alicloud:cms/eventRule:EventRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventRule gets an existing EventRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventRuleState, opts ...pulumi.ResourceOption) (*EventRule, error) {
	var resource EventRule
	err := ctx.ReadResource("alicloud:cms/eventRule:EventRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventRule resources.
type eventRuleState struct {
	// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
	ContactParameters []EventRuleContactParameter `pulumi:"contactParameters"`
	// The description of the event-triggered alert rule.
	Description *string `pulumi:"description"`
	// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
	EventPattern *EventRuleEventPattern `pulumi:"eventPattern"`
	// The information about the recipients in Function Compute. See `fcParameters` below.
	FcParameters []EventRuleFcParameter `pulumi:"fcParameters"`
	// The ID of the application group to which the event-triggered alert rule belongs.
	GroupId *string `pulumi:"groupId"`
	// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
	MnsParameters []EventRuleMnsParameter `pulumi:"mnsParameters"`
	// The parameters of API callback notification. See `openApiParameters` below.
	OpenApiParameters []EventRuleOpenApiParameter `pulumi:"openApiParameters"`
	// The name of the event-triggered alert rule.
	RuleName *string `pulumi:"ruleName"`
	// The silence time.
	SilenceTime *int `pulumi:"silenceTime"`
	// The information about the recipients in Simple Log Service. See `slsParameters` below.
	SlsParameters []EventRuleSlsParameter `pulumi:"slsParameters"`
	// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
	Status *string `pulumi:"status"`
	// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
	WebhookParameters []EventRuleWebhookParameter `pulumi:"webhookParameters"`
}

type EventRuleState struct {
	// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
	ContactParameters EventRuleContactParameterArrayInput
	// The description of the event-triggered alert rule.
	Description pulumi.StringPtrInput
	// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
	EventPattern EventRuleEventPatternPtrInput
	// The information about the recipients in Function Compute. See `fcParameters` below.
	FcParameters EventRuleFcParameterArrayInput
	// The ID of the application group to which the event-triggered alert rule belongs.
	GroupId pulumi.StringPtrInput
	// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
	MnsParameters EventRuleMnsParameterArrayInput
	// The parameters of API callback notification. See `openApiParameters` below.
	OpenApiParameters EventRuleOpenApiParameterArrayInput
	// The name of the event-triggered alert rule.
	RuleName pulumi.StringPtrInput
	// The silence time.
	SilenceTime pulumi.IntPtrInput
	// The information about the recipients in Simple Log Service. See `slsParameters` below.
	SlsParameters EventRuleSlsParameterArrayInput
	// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringPtrInput
	// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
	WebhookParameters EventRuleWebhookParameterArrayInput
}

func (EventRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventRuleState)(nil)).Elem()
}

type eventRuleArgs struct {
	// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
	ContactParameters []EventRuleContactParameter `pulumi:"contactParameters"`
	// The description of the event-triggered alert rule.
	Description *string `pulumi:"description"`
	// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
	EventPattern EventRuleEventPattern `pulumi:"eventPattern"`
	// The information about the recipients in Function Compute. See `fcParameters` below.
	FcParameters []EventRuleFcParameter `pulumi:"fcParameters"`
	// The ID of the application group to which the event-triggered alert rule belongs.
	GroupId *string `pulumi:"groupId"`
	// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
	MnsParameters []EventRuleMnsParameter `pulumi:"mnsParameters"`
	// The parameters of API callback notification. See `openApiParameters` below.
	OpenApiParameters []EventRuleOpenApiParameter `pulumi:"openApiParameters"`
	// The name of the event-triggered alert rule.
	RuleName string `pulumi:"ruleName"`
	// The silence time.
	SilenceTime *int `pulumi:"silenceTime"`
	// The information about the recipients in Simple Log Service. See `slsParameters` below.
	SlsParameters []EventRuleSlsParameter `pulumi:"slsParameters"`
	// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
	Status *string `pulumi:"status"`
	// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
	WebhookParameters []EventRuleWebhookParameter `pulumi:"webhookParameters"`
}

// The set of arguments for constructing a EventRule resource.
type EventRuleArgs struct {
	// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
	ContactParameters EventRuleContactParameterArrayInput
	// The description of the event-triggered alert rule.
	Description pulumi.StringPtrInput
	// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
	EventPattern EventRuleEventPatternInput
	// The information about the recipients in Function Compute. See `fcParameters` below.
	FcParameters EventRuleFcParameterArrayInput
	// The ID of the application group to which the event-triggered alert rule belongs.
	GroupId pulumi.StringPtrInput
	// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
	MnsParameters EventRuleMnsParameterArrayInput
	// The parameters of API callback notification. See `openApiParameters` below.
	OpenApiParameters EventRuleOpenApiParameterArrayInput
	// The name of the event-triggered alert rule.
	RuleName pulumi.StringInput
	// The silence time.
	SilenceTime pulumi.IntPtrInput
	// The information about the recipients in Simple Log Service. See `slsParameters` below.
	SlsParameters EventRuleSlsParameterArrayInput
	// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringPtrInput
	// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
	WebhookParameters EventRuleWebhookParameterArrayInput
}

func (EventRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventRuleArgs)(nil)).Elem()
}

type EventRuleInput interface {
	pulumi.Input

	ToEventRuleOutput() EventRuleOutput
	ToEventRuleOutputWithContext(ctx context.Context) EventRuleOutput
}

func (*EventRule) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRule)(nil)).Elem()
}

func (i *EventRule) ToEventRuleOutput() EventRuleOutput {
	return i.ToEventRuleOutputWithContext(context.Background())
}

func (i *EventRule) ToEventRuleOutputWithContext(ctx context.Context) EventRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleOutput)
}

// EventRuleArrayInput is an input type that accepts EventRuleArray and EventRuleArrayOutput values.
// You can construct a concrete instance of `EventRuleArrayInput` via:
//
//	EventRuleArray{ EventRuleArgs{...} }
type EventRuleArrayInput interface {
	pulumi.Input

	ToEventRuleArrayOutput() EventRuleArrayOutput
	ToEventRuleArrayOutputWithContext(context.Context) EventRuleArrayOutput
}

type EventRuleArray []EventRuleInput

func (EventRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventRule)(nil)).Elem()
}

func (i EventRuleArray) ToEventRuleArrayOutput() EventRuleArrayOutput {
	return i.ToEventRuleArrayOutputWithContext(context.Background())
}

func (i EventRuleArray) ToEventRuleArrayOutputWithContext(ctx context.Context) EventRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleArrayOutput)
}

// EventRuleMapInput is an input type that accepts EventRuleMap and EventRuleMapOutput values.
// You can construct a concrete instance of `EventRuleMapInput` via:
//
//	EventRuleMap{ "key": EventRuleArgs{...} }
type EventRuleMapInput interface {
	pulumi.Input

	ToEventRuleMapOutput() EventRuleMapOutput
	ToEventRuleMapOutputWithContext(context.Context) EventRuleMapOutput
}

type EventRuleMap map[string]EventRuleInput

func (EventRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventRule)(nil)).Elem()
}

func (i EventRuleMap) ToEventRuleMapOutput() EventRuleMapOutput {
	return i.ToEventRuleMapOutputWithContext(context.Background())
}

func (i EventRuleMap) ToEventRuleMapOutputWithContext(ctx context.Context) EventRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRuleMapOutput)
}

type EventRuleOutput struct{ *pulumi.OutputState }

func (EventRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRule)(nil)).Elem()
}

func (o EventRuleOutput) ToEventRuleOutput() EventRuleOutput {
	return o
}

func (o EventRuleOutput) ToEventRuleOutputWithContext(ctx context.Context) EventRuleOutput {
	return o
}

// The information about the alert contact groups that receive alert notifications. See `contactParameters` below.
func (o EventRuleOutput) ContactParameters() EventRuleContactParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleContactParameterArrayOutput { return v.ContactParameters }).(EventRuleContactParameterArrayOutput)
}

// The description of the event-triggered alert rule.
func (o EventRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Event mode, used to describe the trigger conditions for this event. See `eventPattern` below.
func (o EventRuleOutput) EventPattern() EventRuleEventPatternOutput {
	return o.ApplyT(func(v *EventRule) EventRuleEventPatternOutput { return v.EventPattern }).(EventRuleEventPatternOutput)
}

// The information about the recipients in Function Compute. See `fcParameters` below.
func (o EventRuleOutput) FcParameters() EventRuleFcParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleFcParameterArrayOutput { return v.FcParameters }).(EventRuleFcParameterArrayOutput)
}

// The ID of the application group to which the event-triggered alert rule belongs.
func (o EventRuleOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRule) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The information about the recipients in Message Service (MNS). See `mnsParameters` below.
func (o EventRuleOutput) MnsParameters() EventRuleMnsParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleMnsParameterArrayOutput { return v.MnsParameters }).(EventRuleMnsParameterArrayOutput)
}

// The parameters of API callback notification. See `openApiParameters` below.
func (o EventRuleOutput) OpenApiParameters() EventRuleOpenApiParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleOpenApiParameterArrayOutput { return v.OpenApiParameters }).(EventRuleOpenApiParameterArrayOutput)
}

// The name of the event-triggered alert rule.
func (o EventRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *EventRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// The silence time.
func (o EventRuleOutput) SilenceTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventRule) pulumi.IntPtrOutput { return v.SilenceTime }).(pulumi.IntPtrOutput)
}

// The information about the recipients in Simple Log Service. See `slsParameters` below.
func (o EventRuleOutput) SlsParameters() EventRuleSlsParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleSlsParameterArrayOutput { return v.SlsParameters }).(EventRuleSlsParameterArrayOutput)
}

// The status of the resource. Valid values: `ENABLED`, `DISABLED`.
func (o EventRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EventRule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The information about the callback URLs that are used to receive alert notifications. See `webhookParameters` below.
func (o EventRuleOutput) WebhookParameters() EventRuleWebhookParameterArrayOutput {
	return o.ApplyT(func(v *EventRule) EventRuleWebhookParameterArrayOutput { return v.WebhookParameters }).(EventRuleWebhookParameterArrayOutput)
}

type EventRuleArrayOutput struct{ *pulumi.OutputState }

func (EventRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventRule)(nil)).Elem()
}

func (o EventRuleArrayOutput) ToEventRuleArrayOutput() EventRuleArrayOutput {
	return o
}

func (o EventRuleArrayOutput) ToEventRuleArrayOutputWithContext(ctx context.Context) EventRuleArrayOutput {
	return o
}

func (o EventRuleArrayOutput) Index(i pulumi.IntInput) EventRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EventRule {
		return vs[0].([]*EventRule)[vs[1].(int)]
	}).(EventRuleOutput)
}

type EventRuleMapOutput struct{ *pulumi.OutputState }

func (EventRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventRule)(nil)).Elem()
}

func (o EventRuleMapOutput) ToEventRuleMapOutput() EventRuleMapOutput {
	return o
}

func (o EventRuleMapOutput) ToEventRuleMapOutputWithContext(ctx context.Context) EventRuleMapOutput {
	return o
}

func (o EventRuleMapOutput) MapIndex(k pulumi.StringInput) EventRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EventRule {
		return vs[0].(map[string]*EventRule)[vs[1].(string)]
	}).(EventRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventRuleInput)(nil)).Elem(), &EventRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventRuleArrayInput)(nil)).Elem(), EventRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventRuleMapInput)(nil)).Elem(), EventRuleMap{})
	pulumi.RegisterOutputType(EventRuleOutput{})
	pulumi.RegisterOutputType(EventRuleArrayOutput{})
	pulumi.RegisterOutputType(EventRuleMapOutput{})
}
