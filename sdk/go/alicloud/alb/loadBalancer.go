// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ALB Load Balancer resource.
//
// For information about ALB Load Balancer and how to use it, see [What is Load Balancer](https://www.alibabacloud.com/help/doc-detail/197341.htm).
//
// > **NOTE:** Available in v1.132.0+.
//
// ## Import
//
// ALB Load Balancer can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:alb/loadBalancer:LoadBalancer example <id>
// ```
type LoadBalancer struct {
	pulumi.CustomResourceState

	// The Access Logging Configuration Structure.
	AccessLogConfig LoadBalancerAccessLogConfigPtrOutput `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
	// *`Fixed`: The ALB instance uses a fixed IP address.
	// *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrOutput `pulumi:"addressAllocatedMode"`
	// The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
	AddressType pulumi.StringOutput `pulumi:"addressType"`
	// The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
	DeletionProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deletionProtectionEnabled"`
	// Specifies whether to precheck the API request. Valid values: `true` and `false`.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The configuration of the billing method.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigOutput `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
	LoadBalancerEdition pulumi.StringOutput `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName pulumi.StringOutput `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigOutput `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
	Status pulumi.StringOutput `pulumi:"status"`
	Tags   pulumi.MapOutput    `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings LoadBalancerZoneMappingArrayOutput `pulumi:"zoneMappings"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressType == nil {
		return nil, errors.New("invalid value for required argument 'AddressType'")
	}
	if args.LoadBalancerBillingConfig == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerBillingConfig'")
	}
	if args.LoadBalancerEdition == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerEdition'")
	}
	if args.LoadBalancerName == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ZoneMappings == nil {
		return nil, errors.New("invalid value for required argument 'ZoneMappings'")
	}
	var resource LoadBalancer
	err := ctx.RegisterResource("alicloud:alb/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("alicloud:alb/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	// The Access Logging Configuration Structure.
	AccessLogConfig *LoadBalancerAccessLogConfig `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
	// *`Fixed`: The ALB instance uses a fixed IP address.
	// *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode *string `pulumi:"addressAllocatedMode"`
	// The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
	AddressType *string `pulumi:"addressType"`
	// The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// Specifies whether to precheck the API request. Valid values: `true` and `false`.
	DryRun *bool `pulumi:"dryRun"`
	// The configuration of the billing method.
	LoadBalancerBillingConfig *LoadBalancerLoadBalancerBillingConfig `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
	LoadBalancerEdition *string `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration.
	ModificationProtectionConfig *LoadBalancerModificationProtectionConfig `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
	Status *string                `pulumi:"status"`
	Tags   map[string]interface{} `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId *string `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings []LoadBalancerZoneMapping `pulumi:"zoneMappings"`
}

type LoadBalancerState struct {
	// The Access Logging Configuration Structure.
	AccessLogConfig LoadBalancerAccessLogConfigPtrInput
	// The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
	// *`Fixed`: The ALB instance uses a fixed IP address.
	// *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrInput
	// The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
	AddressType pulumi.StringPtrInput
	// The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// Specifies whether to precheck the API request. Valid values: `true` and `false`.
	DryRun pulumi.BoolPtrInput
	// The configuration of the billing method.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigPtrInput
	// The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
	LoadBalancerEdition pulumi.StringPtrInput
	// The name of the resource.
	LoadBalancerName pulumi.StringPtrInput
	// Modify the Protection Configuration.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
	Status pulumi.StringPtrInput
	Tags   pulumi.MapInput
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId pulumi.StringPtrInput
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings LoadBalancerZoneMappingArrayInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	// The Access Logging Configuration Structure.
	AccessLogConfig *LoadBalancerAccessLogConfig `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
	// *`Fixed`: The ALB instance uses a fixed IP address.
	// *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode *string `pulumi:"addressAllocatedMode"`
	// The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
	AddressType string `pulumi:"addressType"`
	// The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// Specifies whether to precheck the API request. Valid values: `true` and `false`.
	DryRun *bool `pulumi:"dryRun"`
	// The configuration of the billing method.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfig `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
	LoadBalancerEdition string `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration.
	ModificationProtectionConfig *LoadBalancerModificationProtectionConfig `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId *string                `pulumi:"resourceGroupId"`
	Tags            map[string]interface{} `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId string `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings []LoadBalancerZoneMapping `pulumi:"zoneMappings"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	// The Access Logging Configuration Structure.
	AccessLogConfig LoadBalancerAccessLogConfigPtrInput
	// The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
	// *`Fixed`: The ALB instance uses a fixed IP address.
	// *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrInput
	// The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
	AddressType pulumi.StringInput
	// The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// Specifies whether to precheck the API request. Valid values: `true` and `false`.
	DryRun pulumi.BoolPtrInput
	// The configuration of the billing method.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigInput
	// The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
	LoadBalancerEdition pulumi.StringInput
	// The name of the resource.
	LoadBalancerName pulumi.StringInput
	// Modify the Protection Configuration.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	Tags            pulumi.MapInput
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId pulumi.StringInput
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings LoadBalancerZoneMappingArrayInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

// LoadBalancerArrayInput is an input type that accepts LoadBalancerArray and LoadBalancerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerArrayInput` via:
//
//          LoadBalancerArray{ LoadBalancerArgs{...} }
type LoadBalancerArrayInput interface {
	pulumi.Input

	ToLoadBalancerArrayOutput() LoadBalancerArrayOutput
	ToLoadBalancerArrayOutputWithContext(context.Context) LoadBalancerArrayOutput
}

type LoadBalancerArray []LoadBalancerInput

func (LoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return i.ToLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerArrayOutput)
}

// LoadBalancerMapInput is an input type that accepts LoadBalancerMap and LoadBalancerMapOutput values.
// You can construct a concrete instance of `LoadBalancerMapInput` via:
//
//          LoadBalancerMap{ "key": LoadBalancerArgs{...} }
type LoadBalancerMapInput interface {
	pulumi.Input

	ToLoadBalancerMapOutput() LoadBalancerMapOutput
	ToLoadBalancerMapOutputWithContext(context.Context) LoadBalancerMapOutput
}

type LoadBalancerMap map[string]LoadBalancerInput

func (LoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerMap) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return i.ToLoadBalancerMapOutputWithContext(context.Background())
}

func (i LoadBalancerMap) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMapOutput)
}

type LoadBalancerOutput struct{ *pulumi.OutputState }

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

type LoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) Index(i pulumi.IntInput) LoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].([]*LoadBalancer)[vs[1].(int)]
	}).(LoadBalancerOutput)
}

type LoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].(map[string]*LoadBalancer)[vs[1].(string)]
	}).(LoadBalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerInput)(nil)).Elem(), &LoadBalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerArrayInput)(nil)).Elem(), LoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMapInput)(nil)).Elem(), LoadBalancerMap{})
	pulumi.RegisterOutputType(LoadBalancerOutput{})
	pulumi.RegisterOutputType(LoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMapOutput{})
}
