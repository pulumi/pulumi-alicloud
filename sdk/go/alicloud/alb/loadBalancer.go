// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ALB Load Balancer resource.
//
// For information about ALB Load Balancer and how to use it, see [What is Load Balancer](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-createloadbalancer).
//
// > **NOTE:** Available since v1.132.0.
//
// ## Import
//
// Alb Load Balancer can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import alicloud:alb/loadBalancer:LoadBalancer example <id>
//
// ```
type LoadBalancer struct {
	pulumi.CustomResourceState

	// The Access Logging Configuration Structure. See `accessLogConfig` below.
	AccessLogConfig LoadBalancerAccessLogConfigPtrOutput `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrOutput `pulumi:"addressAllocatedMode"`
	// The protocol version. Value:
	// - **IPv4**:IPv4 type.
	// - **DualStack**: the dual-stack type.
	AddressIpVersion pulumi.StringOutput `pulumi:"addressIpVersion"`
	// The type of IP address that the SLB instance uses to provide services.
	AddressType pulumi.StringOutput `pulumi:"addressType"`
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
	BandwidthPackageId pulumi.StringPtrOutput `pulumi:"bandwidthPackageId"`
	// The creation time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Whether to enable delete protection. Value:true: on.false (default): Off.
	DeletionProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deletionProtectionEnabled"`
	// The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
	DnsName pulumi.StringOutput `pulumi:"dnsName"`
	// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The address type of Ipv6.
	Ipv6AddressType pulumi.StringOutput `pulumi:"ipv6AddressType"`
	// The configuration of the billing method. See `loadBalancerBillingConfig` below.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigOutput `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance.
	LoadBalancerEdition pulumi.StringOutput `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName pulumi.StringPtrOutput `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration. See `modificationProtectionConfig` below.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigOutput `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// Load Balancing Modify the Protection Status.
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag of the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
	ZoneMappings LoadBalancerZoneMappingArrayOutput `pulumi:"zoneMappings"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressType == nil {
		return nil, errors.New("invalid value for required argument 'AddressType'")
	}
	if args.LoadBalancerBillingConfig == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerBillingConfig'")
	}
	if args.LoadBalancerEdition == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerEdition'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ZoneMappings == nil {
		return nil, errors.New("invalid value for required argument 'ZoneMappings'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancer
	err := ctx.RegisterResource("alicloud:alb/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("alicloud:alb/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	// The Access Logging Configuration Structure. See `accessLogConfig` below.
	AccessLogConfig *LoadBalancerAccessLogConfig `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode *string `pulumi:"addressAllocatedMode"`
	// The protocol version. Value:
	// - **IPv4**:IPv4 type.
	// - **DualStack**: the dual-stack type.
	AddressIpVersion *string `pulumi:"addressIpVersion"`
	// The type of IP address that the SLB instance uses to provide services.
	AddressType *string `pulumi:"addressType"`
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// The creation time of the resource.
	CreateTime *string `pulumi:"createTime"`
	// Whether to enable delete protection. Value:true: on.false (default): Off.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
	DnsName *string `pulumi:"dnsName"`
	// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
	DryRun *bool `pulumi:"dryRun"`
	// The address type of Ipv6.
	Ipv6AddressType *string `pulumi:"ipv6AddressType"`
	// The configuration of the billing method. See `loadBalancerBillingConfig` below.
	LoadBalancerBillingConfig *LoadBalancerLoadBalancerBillingConfig `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance.
	LoadBalancerEdition *string `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration. See `modificationProtectionConfig` below.
	ModificationProtectionConfig *LoadBalancerModificationProtectionConfig `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// Load Balancing Modify the Protection Status.
	Status *string `pulumi:"status"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
	VpcId *string `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
	ZoneMappings []LoadBalancerZoneMapping `pulumi:"zoneMappings"`
}

type LoadBalancerState struct {
	// The Access Logging Configuration Structure. See `accessLogConfig` below.
	AccessLogConfig LoadBalancerAccessLogConfigPtrInput
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrInput
	// The protocol version. Value:
	// - **IPv4**:IPv4 type.
	// - **DualStack**: the dual-stack type.
	AddressIpVersion pulumi.StringPtrInput
	// The type of IP address that the SLB instance uses to provide services.
	AddressType pulumi.StringPtrInput
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
	BandwidthPackageId pulumi.StringPtrInput
	// The creation time of the resource.
	CreateTime pulumi.StringPtrInput
	// Whether to enable delete protection. Value:true: on.false (default): Off.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
	DnsName pulumi.StringPtrInput
	// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
	DryRun pulumi.BoolPtrInput
	// The address type of Ipv6.
	Ipv6AddressType pulumi.StringPtrInput
	// The configuration of the billing method. See `loadBalancerBillingConfig` below.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigPtrInput
	// The edition of the ALB instance.
	LoadBalancerEdition pulumi.StringPtrInput
	// The name of the resource.
	LoadBalancerName pulumi.StringPtrInput
	// Modify the Protection Configuration. See `modificationProtectionConfig` below.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// Load Balancing Modify the Protection Status.
	Status pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.MapInput
	// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
	VpcId pulumi.StringPtrInput
	// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
	ZoneMappings LoadBalancerZoneMappingArrayInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	// The Access Logging Configuration Structure. See `accessLogConfig` below.
	AccessLogConfig *LoadBalancerAccessLogConfig `pulumi:"accessLogConfig"`
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode *string `pulumi:"addressAllocatedMode"`
	// The protocol version. Value:
	// - **IPv4**:IPv4 type.
	// - **DualStack**: the dual-stack type.
	AddressIpVersion *string `pulumi:"addressIpVersion"`
	// The type of IP address that the SLB instance uses to provide services.
	AddressType string `pulumi:"addressType"`
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// Whether to enable delete protection. Value:true: on.false (default): Off.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
	DryRun *bool `pulumi:"dryRun"`
	// The address type of Ipv6.
	Ipv6AddressType *string `pulumi:"ipv6AddressType"`
	// The configuration of the billing method. See `loadBalancerBillingConfig` below.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfig `pulumi:"loadBalancerBillingConfig"`
	// The edition of the ALB instance.
	LoadBalancerEdition string `pulumi:"loadBalancerEdition"`
	// The name of the resource.
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// Modify the Protection Configuration. See `modificationProtectionConfig` below.
	ModificationProtectionConfig *LoadBalancerModificationProtectionConfig `pulumi:"modificationProtectionConfig"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
	VpcId string `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
	ZoneMappings []LoadBalancerZoneMapping `pulumi:"zoneMappings"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	// The Access Logging Configuration Structure. See `accessLogConfig` below.
	AccessLogConfig LoadBalancerAccessLogConfigPtrInput
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
	AddressAllocatedMode pulumi.StringPtrInput
	// The protocol version. Value:
	// - **IPv4**:IPv4 type.
	// - **DualStack**: the dual-stack type.
	AddressIpVersion pulumi.StringPtrInput
	// The type of IP address that the SLB instance uses to provide services.
	AddressType pulumi.StringInput
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
	BandwidthPackageId pulumi.StringPtrInput
	// Whether to enable delete protection. Value:true: on.false (default): Off.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
	DryRun pulumi.BoolPtrInput
	// The address type of Ipv6.
	Ipv6AddressType pulumi.StringPtrInput
	// The configuration of the billing method. See `loadBalancerBillingConfig` below.
	LoadBalancerBillingConfig LoadBalancerLoadBalancerBillingConfigInput
	// The edition of the ALB instance.
	LoadBalancerEdition pulumi.StringInput
	// The name of the resource.
	LoadBalancerName pulumi.StringPtrInput
	// Modify the Protection Configuration. See `modificationProtectionConfig` below.
	ModificationProtectionConfig LoadBalancerModificationProtectionConfigPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.MapInput
	// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
	VpcId pulumi.StringInput
	// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
	ZoneMappings LoadBalancerZoneMappingArrayInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

// LoadBalancerArrayInput is an input type that accepts LoadBalancerArray and LoadBalancerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerArrayInput` via:
//
//	LoadBalancerArray{ LoadBalancerArgs{...} }
type LoadBalancerArrayInput interface {
	pulumi.Input

	ToLoadBalancerArrayOutput() LoadBalancerArrayOutput
	ToLoadBalancerArrayOutputWithContext(context.Context) LoadBalancerArrayOutput
}

type LoadBalancerArray []LoadBalancerInput

func (LoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return i.ToLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerArrayOutput)
}

// LoadBalancerMapInput is an input type that accepts LoadBalancerMap and LoadBalancerMapOutput values.
// You can construct a concrete instance of `LoadBalancerMapInput` via:
//
//	LoadBalancerMap{ "key": LoadBalancerArgs{...} }
type LoadBalancerMapInput interface {
	pulumi.Input

	ToLoadBalancerMapOutput() LoadBalancerMapOutput
	ToLoadBalancerMapOutputWithContext(context.Context) LoadBalancerMapOutput
}

type LoadBalancerMap map[string]LoadBalancerInput

func (LoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerMap) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return i.ToLoadBalancerMapOutputWithContext(context.Background())
}

func (i LoadBalancerMap) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMapOutput)
}

type LoadBalancerOutput struct{ *pulumi.OutputState }

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

// The Access Logging Configuration Structure. See `accessLogConfig` below.
func (o LoadBalancerOutput) AccessLogConfig() LoadBalancerAccessLogConfigPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerAccessLogConfigPtrOutput { return v.AccessLogConfig }).(LoadBalancerAccessLogConfigPtrOutput)
}

// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB instance.
func (o LoadBalancerOutput) AddressAllocatedMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringPtrOutput { return v.AddressAllocatedMode }).(pulumi.StringPtrOutput)
}

// The protocol version. Value:
// - **IPv4**:IPv4 type.
// - **DualStack**: the dual-stack type.
func (o LoadBalancerOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The type of IP address that the SLB instance uses to provide services.
func (o LoadBalancerOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.AddressType }).(pulumi.StringOutput)
}

// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a public IP address.
func (o LoadBalancerOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringPtrOutput { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// The creation time of the resource.
func (o LoadBalancerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether to enable delete protection. Value:true: on.false (default): Off.
func (o LoadBalancerOutput) DeletionProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.BoolPtrOutput { return v.DeletionProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The domain name of the ALB instance. **NOTE:** Available in v1.158.0+.
func (o LoadBalancerOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

// Whether to PreCheck only this request, value:true: sends a check request and does not create a resource. Check items include whether required parameters are filled in, request format, and business restrictions. If the check fails, the corresponding error is returned. If the check passes, the error code DryRunOperation is returned.false (default): Sends a normal request, returns the HTTP_2xx status code after the check, and directly performs the operation.
func (o LoadBalancerOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.BoolPtrOutput { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// The address type of Ipv6.
func (o LoadBalancerOutput) Ipv6AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.Ipv6AddressType }).(pulumi.StringOutput)
}

// The configuration of the billing method. See `loadBalancerBillingConfig` below.
func (o LoadBalancerOutput) LoadBalancerBillingConfig() LoadBalancerLoadBalancerBillingConfigOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerLoadBalancerBillingConfigOutput { return v.LoadBalancerBillingConfig }).(LoadBalancerLoadBalancerBillingConfigOutput)
}

// The edition of the ALB instance.
func (o LoadBalancerOutput) LoadBalancerEdition() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.LoadBalancerEdition }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LoadBalancerOutput) LoadBalancerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringPtrOutput { return v.LoadBalancerName }).(pulumi.StringPtrOutput)
}

// Modify the Protection Configuration. See `modificationProtectionConfig` below.
func (o LoadBalancerOutput) ModificationProtectionConfig() LoadBalancerModificationProtectionConfigOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerModificationProtectionConfigOutput {
		return v.ModificationProtectionConfig
	}).(LoadBalancerModificationProtectionConfigOutput)
}

// The ID of the resource group.
func (o LoadBalancerOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Load Balancing Modify the Protection Status.
func (o LoadBalancerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o LoadBalancerOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// The ID of the virtual private cloud (VPC) where the SLB instance is deployed.
func (o LoadBalancerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The zones and vSwitches. You must specify at least two zones. See `zoneMappings` below.
func (o LoadBalancerOutput) ZoneMappings() LoadBalancerZoneMappingArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerZoneMappingArrayOutput { return v.ZoneMappings }).(LoadBalancerZoneMappingArrayOutput)
}

type LoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) Index(i pulumi.IntInput) LoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].([]*LoadBalancer)[vs[1].(int)]
	}).(LoadBalancerOutput)
}

type LoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].(map[string]*LoadBalancer)[vs[1].(string)]
	}).(LoadBalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerInput)(nil)).Elem(), &LoadBalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerArrayInput)(nil)).Elem(), LoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMapInput)(nil)).Elem(), LoadBalancerMap{})
	pulumi.RegisterOutputType(LoadBalancerOutput{})
	pulumi.RegisterOutputType(LoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMapOutput{})
}
