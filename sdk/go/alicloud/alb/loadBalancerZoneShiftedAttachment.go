// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Application Load Balancer (ALB) Load Balancer Zone Shifted Attachment resource.
//
// Application load balancer start-stop zone.
//
// For information about Application Load Balancer (ALB) Load Balancer Zone Shifted Attachment and how to use it, see [What is Load Balancer Zone Shifted Attachment](https://www.alibabacloud.com/help/en/).
//
// > **NOTE:** Available since v1.242.0.
//
// ## Import
//
// Application Load Balancer (ALB) Load Balancer Zone Shifted Attachment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:alb/loadBalancerZoneShiftedAttachment:LoadBalancerZoneShiftedAttachment example <load_balancer_id>:<vswitch_id>:<zone_id>
// ```
type LoadBalancerZoneShiftedAttachment struct {
	pulumi.CustomResourceState

	// The ID of the load balancing instance.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// Availability zone status. Value:
	Status pulumi.StringOutput `pulumi:"status"`
	// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
	VswitchId pulumi.StringOutput `pulumi:"vswitchId"`
	// The ID of the zone.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewLoadBalancerZoneShiftedAttachment registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerZoneShiftedAttachment(ctx *pulumi.Context,
	name string, args *LoadBalancerZoneShiftedAttachmentArgs, opts ...pulumi.ResourceOption) (*LoadBalancerZoneShiftedAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerId'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancerZoneShiftedAttachment
	err := ctx.RegisterResource("alicloud:alb/loadBalancerZoneShiftedAttachment:LoadBalancerZoneShiftedAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerZoneShiftedAttachment gets an existing LoadBalancerZoneShiftedAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerZoneShiftedAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerZoneShiftedAttachmentState, opts ...pulumi.ResourceOption) (*LoadBalancerZoneShiftedAttachment, error) {
	var resource LoadBalancerZoneShiftedAttachment
	err := ctx.ReadResource("alicloud:alb/loadBalancerZoneShiftedAttachment:LoadBalancerZoneShiftedAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerZoneShiftedAttachment resources.
type loadBalancerZoneShiftedAttachmentState struct {
	// The ID of the load balancing instance.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// Availability zone status. Value:
	Status *string `pulumi:"status"`
	// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
	VswitchId *string `pulumi:"vswitchId"`
	// The ID of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

type LoadBalancerZoneShiftedAttachmentState struct {
	// The ID of the load balancing instance.
	LoadBalancerId pulumi.StringPtrInput
	// Availability zone status. Value:
	Status pulumi.StringPtrInput
	// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
	VswitchId pulumi.StringPtrInput
	// The ID of the zone.
	ZoneId pulumi.StringPtrInput
}

func (LoadBalancerZoneShiftedAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerZoneShiftedAttachmentState)(nil)).Elem()
}

type loadBalancerZoneShiftedAttachmentArgs struct {
	// The ID of the load balancing instance.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a LoadBalancerZoneShiftedAttachment resource.
type LoadBalancerZoneShiftedAttachmentArgs struct {
	// The ID of the load balancing instance.
	LoadBalancerId pulumi.StringInput
	// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
	VswitchId pulumi.StringInput
	// The ID of the zone.
	ZoneId pulumi.StringInput
}

func (LoadBalancerZoneShiftedAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerZoneShiftedAttachmentArgs)(nil)).Elem()
}

type LoadBalancerZoneShiftedAttachmentInput interface {
	pulumi.Input

	ToLoadBalancerZoneShiftedAttachmentOutput() LoadBalancerZoneShiftedAttachmentOutput
	ToLoadBalancerZoneShiftedAttachmentOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentOutput
}

func (*LoadBalancerZoneShiftedAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (i *LoadBalancerZoneShiftedAttachment) ToLoadBalancerZoneShiftedAttachmentOutput() LoadBalancerZoneShiftedAttachmentOutput {
	return i.ToLoadBalancerZoneShiftedAttachmentOutputWithContext(context.Background())
}

func (i *LoadBalancerZoneShiftedAttachment) ToLoadBalancerZoneShiftedAttachmentOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerZoneShiftedAttachmentOutput)
}

// LoadBalancerZoneShiftedAttachmentArrayInput is an input type that accepts LoadBalancerZoneShiftedAttachmentArray and LoadBalancerZoneShiftedAttachmentArrayOutput values.
// You can construct a concrete instance of `LoadBalancerZoneShiftedAttachmentArrayInput` via:
//
//	LoadBalancerZoneShiftedAttachmentArray{ LoadBalancerZoneShiftedAttachmentArgs{...} }
type LoadBalancerZoneShiftedAttachmentArrayInput interface {
	pulumi.Input

	ToLoadBalancerZoneShiftedAttachmentArrayOutput() LoadBalancerZoneShiftedAttachmentArrayOutput
	ToLoadBalancerZoneShiftedAttachmentArrayOutputWithContext(context.Context) LoadBalancerZoneShiftedAttachmentArrayOutput
}

type LoadBalancerZoneShiftedAttachmentArray []LoadBalancerZoneShiftedAttachmentInput

func (LoadBalancerZoneShiftedAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (i LoadBalancerZoneShiftedAttachmentArray) ToLoadBalancerZoneShiftedAttachmentArrayOutput() LoadBalancerZoneShiftedAttachmentArrayOutput {
	return i.ToLoadBalancerZoneShiftedAttachmentArrayOutputWithContext(context.Background())
}

func (i LoadBalancerZoneShiftedAttachmentArray) ToLoadBalancerZoneShiftedAttachmentArrayOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerZoneShiftedAttachmentArrayOutput)
}

// LoadBalancerZoneShiftedAttachmentMapInput is an input type that accepts LoadBalancerZoneShiftedAttachmentMap and LoadBalancerZoneShiftedAttachmentMapOutput values.
// You can construct a concrete instance of `LoadBalancerZoneShiftedAttachmentMapInput` via:
//
//	LoadBalancerZoneShiftedAttachmentMap{ "key": LoadBalancerZoneShiftedAttachmentArgs{...} }
type LoadBalancerZoneShiftedAttachmentMapInput interface {
	pulumi.Input

	ToLoadBalancerZoneShiftedAttachmentMapOutput() LoadBalancerZoneShiftedAttachmentMapOutput
	ToLoadBalancerZoneShiftedAttachmentMapOutputWithContext(context.Context) LoadBalancerZoneShiftedAttachmentMapOutput
}

type LoadBalancerZoneShiftedAttachmentMap map[string]LoadBalancerZoneShiftedAttachmentInput

func (LoadBalancerZoneShiftedAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (i LoadBalancerZoneShiftedAttachmentMap) ToLoadBalancerZoneShiftedAttachmentMapOutput() LoadBalancerZoneShiftedAttachmentMapOutput {
	return i.ToLoadBalancerZoneShiftedAttachmentMapOutputWithContext(context.Background())
}

func (i LoadBalancerZoneShiftedAttachmentMap) ToLoadBalancerZoneShiftedAttachmentMapOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerZoneShiftedAttachmentMapOutput)
}

type LoadBalancerZoneShiftedAttachmentOutput struct{ *pulumi.OutputState }

func (LoadBalancerZoneShiftedAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (o LoadBalancerZoneShiftedAttachmentOutput) ToLoadBalancerZoneShiftedAttachmentOutput() LoadBalancerZoneShiftedAttachmentOutput {
	return o
}

func (o LoadBalancerZoneShiftedAttachmentOutput) ToLoadBalancerZoneShiftedAttachmentOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentOutput {
	return o
}

// The ID of the load balancing instance.
func (o LoadBalancerZoneShiftedAttachmentOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerZoneShiftedAttachment) pulumi.StringOutput { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// Availability zone status. Value:
func (o LoadBalancerZoneShiftedAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerZoneShiftedAttachment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
func (o LoadBalancerZoneShiftedAttachmentOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerZoneShiftedAttachment) pulumi.StringOutput { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of the zone.
func (o LoadBalancerZoneShiftedAttachmentOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerZoneShiftedAttachment) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type LoadBalancerZoneShiftedAttachmentArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerZoneShiftedAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (o LoadBalancerZoneShiftedAttachmentArrayOutput) ToLoadBalancerZoneShiftedAttachmentArrayOutput() LoadBalancerZoneShiftedAttachmentArrayOutput {
	return o
}

func (o LoadBalancerZoneShiftedAttachmentArrayOutput) ToLoadBalancerZoneShiftedAttachmentArrayOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentArrayOutput {
	return o
}

func (o LoadBalancerZoneShiftedAttachmentArrayOutput) Index(i pulumi.IntInput) LoadBalancerZoneShiftedAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancerZoneShiftedAttachment {
		return vs[0].([]*LoadBalancerZoneShiftedAttachment)[vs[1].(int)]
	}).(LoadBalancerZoneShiftedAttachmentOutput)
}

type LoadBalancerZoneShiftedAttachmentMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerZoneShiftedAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerZoneShiftedAttachment)(nil)).Elem()
}

func (o LoadBalancerZoneShiftedAttachmentMapOutput) ToLoadBalancerZoneShiftedAttachmentMapOutput() LoadBalancerZoneShiftedAttachmentMapOutput {
	return o
}

func (o LoadBalancerZoneShiftedAttachmentMapOutput) ToLoadBalancerZoneShiftedAttachmentMapOutputWithContext(ctx context.Context) LoadBalancerZoneShiftedAttachmentMapOutput {
	return o
}

func (o LoadBalancerZoneShiftedAttachmentMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerZoneShiftedAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancerZoneShiftedAttachment {
		return vs[0].(map[string]*LoadBalancerZoneShiftedAttachment)[vs[1].(string)]
	}).(LoadBalancerZoneShiftedAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerZoneShiftedAttachmentInput)(nil)).Elem(), &LoadBalancerZoneShiftedAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerZoneShiftedAttachmentArrayInput)(nil)).Elem(), LoadBalancerZoneShiftedAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerZoneShiftedAttachmentMapInput)(nil)).Elem(), LoadBalancerZoneShiftedAttachmentMap{})
	pulumi.RegisterOutputType(LoadBalancerZoneShiftedAttachmentOutput{})
	pulumi.RegisterOutputType(LoadBalancerZoneShiftedAttachmentArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerZoneShiftedAttachmentMapOutput{})
}
