// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Alb Server Groups of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.131.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/alb"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := vpc.NewNetwork(ctx, "default", &vpc.NetworkArgs{
//				VpcName:   pulumi.String(name),
//				CidrBlock: pulumi.String("192.168.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			defaultServerGroup, err := alb.NewServerGroup(ctx, "default", &alb.ServerGroupArgs{
//				Protocol:        pulumi.String("HTTP"),
//				VpcId:           _default.ID(),
//				ServerGroupName: pulumi.String(name),
//				HealthCheckConfig: &alb.ServerGroupHealthCheckConfigArgs{
//					HealthCheckEnabled: pulumi.Bool(false),
//				},
//				StickySessionConfig: &alb.ServerGroupStickySessionConfigArgs{
//					StickySessionEnabled: pulumi.Bool(false),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ids := alb.GetServerGroupsOutput(ctx, alb.GetServerGroupsOutputArgs{
//				Ids: pulumi.StringArray{
//					defaultServerGroup.ID(),
//				},
//			}, nil)
//			ctx.Export("albServerGroupId0", ids.ApplyT(func(ids alb.GetServerGroupsResult) (*string, error) {
//				return &ids.Groups[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetServerGroups(ctx *pulumi.Context, args *GetServerGroupsArgs, opts ...pulumi.InvokeOption) (*GetServerGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerGroupsResult
	err := ctx.Invoke("alicloud:alb/getServerGroups:getServerGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerGroups.
type GetServerGroupsArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Server Group IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Server Group name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The server group IDs.
	ServerGroupIds []string `pulumi:"serverGroupIds"`
	// The names of the Server Group.
	ServerGroupName *string `pulumi:"serverGroupName"`
	// The status of the Server Group. Valid values: `Available`, `Configuring`, `Provisioning`.
	Status *string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC).
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getServerGroups.
type GetServerGroupsResult struct {
	EnableDetails *bool `pulumi:"enableDetails"`
	// A list of Server Groups. Each element contains the following attributes:
	Groups []GetServerGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Server Group names.
	Names           []string `pulumi:"names"`
	OutputFile      *string  `pulumi:"outputFile"`
	ResourceGroupId *string  `pulumi:"resourceGroupId"`
	ServerGroupIds  []string `pulumi:"serverGroupIds"`
	// The name of the Server Group.
	ServerGroupName *string `pulumi:"serverGroupName"`
	// The status of the server.
	Status *string `pulumi:"status"`
	// The tags of the resource. **Note:** `tags` takes effect only if `enableDetails` is set to `true`.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

func GetServerGroupsOutput(ctx *pulumi.Context, args GetServerGroupsOutputArgs, opts ...pulumi.InvokeOption) GetServerGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServerGroupsResultOutput, error) {
			args := v.(GetServerGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:alb/getServerGroups:getServerGroups", args, GetServerGroupsResultOutput{}, options).(GetServerGroupsResultOutput), nil
		}).(GetServerGroupsResultOutput)
}

// A collection of arguments for invoking getServerGroups.
type GetServerGroupsOutputArgs struct {
	// Whether to query the detailed list of resource attributes. Default value: `false`.
	EnableDetails pulumi.BoolPtrInput `pulumi:"enableDetails"`
	// A list of Server Group IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Server Group name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The server group IDs.
	ServerGroupIds pulumi.StringArrayInput `pulumi:"serverGroupIds"`
	// The names of the Server Group.
	ServerGroupName pulumi.StringPtrInput `pulumi:"serverGroupName"`
	// The status of the Server Group. Valid values: `Available`, `Configuring`, `Provisioning`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC).
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetServerGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getServerGroups.
type GetServerGroupsResultOutput struct{ *pulumi.OutputState }

func (GetServerGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsResult)(nil)).Elem()
}

func (o GetServerGroupsResultOutput) ToGetServerGroupsResultOutput() GetServerGroupsResultOutput {
	return o
}

func (o GetServerGroupsResultOutput) ToGetServerGroupsResultOutputWithContext(ctx context.Context) GetServerGroupsResultOutput {
	return o
}

func (o GetServerGroupsResultOutput) EnableDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *bool { return v.EnableDetails }).(pulumi.BoolPtrOutput)
}

// A list of Server Groups. Each element contains the following attributes:
func (o GetServerGroupsResultOutput) Groups() GetServerGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetServerGroupsResult) []GetServerGroupsGroup { return v.Groups }).(GetServerGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServerGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetServerGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Server Group names.
func (o GetServerGroupsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerGroupsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetServerGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetServerGroupsResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

func (o GetServerGroupsResultOutput) ServerGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerGroupsResult) []string { return v.ServerGroupIds }).(pulumi.StringArrayOutput)
}

// The name of the Server Group.
func (o GetServerGroupsResultOutput) ServerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.ServerGroupName }).(pulumi.StringPtrOutput)
}

// The status of the server.
func (o GetServerGroupsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource. **Note:** `tags` takes effect only if `enableDetails` is set to `true`.
func (o GetServerGroupsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServerGroupsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the VPC.
func (o GetServerGroupsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerGroupsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerGroupsResultOutput{})
}
