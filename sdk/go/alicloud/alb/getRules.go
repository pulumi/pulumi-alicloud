// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Alb Rules of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.133.0.
func GetRules(ctx *pulumi.Context, args *GetRulesArgs, opts ...pulumi.InvokeOption) (*GetRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRulesResult
	err := ctx.Invoke("alicloud:alb/getRules:getRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRules.
type GetRulesArgs struct {
	// A list of Rule IDs.
	Ids []string `pulumi:"ids"`
	// The listener ids.
	ListenerIds []string `pulumi:"listenerIds"`
	// The load balancer ids.
	LoadBalancerIds []string `pulumi:"loadBalancerIds"`
	// A regex string to filter results by Rule name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The rule ids.
	RuleIds []string `pulumi:"ruleIds"`
	// The status of the forwarding rule. Valid values: `Provisioning`, `Configuring`, `Available`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getRules.
type GetRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Ids             []string `pulumi:"ids"`
	ListenerIds     []string `pulumi:"listenerIds"`
	LoadBalancerIds []string `pulumi:"loadBalancerIds"`
	NameRegex       *string  `pulumi:"nameRegex"`
	// A list of Rule names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	RuleIds    []string `pulumi:"ruleIds"`
	// A list of Alb Rules. Each element contains the following attributes:
	Rules []GetRulesRule `pulumi:"rules"`
	// The status of the forwarding rule.
	Status *string `pulumi:"status"`
}

func GetRulesOutput(ctx *pulumi.Context, args GetRulesOutputArgs, opts ...pulumi.InvokeOption) GetRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRulesResultOutput, error) {
			args := v.(GetRulesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetRulesResult
			secret, err := ctx.InvokePackageRaw("alicloud:alb/getRules:getRules", args, &rv, "", opts...)
			if err != nil {
				return GetRulesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetRulesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetRulesResultOutput), nil
			}
			return output, nil
		}).(GetRulesResultOutput)
}

// A collection of arguments for invoking getRules.
type GetRulesOutputArgs struct {
	// A list of Rule IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The listener ids.
	ListenerIds pulumi.StringArrayInput `pulumi:"listenerIds"`
	// The load balancer ids.
	LoadBalancerIds pulumi.StringArrayInput `pulumi:"loadBalancerIds"`
	// A regex string to filter results by Rule name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The rule ids.
	RuleIds pulumi.StringArrayInput `pulumi:"ruleIds"`
	// The status of the forwarding rule. Valid values: `Provisioning`, `Configuring`, `Available`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesArgs)(nil)).Elem()
}

// A collection of values returned by getRules.
type GetRulesResultOutput struct{ *pulumi.OutputState }

func (GetRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesResult)(nil)).Elem()
}

func (o GetRulesResultOutput) ToGetRulesResultOutput() GetRulesResultOutput {
	return o
}

func (o GetRulesResultOutput) ToGetRulesResultOutputWithContext(ctx context.Context) GetRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRulesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) ListenerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.ListenerIds }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) LoadBalancerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.LoadBalancerIds }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Rule names.
func (o GetRulesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetRulesResultOutput) RuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []string { return v.RuleIds }).(pulumi.StringArrayOutput)
}

// A list of Alb Rules. Each element contains the following attributes:
func (o GetRulesResultOutput) Rules() GetRulesRuleArrayOutput {
	return o.ApplyT(func(v GetRulesResult) []GetRulesRule { return v.Rules }).(GetRulesRuleArrayOutput)
}

// The status of the forwarding rule.
func (o GetRulesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRulesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRulesResultOutput{})
}
