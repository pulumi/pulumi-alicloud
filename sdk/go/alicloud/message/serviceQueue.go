// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package message

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Message Service Queue resource.
//
// For information about Message Service Queue and how to use it, see [What is Queue](https://www.alibabacloud.com/help/en/message-service/latest/createqueue).
//
// > **NOTE:** Available since v1.188.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/message"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_, err := message.NewServiceQueue(ctx, "default", &message.ServiceQueueArgs{
//				QueueName:              pulumi.String(name),
//				DelaySeconds:           pulumi.Int(2),
//				PollingWaitSeconds:     pulumi.Int(2),
//				MessageRetentionPeriod: pulumi.Int(566),
//				MaximumMessageSize:     pulumi.Int(1126),
//				VisibilityTimeout:      pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Message Service Queue can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:message/serviceQueue:ServiceQueue example <id>
// ```
type ServiceQueue struct {
	pulumi.CustomResourceState

	// (Available since v1.223.2) The time when the queue was created.
	CreateTime pulumi.IntOutput `pulumi:"createTime"`
	// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
	DelaySeconds pulumi.IntOutput `pulumi:"delaySeconds"`
	// The dead-letter queue policy. See `dlqPolicy` below.
	DlqPolicy ServiceQueueDlqPolicyOutput `pulumi:"dlqPolicy"`
	// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
	LoggingEnabled pulumi.BoolPtrOutput `pulumi:"loggingEnabled"`
	// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
	MaximumMessageSize pulumi.IntOutput `pulumi:"maximumMessageSize"`
	// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
	MessageRetentionPeriod pulumi.IntOutput `pulumi:"messageRetentionPeriod"`
	// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
	PollingWaitSeconds pulumi.IntOutput `pulumi:"pollingWaitSeconds"`
	// The name of the queue.
	QueueName pulumi.StringOutput `pulumi:"queueName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
	VisibilityTimeout pulumi.IntOutput `pulumi:"visibilityTimeout"`
}

// NewServiceQueue registers a new resource with the given unique name, arguments, and options.
func NewServiceQueue(ctx *pulumi.Context,
	name string, args *ServiceQueueArgs, opts ...pulumi.ResourceOption) (*ServiceQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QueueName == nil {
		return nil, errors.New("invalid value for required argument 'QueueName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceQueue
	err := ctx.RegisterResource("alicloud:message/serviceQueue:ServiceQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceQueue gets an existing ServiceQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceQueueState, opts ...pulumi.ResourceOption) (*ServiceQueue, error) {
	var resource ServiceQueue
	err := ctx.ReadResource("alicloud:message/serviceQueue:ServiceQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceQueue resources.
type serviceQueueState struct {
	// (Available since v1.223.2) The time when the queue was created.
	CreateTime *int `pulumi:"createTime"`
	// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
	DelaySeconds *int `pulumi:"delaySeconds"`
	// The dead-letter queue policy. See `dlqPolicy` below.
	DlqPolicy *ServiceQueueDlqPolicy `pulumi:"dlqPolicy"`
	// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
	LoggingEnabled *bool `pulumi:"loggingEnabled"`
	// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
	MaximumMessageSize *int `pulumi:"maximumMessageSize"`
	// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
	MessageRetentionPeriod *int `pulumi:"messageRetentionPeriod"`
	// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
	PollingWaitSeconds *int `pulumi:"pollingWaitSeconds"`
	// The name of the queue.
	QueueName *string `pulumi:"queueName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
	VisibilityTimeout *int `pulumi:"visibilityTimeout"`
}

type ServiceQueueState struct {
	// (Available since v1.223.2) The time when the queue was created.
	CreateTime pulumi.IntPtrInput
	// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
	DelaySeconds pulumi.IntPtrInput
	// The dead-letter queue policy. See `dlqPolicy` below.
	DlqPolicy ServiceQueueDlqPolicyPtrInput
	// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
	LoggingEnabled pulumi.BoolPtrInput
	// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
	MaximumMessageSize pulumi.IntPtrInput
	// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
	MessageRetentionPeriod pulumi.IntPtrInput
	// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
	PollingWaitSeconds pulumi.IntPtrInput
	// The name of the queue.
	QueueName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
	VisibilityTimeout pulumi.IntPtrInput
}

func (ServiceQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQueueState)(nil)).Elem()
}

type serviceQueueArgs struct {
	// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
	DelaySeconds *int `pulumi:"delaySeconds"`
	// The dead-letter queue policy. See `dlqPolicy` below.
	DlqPolicy *ServiceQueueDlqPolicy `pulumi:"dlqPolicy"`
	// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
	LoggingEnabled *bool `pulumi:"loggingEnabled"`
	// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
	MaximumMessageSize *int `pulumi:"maximumMessageSize"`
	// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
	MessageRetentionPeriod *int `pulumi:"messageRetentionPeriod"`
	// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
	PollingWaitSeconds *int `pulumi:"pollingWaitSeconds"`
	// The name of the queue.
	QueueName string `pulumi:"queueName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
	VisibilityTimeout *int `pulumi:"visibilityTimeout"`
}

// The set of arguments for constructing a ServiceQueue resource.
type ServiceQueueArgs struct {
	// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
	DelaySeconds pulumi.IntPtrInput
	// The dead-letter queue policy. See `dlqPolicy` below.
	DlqPolicy ServiceQueueDlqPolicyPtrInput
	// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
	LoggingEnabled pulumi.BoolPtrInput
	// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
	MaximumMessageSize pulumi.IntPtrInput
	// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
	MessageRetentionPeriod pulumi.IntPtrInput
	// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
	PollingWaitSeconds pulumi.IntPtrInput
	// The name of the queue.
	QueueName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
	VisibilityTimeout pulumi.IntPtrInput
}

func (ServiceQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQueueArgs)(nil)).Elem()
}

type ServiceQueueInput interface {
	pulumi.Input

	ToServiceQueueOutput() ServiceQueueOutput
	ToServiceQueueOutputWithContext(ctx context.Context) ServiceQueueOutput
}

func (*ServiceQueue) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceQueue)(nil)).Elem()
}

func (i *ServiceQueue) ToServiceQueueOutput() ServiceQueueOutput {
	return i.ToServiceQueueOutputWithContext(context.Background())
}

func (i *ServiceQueue) ToServiceQueueOutputWithContext(ctx context.Context) ServiceQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQueueOutput)
}

// ServiceQueueArrayInput is an input type that accepts ServiceQueueArray and ServiceQueueArrayOutput values.
// You can construct a concrete instance of `ServiceQueueArrayInput` via:
//
//	ServiceQueueArray{ ServiceQueueArgs{...} }
type ServiceQueueArrayInput interface {
	pulumi.Input

	ToServiceQueueArrayOutput() ServiceQueueArrayOutput
	ToServiceQueueArrayOutputWithContext(context.Context) ServiceQueueArrayOutput
}

type ServiceQueueArray []ServiceQueueInput

func (ServiceQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceQueue)(nil)).Elem()
}

func (i ServiceQueueArray) ToServiceQueueArrayOutput() ServiceQueueArrayOutput {
	return i.ToServiceQueueArrayOutputWithContext(context.Background())
}

func (i ServiceQueueArray) ToServiceQueueArrayOutputWithContext(ctx context.Context) ServiceQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQueueArrayOutput)
}

// ServiceQueueMapInput is an input type that accepts ServiceQueueMap and ServiceQueueMapOutput values.
// You can construct a concrete instance of `ServiceQueueMapInput` via:
//
//	ServiceQueueMap{ "key": ServiceQueueArgs{...} }
type ServiceQueueMapInput interface {
	pulumi.Input

	ToServiceQueueMapOutput() ServiceQueueMapOutput
	ToServiceQueueMapOutputWithContext(context.Context) ServiceQueueMapOutput
}

type ServiceQueueMap map[string]ServiceQueueInput

func (ServiceQueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceQueue)(nil)).Elem()
}

func (i ServiceQueueMap) ToServiceQueueMapOutput() ServiceQueueMapOutput {
	return i.ToServiceQueueMapOutputWithContext(context.Background())
}

func (i ServiceQueueMap) ToServiceQueueMapOutputWithContext(ctx context.Context) ServiceQueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQueueMapOutput)
}

type ServiceQueueOutput struct{ *pulumi.OutputState }

func (ServiceQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceQueue)(nil)).Elem()
}

func (o ServiceQueueOutput) ToServiceQueueOutput() ServiceQueueOutput {
	return o
}

func (o ServiceQueueOutput) ToServiceQueueOutputWithContext(ctx context.Context) ServiceQueueOutput {
	return o
}

// (Available since v1.223.2) The time when the queue was created.
func (o ServiceQueueOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.CreateTime }).(pulumi.IntOutput)
}

// The period after which all messages sent to the queue are consumed. Default value: `0`. Valid values: `0` to `604800`. Unit: seconds.
func (o ServiceQueueOutput) DelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.DelaySeconds }).(pulumi.IntOutput)
}

// The dead-letter queue policy. See `dlqPolicy` below.
func (o ServiceQueueOutput) DlqPolicy() ServiceQueueDlqPolicyOutput {
	return o.ApplyT(func(v *ServiceQueue) ServiceQueueDlqPolicyOutput { return v.DlqPolicy }).(ServiceQueueDlqPolicyOutput)
}

// Specifies whether to enable the logging feature. Default value: `false`. Valid values:
func (o ServiceQueueOutput) LoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.BoolPtrOutput { return v.LoggingEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum length of the message that is sent to the queue. Valid values: `1024` to `65536`. Unit: bytes. Default value: `65536`.
func (o ServiceQueueOutput) MaximumMessageSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.MaximumMessageSize }).(pulumi.IntOutput)
}

// The maximum duration for which a message is retained in the queue. After the specified retention period ends, the message is deleted regardless of whether the message is received. Valid values: `60` to `604800`. Unit: seconds. Default value: `345600`.
func (o ServiceQueueOutput) MessageRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.MessageRetentionPeriod }).(pulumi.IntOutput)
}

// The maximum duration for which long polling requests are held after the ReceiveMessage operation is called. Valid values: `0` to `30`. Unit: seconds. Default value: `0`.
func (o ServiceQueueOutput) PollingWaitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.PollingWaitSeconds }).(pulumi.IntOutput)
}

// The name of the queue.
func (o ServiceQueueOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o ServiceQueueOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The duration for which a message stays in the Inactive state after the message is received from the queue. Valid values: `1` to `43200`. Unit: seconds. Default value: `30`.
func (o ServiceQueueOutput) VisibilityTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceQueue) pulumi.IntOutput { return v.VisibilityTimeout }).(pulumi.IntOutput)
}

type ServiceQueueArrayOutput struct{ *pulumi.OutputState }

func (ServiceQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceQueue)(nil)).Elem()
}

func (o ServiceQueueArrayOutput) ToServiceQueueArrayOutput() ServiceQueueArrayOutput {
	return o
}

func (o ServiceQueueArrayOutput) ToServiceQueueArrayOutputWithContext(ctx context.Context) ServiceQueueArrayOutput {
	return o
}

func (o ServiceQueueArrayOutput) Index(i pulumi.IntInput) ServiceQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceQueue {
		return vs[0].([]*ServiceQueue)[vs[1].(int)]
	}).(ServiceQueueOutput)
}

type ServiceQueueMapOutput struct{ *pulumi.OutputState }

func (ServiceQueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceQueue)(nil)).Elem()
}

func (o ServiceQueueMapOutput) ToServiceQueueMapOutput() ServiceQueueMapOutput {
	return o
}

func (o ServiceQueueMapOutput) ToServiceQueueMapOutputWithContext(ctx context.Context) ServiceQueueMapOutput {
	return o
}

func (o ServiceQueueMapOutput) MapIndex(k pulumi.StringInput) ServiceQueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceQueue {
		return vs[0].(map[string]*ServiceQueue)[vs[1].(string)]
	}).(ServiceQueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQueueInput)(nil)).Elem(), &ServiceQueue{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQueueArrayInput)(nil)).Elem(), ServiceQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQueueMapInput)(nil)).Elem(), ServiceQueueMap{})
	pulumi.RegisterOutputType(ServiceQueueOutput{})
	pulumi.RegisterOutputType(ServiceQueueArrayOutput{})
	pulumi.RegisterOutputType(ServiceQueueMapOutput{})
}
