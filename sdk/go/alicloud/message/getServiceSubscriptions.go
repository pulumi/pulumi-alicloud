// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package message

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the Message Notification Service Subscriptions of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.188.0+.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/message"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := message.GetServiceSubscriptions(ctx, &message.GetServiceSubscriptionsArgs{
//				Ids: []string{
//					"example_id",
//				},
//				TopicName: "tf-example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("subscriptionId1", ids.Subscriptions[0].Id)
//			name, err := message.GetServiceSubscriptions(ctx, &message.GetServiceSubscriptionsArgs{
//				TopicName: "tf-example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("subscriptionId2", name.Subscriptions[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetServiceSubscriptions(ctx *pulumi.Context, args *GetServiceSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetServiceSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceSubscriptionsResult
	err := ctx.Invoke("alicloud:message/getServiceSubscriptions:getServiceSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceSubscriptions.
type GetServiceSubscriptionsArgs struct {
	// A list of Subscription IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Subscription name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	PageNumber *int    `pulumi:"pageNumber"`
	PageSize   *int    `pulumi:"pageSize"`
	// The name of the subscription.
	SubscriptionName *string `pulumi:"subscriptionName"`
	// The name of the topic.
	TopicName string `pulumi:"topicName"`
}

// A collection of values returned by getServiceSubscriptions.
type GetServiceSubscriptionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Subscription names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	PageNumber *int     `pulumi:"pageNumber"`
	PageSize   *int     `pulumi:"pageSize"`
	// The name of the subscription.
	SubscriptionName *string `pulumi:"subscriptionName"`
	// A list of Subscriptions. Each element contains the following attributes:
	Subscriptions []GetServiceSubscriptionsSubscription `pulumi:"subscriptions"`
	// The name of the topic.
	TopicName string `pulumi:"topicName"`
}

func GetServiceSubscriptionsOutput(ctx *pulumi.Context, args GetServiceSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetServiceSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceSubscriptionsResult, error) {
			args := v.(GetServiceSubscriptionsArgs)
			r, err := GetServiceSubscriptions(ctx, &args, opts...)
			var s GetServiceSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceSubscriptionsResultOutput)
}

// A collection of arguments for invoking getServiceSubscriptions.
type GetServiceSubscriptionsOutputArgs struct {
	// A list of Subscription IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Subscription name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	PageNumber pulumi.IntPtrInput    `pulumi:"pageNumber"`
	PageSize   pulumi.IntPtrInput    `pulumi:"pageSize"`
	// The name of the subscription.
	SubscriptionName pulumi.StringPtrInput `pulumi:"subscriptionName"`
	// The name of the topic.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (GetServiceSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getServiceSubscriptions.
type GetServiceSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetServiceSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSubscriptionsResult)(nil)).Elem()
}

func (o GetServiceSubscriptionsResultOutput) ToGetServiceSubscriptionsResultOutput() GetServiceSubscriptionsResultOutput {
	return o
}

func (o GetServiceSubscriptionsResultOutput) ToGetServiceSubscriptionsResultOutputWithContext(ctx context.Context) GetServiceSubscriptionsResultOutput {
	return o
}

func (o GetServiceSubscriptionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceSubscriptionsResult] {
	return pulumix.Output[GetServiceSubscriptionsResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceSubscriptionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetServiceSubscriptionsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Subscription names.
func (o GetServiceSubscriptionsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetServiceSubscriptionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetServiceSubscriptionsResultOutput) PageNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) *int { return v.PageNumber }).(pulumi.IntPtrOutput)
}

func (o GetServiceSubscriptionsResultOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The name of the subscription.
func (o GetServiceSubscriptionsResultOutput) SubscriptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) *string { return v.SubscriptionName }).(pulumi.StringPtrOutput)
}

// A list of Subscriptions. Each element contains the following attributes:
func (o GetServiceSubscriptionsResultOutput) Subscriptions() GetServiceSubscriptionsSubscriptionArrayOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) []GetServiceSubscriptionsSubscription { return v.Subscriptions }).(GetServiceSubscriptionsSubscriptionArrayOutput)
}

// The name of the topic.
func (o GetServiceSubscriptionsResultOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSubscriptionsResult) string { return v.TopicName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceSubscriptionsResultOutput{})
}
