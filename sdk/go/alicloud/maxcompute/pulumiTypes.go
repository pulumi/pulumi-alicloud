// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maxcompute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ProjectIpWhiteList struct {
	// Classic network IP white list.
	IpList *string `pulumi:"ipList"`
	// VPC network whitelist.
	VpcIpList *string `pulumi:"vpcIpList"`
}

// ProjectIpWhiteListInput is an input type that accepts ProjectIpWhiteListArgs and ProjectIpWhiteListOutput values.
// You can construct a concrete instance of `ProjectIpWhiteListInput` via:
//
//	ProjectIpWhiteListArgs{...}
type ProjectIpWhiteListInput interface {
	pulumi.Input

	ToProjectIpWhiteListOutput() ProjectIpWhiteListOutput
	ToProjectIpWhiteListOutputWithContext(context.Context) ProjectIpWhiteListOutput
}

type ProjectIpWhiteListArgs struct {
	// Classic network IP white list.
	IpList pulumi.StringPtrInput `pulumi:"ipList"`
	// VPC network whitelist.
	VpcIpList pulumi.StringPtrInput `pulumi:"vpcIpList"`
}

func (ProjectIpWhiteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIpWhiteList)(nil)).Elem()
}

func (i ProjectIpWhiteListArgs) ToProjectIpWhiteListOutput() ProjectIpWhiteListOutput {
	return i.ToProjectIpWhiteListOutputWithContext(context.Background())
}

func (i ProjectIpWhiteListArgs) ToProjectIpWhiteListOutputWithContext(ctx context.Context) ProjectIpWhiteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIpWhiteListOutput)
}

func (i ProjectIpWhiteListArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectIpWhiteList] {
	return pulumix.Output[ProjectIpWhiteList]{
		OutputState: i.ToProjectIpWhiteListOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectIpWhiteListArgs) ToProjectIpWhiteListPtrOutput() ProjectIpWhiteListPtrOutput {
	return i.ToProjectIpWhiteListPtrOutputWithContext(context.Background())
}

func (i ProjectIpWhiteListArgs) ToProjectIpWhiteListPtrOutputWithContext(ctx context.Context) ProjectIpWhiteListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIpWhiteListOutput).ToProjectIpWhiteListPtrOutputWithContext(ctx)
}

// ProjectIpWhiteListPtrInput is an input type that accepts ProjectIpWhiteListArgs, ProjectIpWhiteListPtr and ProjectIpWhiteListPtrOutput values.
// You can construct a concrete instance of `ProjectIpWhiteListPtrInput` via:
//
//	        ProjectIpWhiteListArgs{...}
//
//	or:
//
//	        nil
type ProjectIpWhiteListPtrInput interface {
	pulumi.Input

	ToProjectIpWhiteListPtrOutput() ProjectIpWhiteListPtrOutput
	ToProjectIpWhiteListPtrOutputWithContext(context.Context) ProjectIpWhiteListPtrOutput
}

type projectIpWhiteListPtrType ProjectIpWhiteListArgs

func ProjectIpWhiteListPtr(v *ProjectIpWhiteListArgs) ProjectIpWhiteListPtrInput {
	return (*projectIpWhiteListPtrType)(v)
}

func (*projectIpWhiteListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIpWhiteList)(nil)).Elem()
}

func (i *projectIpWhiteListPtrType) ToProjectIpWhiteListPtrOutput() ProjectIpWhiteListPtrOutput {
	return i.ToProjectIpWhiteListPtrOutputWithContext(context.Background())
}

func (i *projectIpWhiteListPtrType) ToProjectIpWhiteListPtrOutputWithContext(ctx context.Context) ProjectIpWhiteListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIpWhiteListPtrOutput)
}

func (i *projectIpWhiteListPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectIpWhiteList] {
	return pulumix.Output[*ProjectIpWhiteList]{
		OutputState: i.ToProjectIpWhiteListPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectIpWhiteListOutput struct{ *pulumi.OutputState }

func (ProjectIpWhiteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIpWhiteList)(nil)).Elem()
}

func (o ProjectIpWhiteListOutput) ToProjectIpWhiteListOutput() ProjectIpWhiteListOutput {
	return o
}

func (o ProjectIpWhiteListOutput) ToProjectIpWhiteListOutputWithContext(ctx context.Context) ProjectIpWhiteListOutput {
	return o
}

func (o ProjectIpWhiteListOutput) ToProjectIpWhiteListPtrOutput() ProjectIpWhiteListPtrOutput {
	return o.ToProjectIpWhiteListPtrOutputWithContext(context.Background())
}

func (o ProjectIpWhiteListOutput) ToProjectIpWhiteListPtrOutputWithContext(ctx context.Context) ProjectIpWhiteListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectIpWhiteList) *ProjectIpWhiteList {
		return &v
	}).(ProjectIpWhiteListPtrOutput)
}

func (o ProjectIpWhiteListOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectIpWhiteList] {
	return pulumix.Output[ProjectIpWhiteList]{
		OutputState: o.OutputState,
	}
}

// Classic network IP white list.
func (o ProjectIpWhiteListOutput) IpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIpWhiteList) *string { return v.IpList }).(pulumi.StringPtrOutput)
}

// VPC network whitelist.
func (o ProjectIpWhiteListOutput) VpcIpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIpWhiteList) *string { return v.VpcIpList }).(pulumi.StringPtrOutput)
}

type ProjectIpWhiteListPtrOutput struct{ *pulumi.OutputState }

func (ProjectIpWhiteListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIpWhiteList)(nil)).Elem()
}

func (o ProjectIpWhiteListPtrOutput) ToProjectIpWhiteListPtrOutput() ProjectIpWhiteListPtrOutput {
	return o
}

func (o ProjectIpWhiteListPtrOutput) ToProjectIpWhiteListPtrOutputWithContext(ctx context.Context) ProjectIpWhiteListPtrOutput {
	return o
}

func (o ProjectIpWhiteListPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectIpWhiteList] {
	return pulumix.Output[*ProjectIpWhiteList]{
		OutputState: o.OutputState,
	}
}

func (o ProjectIpWhiteListPtrOutput) Elem() ProjectIpWhiteListOutput {
	return o.ApplyT(func(v *ProjectIpWhiteList) ProjectIpWhiteList {
		if v != nil {
			return *v
		}
		var ret ProjectIpWhiteList
		return ret
	}).(ProjectIpWhiteListOutput)
}

// Classic network IP white list.
func (o ProjectIpWhiteListPtrOutput) IpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIpWhiteList) *string {
		if v == nil {
			return nil
		}
		return v.IpList
	}).(pulumi.StringPtrOutput)
}

// VPC network whitelist.
func (o ProjectIpWhiteListPtrOutput) VpcIpList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIpWhiteList) *string {
		if v == nil {
			return nil
		}
		return v.VpcIpList
	}).(pulumi.StringPtrOutput)
}

type ProjectProperties struct {
	// Whether to allow full table scan.
	AllowFullScan *bool `pulumi:"allowFullScan"`
	// Whether to turn on Decimal2.0.
	EnableDecimal2 *bool `pulumi:"enableDecimal2"`
	// Whether encryption is turned on. See `encryption` below.
	Encryption *ProjectPropertiesEncryption `pulumi:"encryption"`
	// Job default retention time.
	RetentionDays *int `pulumi:"retentionDays"`
	// SQL charge limit.
	SqlMeteringMax *string `pulumi:"sqlMeteringMax"`
	// Life cycle of tables. See `tableLifecycle` below.
	TableLifecycle *ProjectPropertiesTableLifecycle `pulumi:"tableLifecycle"`
	// Project time zone.
	Timezone *string `pulumi:"timezone"`
	// Type system.
	TypeSystem *string `pulumi:"typeSystem"`
}

// ProjectPropertiesInput is an input type that accepts ProjectPropertiesArgs and ProjectPropertiesOutput values.
// You can construct a concrete instance of `ProjectPropertiesInput` via:
//
//	ProjectPropertiesArgs{...}
type ProjectPropertiesInput interface {
	pulumi.Input

	ToProjectPropertiesOutput() ProjectPropertiesOutput
	ToProjectPropertiesOutputWithContext(context.Context) ProjectPropertiesOutput
}

type ProjectPropertiesArgs struct {
	// Whether to allow full table scan.
	AllowFullScan pulumi.BoolPtrInput `pulumi:"allowFullScan"`
	// Whether to turn on Decimal2.0.
	EnableDecimal2 pulumi.BoolPtrInput `pulumi:"enableDecimal2"`
	// Whether encryption is turned on. See `encryption` below.
	Encryption ProjectPropertiesEncryptionPtrInput `pulumi:"encryption"`
	// Job default retention time.
	RetentionDays pulumi.IntPtrInput `pulumi:"retentionDays"`
	// SQL charge limit.
	SqlMeteringMax pulumi.StringPtrInput `pulumi:"sqlMeteringMax"`
	// Life cycle of tables. See `tableLifecycle` below.
	TableLifecycle ProjectPropertiesTableLifecyclePtrInput `pulumi:"tableLifecycle"`
	// Project time zone.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// Type system.
	TypeSystem pulumi.StringPtrInput `pulumi:"typeSystem"`
}

func (ProjectPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProperties)(nil)).Elem()
}

func (i ProjectPropertiesArgs) ToProjectPropertiesOutput() ProjectPropertiesOutput {
	return i.ToProjectPropertiesOutputWithContext(context.Background())
}

func (i ProjectPropertiesArgs) ToProjectPropertiesOutputWithContext(ctx context.Context) ProjectPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesOutput)
}

func (i ProjectPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectProperties] {
	return pulumix.Output[ProjectProperties]{
		OutputState: i.ToProjectPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectPropertiesArgs) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return i.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (i ProjectPropertiesArgs) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesOutput).ToProjectPropertiesPtrOutputWithContext(ctx)
}

// ProjectPropertiesPtrInput is an input type that accepts ProjectPropertiesArgs, ProjectPropertiesPtr and ProjectPropertiesPtrOutput values.
// You can construct a concrete instance of `ProjectPropertiesPtrInput` via:
//
//	        ProjectPropertiesArgs{...}
//
//	or:
//
//	        nil
type ProjectPropertiesPtrInput interface {
	pulumi.Input

	ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput
	ToProjectPropertiesPtrOutputWithContext(context.Context) ProjectPropertiesPtrOutput
}

type projectPropertiesPtrType ProjectPropertiesArgs

func ProjectPropertiesPtr(v *ProjectPropertiesArgs) ProjectPropertiesPtrInput {
	return (*projectPropertiesPtrType)(v)
}

func (*projectPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProperties)(nil)).Elem()
}

func (i *projectPropertiesPtrType) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return i.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (i *projectPropertiesPtrType) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesPtrOutput)
}

func (i *projectPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectProperties] {
	return pulumix.Output[*ProjectProperties]{
		OutputState: i.ToProjectPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectPropertiesOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProperties)(nil)).Elem()
}

func (o ProjectPropertiesOutput) ToProjectPropertiesOutput() ProjectPropertiesOutput {
	return o
}

func (o ProjectPropertiesOutput) ToProjectPropertiesOutputWithContext(ctx context.Context) ProjectPropertiesOutput {
	return o
}

func (o ProjectPropertiesOutput) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return o.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (o ProjectPropertiesOutput) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectProperties) *ProjectProperties {
		return &v
	}).(ProjectPropertiesPtrOutput)
}

func (o ProjectPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectProperties] {
	return pulumix.Output[ProjectProperties]{
		OutputState: o.OutputState,
	}
}

// Whether to allow full table scan.
func (o ProjectPropertiesOutput) AllowFullScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *bool { return v.AllowFullScan }).(pulumi.BoolPtrOutput)
}

// Whether to turn on Decimal2.0.
func (o ProjectPropertiesOutput) EnableDecimal2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *bool { return v.EnableDecimal2 }).(pulumi.BoolPtrOutput)
}

// Whether encryption is turned on. See `encryption` below.
func (o ProjectPropertiesOutput) Encryption() ProjectPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *ProjectPropertiesEncryption { return v.Encryption }).(ProjectPropertiesEncryptionPtrOutput)
}

// Job default retention time.
func (o ProjectPropertiesOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

// SQL charge limit.
func (o ProjectPropertiesOutput) SqlMeteringMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *string { return v.SqlMeteringMax }).(pulumi.StringPtrOutput)
}

// Life cycle of tables. See `tableLifecycle` below.
func (o ProjectPropertiesOutput) TableLifecycle() ProjectPropertiesTableLifecyclePtrOutput {
	return o.ApplyT(func(v ProjectProperties) *ProjectPropertiesTableLifecycle { return v.TableLifecycle }).(ProjectPropertiesTableLifecyclePtrOutput)
}

// Project time zone.
func (o ProjectPropertiesOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// Type system.
func (o ProjectPropertiesOutput) TypeSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *string { return v.TypeSystem }).(pulumi.StringPtrOutput)
}

type ProjectPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProperties)(nil)).Elem()
}

func (o ProjectPropertiesPtrOutput) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return o
}

func (o ProjectPropertiesPtrOutput) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return o
}

func (o ProjectPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectProperties] {
	return pulumix.Output[*ProjectProperties]{
		OutputState: o.OutputState,
	}
}

func (o ProjectPropertiesPtrOutput) Elem() ProjectPropertiesOutput {
	return o.ApplyT(func(v *ProjectProperties) ProjectProperties {
		if v != nil {
			return *v
		}
		var ret ProjectProperties
		return ret
	}).(ProjectPropertiesOutput)
}

// Whether to allow full table scan.
func (o ProjectPropertiesPtrOutput) AllowFullScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowFullScan
	}).(pulumi.BoolPtrOutput)
}

// Whether to turn on Decimal2.0.
func (o ProjectPropertiesPtrOutput) EnableDecimal2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDecimal2
	}).(pulumi.BoolPtrOutput)
}

// Whether encryption is turned on. See `encryption` below.
func (o ProjectPropertiesPtrOutput) Encryption() ProjectPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *ProjectPropertiesEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(ProjectPropertiesEncryptionPtrOutput)
}

// Job default retention time.
func (o ProjectPropertiesPtrOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *int {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.IntPtrOutput)
}

// SQL charge limit.
func (o ProjectPropertiesPtrOutput) SqlMeteringMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.SqlMeteringMax
	}).(pulumi.StringPtrOutput)
}

// Life cycle of tables. See `tableLifecycle` below.
func (o ProjectPropertiesPtrOutput) TableLifecycle() ProjectPropertiesTableLifecyclePtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *ProjectPropertiesTableLifecycle {
		if v == nil {
			return nil
		}
		return v.TableLifecycle
	}).(ProjectPropertiesTableLifecyclePtrOutput)
}

// Project time zone.
func (o ProjectPropertiesPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// Type system.
func (o ProjectPropertiesPtrOutput) TypeSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.TypeSystem
	}).(pulumi.StringPtrOutput)
}

type ProjectPropertiesEncryption struct {
	// Algorithm.
	Algorithm *string `pulumi:"algorithm"`
	// Whether to open.
	Enable *bool `pulumi:"enable"`
	// Encryption algorithm key.
	Key *string `pulumi:"key"`
}

// ProjectPropertiesEncryptionInput is an input type that accepts ProjectPropertiesEncryptionArgs and ProjectPropertiesEncryptionOutput values.
// You can construct a concrete instance of `ProjectPropertiesEncryptionInput` via:
//
//	ProjectPropertiesEncryptionArgs{...}
type ProjectPropertiesEncryptionInput interface {
	pulumi.Input

	ToProjectPropertiesEncryptionOutput() ProjectPropertiesEncryptionOutput
	ToProjectPropertiesEncryptionOutputWithContext(context.Context) ProjectPropertiesEncryptionOutput
}

type ProjectPropertiesEncryptionArgs struct {
	// Algorithm.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Whether to open.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Encryption algorithm key.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ProjectPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPropertiesEncryption)(nil)).Elem()
}

func (i ProjectPropertiesEncryptionArgs) ToProjectPropertiesEncryptionOutput() ProjectPropertiesEncryptionOutput {
	return i.ToProjectPropertiesEncryptionOutputWithContext(context.Background())
}

func (i ProjectPropertiesEncryptionArgs) ToProjectPropertiesEncryptionOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesEncryptionOutput)
}

func (i ProjectPropertiesEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectPropertiesEncryption] {
	return pulumix.Output[ProjectPropertiesEncryption]{
		OutputState: i.ToProjectPropertiesEncryptionOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectPropertiesEncryptionArgs) ToProjectPropertiesEncryptionPtrOutput() ProjectPropertiesEncryptionPtrOutput {
	return i.ToProjectPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i ProjectPropertiesEncryptionArgs) ToProjectPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesEncryptionOutput).ToProjectPropertiesEncryptionPtrOutputWithContext(ctx)
}

// ProjectPropertiesEncryptionPtrInput is an input type that accepts ProjectPropertiesEncryptionArgs, ProjectPropertiesEncryptionPtr and ProjectPropertiesEncryptionPtrOutput values.
// You can construct a concrete instance of `ProjectPropertiesEncryptionPtrInput` via:
//
//	        ProjectPropertiesEncryptionArgs{...}
//
//	or:
//
//	        nil
type ProjectPropertiesEncryptionPtrInput interface {
	pulumi.Input

	ToProjectPropertiesEncryptionPtrOutput() ProjectPropertiesEncryptionPtrOutput
	ToProjectPropertiesEncryptionPtrOutputWithContext(context.Context) ProjectPropertiesEncryptionPtrOutput
}

type projectPropertiesEncryptionPtrType ProjectPropertiesEncryptionArgs

func ProjectPropertiesEncryptionPtr(v *ProjectPropertiesEncryptionArgs) ProjectPropertiesEncryptionPtrInput {
	return (*projectPropertiesEncryptionPtrType)(v)
}

func (*projectPropertiesEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPropertiesEncryption)(nil)).Elem()
}

func (i *projectPropertiesEncryptionPtrType) ToProjectPropertiesEncryptionPtrOutput() ProjectPropertiesEncryptionPtrOutput {
	return i.ToProjectPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i *projectPropertiesEncryptionPtrType) ToProjectPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesEncryptionPtrOutput)
}

func (i *projectPropertiesEncryptionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectPropertiesEncryption] {
	return pulumix.Output[*ProjectPropertiesEncryption]{
		OutputState: i.ToProjectPropertiesEncryptionPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPropertiesEncryption)(nil)).Elem()
}

func (o ProjectPropertiesEncryptionOutput) ToProjectPropertiesEncryptionOutput() ProjectPropertiesEncryptionOutput {
	return o
}

func (o ProjectPropertiesEncryptionOutput) ToProjectPropertiesEncryptionOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionOutput {
	return o
}

func (o ProjectPropertiesEncryptionOutput) ToProjectPropertiesEncryptionPtrOutput() ProjectPropertiesEncryptionPtrOutput {
	return o.ToProjectPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (o ProjectPropertiesEncryptionOutput) ToProjectPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectPropertiesEncryption) *ProjectPropertiesEncryption {
		return &v
	}).(ProjectPropertiesEncryptionPtrOutput)
}

func (o ProjectPropertiesEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectPropertiesEncryption] {
	return pulumix.Output[ProjectPropertiesEncryption]{
		OutputState: o.OutputState,
	}
}

// Algorithm.
func (o ProjectPropertiesEncryptionOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesEncryption) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Whether to open.
func (o ProjectPropertiesEncryptionOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesEncryption) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Encryption algorithm key.
func (o ProjectPropertiesEncryptionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesEncryption) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ProjectPropertiesEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPropertiesEncryption)(nil)).Elem()
}

func (o ProjectPropertiesEncryptionPtrOutput) ToProjectPropertiesEncryptionPtrOutput() ProjectPropertiesEncryptionPtrOutput {
	return o
}

func (o ProjectPropertiesEncryptionPtrOutput) ToProjectPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ProjectPropertiesEncryptionPtrOutput {
	return o
}

func (o ProjectPropertiesEncryptionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectPropertiesEncryption] {
	return pulumix.Output[*ProjectPropertiesEncryption]{
		OutputState: o.OutputState,
	}
}

func (o ProjectPropertiesEncryptionPtrOutput) Elem() ProjectPropertiesEncryptionOutput {
	return o.ApplyT(func(v *ProjectPropertiesEncryption) ProjectPropertiesEncryption {
		if v != nil {
			return *v
		}
		var ret ProjectPropertiesEncryption
		return ret
	}).(ProjectPropertiesEncryptionOutput)
}

// Algorithm.
func (o ProjectPropertiesEncryptionPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPropertiesEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// Whether to open.
func (o ProjectPropertiesEncryptionPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPropertiesEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Encryption algorithm key.
func (o ProjectPropertiesEncryptionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPropertiesEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type ProjectPropertiesTableLifecycle struct {
	// Life cycle type.
	Type *string `pulumi:"type"`
	// The value of the life cycle.
	Value *string `pulumi:"value"`
}

// ProjectPropertiesTableLifecycleInput is an input type that accepts ProjectPropertiesTableLifecycleArgs and ProjectPropertiesTableLifecycleOutput values.
// You can construct a concrete instance of `ProjectPropertiesTableLifecycleInput` via:
//
//	ProjectPropertiesTableLifecycleArgs{...}
type ProjectPropertiesTableLifecycleInput interface {
	pulumi.Input

	ToProjectPropertiesTableLifecycleOutput() ProjectPropertiesTableLifecycleOutput
	ToProjectPropertiesTableLifecycleOutputWithContext(context.Context) ProjectPropertiesTableLifecycleOutput
}

type ProjectPropertiesTableLifecycleArgs struct {
	// Life cycle type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the life cycle.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProjectPropertiesTableLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (i ProjectPropertiesTableLifecycleArgs) ToProjectPropertiesTableLifecycleOutput() ProjectPropertiesTableLifecycleOutput {
	return i.ToProjectPropertiesTableLifecycleOutputWithContext(context.Background())
}

func (i ProjectPropertiesTableLifecycleArgs) ToProjectPropertiesTableLifecycleOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesTableLifecycleOutput)
}

func (i ProjectPropertiesTableLifecycleArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectPropertiesTableLifecycle] {
	return pulumix.Output[ProjectPropertiesTableLifecycle]{
		OutputState: i.ToProjectPropertiesTableLifecycleOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectPropertiesTableLifecycleArgs) ToProjectPropertiesTableLifecyclePtrOutput() ProjectPropertiesTableLifecyclePtrOutput {
	return i.ToProjectPropertiesTableLifecyclePtrOutputWithContext(context.Background())
}

func (i ProjectPropertiesTableLifecycleArgs) ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesTableLifecycleOutput).ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx)
}

// ProjectPropertiesTableLifecyclePtrInput is an input type that accepts ProjectPropertiesTableLifecycleArgs, ProjectPropertiesTableLifecyclePtr and ProjectPropertiesTableLifecyclePtrOutput values.
// You can construct a concrete instance of `ProjectPropertiesTableLifecyclePtrInput` via:
//
//	        ProjectPropertiesTableLifecycleArgs{...}
//
//	or:
//
//	        nil
type ProjectPropertiesTableLifecyclePtrInput interface {
	pulumi.Input

	ToProjectPropertiesTableLifecyclePtrOutput() ProjectPropertiesTableLifecyclePtrOutput
	ToProjectPropertiesTableLifecyclePtrOutputWithContext(context.Context) ProjectPropertiesTableLifecyclePtrOutput
}

type projectPropertiesTableLifecyclePtrType ProjectPropertiesTableLifecycleArgs

func ProjectPropertiesTableLifecyclePtr(v *ProjectPropertiesTableLifecycleArgs) ProjectPropertiesTableLifecyclePtrInput {
	return (*projectPropertiesTableLifecyclePtrType)(v)
}

func (*projectPropertiesTableLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (i *projectPropertiesTableLifecyclePtrType) ToProjectPropertiesTableLifecyclePtrOutput() ProjectPropertiesTableLifecyclePtrOutput {
	return i.ToProjectPropertiesTableLifecyclePtrOutputWithContext(context.Background())
}

func (i *projectPropertiesTableLifecyclePtrType) ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesTableLifecyclePtrOutput)
}

func (i *projectPropertiesTableLifecyclePtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectPropertiesTableLifecycle] {
	return pulumix.Output[*ProjectPropertiesTableLifecycle]{
		OutputState: i.ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectPropertiesTableLifecycleOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesTableLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (o ProjectPropertiesTableLifecycleOutput) ToProjectPropertiesTableLifecycleOutput() ProjectPropertiesTableLifecycleOutput {
	return o
}

func (o ProjectPropertiesTableLifecycleOutput) ToProjectPropertiesTableLifecycleOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecycleOutput {
	return o
}

func (o ProjectPropertiesTableLifecycleOutput) ToProjectPropertiesTableLifecyclePtrOutput() ProjectPropertiesTableLifecyclePtrOutput {
	return o.ToProjectPropertiesTableLifecyclePtrOutputWithContext(context.Background())
}

func (o ProjectPropertiesTableLifecycleOutput) ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectPropertiesTableLifecycle) *ProjectPropertiesTableLifecycle {
		return &v
	}).(ProjectPropertiesTableLifecyclePtrOutput)
}

func (o ProjectPropertiesTableLifecycleOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectPropertiesTableLifecycle] {
	return pulumix.Output[ProjectPropertiesTableLifecycle]{
		OutputState: o.OutputState,
	}
}

// Life cycle type.
func (o ProjectPropertiesTableLifecycleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesTableLifecycle) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the life cycle.
func (o ProjectPropertiesTableLifecycleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesTableLifecycle) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectPropertiesTableLifecyclePtrOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesTableLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (o ProjectPropertiesTableLifecyclePtrOutput) ToProjectPropertiesTableLifecyclePtrOutput() ProjectPropertiesTableLifecyclePtrOutput {
	return o
}

func (o ProjectPropertiesTableLifecyclePtrOutput) ToProjectPropertiesTableLifecyclePtrOutputWithContext(ctx context.Context) ProjectPropertiesTableLifecyclePtrOutput {
	return o
}

func (o ProjectPropertiesTableLifecyclePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectPropertiesTableLifecycle] {
	return pulumix.Output[*ProjectPropertiesTableLifecycle]{
		OutputState: o.OutputState,
	}
}

func (o ProjectPropertiesTableLifecyclePtrOutput) Elem() ProjectPropertiesTableLifecycleOutput {
	return o.ApplyT(func(v *ProjectPropertiesTableLifecycle) ProjectPropertiesTableLifecycle {
		if v != nil {
			return *v
		}
		var ret ProjectPropertiesTableLifecycle
		return ret
	}).(ProjectPropertiesTableLifecycleOutput)
}

// Life cycle type.
func (o ProjectPropertiesTableLifecyclePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPropertiesTableLifecycle) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the life cycle.
func (o ProjectPropertiesTableLifecyclePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPropertiesTableLifecycle) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ProjectSecurityProperties struct {
	// Whether to enable download permission check.
	EnableDownloadPrivilege *bool `pulumi:"enableDownloadPrivilege"`
	// Label authorization.
	LabelSecurity *bool `pulumi:"labelSecurity"`
	// Project creator permissions.
	ObjectCreatorHasAccessPermission *bool `pulumi:"objectCreatorHasAccessPermission"`
	// Does the project creator have authorization rights.
	ObjectCreatorHasGrantPermission *bool `pulumi:"objectCreatorHasGrantPermission"`
	// Project protection. See `projectProtection` below.
	ProjectProtection *ProjectSecurityPropertiesProjectProtection `pulumi:"projectProtection"`
	// Whether to turn on ACL.
	UsingAcl *bool `pulumi:"usingAcl"`
	// Whether to enable Policy.
	UsingPolicy *bool `pulumi:"usingPolicy"`
}

// ProjectSecurityPropertiesInput is an input type that accepts ProjectSecurityPropertiesArgs and ProjectSecurityPropertiesOutput values.
// You can construct a concrete instance of `ProjectSecurityPropertiesInput` via:
//
//	ProjectSecurityPropertiesArgs{...}
type ProjectSecurityPropertiesInput interface {
	pulumi.Input

	ToProjectSecurityPropertiesOutput() ProjectSecurityPropertiesOutput
	ToProjectSecurityPropertiesOutputWithContext(context.Context) ProjectSecurityPropertiesOutput
}

type ProjectSecurityPropertiesArgs struct {
	// Whether to enable download permission check.
	EnableDownloadPrivilege pulumi.BoolPtrInput `pulumi:"enableDownloadPrivilege"`
	// Label authorization.
	LabelSecurity pulumi.BoolPtrInput `pulumi:"labelSecurity"`
	// Project creator permissions.
	ObjectCreatorHasAccessPermission pulumi.BoolPtrInput `pulumi:"objectCreatorHasAccessPermission"`
	// Does the project creator have authorization rights.
	ObjectCreatorHasGrantPermission pulumi.BoolPtrInput `pulumi:"objectCreatorHasGrantPermission"`
	// Project protection. See `projectProtection` below.
	ProjectProtection ProjectSecurityPropertiesProjectProtectionPtrInput `pulumi:"projectProtection"`
	// Whether to turn on ACL.
	UsingAcl pulumi.BoolPtrInput `pulumi:"usingAcl"`
	// Whether to enable Policy.
	UsingPolicy pulumi.BoolPtrInput `pulumi:"usingPolicy"`
}

func (ProjectSecurityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecurityProperties)(nil)).Elem()
}

func (i ProjectSecurityPropertiesArgs) ToProjectSecurityPropertiesOutput() ProjectSecurityPropertiesOutput {
	return i.ToProjectSecurityPropertiesOutputWithContext(context.Background())
}

func (i ProjectSecurityPropertiesArgs) ToProjectSecurityPropertiesOutputWithContext(ctx context.Context) ProjectSecurityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesOutput)
}

func (i ProjectSecurityPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectSecurityProperties] {
	return pulumix.Output[ProjectSecurityProperties]{
		OutputState: i.ToProjectSecurityPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectSecurityPropertiesArgs) ToProjectSecurityPropertiesPtrOutput() ProjectSecurityPropertiesPtrOutput {
	return i.ToProjectSecurityPropertiesPtrOutputWithContext(context.Background())
}

func (i ProjectSecurityPropertiesArgs) ToProjectSecurityPropertiesPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesOutput).ToProjectSecurityPropertiesPtrOutputWithContext(ctx)
}

// ProjectSecurityPropertiesPtrInput is an input type that accepts ProjectSecurityPropertiesArgs, ProjectSecurityPropertiesPtr and ProjectSecurityPropertiesPtrOutput values.
// You can construct a concrete instance of `ProjectSecurityPropertiesPtrInput` via:
//
//	        ProjectSecurityPropertiesArgs{...}
//
//	or:
//
//	        nil
type ProjectSecurityPropertiesPtrInput interface {
	pulumi.Input

	ToProjectSecurityPropertiesPtrOutput() ProjectSecurityPropertiesPtrOutput
	ToProjectSecurityPropertiesPtrOutputWithContext(context.Context) ProjectSecurityPropertiesPtrOutput
}

type projectSecurityPropertiesPtrType ProjectSecurityPropertiesArgs

func ProjectSecurityPropertiesPtr(v *ProjectSecurityPropertiesArgs) ProjectSecurityPropertiesPtrInput {
	return (*projectSecurityPropertiesPtrType)(v)
}

func (*projectSecurityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecurityProperties)(nil)).Elem()
}

func (i *projectSecurityPropertiesPtrType) ToProjectSecurityPropertiesPtrOutput() ProjectSecurityPropertiesPtrOutput {
	return i.ToProjectSecurityPropertiesPtrOutputWithContext(context.Background())
}

func (i *projectSecurityPropertiesPtrType) ToProjectSecurityPropertiesPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesPtrOutput)
}

func (i *projectSecurityPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectSecurityProperties] {
	return pulumix.Output[*ProjectSecurityProperties]{
		OutputState: i.ToProjectSecurityPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectSecurityPropertiesOutput struct{ *pulumi.OutputState }

func (ProjectSecurityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecurityProperties)(nil)).Elem()
}

func (o ProjectSecurityPropertiesOutput) ToProjectSecurityPropertiesOutput() ProjectSecurityPropertiesOutput {
	return o
}

func (o ProjectSecurityPropertiesOutput) ToProjectSecurityPropertiesOutputWithContext(ctx context.Context) ProjectSecurityPropertiesOutput {
	return o
}

func (o ProjectSecurityPropertiesOutput) ToProjectSecurityPropertiesPtrOutput() ProjectSecurityPropertiesPtrOutput {
	return o.ToProjectSecurityPropertiesPtrOutputWithContext(context.Background())
}

func (o ProjectSecurityPropertiesOutput) ToProjectSecurityPropertiesPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSecurityProperties) *ProjectSecurityProperties {
		return &v
	}).(ProjectSecurityPropertiesPtrOutput)
}

func (o ProjectSecurityPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectSecurityProperties] {
	return pulumix.Output[ProjectSecurityProperties]{
		OutputState: o.OutputState,
	}
}

// Whether to enable download permission check.
func (o ProjectSecurityPropertiesOutput) EnableDownloadPrivilege() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.EnableDownloadPrivilege }).(pulumi.BoolPtrOutput)
}

// Label authorization.
func (o ProjectSecurityPropertiesOutput) LabelSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.LabelSecurity }).(pulumi.BoolPtrOutput)
}

// Project creator permissions.
func (o ProjectSecurityPropertiesOutput) ObjectCreatorHasAccessPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.ObjectCreatorHasAccessPermission }).(pulumi.BoolPtrOutput)
}

// Does the project creator have authorization rights.
func (o ProjectSecurityPropertiesOutput) ObjectCreatorHasGrantPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.ObjectCreatorHasGrantPermission }).(pulumi.BoolPtrOutput)
}

// Project protection. See `projectProtection` below.
func (o ProjectSecurityPropertiesOutput) ProjectProtection() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *ProjectSecurityPropertiesProjectProtection {
		return v.ProjectProtection
	}).(ProjectSecurityPropertiesProjectProtectionPtrOutput)
}

// Whether to turn on ACL.
func (o ProjectSecurityPropertiesOutput) UsingAcl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.UsingAcl }).(pulumi.BoolPtrOutput)
}

// Whether to enable Policy.
func (o ProjectSecurityPropertiesOutput) UsingPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityProperties) *bool { return v.UsingPolicy }).(pulumi.BoolPtrOutput)
}

type ProjectSecurityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProjectSecurityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecurityProperties)(nil)).Elem()
}

func (o ProjectSecurityPropertiesPtrOutput) ToProjectSecurityPropertiesPtrOutput() ProjectSecurityPropertiesPtrOutput {
	return o
}

func (o ProjectSecurityPropertiesPtrOutput) ToProjectSecurityPropertiesPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesPtrOutput {
	return o
}

func (o ProjectSecurityPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectSecurityProperties] {
	return pulumix.Output[*ProjectSecurityProperties]{
		OutputState: o.OutputState,
	}
}

func (o ProjectSecurityPropertiesPtrOutput) Elem() ProjectSecurityPropertiesOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) ProjectSecurityProperties {
		if v != nil {
			return *v
		}
		var ret ProjectSecurityProperties
		return ret
	}).(ProjectSecurityPropertiesOutput)
}

// Whether to enable download permission check.
func (o ProjectSecurityPropertiesPtrOutput) EnableDownloadPrivilege() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDownloadPrivilege
	}).(pulumi.BoolPtrOutput)
}

// Label authorization.
func (o ProjectSecurityPropertiesPtrOutput) LabelSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.LabelSecurity
	}).(pulumi.BoolPtrOutput)
}

// Project creator permissions.
func (o ProjectSecurityPropertiesPtrOutput) ObjectCreatorHasAccessPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ObjectCreatorHasAccessPermission
	}).(pulumi.BoolPtrOutput)
}

// Does the project creator have authorization rights.
func (o ProjectSecurityPropertiesPtrOutput) ObjectCreatorHasGrantPermission() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ObjectCreatorHasGrantPermission
	}).(pulumi.BoolPtrOutput)
}

// Project protection. See `projectProtection` below.
func (o ProjectSecurityPropertiesPtrOutput) ProjectProtection() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *ProjectSecurityPropertiesProjectProtection {
		if v == nil {
			return nil
		}
		return v.ProjectProtection
	}).(ProjectSecurityPropertiesProjectProtectionPtrOutput)
}

// Whether to turn on ACL.
func (o ProjectSecurityPropertiesPtrOutput) UsingAcl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.UsingAcl
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable Policy.
func (o ProjectSecurityPropertiesPtrOutput) UsingPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityProperties) *bool {
		if v == nil {
			return nil
		}
		return v.UsingPolicy
	}).(pulumi.BoolPtrOutput)
}

type ProjectSecurityPropertiesProjectProtection struct {
	// Exclusion policy.
	ExceptionPolicy *string `pulumi:"exceptionPolicy"`
	// Is it turned on.
	Protected *bool `pulumi:"protected"`
}

// ProjectSecurityPropertiesProjectProtectionInput is an input type that accepts ProjectSecurityPropertiesProjectProtectionArgs and ProjectSecurityPropertiesProjectProtectionOutput values.
// You can construct a concrete instance of `ProjectSecurityPropertiesProjectProtectionInput` via:
//
//	ProjectSecurityPropertiesProjectProtectionArgs{...}
type ProjectSecurityPropertiesProjectProtectionInput interface {
	pulumi.Input

	ToProjectSecurityPropertiesProjectProtectionOutput() ProjectSecurityPropertiesProjectProtectionOutput
	ToProjectSecurityPropertiesProjectProtectionOutputWithContext(context.Context) ProjectSecurityPropertiesProjectProtectionOutput
}

type ProjectSecurityPropertiesProjectProtectionArgs struct {
	// Exclusion policy.
	ExceptionPolicy pulumi.StringPtrInput `pulumi:"exceptionPolicy"`
	// Is it turned on.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
}

func (ProjectSecurityPropertiesProjectProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (i ProjectSecurityPropertiesProjectProtectionArgs) ToProjectSecurityPropertiesProjectProtectionOutput() ProjectSecurityPropertiesProjectProtectionOutput {
	return i.ToProjectSecurityPropertiesProjectProtectionOutputWithContext(context.Background())
}

func (i ProjectSecurityPropertiesProjectProtectionArgs) ToProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesProjectProtectionOutput)
}

func (i ProjectSecurityPropertiesProjectProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[ProjectSecurityPropertiesProjectProtection]{
		OutputState: i.ToProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectSecurityPropertiesProjectProtectionArgs) ToProjectSecurityPropertiesProjectProtectionPtrOutput() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return i.ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(context.Background())
}

func (i ProjectSecurityPropertiesProjectProtectionArgs) ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesProjectProtectionOutput).ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx)
}

// ProjectSecurityPropertiesProjectProtectionPtrInput is an input type that accepts ProjectSecurityPropertiesProjectProtectionArgs, ProjectSecurityPropertiesProjectProtectionPtr and ProjectSecurityPropertiesProjectProtectionPtrOutput values.
// You can construct a concrete instance of `ProjectSecurityPropertiesProjectProtectionPtrInput` via:
//
//	        ProjectSecurityPropertiesProjectProtectionArgs{...}
//
//	or:
//
//	        nil
type ProjectSecurityPropertiesProjectProtectionPtrInput interface {
	pulumi.Input

	ToProjectSecurityPropertiesProjectProtectionPtrOutput() ProjectSecurityPropertiesProjectProtectionPtrOutput
	ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(context.Context) ProjectSecurityPropertiesProjectProtectionPtrOutput
}

type projectSecurityPropertiesProjectProtectionPtrType ProjectSecurityPropertiesProjectProtectionArgs

func ProjectSecurityPropertiesProjectProtectionPtr(v *ProjectSecurityPropertiesProjectProtectionArgs) ProjectSecurityPropertiesProjectProtectionPtrInput {
	return (*projectSecurityPropertiesProjectProtectionPtrType)(v)
}

func (*projectSecurityPropertiesProjectProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (i *projectSecurityPropertiesProjectProtectionPtrType) ToProjectSecurityPropertiesProjectProtectionPtrOutput() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return i.ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(context.Background())
}

func (i *projectSecurityPropertiesProjectProtectionPtrType) ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecurityPropertiesProjectProtectionPtrOutput)
}

func (i *projectSecurityPropertiesProjectProtectionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[*ProjectSecurityPropertiesProjectProtection]{
		OutputState: i.ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectSecurityPropertiesProjectProtectionOutput struct{ *pulumi.OutputState }

func (ProjectSecurityPropertiesProjectProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (o ProjectSecurityPropertiesProjectProtectionOutput) ToProjectSecurityPropertiesProjectProtectionOutput() ProjectSecurityPropertiesProjectProtectionOutput {
	return o
}

func (o ProjectSecurityPropertiesProjectProtectionOutput) ToProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionOutput {
	return o
}

func (o ProjectSecurityPropertiesProjectProtectionOutput) ToProjectSecurityPropertiesProjectProtectionPtrOutput() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o.ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(context.Background())
}

func (o ProjectSecurityPropertiesProjectProtectionOutput) ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSecurityPropertiesProjectProtection) *ProjectSecurityPropertiesProjectProtection {
		return &v
	}).(ProjectSecurityPropertiesProjectProtectionPtrOutput)
}

func (o ProjectSecurityPropertiesProjectProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[ProjectSecurityPropertiesProjectProtection]{
		OutputState: o.OutputState,
	}
}

// Exclusion policy.
func (o ProjectSecurityPropertiesProjectProtectionOutput) ExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecurityPropertiesProjectProtection) *string { return v.ExceptionPolicy }).(pulumi.StringPtrOutput)
}

// Is it turned on.
func (o ProjectSecurityPropertiesProjectProtectionOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecurityPropertiesProjectProtection) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

type ProjectSecurityPropertiesProjectProtectionPtrOutput struct{ *pulumi.OutputState }

func (ProjectSecurityPropertiesProjectProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) ToProjectSecurityPropertiesProjectProtectionPtrOutput() ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o
}

func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) ToProjectSecurityPropertiesProjectProtectionPtrOutputWithContext(ctx context.Context) ProjectSecurityPropertiesProjectProtectionPtrOutput {
	return o
}

func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[*ProjectSecurityPropertiesProjectProtection]{
		OutputState: o.OutputState,
	}
}

func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) Elem() ProjectSecurityPropertiesProjectProtectionOutput {
	return o.ApplyT(func(v *ProjectSecurityPropertiesProjectProtection) ProjectSecurityPropertiesProjectProtection {
		if v != nil {
			return *v
		}
		var ret ProjectSecurityPropertiesProjectProtection
		return ret
	}).(ProjectSecurityPropertiesProjectProtectionOutput)
}

// Exclusion policy.
func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) ExceptionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityPropertiesProjectProtection) *string {
		if v == nil {
			return nil
		}
		return v.ExceptionPolicy
	}).(pulumi.StringPtrOutput)
}

// Is it turned on.
func (o ProjectSecurityPropertiesProjectProtectionPtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecurityPropertiesProjectProtection) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

type GetProjectsProject struct {
	Comment string `pulumi:"comment"`
	// Default Computing Resource Group
	DefaultQuota string `pulumi:"defaultQuota"`
	// Project ID. The value is the same as `projectName`.
	Id string `pulumi:"id"`
	// IP whitelist
	IpWhiteList GetProjectsProjectIpWhiteList `pulumi:"ipWhiteList"`
	// Project owner
	Owner string `pulumi:"owner"`
	// The name of the resource
	ProjectName string `pulumi:"projectName"`
	// Project base attributes
	Properties GetProjectsProjectProperties `pulumi:"properties"`
	// Security-related attributes
	SecurityProperties GetProjectsProjectSecurityProperties `pulumi:"securityProperties"`
	// The status of the resource
	Status string `pulumi:"status"`
	// Project type
	Type string `pulumi:"type"`
}

// GetProjectsProjectInput is an input type that accepts GetProjectsProjectArgs and GetProjectsProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectInput` via:
//
//	GetProjectsProjectArgs{...}
type GetProjectsProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectOutput() GetProjectsProjectOutput
	ToGetProjectsProjectOutputWithContext(context.Context) GetProjectsProjectOutput
}

type GetProjectsProjectArgs struct {
	Comment pulumi.StringInput `pulumi:"comment"`
	// Default Computing Resource Group
	DefaultQuota pulumi.StringInput `pulumi:"defaultQuota"`
	// Project ID. The value is the same as `projectName`.
	Id pulumi.StringInput `pulumi:"id"`
	// IP whitelist
	IpWhiteList GetProjectsProjectIpWhiteListInput `pulumi:"ipWhiteList"`
	// Project owner
	Owner pulumi.StringInput `pulumi:"owner"`
	// The name of the resource
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Project base attributes
	Properties GetProjectsProjectPropertiesInput `pulumi:"properties"`
	// Security-related attributes
	SecurityProperties GetProjectsProjectSecurityPropertiesInput `pulumi:"securityProperties"`
	// The status of the resource
	Status pulumi.StringInput `pulumi:"status"`
	// Project type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return i.ToGetProjectsProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOutput)
}

func (i GetProjectsProjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProject] {
	return pulumix.Output[GetProjectsProject]{
		OutputState: i.ToGetProjectsProjectOutputWithContext(ctx).OutputState,
	}
}

// GetProjectsProjectArrayInput is an input type that accepts GetProjectsProjectArray and GetProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectArrayInput` via:
//
//	GetProjectsProjectArray{ GetProjectsProjectArgs{...} }
type GetProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput
	ToGetProjectsProjectArrayOutputWithContext(context.Context) GetProjectsProjectArrayOutput
}

type GetProjectsProjectArray []GetProjectsProjectInput

func (GetProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return i.ToGetProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectArrayOutput)
}

func (i GetProjectsProjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsProject] {
	return pulumix.Output[[]GetProjectsProject]{
		OutputState: i.ToGetProjectsProjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProject] {
	return pulumix.Output[GetProjectsProject]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsProjectOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Comment }).(pulumi.StringOutput)
}

// Default Computing Resource Group
func (o GetProjectsProjectOutput) DefaultQuota() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.DefaultQuota }).(pulumi.StringOutput)
}

// Project ID. The value is the same as `projectName`.
func (o GetProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

// IP whitelist
func (o GetProjectsProjectOutput) IpWhiteList() GetProjectsProjectIpWhiteListOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectIpWhiteList { return v.IpWhiteList }).(GetProjectsProjectIpWhiteListOutput)
}

// Project owner
func (o GetProjectsProjectOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Owner }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetProjectsProjectOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Project base attributes
func (o GetProjectsProjectOutput) Properties() GetProjectsProjectPropertiesOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectProperties { return v.Properties }).(GetProjectsProjectPropertiesOutput)
}

// Security-related attributes
func (o GetProjectsProjectOutput) SecurityProperties() GetProjectsProjectSecurityPropertiesOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectSecurityProperties { return v.SecurityProperties }).(GetProjectsProjectSecurityPropertiesOutput)
}

// The status of the resource
func (o GetProjectsProjectOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Status }).(pulumi.StringOutput)
}

// Project type
func (o GetProjectsProjectOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Type }).(pulumi.StringOutput)
}

type GetProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsProject] {
	return pulumix.Output[[]GetProjectsProject]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProject {
		return vs[0].([]GetProjectsProject)[vs[1].(int)]
	}).(GetProjectsProjectOutput)
}

type GetProjectsProjectIpWhiteList struct {
	// Classic network IP white list.
	IpList string `pulumi:"ipList"`
	// VPC network whitelist.
	VpcIpList string `pulumi:"vpcIpList"`
}

// GetProjectsProjectIpWhiteListInput is an input type that accepts GetProjectsProjectIpWhiteListArgs and GetProjectsProjectIpWhiteListOutput values.
// You can construct a concrete instance of `GetProjectsProjectIpWhiteListInput` via:
//
//	GetProjectsProjectIpWhiteListArgs{...}
type GetProjectsProjectIpWhiteListInput interface {
	pulumi.Input

	ToGetProjectsProjectIpWhiteListOutput() GetProjectsProjectIpWhiteListOutput
	ToGetProjectsProjectIpWhiteListOutputWithContext(context.Context) GetProjectsProjectIpWhiteListOutput
}

type GetProjectsProjectIpWhiteListArgs struct {
	// Classic network IP white list.
	IpList pulumi.StringInput `pulumi:"ipList"`
	// VPC network whitelist.
	VpcIpList pulumi.StringInput `pulumi:"vpcIpList"`
}

func (GetProjectsProjectIpWhiteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectIpWhiteList)(nil)).Elem()
}

func (i GetProjectsProjectIpWhiteListArgs) ToGetProjectsProjectIpWhiteListOutput() GetProjectsProjectIpWhiteListOutput {
	return i.ToGetProjectsProjectIpWhiteListOutputWithContext(context.Background())
}

func (i GetProjectsProjectIpWhiteListArgs) ToGetProjectsProjectIpWhiteListOutputWithContext(ctx context.Context) GetProjectsProjectIpWhiteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectIpWhiteListOutput)
}

func (i GetProjectsProjectIpWhiteListArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectIpWhiteList] {
	return pulumix.Output[GetProjectsProjectIpWhiteList]{
		OutputState: i.ToGetProjectsProjectIpWhiteListOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectIpWhiteListOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectIpWhiteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectIpWhiteList)(nil)).Elem()
}

func (o GetProjectsProjectIpWhiteListOutput) ToGetProjectsProjectIpWhiteListOutput() GetProjectsProjectIpWhiteListOutput {
	return o
}

func (o GetProjectsProjectIpWhiteListOutput) ToGetProjectsProjectIpWhiteListOutputWithContext(ctx context.Context) GetProjectsProjectIpWhiteListOutput {
	return o
}

func (o GetProjectsProjectIpWhiteListOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectIpWhiteList] {
	return pulumix.Output[GetProjectsProjectIpWhiteList]{
		OutputState: o.OutputState,
	}
}

// Classic network IP white list.
func (o GetProjectsProjectIpWhiteListOutput) IpList() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectIpWhiteList) string { return v.IpList }).(pulumi.StringOutput)
}

// VPC network whitelist.
func (o GetProjectsProjectIpWhiteListOutput) VpcIpList() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectIpWhiteList) string { return v.VpcIpList }).(pulumi.StringOutput)
}

type GetProjectsProjectProperties struct {
	// Whether to allow full table scan.
	AllowFullScan bool `pulumi:"allowFullScan"`
	// Whether to turn on Decimal2.0.
	EnableDecimal2 bool `pulumi:"enableDecimal2"`
	// Whether encryption is turned on.
	Encryption GetProjectsProjectPropertiesEncryption `pulumi:"encryption"`
	// Job default retention time.
	RetentionDays string `pulumi:"retentionDays"`
	// SQL charge limit.
	SqlMeteringMax string `pulumi:"sqlMeteringMax"`
	// Life cycle of tables.
	TableLifecycle GetProjectsProjectPropertiesTableLifecycle `pulumi:"tableLifecycle"`
	// Project time zone.
	Timezone string `pulumi:"timezone"`
	// Type system.
	TypeSystem string `pulumi:"typeSystem"`
}

// GetProjectsProjectPropertiesInput is an input type that accepts GetProjectsProjectPropertiesArgs and GetProjectsProjectPropertiesOutput values.
// You can construct a concrete instance of `GetProjectsProjectPropertiesInput` via:
//
//	GetProjectsProjectPropertiesArgs{...}
type GetProjectsProjectPropertiesInput interface {
	pulumi.Input

	ToGetProjectsProjectPropertiesOutput() GetProjectsProjectPropertiesOutput
	ToGetProjectsProjectPropertiesOutputWithContext(context.Context) GetProjectsProjectPropertiesOutput
}

type GetProjectsProjectPropertiesArgs struct {
	// Whether to allow full table scan.
	AllowFullScan pulumi.BoolInput `pulumi:"allowFullScan"`
	// Whether to turn on Decimal2.0.
	EnableDecimal2 pulumi.BoolInput `pulumi:"enableDecimal2"`
	// Whether encryption is turned on.
	Encryption GetProjectsProjectPropertiesEncryptionInput `pulumi:"encryption"`
	// Job default retention time.
	RetentionDays pulumi.StringInput `pulumi:"retentionDays"`
	// SQL charge limit.
	SqlMeteringMax pulumi.StringInput `pulumi:"sqlMeteringMax"`
	// Life cycle of tables.
	TableLifecycle GetProjectsProjectPropertiesTableLifecycleInput `pulumi:"tableLifecycle"`
	// Project time zone.
	Timezone pulumi.StringInput `pulumi:"timezone"`
	// Type system.
	TypeSystem pulumi.StringInput `pulumi:"typeSystem"`
}

func (GetProjectsProjectPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectProperties)(nil)).Elem()
}

func (i GetProjectsProjectPropertiesArgs) ToGetProjectsProjectPropertiesOutput() GetProjectsProjectPropertiesOutput {
	return i.ToGetProjectsProjectPropertiesOutputWithContext(context.Background())
}

func (i GetProjectsProjectPropertiesArgs) ToGetProjectsProjectPropertiesOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectPropertiesOutput)
}

func (i GetProjectsProjectPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectProperties] {
	return pulumix.Output[GetProjectsProjectProperties]{
		OutputState: i.ToGetProjectsProjectPropertiesOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectPropertiesOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectProperties)(nil)).Elem()
}

func (o GetProjectsProjectPropertiesOutput) ToGetProjectsProjectPropertiesOutput() GetProjectsProjectPropertiesOutput {
	return o
}

func (o GetProjectsProjectPropertiesOutput) ToGetProjectsProjectPropertiesOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesOutput {
	return o
}

func (o GetProjectsProjectPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectProperties] {
	return pulumix.Output[GetProjectsProjectProperties]{
		OutputState: o.OutputState,
	}
}

// Whether to allow full table scan.
func (o GetProjectsProjectPropertiesOutput) AllowFullScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) bool { return v.AllowFullScan }).(pulumi.BoolOutput)
}

// Whether to turn on Decimal2.0.
func (o GetProjectsProjectPropertiesOutput) EnableDecimal2() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) bool { return v.EnableDecimal2 }).(pulumi.BoolOutput)
}

// Whether encryption is turned on.
func (o GetProjectsProjectPropertiesOutput) Encryption() GetProjectsProjectPropertiesEncryptionOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) GetProjectsProjectPropertiesEncryption { return v.Encryption }).(GetProjectsProjectPropertiesEncryptionOutput)
}

// Job default retention time.
func (o GetProjectsProjectPropertiesOutput) RetentionDays() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) string { return v.RetentionDays }).(pulumi.StringOutput)
}

// SQL charge limit.
func (o GetProjectsProjectPropertiesOutput) SqlMeteringMax() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) string { return v.SqlMeteringMax }).(pulumi.StringOutput)
}

// Life cycle of tables.
func (o GetProjectsProjectPropertiesOutput) TableLifecycle() GetProjectsProjectPropertiesTableLifecycleOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) GetProjectsProjectPropertiesTableLifecycle {
		return v.TableLifecycle
	}).(GetProjectsProjectPropertiesTableLifecycleOutput)
}

// Project time zone.
func (o GetProjectsProjectPropertiesOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) string { return v.Timezone }).(pulumi.StringOutput)
}

// Type system.
func (o GetProjectsProjectPropertiesOutput) TypeSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectProperties) string { return v.TypeSystem }).(pulumi.StringOutput)
}

type GetProjectsProjectPropertiesEncryption struct {
	// Algorithm.
	Algorithm string `pulumi:"algorithm"`
	// Whether to open.
	Enable bool `pulumi:"enable"`
	// Encryption algorithm key.
	Key string `pulumi:"key"`
}

// GetProjectsProjectPropertiesEncryptionInput is an input type that accepts GetProjectsProjectPropertiesEncryptionArgs and GetProjectsProjectPropertiesEncryptionOutput values.
// You can construct a concrete instance of `GetProjectsProjectPropertiesEncryptionInput` via:
//
//	GetProjectsProjectPropertiesEncryptionArgs{...}
type GetProjectsProjectPropertiesEncryptionInput interface {
	pulumi.Input

	ToGetProjectsProjectPropertiesEncryptionOutput() GetProjectsProjectPropertiesEncryptionOutput
	ToGetProjectsProjectPropertiesEncryptionOutputWithContext(context.Context) GetProjectsProjectPropertiesEncryptionOutput
}

type GetProjectsProjectPropertiesEncryptionArgs struct {
	// Algorithm.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// Whether to open.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// Encryption algorithm key.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetProjectsProjectPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPropertiesEncryption)(nil)).Elem()
}

func (i GetProjectsProjectPropertiesEncryptionArgs) ToGetProjectsProjectPropertiesEncryptionOutput() GetProjectsProjectPropertiesEncryptionOutput {
	return i.ToGetProjectsProjectPropertiesEncryptionOutputWithContext(context.Background())
}

func (i GetProjectsProjectPropertiesEncryptionArgs) ToGetProjectsProjectPropertiesEncryptionOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectPropertiesEncryptionOutput)
}

func (i GetProjectsProjectPropertiesEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectPropertiesEncryption] {
	return pulumix.Output[GetProjectsProjectPropertiesEncryption]{
		OutputState: i.ToGetProjectsProjectPropertiesEncryptionOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPropertiesEncryption)(nil)).Elem()
}

func (o GetProjectsProjectPropertiesEncryptionOutput) ToGetProjectsProjectPropertiesEncryptionOutput() GetProjectsProjectPropertiesEncryptionOutput {
	return o
}

func (o GetProjectsProjectPropertiesEncryptionOutput) ToGetProjectsProjectPropertiesEncryptionOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesEncryptionOutput {
	return o
}

func (o GetProjectsProjectPropertiesEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectPropertiesEncryption] {
	return pulumix.Output[GetProjectsProjectPropertiesEncryption]{
		OutputState: o.OutputState,
	}
}

// Algorithm.
func (o GetProjectsProjectPropertiesEncryptionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectPropertiesEncryption) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Whether to open.
func (o GetProjectsProjectPropertiesEncryptionOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectPropertiesEncryption) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Encryption algorithm key.
func (o GetProjectsProjectPropertiesEncryptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectPropertiesEncryption) string { return v.Key }).(pulumi.StringOutput)
}

type GetProjectsProjectPropertiesTableLifecycle struct {
	// Project type
	Type string `pulumi:"type"`
	// The value of the life cycle.
	Value string `pulumi:"value"`
}

// GetProjectsProjectPropertiesTableLifecycleInput is an input type that accepts GetProjectsProjectPropertiesTableLifecycleArgs and GetProjectsProjectPropertiesTableLifecycleOutput values.
// You can construct a concrete instance of `GetProjectsProjectPropertiesTableLifecycleInput` via:
//
//	GetProjectsProjectPropertiesTableLifecycleArgs{...}
type GetProjectsProjectPropertiesTableLifecycleInput interface {
	pulumi.Input

	ToGetProjectsProjectPropertiesTableLifecycleOutput() GetProjectsProjectPropertiesTableLifecycleOutput
	ToGetProjectsProjectPropertiesTableLifecycleOutputWithContext(context.Context) GetProjectsProjectPropertiesTableLifecycleOutput
}

type GetProjectsProjectPropertiesTableLifecycleArgs struct {
	// Project type
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the life cycle.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectsProjectPropertiesTableLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (i GetProjectsProjectPropertiesTableLifecycleArgs) ToGetProjectsProjectPropertiesTableLifecycleOutput() GetProjectsProjectPropertiesTableLifecycleOutput {
	return i.ToGetProjectsProjectPropertiesTableLifecycleOutputWithContext(context.Background())
}

func (i GetProjectsProjectPropertiesTableLifecycleArgs) ToGetProjectsProjectPropertiesTableLifecycleOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesTableLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectPropertiesTableLifecycleOutput)
}

func (i GetProjectsProjectPropertiesTableLifecycleArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectPropertiesTableLifecycle] {
	return pulumix.Output[GetProjectsProjectPropertiesTableLifecycle]{
		OutputState: i.ToGetProjectsProjectPropertiesTableLifecycleOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectPropertiesTableLifecycleOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectPropertiesTableLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPropertiesTableLifecycle)(nil)).Elem()
}

func (o GetProjectsProjectPropertiesTableLifecycleOutput) ToGetProjectsProjectPropertiesTableLifecycleOutput() GetProjectsProjectPropertiesTableLifecycleOutput {
	return o
}

func (o GetProjectsProjectPropertiesTableLifecycleOutput) ToGetProjectsProjectPropertiesTableLifecycleOutputWithContext(ctx context.Context) GetProjectsProjectPropertiesTableLifecycleOutput {
	return o
}

func (o GetProjectsProjectPropertiesTableLifecycleOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectPropertiesTableLifecycle] {
	return pulumix.Output[GetProjectsProjectPropertiesTableLifecycle]{
		OutputState: o.OutputState,
	}
}

// Project type
func (o GetProjectsProjectPropertiesTableLifecycleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectPropertiesTableLifecycle) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the life cycle.
func (o GetProjectsProjectPropertiesTableLifecycleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectPropertiesTableLifecycle) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectsProjectSecurityProperties struct {
	// Whether to enable download permission check.
	EnableDownloadPrivilege bool `pulumi:"enableDownloadPrivilege"`
	// Label authorization.
	LabelSecurity bool `pulumi:"labelSecurity"`
	// Project creator permissions.
	ObjectCreatorHasAccessPermission bool `pulumi:"objectCreatorHasAccessPermission"`
	// Does the project creator have authorization rights.
	ObjectCreatorHasGrantPermission bool `pulumi:"objectCreatorHasGrantPermission"`
	// Project protection.
	ProjectProtection GetProjectsProjectSecurityPropertiesProjectProtection `pulumi:"projectProtection"`
	// Whether to turn on ACL.
	UsingAcl bool `pulumi:"usingAcl"`
	// Whether to enable Policy.
	UsingPolicy bool `pulumi:"usingPolicy"`
}

// GetProjectsProjectSecurityPropertiesInput is an input type that accepts GetProjectsProjectSecurityPropertiesArgs and GetProjectsProjectSecurityPropertiesOutput values.
// You can construct a concrete instance of `GetProjectsProjectSecurityPropertiesInput` via:
//
//	GetProjectsProjectSecurityPropertiesArgs{...}
type GetProjectsProjectSecurityPropertiesInput interface {
	pulumi.Input

	ToGetProjectsProjectSecurityPropertiesOutput() GetProjectsProjectSecurityPropertiesOutput
	ToGetProjectsProjectSecurityPropertiesOutputWithContext(context.Context) GetProjectsProjectSecurityPropertiesOutput
}

type GetProjectsProjectSecurityPropertiesArgs struct {
	// Whether to enable download permission check.
	EnableDownloadPrivilege pulumi.BoolInput `pulumi:"enableDownloadPrivilege"`
	// Label authorization.
	LabelSecurity pulumi.BoolInput `pulumi:"labelSecurity"`
	// Project creator permissions.
	ObjectCreatorHasAccessPermission pulumi.BoolInput `pulumi:"objectCreatorHasAccessPermission"`
	// Does the project creator have authorization rights.
	ObjectCreatorHasGrantPermission pulumi.BoolInput `pulumi:"objectCreatorHasGrantPermission"`
	// Project protection.
	ProjectProtection GetProjectsProjectSecurityPropertiesProjectProtectionInput `pulumi:"projectProtection"`
	// Whether to turn on ACL.
	UsingAcl pulumi.BoolInput `pulumi:"usingAcl"`
	// Whether to enable Policy.
	UsingPolicy pulumi.BoolInput `pulumi:"usingPolicy"`
}

func (GetProjectsProjectSecurityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSecurityProperties)(nil)).Elem()
}

func (i GetProjectsProjectSecurityPropertiesArgs) ToGetProjectsProjectSecurityPropertiesOutput() GetProjectsProjectSecurityPropertiesOutput {
	return i.ToGetProjectsProjectSecurityPropertiesOutputWithContext(context.Background())
}

func (i GetProjectsProjectSecurityPropertiesArgs) ToGetProjectsProjectSecurityPropertiesOutputWithContext(ctx context.Context) GetProjectsProjectSecurityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectSecurityPropertiesOutput)
}

func (i GetProjectsProjectSecurityPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectSecurityProperties] {
	return pulumix.Output[GetProjectsProjectSecurityProperties]{
		OutputState: i.ToGetProjectsProjectSecurityPropertiesOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectSecurityPropertiesOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectSecurityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSecurityProperties)(nil)).Elem()
}

func (o GetProjectsProjectSecurityPropertiesOutput) ToGetProjectsProjectSecurityPropertiesOutput() GetProjectsProjectSecurityPropertiesOutput {
	return o
}

func (o GetProjectsProjectSecurityPropertiesOutput) ToGetProjectsProjectSecurityPropertiesOutputWithContext(ctx context.Context) GetProjectsProjectSecurityPropertiesOutput {
	return o
}

func (o GetProjectsProjectSecurityPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectSecurityProperties] {
	return pulumix.Output[GetProjectsProjectSecurityProperties]{
		OutputState: o.OutputState,
	}
}

// Whether to enable download permission check.
func (o GetProjectsProjectSecurityPropertiesOutput) EnableDownloadPrivilege() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.EnableDownloadPrivilege }).(pulumi.BoolOutput)
}

// Label authorization.
func (o GetProjectsProjectSecurityPropertiesOutput) LabelSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.LabelSecurity }).(pulumi.BoolOutput)
}

// Project creator permissions.
func (o GetProjectsProjectSecurityPropertiesOutput) ObjectCreatorHasAccessPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.ObjectCreatorHasAccessPermission }).(pulumi.BoolOutput)
}

// Does the project creator have authorization rights.
func (o GetProjectsProjectSecurityPropertiesOutput) ObjectCreatorHasGrantPermission() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.ObjectCreatorHasGrantPermission }).(pulumi.BoolOutput)
}

// Project protection.
func (o GetProjectsProjectSecurityPropertiesOutput) ProjectProtection() GetProjectsProjectSecurityPropertiesProjectProtectionOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) GetProjectsProjectSecurityPropertiesProjectProtection {
		return v.ProjectProtection
	}).(GetProjectsProjectSecurityPropertiesProjectProtectionOutput)
}

// Whether to turn on ACL.
func (o GetProjectsProjectSecurityPropertiesOutput) UsingAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.UsingAcl }).(pulumi.BoolOutput)
}

// Whether to enable Policy.
func (o GetProjectsProjectSecurityPropertiesOutput) UsingPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityProperties) bool { return v.UsingPolicy }).(pulumi.BoolOutput)
}

type GetProjectsProjectSecurityPropertiesProjectProtection struct {
	// Exclusion policy.
	ExceptionPolicy string `pulumi:"exceptionPolicy"`
	// Is it turned on.
	Protected bool `pulumi:"protected"`
}

// GetProjectsProjectSecurityPropertiesProjectProtectionInput is an input type that accepts GetProjectsProjectSecurityPropertiesProjectProtectionArgs and GetProjectsProjectSecurityPropertiesProjectProtectionOutput values.
// You can construct a concrete instance of `GetProjectsProjectSecurityPropertiesProjectProtectionInput` via:
//
//	GetProjectsProjectSecurityPropertiesProjectProtectionArgs{...}
type GetProjectsProjectSecurityPropertiesProjectProtectionInput interface {
	pulumi.Input

	ToGetProjectsProjectSecurityPropertiesProjectProtectionOutput() GetProjectsProjectSecurityPropertiesProjectProtectionOutput
	ToGetProjectsProjectSecurityPropertiesProjectProtectionOutputWithContext(context.Context) GetProjectsProjectSecurityPropertiesProjectProtectionOutput
}

type GetProjectsProjectSecurityPropertiesProjectProtectionArgs struct {
	// Exclusion policy.
	ExceptionPolicy pulumi.StringInput `pulumi:"exceptionPolicy"`
	// Is it turned on.
	Protected pulumi.BoolInput `pulumi:"protected"`
}

func (GetProjectsProjectSecurityPropertiesProjectProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (i GetProjectsProjectSecurityPropertiesProjectProtectionArgs) ToGetProjectsProjectSecurityPropertiesProjectProtectionOutput() GetProjectsProjectSecurityPropertiesProjectProtectionOutput {
	return i.ToGetProjectsProjectSecurityPropertiesProjectProtectionOutputWithContext(context.Background())
}

func (i GetProjectsProjectSecurityPropertiesProjectProtectionArgs) ToGetProjectsProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx context.Context) GetProjectsProjectSecurityPropertiesProjectProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectSecurityPropertiesProjectProtectionOutput)
}

func (i GetProjectsProjectSecurityPropertiesProjectProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[GetProjectsProjectSecurityPropertiesProjectProtection]{
		OutputState: i.ToGetProjectsProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsProjectSecurityPropertiesProjectProtectionOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectSecurityPropertiesProjectProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSecurityPropertiesProjectProtection)(nil)).Elem()
}

func (o GetProjectsProjectSecurityPropertiesProjectProtectionOutput) ToGetProjectsProjectSecurityPropertiesProjectProtectionOutput() GetProjectsProjectSecurityPropertiesProjectProtectionOutput {
	return o
}

func (o GetProjectsProjectSecurityPropertiesProjectProtectionOutput) ToGetProjectsProjectSecurityPropertiesProjectProtectionOutputWithContext(ctx context.Context) GetProjectsProjectSecurityPropertiesProjectProtectionOutput {
	return o
}

func (o GetProjectsProjectSecurityPropertiesProjectProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsProjectSecurityPropertiesProjectProtection] {
	return pulumix.Output[GetProjectsProjectSecurityPropertiesProjectProtection]{
		OutputState: o.OutputState,
	}
}

// Exclusion policy.
func (o GetProjectsProjectSecurityPropertiesProjectProtectionOutput) ExceptionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityPropertiesProjectProtection) string { return v.ExceptionPolicy }).(pulumi.StringOutput)
}

// Is it turned on.
func (o GetProjectsProjectSecurityPropertiesProjectProtectionOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectSecurityPropertiesProjectProtection) bool { return v.Protected }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIpWhiteListInput)(nil)).Elem(), ProjectIpWhiteListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIpWhiteListPtrInput)(nil)).Elem(), ProjectIpWhiteListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesInput)(nil)).Elem(), ProjectPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesPtrInput)(nil)).Elem(), ProjectPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesEncryptionInput)(nil)).Elem(), ProjectPropertiesEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesEncryptionPtrInput)(nil)).Elem(), ProjectPropertiesEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesTableLifecycleInput)(nil)).Elem(), ProjectPropertiesTableLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPropertiesTableLifecyclePtrInput)(nil)).Elem(), ProjectPropertiesTableLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecurityPropertiesInput)(nil)).Elem(), ProjectSecurityPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecurityPropertiesPtrInput)(nil)).Elem(), ProjectSecurityPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecurityPropertiesProjectProtectionInput)(nil)).Elem(), ProjectSecurityPropertiesProjectProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecurityPropertiesProjectProtectionPtrInput)(nil)).Elem(), ProjectSecurityPropertiesProjectProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectInput)(nil)).Elem(), GetProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectArrayInput)(nil)).Elem(), GetProjectsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectIpWhiteListInput)(nil)).Elem(), GetProjectsProjectIpWhiteListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectPropertiesInput)(nil)).Elem(), GetProjectsProjectPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectPropertiesEncryptionInput)(nil)).Elem(), GetProjectsProjectPropertiesEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectPropertiesTableLifecycleInput)(nil)).Elem(), GetProjectsProjectPropertiesTableLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectSecurityPropertiesInput)(nil)).Elem(), GetProjectsProjectSecurityPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectSecurityPropertiesProjectProtectionInput)(nil)).Elem(), GetProjectsProjectSecurityPropertiesProjectProtectionArgs{})
	pulumi.RegisterOutputType(ProjectIpWhiteListOutput{})
	pulumi.RegisterOutputType(ProjectIpWhiteListPtrOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesTableLifecycleOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesTableLifecyclePtrOutput{})
	pulumi.RegisterOutputType(ProjectSecurityPropertiesOutput{})
	pulumi.RegisterOutputType(ProjectSecurityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProjectSecurityPropertiesProjectProtectionOutput{})
	pulumi.RegisterOutputType(ProjectSecurityPropertiesProjectProtectionPtrOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectIpWhiteListOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectPropertiesOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectPropertiesTableLifecycleOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectSecurityPropertiesOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectSecurityPropertiesProjectProtectionOutput{})
}
