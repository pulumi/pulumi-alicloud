// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maxcompute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Max Compute Quota Plan resource.
//
// For information about Max Compute Quota Plan and how to use it, see [What is Quota Plan](https://www.alibabacloud.com/help/en/).
//
// > **NOTE:** Available since v1.242.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/maxcompute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			elasticReservedCu := "50"
//			if param := cfg.Get("elasticReservedCu"); param != "" {
//				elasticReservedCu = param
//			}
//			_, err := maxcompute.NewQuotaPlan(ctx, "default", &maxcompute.QuotaPlanArgs{
//				Nickname: pulumi.String("os_terrform_p"),
//				Quota: &maxcompute.QuotaPlanQuotaArgs{
//					Parameter: &maxcompute.QuotaPlanQuotaParameterArgs{
//						ElasticReservedCu: pulumi.String(elasticReservedCu),
//					},
//					SubQuotaInfoLists: maxcompute.QuotaPlanQuotaSubQuotaInfoListArray{
//						&maxcompute.QuotaPlanQuotaSubQuotaInfoListArgs{
//							NickName: pulumi.String("sub_quota"),
//							Parameter: &maxcompute.QuotaPlanQuotaSubQuotaInfoListParameterArgs{
//								MinCu:             pulumi.Int(0),
//								MaxCu:             pulumi.Int(20),
//								ElasticReservedCu: pulumi.String(elasticReservedCu),
//							},
//						},
//						&maxcompute.QuotaPlanQuotaSubQuotaInfoListArgs{
//							NickName: pulumi.String("os_terrform"),
//							Parameter: &maxcompute.QuotaPlanQuotaSubQuotaInfoListParameterArgs{
//								MinCu:             pulumi.Int(50),
//								MaxCu:             pulumi.Int(50),
//								ElasticReservedCu: pulumi.Int(0),
//							},
//						},
//					},
//				},
//				PlanName: pulumi.String("quota_plan"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Max Compute Quota Plan can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:maxcompute/quotaPlan:QuotaPlan example <nickname>:<plan_name>
// ```
type QuotaPlan struct {
	pulumi.CustomResourceState

	// Whether to take effect immediately. “Valid values: true”\
	// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
	IsEffective pulumi.BoolPtrOutput `pulumi:"isEffective"`
	// Quota Name
	Nickname pulumi.StringOutput `pulumi:"nickname"`
	// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
	PlanName pulumi.StringOutput `pulumi:"planName"`
	// Quota property See `quota` below.
	Quota QuotaPlanQuotaPtrOutput `pulumi:"quota"`
}

// NewQuotaPlan registers a new resource with the given unique name, arguments, and options.
func NewQuotaPlan(ctx *pulumi.Context,
	name string, args *QuotaPlanArgs, opts ...pulumi.ResourceOption) (*QuotaPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Nickname == nil {
		return nil, errors.New("invalid value for required argument 'Nickname'")
	}
	if args.PlanName == nil {
		return nil, errors.New("invalid value for required argument 'PlanName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QuotaPlan
	err := ctx.RegisterResource("alicloud:maxcompute/quotaPlan:QuotaPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuotaPlan gets an existing QuotaPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuotaPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuotaPlanState, opts ...pulumi.ResourceOption) (*QuotaPlan, error) {
	var resource QuotaPlan
	err := ctx.ReadResource("alicloud:maxcompute/quotaPlan:QuotaPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QuotaPlan resources.
type quotaPlanState struct {
	// Whether to take effect immediately. “Valid values: true”\
	// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
	IsEffective *bool `pulumi:"isEffective"`
	// Quota Name
	Nickname *string `pulumi:"nickname"`
	// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
	PlanName *string `pulumi:"planName"`
	// Quota property See `quota` below.
	Quota *QuotaPlanQuota `pulumi:"quota"`
}

type QuotaPlanState struct {
	// Whether to take effect immediately. “Valid values: true”\
	// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
	IsEffective pulumi.BoolPtrInput
	// Quota Name
	Nickname pulumi.StringPtrInput
	// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
	PlanName pulumi.StringPtrInput
	// Quota property See `quota` below.
	Quota QuotaPlanQuotaPtrInput
}

func (QuotaPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaPlanState)(nil)).Elem()
}

type quotaPlanArgs struct {
	// Whether to take effect immediately. “Valid values: true”\
	// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
	IsEffective *bool `pulumi:"isEffective"`
	// Quota Name
	Nickname string `pulumi:"nickname"`
	// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
	PlanName string `pulumi:"planName"`
	// Quota property See `quota` below.
	Quota *QuotaPlanQuota `pulumi:"quota"`
}

// The set of arguments for constructing a QuotaPlan resource.
type QuotaPlanArgs struct {
	// Whether to take effect immediately. “Valid values: true”\
	// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
	IsEffective pulumi.BoolPtrInput
	// Quota Name
	Nickname pulumi.StringInput
	// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
	PlanName pulumi.StringInput
	// Quota property See `quota` below.
	Quota QuotaPlanQuotaPtrInput
}

func (QuotaPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaPlanArgs)(nil)).Elem()
}

type QuotaPlanInput interface {
	pulumi.Input

	ToQuotaPlanOutput() QuotaPlanOutput
	ToQuotaPlanOutputWithContext(ctx context.Context) QuotaPlanOutput
}

func (*QuotaPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaPlan)(nil)).Elem()
}

func (i *QuotaPlan) ToQuotaPlanOutput() QuotaPlanOutput {
	return i.ToQuotaPlanOutputWithContext(context.Background())
}

func (i *QuotaPlan) ToQuotaPlanOutputWithContext(ctx context.Context) QuotaPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaPlanOutput)
}

// QuotaPlanArrayInput is an input type that accepts QuotaPlanArray and QuotaPlanArrayOutput values.
// You can construct a concrete instance of `QuotaPlanArrayInput` via:
//
//	QuotaPlanArray{ QuotaPlanArgs{...} }
type QuotaPlanArrayInput interface {
	pulumi.Input

	ToQuotaPlanArrayOutput() QuotaPlanArrayOutput
	ToQuotaPlanArrayOutputWithContext(context.Context) QuotaPlanArrayOutput
}

type QuotaPlanArray []QuotaPlanInput

func (QuotaPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuotaPlan)(nil)).Elem()
}

func (i QuotaPlanArray) ToQuotaPlanArrayOutput() QuotaPlanArrayOutput {
	return i.ToQuotaPlanArrayOutputWithContext(context.Background())
}

func (i QuotaPlanArray) ToQuotaPlanArrayOutputWithContext(ctx context.Context) QuotaPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaPlanArrayOutput)
}

// QuotaPlanMapInput is an input type that accepts QuotaPlanMap and QuotaPlanMapOutput values.
// You can construct a concrete instance of `QuotaPlanMapInput` via:
//
//	QuotaPlanMap{ "key": QuotaPlanArgs{...} }
type QuotaPlanMapInput interface {
	pulumi.Input

	ToQuotaPlanMapOutput() QuotaPlanMapOutput
	ToQuotaPlanMapOutputWithContext(context.Context) QuotaPlanMapOutput
}

type QuotaPlanMap map[string]QuotaPlanInput

func (QuotaPlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuotaPlan)(nil)).Elem()
}

func (i QuotaPlanMap) ToQuotaPlanMapOutput() QuotaPlanMapOutput {
	return i.ToQuotaPlanMapOutputWithContext(context.Background())
}

func (i QuotaPlanMap) ToQuotaPlanMapOutputWithContext(ctx context.Context) QuotaPlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaPlanMapOutput)
}

type QuotaPlanOutput struct{ *pulumi.OutputState }

func (QuotaPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaPlan)(nil)).Elem()
}

func (o QuotaPlanOutput) ToQuotaPlanOutput() QuotaPlanOutput {
	return o
}

func (o QuotaPlanOutput) ToQuotaPlanOutputWithContext(ctx context.Context) QuotaPlanOutput {
	return o
}

// Whether to take effect immediately. “Valid values: true”\
// .> **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
func (o QuotaPlanOutput) IsEffective() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QuotaPlan) pulumi.BoolPtrOutput { return v.IsEffective }).(pulumi.BoolPtrOutput)
}

// Quota Name
func (o QuotaPlanOutput) Nickname() pulumi.StringOutput {
	return o.ApplyT(func(v *QuotaPlan) pulumi.StringOutput { return v.Nickname }).(pulumi.StringOutput)
}

// The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
func (o QuotaPlanOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v *QuotaPlan) pulumi.StringOutput { return v.PlanName }).(pulumi.StringOutput)
}

// Quota property See `quota` below.
func (o QuotaPlanOutput) Quota() QuotaPlanQuotaPtrOutput {
	return o.ApplyT(func(v *QuotaPlan) QuotaPlanQuotaPtrOutput { return v.Quota }).(QuotaPlanQuotaPtrOutput)
}

type QuotaPlanArrayOutput struct{ *pulumi.OutputState }

func (QuotaPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuotaPlan)(nil)).Elem()
}

func (o QuotaPlanArrayOutput) ToQuotaPlanArrayOutput() QuotaPlanArrayOutput {
	return o
}

func (o QuotaPlanArrayOutput) ToQuotaPlanArrayOutputWithContext(ctx context.Context) QuotaPlanArrayOutput {
	return o
}

func (o QuotaPlanArrayOutput) Index(i pulumi.IntInput) QuotaPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QuotaPlan {
		return vs[0].([]*QuotaPlan)[vs[1].(int)]
	}).(QuotaPlanOutput)
}

type QuotaPlanMapOutput struct{ *pulumi.OutputState }

func (QuotaPlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuotaPlan)(nil)).Elem()
}

func (o QuotaPlanMapOutput) ToQuotaPlanMapOutput() QuotaPlanMapOutput {
	return o
}

func (o QuotaPlanMapOutput) ToQuotaPlanMapOutputWithContext(ctx context.Context) QuotaPlanMapOutput {
	return o
}

func (o QuotaPlanMapOutput) MapIndex(k pulumi.StringInput) QuotaPlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QuotaPlan {
		return vs[0].(map[string]*QuotaPlan)[vs[1].(string)]
	}).(QuotaPlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaPlanInput)(nil)).Elem(), &QuotaPlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaPlanArrayInput)(nil)).Elem(), QuotaPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaPlanMapInput)(nil)).Elem(), QuotaPlanMap{})
	pulumi.RegisterOutputType(QuotaPlanOutput{})
	pulumi.RegisterOutputType(QuotaPlanArrayOutput{})
	pulumi.RegisterOutputType(QuotaPlanMapOutput{})
}
