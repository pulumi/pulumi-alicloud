// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maxcompute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Max Compute Quota can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:maxcompute/quota:Quota example <id>
// ```
type Quota struct {
	pulumi.CustomResourceState

	// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
	// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
	CommodityCode pulumi.StringOutput `pulumi:"commodityCode"`
	// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
	// CU (minimum quota resource size is 50)
	// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
	// autoRenew (whether to enable automatic renewal)
	// If PaymentType is PayAsYouGo, you do not need to fill in
	CommodityData pulumi.StringPtrOutput `pulumi:"commodityData"`
	// Quota partial nickname, supports English letters and numbers, up to 24 characters
	//
	// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
	PartNickName pulumi.StringPtrOutput `pulumi:"partNickName"`
	// Payment type. Valid values: Subscription/PayAsYouGo
	//
	// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
	PaymentType pulumi.StringOutput `pulumi:"paymentType"`
	// Secondary Quota list
	//
	// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
	// See `subQuotaInfoList` below.
	SubQuotaInfoLists QuotaSubQuotaInfoListArrayOutput `pulumi:"subQuotaInfoLists"`
}

// NewQuota registers a new resource with the given unique name, arguments, and options.
func NewQuota(ctx *pulumi.Context,
	name string, args *QuotaArgs, opts ...pulumi.ResourceOption) (*Quota, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommodityCode == nil {
		return nil, errors.New("invalid value for required argument 'CommodityCode'")
	}
	if args.PaymentType == nil {
		return nil, errors.New("invalid value for required argument 'PaymentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Quota
	err := ctx.RegisterResource("alicloud:maxcompute/quota:Quota", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuota gets an existing Quota resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuota(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuotaState, opts ...pulumi.ResourceOption) (*Quota, error) {
	var resource Quota
	err := ctx.ReadResource("alicloud:maxcompute/quota:Quota", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Quota resources.
type quotaState struct {
	// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
	// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
	CommodityCode *string `pulumi:"commodityCode"`
	// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
	// CU (minimum quota resource size is 50)
	// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
	// autoRenew (whether to enable automatic renewal)
	// If PaymentType is PayAsYouGo, you do not need to fill in
	CommodityData *string `pulumi:"commodityData"`
	// Quota partial nickname, supports English letters and numbers, up to 24 characters
	//
	// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
	PartNickName *string `pulumi:"partNickName"`
	// Payment type. Valid values: Subscription/PayAsYouGo
	//
	// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
	PaymentType *string `pulumi:"paymentType"`
	// Secondary Quota list
	//
	// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
	// See `subQuotaInfoList` below.
	SubQuotaInfoLists []QuotaSubQuotaInfoList `pulumi:"subQuotaInfoLists"`
}

type QuotaState struct {
	// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
	// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
	CommodityCode pulumi.StringPtrInput
	// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
	// CU (minimum quota resource size is 50)
	// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
	// autoRenew (whether to enable automatic renewal)
	// If PaymentType is PayAsYouGo, you do not need to fill in
	CommodityData pulumi.StringPtrInput
	// Quota partial nickname, supports English letters and numbers, up to 24 characters
	//
	// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
	PartNickName pulumi.StringPtrInput
	// Payment type. Valid values: Subscription/PayAsYouGo
	//
	// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
	PaymentType pulumi.StringPtrInput
	// Secondary Quota list
	//
	// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
	// See `subQuotaInfoList` below.
	SubQuotaInfoLists QuotaSubQuotaInfoListArrayInput
}

func (QuotaState) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaState)(nil)).Elem()
}

type quotaArgs struct {
	// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
	// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
	CommodityCode string `pulumi:"commodityCode"`
	// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
	// CU (minimum quota resource size is 50)
	// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
	// autoRenew (whether to enable automatic renewal)
	// If PaymentType is PayAsYouGo, you do not need to fill in
	CommodityData *string `pulumi:"commodityData"`
	// Quota partial nickname, supports English letters and numbers, up to 24 characters
	//
	// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
	PartNickName *string `pulumi:"partNickName"`
	// Payment type. Valid values: Subscription/PayAsYouGo
	//
	// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
	PaymentType string `pulumi:"paymentType"`
	// Secondary Quota list
	//
	// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
	// See `subQuotaInfoList` below.
	SubQuotaInfoLists []QuotaSubQuotaInfoList `pulumi:"subQuotaInfoLists"`
}

// The set of arguments for constructing a Quota resource.
type QuotaArgs struct {
	// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
	// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
	CommodityCode pulumi.StringInput
	// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
	// CU (minimum quota resource size is 50)
	// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
	// autoRenew (whether to enable automatic renewal)
	// If PaymentType is PayAsYouGo, you do not need to fill in
	CommodityData pulumi.StringPtrInput
	// Quota partial nickname, supports English letters and numbers, up to 24 characters
	//
	// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
	PartNickName pulumi.StringPtrInput
	// Payment type. Valid values: Subscription/PayAsYouGo
	//
	// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
	PaymentType pulumi.StringInput
	// Secondary Quota list
	//
	// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
	// See `subQuotaInfoList` below.
	SubQuotaInfoLists QuotaSubQuotaInfoListArrayInput
}

func (QuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaArgs)(nil)).Elem()
}

type QuotaInput interface {
	pulumi.Input

	ToQuotaOutput() QuotaOutput
	ToQuotaOutputWithContext(ctx context.Context) QuotaOutput
}

func (*Quota) ElementType() reflect.Type {
	return reflect.TypeOf((**Quota)(nil)).Elem()
}

func (i *Quota) ToQuotaOutput() QuotaOutput {
	return i.ToQuotaOutputWithContext(context.Background())
}

func (i *Quota) ToQuotaOutputWithContext(ctx context.Context) QuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaOutput)
}

// QuotaArrayInput is an input type that accepts QuotaArray and QuotaArrayOutput values.
// You can construct a concrete instance of `QuotaArrayInput` via:
//
//	QuotaArray{ QuotaArgs{...} }
type QuotaArrayInput interface {
	pulumi.Input

	ToQuotaArrayOutput() QuotaArrayOutput
	ToQuotaArrayOutputWithContext(context.Context) QuotaArrayOutput
}

type QuotaArray []QuotaInput

func (QuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Quota)(nil)).Elem()
}

func (i QuotaArray) ToQuotaArrayOutput() QuotaArrayOutput {
	return i.ToQuotaArrayOutputWithContext(context.Background())
}

func (i QuotaArray) ToQuotaArrayOutputWithContext(ctx context.Context) QuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaArrayOutput)
}

// QuotaMapInput is an input type that accepts QuotaMap and QuotaMapOutput values.
// You can construct a concrete instance of `QuotaMapInput` via:
//
//	QuotaMap{ "key": QuotaArgs{...} }
type QuotaMapInput interface {
	pulumi.Input

	ToQuotaMapOutput() QuotaMapOutput
	ToQuotaMapOutputWithContext(context.Context) QuotaMapOutput
}

type QuotaMap map[string]QuotaInput

func (QuotaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Quota)(nil)).Elem()
}

func (i QuotaMap) ToQuotaMapOutput() QuotaMapOutput {
	return i.ToQuotaMapOutputWithContext(context.Background())
}

func (i QuotaMap) ToQuotaMapOutputWithContext(ctx context.Context) QuotaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaMapOutput)
}

type QuotaOutput struct{ *pulumi.OutputState }

func (QuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Quota)(nil)).Elem()
}

func (o QuotaOutput) ToQuotaOutput() QuotaOutput {
	return o
}

func (o QuotaOutput) ToQuotaOutputWithContext(ctx context.Context) QuotaOutput {
	return o
}

// Valid values: odps_intl/odpsplus_intl/odps/odpsplus
// - *NOTE:** --odps_intl: International Station standard post-payment -- odpsplus_intl: International Station standard pre-payment -- odps: China Station standard post-payment -- odpsplus: China Station standard pre-payment
func (o QuotaOutput) CommodityCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.CommodityCode }).(pulumi.StringOutput)
}

// Define quota rules when creating quotas, for example:{"CU":50,"ordTime":"1:Month","autoRenew":false}.
// CU (minimum quota resource size is 50)
// ordTime 1:Month/Year (1 means quantity: Month/Year is the unit)
// autoRenew (whether to enable automatic renewal)
// If PaymentType is PayAsYouGo, you do not need to fill in
func (o QuotaOutput) CommodityData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringPtrOutput { return v.CommodityData }).(pulumi.StringPtrOutput)
}

// Quota partial nickname, supports English letters and numbers, up to 24 characters
//
// > **NOTE:** If PaymentType is PayAsYouGo, you do not need to fill it in
func (o QuotaOutput) PartNickName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringPtrOutput { return v.PartNickName }).(pulumi.StringPtrOutput)
}

// Payment type. Valid values: Subscription/PayAsYouGo
//
// > **NOTE:** -- PayAsYouGo only needs to be opened once per region
func (o QuotaOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Quota) pulumi.StringOutput { return v.PaymentType }).(pulumi.StringOutput)
}

// Secondary Quota list
//
// > **NOTE:** -- Add: If the configuration contains a second-level Quota that does not exist, a second-level Quota is added. -- Delete: If the configuration does not contain the existing secondary Quota, it will be deleted. -- Modify: If the configuration is inconsistent with the existing secondary Quota configuration parameters, the secondary Quota configuration will be updated. -- The default secondary Quota must be configured and cannot be deleted.
// See `subQuotaInfoList` below.
func (o QuotaOutput) SubQuotaInfoLists() QuotaSubQuotaInfoListArrayOutput {
	return o.ApplyT(func(v *Quota) QuotaSubQuotaInfoListArrayOutput { return v.SubQuotaInfoLists }).(QuotaSubQuotaInfoListArrayOutput)
}

type QuotaArrayOutput struct{ *pulumi.OutputState }

func (QuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Quota)(nil)).Elem()
}

func (o QuotaArrayOutput) ToQuotaArrayOutput() QuotaArrayOutput {
	return o
}

func (o QuotaArrayOutput) ToQuotaArrayOutputWithContext(ctx context.Context) QuotaArrayOutput {
	return o
}

func (o QuotaArrayOutput) Index(i pulumi.IntInput) QuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Quota {
		return vs[0].([]*Quota)[vs[1].(int)]
	}).(QuotaOutput)
}

type QuotaMapOutput struct{ *pulumi.OutputState }

func (QuotaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Quota)(nil)).Elem()
}

func (o QuotaMapOutput) ToQuotaMapOutput() QuotaMapOutput {
	return o
}

func (o QuotaMapOutput) ToQuotaMapOutputWithContext(ctx context.Context) QuotaMapOutput {
	return o
}

func (o QuotaMapOutput) MapIndex(k pulumi.StringInput) QuotaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Quota {
		return vs[0].(map[string]*Quota)[vs[1].(string)]
	}).(QuotaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaInput)(nil)).Elem(), &Quota{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaArrayInput)(nil)).Elem(), QuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaMapInput)(nil)).Elem(), QuotaMap{})
	pulumi.RegisterOutputType(QuotaOutput{})
	pulumi.RegisterOutputType(QuotaArrayOutput{})
	pulumi.RegisterOutputType(QuotaMapOutput{})
}
