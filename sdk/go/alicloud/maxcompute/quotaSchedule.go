// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maxcompute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Max Compute Quota Schedule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:maxcompute/quotaSchedule:QuotaSchedule example <nickname>:<timezone>
// ```
type QuotaSchedule struct {
	pulumi.CustomResourceState

	// The nickname of level-1 compute quota.
	Nickname pulumi.StringOutput `pulumi:"nickname"`
	// schedule list See `scheduleList` below.
	ScheduleLists QuotaScheduleScheduleListArrayOutput `pulumi:"scheduleLists"`
	// Time zone, reference value: UTC +8
	Timezone pulumi.StringOutput `pulumi:"timezone"`
}

// NewQuotaSchedule registers a new resource with the given unique name, arguments, and options.
func NewQuotaSchedule(ctx *pulumi.Context,
	name string, args *QuotaScheduleArgs, opts ...pulumi.ResourceOption) (*QuotaSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Nickname == nil {
		return nil, errors.New("invalid value for required argument 'Nickname'")
	}
	if args.Timezone == nil {
		return nil, errors.New("invalid value for required argument 'Timezone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QuotaSchedule
	err := ctx.RegisterResource("alicloud:maxcompute/quotaSchedule:QuotaSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuotaSchedule gets an existing QuotaSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuotaSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuotaScheduleState, opts ...pulumi.ResourceOption) (*QuotaSchedule, error) {
	var resource QuotaSchedule
	err := ctx.ReadResource("alicloud:maxcompute/quotaSchedule:QuotaSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QuotaSchedule resources.
type quotaScheduleState struct {
	// The nickname of level-1 compute quota.
	Nickname *string `pulumi:"nickname"`
	// schedule list See `scheduleList` below.
	ScheduleLists []QuotaScheduleScheduleList `pulumi:"scheduleLists"`
	// Time zone, reference value: UTC +8
	Timezone *string `pulumi:"timezone"`
}

type QuotaScheduleState struct {
	// The nickname of level-1 compute quota.
	Nickname pulumi.StringPtrInput
	// schedule list See `scheduleList` below.
	ScheduleLists QuotaScheduleScheduleListArrayInput
	// Time zone, reference value: UTC +8
	Timezone pulumi.StringPtrInput
}

func (QuotaScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaScheduleState)(nil)).Elem()
}

type quotaScheduleArgs struct {
	// The nickname of level-1 compute quota.
	Nickname string `pulumi:"nickname"`
	// schedule list See `scheduleList` below.
	ScheduleLists []QuotaScheduleScheduleList `pulumi:"scheduleLists"`
	// Time zone, reference value: UTC +8
	Timezone string `pulumi:"timezone"`
}

// The set of arguments for constructing a QuotaSchedule resource.
type QuotaScheduleArgs struct {
	// The nickname of level-1 compute quota.
	Nickname pulumi.StringInput
	// schedule list See `scheduleList` below.
	ScheduleLists QuotaScheduleScheduleListArrayInput
	// Time zone, reference value: UTC +8
	Timezone pulumi.StringInput
}

func (QuotaScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quotaScheduleArgs)(nil)).Elem()
}

type QuotaScheduleInput interface {
	pulumi.Input

	ToQuotaScheduleOutput() QuotaScheduleOutput
	ToQuotaScheduleOutputWithContext(ctx context.Context) QuotaScheduleOutput
}

func (*QuotaSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaSchedule)(nil)).Elem()
}

func (i *QuotaSchedule) ToQuotaScheduleOutput() QuotaScheduleOutput {
	return i.ToQuotaScheduleOutputWithContext(context.Background())
}

func (i *QuotaSchedule) ToQuotaScheduleOutputWithContext(ctx context.Context) QuotaScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaScheduleOutput)
}

// QuotaScheduleArrayInput is an input type that accepts QuotaScheduleArray and QuotaScheduleArrayOutput values.
// You can construct a concrete instance of `QuotaScheduleArrayInput` via:
//
//	QuotaScheduleArray{ QuotaScheduleArgs{...} }
type QuotaScheduleArrayInput interface {
	pulumi.Input

	ToQuotaScheduleArrayOutput() QuotaScheduleArrayOutput
	ToQuotaScheduleArrayOutputWithContext(context.Context) QuotaScheduleArrayOutput
}

type QuotaScheduleArray []QuotaScheduleInput

func (QuotaScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuotaSchedule)(nil)).Elem()
}

func (i QuotaScheduleArray) ToQuotaScheduleArrayOutput() QuotaScheduleArrayOutput {
	return i.ToQuotaScheduleArrayOutputWithContext(context.Background())
}

func (i QuotaScheduleArray) ToQuotaScheduleArrayOutputWithContext(ctx context.Context) QuotaScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaScheduleArrayOutput)
}

// QuotaScheduleMapInput is an input type that accepts QuotaScheduleMap and QuotaScheduleMapOutput values.
// You can construct a concrete instance of `QuotaScheduleMapInput` via:
//
//	QuotaScheduleMap{ "key": QuotaScheduleArgs{...} }
type QuotaScheduleMapInput interface {
	pulumi.Input

	ToQuotaScheduleMapOutput() QuotaScheduleMapOutput
	ToQuotaScheduleMapOutputWithContext(context.Context) QuotaScheduleMapOutput
}

type QuotaScheduleMap map[string]QuotaScheduleInput

func (QuotaScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuotaSchedule)(nil)).Elem()
}

func (i QuotaScheduleMap) ToQuotaScheduleMapOutput() QuotaScheduleMapOutput {
	return i.ToQuotaScheduleMapOutputWithContext(context.Background())
}

func (i QuotaScheduleMap) ToQuotaScheduleMapOutputWithContext(ctx context.Context) QuotaScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaScheduleMapOutput)
}

type QuotaScheduleOutput struct{ *pulumi.OutputState }

func (QuotaScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaSchedule)(nil)).Elem()
}

func (o QuotaScheduleOutput) ToQuotaScheduleOutput() QuotaScheduleOutput {
	return o
}

func (o QuotaScheduleOutput) ToQuotaScheduleOutputWithContext(ctx context.Context) QuotaScheduleOutput {
	return o
}

// The nickname of level-1 compute quota.
func (o QuotaScheduleOutput) Nickname() pulumi.StringOutput {
	return o.ApplyT(func(v *QuotaSchedule) pulumi.StringOutput { return v.Nickname }).(pulumi.StringOutput)
}

// schedule list See `scheduleList` below.
func (o QuotaScheduleOutput) ScheduleLists() QuotaScheduleScheduleListArrayOutput {
	return o.ApplyT(func(v *QuotaSchedule) QuotaScheduleScheduleListArrayOutput { return v.ScheduleLists }).(QuotaScheduleScheduleListArrayOutput)
}

// Time zone, reference value: UTC +8
func (o QuotaScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *QuotaSchedule) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

type QuotaScheduleArrayOutput struct{ *pulumi.OutputState }

func (QuotaScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuotaSchedule)(nil)).Elem()
}

func (o QuotaScheduleArrayOutput) ToQuotaScheduleArrayOutput() QuotaScheduleArrayOutput {
	return o
}

func (o QuotaScheduleArrayOutput) ToQuotaScheduleArrayOutputWithContext(ctx context.Context) QuotaScheduleArrayOutput {
	return o
}

func (o QuotaScheduleArrayOutput) Index(i pulumi.IntInput) QuotaScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QuotaSchedule {
		return vs[0].([]*QuotaSchedule)[vs[1].(int)]
	}).(QuotaScheduleOutput)
}

type QuotaScheduleMapOutput struct{ *pulumi.OutputState }

func (QuotaScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuotaSchedule)(nil)).Elem()
}

func (o QuotaScheduleMapOutput) ToQuotaScheduleMapOutput() QuotaScheduleMapOutput {
	return o
}

func (o QuotaScheduleMapOutput) ToQuotaScheduleMapOutputWithContext(ctx context.Context) QuotaScheduleMapOutput {
	return o
}

func (o QuotaScheduleMapOutput) MapIndex(k pulumi.StringInput) QuotaScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QuotaSchedule {
		return vs[0].(map[string]*QuotaSchedule)[vs[1].(string)]
	}).(QuotaScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaScheduleInput)(nil)).Elem(), &QuotaSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaScheduleArrayInput)(nil)).Elem(), QuotaScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaScheduleMapInput)(nil)).Elem(), QuotaScheduleMap{})
	pulumi.RegisterOutputType(QuotaScheduleOutput{})
	pulumi.RegisterOutputType(QuotaScheduleArrayOutput{})
	pulumi.RegisterOutputType(QuotaScheduleMapOutput{})
}
