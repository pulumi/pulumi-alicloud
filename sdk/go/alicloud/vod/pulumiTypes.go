// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainSource struct {
	// The address of the origin server. You can specify an IP address or a domain name.
	SourceContent string `pulumi:"sourceContent"`
	// The port number. You can specify port 443 or 80. **Default value: 80**. If you specify port 443, Alibaba Cloud CDN communicates with the origin server over HTTPS. You can also customize a port.
	SourcePort string `pulumi:"sourcePort"`
	// The priority of the origin server if multiple origin servers are specified. Valid values: `20` and `30`. **Default value: 20**. A value of 20 indicates that the origin server is the primary origin server. A value of 30 indicates that the origin server is a secondary origin server.
	SourcePriority *string `pulumi:"sourcePriority"`
	// The type of the origin server. Valid values:
	SourceType string `pulumi:"sourceType"`
}

// DomainSourceInput is an input type that accepts DomainSourceArgs and DomainSourceOutput values.
// You can construct a concrete instance of `DomainSourceInput` via:
//
//          DomainSourceArgs{...}
type DomainSourceInput interface {
	pulumi.Input

	ToDomainSourceOutput() DomainSourceOutput
	ToDomainSourceOutputWithContext(context.Context) DomainSourceOutput
}

type DomainSourceArgs struct {
	// The address of the origin server. You can specify an IP address or a domain name.
	SourceContent pulumi.StringInput `pulumi:"sourceContent"`
	// The port number. You can specify port 443 or 80. **Default value: 80**. If you specify port 443, Alibaba Cloud CDN communicates with the origin server over HTTPS. You can also customize a port.
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
	// The priority of the origin server if multiple origin servers are specified. Valid values: `20` and `30`. **Default value: 20**. A value of 20 indicates that the origin server is the primary origin server. A value of 30 indicates that the origin server is a secondary origin server.
	SourcePriority pulumi.StringPtrInput `pulumi:"sourcePriority"`
	// The type of the origin server. Valid values:
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (DomainSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSource)(nil)).Elem()
}

func (i DomainSourceArgs) ToDomainSourceOutput() DomainSourceOutput {
	return i.ToDomainSourceOutputWithContext(context.Background())
}

func (i DomainSourceArgs) ToDomainSourceOutputWithContext(ctx context.Context) DomainSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSourceOutput)
}

// DomainSourceArrayInput is an input type that accepts DomainSourceArray and DomainSourceArrayOutput values.
// You can construct a concrete instance of `DomainSourceArrayInput` via:
//
//          DomainSourceArray{ DomainSourceArgs{...} }
type DomainSourceArrayInput interface {
	pulumi.Input

	ToDomainSourceArrayOutput() DomainSourceArrayOutput
	ToDomainSourceArrayOutputWithContext(context.Context) DomainSourceArrayOutput
}

type DomainSourceArray []DomainSourceInput

func (DomainSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSource)(nil)).Elem()
}

func (i DomainSourceArray) ToDomainSourceArrayOutput() DomainSourceArrayOutput {
	return i.ToDomainSourceArrayOutputWithContext(context.Background())
}

func (i DomainSourceArray) ToDomainSourceArrayOutputWithContext(ctx context.Context) DomainSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSourceArrayOutput)
}

type DomainSourceOutput struct{ *pulumi.OutputState }

func (DomainSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSource)(nil)).Elem()
}

func (o DomainSourceOutput) ToDomainSourceOutput() DomainSourceOutput {
	return o
}

func (o DomainSourceOutput) ToDomainSourceOutputWithContext(ctx context.Context) DomainSourceOutput {
	return o
}

// The address of the origin server. You can specify an IP address or a domain name.
func (o DomainSourceOutput) SourceContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSource) string { return v.SourceContent }).(pulumi.StringOutput)
}

// The port number. You can specify port 443 or 80. **Default value: 80**. If you specify port 443, Alibaba Cloud CDN communicates with the origin server over HTTPS. You can also customize a port.
func (o DomainSourceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSource) string { return v.SourcePort }).(pulumi.StringOutput)
}

// The priority of the origin server if multiple origin servers are specified. Valid values: `20` and `30`. **Default value: 20**. A value of 20 indicates that the origin server is the primary origin server. A value of 30 indicates that the origin server is a secondary origin server.
func (o DomainSourceOutput) SourcePriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSource) *string { return v.SourcePriority }).(pulumi.StringPtrOutput)
}

// The type of the origin server. Valid values:
func (o DomainSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type DomainSourceArrayOutput struct{ *pulumi.OutputState }

func (DomainSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSource)(nil)).Elem()
}

func (o DomainSourceArrayOutput) ToDomainSourceArrayOutput() DomainSourceArrayOutput {
	return o
}

func (o DomainSourceArrayOutput) ToDomainSourceArrayOutputWithContext(ctx context.Context) DomainSourceArrayOutput {
	return o
}

func (o DomainSourceArrayOutput) Index(i pulumi.IntInput) DomainSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSource {
		return vs[0].([]DomainSource)[vs[1].(int)]
	}).(DomainSourceOutput)
}

type GetDomainsDomain struct {
	// The CNAME that is assigned to the domain name for CDN. You must add a CNAME record in the system of your Domain Name System (DNS) service provider to map the domain name for CDN to the CNAME.
	Cname string `pulumi:"cname"`
	// The description of the domain name for CDN.
	Description string `pulumi:"description"`
	// The domain name for CDN.
	DomainName string `pulumi:"domainName"`
	// The time when the domain name for CDN was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	GmtCreated string `pulumi:"gmtCreated"`
	// The last time when the domain name for CDN was modified. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	GmtModified string `pulumi:"gmtModified"`
	// The ID of the Domain. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// Indicates whether the domain name for CDN is in a sandbox environment.
	SandBox string `pulumi:"sandBox"`
	// The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
	Sources []GetDomainsDomainSource `pulumi:"sources"`
	// Indicates whether the Secure Sockets Layer (SSL) certificate is enabled. Valid values: `on`,`off`.
	SslProtocol string `pulumi:"sslProtocol"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//          GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	// The CNAME that is assigned to the domain name for CDN. You must add a CNAME record in the system of your Domain Name System (DNS) service provider to map the domain name for CDN to the CNAME.
	Cname pulumi.StringInput `pulumi:"cname"`
	// The description of the domain name for CDN.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name for CDN.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The time when the domain name for CDN was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	GmtCreated pulumi.StringInput `pulumi:"gmtCreated"`
	// The last time when the domain name for CDN was modified. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
	GmtModified pulumi.StringInput `pulumi:"gmtModified"`
	// The ID of the Domain. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the domain name for CDN is in a sandbox environment.
	SandBox pulumi.StringInput `pulumi:"sandBox"`
	// The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
	Sources GetDomainsDomainSourceArrayInput `pulumi:"sources"`
	// Indicates whether the Secure Sockets Layer (SSL) certificate is enabled. Valid values: `on`,`off`.
	SslProtocol pulumi.StringInput `pulumi:"sslProtocol"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//          GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

// The CNAME that is assigned to the domain name for CDN. You must add a CNAME record in the system of your Domain Name System (DNS) service provider to map the domain name for CDN to the CNAME.
func (o GetDomainsDomainOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Cname }).(pulumi.StringOutput)
}

// The description of the domain name for CDN.
func (o GetDomainsDomainOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name for CDN.
func (o GetDomainsDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.DomainName }).(pulumi.StringOutput)
}

// The time when the domain name for CDN was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
func (o GetDomainsDomainOutput) GmtCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.GmtCreated }).(pulumi.StringOutput)
}

// The last time when the domain name for CDN was modified. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
func (o GetDomainsDomainOutput) GmtModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.GmtModified }).(pulumi.StringOutput)
}

// The ID of the Domain. Its value is same as Queue Name.
func (o GetDomainsDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the domain name for CDN is in a sandbox environment.
func (o GetDomainsDomainOutput) SandBox() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.SandBox }).(pulumi.StringOutput)
}

// The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
func (o GetDomainsDomainOutput) Sources() GetDomainsDomainSourceArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []GetDomainsDomainSource { return v.Sources }).(GetDomainsDomainSourceArrayOutput)
}

// Indicates whether the Secure Sockets Layer (SSL) certificate is enabled. Valid values: `on`,`off`.
func (o GetDomainsDomainOutput) SslProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.SslProtocol }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetDomainsDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Status }).(pulumi.StringOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetDomainsDomainSource struct {
	SourceContent  string `pulumi:"sourceContent"`
	SourcePort     string `pulumi:"sourcePort"`
	SourcePriority string `pulumi:"sourcePriority"`
	SourceType     string `pulumi:"sourceType"`
}

// GetDomainsDomainSourceInput is an input type that accepts GetDomainsDomainSourceArgs and GetDomainsDomainSourceOutput values.
// You can construct a concrete instance of `GetDomainsDomainSourceInput` via:
//
//          GetDomainsDomainSourceArgs{...}
type GetDomainsDomainSourceInput interface {
	pulumi.Input

	ToGetDomainsDomainSourceOutput() GetDomainsDomainSourceOutput
	ToGetDomainsDomainSourceOutputWithContext(context.Context) GetDomainsDomainSourceOutput
}

type GetDomainsDomainSourceArgs struct {
	SourceContent  pulumi.StringInput `pulumi:"sourceContent"`
	SourcePort     pulumi.StringInput `pulumi:"sourcePort"`
	SourcePriority pulumi.StringInput `pulumi:"sourcePriority"`
	SourceType     pulumi.StringInput `pulumi:"sourceType"`
}

func (GetDomainsDomainSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainSource)(nil)).Elem()
}

func (i GetDomainsDomainSourceArgs) ToGetDomainsDomainSourceOutput() GetDomainsDomainSourceOutput {
	return i.ToGetDomainsDomainSourceOutputWithContext(context.Background())
}

func (i GetDomainsDomainSourceArgs) ToGetDomainsDomainSourceOutputWithContext(ctx context.Context) GetDomainsDomainSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainSourceOutput)
}

// GetDomainsDomainSourceArrayInput is an input type that accepts GetDomainsDomainSourceArray and GetDomainsDomainSourceArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainSourceArrayInput` via:
//
//          GetDomainsDomainSourceArray{ GetDomainsDomainSourceArgs{...} }
type GetDomainsDomainSourceArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainSourceArrayOutput() GetDomainsDomainSourceArrayOutput
	ToGetDomainsDomainSourceArrayOutputWithContext(context.Context) GetDomainsDomainSourceArrayOutput
}

type GetDomainsDomainSourceArray []GetDomainsDomainSourceInput

func (GetDomainsDomainSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainSource)(nil)).Elem()
}

func (i GetDomainsDomainSourceArray) ToGetDomainsDomainSourceArrayOutput() GetDomainsDomainSourceArrayOutput {
	return i.ToGetDomainsDomainSourceArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainSourceArray) ToGetDomainsDomainSourceArrayOutputWithContext(ctx context.Context) GetDomainsDomainSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainSourceArrayOutput)
}

type GetDomainsDomainSourceOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainSource)(nil)).Elem()
}

func (o GetDomainsDomainSourceOutput) ToGetDomainsDomainSourceOutput() GetDomainsDomainSourceOutput {
	return o
}

func (o GetDomainsDomainSourceOutput) ToGetDomainsDomainSourceOutputWithContext(ctx context.Context) GetDomainsDomainSourceOutput {
	return o
}

func (o GetDomainsDomainSourceOutput) SourceContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainSource) string { return v.SourceContent }).(pulumi.StringOutput)
}

func (o GetDomainsDomainSourceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainSource) string { return v.SourcePort }).(pulumi.StringOutput)
}

func (o GetDomainsDomainSourceOutput) SourcePriority() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainSource) string { return v.SourcePriority }).(pulumi.StringOutput)
}

func (o GetDomainsDomainSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetDomainsDomainSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainSource)(nil)).Elem()
}

func (o GetDomainsDomainSourceArrayOutput) ToGetDomainsDomainSourceArrayOutput() GetDomainsDomainSourceArrayOutput {
	return o
}

func (o GetDomainsDomainSourceArrayOutput) ToGetDomainsDomainSourceArrayOutputWithContext(ctx context.Context) GetDomainsDomainSourceArrayOutput {
	return o
}

func (o GetDomainsDomainSourceArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainSource {
		return vs[0].([]GetDomainsDomainSource)[vs[1].(int)]
	}).(GetDomainsDomainSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSourceInput)(nil)).Elem(), DomainSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSourceArrayInput)(nil)).Elem(), DomainSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainInput)(nil)).Elem(), GetDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainArrayInput)(nil)).Elem(), GetDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainSourceInput)(nil)).Elem(), GetDomainsDomainSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainSourceArrayInput)(nil)).Elem(), GetDomainsDomainSourceArray{})
	pulumi.RegisterOutputType(DomainSourceOutput{})
	pulumi.RegisterOutputType(DomainSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainSourceOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainSourceArrayOutput{})
}
