// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Application Real-Time Monitoring Service (ARMS) Alert Contact resource.
//
// For information about Application Real-Time Monitoring Service (ARMS) Alert Contact and how to use it, see [What is Alert Contact](https://www.alibabacloud.com/help/en/doc-detail/42953.htm).
//
// > **NOTE:** Available in v1.129.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := arms.NewAlertContact(ctx, "example", &arms.AlertContactArgs{
// 			AlertContactName:    pulumi.String("example_value"),
// 			DingRobotWebhookUrl: pulumi.String("https://oapi.dingtalk.com/robot/send?access_token=91f2f6****"),
// 			Email:               pulumi.String("someone@example.com"),
// 			PhoneNum:            pulumi.String("1381111****"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Application Real-Time Monitoring Service (ARMS) Alert Contact can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:arms/alertContact:AlertContact example <id>
// ```
type AlertContact struct {
	pulumi.CustomResourceState

	// The name of the alert contact.
	AlertContactName pulumi.StringPtrOutput `pulumi:"alertContactName"`
	// The webhook URL of the DingTalk chatbot. For more information about how to obtain the URL, see Configure a DingTalk chatbot to send alert notifications: https://www.alibabacloud.com/help/en/doc-detail/106247.htm. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	DingRobotWebhookUrl pulumi.StringPtrOutput `pulumi:"dingRobotWebhookUrl"`
	// The email address of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	Email pulumi.StringPtrOutput `pulumi:"email"`
	// The mobile number of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	PhoneNum pulumi.StringPtrOutput `pulumi:"phoneNum"`
	// Specifies whether the alert contact receives system notifications. Valid values:  true: receives system notifications. false: does not receive system notifications.
	SystemNoc pulumi.BoolPtrOutput `pulumi:"systemNoc"`
}

// NewAlertContact registers a new resource with the given unique name, arguments, and options.
func NewAlertContact(ctx *pulumi.Context,
	name string, args *AlertContactArgs, opts ...pulumi.ResourceOption) (*AlertContact, error) {
	if args == nil {
		args = &AlertContactArgs{}
	}

	var resource AlertContact
	err := ctx.RegisterResource("alicloud:arms/alertContact:AlertContact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertContact gets an existing AlertContact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertContact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertContactState, opts ...pulumi.ResourceOption) (*AlertContact, error) {
	var resource AlertContact
	err := ctx.ReadResource("alicloud:arms/alertContact:AlertContact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertContact resources.
type alertContactState struct {
	// The name of the alert contact.
	AlertContactName *string `pulumi:"alertContactName"`
	// The webhook URL of the DingTalk chatbot. For more information about how to obtain the URL, see Configure a DingTalk chatbot to send alert notifications: https://www.alibabacloud.com/help/en/doc-detail/106247.htm. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	DingRobotWebhookUrl *string `pulumi:"dingRobotWebhookUrl"`
	// The email address of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	Email *string `pulumi:"email"`
	// The mobile number of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	PhoneNum *string `pulumi:"phoneNum"`
	// Specifies whether the alert contact receives system notifications. Valid values:  true: receives system notifications. false: does not receive system notifications.
	SystemNoc *bool `pulumi:"systemNoc"`
}

type AlertContactState struct {
	// The name of the alert contact.
	AlertContactName pulumi.StringPtrInput
	// The webhook URL of the DingTalk chatbot. For more information about how to obtain the URL, see Configure a DingTalk chatbot to send alert notifications: https://www.alibabacloud.com/help/en/doc-detail/106247.htm. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	DingRobotWebhookUrl pulumi.StringPtrInput
	// The email address of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	Email pulumi.StringPtrInput
	// The mobile number of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	PhoneNum pulumi.StringPtrInput
	// Specifies whether the alert contact receives system notifications. Valid values:  true: receives system notifications. false: does not receive system notifications.
	SystemNoc pulumi.BoolPtrInput
}

func (AlertContactState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertContactState)(nil)).Elem()
}

type alertContactArgs struct {
	// The name of the alert contact.
	AlertContactName *string `pulumi:"alertContactName"`
	// The webhook URL of the DingTalk chatbot. For more information about how to obtain the URL, see Configure a DingTalk chatbot to send alert notifications: https://www.alibabacloud.com/help/en/doc-detail/106247.htm. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	DingRobotWebhookUrl *string `pulumi:"dingRobotWebhookUrl"`
	// The email address of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	Email *string `pulumi:"email"`
	// The mobile number of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	PhoneNum *string `pulumi:"phoneNum"`
	// Specifies whether the alert contact receives system notifications. Valid values:  true: receives system notifications. false: does not receive system notifications.
	SystemNoc *bool `pulumi:"systemNoc"`
}

// The set of arguments for constructing a AlertContact resource.
type AlertContactArgs struct {
	// The name of the alert contact.
	AlertContactName pulumi.StringPtrInput
	// The webhook URL of the DingTalk chatbot. For more information about how to obtain the URL, see Configure a DingTalk chatbot to send alert notifications: https://www.alibabacloud.com/help/en/doc-detail/106247.htm. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	DingRobotWebhookUrl pulumi.StringPtrInput
	// The email address of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	Email pulumi.StringPtrInput
	// The mobile number of the alert contact. You must specify at least one of the following parameters: PhoneNum, Email, and DingRobotWebhookUrl.
	PhoneNum pulumi.StringPtrInput
	// Specifies whether the alert contact receives system notifications. Valid values:  true: receives system notifications. false: does not receive system notifications.
	SystemNoc pulumi.BoolPtrInput
}

func (AlertContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertContactArgs)(nil)).Elem()
}

type AlertContactInput interface {
	pulumi.Input

	ToAlertContactOutput() AlertContactOutput
	ToAlertContactOutputWithContext(ctx context.Context) AlertContactOutput
}

func (*AlertContact) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertContact)(nil)).Elem()
}

func (i *AlertContact) ToAlertContactOutput() AlertContactOutput {
	return i.ToAlertContactOutputWithContext(context.Background())
}

func (i *AlertContact) ToAlertContactOutputWithContext(ctx context.Context) AlertContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactOutput)
}

// AlertContactArrayInput is an input type that accepts AlertContactArray and AlertContactArrayOutput values.
// You can construct a concrete instance of `AlertContactArrayInput` via:
//
//          AlertContactArray{ AlertContactArgs{...} }
type AlertContactArrayInput interface {
	pulumi.Input

	ToAlertContactArrayOutput() AlertContactArrayOutput
	ToAlertContactArrayOutputWithContext(context.Context) AlertContactArrayOutput
}

type AlertContactArray []AlertContactInput

func (AlertContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertContact)(nil)).Elem()
}

func (i AlertContactArray) ToAlertContactArrayOutput() AlertContactArrayOutput {
	return i.ToAlertContactArrayOutputWithContext(context.Background())
}

func (i AlertContactArray) ToAlertContactArrayOutputWithContext(ctx context.Context) AlertContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactArrayOutput)
}

// AlertContactMapInput is an input type that accepts AlertContactMap and AlertContactMapOutput values.
// You can construct a concrete instance of `AlertContactMapInput` via:
//
//          AlertContactMap{ "key": AlertContactArgs{...} }
type AlertContactMapInput interface {
	pulumi.Input

	ToAlertContactMapOutput() AlertContactMapOutput
	ToAlertContactMapOutputWithContext(context.Context) AlertContactMapOutput
}

type AlertContactMap map[string]AlertContactInput

func (AlertContactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertContact)(nil)).Elem()
}

func (i AlertContactMap) ToAlertContactMapOutput() AlertContactMapOutput {
	return i.ToAlertContactMapOutputWithContext(context.Background())
}

func (i AlertContactMap) ToAlertContactMapOutputWithContext(ctx context.Context) AlertContactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactMapOutput)
}

type AlertContactOutput struct{ *pulumi.OutputState }

func (AlertContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertContact)(nil)).Elem()
}

func (o AlertContactOutput) ToAlertContactOutput() AlertContactOutput {
	return o
}

func (o AlertContactOutput) ToAlertContactOutputWithContext(ctx context.Context) AlertContactOutput {
	return o
}

type AlertContactArrayOutput struct{ *pulumi.OutputState }

func (AlertContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertContact)(nil)).Elem()
}

func (o AlertContactArrayOutput) ToAlertContactArrayOutput() AlertContactArrayOutput {
	return o
}

func (o AlertContactArrayOutput) ToAlertContactArrayOutputWithContext(ctx context.Context) AlertContactArrayOutput {
	return o
}

func (o AlertContactArrayOutput) Index(i pulumi.IntInput) AlertContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertContact {
		return vs[0].([]*AlertContact)[vs[1].(int)]
	}).(AlertContactOutput)
}

type AlertContactMapOutput struct{ *pulumi.OutputState }

func (AlertContactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertContact)(nil)).Elem()
}

func (o AlertContactMapOutput) ToAlertContactMapOutput() AlertContactMapOutput {
	return o
}

func (o AlertContactMapOutput) ToAlertContactMapOutputWithContext(ctx context.Context) AlertContactMapOutput {
	return o
}

func (o AlertContactMapOutput) MapIndex(k pulumi.StringInput) AlertContactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertContact {
		return vs[0].(map[string]*AlertContact)[vs[1].(string)]
	}).(AlertContactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactInput)(nil)).Elem(), &AlertContact{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactArrayInput)(nil)).Elem(), AlertContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactMapInput)(nil)).Elem(), AlertContactMap{})
	pulumi.RegisterOutputType(AlertContactOutput{})
	pulumi.RegisterOutputType(AlertContactArrayOutput{})
	pulumi.RegisterOutputType(AlertContactMapOutput{})
}
