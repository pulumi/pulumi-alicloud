// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.258.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// enhanced, err := vpc.GetEnhancedNatAvailableZones(ctx, &vpc.GetEnhancedNatAvailableZonesArgs{
// }, nil);
// if err != nil {
// return err
// }
// defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
// Max: 99999,
// Min: 10000,
// })
// if err != nil {
// return err
// }
// vpc, err := vpc.NewNetwork(ctx, "vpc", &vpc.NetworkArgs{
// Description: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// CidrBlock: pulumi.String("192.168.0.0/16"),
// VpcName: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// })
// if err != nil {
// return err
// }
// vswitch, err := vpc.NewSwitch(ctx, "vswitch", &vpc.SwitchArgs{
// Description: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// VpcId: vpc.ID(),
// VswitchName: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// ZoneId: pulumi.String(enhanced.Zones[0].ZoneId),
// CidrBlock: pulumi.String(vpc.CidrBlock.ApplyT(func(cidrBlock string) (std.CidrsubnetResult, error) {
// return std.CidrsubnetResult(interface{}(std.CidrsubnetOutput(ctx, std.CidrsubnetOutputArgs{
// Input: cidrBlock,
// Newbits: 8,
// Netnum: 8,
// }, nil))), nil
// }).(std.CidrsubnetResultOutput).ApplyT(func(invoke std.CidrsubnetResult) (*string, error) {
// return invoke.Result, nil
// }).(pulumi.StringPtrOutput)),
// })
// if err != nil {
// return err
// }
// _, err = ecs.NewSnapshotPolicy(ctx, "default", &ecs.SnapshotPolicyArgs{
// Name: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// RepeatWeekdays: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("2"),
// pulumi.String("3"),
// },
// RetentionDays: pulumi.Int(-1),
// TimePoints: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("22"),
// pulumi.String("23"),
// },
// })
// if err != nil {
// return err
// }
// _default := vswitch.ZoneId.ApplyT(func(zoneId string) (ecs.GetInstanceTypesResult, error) {
// return ecs.GetInstanceTypesResult(interface{}(ecs.GetInstanceTypesOutput(ctx, ecs.GetInstanceTypesOutputArgs{
// AvailabilityZone: zoneId,
// CpuCoreCount: 2,
// MemorySize: 4,
// KubernetesNodeRole: "Worker",
// InstanceTypeFamily: "ecs.sn1ne",
// }, nil))), nil
// }).(ecs.GetInstanceTypesResultOutput)
// defaultManagedKubernetes, err := cs.NewManagedKubernetes(ctx, "default", &cs.ManagedKubernetesArgs{
// Name: pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
// ClusterSpec: pulumi.String("ack.pro.small"),
// Version: pulumi.String("1.24.6-aliyun.1"),
// NewNatGateway: pulumi.Bool(true),
// NodeCidrMask: pulumi.Int(26),
// ProxyMode: pulumi.String("ipvs"),
// ServiceCidr: pulumi.String("172.23.0.0/16"),
// PodCidr: pulumi.String("10.95.0.0/16"),
// WorkerVswitchIds: pulumi.StringArray{
// vswitch.ID(),
// },
// })
// if err != nil {
// return err
// }
// defaultKeyPair, err := ecs.NewKeyPair(ctx, "default", &ecs.KeyPairArgs{
// KeyPairName: pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
// })
// if err != nil {
// return err
// }
// defaultNodePool, err := cs.NewNodePool(ctx, "default", &cs.NodePoolArgs{
// Name: pulumi.String("desired_size"),
// ClusterId: defaultManagedKubernetes.ID(),
// VswitchIds: pulumi.StringArray{
// vswitch.ID(),
// },
// InstanceTypes: pulumi.StringArray{
// pulumi.String(_default.ApplyT(func(_default ecs.GetInstanceTypesResult) (*string, error) {
// return &default.InstanceTypes[0].Id, nil
// }).(pulumi.StringPtrOutput)),
// },
// SystemDiskCategory: pulumi.String("cloud_efficiency"),
// SystemDiskSize: pulumi.Int(40),
// KeyName: defaultKeyPair.KeyName,
// DesiredSize: pulumi.String("2"),
// })
// if err != nil {
// return err
// }
// environment_cs, err := arms.NewEnvironment(ctx, "environment-cs", &arms.EnvironmentArgs{
// EnvironmentType: pulumi.String("CS"),
// EnvironmentName: pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
// BindResourceId: defaultNodePool.ClusterId,
// EnvironmentSubType: pulumi.String("ManagedKubernetes"),
// })
// if err != nil {
// return err
// }
// defaultEnvPodMonitor, err := arms.NewEnvPodMonitor(ctx, "default", &arms.EnvPodMonitorArgs{
// AliyunLang: pulumi.String("en"),
// EnvironmentId: environment_cs.ID(),
// ConfigYaml: pulumi.String(`apiVersion: monitoring.coreos.com/v1
// kind: PodMonitor
// metadata:
//
//	name: arms-admin-pm1
//	namespace: arms-prom
//	annotations:
//	  arms.prometheus.io/discovery: 'true'
//	  o11y.aliyun.com/addon-name: mysql
//	  o11y.aliyun.com/addon-version: 1.0.2
//	  o11y.aliyun.com/release-name: mysql2
//
// spec:
//
//	selector:
//	  matchLabels:
//	    app: arms-prometheus-ack-arms-prometheus
//	    release: arms-prometheus
//	namespaceSelector:
//	  any: true
//	podMetricsEndpoints:
//	- interval: 30s
//	  targetPort: 9335
//	  path: /metrics
//	- interval: 11s
//	  targetPort: 9335
//	  path: /metric
//
// `),
// })
// if err != nil {
// return err
// }
// ids := arms.GetEnvPodMonitorsOutput(ctx, arms.GetEnvPodMonitorsOutputArgs{
// EnvironmentId: defaultEnvPodMonitor.EnvironmentId,
// Ids: pulumi.StringArray{
// defaultEnvPodMonitor.ID(),
// },
// }, nil);
// ctx.Export("armsEnvPodMonitorsId0", ids.ApplyT(func(ids arms.GetEnvPodMonitorsResult) (*string, error) {
// return &ids.Monitors[0].Id, nil
// }).(pulumi.StringPtrOutput))
// return nil
// })
// }
// ```
func GetEnvPodMonitors(ctx *pulumi.Context, args *GetEnvPodMonitorsArgs, opts ...pulumi.InvokeOption) (*GetEnvPodMonitorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvPodMonitorsResult
	err := ctx.Invoke("alicloud:arms/getEnvPodMonitors:getEnvPodMonitors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvPodMonitors.
type GetEnvPodMonitorsArgs struct {
	// The environment ID.
	EnvironmentId string `pulumi:"environmentId"`
	// A list of ARMS Env Pod Monitor IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by ARMS Env Pod Monitor name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getEnvPodMonitors.
type GetEnvPodMonitorsResult struct {
	// The environment ID.
	EnvironmentId string `pulumi:"environmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// A list of ARMS Env Pod Monitors. Each element contains the following attributes:
	Monitors  []GetEnvPodMonitorsMonitor `pulumi:"monitors"`
	NameRegex *string                    `pulumi:"nameRegex"`
	// A list of ARMS Env Pod Monitor names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
}

func GetEnvPodMonitorsOutput(ctx *pulumi.Context, args GetEnvPodMonitorsOutputArgs, opts ...pulumi.InvokeOption) GetEnvPodMonitorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEnvPodMonitorsResultOutput, error) {
			args := v.(GetEnvPodMonitorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:arms/getEnvPodMonitors:getEnvPodMonitors", args, GetEnvPodMonitorsResultOutput{}, options).(GetEnvPodMonitorsResultOutput), nil
		}).(GetEnvPodMonitorsResultOutput)
}

// A collection of arguments for invoking getEnvPodMonitors.
type GetEnvPodMonitorsOutputArgs struct {
	// The environment ID.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// A list of ARMS Env Pod Monitor IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by ARMS Env Pod Monitor name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetEnvPodMonitorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvPodMonitorsArgs)(nil)).Elem()
}

// A collection of values returned by getEnvPodMonitors.
type GetEnvPodMonitorsResultOutput struct{ *pulumi.OutputState }

func (GetEnvPodMonitorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvPodMonitorsResult)(nil)).Elem()
}

func (o GetEnvPodMonitorsResultOutput) ToGetEnvPodMonitorsResultOutput() GetEnvPodMonitorsResultOutput {
	return o
}

func (o GetEnvPodMonitorsResultOutput) ToGetEnvPodMonitorsResultOutputWithContext(ctx context.Context) GetEnvPodMonitorsResultOutput {
	return o
}

// The environment ID.
func (o GetEnvPodMonitorsResultOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEnvPodMonitorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEnvPodMonitorsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list of ARMS Env Pod Monitors. Each element contains the following attributes:
func (o GetEnvPodMonitorsResultOutput) Monitors() GetEnvPodMonitorsMonitorArrayOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) []GetEnvPodMonitorsMonitor { return v.Monitors }).(GetEnvPodMonitorsMonitorArrayOutput)
}

func (o GetEnvPodMonitorsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of ARMS Env Pod Monitor names.
func (o GetEnvPodMonitorsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetEnvPodMonitorsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvPodMonitorsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvPodMonitorsResultOutput{})
}
