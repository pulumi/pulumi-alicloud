// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.237.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := arms.NewAlertRobot(ctx, "default", &arms.AlertRobotArgs{
//				AlertRobotName: pulumi.String("my-AlertRobot"),
//				RobotType:      pulumi.String("wechat"),
//				RobotAddr:      pulumi.String("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23"),
//			})
//			if err != nil {
//				return err
//			}
//			nameRegex := arms.GetAlertRobotsOutput(ctx, arms.GetAlertRobotsOutputArgs{
//				AlertRobotName: _default.AlertRobotName,
//			}, nil)
//			ctx.Export("armsAlertRobotId", nameRegex.ApplyT(func(nameRegex arms.GetAlertRobotsResult) (*string, error) {
//				return &nameRegex.Robots[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetAlertRobots(ctx *pulumi.Context, args *GetAlertRobotsArgs, opts ...pulumi.InvokeOption) (*GetAlertRobotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlertRobotsResult
	err := ctx.Invoke("alicloud:arms/getAlertRobots:getAlertRobots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertRobots.
type GetAlertRobotsArgs struct {
	// The robot name.
	AlertRobotName *string `pulumi:"alertRobotName"`
	// A list of Alert Robot IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Alert Robot name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The robot type.
	RobotType *string `pulumi:"robotType"`
}

// A collection of values returned by getAlertRobots.
type GetAlertRobotsResult struct {
	AlertRobotName *string `pulumi:"alertRobotName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Alert Robot IDs.
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Alert Robot names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The type of the robot.
	RobotType *string `pulumi:"robotType"`
	// A list of Arms Alert Robots. Each element contains the following attributes:
	Robots []GetAlertRobotsRobot `pulumi:"robots"`
}

func GetAlertRobotsOutput(ctx *pulumi.Context, args GetAlertRobotsOutputArgs, opts ...pulumi.InvokeOption) GetAlertRobotsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAlertRobotsResultOutput, error) {
			args := v.(GetAlertRobotsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:arms/getAlertRobots:getAlertRobots", args, GetAlertRobotsResultOutput{}, options).(GetAlertRobotsResultOutput), nil
		}).(GetAlertRobotsResultOutput)
}

// A collection of arguments for invoking getAlertRobots.
type GetAlertRobotsOutputArgs struct {
	// The robot name.
	AlertRobotName pulumi.StringPtrInput `pulumi:"alertRobotName"`
	// A list of Alert Robot IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Alert Robot name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The robot type.
	RobotType pulumi.StringPtrInput `pulumi:"robotType"`
}

func (GetAlertRobotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRobotsArgs)(nil)).Elem()
}

// A collection of values returned by getAlertRobots.
type GetAlertRobotsResultOutput struct{ *pulumi.OutputState }

func (GetAlertRobotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRobotsResult)(nil)).Elem()
}

func (o GetAlertRobotsResultOutput) ToGetAlertRobotsResultOutput() GetAlertRobotsResultOutput {
	return o
}

func (o GetAlertRobotsResultOutput) ToGetAlertRobotsResultOutputWithContext(ctx context.Context) GetAlertRobotsResultOutput {
	return o
}

func (o GetAlertRobotsResultOutput) AlertRobotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) *string { return v.AlertRobotName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertRobotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Alert Robot IDs.
func (o GetAlertRobotsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetAlertRobotsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Alert Robot names.
func (o GetAlertRobotsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetAlertRobotsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The type of the robot.
func (o GetAlertRobotsResultOutput) RobotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) *string { return v.RobotType }).(pulumi.StringPtrOutput)
}

// A list of Arms Alert Robots. Each element contains the following attributes:
func (o GetAlertRobotsResultOutput) Robots() GetAlertRobotsRobotArrayOutput {
	return o.ApplyT(func(v GetAlertRobotsResult) []GetAlertRobotsRobot { return v.Robots }).(GetAlertRobotsRobotArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertRobotsResultOutput{})
}
