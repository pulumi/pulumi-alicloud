// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the ARMS Environments of the current Alibaba Cloud user.
//
// > **NOTE:** Available since v1.258.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/resourcemanager"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := "terraform-example"
//			if param := cfg.Get("name"); param != "" {
//				name = param
//			}
//			_default, err := resourcemanager.GetResourceGroups(ctx, &resourcemanager.GetResourceGroupsArgs{
//				Status: pulumi.StringRef("OK"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultGetNetworks, err := vpc.GetNetworks(ctx, &vpc.GetNetworksArgs{
//				NameRegex: pulumi.StringRef("^default-NODELETING$"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
//				Min: 10000,
//				Max: 99999,
//			})
//			if err != nil {
//				return err
//			}
//			defaultEnvironment, err := arms.NewEnvironment(ctx, "default", &arms.EnvironmentArgs{
//				BindResourceId:     pulumi.String(defaultGetNetworks.Ids[0]),
//				EnvironmentSubType: pulumi.String("ECS"),
//				EnvironmentType:    pulumi.String("ECS"),
//				EnvironmentName:    pulumi.Sprintf("%v-%v", name, defaultInteger.Result),
//				ResourceGroupId:    pulumi.String(_default.Ids[1]),
//				Tags: pulumi.StringMap{
//					"Created": pulumi.String("TF"),
//					"For":     pulumi.String("Environment"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ids := arms.GetEnvironmentsOutput(ctx, arms.GetEnvironmentsOutputArgs{
//				Ids: pulumi.StringArray{
//					defaultEnvironment.ID(),
//				},
//			}, nil)
//			ctx.Export("armsEnvironmentsId0", ids.ApplyT(func(ids arms.GetEnvironmentsResult) (*string, error) {
//				return &ids.Environments[0].Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetEnvironments(ctx *pulumi.Context, args *GetEnvironmentsArgs, opts ...pulumi.InvokeOption) (*GetEnvironmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvironmentsResult
	err := ctx.Invoke("alicloud:arms/getEnvironments:getEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvironments.
type GetEnvironmentsArgs struct {
	// The environment type. Valid values: `CS`, `ECS`, `Cloud`.
	EnvironmentType *string `pulumi:"environmentType"`
	// A list of ARMS Environment IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by ARMS Environment name.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getEnvironments.
type GetEnvironmentsResult struct {
	// The type of the environment instance.
	EnvironmentType *string `pulumi:"environmentType"`
	// A list of ARMS Environments. Each element contains the following attributes:
	Environments []GetEnvironmentsEnvironment `pulumi:"environments"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of ARMS Environment names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tags of the environment resource.
	Tags map[string]string `pulumi:"tags"`
}

func GetEnvironmentsOutput(ctx *pulumi.Context, args GetEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) GetEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEnvironmentsResultOutput, error) {
			args := v.(GetEnvironmentsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("alicloud:arms/getEnvironments:getEnvironments", args, GetEnvironmentsResultOutput{}, options).(GetEnvironmentsResultOutput), nil
		}).(GetEnvironmentsResultOutput)
}

// A collection of arguments for invoking getEnvironments.
type GetEnvironmentsOutputArgs struct {
	// The environment type. Valid values: `CS`, `ECS`, `Cloud`.
	EnvironmentType pulumi.StringPtrInput `pulumi:"environmentType"`
	// A list of ARMS Environment IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by ARMS Environment name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results (after running `pulumi preview`).
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsArgs)(nil)).Elem()
}

// A collection of values returned by getEnvironments.
type GetEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsResult)(nil)).Elem()
}

func (o GetEnvironmentsResultOutput) ToGetEnvironmentsResultOutput() GetEnvironmentsResultOutput {
	return o
}

func (o GetEnvironmentsResultOutput) ToGetEnvironmentsResultOutputWithContext(ctx context.Context) GetEnvironmentsResultOutput {
	return o
}

// The type of the environment instance.
func (o GetEnvironmentsResultOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

// A list of ARMS Environments. Each element contains the following attributes:
func (o GetEnvironmentsResultOutput) Environments() GetEnvironmentsEnvironmentArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) []GetEnvironmentsEnvironment { return v.Environments }).(GetEnvironmentsEnvironmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEnvironmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEnvironmentsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEnvironmentsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of ARMS Environment names.
func (o GetEnvironmentsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetEnvironmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The ID of the resource group.
func (o GetEnvironmentsResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The tags of the environment resource.
func (o GetEnvironmentsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvironmentsResultOutput{})
}
