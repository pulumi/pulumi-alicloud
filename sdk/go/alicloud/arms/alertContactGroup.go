// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Application Real-Time Monitoring Service (ARMS) Alert Contact Group resource.
//
// For information about Application Real-Time Monitoring Service (ARMS) Alert Contact Group and how to use it, see [What is Alert Contact Group](https://www.alibabacloud.com/help/zh/doc-detail/130677.htm).
//
// > **NOTE:** Available in v1.131.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleAlertContact, err := arms.NewAlertContact(ctx, "exampleAlertContact", &arms.AlertContactArgs{
// 			AlertContactName:    pulumi.String("example_value"),
// 			DingRobotWebhookUrl: pulumi.String("https://oapi.dingtalk.com/robot/send?access_token=91f2f6****"),
// 			Email:               pulumi.String("someone@example.com"),
// 			PhoneNum:            pulumi.String("1381111****"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = arms.NewAlertContactGroup(ctx, "exampleAlertContactGroup", &arms.AlertContactGroupArgs{
// 			AlertContactGroupName: pulumi.String("example_value"),
// 			ContactIds: pulumi.StringArray{
// 				exampleAlertContact.ID(),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Application Real-Time Monitoring Service (ARMS) Alert Contact Group can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:arms/alertContactGroup:AlertContactGroup example <id>
// ```
type AlertContactGroup struct {
	pulumi.CustomResourceState

	// The name of the resource.
	AlertContactGroupName pulumi.StringOutput `pulumi:"alertContactGroupName"`
	// The list id of alert contact.
	ContactIds pulumi.StringArrayOutput `pulumi:"contactIds"`
}

// NewAlertContactGroup registers a new resource with the given unique name, arguments, and options.
func NewAlertContactGroup(ctx *pulumi.Context,
	name string, args *AlertContactGroupArgs, opts ...pulumi.ResourceOption) (*AlertContactGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlertContactGroupName == nil {
		return nil, errors.New("invalid value for required argument 'AlertContactGroupName'")
	}
	var resource AlertContactGroup
	err := ctx.RegisterResource("alicloud:arms/alertContactGroup:AlertContactGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertContactGroup gets an existing AlertContactGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertContactGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertContactGroupState, opts ...pulumi.ResourceOption) (*AlertContactGroup, error) {
	var resource AlertContactGroup
	err := ctx.ReadResource("alicloud:arms/alertContactGroup:AlertContactGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertContactGroup resources.
type alertContactGroupState struct {
	// The name of the resource.
	AlertContactGroupName *string `pulumi:"alertContactGroupName"`
	// The list id of alert contact.
	ContactIds []string `pulumi:"contactIds"`
}

type AlertContactGroupState struct {
	// The name of the resource.
	AlertContactGroupName pulumi.StringPtrInput
	// The list id of alert contact.
	ContactIds pulumi.StringArrayInput
}

func (AlertContactGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertContactGroupState)(nil)).Elem()
}

type alertContactGroupArgs struct {
	// The name of the resource.
	AlertContactGroupName string `pulumi:"alertContactGroupName"`
	// The list id of alert contact.
	ContactIds []string `pulumi:"contactIds"`
}

// The set of arguments for constructing a AlertContactGroup resource.
type AlertContactGroupArgs struct {
	// The name of the resource.
	AlertContactGroupName pulumi.StringInput
	// The list id of alert contact.
	ContactIds pulumi.StringArrayInput
}

func (AlertContactGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertContactGroupArgs)(nil)).Elem()
}

type AlertContactGroupInput interface {
	pulumi.Input

	ToAlertContactGroupOutput() AlertContactGroupOutput
	ToAlertContactGroupOutputWithContext(ctx context.Context) AlertContactGroupOutput
}

func (*AlertContactGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertContactGroup)(nil)).Elem()
}

func (i *AlertContactGroup) ToAlertContactGroupOutput() AlertContactGroupOutput {
	return i.ToAlertContactGroupOutputWithContext(context.Background())
}

func (i *AlertContactGroup) ToAlertContactGroupOutputWithContext(ctx context.Context) AlertContactGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactGroupOutput)
}

// AlertContactGroupArrayInput is an input type that accepts AlertContactGroupArray and AlertContactGroupArrayOutput values.
// You can construct a concrete instance of `AlertContactGroupArrayInput` via:
//
//          AlertContactGroupArray{ AlertContactGroupArgs{...} }
type AlertContactGroupArrayInput interface {
	pulumi.Input

	ToAlertContactGroupArrayOutput() AlertContactGroupArrayOutput
	ToAlertContactGroupArrayOutputWithContext(context.Context) AlertContactGroupArrayOutput
}

type AlertContactGroupArray []AlertContactGroupInput

func (AlertContactGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertContactGroup)(nil)).Elem()
}

func (i AlertContactGroupArray) ToAlertContactGroupArrayOutput() AlertContactGroupArrayOutput {
	return i.ToAlertContactGroupArrayOutputWithContext(context.Background())
}

func (i AlertContactGroupArray) ToAlertContactGroupArrayOutputWithContext(ctx context.Context) AlertContactGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactGroupArrayOutput)
}

// AlertContactGroupMapInput is an input type that accepts AlertContactGroupMap and AlertContactGroupMapOutput values.
// You can construct a concrete instance of `AlertContactGroupMapInput` via:
//
//          AlertContactGroupMap{ "key": AlertContactGroupArgs{...} }
type AlertContactGroupMapInput interface {
	pulumi.Input

	ToAlertContactGroupMapOutput() AlertContactGroupMapOutput
	ToAlertContactGroupMapOutputWithContext(context.Context) AlertContactGroupMapOutput
}

type AlertContactGroupMap map[string]AlertContactGroupInput

func (AlertContactGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertContactGroup)(nil)).Elem()
}

func (i AlertContactGroupMap) ToAlertContactGroupMapOutput() AlertContactGroupMapOutput {
	return i.ToAlertContactGroupMapOutputWithContext(context.Background())
}

func (i AlertContactGroupMap) ToAlertContactGroupMapOutputWithContext(ctx context.Context) AlertContactGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertContactGroupMapOutput)
}

type AlertContactGroupOutput struct{ *pulumi.OutputState }

func (AlertContactGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertContactGroup)(nil)).Elem()
}

func (o AlertContactGroupOutput) ToAlertContactGroupOutput() AlertContactGroupOutput {
	return o
}

func (o AlertContactGroupOutput) ToAlertContactGroupOutputWithContext(ctx context.Context) AlertContactGroupOutput {
	return o
}

type AlertContactGroupArrayOutput struct{ *pulumi.OutputState }

func (AlertContactGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertContactGroup)(nil)).Elem()
}

func (o AlertContactGroupArrayOutput) ToAlertContactGroupArrayOutput() AlertContactGroupArrayOutput {
	return o
}

func (o AlertContactGroupArrayOutput) ToAlertContactGroupArrayOutputWithContext(ctx context.Context) AlertContactGroupArrayOutput {
	return o
}

func (o AlertContactGroupArrayOutput) Index(i pulumi.IntInput) AlertContactGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertContactGroup {
		return vs[0].([]*AlertContactGroup)[vs[1].(int)]
	}).(AlertContactGroupOutput)
}

type AlertContactGroupMapOutput struct{ *pulumi.OutputState }

func (AlertContactGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertContactGroup)(nil)).Elem()
}

func (o AlertContactGroupMapOutput) ToAlertContactGroupMapOutput() AlertContactGroupMapOutput {
	return o
}

func (o AlertContactGroupMapOutput) ToAlertContactGroupMapOutputWithContext(ctx context.Context) AlertContactGroupMapOutput {
	return o
}

func (o AlertContactGroupMapOutput) MapIndex(k pulumi.StringInput) AlertContactGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertContactGroup {
		return vs[0].(map[string]*AlertContactGroup)[vs[1].(string)]
	}).(AlertContactGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactGroupInput)(nil)).Elem(), &AlertContactGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactGroupArrayInput)(nil)).Elem(), AlertContactGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertContactGroupMapInput)(nil)).Elem(), AlertContactGroupMap{})
	pulumi.RegisterOutputType(AlertContactGroupOutput{})
	pulumi.RegisterOutputType(AlertContactGroupArrayOutput{})
	pulumi.RegisterOutputType(AlertContactGroupMapOutput{})
}
