// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Arms Prometheis of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.203.0+.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ids, err := arms.GetPrometheis(ctx, &arms.GetPrometheisArgs{
//				Ids: []string{
//					"example_id",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("armsPrometheisId1", ids.Prometheis[0].Id)
//			nameRegex, err := arms.GetPrometheis(ctx, &arms.GetPrometheisArgs{
//				NameRegex: pulumi.StringRef("tf-example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("armsPrometheisId2", nameRegex.Prometheis[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetPrometheis(ctx *pulumi.Context, args *GetPrometheisArgs, opts ...pulumi.InvokeOption) (*GetPrometheisResult, error) {
	var rv GetPrometheisResult
	err := ctx.Invoke("alicloud:arms/getPrometheis:getPrometheis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrometheis.
type GetPrometheisArgs struct {
	// A list of Prometheus IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Prometheus name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getPrometheis.
type GetPrometheisResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// A list of Prometheus names.
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	// A list of Prometheis. Each element contains the following attributes:
	Prometheis []GetPrometheisPromethei `pulumi:"prometheis"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the Prometheus.
	Tags map[string]interface{} `pulumi:"tags"`
}

func GetPrometheisOutput(ctx *pulumi.Context, args GetPrometheisOutputArgs, opts ...pulumi.InvokeOption) GetPrometheisResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPrometheisResult, error) {
			args := v.(GetPrometheisArgs)
			r, err := GetPrometheis(ctx, &args, opts...)
			var s GetPrometheisResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPrometheisResultOutput)
}

// A collection of arguments for invoking getPrometheis.
type GetPrometheisOutputArgs struct {
	// A list of Prometheus IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A regex string to filter results by Prometheus name.
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetPrometheisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheisArgs)(nil)).Elem()
}

// A collection of values returned by getPrometheis.
type GetPrometheisResultOutput struct{ *pulumi.OutputState }

func (GetPrometheisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheisResult)(nil)).Elem()
}

func (o GetPrometheisResultOutput) ToGetPrometheisResultOutput() GetPrometheisResultOutput {
	return o
}

func (o GetPrometheisResultOutput) ToGetPrometheisResultOutputWithContext(ctx context.Context) GetPrometheisResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPrometheisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheisResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPrometheisResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrometheisResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPrometheisResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrometheisResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// A list of Prometheus names.
func (o GetPrometheisResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrometheisResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetPrometheisResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrometheisResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// A list of Prometheis. Each element contains the following attributes:
func (o GetPrometheisResultOutput) Prometheis() GetPrometheisPrometheiArrayOutput {
	return o.ApplyT(func(v GetPrometheisResult) []GetPrometheisPromethei { return v.Prometheis }).(GetPrometheisPrometheiArrayOutput)
}

// The ID of the resource group.
func (o GetPrometheisResultOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrometheisResult) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The tag of the Prometheus.
func (o GetPrometheisResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetPrometheisResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPrometheisResultOutput{})
}
