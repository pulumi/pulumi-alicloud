// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a ARMS Environment resource. The arms environment.
//
// For information about ARMS Environment and how to use it, see [What is Environment](https://www.alibabacloud.com/help/en/arms/developer-reference/api-arms-2019-08-08-createenvironment).
//
// > **NOTE:** Available since v1.212.0.
//
// ## Example Usage
//
// # Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/arms"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/ecs"
//	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// defaultInteger, err := random.NewInteger(ctx, "default", &random.IntegerArgs{
// Max: 99999,
// Min: 10000,
// })
// if err != nil {
// return err
// }
// cfg := config.New(ctx, "")
// name := "terraform-example";
// if param := cfg.Get("name"); param != ""{
// name = param
// }
// enhanced, err := vpc.GetEnhancedNatAvailableZones(ctx, &vpc.GetEnhancedNatAvailableZonesArgs{
// }, nil);
// if err != nil {
// return err
// }
// vpc, err := vpc.NewNetwork(ctx, "vpc", &vpc.NetworkArgs{
// Description: pulumi.String(name),
// CidrBlock: pulumi.String("192.168.0.0/16"),
// VpcName: pulumi.String(name),
// })
// if err != nil {
// return err
// }
// vswitch, err := vpc.NewSwitch(ctx, "vswitch", &vpc.SwitchArgs{
// Description: pulumi.String(name),
// VpcId: vpc.ID(),
// VswitchName: pulumi.String(name),
// ZoneId: pulumi.String(enhanced.Zones[0].ZoneId),
// CidrBlock: pulumi.String(vpc.CidrBlock.ApplyT(func(cidrBlock string) (std.CidrsubnetResult, error) {
// return std.CidrsubnetResult(interface{}(std.CidrsubnetOutput(ctx, std.CidrsubnetOutputArgs{
// Input: cidrBlock,
// Newbits: 8,
// Netnum: 8,
// }, nil))), nil
// }).(std.CidrsubnetResultOutput).ApplyT(func(invoke std.CidrsubnetResult) (*string, error) {
// return invoke.Result, nil
// }).(pulumi.StringPtrOutput)),
// })
// if err != nil {
// return err
// }
// _, err = ecs.NewSnapshotPolicy(ctx, "default", &ecs.SnapshotPolicyArgs{
// Name: pulumi.String(name),
// RepeatWeekdays: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("2"),
// pulumi.String("3"),
// },
// RetentionDays: pulumi.Int(-1),
// TimePoints: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("22"),
// pulumi.String("23"),
// },
// })
// if err != nil {
// return err
// }
// _default := vswitch.ZoneId.ApplyT(func(zoneId string) (ecs.GetInstanceTypesResult, error) {
// return ecs.GetInstanceTypesResult(interface{}(ecs.GetInstanceTypesOutput(ctx, ecs.GetInstanceTypesOutputArgs{
// AvailabilityZone: zoneId,
// CpuCoreCount: 2,
// MemorySize: 4,
// KubernetesNodeRole: "Worker",
// InstanceTypeFamily: "ecs.sn1ne",
// }, nil))), nil
// }).(ecs.GetInstanceTypesResultOutput)
// defaultManagedKubernetes, err := cs.NewManagedKubernetes(ctx, "default", &cs.ManagedKubernetesArgs{
// Name: pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
// ClusterSpec: pulumi.String("ack.pro.small"),
// Version: pulumi.String("1.24.6-aliyun.1"),
// NewNatGateway: pulumi.Bool(true),
// NodeCidrMask: pulumi.Int(26),
// ProxyMode: pulumi.String("ipvs"),
// ServiceCidr: pulumi.String("172.23.0.0/16"),
// PodCidr: pulumi.String("10.95.0.0/16"),
// WorkerVswitchIds: pulumi.StringArray{
// vswitch.ID(),
// },
// })
// if err != nil {
// return err
// }
// defaultKeyPair, err := ecs.NewKeyPair(ctx, "default", &ecs.KeyPairArgs{
// KeyPairName: pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
// })
// if err != nil {
// return err
// }
// defaultNodePool, err := cs.NewNodePool(ctx, "default", &cs.NodePoolArgs{
// NodePoolName: pulumi.String("desired_size"),
// ClusterId: defaultManagedKubernetes.ID(),
// VswitchIds: pulumi.StringArray{
// vswitch.ID(),
// },
// InstanceTypes: pulumi.StringArray{
// pulumi.String(_default.ApplyT(func(_default ecs.GetInstanceTypesResult) (*string, error) {
// return &default.InstanceTypes[0].Id, nil
// }).(pulumi.StringPtrOutput)),
// },
// SystemDiskCategory: pulumi.String("cloud_efficiency"),
// SystemDiskSize: pulumi.Int(40),
// KeyName: defaultKeyPair.KeyPairName,
// DesiredSize: pulumi.String("2"),
// })
// if err != nil {
// return err
// }
// _, err = arms.NewEnvironment(ctx, "default", &arms.EnvironmentArgs{
// BindResourceId: defaultNodePool.ClusterId,
// EnvironmentSubType: pulumi.String("ManagedKubernetes"),
// EnvironmentType: pulumi.String("CS"),
// EnvironmentName: pulumi.Sprintf("terraform-example-%v", defaultInteger.Result),
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// ARMS Environment can be imported using the id, e.g.
//
// ```sh
// $ pulumi import alicloud:arms/environment:Environment example <id>
// ```
type Environment struct {
	pulumi.CustomResourceState

	// The locale. The default is Chinese zh | en.
	AliyunLang pulumi.StringPtrOutput `pulumi:"aliyunLang"`
	// The id or vpcId of the bound container instance.
	BindResourceId pulumi.StringPtrOutput `pulumi:"bindResourceId"`
	// List of abandoned indicators.
	DropMetrics pulumi.StringPtrOutput `pulumi:"dropMetrics"`
	// The first ID of the resource.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// The name of the resource.
	EnvironmentName pulumi.StringPtrOutput `pulumi:"environmentName"`
	// Subtype of environment:
	// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
	// - Type of ECS: currently supports ECS.
	// - Type of Cloud: currently supports Cloud.
	EnvironmentSubType pulumi.StringOutput `pulumi:"environmentSubType"`
	// Type of environment.
	EnvironmentType pulumi.StringOutput `pulumi:"environmentType"`
	// Hosting type:
	// - none: unmanaged. The default value of the ACK cluster.
	// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
	// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
	ManagedType pulumi.StringOutput `pulumi:"managedType"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringOutput `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentSubType == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentSubType'")
	}
	if args.EnvironmentType == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("alicloud:arms/environment:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("alicloud:arms/environment:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	// The locale. The default is Chinese zh | en.
	AliyunLang *string `pulumi:"aliyunLang"`
	// The id or vpcId of the bound container instance.
	BindResourceId *string `pulumi:"bindResourceId"`
	// List of abandoned indicators.
	DropMetrics *string `pulumi:"dropMetrics"`
	// The first ID of the resource.
	EnvironmentId *string `pulumi:"environmentId"`
	// The name of the resource.
	EnvironmentName *string `pulumi:"environmentName"`
	// Subtype of environment:
	// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
	// - Type of ECS: currently supports ECS.
	// - Type of Cloud: currently supports Cloud.
	EnvironmentSubType *string `pulumi:"environmentSubType"`
	// Type of environment.
	EnvironmentType *string `pulumi:"environmentType"`
	// Hosting type:
	// - none: unmanaged. The default value of the ACK cluster.
	// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
	// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
	ManagedType *string `pulumi:"managedType"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

type EnvironmentState struct {
	// The locale. The default is Chinese zh | en.
	AliyunLang pulumi.StringPtrInput
	// The id or vpcId of the bound container instance.
	BindResourceId pulumi.StringPtrInput
	// List of abandoned indicators.
	DropMetrics pulumi.StringPtrInput
	// The first ID of the resource.
	EnvironmentId pulumi.StringPtrInput
	// The name of the resource.
	EnvironmentName pulumi.StringPtrInput
	// Subtype of environment:
	// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
	// - Type of ECS: currently supports ECS.
	// - Type of Cloud: currently supports Cloud.
	EnvironmentSubType pulumi.StringPtrInput
	// Type of environment.
	EnvironmentType pulumi.StringPtrInput
	// Hosting type:
	// - none: unmanaged. The default value of the ACK cluster.
	// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
	// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
	ManagedType pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// The locale. The default is Chinese zh | en.
	AliyunLang *string `pulumi:"aliyunLang"`
	// The id or vpcId of the bound container instance.
	BindResourceId *string `pulumi:"bindResourceId"`
	// List of abandoned indicators.
	DropMetrics *string `pulumi:"dropMetrics"`
	// The name of the resource.
	EnvironmentName *string `pulumi:"environmentName"`
	// Subtype of environment:
	// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
	// - Type of ECS: currently supports ECS.
	// - Type of Cloud: currently supports Cloud.
	EnvironmentSubType string `pulumi:"environmentSubType"`
	// Type of environment.
	EnvironmentType string `pulumi:"environmentType"`
	// Hosting type:
	// - none: unmanaged. The default value of the ACK cluster.
	// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
	// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
	ManagedType *string `pulumi:"managedType"`
	// The ID of the resource group.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The tag of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// The locale. The default is Chinese zh | en.
	AliyunLang pulumi.StringPtrInput
	// The id or vpcId of the bound container instance.
	BindResourceId pulumi.StringPtrInput
	// List of abandoned indicators.
	DropMetrics pulumi.StringPtrInput
	// The name of the resource.
	EnvironmentName pulumi.StringPtrInput
	// Subtype of environment:
	// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
	// - Type of ECS: currently supports ECS.
	// - Type of Cloud: currently supports Cloud.
	EnvironmentSubType pulumi.StringInput
	// Type of environment.
	EnvironmentType pulumi.StringInput
	// Hosting type:
	// - none: unmanaged. The default value of the ACK cluster.
	// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
	// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
	ManagedType pulumi.StringPtrInput
	// The ID of the resource group.
	ResourceGroupId pulumi.StringPtrInput
	// The tag of the resource.
	Tags pulumi.StringMapInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

// EnvironmentArrayInput is an input type that accepts EnvironmentArray and EnvironmentArrayOutput values.
// You can construct a concrete instance of `EnvironmentArrayInput` via:
//
//	EnvironmentArray{ EnvironmentArgs{...} }
type EnvironmentArrayInput interface {
	pulumi.Input

	ToEnvironmentArrayOutput() EnvironmentArrayOutput
	ToEnvironmentArrayOutputWithContext(context.Context) EnvironmentArrayOutput
}

type EnvironmentArray []EnvironmentInput

func (EnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (i EnvironmentArray) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return i.ToEnvironmentArrayOutputWithContext(context.Background())
}

func (i EnvironmentArray) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentArrayOutput)
}

// EnvironmentMapInput is an input type that accepts EnvironmentMap and EnvironmentMapOutput values.
// You can construct a concrete instance of `EnvironmentMapInput` via:
//
//	EnvironmentMap{ "key": EnvironmentArgs{...} }
type EnvironmentMapInput interface {
	pulumi.Input

	ToEnvironmentMapOutput() EnvironmentMapOutput
	ToEnvironmentMapOutputWithContext(context.Context) EnvironmentMapOutput
}

type EnvironmentMap map[string]EnvironmentInput

func (EnvironmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (i EnvironmentMap) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return i.ToEnvironmentMapOutputWithContext(context.Background())
}

func (i EnvironmentMap) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMapOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

// The locale. The default is Chinese zh | en.
func (o EnvironmentOutput) AliyunLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.AliyunLang }).(pulumi.StringPtrOutput)
}

// The id or vpcId of the bound container instance.
func (o EnvironmentOutput) BindResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.BindResourceId }).(pulumi.StringPtrOutput)
}

// List of abandoned indicators.
func (o EnvironmentOutput) DropMetrics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.DropMetrics }).(pulumi.StringPtrOutput)
}

// The first ID of the resource.
func (o EnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o EnvironmentOutput) EnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.EnvironmentName }).(pulumi.StringPtrOutput)
}

// Subtype of environment:
// - Type of CS: ACK is currently supported. ManagedKubernetes, Kubernetes, ExternalKubernetes, and One are also supported.
// - Type of ECS: currently supports ECS.
// - Type of Cloud: currently supports Cloud.
func (o EnvironmentOutput) EnvironmentSubType() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentSubType }).(pulumi.StringOutput)
}

// Type of environment.
func (o EnvironmentOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentType }).(pulumi.StringOutput)
}

// Hosting type:
// - none: unmanaged. The default value of the ACK cluster.
// - agent: Managed agent (including ksm). Default values of ASK, ACS, and Acone clusters.
// - agent-exproter: Managed agent and exporter. The default value of the cloud service type.
func (o EnvironmentOutput) ManagedType() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ManagedType }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o EnvironmentOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o EnvironmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type EnvironmentArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) Index(i pulumi.IntInput) EnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].([]*Environment)[vs[1].(int)]
	}).(EnvironmentOutput)
}

type EnvironmentMapOutput struct{ *pulumi.OutputState }

func (EnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) MapIndex(k pulumi.StringInput) EnvironmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].(map[string]*Environment)[vs[1].(string)]
	}).(EnvironmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentArrayInput)(nil)).Elem(), EnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMapInput)(nil)).Elem(), EnvironmentMap{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMapOutput{})
}
