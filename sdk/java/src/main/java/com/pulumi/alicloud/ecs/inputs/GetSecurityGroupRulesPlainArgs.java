// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGroupRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGroupRulesPlainArgs Empty = new GetSecurityGroupRulesPlainArgs();

    /**
     * Authorization direction. Valid values are: `ingress` or `egress`.
     * 
     */
    @Import(name="direction")
    private @Nullable String direction;

    /**
     * @return Authorization direction. Valid values are: `ingress` or `egress`.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * The ID of the security group that owns the rules.
     * 
     */
    @Import(name="groupId", required=true)
    private String groupId;

    /**
     * @return The ID of the security group that owns the rules.
     * 
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
     * 
     */
    @Import(name="ipProtocol")
    private @Nullable String ipProtocol;

    /**
     * @return The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
     * 
     */
    public Optional<String> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }

    /**
     * Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
     * 
     */
    @Import(name="nicType")
    private @Nullable String nicType;

    /**
     * @return Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
     * 
     */
    public Optional<String> nicType() {
        return Optional.ofNullable(this.nicType);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
     * 
     */
    @Import(name="policy")
    private @Nullable String policy;

    /**
     * @return Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }

    private GetSecurityGroupRulesPlainArgs() {}

    private GetSecurityGroupRulesPlainArgs(GetSecurityGroupRulesPlainArgs $) {
        this.direction = $.direction;
        this.groupId = $.groupId;
        this.ipProtocol = $.ipProtocol;
        this.nicType = $.nicType;
        this.outputFile = $.outputFile;
        this.policy = $.policy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGroupRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGroupRulesPlainArgs $;

        public Builder() {
            $ = new GetSecurityGroupRulesPlainArgs();
        }

        public Builder(GetSecurityGroupRulesPlainArgs defaults) {
            $ = new GetSecurityGroupRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction Authorization direction. Valid values are: `ingress` or `egress`.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param groupId The ID of the security group that owns the rules.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param ipProtocol The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(@Nullable String ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param nicType Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
         * 
         * @return builder
         * 
         */
        public Builder nicType(@Nullable String nicType) {
            $.nicType = nicType;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param policy Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable String policy) {
            $.policy = policy;
            return this;
        }

        public GetSecurityGroupRulesPlainArgs build() {
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetSecurityGroupRulesPlainArgs", "groupId");
            }
            return $;
        }
    }

}
