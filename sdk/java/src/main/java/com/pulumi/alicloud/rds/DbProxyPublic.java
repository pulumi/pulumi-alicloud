// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rds.DbProxyPublicArgs;
import com.pulumi.alicloud.rds.inputs.DbProxyPublicState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a RDS database proxy public network address resource.
 * 
 * For information about Resource AlicloudRdsDBProxyPublic and how to use it, see [What is proxy](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-createdbproxyendpointaddress).
 * 
 * &gt; **NOTE:** Available since v1.250.0.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.rds.RdsFunctions;
 * import com.pulumi.alicloud.rds.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.rds.Instance;
 * import com.pulumi.alicloud.rds.InstanceArgs;
 * import com.pulumi.alicloud.rds.ReadOnlyInstance;
 * import com.pulumi.alicloud.rds.ReadOnlyInstanceArgs;
 * import com.pulumi.alicloud.rds.RdsDbProxy;
 * import com.pulumi.alicloud.rds.RdsDbProxyArgs;
 * import com.pulumi.alicloud.rds.inputs.RdsDbProxyReadOnlyInstanceWeightArgs;
 * import com.pulumi.alicloud.rds.DbProxyPublic;
 * import com.pulumi.alicloud.rds.DbProxyPublicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = RdsFunctions.getZones(GetZonesArgs.builder()
 *             .engine("MySQL")
 *             .engineVersion("5.6")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.16.0.0/16")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock("172.16.0.0/24")
 *             .zoneId(default_.zones()[0].id())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .name(name)
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
 *             .engine("MySQL")
 *             .engineVersion("5.7")
 *             .instanceType("rds.mysql.c1.large")
 *             .instanceStorage(20)
 *             .instanceChargeType("Postpaid")
 *             .instanceName(name)
 *             .vswitchId(defaultSwitch.id())
 *             .dbInstanceStorageType("local_ssd")
 *             .build());
 * 
 *         var defaultReadOnlyInstance = new ReadOnlyInstance("defaultReadOnlyInstance", ReadOnlyInstanceArgs.builder()
 *             .zoneId(defaultInstance.zoneId())
 *             .masterDbInstanceId(defaultInstance.id())
 *             .engineVersion(defaultInstance.engineVersion())
 *             .instanceStorage(defaultInstance.instanceStorage())
 *             .instanceType(defaultInstance.instanceType())
 *             .instanceName(String.format("%sreadonly", name))
 *             .vswitchId(defaultSwitch.id())
 *             .build());
 * 
 *         var defaultRdsDbProxy = new RdsDbProxy("defaultRdsDbProxy", RdsDbProxyArgs.builder()
 *             .instanceId(defaultInstance.id())
 *             .instanceNetworkType("VPC")
 *             .vpcId(defaultInstance.vpcId())
 *             .vswitchId(defaultInstance.vswitchId())
 *             .dbProxyInstanceNum(2)
 *             .dbProxyConnectionPrefix("example")
 *             .dbProxyConnectStringPort(3306)
 *             .dbProxyEndpointReadWriteMode("ReadWrite")
 *             .readOnlyInstanceMaxDelayTime(90)
 *             .dbProxyFeatures("TransactionReadSqlRouteOptimizeStatus:1;ConnectionPersist:1;ReadWriteSpliting:1")
 *             .readOnlyInstanceDistributionType("Custom")
 *             .readOnlyInstanceWeights(            
 *                 RdsDbProxyReadOnlyInstanceWeightArgs.builder()
 *                     .instanceId(defaultInstance.id())
 *                     .weight("100")
 *                     .build(),
 *                 RdsDbProxyReadOnlyInstanceWeightArgs.builder()
 *                     .instanceId(defaultReadOnlyInstance.id())
 *                     .weight("500")
 *                     .build())
 *             .build());
 * 
 *         var defaultDbProxyPublic = new DbProxyPublic("defaultDbProxyPublic", DbProxyPublicArgs.builder()
 *             .dbInstanceId(defaultInstance.id())
 *             .dbProxyEndpointId(defaultRdsDbProxy.dbProxyEndpointId())
 *             .connectionStringPrefix("exampleabc")
 *             .dbProxyConnectionStringNetType("Public")
 *             .dbProxyNewConnectStringPort("3306")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &gt; **NOTE:** Resource `alicloud.rds.DbProxyPublic` should be created after `alicloud.rds.RdsDbProxy`, so the `depends_on` statement is necessary.
 * 
 * ## Import
 * 
 * RDS Database Proxy Public Network Address can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:rds/dbProxyPublic:DbProxyPublic example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:rds/dbProxyPublic:DbProxyPublic")
public class DbProxyPublic extends com.pulumi.resources.CustomResource {
    /**
     * The prefix for the new database proxy connection address can be customized.
     * 
     */
    @Export(name="connectionStringPrefix", refs={String.class}, tree="[0]")
    private Output<String> connectionStringPrefix;

    /**
     * @return The prefix for the new database proxy connection address can be customized.
     * 
     */
    public Output<String> connectionStringPrefix() {
        return this.connectionStringPrefix;
    }
    /**
     * Instance ID.
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return Instance ID.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * The network type of the new database proxy connection address,This resource defaults to Public.
     * 
     */
    @Export(name="dbProxyConnectionStringNetType", refs={String.class}, tree="[0]")
    private Output<String> dbProxyConnectionStringNetType;

    /**
     * @return The network type of the new database proxy connection address,This resource defaults to Public.
     * 
     */
    public Output<String> dbProxyConnectionStringNetType() {
        return this.dbProxyConnectionStringNetType;
    }
    /**
     * Database proxy connection address ID.
     * 
     */
    @Export(name="dbProxyEndpointId", refs={String.class}, tree="[0]")
    private Output<String> dbProxyEndpointId;

    /**
     * @return Database proxy connection address ID.
     * 
     */
    public Output<String> dbProxyEndpointId() {
        return this.dbProxyEndpointId;
    }
    /**
     * The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
     * 
     */
    @Export(name="dbProxyNewConnectStringPort", refs={String.class}, tree="[0]")
    private Output<String> dbProxyNewConnectStringPort;

    /**
     * @return The port for the new database proxy connection address is 3306 by default for MySQL and 5432 by default for PostgreSQL, which can be customized.
     * 
     */
    public Output<String> dbProxyNewConnectStringPort() {
        return this.dbProxyNewConnectStringPort;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DbProxyPublic(java.lang.String name) {
        this(name, DbProxyPublicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DbProxyPublic(java.lang.String name, DbProxyPublicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DbProxyPublic(java.lang.String name, DbProxyPublicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/dbProxyPublic:DbProxyPublic", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DbProxyPublic(java.lang.String name, Output<java.lang.String> id, @Nullable DbProxyPublicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/dbProxyPublic:DbProxyPublic", name, state, makeResourceOptions(options, id), false);
    }

    private static DbProxyPublicArgs makeArgs(DbProxyPublicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DbProxyPublicArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DbProxyPublic get(java.lang.String name, Output<java.lang.String> id, @Nullable DbProxyPublicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DbProxyPublic(name, id, state, options);
    }
}
