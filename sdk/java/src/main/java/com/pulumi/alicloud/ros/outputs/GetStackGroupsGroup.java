// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.outputs;

import com.pulumi.alicloud.ros.outputs.GetStackGroupsGroupParameter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStackGroupsGroup {
    /**
     * @return The name of the RAM administrator role assumed by ROS.
     * 
     */
    private String administrationRoleName;
    /**
     * @return The description of the stack group.
     * 
     */
    private String description;
    /**
     * @return The name of the RAM execution role assumed by the administrator role.
     * 
     */
    private String executionRoleName;
    /**
     * @return The ID of the Stack Group.
     * 
     */
    private String id;
    /**
     * @return The parameters.
     * 
     */
    private List<GetStackGroupsGroupParameter> parameters;
    /**
     * @return The id of Stack Group.
     * 
     */
    private String stackGroupId;
    /**
     * @return The name of the stack group..
     * 
     */
    private String stackGroupName;
    /**
     * @return The status of Stack Group.
     * 
     */
    private String status;
    /**
     * @return The structure that contains the template body.
     * 
     */
    private String templateBody;

    private GetStackGroupsGroup() {}
    /**
     * @return The name of the RAM administrator role assumed by ROS.
     * 
     */
    public String administrationRoleName() {
        return this.administrationRoleName;
    }
    /**
     * @return The description of the stack group.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The name of the RAM execution role assumed by the administrator role.
     * 
     */
    public String executionRoleName() {
        return this.executionRoleName;
    }
    /**
     * @return The ID of the Stack Group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The parameters.
     * 
     */
    public List<GetStackGroupsGroupParameter> parameters() {
        return this.parameters;
    }
    /**
     * @return The id of Stack Group.
     * 
     */
    public String stackGroupId() {
        return this.stackGroupId;
    }
    /**
     * @return The name of the stack group..
     * 
     */
    public String stackGroupName() {
        return this.stackGroupName;
    }
    /**
     * @return The status of Stack Group.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The structure that contains the template body.
     * 
     */
    public String templateBody() {
        return this.templateBody;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStackGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String administrationRoleName;
        private String description;
        private String executionRoleName;
        private String id;
        private List<GetStackGroupsGroupParameter> parameters;
        private String stackGroupId;
        private String stackGroupName;
        private String status;
        private String templateBody;
        public Builder() {}
        public Builder(GetStackGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administrationRoleName = defaults.administrationRoleName;
    	      this.description = defaults.description;
    	      this.executionRoleName = defaults.executionRoleName;
    	      this.id = defaults.id;
    	      this.parameters = defaults.parameters;
    	      this.stackGroupId = defaults.stackGroupId;
    	      this.stackGroupName = defaults.stackGroupName;
    	      this.status = defaults.status;
    	      this.templateBody = defaults.templateBody;
        }

        @CustomType.Setter
        public Builder administrationRoleName(String administrationRoleName) {
            if (administrationRoleName == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "administrationRoleName");
            }
            this.administrationRoleName = administrationRoleName;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder executionRoleName(String executionRoleName) {
            if (executionRoleName == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "executionRoleName");
            }
            this.executionRoleName = executionRoleName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(List<GetStackGroupsGroupParameter> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(GetStackGroupsGroupParameter... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder stackGroupId(String stackGroupId) {
            if (stackGroupId == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "stackGroupId");
            }
            this.stackGroupId = stackGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder stackGroupName(String stackGroupName) {
            if (stackGroupName == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "stackGroupName");
            }
            this.stackGroupName = stackGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder templateBody(String templateBody) {
            if (templateBody == null) {
              throw new MissingRequiredPropertyException("GetStackGroupsGroup", "templateBody");
            }
            this.templateBody = templateBody;
            return this;
        }
        public GetStackGroupsGroup build() {
            final var _resultValue = new GetStackGroupsGroup();
            _resultValue.administrationRoleName = administrationRoleName;
            _resultValue.description = description;
            _resultValue.executionRoleName = executionRoleName;
            _resultValue.id = id;
            _resultValue.parameters = parameters;
            _resultValue.stackGroupId = stackGroupId;
            _resultValue.stackGroupName = stackGroupName;
            _resultValue.status = status;
            _resultValue.templateBody = templateBody;
            return _resultValue;
        }
    }
}
