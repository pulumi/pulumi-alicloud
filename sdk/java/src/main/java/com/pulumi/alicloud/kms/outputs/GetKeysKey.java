// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKeysKey {
    /**
     * @return The Alibaba Cloud Resource Name (ARN) of the key.
     * 
     */
    private String arn;
    private String automaticRotation;
    /**
     * @return Creation date of key.
     * 
     */
    private String creationDate;
    /**
     * @return The owner of the key.
     * * `automatic_rotation` -(Available in 1.123.1+) Specifies whether to enable automatic key rotation.
     * * `key_id` -(Available in 1.123.1+)  ID of the key.
     * * `key_spec` -(Available in 1.123.1+)  The type of the CMK.
     * * `key_usage` -(Available in 1.123.1+)  The usage of CMK.
     * * `last_rotation_date` -(Available in 1.123.1+)  The date and time the last rotation was performed.
     * * `material_expire_time` -(Available in 1.123.1+)  The time and date the key material for the CMK expires.
     * * `next_rotation_date` -(Available in 1.123.1+)  The time the next rotation is scheduled for execution.
     * * `origin` -(Available in 1.123.1+)  The source of the key material for the CMK.
     * * `protection_level` -(Available in 1.123.1+)  The protection level of the CMK.
     * * `rotation_interval` -(Available in 1.123.1+)  The period of automatic key rotation.
     * * `primary_key_version` -(Available in 1.123.1+)  The ID of the current primary key version of the symmetric CMK.
     * 
     */
    private String creator;
    /**
     * @return Deletion date of key.
     * 
     */
    private String deleteDate;
    /**
     * @return Description of the key.
     * 
     */
    private String description;
    /**
     * @return ID of the key.
     * 
     */
    private String id;
    private String keyId;
    private String keySpec;
    private String keyUsage;
    private String lastRotationDate;
    private String materialExpireTime;
    private String nextRotationDate;
    private String origin;
    private String primaryKeyVersion;
    private String protectionLevel;
    private String rotationInterval;
    /**
     * @return Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
     * 
     */
    private String status;

    private GetKeysKey() {}
    /**
     * @return The Alibaba Cloud Resource Name (ARN) of the key.
     * 
     */
    public String arn() {
        return this.arn;
    }
    public String automaticRotation() {
        return this.automaticRotation;
    }
    /**
     * @return Creation date of key.
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return The owner of the key.
     * * `automatic_rotation` -(Available in 1.123.1+) Specifies whether to enable automatic key rotation.
     * * `key_id` -(Available in 1.123.1+)  ID of the key.
     * * `key_spec` -(Available in 1.123.1+)  The type of the CMK.
     * * `key_usage` -(Available in 1.123.1+)  The usage of CMK.
     * * `last_rotation_date` -(Available in 1.123.1+)  The date and time the last rotation was performed.
     * * `material_expire_time` -(Available in 1.123.1+)  The time and date the key material for the CMK expires.
     * * `next_rotation_date` -(Available in 1.123.1+)  The time the next rotation is scheduled for execution.
     * * `origin` -(Available in 1.123.1+)  The source of the key material for the CMK.
     * * `protection_level` -(Available in 1.123.1+)  The protection level of the CMK.
     * * `rotation_interval` -(Available in 1.123.1+)  The period of automatic key rotation.
     * * `primary_key_version` -(Available in 1.123.1+)  The ID of the current primary key version of the symmetric CMK.
     * 
     */
    public String creator() {
        return this.creator;
    }
    /**
     * @return Deletion date of key.
     * 
     */
    public String deleteDate() {
        return this.deleteDate;
    }
    /**
     * @return Description of the key.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of the key.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyId() {
        return this.keyId;
    }
    public String keySpec() {
        return this.keySpec;
    }
    public String keyUsage() {
        return this.keyUsage;
    }
    public String lastRotationDate() {
        return this.lastRotationDate;
    }
    public String materialExpireTime() {
        return this.materialExpireTime;
    }
    public String nextRotationDate() {
        return this.nextRotationDate;
    }
    public String origin() {
        return this.origin;
    }
    public String primaryKeyVersion() {
        return this.primaryKeyVersion;
    }
    public String protectionLevel() {
        return this.protectionLevel;
    }
    public String rotationInterval() {
        return this.rotationInterval;
    }
    /**
     * @return Filter the results by status of the KMS keys. Valid values: `Enabled`, `Disabled`, `PendingDeletion`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeysKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String automaticRotation;
        private String creationDate;
        private String creator;
        private String deleteDate;
        private String description;
        private String id;
        private String keyId;
        private String keySpec;
        private String keyUsage;
        private String lastRotationDate;
        private String materialExpireTime;
        private String nextRotationDate;
        private String origin;
        private String primaryKeyVersion;
        private String protectionLevel;
        private String rotationInterval;
        private String status;
        public Builder() {}
        public Builder(GetKeysKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.automaticRotation = defaults.automaticRotation;
    	      this.creationDate = defaults.creationDate;
    	      this.creator = defaults.creator;
    	      this.deleteDate = defaults.deleteDate;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.keySpec = defaults.keySpec;
    	      this.keyUsage = defaults.keyUsage;
    	      this.lastRotationDate = defaults.lastRotationDate;
    	      this.materialExpireTime = defaults.materialExpireTime;
    	      this.nextRotationDate = defaults.nextRotationDate;
    	      this.origin = defaults.origin;
    	      this.primaryKeyVersion = defaults.primaryKeyVersion;
    	      this.protectionLevel = defaults.protectionLevel;
    	      this.rotationInterval = defaults.rotationInterval;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder automaticRotation(String automaticRotation) {
            this.automaticRotation = Objects.requireNonNull(automaticRotation);
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder creator(String creator) {
            this.creator = Objects.requireNonNull(creator);
            return this;
        }
        @CustomType.Setter
        public Builder deleteDate(String deleteDate) {
            this.deleteDate = Objects.requireNonNull(deleteDate);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        @CustomType.Setter
        public Builder keySpec(String keySpec) {
            this.keySpec = Objects.requireNonNull(keySpec);
            return this;
        }
        @CustomType.Setter
        public Builder keyUsage(String keyUsage) {
            this.keyUsage = Objects.requireNonNull(keyUsage);
            return this;
        }
        @CustomType.Setter
        public Builder lastRotationDate(String lastRotationDate) {
            this.lastRotationDate = Objects.requireNonNull(lastRotationDate);
            return this;
        }
        @CustomType.Setter
        public Builder materialExpireTime(String materialExpireTime) {
            this.materialExpireTime = Objects.requireNonNull(materialExpireTime);
            return this;
        }
        @CustomType.Setter
        public Builder nextRotationDate(String nextRotationDate) {
            this.nextRotationDate = Objects.requireNonNull(nextRotationDate);
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }
        @CustomType.Setter
        public Builder primaryKeyVersion(String primaryKeyVersion) {
            this.primaryKeyVersion = Objects.requireNonNull(primaryKeyVersion);
            return this;
        }
        @CustomType.Setter
        public Builder protectionLevel(String protectionLevel) {
            this.protectionLevel = Objects.requireNonNull(protectionLevel);
            return this;
        }
        @CustomType.Setter
        public Builder rotationInterval(String rotationInterval) {
            this.rotationInterval = Objects.requireNonNull(rotationInterval);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetKeysKey build() {
            final var o = new GetKeysKey();
            o.arn = arn;
            o.automaticRotation = automaticRotation;
            o.creationDate = creationDate;
            o.creator = creator;
            o.deleteDate = deleteDate;
            o.description = description;
            o.id = id;
            o.keyId = keyId;
            o.keySpec = keySpec;
            o.keyUsage = keyUsage;
            o.lastRotationDate = lastRotationDate;
            o.materialExpireTime = materialExpireTime;
            o.nextRotationDate = nextRotationDate;
            o.origin = origin;
            o.primaryKeyVersion = primaryKeyVersion;
            o.protectionLevel = protectionLevel;
            o.rotationInterval = rotationInterval;
            o.status = status;
            return o;
        }
    }
}
