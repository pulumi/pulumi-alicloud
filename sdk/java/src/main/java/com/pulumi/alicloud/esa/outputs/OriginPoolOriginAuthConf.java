// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OriginPoolOriginAuthConf {
    /**
     * @return The AccessKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    private @Nullable String accessKey;
    /**
     * @return Authentication type.
     * 
     */
    private @Nullable String authType;
    /**
     * @return The Region of the source station to be transmitted when the source station is AWS S3.
     * 
     */
    private @Nullable String region;
    /**
     * @return The SecretKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    private @Nullable String secretKey;
    /**
     * @return The signature version to be transmitted when the source station is AWS S3.
     * 
     */
    private @Nullable String version;

    private OriginPoolOriginAuthConf() {}
    /**
     * @return The AccessKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    /**
     * @return Authentication type.
     * 
     */
    public Optional<String> authType() {
        return Optional.ofNullable(this.authType);
    }
    /**
     * @return The Region of the source station to be transmitted when the source station is AWS S3.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The SecretKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    /**
     * @return The signature version to be transmitted when the source station is AWS S3.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OriginPoolOriginAuthConf defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKey;
        private @Nullable String authType;
        private @Nullable String region;
        private @Nullable String secretKey;
        private @Nullable String version;
        public Builder() {}
        public Builder(OriginPoolOriginAuthConf defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.authType = defaults.authType;
    	      this.region = defaults.region;
    	      this.secretKey = defaults.secretKey;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {

            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder authType(@Nullable String authType) {

            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {

            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public OriginPoolOriginAuthConf build() {
            final var _resultValue = new OriginPoolOriginAuthConf();
            _resultValue.accessKey = accessKey;
            _resultValue.authType = authType;
            _resultValue.region = region;
            _resultValue.secretKey = secretKey;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
