// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControlPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControlPolicyArgs Empty = new ControlPolicyArgs();

    /**
     * The new name of the access control policy.
     * The name must be 1 to 128 characters in length. The name can contain letters, digits, and hyphens (-) and must start with a letter.
     * 
     */
    @Import(name="controlPolicyName", required=true)
    private Output<String> controlPolicyName;

    /**
     * @return The new name of the access control policy.
     * The name must be 1 to 128 characters in length. The name can contain letters, digits, and hyphens (-) and must start with a letter.
     * 
     */
    public Output<String> controlPolicyName() {
        return this.controlPolicyName;
    }

    /**
     * The new description of the access control policy.
     * The description must be 1 to 1,024 characters in length. The description can contain letters, digits, underscores (\_), and hyphens (-) and must start with a letter.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The new description of the access control policy.
     * The description must be 1 to 1,024 characters in length. The description can contain letters, digits, underscores (\_), and hyphens (-) and must start with a letter.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The effective scope of the access control policy. Valid values:
     * 
     * - All: The access control policy is in effect for Alibaba Cloud accounts, RAM users, and RAM roles.
     * - RAM: The access control policy is in effect only for RAM users and RAM roles.
     * 
     */
    @Import(name="effectScope", required=true)
    private Output<String> effectScope;

    /**
     * @return The effective scope of the access control policy. Valid values:
     * 
     * - All: The access control policy is in effect for Alibaba Cloud accounts, RAM users, and RAM roles.
     * - RAM: The access control policy is in effect only for RAM users and RAM roles.
     * 
     */
    public Output<String> effectScope() {
        return this.effectScope;
    }

    /**
     * The new document of the access control policy.
     * The document can be a maximum of 4,096 characters in length.
     * For more information about the languages of access control policies, see [Languages of access control policies](https://www.alibabacloud.com/help/en/doc-detail/179096.html).
     * For more information about the examples of access control policies, see [Examples of custom access control policies](https://www.alibabacloud.com/help/en/doc-detail/181474.html).
     * 
     */
    @Import(name="policyDocument", required=true)
    private Output<String> policyDocument;

    /**
     * @return The new document of the access control policy.
     * The document can be a maximum of 4,096 characters in length.
     * For more information about the languages of access control policies, see [Languages of access control policies](https://www.alibabacloud.com/help/en/doc-detail/179096.html).
     * For more information about the examples of access control policies, see [Examples of custom access control policies](https://www.alibabacloud.com/help/en/doc-detail/181474.html).
     * 
     */
    public Output<String> policyDocument() {
        return this.policyDocument;
    }

    /**
     * The tags.
     * You can specify a maximum of 20 tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags.
     * You can specify a maximum of 20 tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ControlPolicyArgs() {}

    private ControlPolicyArgs(ControlPolicyArgs $) {
        this.controlPolicyName = $.controlPolicyName;
        this.description = $.description;
        this.effectScope = $.effectScope;
        this.policyDocument = $.policyDocument;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControlPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControlPolicyArgs $;

        public Builder() {
            $ = new ControlPolicyArgs();
        }

        public Builder(ControlPolicyArgs defaults) {
            $ = new ControlPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controlPolicyName The new name of the access control policy.
         * The name must be 1 to 128 characters in length. The name can contain letters, digits, and hyphens (-) and must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder controlPolicyName(Output<String> controlPolicyName) {
            $.controlPolicyName = controlPolicyName;
            return this;
        }

        /**
         * @param controlPolicyName The new name of the access control policy.
         * The name must be 1 to 128 characters in length. The name can contain letters, digits, and hyphens (-) and must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder controlPolicyName(String controlPolicyName) {
            return controlPolicyName(Output.of(controlPolicyName));
        }

        /**
         * @param description The new description of the access control policy.
         * The description must be 1 to 1,024 characters in length. The description can contain letters, digits, underscores (\_), and hyphens (-) and must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The new description of the access control policy.
         * The description must be 1 to 1,024 characters in length. The description can contain letters, digits, underscores (\_), and hyphens (-) and must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectScope The effective scope of the access control policy. Valid values:
         * 
         * - All: The access control policy is in effect for Alibaba Cloud accounts, RAM users, and RAM roles.
         * - RAM: The access control policy is in effect only for RAM users and RAM roles.
         * 
         * @return builder
         * 
         */
        public Builder effectScope(Output<String> effectScope) {
            $.effectScope = effectScope;
            return this;
        }

        /**
         * @param effectScope The effective scope of the access control policy. Valid values:
         * 
         * - All: The access control policy is in effect for Alibaba Cloud accounts, RAM users, and RAM roles.
         * - RAM: The access control policy is in effect only for RAM users and RAM roles.
         * 
         * @return builder
         * 
         */
        public Builder effectScope(String effectScope) {
            return effectScope(Output.of(effectScope));
        }

        /**
         * @param policyDocument The new document of the access control policy.
         * The document can be a maximum of 4,096 characters in length.
         * For more information about the languages of access control policies, see [Languages of access control policies](https://www.alibabacloud.com/help/en/doc-detail/179096.html).
         * For more information about the examples of access control policies, see [Examples of custom access control policies](https://www.alibabacloud.com/help/en/doc-detail/181474.html).
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        /**
         * @param policyDocument The new document of the access control policy.
         * The document can be a maximum of 4,096 characters in length.
         * For more information about the languages of access control policies, see [Languages of access control policies](https://www.alibabacloud.com/help/en/doc-detail/179096.html).
         * For more information about the examples of access control policies, see [Examples of custom access control policies](https://www.alibabacloud.com/help/en/doc-detail/181474.html).
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        /**
         * @param tags The tags.
         * You can specify a maximum of 20 tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags.
         * You can specify a maximum of 20 tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ControlPolicyArgs build() {
            if ($.controlPolicyName == null) {
                throw new MissingRequiredPropertyException("ControlPolicyArgs", "controlPolicyName");
            }
            if ($.effectScope == null) {
                throw new MissingRequiredPropertyException("ControlPolicyArgs", "effectScope");
            }
            if ($.policyDocument == null) {
                throw new MissingRequiredPropertyException("ControlPolicyArgs", "policyDocument");
            }
            return $;
        }
    }

}
