// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HaVipv2Args extends com.pulumi.resources.ResourceArgs {

    public static final HaVipv2Args Empty = new HaVipv2Args();

    /**
     * The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="haVipName")
    private @Nullable Output<String> haVipName;

    /**
     * @return The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> haVipName() {
        return Optional.ofNullable(this.haVipName);
    }

    /**
     * . Field &#39;havip_name&#39; has been deprecated from provider version 1.259.0. New field &#39;ha_vip_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;havip_name&#39; has been deprecated from provider version 1.205.0. New field &#39;ha_vip_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead. */
    @Import(name="havipName")
    private @Nullable Output<String> havipName;

    /**
     * @return . Field &#39;havip_name&#39; has been deprecated from provider version 1.259.0. New field &#39;ha_vip_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;havip_name&#39; has been deprecated from provider version 1.205.0. New field &#39;ha_vip_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead. */
    public Optional<Output<String>> havipName() {
        return Optional.ofNullable(this.havipName);
    }

    /**
     * The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The ID of the resource group to which the HAVIP belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which the HAVIP belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The tags of HaVip.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags of HaVip.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The switch ID to which the HaVip instance belongs
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The switch ID to which the HaVip instance belongs
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private HaVipv2Args() {}

    private HaVipv2Args(HaVipv2Args $) {
        this.description = $.description;
        this.haVipName = $.haVipName;
        this.havipName = $.havipName;
        this.ipAddress = $.ipAddress;
        this.resourceGroupId = $.resourceGroupId;
        this.tags = $.tags;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HaVipv2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HaVipv2Args $;

        public Builder() {
            $ = new HaVipv2Args();
        }

        public Builder(HaVipv2Args defaults) {
            $ = new HaVipv2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the HAVIP. The description must be 1 to 255 characters in length and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param haVipName The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder haVipName(@Nullable Output<String> haVipName) {
            $.haVipName = haVipName;
            return this;
        }

        /**
         * @param haVipName The name of the HAVIP. The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder haVipName(String haVipName) {
            return haVipName(Output.of(haVipName));
        }

        /**
         * @param havipName . Field &#39;havip_name&#39; has been deprecated from provider version 1.259.0. New field &#39;ha_vip_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;havip_name&#39; has been deprecated from provider version 1.205.0. New field &#39;ha_vip_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead. */
        public Builder havipName(@Nullable Output<String> havipName) {
            $.havipName = havipName;
            return this;
        }

        /**
         * @param havipName . Field &#39;havip_name&#39; has been deprecated from provider version 1.259.0. New field &#39;ha_vip_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;havip_name&#39; has been deprecated from provider version 1.205.0. New field &#39;ha_vip_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'havip_name' has been deprecated from provider version 1.205.0. New field 'ha_vip_name' instead. */
        public Builder havipName(String havipName) {
            return havipName(Output.of(havipName));
        }

        /**
         * @param ipAddress The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The IP address of the HAVIP. The specified IP address must be an idle IP address that falls within the CIDR block of the vSwitch. If this parameter is not set, an idle IP address from the CIDR block of the vSwitch is randomly assigned to the HAVIP.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the HAVIP belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the HAVIP belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param tags The tags of HaVip.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of HaVip.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vswitchId The switch ID to which the HaVip instance belongs
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The switch ID to which the HaVip instance belongs
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public HaVipv2Args build() {
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("HaVipv2Args", "vswitchId");
            }
            return $;
        }
    }

}
