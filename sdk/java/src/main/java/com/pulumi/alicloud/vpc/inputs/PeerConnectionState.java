// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PeerConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final PeerConnectionState Empty = new PeerConnectionState();

    /**
     * The ID of the Alibaba Cloud account to which the accepter VPC belongs.
     * 
     * *   To create a VPC peering connection within your Alibaba Cloud account, enter the ID of your Alibaba Cloud account.
     * *   To create a VPC peering connection between your Alibaba Cloud account and another Alibaba Cloud account, enter the ID of the peer Alibaba Cloud account.
     * 
     * &gt; **NOTE:**   If the accepter is a RAM user, set `AcceptingAliUid` to the ID of the Alibaba Cloud account that created the RAM user.
     * 
     */
    @Import(name="acceptingAliUid")
    private @Nullable Output<Integer> acceptingAliUid;

    /**
     * @return The ID of the Alibaba Cloud account to which the accepter VPC belongs.
     * 
     * *   To create a VPC peering connection within your Alibaba Cloud account, enter the ID of your Alibaba Cloud account.
     * *   To create a VPC peering connection between your Alibaba Cloud account and another Alibaba Cloud account, enter the ID of the peer Alibaba Cloud account.
     * 
     * &gt; **NOTE:**   If the accepter is a RAM user, set `AcceptingAliUid` to the ID of the Alibaba Cloud account that created the RAM user.
     * 
     */
    public Optional<Output<Integer>> acceptingAliUid() {
        return Optional.ofNullable(this.acceptingAliUid);
    }

    /**
     * The region ID of the accepter VPC of the VPC peering connection that you want to create.
     * 
     * - To create an intra-region VPC peering connection, enter a region ID that is the same as that of the requester VPC.
     * - To create an inter-region VPC peering connection, enter a region ID that is different from that of the requester VPC.
     * 
     */
    @Import(name="acceptingRegionId")
    private @Nullable Output<String> acceptingRegionId;

    /**
     * @return The region ID of the accepter VPC of the VPC peering connection that you want to create.
     * 
     * - To create an intra-region VPC peering connection, enter a region ID that is the same as that of the requester VPC.
     * - To create an inter-region VPC peering connection, enter a region ID that is different from that of the requester VPC.
     * 
     */
    public Optional<Output<String>> acceptingRegionId() {
        return Optional.ofNullable(this.acceptingRegionId);
    }

    /**
     * The ID of the accepter VPC.
     * 
     */
    @Import(name="acceptingVpcId")
    private @Nullable Output<String> acceptingVpcId;

    /**
     * @return The ID of the accepter VPC.
     * 
     */
    public Optional<Output<String>> acceptingVpcId() {
        return Optional.ofNullable(this.acceptingVpcId);
    }

    /**
     * The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The description of the VPC peering connection.
     * The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the VPC peering connection.
     * The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    /**
     * @return Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    /**
     * The link type of the VPC peering connection that you want to create. Valid values:
     * - Platinum.
     * - Gold: default value.
     * 
     * &gt; **NOTE:**
     * 
     * &gt; **NOTE:**  - If you need to specify this parameter, ensure that the VPC peering connection is an inter-region connection.
     * 
     */
    @Import(name="linkType")
    private @Nullable Output<String> linkType;

    /**
     * @return The link type of the VPC peering connection that you want to create. Valid values:
     * - Platinum.
     * - Gold: default value.
     * 
     * &gt; **NOTE:**
     * 
     * &gt; **NOTE:**  - If you need to specify this parameter, ensure that the VPC peering connection is an inter-region connection.
     * 
     */
    public Optional<Output<String>> linkType() {
        return Optional.ofNullable(this.linkType);
    }

    /**
     * The name of the VPC peering connection.
     * The name must be 2 to 128 characters in length, and can contain digits, underscores (\_), and hyphens (-). It must start with a letter.
     * 
     */
    @Import(name="peerConnectionName")
    private @Nullable Output<String> peerConnectionName;

    /**
     * @return The name of the VPC peering connection.
     * The name must be 2 to 128 characters in length, and can contain digits, underscores (\_), and hyphens (-). It must start with a letter.
     * 
     */
    public Optional<Output<String>> peerConnectionName() {
        return Optional.ofNullable(this.peerConnectionName);
    }

    /**
     * The region ID of the resource to which you want to create and add tags.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The region ID of the resource to which you want to create and add tags.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tags of VpcPeer.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags of VpcPeer.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private PeerConnectionState() {}

    private PeerConnectionState(PeerConnectionState $) {
        this.acceptingAliUid = $.acceptingAliUid;
        this.acceptingRegionId = $.acceptingRegionId;
        this.acceptingVpcId = $.acceptingVpcId;
        this.bandwidth = $.bandwidth;
        this.createTime = $.createTime;
        this.description = $.description;
        this.dryRun = $.dryRun;
        this.forceDelete = $.forceDelete;
        this.linkType = $.linkType;
        this.peerConnectionName = $.peerConnectionName;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeerConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeerConnectionState $;

        public Builder() {
            $ = new PeerConnectionState();
        }

        public Builder(PeerConnectionState defaults) {
            $ = new PeerConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptingAliUid The ID of the Alibaba Cloud account to which the accepter VPC belongs.
         * 
         * *   To create a VPC peering connection within your Alibaba Cloud account, enter the ID of your Alibaba Cloud account.
         * *   To create a VPC peering connection between your Alibaba Cloud account and another Alibaba Cloud account, enter the ID of the peer Alibaba Cloud account.
         * 
         * &gt; **NOTE:**   If the accepter is a RAM user, set `AcceptingAliUid` to the ID of the Alibaba Cloud account that created the RAM user.
         * 
         * @return builder
         * 
         */
        public Builder acceptingAliUid(@Nullable Output<Integer> acceptingAliUid) {
            $.acceptingAliUid = acceptingAliUid;
            return this;
        }

        /**
         * @param acceptingAliUid The ID of the Alibaba Cloud account to which the accepter VPC belongs.
         * 
         * *   To create a VPC peering connection within your Alibaba Cloud account, enter the ID of your Alibaba Cloud account.
         * *   To create a VPC peering connection between your Alibaba Cloud account and another Alibaba Cloud account, enter the ID of the peer Alibaba Cloud account.
         * 
         * &gt; **NOTE:**   If the accepter is a RAM user, set `AcceptingAliUid` to the ID of the Alibaba Cloud account that created the RAM user.
         * 
         * @return builder
         * 
         */
        public Builder acceptingAliUid(Integer acceptingAliUid) {
            return acceptingAliUid(Output.of(acceptingAliUid));
        }

        /**
         * @param acceptingRegionId The region ID of the accepter VPC of the VPC peering connection that you want to create.
         * 
         * - To create an intra-region VPC peering connection, enter a region ID that is the same as that of the requester VPC.
         * - To create an inter-region VPC peering connection, enter a region ID that is different from that of the requester VPC.
         * 
         * @return builder
         * 
         */
        public Builder acceptingRegionId(@Nullable Output<String> acceptingRegionId) {
            $.acceptingRegionId = acceptingRegionId;
            return this;
        }

        /**
         * @param acceptingRegionId The region ID of the accepter VPC of the VPC peering connection that you want to create.
         * 
         * - To create an intra-region VPC peering connection, enter a region ID that is the same as that of the requester VPC.
         * - To create an inter-region VPC peering connection, enter a region ID that is different from that of the requester VPC.
         * 
         * @return builder
         * 
         */
        public Builder acceptingRegionId(String acceptingRegionId) {
            return acceptingRegionId(Output.of(acceptingRegionId));
        }

        /**
         * @param acceptingVpcId The ID of the accepter VPC.
         * 
         * @return builder
         * 
         */
        public Builder acceptingVpcId(@Nullable Output<String> acceptingVpcId) {
            $.acceptingVpcId = acceptingVpcId;
            return this;
        }

        /**
         * @param acceptingVpcId The ID of the accepter VPC.
         * 
         * @return builder
         * 
         */
        public Builder acceptingVpcId(String acceptingVpcId) {
            return acceptingVpcId(Output.of(acceptingVpcId));
        }

        /**
         * @param bandwidth The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param createTime The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The description of the VPC peering connection.
         * The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the VPC peering connection.
         * The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param forceDelete Specifies whether to forcefully delete the VPC peering connection. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        /**
         * @param forceDelete Specifies whether to forcefully delete the VPC peering connection. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        /**
         * @param linkType The link type of the VPC peering connection that you want to create. Valid values:
         * - Platinum.
         * - Gold: default value.
         * 
         * &gt; **NOTE:**
         * 
         * &gt; **NOTE:**  - If you need to specify this parameter, ensure that the VPC peering connection is an inter-region connection.
         * 
         * @return builder
         * 
         */
        public Builder linkType(@Nullable Output<String> linkType) {
            $.linkType = linkType;
            return this;
        }

        /**
         * @param linkType The link type of the VPC peering connection that you want to create. Valid values:
         * - Platinum.
         * - Gold: default value.
         * 
         * &gt; **NOTE:**
         * 
         * &gt; **NOTE:**  - If you need to specify this parameter, ensure that the VPC peering connection is an inter-region connection.
         * 
         * @return builder
         * 
         */
        public Builder linkType(String linkType) {
            return linkType(Output.of(linkType));
        }

        /**
         * @param peerConnectionName The name of the VPC peering connection.
         * The name must be 2 to 128 characters in length, and can contain digits, underscores (\_), and hyphens (-). It must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder peerConnectionName(@Nullable Output<String> peerConnectionName) {
            $.peerConnectionName = peerConnectionName;
            return this;
        }

        /**
         * @param peerConnectionName The name of the VPC peering connection.
         * The name must be 2 to 128 characters in length, and can contain digits, underscores (\_), and hyphens (-). It must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder peerConnectionName(String peerConnectionName) {
            return peerConnectionName(Output.of(peerConnectionName));
        }

        /**
         * @param regionId The region ID of the resource to which you want to create and add tags.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The region ID of the resource to which you want to create and add tags.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the new resource group.
         * 
         * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the new resource group.
         * 
         * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tags of VpcPeer.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of VpcPeer.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcId The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public PeerConnectionState build() {
            return $;
        }
    }

}
