// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RocketMQInstanceAclInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final RocketMQInstanceAclInfoArgs Empty = new RocketMQInstanceAclInfoArgs();

    /**
     * The authentication type of the instance. Valid values:
     * 
     */
    @Import(name="aclTypes")
    private @Nullable Output<List<String>> aclTypes;

    /**
     * @return The authentication type of the instance. Valid values:
     * 
     */
    public Optional<Output<List<String>>> aclTypes() {
        return Optional.ofNullable(this.aclTypes);
    }

    /**
     * Indicates whether the authentication-free in VPCs feature is enabled. Indicates whether the authentication-free in VPCs feature is enabled. Valid values:
     * 
     */
    @Import(name="defaultVpcAuthFree")
    private @Nullable Output<Boolean> defaultVpcAuthFree;

    /**
     * @return Indicates whether the authentication-free in VPCs feature is enabled. Indicates whether the authentication-free in VPCs feature is enabled. Valid values:
     * 
     */
    public Optional<Output<Boolean>> defaultVpcAuthFree() {
        return Optional.ofNullable(this.defaultVpcAuthFree);
    }

    private RocketMQInstanceAclInfoArgs() {}

    private RocketMQInstanceAclInfoArgs(RocketMQInstanceAclInfoArgs $) {
        this.aclTypes = $.aclTypes;
        this.defaultVpcAuthFree = $.defaultVpcAuthFree;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RocketMQInstanceAclInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RocketMQInstanceAclInfoArgs $;

        public Builder() {
            $ = new RocketMQInstanceAclInfoArgs();
        }

        public Builder(RocketMQInstanceAclInfoArgs defaults) {
            $ = new RocketMQInstanceAclInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclTypes The authentication type of the instance. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder aclTypes(@Nullable Output<List<String>> aclTypes) {
            $.aclTypes = aclTypes;
            return this;
        }

        /**
         * @param aclTypes The authentication type of the instance. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder aclTypes(List<String> aclTypes) {
            return aclTypes(Output.of(aclTypes));
        }

        /**
         * @param aclTypes The authentication type of the instance. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder aclTypes(String... aclTypes) {
            return aclTypes(List.of(aclTypes));
        }

        /**
         * @param defaultVpcAuthFree Indicates whether the authentication-free in VPCs feature is enabled. Indicates whether the authentication-free in VPCs feature is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder defaultVpcAuthFree(@Nullable Output<Boolean> defaultVpcAuthFree) {
            $.defaultVpcAuthFree = defaultVpcAuthFree;
            return this;
        }

        /**
         * @param defaultVpcAuthFree Indicates whether the authentication-free in VPCs feature is enabled. Indicates whether the authentication-free in VPCs feature is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder defaultVpcAuthFree(Boolean defaultVpcAuthFree) {
            return defaultVpcAuthFree(Output.of(defaultVpcAuthFree));
        }

        public RocketMQInstanceAclInfoArgs build() {
            return $;
        }
    }

}
