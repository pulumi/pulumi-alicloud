// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HadoopDataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final HadoopDataSourceArgs Empty = new HadoopDataSourceArgs();

    /**
     * Data Source Description
     * 
     */
    @Import(name="dataSourceDescription")
    private @Nullable Output<String> dataSourceDescription;

    /**
     * @return Data Source Description
     * 
     */
    public Optional<Output<String>> dataSourceDescription() {
        return Optional.ofNullable(this.dataSourceDescription);
    }

    /**
     * Data Source Name
     * 
     */
    @Import(name="dataSourceName")
    private @Nullable Output<String> dataSourceName;

    /**
     * @return Data Source Name
     * 
     */
    public Optional<Output<String>> dataSourceName() {
        return Optional.ofNullable(this.dataSourceName);
    }

    /**
     * The type of the data source. Valid values:
     * 
     * *   mysql
     * - postgresql
     * 
     * *   hdfs
     * - hive
     * 
     */
    @Import(name="dataSourceType")
    private @Nullable Output<String> dataSourceType;

    /**
     * @return The type of the data source. Valid values:
     * 
     * *   mysql
     * - postgresql
     * 
     * *   hdfs
     * - hive
     * 
     */
    public Optional<Output<String>> dataSourceType() {
        return Optional.ofNullable(this.dataSourceType);
    }

    /**
     * The instance ID.
     * 
     */
    @Import(name="dbInstanceId", required=true)
    private Output<String> dbInstanceId;

    /**
     * @return The instance ID.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }

    /**
     * The ID of the Emr instance.
     * 
     */
    @Import(name="emrInstanceId")
    private @Nullable Output<String> emrInstanceId;

    /**
     * @return The ID of the Emr instance.
     * 
     */
    public Optional<Output<String>> emrInstanceId() {
        return Optional.ofNullable(this.emrInstanceId);
    }

    /**
     * The string that specifies the content of the Hadoop core-site.xml file.
     * 
     */
    @Import(name="hadoopCoreConf")
    private @Nullable Output<String> hadoopCoreConf;

    /**
     * @return The string that specifies the content of the Hadoop core-site.xml file.
     * 
     */
    public Optional<Output<String>> hadoopCoreConf() {
        return Optional.ofNullable(this.hadoopCoreConf);
    }

    /**
     * The type of the external service. Valid values:
     * - emr: E-MapReduce (EMR) Hadoop cluster.
     * - selfCreate: self-managed Hadoop cluster.
     * 
     */
    @Import(name="hadoopCreateType")
    private @Nullable Output<String> hadoopCreateType;

    /**
     * @return The type of the external service. Valid values:
     * - emr: E-MapReduce (EMR) Hadoop cluster.
     * - selfCreate: self-managed Hadoop cluster.
     * 
     */
    public Optional<Output<String>> hadoopCreateType() {
        return Optional.ofNullable(this.hadoopCreateType);
    }

    /**
     * The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
     * 
     */
    @Import(name="hadoopHostsAddress")
    private @Nullable Output<String> hadoopHostsAddress;

    /**
     * @return The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
     * 
     */
    public Optional<Output<String>> hadoopHostsAddress() {
        return Optional.ofNullable(this.hadoopHostsAddress);
    }

    /**
     * The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    @Import(name="hdfsConf")
    private @Nullable Output<String> hdfsConf;

    /**
     * @return The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    public Optional<Output<String>> hdfsConf() {
        return Optional.ofNullable(this.hdfsConf);
    }

    /**
     * The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
     * 
     */
    @Import(name="hiveConf")
    private @Nullable Output<String> hiveConf;

    /**
     * @return The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
     * 
     */
    public Optional<Output<String>> hiveConf() {
        return Optional.ofNullable(this.hiveConf);
    }

    /**
     * The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    @Import(name="mapReduceConf")
    private @Nullable Output<String> mapReduceConf;

    /**
     * @return The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    public Optional<Output<String>> mapReduceConf() {
        return Optional.ofNullable(this.mapReduceConf);
    }

    /**
     * The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    @Import(name="yarnConf")
    private @Nullable Output<String> yarnConf;

    /**
     * @return The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
     * 
     */
    public Optional<Output<String>> yarnConf() {
        return Optional.ofNullable(this.yarnConf);
    }

    private HadoopDataSourceArgs() {}

    private HadoopDataSourceArgs(HadoopDataSourceArgs $) {
        this.dataSourceDescription = $.dataSourceDescription;
        this.dataSourceName = $.dataSourceName;
        this.dataSourceType = $.dataSourceType;
        this.dbInstanceId = $.dbInstanceId;
        this.emrInstanceId = $.emrInstanceId;
        this.hadoopCoreConf = $.hadoopCoreConf;
        this.hadoopCreateType = $.hadoopCreateType;
        this.hadoopHostsAddress = $.hadoopHostsAddress;
        this.hdfsConf = $.hdfsConf;
        this.hiveConf = $.hiveConf;
        this.mapReduceConf = $.mapReduceConf;
        this.yarnConf = $.yarnConf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HadoopDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HadoopDataSourceArgs $;

        public Builder() {
            $ = new HadoopDataSourceArgs();
        }

        public Builder(HadoopDataSourceArgs defaults) {
            $ = new HadoopDataSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSourceDescription Data Source Description
         * 
         * @return builder
         * 
         */
        public Builder dataSourceDescription(@Nullable Output<String> dataSourceDescription) {
            $.dataSourceDescription = dataSourceDescription;
            return this;
        }

        /**
         * @param dataSourceDescription Data Source Description
         * 
         * @return builder
         * 
         */
        public Builder dataSourceDescription(String dataSourceDescription) {
            return dataSourceDescription(Output.of(dataSourceDescription));
        }

        /**
         * @param dataSourceName Data Source Name
         * 
         * @return builder
         * 
         */
        public Builder dataSourceName(@Nullable Output<String> dataSourceName) {
            $.dataSourceName = dataSourceName;
            return this;
        }

        /**
         * @param dataSourceName Data Source Name
         * 
         * @return builder
         * 
         */
        public Builder dataSourceName(String dataSourceName) {
            return dataSourceName(Output.of(dataSourceName));
        }

        /**
         * @param dataSourceType The type of the data source. Valid values:
         * 
         * *   mysql
         * - postgresql
         * 
         * *   hdfs
         * - hive
         * 
         * @return builder
         * 
         */
        public Builder dataSourceType(@Nullable Output<String> dataSourceType) {
            $.dataSourceType = dataSourceType;
            return this;
        }

        /**
         * @param dataSourceType The type of the data source. Valid values:
         * 
         * *   mysql
         * - postgresql
         * 
         * *   hdfs
         * - hive
         * 
         * @return builder
         * 
         */
        public Builder dataSourceType(String dataSourceType) {
            return dataSourceType(Output.of(dataSourceType));
        }

        /**
         * @param dbInstanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param emrInstanceId The ID of the Emr instance.
         * 
         * @return builder
         * 
         */
        public Builder emrInstanceId(@Nullable Output<String> emrInstanceId) {
            $.emrInstanceId = emrInstanceId;
            return this;
        }

        /**
         * @param emrInstanceId The ID of the Emr instance.
         * 
         * @return builder
         * 
         */
        public Builder emrInstanceId(String emrInstanceId) {
            return emrInstanceId(Output.of(emrInstanceId));
        }

        /**
         * @param hadoopCoreConf The string that specifies the content of the Hadoop core-site.xml file.
         * 
         * @return builder
         * 
         */
        public Builder hadoopCoreConf(@Nullable Output<String> hadoopCoreConf) {
            $.hadoopCoreConf = hadoopCoreConf;
            return this;
        }

        /**
         * @param hadoopCoreConf The string that specifies the content of the Hadoop core-site.xml file.
         * 
         * @return builder
         * 
         */
        public Builder hadoopCoreConf(String hadoopCoreConf) {
            return hadoopCoreConf(Output.of(hadoopCoreConf));
        }

        /**
         * @param hadoopCreateType The type of the external service. Valid values:
         * - emr: E-MapReduce (EMR) Hadoop cluster.
         * - selfCreate: self-managed Hadoop cluster.
         * 
         * @return builder
         * 
         */
        public Builder hadoopCreateType(@Nullable Output<String> hadoopCreateType) {
            $.hadoopCreateType = hadoopCreateType;
            return this;
        }

        /**
         * @param hadoopCreateType The type of the external service. Valid values:
         * - emr: E-MapReduce (EMR) Hadoop cluster.
         * - selfCreate: self-managed Hadoop cluster.
         * 
         * @return builder
         * 
         */
        public Builder hadoopCreateType(String hadoopCreateType) {
            return hadoopCreateType(Output.of(hadoopCreateType));
        }

        /**
         * @param hadoopHostsAddress The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
         * 
         * @return builder
         * 
         */
        public Builder hadoopHostsAddress(@Nullable Output<String> hadoopHostsAddress) {
            $.hadoopHostsAddress = hadoopHostsAddress;
            return this;
        }

        /**
         * @param hadoopHostsAddress The IP address and hostname of the Hadoop cluster (data source) in the /etc/hosts file.
         * 
         * @return builder
         * 
         */
        public Builder hadoopHostsAddress(String hadoopHostsAddress) {
            return hadoopHostsAddress(Output.of(hadoopHostsAddress));
        }

        /**
         * @param hdfsConf The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder hdfsConf(@Nullable Output<String> hdfsConf) {
            $.hdfsConf = hdfsConf;
            return this;
        }

        /**
         * @param hdfsConf The string that specifies the content of the Hadoop hdfs-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder hdfsConf(String hdfsConf) {
            return hdfsConf(Output.of(hdfsConf));
        }

        /**
         * @param hiveConf The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
         * 
         * @return builder
         * 
         */
        public Builder hiveConf(@Nullable Output<String> hiveConf) {
            $.hiveConf = hiveConf;
            return this;
        }

        /**
         * @param hiveConf The string that specifies the content of the Hadoop hive-site.xml file. This parameter must be specified when DataSourceType is set to Hive.
         * 
         * @return builder
         * 
         */
        public Builder hiveConf(String hiveConf) {
            return hiveConf(Output.of(hiveConf));
        }

        /**
         * @param mapReduceConf The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder mapReduceConf(@Nullable Output<String> mapReduceConf) {
            $.mapReduceConf = mapReduceConf;
            return this;
        }

        /**
         * @param mapReduceConf The content of the Hadoop mapred-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder mapReduceConf(String mapReduceConf) {
            return mapReduceConf(Output.of(mapReduceConf));
        }

        /**
         * @param yarnConf The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder yarnConf(@Nullable Output<String> yarnConf) {
            $.yarnConf = yarnConf;
            return this;
        }

        /**
         * @param yarnConf The string that specifies the content of the Hadoop yarn-site.xml file. This parameter must be specified when DataSourceType is set to HDFS.
         * 
         * @return builder
         * 
         */
        public Builder yarnConf(String yarnConf) {
            return yarnConf(Output.of(yarnConf));
        }

        public HadoopDataSourceArgs build() {
            if ($.dbInstanceId == null) {
                throw new MissingRequiredPropertyException("HadoopDataSourceArgs", "dbInstanceId");
            }
            return $;
        }
    }

}
