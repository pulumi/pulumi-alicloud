// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMachineGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMachineGroupsPlainArgs Empty = new GetMachineGroupsPlainArgs();

    /**
     * Machine Group name
     * 
     */
    @Import(name="groupName")
    private @Nullable String groupName;

    /**
     * @return Machine Group name
     * 
     */
    public Optional<String> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Project name
     * 
     */
    @Import(name="projectName", required=true)
    private String projectName;

    /**
     * @return Project name
     * 
     */
    public String projectName() {
        return this.projectName;
    }

    private GetMachineGroupsPlainArgs() {}

    private GetMachineGroupsPlainArgs(GetMachineGroupsPlainArgs $) {
        this.groupName = $.groupName;
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMachineGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMachineGroupsPlainArgs $;

        public Builder() {
            $ = new GetMachineGroupsPlainArgs();
        }

        public Builder(GetMachineGroupsPlainArgs defaults) {
            $ = new GetMachineGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupName Machine Group name
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable String groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param ids A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Machine Group IDs. The value is formulated as `&lt;project_name&gt;:&lt;group_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            $.projectName = projectName;
            return this;
        }

        public GetMachineGroupsPlainArgs build() {
            if ($.projectName == null) {
                throw new MissingRequiredPropertyException("GetMachineGroupsPlainArgs", "projectName");
            }
            return $;
        }
    }

}
