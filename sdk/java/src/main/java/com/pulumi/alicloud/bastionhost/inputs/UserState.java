// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserState extends com.pulumi.resources.ResourceArgs {

    public static final UserState Empty = new UserState();

    /**
     * Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Specify the New User&#39;s Mailbox.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return Specify the New User&#39;s Mailbox.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * You Want to Query the User the Bastion Host ID of.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return You Want to Query the User the Bastion Host ID of.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Specify the New of the User That Created a Different Mobile Phone Number from Your.
     * 
     */
    @Import(name="mobile")
    private @Nullable Output<String> mobile;

    /**
     * @return Specify the New of the User That Created a Different Mobile Phone Number from Your.
     * 
     */
    public Optional<Output<String>> mobile() {
        return Optional.ofNullable(this.mobile);
    }

    /**
     * Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN. Valid Values:
     * * CN: Mainland China (+86)
     * * HK: hong Kong, China (+852)
     * * MO: Macau, China (+853)
     * * TW: Taiwan, China (+886)
     * * RU: Russian (+7)
     * * SG: Singapore (+65)
     * * MY: malaysia (+60)
     * * ID: Indonesia (+62)
     * * DE: Germany (+49)
     * * AU: Australia (+61)
     * * US: United States (+1)
     * * AE: dubai (+971)
     * * JP: Japan (+81) Introducing the Long-Range
     * * GB: United Kingdom (+44)
     * * IN: India (+91)
     * * KR: South Korea (+82)
     * * PH: philippines (+63)
     * * CH: Switzerland (+41)
     * * SE: Sweden (+46)
     * 
     */
    @Import(name="mobileCountryCode")
    private @Nullable Output<String> mobileCountryCode;

    /**
     * @return Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN. Valid Values:
     * * CN: Mainland China (+86)
     * * HK: hong Kong, China (+852)
     * * MO: Macau, China (+853)
     * * TW: Taiwan, China (+886)
     * * RU: Russian (+7)
     * * SG: Singapore (+65)
     * * MY: malaysia (+60)
     * * ID: Indonesia (+62)
     * * DE: Germany (+49)
     * * AU: Australia (+61)
     * * US: United States (+1)
     * * AE: dubai (+971)
     * * JP: Japan (+81) Introducing the Long-Range
     * * GB: United Kingdom (+44)
     * * IN: India (+91)
     * * KR: South Korea (+82)
     * * PH: philippines (+63)
     * * CH: Switzerland (+41)
     * * SE: Sweden (+46)
     * 
     */
    public Optional<Output<String>> mobileCountryCode() {
        return Optional.ofNullable(this.mobileCountryCode);
    }

    /**
     * Specify the New User&#39;s Password. Supports up to 128 Characters. Description of the New User as the Source of the Local User That Is, Source Value for Local, this Parameter Is Required.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Specify the New User&#39;s Password. Supports up to 128 Characters. Description of the New User as the Source of the Local User That Is, Source Value for Local, this Parameter Is Required.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Specify the New of the User That Created the Source. Valid Values:
     * * Local: Local User
     * * Ram: Ram User
     * * AD: AD-authenticated User
     * * LDAP: LDAP-authenticated User
     * &gt; **NOTE:** From version 1.199.0, `source` can be set to `AD`, `LDAP`.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return Specify the New of the User That Created the Source. Valid Values:
     * * Local: Local User
     * * Ram: Ram User
     * * AD: AD-authenticated User
     * * LDAP: LDAP-authenticated User
     * &gt; **NOTE:** From version 1.199.0, `source` can be set to `AD`, `LDAP`.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
     * 
     */
    @Import(name="sourceUserId")
    private @Nullable Output<String> sourceUserId;

    /**
     * @return Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
     * 
     */
    public Optional<Output<String>> sourceUserId() {
        return Optional.ofNullable(this.sourceUserId);
    }

    /**
     * The status of the resource. Valid values: `Frozen`, `Normal`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `Frozen`, `Normal`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The User ID.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return The User ID.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    /**
     * Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private UserState() {}

    private UserState(UserState $) {
        this.comment = $.comment;
        this.displayName = $.displayName;
        this.email = $.email;
        this.instanceId = $.instanceId;
        this.mobile = $.mobile;
        this.mobileCountryCode = $.mobileCountryCode;
        this.password = $.password;
        this.source = $.source;
        this.sourceUserId = $.sourceUserId;
        this.status = $.status;
        this.userId = $.userId;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserState $;

        public Builder() {
            $ = new UserState();
        }

        public Builder(UserState defaults) {
            $ = new UserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param displayName Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param email Specify the New User&#39;s Mailbox.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Specify the New User&#39;s Mailbox.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param instanceId You Want to Query the User the Bastion Host ID of.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId You Want to Query the User the Bastion Host ID of.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param mobile Specify the New of the User That Created a Different Mobile Phone Number from Your.
         * 
         * @return builder
         * 
         */
        public Builder mobile(@Nullable Output<String> mobile) {
            $.mobile = mobile;
            return this;
        }

        /**
         * @param mobile Specify the New of the User That Created a Different Mobile Phone Number from Your.
         * 
         * @return builder
         * 
         */
        public Builder mobile(String mobile) {
            return mobile(Output.of(mobile));
        }

        /**
         * @param mobileCountryCode Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN. Valid Values:
         * * CN: Mainland China (+86)
         * * HK: hong Kong, China (+852)
         * * MO: Macau, China (+853)
         * * TW: Taiwan, China (+886)
         * * RU: Russian (+7)
         * * SG: Singapore (+65)
         * * MY: malaysia (+60)
         * * ID: Indonesia (+62)
         * * DE: Germany (+49)
         * * AU: Australia (+61)
         * * US: United States (+1)
         * * AE: dubai (+971)
         * * JP: Japan (+81) Introducing the Long-Range
         * * GB: United Kingdom (+44)
         * * IN: India (+91)
         * * KR: South Korea (+82)
         * * PH: philippines (+63)
         * * CH: Switzerland (+41)
         * * SE: Sweden (+46)
         * 
         * @return builder
         * 
         */
        public Builder mobileCountryCode(@Nullable Output<String> mobileCountryCode) {
            $.mobileCountryCode = mobileCountryCode;
            return this;
        }

        /**
         * @param mobileCountryCode Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN. Valid Values:
         * * CN: Mainland China (+86)
         * * HK: hong Kong, China (+852)
         * * MO: Macau, China (+853)
         * * TW: Taiwan, China (+886)
         * * RU: Russian (+7)
         * * SG: Singapore (+65)
         * * MY: malaysia (+60)
         * * ID: Indonesia (+62)
         * * DE: Germany (+49)
         * * AU: Australia (+61)
         * * US: United States (+1)
         * * AE: dubai (+971)
         * * JP: Japan (+81) Introducing the Long-Range
         * * GB: United Kingdom (+44)
         * * IN: India (+91)
         * * KR: South Korea (+82)
         * * PH: philippines (+63)
         * * CH: Switzerland (+41)
         * * SE: Sweden (+46)
         * 
         * @return builder
         * 
         */
        public Builder mobileCountryCode(String mobileCountryCode) {
            return mobileCountryCode(Output.of(mobileCountryCode));
        }

        /**
         * @param password Specify the New User&#39;s Password. Supports up to 128 Characters. Description of the New User as the Source of the Local User That Is, Source Value for Local, this Parameter Is Required.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Specify the New User&#39;s Password. Supports up to 128 Characters. Description of the New User as the Source of the Local User That Is, Source Value for Local, this Parameter Is Required.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param source Specify the New of the User That Created the Source. Valid Values:
         * * Local: Local User
         * * Ram: Ram User
         * * AD: AD-authenticated User
         * * LDAP: LDAP-authenticated User
         * &gt; **NOTE:** From version 1.199.0, `source` can be set to `AD`, `LDAP`.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Specify the New of the User That Created the Source. Valid Values:
         * * Local: Local User
         * * Ram: Ram User
         * * AD: AD-authenticated User
         * * LDAP: LDAP-authenticated User
         * &gt; **NOTE:** From version 1.199.0, `source` can be set to `AD`, `LDAP`.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param sourceUserId Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
         * 
         * @return builder
         * 
         */
        public Builder sourceUserId(@Nullable Output<String> sourceUserId) {
            $.sourceUserId = sourceUserId;
            return this;
        }

        /**
         * @param sourceUserId Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
         * 
         * @return builder
         * 
         */
        public Builder sourceUserId(String sourceUserId) {
            return sourceUserId(Output.of(sourceUserId));
        }

        /**
         * @param status The status of the resource. Valid values: `Frozen`, `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `Frozen`, `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param userId The User ID.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The User ID.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        /**
         * @param userName Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserState build() {
            return $;
        }
    }

}
