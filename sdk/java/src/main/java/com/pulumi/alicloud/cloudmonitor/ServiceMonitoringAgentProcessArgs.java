// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMonitoringAgentProcessArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMonitoringAgentProcessArgs Empty = new ServiceMonitoringAgentProcessArgs();

    /**
     * The ID of the instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The name of the process.
     * 
     */
    @Import(name="processName", required=true)
    private Output<String> processName;

    /**
     * @return The name of the process.
     * 
     */
    public Output<String> processName() {
        return this.processName;
    }

    /**
     * The user who launches the process.
     * 
     */
    @Import(name="processUser")
    private @Nullable Output<String> processUser;

    /**
     * @return The user who launches the process.
     * 
     */
    public Optional<Output<String>> processUser() {
        return Optional.ofNullable(this.processUser);
    }

    private ServiceMonitoringAgentProcessArgs() {}

    private ServiceMonitoringAgentProcessArgs(ServiceMonitoringAgentProcessArgs $) {
        this.instanceId = $.instanceId;
        this.processName = $.processName;
        this.processUser = $.processUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMonitoringAgentProcessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMonitoringAgentProcessArgs $;

        public Builder() {
            $ = new ServiceMonitoringAgentProcessArgs();
        }

        public Builder(ServiceMonitoringAgentProcessArgs defaults) {
            $ = new ServiceMonitoringAgentProcessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId The ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param processName The name of the process.
         * 
         * @return builder
         * 
         */
        public Builder processName(Output<String> processName) {
            $.processName = processName;
            return this;
        }

        /**
         * @param processName The name of the process.
         * 
         * @return builder
         * 
         */
        public Builder processName(String processName) {
            return processName(Output.of(processName));
        }

        /**
         * @param processUser The user who launches the process.
         * 
         * @return builder
         * 
         */
        public Builder processUser(@Nullable Output<String> processUser) {
            $.processUser = processUser;
            return this;
        }

        /**
         * @param processUser The user who launches the process.
         * 
         * @return builder
         * 
         */
        public Builder processUser(String processUser) {
            return processUser(Output.of(processUser));
        }

        public ServiceMonitoringAgentProcessArgs build() {
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("ServiceMonitoringAgentProcessArgs", "instanceId");
            }
            if ($.processName == null) {
                throw new MissingRequiredPropertyException("ServiceMonitoringAgentProcessArgs", "processName");
            }
            return $;
        }
    }

}
