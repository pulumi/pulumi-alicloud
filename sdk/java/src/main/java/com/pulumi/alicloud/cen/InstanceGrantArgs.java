// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceGrantArgs Empty = new InstanceGrantArgs();

    /**
     * The ID of the CEN.
     * 
     */
    @Import(name="cenId", required=true)
    private Output<String> cenId;

    /**
     * @return The ID of the CEN.
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }

    /**
     * The owner UID of the  CEN which the child instance granted to.
     * 
     */
    @Import(name="cenOwnerId", required=true)
    private Output<String> cenOwnerId;

    /**
     * @return The owner UID of the  CEN which the child instance granted to.
     * 
     */
    public Output<String> cenOwnerId() {
        return this.cenOwnerId;
    }

    /**
     * The ID of the child instance to grant.
     * 
     */
    @Import(name="childInstanceId", required=true)
    private Output<String> childInstanceId;

    /**
     * @return The ID of the child instance to grant.
     * 
     */
    public Output<String> childInstanceId() {
        return this.childInstanceId;
    }

    private InstanceGrantArgs() {}

    private InstanceGrantArgs(InstanceGrantArgs $) {
        this.cenId = $.cenId;
        this.cenOwnerId = $.cenOwnerId;
        this.childInstanceId = $.childInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGrantArgs $;

        public Builder() {
            $ = new InstanceGrantArgs();
        }

        public Builder(InstanceGrantArgs defaults) {
            $ = new InstanceGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param cenOwnerId The owner UID of the  CEN which the child instance granted to.
         * 
         * @return builder
         * 
         */
        public Builder cenOwnerId(Output<String> cenOwnerId) {
            $.cenOwnerId = cenOwnerId;
            return this;
        }

        /**
         * @param cenOwnerId The owner UID of the  CEN which the child instance granted to.
         * 
         * @return builder
         * 
         */
        public Builder cenOwnerId(String cenOwnerId) {
            return cenOwnerId(Output.of(cenOwnerId));
        }

        /**
         * @param childInstanceId The ID of the child instance to grant.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(Output<String> childInstanceId) {
            $.childInstanceId = childInstanceId;
            return this;
        }

        /**
         * @param childInstanceId The ID of the child instance to grant.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(String childInstanceId) {
            return childInstanceId(Output.of(childInstanceId));
        }

        public InstanceGrantArgs build() {
            if ($.cenId == null) {
                throw new MissingRequiredPropertyException("InstanceGrantArgs", "cenId");
            }
            if ($.cenOwnerId == null) {
                throw new MissingRequiredPropertyException("InstanceGrantArgs", "cenOwnerId");
            }
            if ($.childInstanceId == null) {
                throw new MissingRequiredPropertyException("InstanceGrantArgs", "childInstanceId");
            }
            return $;
        }
    }

}
