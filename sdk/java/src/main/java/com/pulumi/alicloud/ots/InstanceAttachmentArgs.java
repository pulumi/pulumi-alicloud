// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ots;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class InstanceAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAttachmentArgs Empty = new InstanceAttachmentArgs();

    /**
     * The name of the OTS instance.
     * 
     */
    @Import(name="instanceName", required=true)
    private Output<String> instanceName;

    /**
     * @return The name of the OTS instance.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }

    /**
     * The name of attaching VPC to instance. It can only contain letters and numbers, must start with a letter, and is limited to 3-16 characters in length.
     * 
     */
    @Import(name="vpcName", required=true)
    private Output<String> vpcName;

    /**
     * @return The name of attaching VPC to instance. It can only contain letters and numbers, must start with a letter, and is limited to 3-16 characters in length.
     * 
     */
    public Output<String> vpcName() {
        return this.vpcName;
    }

    /**
     * The ID of attaching VSwitch to instance.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The ID of attaching VSwitch to instance.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private InstanceAttachmentArgs() {}

    private InstanceAttachmentArgs(InstanceAttachmentArgs $) {
        this.instanceName = $.instanceName;
        this.vpcName = $.vpcName;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAttachmentArgs $;

        public Builder() {
            $ = new InstanceAttachmentArgs();
        }

        public Builder(InstanceAttachmentArgs defaults) {
            $ = new InstanceAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceName The name of the OTS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of the OTS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param vpcName The name of attaching VPC to instance. It can only contain letters and numbers, must start with a letter, and is limited to 3-16 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder vpcName(Output<String> vpcName) {
            $.vpcName = vpcName;
            return this;
        }

        /**
         * @param vpcName The name of attaching VPC to instance. It can only contain letters and numbers, must start with a letter, and is limited to 3-16 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder vpcName(String vpcName) {
            return vpcName(Output.of(vpcName));
        }

        /**
         * @param vswitchId The ID of attaching VSwitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of attaching VSwitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public InstanceAttachmentArgs build() {
            $.instanceName = Objects.requireNonNull($.instanceName, "expected parameter 'instanceName' to be non-null");
            $.vpcName = Objects.requireNonNull($.vpcName, "expected parameter 'vpcName' to be non-null");
            $.vswitchId = Objects.requireNonNull($.vswitchId, "expected parameter 'vswitchId' to be non-null");
            return $;
        }
    }

}
