// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.oss.BucketCnameArgs;
import com.pulumi.alicloud.oss.inputs.BucketCnameState;
import com.pulumi.alicloud.oss.outputs.BucketCnameCertificate;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a OSS Bucket Cname resource.
 * 
 * Customizing Bucket domains.
 * 
 * For information about OSS Bucket Cname and how to use it, see [What is Bucket Cname](https://www.alibabacloud.com/help/en/oss/developer-reference/putcname).
 * 
 * &gt; **NOTE:** Available since v1.233.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketCnameToken;
 * import com.pulumi.alicloud.oss.BucketCnameTokenArgs;
 * import com.pulumi.alicloud.dns.AlidnsRecord;
 * import com.pulumi.alicloud.dns.AlidnsRecordArgs;
 * import com.pulumi.alicloud.oss.BucketCname;
 * import com.pulumi.alicloud.oss.BucketCnameArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var createBucket = new Bucket("createBucket", BucketArgs.builder()
 *             .bucket(name)
 *             .storageClass("Standard")
 *             .build());
 * 
 *         var defaultZaWJfG = new BucketCnameToken("defaultZaWJfG", BucketCnameTokenArgs.builder()
 *             .bucket(createBucket.bucket())
 *             .domain("tftestacc.com")
 *             .build());
 * 
 *         var defaultnHqm5p = new AlidnsRecord("defaultnHqm5p", AlidnsRecordArgs.builder()
 *             .status("ENABLE")
 *             .line("default")
 *             .rr("_dnsauth")
 *             .type("TXT")
 *             .domainName("tftestacc.com")
 *             .priority(1)
 *             .value(defaultZaWJfG.token())
 *             .ttl(600)
 *             .build());
 * 
 *         var default_ = new BucketCname("default", BucketCnameArgs.builder()
 *             .bucket(createBucket.bucket())
 *             .domain(defaultnHqm5p.domainName())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * OSS Bucket Cname can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:oss/bucketCname:BucketCname example &lt;bucket&gt;:&lt;domain&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:oss/bucketCname:BucketCname")
public class BucketCname extends com.pulumi.resources.CustomResource {
    /**
     * The bucket to which the custom domain name belongs
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return The bucket to which the custom domain name belongs
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The container for the certificate configuration. See `certificate` below.
     * 
     */
    @Export(name="certificate", refs={BucketCnameCertificate.class}, tree="[0]")
    private Output</* @Nullable */ BucketCnameCertificate> certificate;

    /**
     * @return The container for the certificate configuration. See `certificate` below.
     * 
     */
    public Output<Optional<BucketCnameCertificate>> certificate() {
        return Codegen.optional(this.certificate);
    }
    /**
     * Whether to delete the certificate.
     * 
     */
    @Export(name="deleteCertificate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteCertificate;

    /**
     * @return Whether to delete the certificate.
     * 
     */
    public Output<Optional<Boolean>> deleteCertificate() {
        return Codegen.optional(this.deleteCertificate);
    }
    /**
     * User-defined domain name
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return User-defined domain name
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * Whether to force overwrite certificate.
     * 
     */
    @Export(name="force", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> force;

    /**
     * @return Whether to force overwrite certificate.
     * 
     */
    public Output<Optional<Boolean>> force() {
        return Codegen.optional(this.force);
    }
    /**
     * The current certificate ID. If the Force value is not true, the OSS Server checks whether the value matches the current certificate ID. If the value does not match, an error is reported.
     * 
     */
    @Export(name="previousCertId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> previousCertId;

    /**
     * @return The current certificate ID. If the Force value is not true, the OSS Server checks whether the value matches the current certificate ID. If the value does not match, an error is reported.
     * 
     */
    public Output<Optional<String>> previousCertId() {
        return Codegen.optional(this.previousCertId);
    }
    /**
     * Cname status
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Cname status
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketCname(java.lang.String name) {
        this(name, BucketCnameArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketCname(java.lang.String name, BucketCnameArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketCname(java.lang.String name, BucketCnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucketCname:BucketCname", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BucketCname(java.lang.String name, Output<java.lang.String> id, @Nullable BucketCnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucketCname:BucketCname", name, state, makeResourceOptions(options, id), false);
    }

    private static BucketCnameArgs makeArgs(BucketCnameArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BucketCnameArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketCname get(java.lang.String name, Output<java.lang.String> id, @Nullable BucketCnameState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketCname(name, id, state, options);
    }
}
