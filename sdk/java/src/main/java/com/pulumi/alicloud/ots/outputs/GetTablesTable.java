// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ots.outputs;

import com.pulumi.alicloud.ots.outputs.GetTablesTableDefinedColumn;
import com.pulumi.alicloud.ots.outputs.GetTablesTablePrimaryKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTablesTable {
    private List<GetTablesTableDefinedColumn> definedColumns;
    /**
     * @return ID of the table. The value is `&lt;instance_name&gt;:&lt;table_name&gt;`.
     * 
     */
    private String id;
    /**
     * @return The name of OTS instance.
     * 
     */
    private String instanceName;
    /**
     * @return The maximum number of versions stored in this table.
     * 
     */
    private Integer maxVersion;
    /**
     * @return The property of `TableMeta` which indicates the structure information of a table.
     * 
     */
    private List<GetTablesTablePrimaryKey> primaryKeys;
    /**
     * @return The table name of the OTS which could not be changed.
     * 
     */
    private String tableName;
    /**
     * @return The retention time of data stored in this table.
     * 
     */
    private Integer timeToLive;

    private GetTablesTable() {}
    public List<GetTablesTableDefinedColumn> definedColumns() {
        return this.definedColumns;
    }
    /**
     * @return ID of the table. The value is `&lt;instance_name&gt;:&lt;table_name&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of OTS instance.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return The maximum number of versions stored in this table.
     * 
     */
    public Integer maxVersion() {
        return this.maxVersion;
    }
    /**
     * @return The property of `TableMeta` which indicates the structure information of a table.
     * 
     */
    public List<GetTablesTablePrimaryKey> primaryKeys() {
        return this.primaryKeys;
    }
    /**
     * @return The table name of the OTS which could not be changed.
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    /**
     * @return The retention time of data stored in this table.
     * 
     */
    public Integer timeToLive() {
        return this.timeToLive;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTablesTable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTablesTableDefinedColumn> definedColumns;
        private String id;
        private String instanceName;
        private Integer maxVersion;
        private List<GetTablesTablePrimaryKey> primaryKeys;
        private String tableName;
        private Integer timeToLive;
        public Builder() {}
        public Builder(GetTablesTable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedColumns = defaults.definedColumns;
    	      this.id = defaults.id;
    	      this.instanceName = defaults.instanceName;
    	      this.maxVersion = defaults.maxVersion;
    	      this.primaryKeys = defaults.primaryKeys;
    	      this.tableName = defaults.tableName;
    	      this.timeToLive = defaults.timeToLive;
        }

        @CustomType.Setter
        public Builder definedColumns(List<GetTablesTableDefinedColumn> definedColumns) {
            if (definedColumns == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "definedColumns");
            }
            this.definedColumns = definedColumns;
            return this;
        }
        public Builder definedColumns(GetTablesTableDefinedColumn... definedColumns) {
            return definedColumns(List.of(definedColumns));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder maxVersion(Integer maxVersion) {
            if (maxVersion == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "maxVersion");
            }
            this.maxVersion = maxVersion;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKeys(List<GetTablesTablePrimaryKey> primaryKeys) {
            if (primaryKeys == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "primaryKeys");
            }
            this.primaryKeys = primaryKeys;
            return this;
        }
        public Builder primaryKeys(GetTablesTablePrimaryKey... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            if (tableName == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "tableName");
            }
            this.tableName = tableName;
            return this;
        }
        @CustomType.Setter
        public Builder timeToLive(Integer timeToLive) {
            if (timeToLive == null) {
              throw new MissingRequiredPropertyException("GetTablesTable", "timeToLive");
            }
            this.timeToLive = timeToLive;
            return this;
        }
        public GetTablesTable build() {
            final var _resultValue = new GetTablesTable();
            _resultValue.definedColumns = definedColumns;
            _resultValue.id = id;
            _resultValue.instanceName = instanceName;
            _resultValue.maxVersion = maxVersion;
            _resultValue.primaryKeys = primaryKeys;
            _resultValue.tableName = tableName;
            _resultValue.timeToLive = timeToLive;
            return _resultValue;
        }
    }
}
