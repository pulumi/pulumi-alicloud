// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * Number of servers.
     * 
     */
    @Import(name="buyNumber")
    private @Nullable Output<String> buyNumber;

    /**
     * @return Number of servers.
     * 
     */
    public Optional<Output<String>> buyNumber() {
        return Optional.ofNullable(this.buyNumber);
    }

    /**
     * Container Image security scan. Interval type, value interval:[0,200000].
     * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     * @deprecated
     * Field &#39;container_image_scan&#39; has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].&gt; The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     */
    @Deprecated /* Field 'container_image_scan' has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].> The step size is 20, that is, only multiples of 20 can be filled in. */
    @Import(name="containerImageScan")
    private @Nullable Output<String> containerImageScan;

    /**
     * @return Container Image security scan. Interval type, value interval:[0,200000].
     * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     * @deprecated
     * Field &#39;container_image_scan&#39; has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].&gt; The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     */
    @Deprecated /* Field 'container_image_scan' has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].> The step size is 20, that is, only multiples of 20 can be filled in. */
    public Optional<Output<String>> containerImageScan() {
        return Optional.ofNullable(this.containerImageScan);
    }

    /**
     * Container Image security scan. Interval type, value interval:[0,200000].
     * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     */
    @Import(name="containerImageScanNew")
    private @Nullable Output<String> containerImageScanNew;

    /**
     * @return Container Image security scan. Interval type, value interval:[0,200000].
     * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
     * 
     */
    public Optional<Output<String>> containerImageScanNew() {
        return Optional.ofNullable(this.containerImageScanNew);
    }

    /**
     * Number of cloud honeypot licenses. Interval type, value interval:[20,500].
     * &gt; **NOTE:**  This module can only be purchased when honeypot_switch = 1, starting with 20.
     * 
     */
    @Import(name="honeypot")
    private @Nullable Output<String> honeypot;

    /**
     * @return Number of cloud honeypot licenses. Interval type, value interval:[20,500].
     * &gt; **NOTE:**  This module can only be purchased when honeypot_switch = 1, starting with 20.
     * 
     */
    public Optional<Output<String>> honeypot() {
        return Optional.ofNullable(this.honeypot);
    }

    /**
     * Cloud honeypot. Value:
     * - 1: Yes.
     * - 2: No.
     * 
     */
    @Import(name="honeypotSwitch")
    private @Nullable Output<String> honeypotSwitch;

    /**
     * @return Cloud honeypot. Value:
     * - 1: Yes.
     * - 2: No.
     * 
     */
    public Optional<Output<String>> honeypotSwitch() {
        return Optional.ofNullable(this.honeypotSwitch);
    }

    /**
     * Change configuration type, value
     * - Upgrade: Upgrade.
     * - Downgrade: Downgrade.
     * 
     */
    @Import(name="modifyType")
    private @Nullable Output<String> modifyType;

    /**
     * @return Change configuration type, value
     * - Upgrade: Upgrade.
     * - Downgrade: Downgrade.
     * 
     */
    public Optional<Output<String>> modifyType() {
        return Optional.ofNullable(this.modifyType);
    }

    /**
     * The payment type of the resource.
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    /**
     * Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
     * &gt; **NOTE:**  must be set when creating a prepaid instance.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
     * &gt; **NOTE:**  must be set when creating a prepaid instance.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Number of application protection licenses. Interval type, value interval:[1,100000000].
     * 
     */
    @Import(name="raspCount")
    private @Nullable Output<String> raspCount;

    /**
     * @return Number of application protection licenses. Interval type, value interval:[1,100000000].
     * 
     */
    public Optional<Output<String>> raspCount() {
        return Optional.ofNullable(this.raspCount);
    }

    /**
     * Automatic renewal cycle, in months.
     * &gt; **NOTE:**  When **RenewalStatus** is set to **AutoRenewal**, it must be set.
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Automatic renewal cycle, in months.
     * &gt; **NOTE:**  When **RenewalStatus** is set to **AutoRenewal**, it must be set.
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Automatic renewal period unit, value:
     * - M: month.
     * - Y: years.
     * &gt; **NOTE:**  Must be set when RenewalStatus = AutoRenewal.
     * 
     */
    @Import(name="renewalPeriodUnit")
    private @Nullable Output<String> renewalPeriodUnit;

    /**
     * @return Automatic renewal period unit, value:
     * - M: month.
     * - Y: years.
     * &gt; **NOTE:**  Must be set when RenewalStatus = AutoRenewal.
     * 
     */
    public Optional<Output<String>> renewalPeriodUnit() {
        return Optional.ofNullable(this.renewalPeriodUnit);
    }

    /**
     * Automatic renewal status, default ManualRenewal, valid values:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Automatic renewal status, default ManualRenewal, valid values:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * Anti-ransomware capacity. Unit: GB. Interval type, value interval:[0,9999999999].
     * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    @Import(name="sasAntiRansomware")
    private @Nullable Output<String> sasAntiRansomware;

    /**
     * @return Anti-ransomware capacity. Unit: GB. Interval type, value interval:[0,9999999999].
     * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    public Optional<Output<String>> sasAntiRansomware() {
        return Optional.ofNullable(this.sasAntiRansomware);
    }

    /**
     * Cloud platform configuration check scan times, interval type, value range:[1000,9999999999].
     * &gt; **NOTE:**  You must have sas_cspm_switch = 1 to purchase this module. The step size is 100, that is, only multiples of 10 can be filled in.
     * 
     */
    @Import(name="sasCspm")
    private @Nullable Output<String> sasCspm;

    /**
     * @return Cloud platform configuration check scan times, interval type, value range:[1000,9999999999].
     * &gt; **NOTE:**  You must have sas_cspm_switch = 1 to purchase this module. The step size is 100, that is, only multiples of 10 can be filled in.
     * 
     */
    public Optional<Output<String>> sasCspm() {
        return Optional.ofNullable(this.sasCspm);
    }

    /**
     * Cloud platform configuration check switch. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    @Import(name="sasCspmSwitch")
    private @Nullable Output<String> sasCspmSwitch;

    /**
     * @return Cloud platform configuration check switch. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    public Optional<Output<String>> sasCspmSwitch() {
        return Optional.ofNullable(this.sasCspmSwitch);
    }

    /**
     * Security screen. Value:
     * - true: Yes.
     * - false: No.
     * 
     */
    @Import(name="sasSc")
    private @Nullable Output<Boolean> sasSc;

    /**
     * @return Security screen. Value:
     * - true: Yes.
     * - false: No.
     * 
     */
    public Optional<Output<Boolean>> sasSc() {
        return Optional.ofNullable(this.sasSc);
    }

    /**
     * Number of malicious file detections. Unit: 10,000 times. Interval type, value interval:[10,9999999999].
     * &gt; **NOTE:**  This module can only be purchased when sas_sdk_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    @Import(name="sasSdk")
    private @Nullable Output<String> sasSdk;

    /**
     * @return Number of malicious file detections. Unit: 10,000 times. Interval type, value interval:[10,9999999999].
     * &gt; **NOTE:**  This module can only be purchased when sas_sdk_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    public Optional<Output<String>> sasSdk() {
        return Optional.ofNullable(this.sasSdk);
    }

    /**
     * Malicious file detection SDK.
     * 
     */
    @Import(name="sasSdkSwitch")
    private @Nullable Output<String> sasSdkSwitch;

    /**
     * @return Malicious file detection SDK.
     * 
     */
    public Optional<Output<String>> sasSdkSwitch() {
        return Optional.ofNullable(this.sasSdkSwitch);
    }

    /**
     * Log analysis storage capacity. Unit: GB. Interval type, value interval:[0,600000].
     * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    @Import(name="sasSlsStorage")
    private @Nullable Output<String> sasSlsStorage;

    /**
     * @return Log analysis storage capacity. Unit: GB. Interval type, value interval:[0,600000].
     * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    public Optional<Output<String>> sasSlsStorage() {
        return Optional.ofNullable(this.sasSlsStorage);
    }

    /**
     * Web tamper-proof switch. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    @Import(name="sasWebguardBoolean")
    private @Nullable Output<String> sasWebguardBoolean;

    /**
     * @return Web tamper-proof switch. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    public Optional<Output<String>> sasWebguardBoolean() {
        return Optional.ofNullable(this.sasWebguardBoolean);
    }

    /**
     * Tamper-proof authorization number. Value:
     * - 0: No
     * - 1: Yes.
     * 
     */
    @Import(name="sasWebguardOrderNum")
    private @Nullable Output<String> sasWebguardOrderNum;

    /**
     * @return Tamper-proof authorization number. Value:
     * - 0: No
     * - 1: Yes.
     * 
     */
    public Optional<Output<String>> sasWebguardOrderNum() {
        return Optional.ofNullable(this.sasWebguardOrderNum);
    }

    /**
     * Threat Analysis log storage capacity. Interval type, value interval:[0,9999999999].
     * &gt; **NOTE:**  This module can only be purchased when Threat_analysis_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    @Import(name="threatAnalysis")
    private @Nullable Output<String> threatAnalysis;

    /**
     * @return Threat Analysis log storage capacity. Interval type, value interval:[0,9999999999].
     * &gt; **NOTE:**  This module can only be purchased when Threat_analysis_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
     * 
     */
    public Optional<Output<String>> threatAnalysis() {
        return Optional.ofNullable(this.threatAnalysis);
    }

    /**
     * Threat analysis. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    @Import(name="threatAnalysisSwitch")
    private @Nullable Output<String> threatAnalysisSwitch;

    /**
     * @return Threat analysis. Value:
     * - 0: No.
     * - 1: Yes.
     * 
     */
    public Optional<Output<String>> threatAnalysisSwitch() {
        return Optional.ofNullable(this.threatAnalysisSwitch);
    }

    /**
     * Number of cores.
     * 
     */
    @Import(name="vCore")
    private @Nullable Output<String> vCore;

    /**
     * @return Number of cores.
     * 
     */
    public Optional<Output<String>> vCore() {
        return Optional.ofNullable(this.vCore);
    }

    /**
     * Select the security center version. Value:
     * - level7: Antivirus Edition.
     * - level3: Premium version.
     * - level2: Enterprise Edition.
     * - level8: Ultimate.
     * - level10: Purchase value-added services only.
     * 
     */
    @Import(name="versionCode", required=true)
    private Output<String> versionCode;

    /**
     * @return Select the security center version. Value:
     * - level7: Antivirus Edition.
     * - level3: Premium version.
     * - level2: Enterprise Edition.
     * - level8: Ultimate.
     * - level10: Purchase value-added services only.
     * 
     */
    public Output<String> versionCode() {
        return this.versionCode;
    }

    /**
     * Vulnerability repair times, interval type, value range:[20,100000000].
     * &gt; **NOTE:**  This module can only be purchased when vul_switch = 1. Only when the version_code value is level7 or level10. other versions do not need to be purchased separately.
     * 
     */
    @Import(name="vulCount")
    private @Nullable Output<String> vulCount;

    /**
     * @return Vulnerability repair times, interval type, value range:[20,100000000].
     * &gt; **NOTE:**  This module can only be purchased when vul_switch = 1. Only when the version_code value is level7 or level10. other versions do not need to be purchased separately.
     * 
     */
    public Optional<Output<String>> vulCount() {
        return Optional.ofNullable(this.vulCount);
    }

    /**
     * Vulnerability fix switch. Value:
     * - 0: No.
     * - 1: Yes.
     * &gt; **NOTE:**  When the value of version_code is level7 or level10, the purchase is allowed. Other versions do not need to be purchased separately.
     * 
     */
    @Import(name="vulSwitch")
    private @Nullable Output<String> vulSwitch;

    /**
     * @return Vulnerability fix switch. Value:
     * - 0: No.
     * - 1: Yes.
     * &gt; **NOTE:**  When the value of version_code is level7 or level10, the purchase is allowed. Other versions do not need to be purchased separately.
     * 
     */
    public Optional<Output<String>> vulSwitch() {
        return Optional.ofNullable(this.vulSwitch);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.buyNumber = $.buyNumber;
        this.containerImageScan = $.containerImageScan;
        this.containerImageScanNew = $.containerImageScanNew;
        this.honeypot = $.honeypot;
        this.honeypotSwitch = $.honeypotSwitch;
        this.modifyType = $.modifyType;
        this.paymentType = $.paymentType;
        this.period = $.period;
        this.raspCount = $.raspCount;
        this.renewPeriod = $.renewPeriod;
        this.renewalPeriodUnit = $.renewalPeriodUnit;
        this.renewalStatus = $.renewalStatus;
        this.sasAntiRansomware = $.sasAntiRansomware;
        this.sasCspm = $.sasCspm;
        this.sasCspmSwitch = $.sasCspmSwitch;
        this.sasSc = $.sasSc;
        this.sasSdk = $.sasSdk;
        this.sasSdkSwitch = $.sasSdkSwitch;
        this.sasSlsStorage = $.sasSlsStorage;
        this.sasWebguardBoolean = $.sasWebguardBoolean;
        this.sasWebguardOrderNum = $.sasWebguardOrderNum;
        this.threatAnalysis = $.threatAnalysis;
        this.threatAnalysisSwitch = $.threatAnalysisSwitch;
        this.vCore = $.vCore;
        this.versionCode = $.versionCode;
        this.vulCount = $.vulCount;
        this.vulSwitch = $.vulSwitch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buyNumber Number of servers.
         * 
         * @return builder
         * 
         */
        public Builder buyNumber(@Nullable Output<String> buyNumber) {
            $.buyNumber = buyNumber;
            return this;
        }

        /**
         * @param buyNumber Number of servers.
         * 
         * @return builder
         * 
         */
        public Builder buyNumber(String buyNumber) {
            return buyNumber(Output.of(buyNumber));
        }

        /**
         * @param containerImageScan Container Image security scan. Interval type, value interval:[0,200000].
         * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;container_image_scan&#39; has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].&gt; The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         */
        @Deprecated /* Field 'container_image_scan' has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].> The step size is 20, that is, only multiples of 20 can be filled in. */
        public Builder containerImageScan(@Nullable Output<String> containerImageScan) {
            $.containerImageScan = containerImageScan;
            return this;
        }

        /**
         * @param containerImageScan Container Image security scan. Interval type, value interval:[0,200000].
         * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;container_image_scan&#39; has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].&gt; The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         */
        @Deprecated /* Field 'container_image_scan' has been deprecated from provider version 1.212.0. Container Image security scan. Interval type, value interval:[0,200000].> The step size is 20, that is, only multiples of 20 can be filled in. */
        public Builder containerImageScan(String containerImageScan) {
            return containerImageScan(Output.of(containerImageScan));
        }

        /**
         * @param containerImageScanNew Container Image security scan. Interval type, value interval:[0,200000].
         * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder containerImageScanNew(@Nullable Output<String> containerImageScanNew) {
            $.containerImageScanNew = containerImageScanNew;
            return this;
        }

        /**
         * @param containerImageScanNew Container Image security scan. Interval type, value interval:[0,200000].
         * &gt; **NOTE:**  The step size is 20, that is, only multiples of 20 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder containerImageScanNew(String containerImageScanNew) {
            return containerImageScanNew(Output.of(containerImageScanNew));
        }

        /**
         * @param honeypot Number of cloud honeypot licenses. Interval type, value interval:[20,500].
         * &gt; **NOTE:**  This module can only be purchased when honeypot_switch = 1, starting with 20.
         * 
         * @return builder
         * 
         */
        public Builder honeypot(@Nullable Output<String> honeypot) {
            $.honeypot = honeypot;
            return this;
        }

        /**
         * @param honeypot Number of cloud honeypot licenses. Interval type, value interval:[20,500].
         * &gt; **NOTE:**  This module can only be purchased when honeypot_switch = 1, starting with 20.
         * 
         * @return builder
         * 
         */
        public Builder honeypot(String honeypot) {
            return honeypot(Output.of(honeypot));
        }

        /**
         * @param honeypotSwitch Cloud honeypot. Value:
         * - 1: Yes.
         * - 2: No.
         * 
         * @return builder
         * 
         */
        public Builder honeypotSwitch(@Nullable Output<String> honeypotSwitch) {
            $.honeypotSwitch = honeypotSwitch;
            return this;
        }

        /**
         * @param honeypotSwitch Cloud honeypot. Value:
         * - 1: Yes.
         * - 2: No.
         * 
         * @return builder
         * 
         */
        public Builder honeypotSwitch(String honeypotSwitch) {
            return honeypotSwitch(Output.of(honeypotSwitch));
        }

        /**
         * @param modifyType Change configuration type, value
         * - Upgrade: Upgrade.
         * - Downgrade: Downgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(@Nullable Output<String> modifyType) {
            $.modifyType = modifyType;
            return this;
        }

        /**
         * @param modifyType Change configuration type, value
         * - Upgrade: Upgrade.
         * - Downgrade: Downgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(String modifyType) {
            return modifyType(Output.of(modifyType));
        }

        /**
         * @param paymentType The payment type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param period Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
         * &gt; **NOTE:**  must be set when creating a prepaid instance.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
         * &gt; **NOTE:**  must be set when creating a prepaid instance.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param raspCount Number of application protection licenses. Interval type, value interval:[1,100000000].
         * 
         * @return builder
         * 
         */
        public Builder raspCount(@Nullable Output<String> raspCount) {
            $.raspCount = raspCount;
            return this;
        }

        /**
         * @param raspCount Number of application protection licenses. Interval type, value interval:[1,100000000].
         * 
         * @return builder
         * 
         */
        public Builder raspCount(String raspCount) {
            return raspCount(Output.of(raspCount));
        }

        /**
         * @param renewPeriod Automatic renewal cycle, in months.
         * &gt; **NOTE:**  When **RenewalStatus** is set to **AutoRenewal**, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Automatic renewal cycle, in months.
         * &gt; **NOTE:**  When **RenewalStatus** is set to **AutoRenewal**, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewalPeriodUnit Automatic renewal period unit, value:
         * - M: month.
         * - Y: years.
         * &gt; **NOTE:**  Must be set when RenewalStatus = AutoRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalPeriodUnit(@Nullable Output<String> renewalPeriodUnit) {
            $.renewalPeriodUnit = renewalPeriodUnit;
            return this;
        }

        /**
         * @param renewalPeriodUnit Automatic renewal period unit, value:
         * - M: month.
         * - Y: years.
         * &gt; **NOTE:**  Must be set when RenewalStatus = AutoRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalPeriodUnit(String renewalPeriodUnit) {
            return renewalPeriodUnit(Output.of(renewalPeriodUnit));
        }

        /**
         * @param renewalStatus Automatic renewal status, default ManualRenewal, valid values:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Automatic renewal status, default ManualRenewal, valid values:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param sasAntiRansomware Anti-ransomware capacity. Unit: GB. Interval type, value interval:[0,9999999999].
         * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasAntiRansomware(@Nullable Output<String> sasAntiRansomware) {
            $.sasAntiRansomware = sasAntiRansomware;
            return this;
        }

        /**
         * @param sasAntiRansomware Anti-ransomware capacity. Unit: GB. Interval type, value interval:[0,9999999999].
         * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasAntiRansomware(String sasAntiRansomware) {
            return sasAntiRansomware(Output.of(sasAntiRansomware));
        }

        /**
         * @param sasCspm Cloud platform configuration check scan times, interval type, value range:[1000,9999999999].
         * &gt; **NOTE:**  You must have sas_cspm_switch = 1 to purchase this module. The step size is 100, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasCspm(@Nullable Output<String> sasCspm) {
            $.sasCspm = sasCspm;
            return this;
        }

        /**
         * @param sasCspm Cloud platform configuration check scan times, interval type, value range:[1000,9999999999].
         * &gt; **NOTE:**  You must have sas_cspm_switch = 1 to purchase this module. The step size is 100, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasCspm(String sasCspm) {
            return sasCspm(Output.of(sasCspm));
        }

        /**
         * @param sasCspmSwitch Cloud platform configuration check switch. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasCspmSwitch(@Nullable Output<String> sasCspmSwitch) {
            $.sasCspmSwitch = sasCspmSwitch;
            return this;
        }

        /**
         * @param sasCspmSwitch Cloud platform configuration check switch. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasCspmSwitch(String sasCspmSwitch) {
            return sasCspmSwitch(Output.of(sasCspmSwitch));
        }

        /**
         * @param sasSc Security screen. Value:
         * - true: Yes.
         * - false: No.
         * 
         * @return builder
         * 
         */
        public Builder sasSc(@Nullable Output<Boolean> sasSc) {
            $.sasSc = sasSc;
            return this;
        }

        /**
         * @param sasSc Security screen. Value:
         * - true: Yes.
         * - false: No.
         * 
         * @return builder
         * 
         */
        public Builder sasSc(Boolean sasSc) {
            return sasSc(Output.of(sasSc));
        }

        /**
         * @param sasSdk Number of malicious file detections. Unit: 10,000 times. Interval type, value interval:[10,9999999999].
         * &gt; **NOTE:**  This module can only be purchased when sas_sdk_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasSdk(@Nullable Output<String> sasSdk) {
            $.sasSdk = sasSdk;
            return this;
        }

        /**
         * @param sasSdk Number of malicious file detections. Unit: 10,000 times. Interval type, value interval:[10,9999999999].
         * &gt; **NOTE:**  This module can only be purchased when sas_sdk_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasSdk(String sasSdk) {
            return sasSdk(Output.of(sasSdk));
        }

        /**
         * @param sasSdkSwitch Malicious file detection SDK.
         * 
         * @return builder
         * 
         */
        public Builder sasSdkSwitch(@Nullable Output<String> sasSdkSwitch) {
            $.sasSdkSwitch = sasSdkSwitch;
            return this;
        }

        /**
         * @param sasSdkSwitch Malicious file detection SDK.
         * 
         * @return builder
         * 
         */
        public Builder sasSdkSwitch(String sasSdkSwitch) {
            return sasSdkSwitch(Output.of(sasSdkSwitch));
        }

        /**
         * @param sasSlsStorage Log analysis storage capacity. Unit: GB. Interval type, value interval:[0,600000].
         * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasSlsStorage(@Nullable Output<String> sasSlsStorage) {
            $.sasSlsStorage = sasSlsStorage;
            return this;
        }

        /**
         * @param sasSlsStorage Log analysis storage capacity. Unit: GB. Interval type, value interval:[0,600000].
         * &gt; **NOTE:**  The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder sasSlsStorage(String sasSlsStorage) {
            return sasSlsStorage(Output.of(sasSlsStorage));
        }

        /**
         * @param sasWebguardBoolean Web tamper-proof switch. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasWebguardBoolean(@Nullable Output<String> sasWebguardBoolean) {
            $.sasWebguardBoolean = sasWebguardBoolean;
            return this;
        }

        /**
         * @param sasWebguardBoolean Web tamper-proof switch. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasWebguardBoolean(String sasWebguardBoolean) {
            return sasWebguardBoolean(Output.of(sasWebguardBoolean));
        }

        /**
         * @param sasWebguardOrderNum Tamper-proof authorization number. Value:
         * - 0: No
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasWebguardOrderNum(@Nullable Output<String> sasWebguardOrderNum) {
            $.sasWebguardOrderNum = sasWebguardOrderNum;
            return this;
        }

        /**
         * @param sasWebguardOrderNum Tamper-proof authorization number. Value:
         * - 0: No
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder sasWebguardOrderNum(String sasWebguardOrderNum) {
            return sasWebguardOrderNum(Output.of(sasWebguardOrderNum));
        }

        /**
         * @param threatAnalysis Threat Analysis log storage capacity. Interval type, value interval:[0,9999999999].
         * &gt; **NOTE:**  This module can only be purchased when Threat_analysis_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder threatAnalysis(@Nullable Output<String> threatAnalysis) {
            $.threatAnalysis = threatAnalysis;
            return this;
        }

        /**
         * @param threatAnalysis Threat Analysis log storage capacity. Interval type, value interval:[0,9999999999].
         * &gt; **NOTE:**  This module can only be purchased when Threat_analysis_switch = 1. The step size is 10, that is, only multiples of 10 can be filled in.
         * 
         * @return builder
         * 
         */
        public Builder threatAnalysis(String threatAnalysis) {
            return threatAnalysis(Output.of(threatAnalysis));
        }

        /**
         * @param threatAnalysisSwitch Threat analysis. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder threatAnalysisSwitch(@Nullable Output<String> threatAnalysisSwitch) {
            $.threatAnalysisSwitch = threatAnalysisSwitch;
            return this;
        }

        /**
         * @param threatAnalysisSwitch Threat analysis. Value:
         * - 0: No.
         * - 1: Yes.
         * 
         * @return builder
         * 
         */
        public Builder threatAnalysisSwitch(String threatAnalysisSwitch) {
            return threatAnalysisSwitch(Output.of(threatAnalysisSwitch));
        }

        /**
         * @param vCore Number of cores.
         * 
         * @return builder
         * 
         */
        public Builder vCore(@Nullable Output<String> vCore) {
            $.vCore = vCore;
            return this;
        }

        /**
         * @param vCore Number of cores.
         * 
         * @return builder
         * 
         */
        public Builder vCore(String vCore) {
            return vCore(Output.of(vCore));
        }

        /**
         * @param versionCode Select the security center version. Value:
         * - level7: Antivirus Edition.
         * - level3: Premium version.
         * - level2: Enterprise Edition.
         * - level8: Ultimate.
         * - level10: Purchase value-added services only.
         * 
         * @return builder
         * 
         */
        public Builder versionCode(Output<String> versionCode) {
            $.versionCode = versionCode;
            return this;
        }

        /**
         * @param versionCode Select the security center version. Value:
         * - level7: Antivirus Edition.
         * - level3: Premium version.
         * - level2: Enterprise Edition.
         * - level8: Ultimate.
         * - level10: Purchase value-added services only.
         * 
         * @return builder
         * 
         */
        public Builder versionCode(String versionCode) {
            return versionCode(Output.of(versionCode));
        }

        /**
         * @param vulCount Vulnerability repair times, interval type, value range:[20,100000000].
         * &gt; **NOTE:**  This module can only be purchased when vul_switch = 1. Only when the version_code value is level7 or level10. other versions do not need to be purchased separately.
         * 
         * @return builder
         * 
         */
        public Builder vulCount(@Nullable Output<String> vulCount) {
            $.vulCount = vulCount;
            return this;
        }

        /**
         * @param vulCount Vulnerability repair times, interval type, value range:[20,100000000].
         * &gt; **NOTE:**  This module can only be purchased when vul_switch = 1. Only when the version_code value is level7 or level10. other versions do not need to be purchased separately.
         * 
         * @return builder
         * 
         */
        public Builder vulCount(String vulCount) {
            return vulCount(Output.of(vulCount));
        }

        /**
         * @param vulSwitch Vulnerability fix switch. Value:
         * - 0: No.
         * - 1: Yes.
         * &gt; **NOTE:**  When the value of version_code is level7 or level10, the purchase is allowed. Other versions do not need to be purchased separately.
         * 
         * @return builder
         * 
         */
        public Builder vulSwitch(@Nullable Output<String> vulSwitch) {
            $.vulSwitch = vulSwitch;
            return this;
        }

        /**
         * @param vulSwitch Vulnerability fix switch. Value:
         * - 0: No.
         * - 1: Yes.
         * &gt; **NOTE:**  When the value of version_code is level7 or level10, the purchase is allowed. Other versions do not need to be purchased separately.
         * 
         * @return builder
         * 
         */
        public Builder vulSwitch(String vulSwitch) {
            return vulSwitch(Output.of(vulSwitch));
        }

        public InstanceArgs build() {
            $.paymentType = Objects.requireNonNull($.paymentType, "expected parameter 'paymentType' to be non-null");
            $.versionCode = Objects.requireNonNull($.versionCode, "expected parameter 'versionCode' to be non-null");
            return $;
        }
    }

}
