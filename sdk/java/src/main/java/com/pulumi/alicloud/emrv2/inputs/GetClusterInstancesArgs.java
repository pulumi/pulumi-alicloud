// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterInstancesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterInstancesArgs Empty = new GetClusterInstancesArgs();

    /**
     * The emr cluster ID.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The emr cluster ID.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * A list of Cluster IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Cluster IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The cluster ecs instance states.
     * 
     */
    @Import(name="instanceStates")
    private @Nullable Output<List<String>> instanceStates;

    /**
     * @return The cluster ecs instance states.
     * 
     */
    public Optional<Output<List<String>>> instanceStates() {
        return Optional.ofNullable(this.instanceStates);
    }

    /**
     * The max results is used to list emr cluster ecs instances for next page.
     * 
     */
    @Import(name="maxResults")
    private @Nullable Output<Integer> maxResults;

    /**
     * @return The max results is used to list emr cluster ecs instances for next page.
     * 
     */
    public Optional<Output<Integer>> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }

    /**
     * The next token is used to list emr cluster ecs instances for next page.
     * 
     */
    @Import(name="nextToken")
    private @Nullable Output<String> nextToken;

    /**
     * @return The next token is used to list emr cluster ecs instances for next page.
     * 
     */
    public Optional<Output<String>> nextToken() {
        return Optional.ofNullable(this.nextToken);
    }

    /**
     * The cluster node group ids.
     * 
     */
    @Import(name="nodeGroupIds")
    private @Nullable Output<List<String>> nodeGroupIds;

    /**
     * @return The cluster node group ids.
     * 
     */
    public Optional<Output<List<String>>> nodeGroupIds() {
        return Optional.ofNullable(this.nodeGroupIds);
    }

    /**
     * The cluster node group names.
     * 
     */
    @Import(name="nodeGroupNames")
    private @Nullable Output<List<String>> nodeGroupNames;

    /**
     * @return The cluster node group names.
     * 
     */
    public Optional<Output<List<String>>> nodeGroupNames() {
        return Optional.ofNullable(this.nodeGroupNames);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetClusterInstancesArgs() {}

    private GetClusterInstancesArgs(GetClusterInstancesArgs $) {
        this.clusterId = $.clusterId;
        this.ids = $.ids;
        this.instanceStates = $.instanceStates;
        this.maxResults = $.maxResults;
        this.nextToken = $.nextToken;
        this.nodeGroupIds = $.nodeGroupIds;
        this.nodeGroupNames = $.nodeGroupNames;
        this.outputFile = $.outputFile;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterInstancesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterInstancesArgs $;

        public Builder() {
            $ = new GetClusterInstancesArgs();
        }

        public Builder(GetClusterInstancesArgs defaults) {
            $ = new GetClusterInstancesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The emr cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The emr cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param ids A list of Cluster IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Cluster IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Cluster IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param instanceStates The cluster ecs instance states.
         * 
         * @return builder
         * 
         */
        public Builder instanceStates(@Nullable Output<List<String>> instanceStates) {
            $.instanceStates = instanceStates;
            return this;
        }

        /**
         * @param instanceStates The cluster ecs instance states.
         * 
         * @return builder
         * 
         */
        public Builder instanceStates(List<String> instanceStates) {
            return instanceStates(Output.of(instanceStates));
        }

        /**
         * @param instanceStates The cluster ecs instance states.
         * 
         * @return builder
         * 
         */
        public Builder instanceStates(String... instanceStates) {
            return instanceStates(List.of(instanceStates));
        }

        /**
         * @param maxResults The max results is used to list emr cluster ecs instances for next page.
         * 
         * @return builder
         * 
         */
        public Builder maxResults(@Nullable Output<Integer> maxResults) {
            $.maxResults = maxResults;
            return this;
        }

        /**
         * @param maxResults The max results is used to list emr cluster ecs instances for next page.
         * 
         * @return builder
         * 
         */
        public Builder maxResults(Integer maxResults) {
            return maxResults(Output.of(maxResults));
        }

        /**
         * @param nextToken The next token is used to list emr cluster ecs instances for next page.
         * 
         * @return builder
         * 
         */
        public Builder nextToken(@Nullable Output<String> nextToken) {
            $.nextToken = nextToken;
            return this;
        }

        /**
         * @param nextToken The next token is used to list emr cluster ecs instances for next page.
         * 
         * @return builder
         * 
         */
        public Builder nextToken(String nextToken) {
            return nextToken(Output.of(nextToken));
        }

        /**
         * @param nodeGroupIds The cluster node group ids.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupIds(@Nullable Output<List<String>> nodeGroupIds) {
            $.nodeGroupIds = nodeGroupIds;
            return this;
        }

        /**
         * @param nodeGroupIds The cluster node group ids.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupIds(List<String> nodeGroupIds) {
            return nodeGroupIds(Output.of(nodeGroupIds));
        }

        /**
         * @param nodeGroupIds The cluster node group ids.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupIds(String... nodeGroupIds) {
            return nodeGroupIds(List.of(nodeGroupIds));
        }

        /**
         * @param nodeGroupNames The cluster node group names.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupNames(@Nullable Output<List<String>> nodeGroupNames) {
            $.nodeGroupNames = nodeGroupNames;
            return this;
        }

        /**
         * @param nodeGroupNames The cluster node group names.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupNames(List<String> nodeGroupNames) {
            return nodeGroupNames(Output.of(nodeGroupNames));
        }

        /**
         * @param nodeGroupNames The cluster node group names.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroupNames(String... nodeGroupNames) {
            return nodeGroupNames(List.of(nodeGroupNames));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetClusterInstancesArgs build() {
            return $;
        }
    }

}
