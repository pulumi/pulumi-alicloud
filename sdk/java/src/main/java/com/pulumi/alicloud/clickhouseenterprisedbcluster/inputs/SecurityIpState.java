// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.clickhouseenterprisedbcluster.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityIpState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityIpState Empty = new SecurityIpState();

    /**
     * The cluster ID.
     * 
     */
    @Import(name="dbInstanceId")
    private @Nullable Output<String> dbInstanceId;

    /**
     * @return The cluster ID.
     * 
     */
    public Optional<Output<String>> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }

    /**
     * The whitelist name.
     * 
     */
    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    /**
     * @return The whitelist name.
     * 
     */
    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * The IP address list under the whitelist group.
     * 
     */
    @Import(name="securityIpList")
    private @Nullable Output<String> securityIpList;

    /**
     * @return The IP address list under the whitelist group.
     * 
     */
    public Optional<Output<String>> securityIpList() {
        return Optional.ofNullable(this.securityIpList);
    }

    private SecurityIpState() {}

    private SecurityIpState(SecurityIpState $) {
        this.dbInstanceId = $.dbInstanceId;
        this.groupName = $.groupName;
        this.securityIpList = $.securityIpList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityIpState $;

        public Builder() {
            $ = new SecurityIpState();
        }

        public Builder(SecurityIpState defaults) {
            $ = new SecurityIpState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbInstanceId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(@Nullable Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param groupName The whitelist name.
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The whitelist name.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param securityIpList The IP address list under the whitelist group.
         * 
         * @return builder
         * 
         */
        public Builder securityIpList(@Nullable Output<String> securityIpList) {
            $.securityIpList = securityIpList;
            return this;
        }

        /**
         * @param securityIpList The IP address list under the whitelist group.
         * 
         * @return builder
         * 
         */
        public Builder securityIpList(String securityIpList) {
            return securityIpList(Output.of(securityIpList));
        }

        public SecurityIpState build() {
            return $;
        }
    }

}
