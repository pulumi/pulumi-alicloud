// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDeployGroupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDeployGroupsArgs Empty = new GetDeployGroupsArgs();

    /**
     * ID of the EDAS application.
     * 
     */
    @Import(name="appId", required=true)
    private Output<String> appId;

    /**
     * @return ID of the EDAS application.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }

    /**
     * A regex string to filter results by the deploy group name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by the deploy group name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetDeployGroupsArgs() {}

    private GetDeployGroupsArgs(GetDeployGroupsArgs $) {
        this.appId = $.appId;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeployGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeployGroupsArgs $;

        public Builder() {
            $ = new GetDeployGroupsArgs();
        }

        public Builder(GetDeployGroupsArgs defaults) {
            $ = new GetDeployGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId ID of the EDAS application.
         * 
         * @return builder
         * 
         */
        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId ID of the EDAS application.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param nameRegex A regex string to filter results by the deploy group name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by the deploy group name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public GetDeployGroupsArgs build() {
            if ($.appId == null) {
                throw new MissingRequiredPropertyException("GetDeployGroupsArgs", "appId");
            }
            return $;
        }
    }

}
