// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alikafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
     * 
     */
    @Import(name="config")
    private @Nullable Output<String> config;

    /**
     * @return The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
     * 
     */
    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * - 4: eip/vpc instance
     * - 5: vpc instance.
     * 
     */
    @Import(name="deployType")
    private @Nullable Output<Integer> deployType;

    /**
     * @return The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * - 4: eip/vpc instance
     * - 5: vpc instance.
     * 
     */
    public Optional<Output<Integer>> deployType() {
        return Optional.ofNullable(this.deployType);
    }

    /**
     * The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     * 
     */
    @Import(name="diskSize")
    private @Nullable Output<Integer> diskSize;

    /**
     * @return The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     * 
     */
    public Optional<Output<Integer>> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }

    /**
     * The disk type of the instance. 0: efficient cloud disk , 1: SSD.
     * 
     */
    @Import(name="diskType")
    private @Nullable Output<Integer> diskType;

    /**
     * @return The disk type of the instance. 0: efficient cloud disk , 1: SSD.
     * 
     */
    public Optional<Output<Integer>> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
     * 
     */
    @Import(name="eipMax")
    private @Nullable Output<Integer> eipMax;

    /**
     * @return The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
     * 
     */
    public Optional<Output<Integer>> eipMax() {
        return Optional.ofNullable(this.eipMax);
    }

    /**
     * The EndPoint to access the kafka instance.
     * 
     */
    @Import(name="endPoint")
    private @Nullable Output<String> endPoint;

    /**
     * @return The EndPoint to access the kafka instance.
     * 
     */
    public Optional<Output<String>> endPoint() {
        return Optional.ofNullable(this.endPoint);
    }

    /**
     * (Available since v1.214.1) The number of available groups.
     * 
     */
    @Import(name="groupLeft")
    private @Nullable Output<Integer> groupLeft;

    /**
     * @return (Available since v1.214.1) The number of available groups.
     * 
     */
    public Optional<Output<Integer>> groupLeft() {
        return Optional.ofNullable(this.groupLeft);
    }

    /**
     * (Available since v1.214.1) The number of used groups.
     * 
     */
    @Import(name="groupUsed")
    private @Nullable Output<Integer> groupUsed;

    /**
     * @return (Available since v1.214.1) The number of used groups.
     * 
     */
    public Optional<Output<Integer>> groupUsed() {
        return Optional.ofNullable(this.groupUsed);
    }

    /**
     * The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     * 
     */
    @Import(name="ioMax")
    private @Nullable Output<Integer> ioMax;

    /**
     * @return The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     * 
     */
    public Optional<Output<Integer>> ioMax() {
        return Optional.ofNullable(this.ioMax);
    }

    /**
     * The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     * 
     */
    @Import(name="ioMaxSpec")
    private @Nullable Output<String> ioMaxSpec;

    /**
     * @return The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     * 
     */
    public Optional<Output<String>> ioMaxSpec() {
        return Optional.ofNullable(this.ioMaxSpec);
    }

    /**
     * (Available since v1.214.1) The method that you use to purchase partitions.
     * 
     */
    @Import(name="isPartitionBuy")
    private @Nullable Output<Integer> isPartitionBuy;

    /**
     * @return (Available since v1.214.1) The method that you use to purchase partitions.
     * 
     */
    public Optional<Output<Integer>> isPartitionBuy() {
        return Optional.ofNullable(this.isPartitionBuy);
    }

    /**
     * The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The paid type of the instance. Support two type, &#34;PrePaid&#34;: pre paid type instance, &#34;PostPaid&#34;: post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
     * 
     */
    @Import(name="paidType")
    private @Nullable Output<String> paidType;

    /**
     * @return The paid type of the instance. Support two type, &#34;PrePaid&#34;: pre paid type instance, &#34;PostPaid&#34;: post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
     * 
     */
    public Optional<Output<String>> paidType() {
        return Optional.ofNullable(this.paidType);
    }

    /**
     * (Available since v1.214.1) The number of available partitions.
     * 
     */
    @Import(name="partitionLeft")
    private @Nullable Output<Integer> partitionLeft;

    /**
     * @return (Available since v1.214.1) The number of available partitions.
     * 
     */
    public Optional<Output<Integer>> partitionLeft() {
        return Optional.ofNullable(this.partitionLeft);
    }

    /**
     * The number of partitions.
     * 
     */
    @Import(name="partitionNum")
    private @Nullable Output<Integer> partitionNum;

    /**
     * @return The number of partitions.
     * 
     */
    public Optional<Output<Integer>> partitionNum() {
        return Optional.ofNullable(this.partitionNum);
    }

    /**
     * (Available since v1.214.1) The number of used partitions.
     * 
     */
    @Import(name="partitionUsed")
    private @Nullable Output<Integer> partitionUsed;

    /**
     * @return (Available since v1.214.1) The number of used partitions.
     * 
     */
    public Optional<Output<Integer>> partitionUsed() {
        return Optional.ofNullable(this.partitionUsed);
    }

    /**
     * The ID of security group for this instance. If the security group is empty, system will create a default one.
     * 
     */
    @Import(name="securityGroup")
    private @Nullable Output<String> securityGroup;

    /**
     * @return The ID of security group for this instance. If the security group is empty, system will create a default one.
     * 
     */
    public Optional<Output<String>> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }

    /**
     * The zones among which you want to deploy the instance.
     * 
     * &gt; **NOTE:** Arguments io_max, disk_size, topic_quota, eip_max should follow the following constraints.
     * 
     * | io_max | disk_size(min-max:lag) | topic_quota(min-max:lag) | eip_max(min-max:lag) |
     * |------|-------------|:----:|:-----:|
     * |20          |  500-6100:100   |   50-450:1  |    1-160:1  |
     * |30          |  800-6100:100   |   50-450:1  |    1-240:1  |
     * |60          |  1400-6100:100  |   80-450:1  |    1-500:1  |
     * |90          |  2100-6100:100  |   100-450:1 |    1-500:1  |
     * |120         |  2700-6100:100  |   150-450:1 |    1-500:1  |
     * 
     */
    @Import(name="selectedZones")
    private @Nullable Output<List<String>> selectedZones;

    /**
     * @return The zones among which you want to deploy the instance.
     * 
     * &gt; **NOTE:** Arguments io_max, disk_size, topic_quota, eip_max should follow the following constraints.
     * 
     * | io_max | disk_size(min-max:lag) | topic_quota(min-max:lag) | eip_max(min-max:lag) |
     * |------|-------------|:----:|:-----:|
     * |20          |  500-6100:100   |   50-450:1  |    1-160:1  |
     * |30          |  800-6100:100   |   50-450:1  |    1-240:1  |
     * |60          |  1400-6100:100  |   80-450:1  |    1-500:1  |
     * |90          |  2100-6100:100  |   100-450:1 |    1-500:1  |
     * |120         |  2700-6100:100  |   150-450:1 |    1-500:1  |
     * 
     */
    public Optional<Output<List<String>>> selectedZones() {
        return Optional.ofNullable(this.selectedZones);
    }

    /**
     * The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
     * 
     */
    @Import(name="serviceVersion")
    private @Nullable Output<String> serviceVersion;

    /**
     * @return The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
     * 
     */
    public Optional<Output<String>> serviceVersion() {
        return Optional.ofNullable(this.serviceVersion);
    }

    /**
     * The spec type of the instance. Support two type, &#34;normal&#34;: normal version instance, &#34;professional&#34;: professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
     * 
     */
    @Import(name="specType")
    private @Nullable Output<String> specType;

    /**
     * @return The spec type of the instance. Support two type, &#34;normal&#34;: normal version instance, &#34;professional&#34;: professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
     * 
     */
    public Optional<Output<String>> specType() {
        return Optional.ofNullable(this.specType);
    }

    /**
     * The status of the instance.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the instance.
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Available since v1.214.1) The number of available topics.
     * 
     */
    @Import(name="topicLeft")
    private @Nullable Output<Integer> topicLeft;

    /**
     * @return (Available since v1.214.1) The number of available topics.
     * 
     */
    public Optional<Output<Integer>> topicLeft() {
        return Optional.ofNullable(this.topicLeft);
    }

    /**
     * (Available since v1.214.1) The number of purchased topics.
     * 
     */
    @Import(name="topicNumOfBuy")
    private @Nullable Output<Integer> topicNumOfBuy;

    /**
     * @return (Available since v1.214.1) The number of purchased topics.
     * 
     */
    public Optional<Output<Integer>> topicNumOfBuy() {
        return Optional.ofNullable(this.topicNumOfBuy);
    }

    /**
     * The max num of topic can be creation of the instance.
     * It has been deprecated since version 1.194.0 and using `partition_num` instead.
     * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
     * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
     * 
     * @deprecated
     * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
     * 
     */
    @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
    @Import(name="topicQuota")
    private @Nullable Output<Integer> topicQuota;

    /**
     * @return The max num of topic can be creation of the instance.
     * It has been deprecated since version 1.194.0 and using `partition_num` instead.
     * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
     * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
     * 
     * @deprecated
     * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
     * 
     */
    @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
    public Optional<Output<Integer>> topicQuota() {
        return Optional.ofNullable(this.topicQuota);
    }

    /**
     * (Available since v1.214.1) The number of used topics.
     * 
     */
    @Import(name="topicUsed")
    private @Nullable Output<Integer> topicUsed;

    /**
     * @return (Available since v1.214.1) The number of used topics.
     * 
     */
    public Optional<Output<Integer>> topicUsed() {
        return Optional.ofNullable(this.topicUsed);
    }

    /**
     * The VPC ID of the instance.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The VPC ID of the instance.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of attaching vswitch to instance.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of attaching vswitch to instance.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The zone ID of the instance.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID of the instance.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.config = $.config;
        this.deployType = $.deployType;
        this.diskSize = $.diskSize;
        this.diskType = $.diskType;
        this.eipMax = $.eipMax;
        this.endPoint = $.endPoint;
        this.groupLeft = $.groupLeft;
        this.groupUsed = $.groupUsed;
        this.ioMax = $.ioMax;
        this.ioMaxSpec = $.ioMaxSpec;
        this.isPartitionBuy = $.isPartitionBuy;
        this.kmsKeyId = $.kmsKeyId;
        this.name = $.name;
        this.paidType = $.paidType;
        this.partitionLeft = $.partitionLeft;
        this.partitionNum = $.partitionNum;
        this.partitionUsed = $.partitionUsed;
        this.securityGroup = $.securityGroup;
        this.selectedZones = $.selectedZones;
        this.serviceVersion = $.serviceVersion;
        this.specType = $.specType;
        this.status = $.status;
        this.tags = $.tags;
        this.topicLeft = $.topicLeft;
        this.topicNumOfBuy = $.topicNumOfBuy;
        this.topicQuota = $.topicQuota;
        this.topicUsed = $.topicUsed;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The basic config for this instance. The input should be json type, only the following key allowed: enable.acl, enable.vpc_sasl_ssl, kafka.log.retention.hours, kafka.message.max.bytes.
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param deployType The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
         * - 4: eip/vpc instance
         * - 5: vpc instance.
         * 
         * @return builder
         * 
         */
        public Builder deployType(@Nullable Output<Integer> deployType) {
            $.deployType = deployType;
            return this;
        }

        /**
         * @param deployType The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
         * - 4: eip/vpc instance
         * - 5: vpc instance.
         * 
         * @return builder
         * 
         */
        public Builder deployType(Integer deployType) {
            return deployType(Output.of(deployType));
        }

        /**
         * @param diskSize The disk size of the instance. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder diskSize(@Nullable Output<Integer> diskSize) {
            $.diskSize = diskSize;
            return this;
        }

        /**
         * @param diskSize The disk size of the instance. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder diskSize(Integer diskSize) {
            return diskSize(Output.of(diskSize));
        }

        /**
         * @param diskType The disk type of the instance. 0: efficient cloud disk , 1: SSD.
         * 
         * @return builder
         * 
         */
        public Builder diskType(@Nullable Output<Integer> diskType) {
            $.diskType = diskType;
            return this;
        }

        /**
         * @param diskType The disk type of the instance. 0: efficient cloud disk , 1: SSD.
         * 
         * @return builder
         * 
         */
        public Builder diskType(Integer diskType) {
            return diskType(Output.of(diskType));
        }

        /**
         * @param eipMax The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder eipMax(@Nullable Output<Integer> eipMax) {
            $.eipMax = eipMax;
            return this;
        }

        /**
         * @param eipMax The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder eipMax(Integer eipMax) {
            return eipMax(Output.of(eipMax));
        }

        /**
         * @param endPoint The EndPoint to access the kafka instance.
         * 
         * @return builder
         * 
         */
        public Builder endPoint(@Nullable Output<String> endPoint) {
            $.endPoint = endPoint;
            return this;
        }

        /**
         * @param endPoint The EndPoint to access the kafka instance.
         * 
         * @return builder
         * 
         */
        public Builder endPoint(String endPoint) {
            return endPoint(Output.of(endPoint));
        }

        /**
         * @param groupLeft (Available since v1.214.1) The number of available groups.
         * 
         * @return builder
         * 
         */
        public Builder groupLeft(@Nullable Output<Integer> groupLeft) {
            $.groupLeft = groupLeft;
            return this;
        }

        /**
         * @param groupLeft (Available since v1.214.1) The number of available groups.
         * 
         * @return builder
         * 
         */
        public Builder groupLeft(Integer groupLeft) {
            return groupLeft(Output.of(groupLeft));
        }

        /**
         * @param groupUsed (Available since v1.214.1) The number of used groups.
         * 
         * @return builder
         * 
         */
        public Builder groupUsed(@Nullable Output<Integer> groupUsed) {
            $.groupUsed = groupUsed;
            return this;
        }

        /**
         * @param groupUsed (Available since v1.214.1) The number of used groups.
         * 
         * @return builder
         * 
         */
        public Builder groupUsed(Integer groupUsed) {
            return groupUsed(Output.of(groupUsed));
        }

        /**
         * @param ioMax The max value of io of the instance. When modify this value, it only support adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder ioMax(@Nullable Output<Integer> ioMax) {
            $.ioMax = ioMax;
            return this;
        }

        /**
         * @param ioMax The max value of io of the instance. When modify this value, it only support adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder ioMax(Integer ioMax) {
            return ioMax(Output.of(ioMax));
        }

        /**
         * @param ioMaxSpec The traffic specification of the instance. We recommend that you configure this parameter.
         * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
         * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
         * 
         * @return builder
         * 
         */
        public Builder ioMaxSpec(@Nullable Output<String> ioMaxSpec) {
            $.ioMaxSpec = ioMaxSpec;
            return this;
        }

        /**
         * @param ioMaxSpec The traffic specification of the instance. We recommend that you configure this parameter.
         * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
         * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
         * 
         * @return builder
         * 
         */
        public Builder ioMaxSpec(String ioMaxSpec) {
            return ioMaxSpec(Output.of(ioMaxSpec));
        }

        /**
         * @param isPartitionBuy (Available since v1.214.1) The method that you use to purchase partitions.
         * 
         * @return builder
         * 
         */
        public Builder isPartitionBuy(@Nullable Output<Integer> isPartitionBuy) {
            $.isPartitionBuy = isPartitionBuy;
            return this;
        }

        /**
         * @param isPartitionBuy (Available since v1.214.1) The method that you use to purchase partitions.
         * 
         * @return builder
         * 
         */
        public Builder isPartitionBuy(Integer isPartitionBuy) {
            return isPartitionBuy(Output.of(isPartitionBuy));
        }

        /**
         * @param kmsKeyId The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The ID of the key that is used to encrypt data on standard SSDs in the region of the instance.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param name Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param paidType The paid type of the instance. Support two type, &#34;PrePaid&#34;: pre paid type instance, &#34;PostPaid&#34;: post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
         * 
         * @return builder
         * 
         */
        public Builder paidType(@Nullable Output<String> paidType) {
            $.paidType = paidType;
            return this;
        }

        /**
         * @param paidType The paid type of the instance. Support two type, &#34;PrePaid&#34;: pre paid type instance, &#34;PostPaid&#34;: post paid type instance. Default is PostPaid. When modify this value, it only support adjust from post pay to pre pay.
         * 
         * @return builder
         * 
         */
        public Builder paidType(String paidType) {
            return paidType(Output.of(paidType));
        }

        /**
         * @param partitionLeft (Available since v1.214.1) The number of available partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionLeft(@Nullable Output<Integer> partitionLeft) {
            $.partitionLeft = partitionLeft;
            return this;
        }

        /**
         * @param partitionLeft (Available since v1.214.1) The number of available partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionLeft(Integer partitionLeft) {
            return partitionLeft(Output.of(partitionLeft));
        }

        /**
         * @param partitionNum The number of partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionNum(@Nullable Output<Integer> partitionNum) {
            $.partitionNum = partitionNum;
            return this;
        }

        /**
         * @param partitionNum The number of partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionNum(Integer partitionNum) {
            return partitionNum(Output.of(partitionNum));
        }

        /**
         * @param partitionUsed (Available since v1.214.1) The number of used partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionUsed(@Nullable Output<Integer> partitionUsed) {
            $.partitionUsed = partitionUsed;
            return this;
        }

        /**
         * @param partitionUsed (Available since v1.214.1) The number of used partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionUsed(Integer partitionUsed) {
            return partitionUsed(Output.of(partitionUsed));
        }

        /**
         * @param securityGroup The ID of security group for this instance. If the security group is empty, system will create a default one.
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(@Nullable Output<String> securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        /**
         * @param securityGroup The ID of security group for this instance. If the security group is empty, system will create a default one.
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(String securityGroup) {
            return securityGroup(Output.of(securityGroup));
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance.
         * 
         * &gt; **NOTE:** Arguments io_max, disk_size, topic_quota, eip_max should follow the following constraints.
         * 
         * | io_max | disk_size(min-max:lag) | topic_quota(min-max:lag) | eip_max(min-max:lag) |
         * |------|-------------|:----:|:-----:|
         * |20          |  500-6100:100   |   50-450:1  |    1-160:1  |
         * |30          |  800-6100:100   |   50-450:1  |    1-240:1  |
         * |60          |  1400-6100:100  |   80-450:1  |    1-500:1  |
         * |90          |  2100-6100:100  |   100-450:1 |    1-500:1  |
         * |120         |  2700-6100:100  |   150-450:1 |    1-500:1  |
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(@Nullable Output<List<String>> selectedZones) {
            $.selectedZones = selectedZones;
            return this;
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance.
         * 
         * &gt; **NOTE:** Arguments io_max, disk_size, topic_quota, eip_max should follow the following constraints.
         * 
         * | io_max | disk_size(min-max:lag) | topic_quota(min-max:lag) | eip_max(min-max:lag) |
         * |------|-------------|:----:|:-----:|
         * |20          |  500-6100:100   |   50-450:1  |    1-160:1  |
         * |30          |  800-6100:100   |   50-450:1  |    1-240:1  |
         * |60          |  1400-6100:100  |   80-450:1  |    1-500:1  |
         * |90          |  2100-6100:100  |   100-450:1 |    1-500:1  |
         * |120         |  2700-6100:100  |   150-450:1 |    1-500:1  |
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(List<String> selectedZones) {
            return selectedZones(Output.of(selectedZones));
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance.
         * 
         * &gt; **NOTE:** Arguments io_max, disk_size, topic_quota, eip_max should follow the following constraints.
         * 
         * | io_max | disk_size(min-max:lag) | topic_quota(min-max:lag) | eip_max(min-max:lag) |
         * |------|-------------|:----:|:-----:|
         * |20          |  500-6100:100   |   50-450:1  |    1-160:1  |
         * |30          |  800-6100:100   |   50-450:1  |    1-240:1  |
         * |60          |  1400-6100:100  |   80-450:1  |    1-500:1  |
         * |90          |  2100-6100:100  |   100-450:1 |    1-500:1  |
         * |120         |  2700-6100:100  |   150-450:1 |    1-500:1  |
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(String... selectedZones) {
            return selectedZones(List.of(selectedZones));
        }

        /**
         * @param serviceVersion The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(@Nullable Output<String> serviceVersion) {
            $.serviceVersion = serviceVersion;
            return this;
        }

        /**
         * @param serviceVersion The kafka openSource version for this instance. Only 0.10.2 or 2.2.0 is allowed, default is 0.10.2.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(String serviceVersion) {
            return serviceVersion(Output.of(serviceVersion));
        }

        /**
         * @param specType The spec type of the instance. Support two type, &#34;normal&#34;: normal version instance, &#34;professional&#34;: professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
         * 
         * @return builder
         * 
         */
        public Builder specType(@Nullable Output<String> specType) {
            $.specType = specType;
            return this;
        }

        /**
         * @param specType The spec type of the instance. Support two type, &#34;normal&#34;: normal version instance, &#34;professional&#34;: professional version instance. Default is normal. When modify this value, it only support adjust from normal to professional. Note only pre paid type instance support professional specific type.
         * 
         * @return builder
         * 
         */
        public Builder specType(String specType) {
            return specType(Output.of(specType));
        }

        /**
         * @param status The status of the instance.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the instance.
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param topicLeft (Available since v1.214.1) The number of available topics.
         * 
         * @return builder
         * 
         */
        public Builder topicLeft(@Nullable Output<Integer> topicLeft) {
            $.topicLeft = topicLeft;
            return this;
        }

        /**
         * @param topicLeft (Available since v1.214.1) The number of available topics.
         * 
         * @return builder
         * 
         */
        public Builder topicLeft(Integer topicLeft) {
            return topicLeft(Output.of(topicLeft));
        }

        /**
         * @param topicNumOfBuy (Available since v1.214.1) The number of purchased topics.
         * 
         * @return builder
         * 
         */
        public Builder topicNumOfBuy(@Nullable Output<Integer> topicNumOfBuy) {
            $.topicNumOfBuy = topicNumOfBuy;
            return this;
        }

        /**
         * @param topicNumOfBuy (Available since v1.214.1) The number of purchased topics.
         * 
         * @return builder
         * 
         */
        public Builder topicNumOfBuy(Integer topicNumOfBuy) {
            return topicNumOfBuy(Output.of(topicNumOfBuy));
        }

        /**
         * @param topicQuota The max num of topic can be creation of the instance.
         * It has been deprecated since version 1.194.0 and using `partition_num` instead.
         * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
         * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
         * 
         */
        @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
        public Builder topicQuota(@Nullable Output<Integer> topicQuota) {
            $.topicQuota = topicQuota;
            return this;
        }

        /**
         * @param topicQuota The max num of topic can be creation of the instance.
         * It has been deprecated since version 1.194.0 and using `partition_num` instead.
         * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
         * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
         * 
         */
        @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
        public Builder topicQuota(Integer topicQuota) {
            return topicQuota(Output.of(topicQuota));
        }

        /**
         * @param topicUsed (Available since v1.214.1) The number of used topics.
         * 
         * @return builder
         * 
         */
        public Builder topicUsed(@Nullable Output<Integer> topicUsed) {
            $.topicUsed = topicUsed;
            return this;
        }

        /**
         * @param topicUsed (Available since v1.214.1) The number of used topics.
         * 
         * @return builder
         * 
         */
        public Builder topicUsed(Integer topicUsed) {
            return topicUsed(Output.of(topicUsed));
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The ID of attaching vswitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of attaching vswitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public InstanceState build() {
            return $;
        }
    }

}
