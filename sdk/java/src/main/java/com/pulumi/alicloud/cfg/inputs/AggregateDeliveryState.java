// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AggregateDeliveryState extends com.pulumi.resources.ResourceArgs {

    public static final AggregateDeliveryState Empty = new AggregateDeliveryState();

    /**
     * Aggregator ID.
     * 
     */
    @Import(name="aggregatorId")
    private @Nullable Output<String> aggregatorId;

    /**
     * @return Aggregator ID.
     * 
     */
    public Optional<Output<String>> aggregatorId() {
        return Optional.ofNullable(this.aggregatorId);
    }

    /**
     * Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
     * - true: The specified destination receives resource change logs.
     * - false: The specified destination does not receive resource change logs.
     * 
     */
    @Import(name="configurationItemChangeNotification")
    private @Nullable Output<Boolean> configurationItemChangeNotification;

    /**
     * @return Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
     * - true: The specified destination receives resource change logs.
     * - false: The specified destination does not receive resource change logs.
     * 
     */
    public Optional<Output<Boolean>> configurationItemChangeNotification() {
        return Optional.ofNullable(this.configurationItemChangeNotification);
    }

    /**
     * Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
     * - true: The specified destination receives scheduled resource snapshots.
     * - false: The specified destination does not receive scheduled resource snapshots.
     * 
     */
    @Import(name="configurationSnapshot")
    private @Nullable Output<Boolean> configurationSnapshot;

    /**
     * @return Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
     * - true: The specified destination receives scheduled resource snapshots.
     * - false: The specified destination does not receive scheduled resource snapshots.
     * 
     */
    public Optional<Output<Boolean>> configurationSnapshot() {
        return Optional.ofNullable(this.configurationSnapshot);
    }

    /**
     * The rule that is attached to the delivery channel.
     * 
     * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
     * 
     * If you specify the risk level or resource types for subscription events, this is as follows:
     * 
     * The lowest risk level of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;RuleRiskLevel&#34;,&#34;value&#34;:&#34;1&#34;,&#34;multiple&#34;:false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
     * 
     * The setting of the resource types of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ACK::Cluster&#34;,&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;],&#34;multiple&#34;:true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
     * 
     * Examples:[{&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;,&#34;ACS::CDN::Domain&#34;,&#34;ACS::CEN::CenBandwidthPackage&#34;,&#34;ACS::CEN::CenInstance&#34;,&#34;ACS::CEN::Flowlog&#34;,&#34;ACS::DdosCoo::Instance&#34;],&#34;multiple&#34;:true}].
     * 
     */
    @Import(name="deliveryChannelCondition")
    private @Nullable Output<String> deliveryChannelCondition;

    /**
     * @return The rule that is attached to the delivery channel.
     * 
     * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
     * 
     * If you specify the risk level or resource types for subscription events, this is as follows:
     * 
     * The lowest risk level of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;RuleRiskLevel&#34;,&#34;value&#34;:&#34;1&#34;,&#34;multiple&#34;:false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
     * 
     * The setting of the resource types of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ACK::Cluster&#34;,&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;],&#34;multiple&#34;:true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
     * 
     * Examples:[{&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;,&#34;ACS::CDN::Domain&#34;,&#34;ACS::CEN::CenBandwidthPackage&#34;,&#34;ACS::CEN::CenInstance&#34;,&#34;ACS::CEN::Flowlog&#34;,&#34;ACS::DdosCoo::Instance&#34;],&#34;multiple&#34;:true}].
     * 
     */
    public Optional<Output<String>> deliveryChannelCondition() {
        return Optional.ofNullable(this.deliveryChannelCondition);
    }

    /**
     * The ID of the delivery method. This parameter is required when you modify a delivery method.
     * 
     */
    @Import(name="deliveryChannelId")
    private @Nullable Output<String> deliveryChannelId;

    /**
     * @return The ID of the delivery method. This parameter is required when you modify a delivery method.
     * 
     */
    public Optional<Output<String>> deliveryChannelId() {
        return Optional.ofNullable(this.deliveryChannelId);
    }

    /**
     * The name of the delivery channel.
     * 
     */
    @Import(name="deliveryChannelName")
    private @Nullable Output<String> deliveryChannelName;

    /**
     * @return The name of the delivery channel.
     * 
     */
    public Optional<Output<String>> deliveryChannelName() {
        return Optional.ofNullable(this.deliveryChannelName);
    }

    /**
     * The ARN of the delivery destination.
     * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
     * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
     * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
     * 
     */
    @Import(name="deliveryChannelTargetArn")
    private @Nullable Output<String> deliveryChannelTargetArn;

    /**
     * @return The ARN of the delivery destination.
     * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
     * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
     * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
     * 
     */
    public Optional<Output<String>> deliveryChannelTargetArn() {
        return Optional.ofNullable(this.deliveryChannelTargetArn);
    }

    /**
     * The type of the delivery channel. Valid values:
     * - OSS: Object Storage Service (OSS)
     * - MNS: Message Service (MNS)
     * - SLS: Log Service
     * 
     */
    @Import(name="deliveryChannelType")
    private @Nullable Output<String> deliveryChannelType;

    /**
     * @return The type of the delivery channel. Valid values:
     * - OSS: Object Storage Service (OSS)
     * - MNS: Message Service (MNS)
     * - SLS: Log Service
     * 
     */
    public Optional<Output<String>> deliveryChannelType() {
        return Optional.ofNullable(this.deliveryChannelType);
    }

    /**
     * The description of the delivery method.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the delivery method.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
     * - true: The specified destination receives resource non-compliance events.
     * - false: The specified destination does not receive resource non-compliance events.
     * 
     */
    @Import(name="nonCompliantNotification")
    private @Nullable Output<Boolean> nonCompliantNotification;

    /**
     * @return Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
     * - true: The specified destination receives resource non-compliance events.
     * - false: The specified destination does not receive resource non-compliance events.
     * 
     */
    public Optional<Output<Boolean>> nonCompliantNotification() {
        return Optional.ofNullable(this.nonCompliantNotification);
    }

    /**
     * The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
     * 
     */
    @Import(name="oversizedDataOssTargetArn")
    private @Nullable Output<String> oversizedDataOssTargetArn;

    /**
     * @return The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
     * 
     */
    public Optional<Output<String>> oversizedDataOssTargetArn() {
        return Optional.ofNullable(this.oversizedDataOssTargetArn);
    }

    /**
     * The status of the delivery method. Valid values:
     * - 0: The delivery method is disabled.
     * - 1: The delivery destination is enabled. This is the default value.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the delivery method. Valid values:
     * - 0: The delivery method is disabled.
     * - 1: The delivery destination is enabled. This is the default value.
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    private AggregateDeliveryState() {}

    private AggregateDeliveryState(AggregateDeliveryState $) {
        this.aggregatorId = $.aggregatorId;
        this.configurationItemChangeNotification = $.configurationItemChangeNotification;
        this.configurationSnapshot = $.configurationSnapshot;
        this.deliveryChannelCondition = $.deliveryChannelCondition;
        this.deliveryChannelId = $.deliveryChannelId;
        this.deliveryChannelName = $.deliveryChannelName;
        this.deliveryChannelTargetArn = $.deliveryChannelTargetArn;
        this.deliveryChannelType = $.deliveryChannelType;
        this.description = $.description;
        this.nonCompliantNotification = $.nonCompliantNotification;
        this.oversizedDataOssTargetArn = $.oversizedDataOssTargetArn;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AggregateDeliveryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AggregateDeliveryState $;

        public Builder() {
            $ = new AggregateDeliveryState();
        }

        public Builder(AggregateDeliveryState defaults) {
            $ = new AggregateDeliveryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregatorId Aggregator ID.
         * 
         * @return builder
         * 
         */
        public Builder aggregatorId(@Nullable Output<String> aggregatorId) {
            $.aggregatorId = aggregatorId;
            return this;
        }

        /**
         * @param aggregatorId Aggregator ID.
         * 
         * @return builder
         * 
         */
        public Builder aggregatorId(String aggregatorId) {
            return aggregatorId(Output.of(aggregatorId));
        }

        /**
         * @param configurationItemChangeNotification Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
         * - true: The specified destination receives resource change logs.
         * - false: The specified destination does not receive resource change logs.
         * 
         * @return builder
         * 
         */
        public Builder configurationItemChangeNotification(@Nullable Output<Boolean> configurationItemChangeNotification) {
            $.configurationItemChangeNotification = configurationItemChangeNotification;
            return this;
        }

        /**
         * @param configurationItemChangeNotification Indicates whether the specified destination receives resource change logs. If the value of this parameter is true, Cloud Config delivers the resource change logs to OSS, Log Service, or MNS when the configurations of the resources change. Valid values:
         * - true: The specified destination receives resource change logs.
         * - false: The specified destination does not receive resource change logs.
         * 
         * @return builder
         * 
         */
        public Builder configurationItemChangeNotification(Boolean configurationItemChangeNotification) {
            return configurationItemChangeNotification(Output.of(configurationItemChangeNotification));
        }

        /**
         * @param configurationSnapshot Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
         * - true: The specified destination receives scheduled resource snapshots.
         * - false: The specified destination does not receive scheduled resource snapshots.
         * 
         * @return builder
         * 
         */
        public Builder configurationSnapshot(@Nullable Output<Boolean> configurationSnapshot) {
            $.configurationSnapshot = configurationSnapshot;
            return this;
        }

        /**
         * @param configurationSnapshot Indicates whether the specified destination receives scheduled resource snapshots. Cloud Config delivers scheduled resource snapshots at 04:00Z and 16:00Z to OSS, MNS, or Log Service every day. The time is displayed in UTC. Valid values:
         * - true: The specified destination receives scheduled resource snapshots.
         * - false: The specified destination does not receive scheduled resource snapshots.
         * 
         * @return builder
         * 
         */
        public Builder configurationSnapshot(Boolean configurationSnapshot) {
            return configurationSnapshot(Output.of(configurationSnapshot));
        }

        /**
         * @param deliveryChannelCondition The rule that is attached to the delivery channel.
         * 
         * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
         * 
         * If you specify the risk level or resource types for subscription events, this is as follows:
         * 
         * The lowest risk level of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;RuleRiskLevel&#34;,&#34;value&#34;:&#34;1&#34;,&#34;multiple&#34;:false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
         * 
         * The setting of the resource types of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ACK::Cluster&#34;,&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;],&#34;multiple&#34;:true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
         * 
         * Examples:[{&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;,&#34;ACS::CDN::Domain&#34;,&#34;ACS::CEN::CenBandwidthPackage&#34;,&#34;ACS::CEN::CenInstance&#34;,&#34;ACS::CEN::Flowlog&#34;,&#34;ACS::DdosCoo::Instance&#34;],&#34;multiple&#34;:true}].
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelCondition(@Nullable Output<String> deliveryChannelCondition) {
            $.deliveryChannelCondition = deliveryChannelCondition;
            return this;
        }

        /**
         * @param deliveryChannelCondition The rule that is attached to the delivery channel.
         * 
         * This parameter is available when you deliver data of all types to MNS or deliver snapshots to Log Service.
         * 
         * If you specify the risk level or resource types for subscription events, this is as follows:
         * 
         * The lowest risk level of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;RuleRiskLevel&#34;,&#34;value&#34;:&#34;1&#34;,&#34;multiple&#34;:false}, The value field indicates the risk level of the events to which you want to subscribe. Valid values: 1, 2, and 3. The value 1 indicates the high risk level, the value 2 indicates the medium risk level, and the value 3 indicates the low risk level.
         * 
         * The setting of the resource types of the events to which you want to subscribe is in the following format: {&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ACK::Cluster&#34;,&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;],&#34;multiple&#34;:true}, The values field indicates the resource types of the events to which you want to subscribe. The value of the field is a JSON array.
         * 
         * Examples:[{&#34;filterType&#34;:&#34;ResourceType&#34;,&#34;values&#34;:[&#34;ACS::ActionTrail::Trail&#34;,&#34;ACS::CBWP::CommonBandwidthPackage&#34;,&#34;ACS::CDN::Domain&#34;,&#34;ACS::CEN::CenBandwidthPackage&#34;,&#34;ACS::CEN::CenInstance&#34;,&#34;ACS::CEN::Flowlog&#34;,&#34;ACS::DdosCoo::Instance&#34;],&#34;multiple&#34;:true}].
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelCondition(String deliveryChannelCondition) {
            return deliveryChannelCondition(Output.of(deliveryChannelCondition));
        }

        /**
         * @param deliveryChannelId The ID of the delivery method. This parameter is required when you modify a delivery method.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelId(@Nullable Output<String> deliveryChannelId) {
            $.deliveryChannelId = deliveryChannelId;
            return this;
        }

        /**
         * @param deliveryChannelId The ID of the delivery method. This parameter is required when you modify a delivery method.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelId(String deliveryChannelId) {
            return deliveryChannelId(Output.of(deliveryChannelId));
        }

        /**
         * @param deliveryChannelName The name of the delivery channel.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelName(@Nullable Output<String> deliveryChannelName) {
            $.deliveryChannelName = deliveryChannelName;
            return this;
        }

        /**
         * @param deliveryChannelName The name of the delivery channel.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelName(String deliveryChannelName) {
            return deliveryChannelName(Output.of(deliveryChannelName));
        }

        /**
         * @param deliveryChannelTargetArn The ARN of the delivery destination.
         * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
         * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
         * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelTargetArn(@Nullable Output<String> deliveryChannelTargetArn) {
            $.deliveryChannelTargetArn = deliveryChannelTargetArn;
            return this;
        }

        /**
         * @param deliveryChannelTargetArn The ARN of the delivery destination.
         * - If the value of the DeliveryChannelType parameter is OSS, the value of this parameter is the ARN of the destination OSS bucket.
         * - If the value of the DeliveryChannelType parameter is MNS, the value of this parameter is the ARN of the destination MNS topic.
         * - If the value of the DeliveryChannelType parameter is SLS, the value of this parameter is the ARN of the destination Log Service Logstore.
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelTargetArn(String deliveryChannelTargetArn) {
            return deliveryChannelTargetArn(Output.of(deliveryChannelTargetArn));
        }

        /**
         * @param deliveryChannelType The type of the delivery channel. Valid values:
         * - OSS: Object Storage Service (OSS)
         * - MNS: Message Service (MNS)
         * - SLS: Log Service
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelType(@Nullable Output<String> deliveryChannelType) {
            $.deliveryChannelType = deliveryChannelType;
            return this;
        }

        /**
         * @param deliveryChannelType The type of the delivery channel. Valid values:
         * - OSS: Object Storage Service (OSS)
         * - MNS: Message Service (MNS)
         * - SLS: Log Service
         * 
         * @return builder
         * 
         */
        public Builder deliveryChannelType(String deliveryChannelType) {
            return deliveryChannelType(Output.of(deliveryChannelType));
        }

        /**
         * @param description The description of the delivery method.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the delivery method.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param nonCompliantNotification Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
         * - true: The specified destination receives resource non-compliance events.
         * - false: The specified destination does not receive resource non-compliance events.
         * 
         * @return builder
         * 
         */
        public Builder nonCompliantNotification(@Nullable Output<Boolean> nonCompliantNotification) {
            $.nonCompliantNotification = nonCompliantNotification;
            return this;
        }

        /**
         * @param nonCompliantNotification Indicates whether the specified destination receives resource non-compliance events. If the value of this parameter is true, Cloud Config delivers resource non-compliance events to Log Service or MNS when resources are evaluated as non-compliant. Valid values:
         * - true: The specified destination receives resource non-compliance events.
         * - false: The specified destination does not receive resource non-compliance events.
         * 
         * @return builder
         * 
         */
        public Builder nonCompliantNotification(Boolean nonCompliantNotification) {
            return nonCompliantNotification(Output.of(nonCompliantNotification));
        }

        /**
         * @param oversizedDataOssTargetArn The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
         * 
         * @return builder
         * 
         */
        public Builder oversizedDataOssTargetArn(@Nullable Output<String> oversizedDataOssTargetArn) {
            $.oversizedDataOssTargetArn = oversizedDataOssTargetArn;
            return this;
        }

        /**
         * @param oversizedDataOssTargetArn The ARN of the OSS bucket to which the delivered data is transferred when the size of the data exceeds the specified upper limit of the delivery channel.
         * 
         * @return builder
         * 
         */
        public Builder oversizedDataOssTargetArn(String oversizedDataOssTargetArn) {
            return oversizedDataOssTargetArn(Output.of(oversizedDataOssTargetArn));
        }

        /**
         * @param status The status of the delivery method. Valid values:
         * - 0: The delivery method is disabled.
         * - 1: The delivery destination is enabled. This is the default value.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the delivery method. Valid values:
         * - 0: The delivery method is disabled.
         * - 1: The delivery destination is enabled. This is the default value.
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        public AggregateDeliveryState build() {
            return $;
        }
    }

}
