// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess;

import com.pulumi.alicloud.ess.inputs.ScalingConfigurationDataDiskArgs;
import com.pulumi.alicloud.ess.inputs.ScalingConfigurationInstancePatternInfoArgs;
import com.pulumi.alicloud.ess.inputs.ScalingConfigurationSpotPriceLimitArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScalingConfigurationArgs Empty = new ScalingConfigurationArgs();

    /**
     * Whether active current scaling configuration in the specified scaling group. Default to `false`.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether active current scaling configuration in the specified scaling group. Default to `false`.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Performance mode of the t5 burstable instance. Valid values: &#39;Standard&#39;, &#39;Unlimited&#39;.
     * 
     */
    @Import(name="creditSpecification")
    private @Nullable Output<String> creditSpecification;

    /**
     * @return Performance mode of the t5 burstable instance. Valid values: &#39;Standard&#39;, &#39;Unlimited&#39;.
     * 
     */
    public Optional<Output<String>> creditSpecification() {
        return Optional.ofNullable(this.creditSpecification);
    }

    /**
     * DataDisk mappings to attach to ecs instance. See `data_disk` below for details.
     * 
     */
    @Import(name="dataDisks")
    private @Nullable Output<List<ScalingConfigurationDataDiskArgs>> dataDisks;

    /**
     * @return DataDisk mappings to attach to ecs instance. See `data_disk` below for details.
     * 
     */
    public Optional<Output<List<ScalingConfigurationDataDiskArgs>>> dataDisks() {
        return Optional.ofNullable(this.dataDisks);
    }

    /**
     * Whether enable the specified scaling group(make it active) to which the current scaling configuration belongs.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Whether enable the specified scaling group(make it active) to which the current scaling configuration belongs.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * The last scaling configuration will be deleted forcibly with deleting its scaling group. Default to false.
     * 
     */
    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    /**
     * @return The last scaling configuration will be deleted forcibly with deleting its scaling group. Default to false.
     * 
     */
    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    /**
     * Hostname of an ECS instance.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Hostname of an ECS instance.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * ID of an image file, indicating the image resource selected when an instance is enabled.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return ID of an image file, indicating the image resource selected when an instance is enabled.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * Name of an image file, indicating the image resource selected when an instance is enabled.
     * 
     */
    @Import(name="imageName")
    private @Nullable Output<String> imageName;

    /**
     * @return Name of an image file, indicating the image resource selected when an instance is enabled.
     * 
     */
    public Optional<Output<String>> imageName() {
        return Optional.ofNullable(this.imageName);
    }

    /**
     * It has been deprecated from version 1.6.0. New resource `alicloud.ess.Attachment` replaces it.
     * 
     * @deprecated
     * Field &#39;instance_ids&#39; has been deprecated from provider version 1.6.0. New resource &#39;alicloud_ess_attachment&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'instance_ids' has been deprecated from provider version 1.6.0. New resource 'alicloud_ess_attachment' replaces it. */
    @Import(name="instanceIds")
    private @Nullable Output<List<String>> instanceIds;

    /**
     * @return It has been deprecated from version 1.6.0. New resource `alicloud.ess.Attachment` replaces it.
     * 
     * @deprecated
     * Field &#39;instance_ids&#39; has been deprecated from provider version 1.6.0. New resource &#39;alicloud_ess_attachment&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'instance_ids' has been deprecated from provider version 1.6.0. New resource 'alicloud_ess_attachment' replaces it. */
    public Optional<Output<List<String>>> instanceIds() {
        return Optional.ofNullable(this.instanceIds);
    }

    /**
     * Name of an ECS instance. Default to &#34;ESS-Instance&#34;. It is valid from version 1.7.1.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return Name of an ECS instance. Default to &#34;ESS-Instance&#34;. It is valid from version 1.7.1.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.  See `instance_pattern_info` below for details.
     * 
     */
    @Import(name="instancePatternInfos")
    private @Nullable Output<List<ScalingConfigurationInstancePatternInfoArgs>> instancePatternInfos;

    /**
     * @return intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.  See `instance_pattern_info` below for details.
     * 
     */
    public Optional<Output<List<ScalingConfigurationInstancePatternInfoArgs>>> instancePatternInfos() {
        return Optional.ofNullable(this.instancePatternInfos);
    }

    /**
     * Resource type of an ECS instance.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Resource type of an ECS instance.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Resource types of an ECS instance.
     * 
     */
    @Import(name="instanceTypes")
    private @Nullable Output<List<String>> instanceTypes;

    /**
     * @return Resource types of an ECS instance.
     * 
     */
    public Optional<Output<List<String>>> instanceTypes() {
        return Optional.ofNullable(this.instanceTypes);
    }

    /**
     * Network billing type, Values: PayByBandwidth or PayByTraffic. Default to `PayByBandwidth`.
     * 
     */
    @Import(name="internetChargeType")
    private @Nullable Output<String> internetChargeType;

    /**
     * @return Network billing type, Values: PayByBandwidth or PayByTraffic. Default to `PayByBandwidth`.
     * 
     */
    public Optional<Output<String>> internetChargeType() {
        return Optional.ofNullable(this.internetChargeType);
    }

    /**
     * Maximum incoming bandwidth from the public network, measured in Mbps (Mega bit per second). The value range is [1,200].
     * 
     */
    @Import(name="internetMaxBandwidthIn")
    private @Nullable Output<Integer> internetMaxBandwidthIn;

    /**
     * @return Maximum incoming bandwidth from the public network, measured in Mbps (Mega bit per second). The value range is [1,200].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthIn() {
        return Optional.ofNullable(this.internetMaxBandwidthIn);
    }

    /**
     * Maximum outgoing bandwidth from the public network, measured in Mbps (Mega bit per second). The value range for PayByBandwidth is [0,1024].
     * 
     */
    @Import(name="internetMaxBandwidthOut")
    private @Nullable Output<Integer> internetMaxBandwidthOut;

    /**
     * @return Maximum outgoing bandwidth from the public network, measured in Mbps (Mega bit per second). The value range for PayByBandwidth is [0,1024].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthOut() {
        return Optional.ofNullable(this.internetMaxBandwidthOut);
    }

    /**
     * It has been deprecated on instance resource. All the launched alicloud instances will be I/O optimized.
     * 
     * @deprecated
     * Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template.
     * 
     */
    @Deprecated /* Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template. */
    @Import(name="ioOptimized")
    private @Nullable Output<String> ioOptimized;

    /**
     * @return It has been deprecated on instance resource. All the launched alicloud instances will be I/O optimized.
     * 
     * @deprecated
     * Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template.
     * 
     */
    @Deprecated /* Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template. */
    public Optional<Output<String>> ioOptimized() {
        return Optional.ofNullable(this.ioOptimized);
    }

    /**
     * Whether to use outdated instance type. Default to false.
     * 
     */
    @Import(name="isOutdated")
    private @Nullable Output<Boolean> isOutdated;

    /**
     * @return Whether to use outdated instance type. Default to false.
     * 
     */
    public Optional<Output<Boolean>> isOutdated() {
        return Optional.ofNullable(this.isOutdated);
    }

    /**
     * The name of key pair that can login ECS instance successfully without password. If it is specified, the password would be invalid.
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    /**
     * @return The name of key pair that can login ECS instance successfully without password. If it is specified, the password would be invalid.
     * 
     */
    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * An KMS encrypts password used to a db account. If the `password` is filled in, this field will be ignored.
     * 
     */
    @Import(name="kmsEncryptedPassword")
    private @Nullable Output<String> kmsEncryptedPassword;

    /**
     * @return An KMS encrypts password used to a db account. If the `password` is filled in, this field will be ignored.
     * 
     */
    public Optional<Output<String>> kmsEncryptedPassword() {
        return Optional.ofNullable(this.kmsEncryptedPassword);
    }

    /**
     * An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a db account with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    @Import(name="kmsEncryptionContext")
    private @Nullable Output<Map<String,Object>> kmsEncryptionContext;

    /**
     * @return An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a db account with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    public Optional<Output<Map<String,Object>>> kmsEncryptionContext() {
        return Optional.ofNullable(this.kmsEncryptionContext);
    }

    /**
     * Indicates whether to overwrite the existing data. Default to false.
     * 
     */
    @Import(name="override")
    private @Nullable Output<Boolean> override;

    /**
     * @return Indicates whether to overwrite the existing data. Default to false.
     * 
     */
    public Optional<Output<Boolean>> override() {
        return Optional.ofNullable(this.override);
    }

    /**
     * The password of the ECS instance. The password must be 8 to 30 characters in length. It must contains at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `() ~!@#$%^&amp;*-_+=\|{}[]:;&#39;&lt;&gt;,.?/`, The password of Windows-based instances cannot start with a forward slash (/).
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the ECS instance. The password must be 8 to 30 characters in length. It must contains at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `() ~!@#$%^&amp;*-_+=\|{}[]:;&#39;&lt;&gt;,.?/`, The password of Windows-based instances cannot start with a forward slash (/).
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Specifies whether to use the password that is predefined in the image. If the PasswordInherit parameter is set to true, the `password` and `kms_encrypted_password` will be ignored. You must ensure that the selected image has a password configured.
     * 
     */
    @Import(name="passwordInherit")
    private @Nullable Output<Boolean> passwordInherit;

    /**
     * @return Specifies whether to use the password that is predefined in the image. If the PasswordInherit parameter is set to true, the `password` and `kms_encrypted_password` will be ignored. You must ensure that the selected image has a password configured.
     * 
     */
    public Optional<Output<Boolean>> passwordInherit() {
        return Optional.ofNullable(this.passwordInherit);
    }

    /**
     * ID of resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return ID of resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Instance RAM role name. The name is provided and maintained by RAM. You can use `alicloud.ram.Role` to create a new one.
     * 
     */
    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    /**
     * @return Instance RAM role name. The name is provided and maintained by RAM. You can use `alicloud.ram.Role` to create a new one.
     * 
     */
    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    /**
     * Name shown for the scheduled task. which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is ScalingConfigurationId.
     * 
     */
    @Import(name="scalingConfigurationName")
    private @Nullable Output<String> scalingConfigurationName;

    /**
     * @return Name shown for the scheduled task. which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is ScalingConfigurationId.
     * 
     */
    public Optional<Output<String>> scalingConfigurationName() {
        return Optional.ofNullable(this.scalingConfigurationName);
    }

    /**
     * ID of the scaling group of a scaling configuration.
     * 
     */
    @Import(name="scalingGroupId", required=true)
    private Output<String> scalingGroupId;

    /**
     * @return ID of the scaling group of a scaling configuration.
     * 
     */
    public Output<String> scalingGroupId() {
        return this.scalingGroupId;
    }

    /**
     * ID of the security group used to create new instance. It is conflict with `security_group_ids`.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return ID of the security group used to create new instance. It is conflict with `security_group_ids`.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * List IDs of the security group used to create new instances. It is conflict with `security_group_id`.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return List IDs of the security group used to create new instances. It is conflict with `security_group_id`.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * Sets the maximum price hourly for instance types. See `spot_price_limit` below for details.
     * 
     * &gt; **NOTE:** Before enabling the scaling group, it must have a active scaling configuration.
     * 
     * &gt; **NOTE:** If the number of attached ECS instances by `instance_ids` is smaller than MinSize, the Auto Scaling Service will automatically create ECS Pay-As-You-Go instance to cater to MinSize. For example, MinSize=5 and 2 existing ECS instances has been attached to the scaling group. When the scaling group is enabled, it will create 3 instnaces automatically based on its current active scaling configuration.
     * 
     * &gt; **NOTE:** Restrictions on attaching ECS instances:
     * 
     * - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
     * - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
     * - The attached ECS instances must in the running state.
     * - The attached ECS instances has not been attached to other scaling groups.
     * - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.
     * 
     * &gt; **NOTE:** The last scaling configuration can&#39;t be set to inactive and deleted alone.
     * 
     */
    @Import(name="spotPriceLimits")
    private @Nullable Output<List<ScalingConfigurationSpotPriceLimitArgs>> spotPriceLimits;

    /**
     * @return Sets the maximum price hourly for instance types. See `spot_price_limit` below for details.
     * 
     * &gt; **NOTE:** Before enabling the scaling group, it must have a active scaling configuration.
     * 
     * &gt; **NOTE:** If the number of attached ECS instances by `instance_ids` is smaller than MinSize, the Auto Scaling Service will automatically create ECS Pay-As-You-Go instance to cater to MinSize. For example, MinSize=5 and 2 existing ECS instances has been attached to the scaling group. When the scaling group is enabled, it will create 3 instnaces automatically based on its current active scaling configuration.
     * 
     * &gt; **NOTE:** Restrictions on attaching ECS instances:
     * 
     * - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
     * - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
     * - The attached ECS instances must in the running state.
     * - The attached ECS instances has not been attached to other scaling groups.
     * - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.
     * 
     * &gt; **NOTE:** The last scaling configuration can&#39;t be set to inactive and deleted alone.
     * 
     */
    public Optional<Output<List<ScalingConfigurationSpotPriceLimitArgs>>> spotPriceLimits() {
        return Optional.ofNullable(this.spotPriceLimits);
    }

    /**
     * The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    /**
     * The another scaling configuration which will be active automatically and replace current configuration when setting `active` to &#39;false&#39;. It is invalid when `active` is &#39;true&#39;.
     * 
     */
    @Import(name="substitute")
    private @Nullable Output<String> substitute;

    /**
     * @return The another scaling configuration which will be active automatically and replace current configuration when setting `active` to &#39;false&#39;. It is invalid when `active` is &#39;true&#39;.
     * 
     */
    public Optional<Output<String>> substitute() {
        return Optional.ofNullable(this.substitute);
    }

    /**
     * The id of auto snapshot policy for system disk.
     * 
     */
    @Import(name="systemDiskAutoSnapshotPolicyId")
    private @Nullable Output<String> systemDiskAutoSnapshotPolicyId;

    /**
     * @return The id of auto snapshot policy for system disk.
     * 
     */
    public Optional<Output<String>> systemDiskAutoSnapshotPolicyId() {
        return Optional.ofNullable(this.systemDiskAutoSnapshotPolicyId);
    }

    /**
     * Category of the system disk. The parameter value options are `ephemeral_ssd`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd` and `cloud`. `cloud` only is used to some no I/O optimized instance. Default to `cloud_efficiency`.
     * 
     */
    @Import(name="systemDiskCategory")
    private @Nullable Output<String> systemDiskCategory;

    /**
     * @return Category of the system disk. The parameter value options are `ephemeral_ssd`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd` and `cloud`. `cloud` only is used to some no I/O optimized instance. Default to `cloud_efficiency`.
     * 
     */
    public Optional<Output<String>> systemDiskCategory() {
        return Optional.ofNullable(this.systemDiskCategory);
    }

    /**
     * The description of the system disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Import(name="systemDiskDescription")
    private @Nullable Output<String> systemDiskDescription;

    /**
     * @return The description of the system disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> systemDiskDescription() {
        return Optional.ofNullable(this.systemDiskDescription);
    }

    /**
     * Whether to encrypt the system disk.
     * 
     */
    @Import(name="systemDiskEncrypted")
    private @Nullable Output<Boolean> systemDiskEncrypted;

    /**
     * @return Whether to encrypt the system disk.
     * 
     */
    public Optional<Output<Boolean>> systemDiskEncrypted() {
        return Optional.ofNullable(this.systemDiskEncrypted);
    }

    /**
     * The name of the system disk. It must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-). Default value: null.
     * 
     */
    @Import(name="systemDiskName")
    private @Nullable Output<String> systemDiskName;

    /**
     * @return The name of the system disk. It must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-). Default value: null.
     * 
     */
    public Optional<Output<String>> systemDiskName() {
        return Optional.ofNullable(this.systemDiskName);
    }

    /**
     * The performance level of the ESSD used as the system disk.
     * 
     */
    @Import(name="systemDiskPerformanceLevel")
    private @Nullable Output<String> systemDiskPerformanceLevel;

    /**
     * @return The performance level of the ESSD used as the system disk.
     * 
     */
    public Optional<Output<String>> systemDiskPerformanceLevel() {
        return Optional.ofNullable(this.systemDiskPerformanceLevel);
    }

    /**
     * Size of system disk, in GiB. Optional values: cloud: 20-500, cloud_efficiency: 20-500, cloud_ssd: 20-500, ephemeral_ssd: 20-500 The default value is max{40, ImageSize}. If this parameter is set, the system disk size must be greater than or equal to max{40, ImageSize}.
     * 
     */
    @Import(name="systemDiskSize")
    private @Nullable Output<Integer> systemDiskSize;

    /**
     * @return Size of system disk, in GiB. Optional values: cloud: 20-500, cloud_efficiency: 20-500, cloud_ssd: 20-500, ephemeral_ssd: 20-500 The default value is max{40, ImageSize}. If this parameter is set, the system disk size must be greater than or equal to max{40, ImageSize}.
     * 
     */
    public Optional<Output<Integer>> systemDiskSize() {
        return Optional.ofNullable(this.systemDiskSize);
    }

    /**
     * A mapping of tags to assign to the resource. It will be applied for ECS instances finally.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource. It will be applied for ECS instances finally.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * User-defined data to customize the startup behaviors of the ECS instance and to pass data into the ECS instance.
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return User-defined data to customize the startup behaviors of the ECS instance and to pass data into the ECS instance.
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    private ScalingConfigurationArgs() {}

    private ScalingConfigurationArgs(ScalingConfigurationArgs $) {
        this.active = $.active;
        this.creditSpecification = $.creditSpecification;
        this.dataDisks = $.dataDisks;
        this.enable = $.enable;
        this.forceDelete = $.forceDelete;
        this.hostName = $.hostName;
        this.imageId = $.imageId;
        this.imageName = $.imageName;
        this.instanceIds = $.instanceIds;
        this.instanceName = $.instanceName;
        this.instancePatternInfos = $.instancePatternInfos;
        this.instanceType = $.instanceType;
        this.instanceTypes = $.instanceTypes;
        this.internetChargeType = $.internetChargeType;
        this.internetMaxBandwidthIn = $.internetMaxBandwidthIn;
        this.internetMaxBandwidthOut = $.internetMaxBandwidthOut;
        this.ioOptimized = $.ioOptimized;
        this.isOutdated = $.isOutdated;
        this.keyName = $.keyName;
        this.kmsEncryptedPassword = $.kmsEncryptedPassword;
        this.kmsEncryptionContext = $.kmsEncryptionContext;
        this.override = $.override;
        this.password = $.password;
        this.passwordInherit = $.passwordInherit;
        this.resourceGroupId = $.resourceGroupId;
        this.roleName = $.roleName;
        this.scalingConfigurationName = $.scalingConfigurationName;
        this.scalingGroupId = $.scalingGroupId;
        this.securityGroupId = $.securityGroupId;
        this.securityGroupIds = $.securityGroupIds;
        this.spotPriceLimits = $.spotPriceLimits;
        this.spotStrategy = $.spotStrategy;
        this.substitute = $.substitute;
        this.systemDiskAutoSnapshotPolicyId = $.systemDiskAutoSnapshotPolicyId;
        this.systemDiskCategory = $.systemDiskCategory;
        this.systemDiskDescription = $.systemDiskDescription;
        this.systemDiskEncrypted = $.systemDiskEncrypted;
        this.systemDiskName = $.systemDiskName;
        this.systemDiskPerformanceLevel = $.systemDiskPerformanceLevel;
        this.systemDiskSize = $.systemDiskSize;
        this.tags = $.tags;
        this.userData = $.userData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingConfigurationArgs $;

        public Builder() {
            $ = new ScalingConfigurationArgs();
        }

        public Builder(ScalingConfigurationArgs defaults) {
            $ = new ScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether active current scaling configuration in the specified scaling group. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether active current scaling configuration in the specified scaling group. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param creditSpecification Performance mode of the t5 burstable instance. Valid values: &#39;Standard&#39;, &#39;Unlimited&#39;.
         * 
         * @return builder
         * 
         */
        public Builder creditSpecification(@Nullable Output<String> creditSpecification) {
            $.creditSpecification = creditSpecification;
            return this;
        }

        /**
         * @param creditSpecification Performance mode of the t5 burstable instance. Valid values: &#39;Standard&#39;, &#39;Unlimited&#39;.
         * 
         * @return builder
         * 
         */
        public Builder creditSpecification(String creditSpecification) {
            return creditSpecification(Output.of(creditSpecification));
        }

        /**
         * @param dataDisks DataDisk mappings to attach to ecs instance. See `data_disk` below for details.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(@Nullable Output<List<ScalingConfigurationDataDiskArgs>> dataDisks) {
            $.dataDisks = dataDisks;
            return this;
        }

        /**
         * @param dataDisks DataDisk mappings to attach to ecs instance. See `data_disk` below for details.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(List<ScalingConfigurationDataDiskArgs> dataDisks) {
            return dataDisks(Output.of(dataDisks));
        }

        /**
         * @param dataDisks DataDisk mappings to attach to ecs instance. See `data_disk` below for details.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(ScalingConfigurationDataDiskArgs... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }

        /**
         * @param enable Whether enable the specified scaling group(make it active) to which the current scaling configuration belongs.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Whether enable the specified scaling group(make it active) to which the current scaling configuration belongs.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param forceDelete The last scaling configuration will be deleted forcibly with deleting its scaling group. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        /**
         * @param forceDelete The last scaling configuration will be deleted forcibly with deleting its scaling group. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        /**
         * @param hostName Hostname of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Hostname of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param imageId ID of an image file, indicating the image resource selected when an instance is enabled.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId ID of an image file, indicating the image resource selected when an instance is enabled.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param imageName Name of an image file, indicating the image resource selected when an instance is enabled.
         * 
         * @return builder
         * 
         */
        public Builder imageName(@Nullable Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        /**
         * @param imageName Name of an image file, indicating the image resource selected when an instance is enabled.
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        /**
         * @param instanceIds It has been deprecated from version 1.6.0. New resource `alicloud.ess.Attachment` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;instance_ids&#39; has been deprecated from provider version 1.6.0. New resource &#39;alicloud_ess_attachment&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'instance_ids' has been deprecated from provider version 1.6.0. New resource 'alicloud_ess_attachment' replaces it. */
        public Builder instanceIds(@Nullable Output<List<String>> instanceIds) {
            $.instanceIds = instanceIds;
            return this;
        }

        /**
         * @param instanceIds It has been deprecated from version 1.6.0. New resource `alicloud.ess.Attachment` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;instance_ids&#39; has been deprecated from provider version 1.6.0. New resource &#39;alicloud_ess_attachment&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'instance_ids' has been deprecated from provider version 1.6.0. New resource 'alicloud_ess_attachment' replaces it. */
        public Builder instanceIds(List<String> instanceIds) {
            return instanceIds(Output.of(instanceIds));
        }

        /**
         * @param instanceIds It has been deprecated from version 1.6.0. New resource `alicloud.ess.Attachment` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;instance_ids&#39; has been deprecated from provider version 1.6.0. New resource &#39;alicloud_ess_attachment&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'instance_ids' has been deprecated from provider version 1.6.0. New resource 'alicloud_ess_attachment' replaces it. */
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }

        /**
         * @param instanceName Name of an ECS instance. Default to &#34;ESS-Instance&#34;. It is valid from version 1.7.1.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName Name of an ECS instance. Default to &#34;ESS-Instance&#34;. It is valid from version 1.7.1.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instancePatternInfos intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.  See `instance_pattern_info` below for details.
         * 
         * @return builder
         * 
         */
        public Builder instancePatternInfos(@Nullable Output<List<ScalingConfigurationInstancePatternInfoArgs>> instancePatternInfos) {
            $.instancePatternInfos = instancePatternInfos;
            return this;
        }

        /**
         * @param instancePatternInfos intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.  See `instance_pattern_info` below for details.
         * 
         * @return builder
         * 
         */
        public Builder instancePatternInfos(List<ScalingConfigurationInstancePatternInfoArgs> instancePatternInfos) {
            return instancePatternInfos(Output.of(instancePatternInfos));
        }

        /**
         * @param instancePatternInfos intelligent configuration mode. In this mode, you only need to specify the number of vCPUs, memory size, instance family, and maximum price. The system selects an instance type that is provided at the lowest price based on your configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode helps reduce the failures of scale-out activities caused by insufficient inventory of instance types.  See `instance_pattern_info` below for details.
         * 
         * @return builder
         * 
         */
        public Builder instancePatternInfos(ScalingConfigurationInstancePatternInfoArgs... instancePatternInfos) {
            return instancePatternInfos(List.of(instancePatternInfos));
        }

        /**
         * @param instanceType Resource type of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Resource type of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param instanceTypes Resource types of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(@Nullable Output<List<String>> instanceTypes) {
            $.instanceTypes = instanceTypes;
            return this;
        }

        /**
         * @param instanceTypes Resource types of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(List<String> instanceTypes) {
            return instanceTypes(Output.of(instanceTypes));
        }

        /**
         * @param instanceTypes Resource types of an ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }

        /**
         * @param internetChargeType Network billing type, Values: PayByBandwidth or PayByTraffic. Default to `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(@Nullable Output<String> internetChargeType) {
            $.internetChargeType = internetChargeType;
            return this;
        }

        /**
         * @param internetChargeType Network billing type, Values: PayByBandwidth or PayByTraffic. Default to `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(String internetChargeType) {
            return internetChargeType(Output.of(internetChargeType));
        }

        /**
         * @param internetMaxBandwidthIn Maximum incoming bandwidth from the public network, measured in Mbps (Mega bit per second). The value range is [1,200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(@Nullable Output<Integer> internetMaxBandwidthIn) {
            $.internetMaxBandwidthIn = internetMaxBandwidthIn;
            return this;
        }

        /**
         * @param internetMaxBandwidthIn Maximum incoming bandwidth from the public network, measured in Mbps (Mega bit per second). The value range is [1,200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
            return internetMaxBandwidthIn(Output.of(internetMaxBandwidthIn));
        }

        /**
         * @param internetMaxBandwidthOut Maximum outgoing bandwidth from the public network, measured in Mbps (Mega bit per second). The value range for PayByBandwidth is [0,1024].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(@Nullable Output<Integer> internetMaxBandwidthOut) {
            $.internetMaxBandwidthOut = internetMaxBandwidthOut;
            return this;
        }

        /**
         * @param internetMaxBandwidthOut Maximum outgoing bandwidth from the public network, measured in Mbps (Mega bit per second). The value range for PayByBandwidth is [0,1024].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
            return internetMaxBandwidthOut(Output.of(internetMaxBandwidthOut));
        }

        /**
         * @param ioOptimized It has been deprecated on instance resource. All the launched alicloud instances will be I/O optimized.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template.
         * 
         */
        @Deprecated /* Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template. */
        public Builder ioOptimized(@Nullable Output<String> ioOptimized) {
            $.ioOptimized = ioOptimized;
            return this;
        }

        /**
         * @param ioOptimized It has been deprecated on instance resource. All the launched alicloud instances will be I/O optimized.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template.
         * 
         */
        @Deprecated /* Attribute io_optimized has been deprecated on instance resource. All the launched alicloud instances will be IO optimized. Suggest to remove it from your template. */
        public Builder ioOptimized(String ioOptimized) {
            return ioOptimized(Output.of(ioOptimized));
        }

        /**
         * @param isOutdated Whether to use outdated instance type. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder isOutdated(@Nullable Output<Boolean> isOutdated) {
            $.isOutdated = isOutdated;
            return this;
        }

        /**
         * @param isOutdated Whether to use outdated instance type. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder isOutdated(Boolean isOutdated) {
            return isOutdated(Output.of(isOutdated));
        }

        /**
         * @param keyName The name of key pair that can login ECS instance successfully without password. If it is specified, the password would be invalid.
         * 
         * @return builder
         * 
         */
        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName The name of key pair that can login ECS instance successfully without password. If it is specified, the password would be invalid.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to a db account. If the `password` is filled in, this field will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(@Nullable Output<String> kmsEncryptedPassword) {
            $.kmsEncryptedPassword = kmsEncryptedPassword;
            return this;
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to a db account. If the `password` is filled in, this field will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(String kmsEncryptedPassword) {
            return kmsEncryptedPassword(Output.of(kmsEncryptedPassword));
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a db account with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(@Nullable Output<Map<String,Object>> kmsEncryptionContext) {
            $.kmsEncryptionContext = kmsEncryptionContext;
            return this;
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a db account with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(Map<String,Object> kmsEncryptionContext) {
            return kmsEncryptionContext(Output.of(kmsEncryptionContext));
        }

        /**
         * @param override Indicates whether to overwrite the existing data. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder override(@Nullable Output<Boolean> override) {
            $.override = override;
            return this;
        }

        /**
         * @param override Indicates whether to overwrite the existing data. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder override(Boolean override) {
            return override(Output.of(override));
        }

        /**
         * @param password The password of the ECS instance. The password must be 8 to 30 characters in length. It must contains at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `() ~!@#$%^&amp;*-_+=\|{}[]:;&#39;&lt;&gt;,.?/`, The password of Windows-based instances cannot start with a forward slash (/).
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the ECS instance. The password must be 8 to 30 characters in length. It must contains at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `() ~!@#$%^&amp;*-_+=\|{}[]:;&#39;&lt;&gt;,.?/`, The password of Windows-based instances cannot start with a forward slash (/).
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordInherit Specifies whether to use the password that is predefined in the image. If the PasswordInherit parameter is set to true, the `password` and `kms_encrypted_password` will be ignored. You must ensure that the selected image has a password configured.
         * 
         * @return builder
         * 
         */
        public Builder passwordInherit(@Nullable Output<Boolean> passwordInherit) {
            $.passwordInherit = passwordInherit;
            return this;
        }

        /**
         * @param passwordInherit Specifies whether to use the password that is predefined in the image. If the PasswordInherit parameter is set to true, the `password` and `kms_encrypted_password` will be ignored. You must ensure that the selected image has a password configured.
         * 
         * @return builder
         * 
         */
        public Builder passwordInherit(Boolean passwordInherit) {
            return passwordInherit(Output.of(passwordInherit));
        }

        /**
         * @param resourceGroupId ID of resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId ID of resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param roleName Instance RAM role name. The name is provided and maintained by RAM. You can use `alicloud.ram.Role` to create a new one.
         * 
         * @return builder
         * 
         */
        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName Instance RAM role name. The name is provided and maintained by RAM. You can use `alicloud.ram.Role` to create a new one.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        /**
         * @param scalingConfigurationName Name shown for the scheduled task. which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is ScalingConfigurationId.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(@Nullable Output<String> scalingConfigurationName) {
            $.scalingConfigurationName = scalingConfigurationName;
            return this;
        }

        /**
         * @param scalingConfigurationName Name shown for the scheduled task. which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is ScalingConfigurationId.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(String scalingConfigurationName) {
            return scalingConfigurationName(Output.of(scalingConfigurationName));
        }

        /**
         * @param scalingGroupId ID of the scaling group of a scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(Output<String> scalingGroupId) {
            $.scalingGroupId = scalingGroupId;
            return this;
        }

        /**
         * @param scalingGroupId ID of the scaling group of a scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(String scalingGroupId) {
            return scalingGroupId(Output.of(scalingGroupId));
        }

        /**
         * @param securityGroupId ID of the security group used to create new instance. It is conflict with `security_group_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId ID of the security group used to create new instance. It is conflict with `security_group_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param securityGroupIds List IDs of the security group used to create new instances. It is conflict with `security_group_id`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds List IDs of the security group used to create new instances. It is conflict with `security_group_id`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds List IDs of the security group used to create new instances. It is conflict with `security_group_id`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param spotPriceLimits Sets the maximum price hourly for instance types. See `spot_price_limit` below for details.
         * 
         * &gt; **NOTE:** Before enabling the scaling group, it must have a active scaling configuration.
         * 
         * &gt; **NOTE:** If the number of attached ECS instances by `instance_ids` is smaller than MinSize, the Auto Scaling Service will automatically create ECS Pay-As-You-Go instance to cater to MinSize. For example, MinSize=5 and 2 existing ECS instances has been attached to the scaling group. When the scaling group is enabled, it will create 3 instnaces automatically based on its current active scaling configuration.
         * 
         * &gt; **NOTE:** Restrictions on attaching ECS instances:
         * 
         * - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
         * - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
         * - The attached ECS instances must in the running state.
         * - The attached ECS instances has not been attached to other scaling groups.
         * - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.
         * 
         * &gt; **NOTE:** The last scaling configuration can&#39;t be set to inactive and deleted alone.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimits(@Nullable Output<List<ScalingConfigurationSpotPriceLimitArgs>> spotPriceLimits) {
            $.spotPriceLimits = spotPriceLimits;
            return this;
        }

        /**
         * @param spotPriceLimits Sets the maximum price hourly for instance types. See `spot_price_limit` below for details.
         * 
         * &gt; **NOTE:** Before enabling the scaling group, it must have a active scaling configuration.
         * 
         * &gt; **NOTE:** If the number of attached ECS instances by `instance_ids` is smaller than MinSize, the Auto Scaling Service will automatically create ECS Pay-As-You-Go instance to cater to MinSize. For example, MinSize=5 and 2 existing ECS instances has been attached to the scaling group. When the scaling group is enabled, it will create 3 instnaces automatically based on its current active scaling configuration.
         * 
         * &gt; **NOTE:** Restrictions on attaching ECS instances:
         * 
         * - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
         * - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
         * - The attached ECS instances must in the running state.
         * - The attached ECS instances has not been attached to other scaling groups.
         * - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.
         * 
         * &gt; **NOTE:** The last scaling configuration can&#39;t be set to inactive and deleted alone.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimits(List<ScalingConfigurationSpotPriceLimitArgs> spotPriceLimits) {
            return spotPriceLimits(Output.of(spotPriceLimits));
        }

        /**
         * @param spotPriceLimits Sets the maximum price hourly for instance types. See `spot_price_limit` below for details.
         * 
         * &gt; **NOTE:** Before enabling the scaling group, it must have a active scaling configuration.
         * 
         * &gt; **NOTE:** If the number of attached ECS instances by `instance_ids` is smaller than MinSize, the Auto Scaling Service will automatically create ECS Pay-As-You-Go instance to cater to MinSize. For example, MinSize=5 and 2 existing ECS instances has been attached to the scaling group. When the scaling group is enabled, it will create 3 instnaces automatically based on its current active scaling configuration.
         * 
         * &gt; **NOTE:** Restrictions on attaching ECS instances:
         * 
         * - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
         * - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
         * - The attached ECS instances must in the running state.
         * - The attached ECS instances has not been attached to other scaling groups.
         * - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.
         * 
         * &gt; **NOTE:** The last scaling configuration can&#39;t be set to inactive and deleted alone.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimits(ScalingConfigurationSpotPriceLimitArgs... spotPriceLimits) {
            return spotPriceLimits(List.of(spotPriceLimits));
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        /**
         * @param substitute The another scaling configuration which will be active automatically and replace current configuration when setting `active` to &#39;false&#39;. It is invalid when `active` is &#39;true&#39;.
         * 
         * @return builder
         * 
         */
        public Builder substitute(@Nullable Output<String> substitute) {
            $.substitute = substitute;
            return this;
        }

        /**
         * @param substitute The another scaling configuration which will be active automatically and replace current configuration when setting `active` to &#39;false&#39;. It is invalid when `active` is &#39;true&#39;.
         * 
         * @return builder
         * 
         */
        public Builder substitute(String substitute) {
            return substitute(Output.of(substitute));
        }

        /**
         * @param systemDiskAutoSnapshotPolicyId The id of auto snapshot policy for system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskAutoSnapshotPolicyId(@Nullable Output<String> systemDiskAutoSnapshotPolicyId) {
            $.systemDiskAutoSnapshotPolicyId = systemDiskAutoSnapshotPolicyId;
            return this;
        }

        /**
         * @param systemDiskAutoSnapshotPolicyId The id of auto snapshot policy for system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskAutoSnapshotPolicyId(String systemDiskAutoSnapshotPolicyId) {
            return systemDiskAutoSnapshotPolicyId(Output.of(systemDiskAutoSnapshotPolicyId));
        }

        /**
         * @param systemDiskCategory Category of the system disk. The parameter value options are `ephemeral_ssd`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd` and `cloud`. `cloud` only is used to some no I/O optimized instance. Default to `cloud_efficiency`.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskCategory(@Nullable Output<String> systemDiskCategory) {
            $.systemDiskCategory = systemDiskCategory;
            return this;
        }

        /**
         * @param systemDiskCategory Category of the system disk. The parameter value options are `ephemeral_ssd`, `cloud_efficiency`, `cloud_ssd`, `cloud_essd` and `cloud`. `cloud` only is used to some no I/O optimized instance. Default to `cloud_efficiency`.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskCategory(String systemDiskCategory) {
            return systemDiskCategory(Output.of(systemDiskCategory));
        }

        /**
         * @param systemDiskDescription The description of the system disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskDescription(@Nullable Output<String> systemDiskDescription) {
            $.systemDiskDescription = systemDiskDescription;
            return this;
        }

        /**
         * @param systemDiskDescription The description of the system disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskDescription(String systemDiskDescription) {
            return systemDiskDescription(Output.of(systemDiskDescription));
        }

        /**
         * @param systemDiskEncrypted Whether to encrypt the system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskEncrypted(@Nullable Output<Boolean> systemDiskEncrypted) {
            $.systemDiskEncrypted = systemDiskEncrypted;
            return this;
        }

        /**
         * @param systemDiskEncrypted Whether to encrypt the system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskEncrypted(Boolean systemDiskEncrypted) {
            return systemDiskEncrypted(Output.of(systemDiskEncrypted));
        }

        /**
         * @param systemDiskName The name of the system disk. It must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-). Default value: null.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskName(@Nullable Output<String> systemDiskName) {
            $.systemDiskName = systemDiskName;
            return this;
        }

        /**
         * @param systemDiskName The name of the system disk. It must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-). Default value: null.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskName(String systemDiskName) {
            return systemDiskName(Output.of(systemDiskName));
        }

        /**
         * @param systemDiskPerformanceLevel The performance level of the ESSD used as the system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskPerformanceLevel(@Nullable Output<String> systemDiskPerformanceLevel) {
            $.systemDiskPerformanceLevel = systemDiskPerformanceLevel;
            return this;
        }

        /**
         * @param systemDiskPerformanceLevel The performance level of the ESSD used as the system disk.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskPerformanceLevel(String systemDiskPerformanceLevel) {
            return systemDiskPerformanceLevel(Output.of(systemDiskPerformanceLevel));
        }

        /**
         * @param systemDiskSize Size of system disk, in GiB. Optional values: cloud: 20-500, cloud_efficiency: 20-500, cloud_ssd: 20-500, ephemeral_ssd: 20-500 The default value is max{40, ImageSize}. If this parameter is set, the system disk size must be greater than or equal to max{40, ImageSize}.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskSize(@Nullable Output<Integer> systemDiskSize) {
            $.systemDiskSize = systemDiskSize;
            return this;
        }

        /**
         * @param systemDiskSize Size of system disk, in GiB. Optional values: cloud: 20-500, cloud_efficiency: 20-500, cloud_ssd: 20-500, ephemeral_ssd: 20-500 The default value is max{40, ImageSize}. If this parameter is set, the system disk size must be greater than or equal to max{40, ImageSize}.
         * 
         * @return builder
         * 
         */
        public Builder systemDiskSize(Integer systemDiskSize) {
            return systemDiskSize(Output.of(systemDiskSize));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. It will be applied for ECS instances finally.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. It will be applied for ECS instances finally.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userData User-defined data to customize the startup behaviors of the ECS instance and to pass data into the ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData User-defined data to customize the startup behaviors of the ECS instance and to pass data into the ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public ScalingConfigurationArgs build() {
            if ($.scalingGroupId == null) {
                throw new MissingRequiredPropertyException("ScalingConfigurationArgs", "scalingGroupId");
            }
            return $;
        }
    }

}
