// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo.inputs;

import com.pulumi.alicloud.eflo.inputs.ClusterComponentArgs;
import com.pulumi.alicloud.eflo.inputs.ClusterNetworksArgs;
import com.pulumi.alicloud.eflo.inputs.ClusterNodeGroupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * cluster description
     * 
     */
    @Import(name="clusterDescription")
    private @Nullable Output<String> clusterDescription;

    /**
     * @return cluster description
     * 
     */
    public Optional<Output<String>> clusterDescription() {
        return Optional.ofNullable(this.clusterDescription);
    }

    /**
     * ClusterName
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return ClusterName
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * cluster type
     * 
     */
    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    /**
     * @return cluster type
     * 
     */
    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * Component (software instance) See `components` below.
     * 
     */
    @Import(name="components")
    private @Nullable Output<List<ClusterComponentArgs>> components;

    /**
     * @return Component (software instance) See `components` below.
     * 
     */
    public Optional<Output<List<ClusterComponentArgs>>> components() {
        return Optional.ofNullable(this.components);
    }

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Cluster Number
     * 
     */
    @Import(name="hpnZone")
    private @Nullable Output<String> hpnZone;

    /**
     * @return Cluster Number
     * 
     */
    public Optional<Output<String>> hpnZone() {
        return Optional.ofNullable(this.hpnZone);
    }

    /**
     * Whether to allow skipping failed nodes. Default value: False
     * 
     */
    @Import(name="ignoreFailedNodeTasks")
    private @Nullable Output<Boolean> ignoreFailedNodeTasks;

    /**
     * @return Whether to allow skipping failed nodes. Default value: False
     * 
     */
    public Optional<Output<Boolean>> ignoreFailedNodeTasks() {
        return Optional.ofNullable(this.ignoreFailedNodeTasks);
    }

    /**
     * Network Information See `networks` below.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<ClusterNetworksArgs> networks;

    /**
     * @return Network Information See `networks` below.
     * 
     */
    public Optional<Output<ClusterNetworksArgs>> networks() {
        return Optional.ofNullable(this.networks);
    }

    /**
     * Node virtual switch
     * 
     */
    @Import(name="nimizVswitches")
    private @Nullable Output<List<String>> nimizVswitches;

    /**
     * @return Node virtual switch
     * 
     */
    public Optional<Output<List<String>>> nimizVswitches() {
        return Optional.ofNullable(this.nimizVswitches);
    }

    /**
     * Node Group List See `node_groups` below.
     * 
     */
    @Import(name="nodeGroups")
    private @Nullable Output<List<ClusterNodeGroupArgs>> nodeGroups;

    /**
     * @return Node Group List See `node_groups` below.
     * 
     */
    public Optional<Output<List<ClusterNodeGroupArgs>>> nodeGroups() {
        return Optional.ofNullable(this.nodeGroups);
    }

    /**
     * Whether the network interface supports jumbo frames
     * 
     */
    @Import(name="openEniJumboFrame")
    private @Nullable Output<Boolean> openEniJumboFrame;

    /**
     * @return Whether the network interface supports jumbo frames
     * 
     */
    public Optional<Output<Boolean>> openEniJumboFrame() {
        return Optional.ofNullable(this.openEniJumboFrame);
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * tag
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return tag
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.clusterDescription = $.clusterDescription;
        this.clusterName = $.clusterName;
        this.clusterType = $.clusterType;
        this.components = $.components;
        this.createTime = $.createTime;
        this.hpnZone = $.hpnZone;
        this.ignoreFailedNodeTasks = $.ignoreFailedNodeTasks;
        this.networks = $.networks;
        this.nimizVswitches = $.nimizVswitches;
        this.nodeGroups = $.nodeGroups;
        this.openEniJumboFrame = $.openEniJumboFrame;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterDescription cluster description
         * 
         * @return builder
         * 
         */
        public Builder clusterDescription(@Nullable Output<String> clusterDescription) {
            $.clusterDescription = clusterDescription;
            return this;
        }

        /**
         * @param clusterDescription cluster description
         * 
         * @return builder
         * 
         */
        public Builder clusterDescription(String clusterDescription) {
            return clusterDescription(Output.of(clusterDescription));
        }

        /**
         * @param clusterName ClusterName
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName ClusterName
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param clusterType cluster type
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType cluster type
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param components Component (software instance) See `components` below.
         * 
         * @return builder
         * 
         */
        public Builder components(@Nullable Output<List<ClusterComponentArgs>> components) {
            $.components = components;
            return this;
        }

        /**
         * @param components Component (software instance) See `components` below.
         * 
         * @return builder
         * 
         */
        public Builder components(List<ClusterComponentArgs> components) {
            return components(Output.of(components));
        }

        /**
         * @param components Component (software instance) See `components` below.
         * 
         * @return builder
         * 
         */
        public Builder components(ClusterComponentArgs... components) {
            return components(List.of(components));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param hpnZone Cluster Number
         * 
         * @return builder
         * 
         */
        public Builder hpnZone(@Nullable Output<String> hpnZone) {
            $.hpnZone = hpnZone;
            return this;
        }

        /**
         * @param hpnZone Cluster Number
         * 
         * @return builder
         * 
         */
        public Builder hpnZone(String hpnZone) {
            return hpnZone(Output.of(hpnZone));
        }

        /**
         * @param ignoreFailedNodeTasks Whether to allow skipping failed nodes. Default value: False
         * 
         * @return builder
         * 
         */
        public Builder ignoreFailedNodeTasks(@Nullable Output<Boolean> ignoreFailedNodeTasks) {
            $.ignoreFailedNodeTasks = ignoreFailedNodeTasks;
            return this;
        }

        /**
         * @param ignoreFailedNodeTasks Whether to allow skipping failed nodes. Default value: False
         * 
         * @return builder
         * 
         */
        public Builder ignoreFailedNodeTasks(Boolean ignoreFailedNodeTasks) {
            return ignoreFailedNodeTasks(Output.of(ignoreFailedNodeTasks));
        }

        /**
         * @param networks Network Information See `networks` below.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<ClusterNetworksArgs> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Network Information See `networks` below.
         * 
         * @return builder
         * 
         */
        public Builder networks(ClusterNetworksArgs networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param nimizVswitches Node virtual switch
         * 
         * @return builder
         * 
         */
        public Builder nimizVswitches(@Nullable Output<List<String>> nimizVswitches) {
            $.nimizVswitches = nimizVswitches;
            return this;
        }

        /**
         * @param nimizVswitches Node virtual switch
         * 
         * @return builder
         * 
         */
        public Builder nimizVswitches(List<String> nimizVswitches) {
            return nimizVswitches(Output.of(nimizVswitches));
        }

        /**
         * @param nimizVswitches Node virtual switch
         * 
         * @return builder
         * 
         */
        public Builder nimizVswitches(String... nimizVswitches) {
            return nimizVswitches(List.of(nimizVswitches));
        }

        /**
         * @param nodeGroups Node Group List See `node_groups` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(@Nullable Output<List<ClusterNodeGroupArgs>> nodeGroups) {
            $.nodeGroups = nodeGroups;
            return this;
        }

        /**
         * @param nodeGroups Node Group List See `node_groups` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(List<ClusterNodeGroupArgs> nodeGroups) {
            return nodeGroups(Output.of(nodeGroups));
        }

        /**
         * @param nodeGroups Node Group List See `node_groups` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(ClusterNodeGroupArgs... nodeGroups) {
            return nodeGroups(List.of(nodeGroups));
        }

        /**
         * @param openEniJumboFrame Whether the network interface supports jumbo frames
         * 
         * @return builder
         * 
         */
        public Builder openEniJumboFrame(@Nullable Output<Boolean> openEniJumboFrame) {
            $.openEniJumboFrame = openEniJumboFrame;
            return this;
        }

        /**
         * @param openEniJumboFrame Whether the network interface supports jumbo frames
         * 
         * @return builder
         * 
         */
        public Builder openEniJumboFrame(Boolean openEniJumboFrame) {
            return openEniJumboFrame(Output.of(openEniJumboFrame));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags tag
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags tag
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ClusterState build() {
            return $;
        }
    }

}
