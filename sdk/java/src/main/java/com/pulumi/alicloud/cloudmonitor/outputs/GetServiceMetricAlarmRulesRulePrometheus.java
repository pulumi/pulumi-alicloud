// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor.outputs;

import com.pulumi.alicloud.cloudmonitor.outputs.GetServiceMetricAlarmRulesRulePrometheusAnnotation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceMetricAlarmRulesRulePrometheus {
    /**
     * @return The annotations of the Prometheus alert rule.
     * 
     */
    private List<GetServiceMetricAlarmRulesRulePrometheusAnnotation> annotations;
    /**
     * @return The alert level.
     * 
     */
    private String level;
    /**
     * @return The PromQL query statement.
     * 
     */
    private String promQl;
    /**
     * @return The number of consecutive triggers.
     * 
     */
    private Integer times;

    private GetServiceMetricAlarmRulesRulePrometheus() {}
    /**
     * @return The annotations of the Prometheus alert rule.
     * 
     */
    public List<GetServiceMetricAlarmRulesRulePrometheusAnnotation> annotations() {
        return this.annotations;
    }
    /**
     * @return The alert level.
     * 
     */
    public String level() {
        return this.level;
    }
    /**
     * @return The PromQL query statement.
     * 
     */
    public String promQl() {
        return this.promQl;
    }
    /**
     * @return The number of consecutive triggers.
     * 
     */
    public Integer times() {
        return this.times;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMetricAlarmRulesRulePrometheus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceMetricAlarmRulesRulePrometheusAnnotation> annotations;
        private String level;
        private String promQl;
        private Integer times;
        public Builder() {}
        public Builder(GetServiceMetricAlarmRulesRulePrometheus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.level = defaults.level;
    	      this.promQl = defaults.promQl;
    	      this.times = defaults.times;
        }

        @CustomType.Setter
        public Builder annotations(List<GetServiceMetricAlarmRulesRulePrometheusAnnotation> annotations) {
            if (annotations == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRulePrometheus", "annotations");
            }
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(GetServiceMetricAlarmRulesRulePrometheusAnnotation... annotations) {
            return annotations(List.of(annotations));
        }
        @CustomType.Setter
        public Builder level(String level) {
            if (level == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRulePrometheus", "level");
            }
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder promQl(String promQl) {
            if (promQl == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRulePrometheus", "promQl");
            }
            this.promQl = promQl;
            return this;
        }
        @CustomType.Setter
        public Builder times(Integer times) {
            if (times == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRulePrometheus", "times");
            }
            this.times = times;
            return this;
        }
        public GetServiceMetricAlarmRulesRulePrometheus build() {
            final var _resultValue = new GetServiceMetricAlarmRulesRulePrometheus();
            _resultValue.annotations = annotations;
            _resultValue.level = level;
            _resultValue.promQl = promQl;
            _resultValue.times = times;
            return _resultValue;
        }
    }
}
