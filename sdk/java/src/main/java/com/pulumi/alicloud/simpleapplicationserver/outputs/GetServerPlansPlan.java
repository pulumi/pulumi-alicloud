// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.simpleapplicationserver.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServerPlansPlan {
    /**
     * @return The peak bandwidth. Unit: Mbit/s.
     * 
     */
    private Integer bandwidth;
    /**
     * @return The number of CPU cores.
     * 
     */
    private Integer core;
    /**
     * @return The size of the enhanced SSD (ESSD). Unit: GB.
     * 
     */
    private Integer diskSize;
    /**
     * @return The monthly data transfer quota. Unit: GB.
     * 
     */
    private Integer flow;
    /**
     * @return The ID of the Instance Plan.
     * 
     */
    private String id;
    /**
     * @return The memory size. Unit: GB.
     * 
     */
    private Integer memory;
    /**
     * @return The ID of the Instance Plan.
     * 
     */
    private String planId;
    /**
     * @return The platform of Plan supported.
     * 
     */
    private String supportPlatform;

    private GetServerPlansPlan() {}
    /**
     * @return The peak bandwidth. Unit: Mbit/s.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The number of CPU cores.
     * 
     */
    public Integer core() {
        return this.core;
    }
    /**
     * @return The size of the enhanced SSD (ESSD). Unit: GB.
     * 
     */
    public Integer diskSize() {
        return this.diskSize;
    }
    /**
     * @return The monthly data transfer quota. Unit: GB.
     * 
     */
    public Integer flow() {
        return this.flow;
    }
    /**
     * @return The ID of the Instance Plan.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The memory size. Unit: GB.
     * 
     */
    public Integer memory() {
        return this.memory;
    }
    /**
     * @return The ID of the Instance Plan.
     * 
     */
    public String planId() {
        return this.planId;
    }
    /**
     * @return The platform of Plan supported.
     * 
     */
    public String supportPlatform() {
        return this.supportPlatform;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerPlansPlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidth;
        private Integer core;
        private Integer diskSize;
        private Integer flow;
        private String id;
        private Integer memory;
        private String planId;
        private String supportPlatform;
        public Builder() {}
        public Builder(GetServerPlansPlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.core = defaults.core;
    	      this.diskSize = defaults.diskSize;
    	      this.flow = defaults.flow;
    	      this.id = defaults.id;
    	      this.memory = defaults.memory;
    	      this.planId = defaults.planId;
    	      this.supportPlatform = defaults.supportPlatform;
        }

        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder core(Integer core) {
            if (core == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "core");
            }
            this.core = core;
            return this;
        }
        @CustomType.Setter
        public Builder diskSize(Integer diskSize) {
            if (diskSize == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "diskSize");
            }
            this.diskSize = diskSize;
            return this;
        }
        @CustomType.Setter
        public Builder flow(Integer flow) {
            if (flow == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "flow");
            }
            this.flow = flow;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder memory(Integer memory) {
            if (memory == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "memory");
            }
            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder planId(String planId) {
            if (planId == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "planId");
            }
            this.planId = planId;
            return this;
        }
        @CustomType.Setter
        public Builder supportPlatform(String supportPlatform) {
            if (supportPlatform == null) {
              throw new MissingRequiredPropertyException("GetServerPlansPlan", "supportPlatform");
            }
            this.supportPlatform = supportPlatform;
            return this;
        }
        public GetServerPlansPlan build() {
            final var _resultValue = new GetServerPlansPlan();
            _resultValue.bandwidth = bandwidth;
            _resultValue.core = core;
            _resultValue.diskSize = diskSize;
            _resultValue.flow = flow;
            _resultValue.id = id;
            _resultValue.memory = memory;
            _resultValue.planId = planId;
            _resultValue.supportPlatform = supportPlatform;
            return _resultValue;
        }
    }
}
