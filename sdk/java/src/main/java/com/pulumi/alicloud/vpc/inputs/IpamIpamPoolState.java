// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpamIpamPoolState extends com.pulumi.resources.ResourceArgs {

    public static final IpamIpamPoolState Empty = new IpamIpamPoolState();

    /**
     * The default network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    @Import(name="allocationDefaultCidrMask")
    private @Nullable Output<Integer> allocationDefaultCidrMask;

    /**
     * @return The default network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Optional<Output<Integer>> allocationDefaultCidrMask() {
        return Optional.ofNullable(this.allocationDefaultCidrMask);
    }

    /**
     * The maximum network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    @Import(name="allocationMaxCidrMask")
    private @Nullable Output<Integer> allocationMaxCidrMask;

    /**
     * @return The maximum network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Optional<Output<Integer>> allocationMaxCidrMask() {
        return Optional.ofNullable(this.allocationMaxCidrMask);
    }

    /**
     * The minimum Network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    @Import(name="allocationMinCidrMask")
    private @Nullable Output<Integer> allocationMinCidrMask;

    /**
     * @return The minimum Network mask assigned by the IPAM address pool.
     * IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Optional<Output<Integer>> allocationMinCidrMask() {
        return Optional.ofNullable(this.allocationMinCidrMask);
    }

    /**
     * Whether the automatic import function is enabled for the address pool.
     * 
     */
    @Import(name="autoImport")
    private @Nullable Output<Boolean> autoImport;

    /**
     * @return Whether the automatic import function is enabled for the address pool.
     * 
     */
    public Optional<Output<Boolean>> autoImport() {
        return Optional.ofNullable(this.autoImport);
    }

    /**
     * Whether to clear the default network mask of the IPAM address pool. Value:
     * 
     */
    @Import(name="clearAllocationDefaultCidrMask")
    private @Nullable Output<Boolean> clearAllocationDefaultCidrMask;

    /**
     * @return Whether to clear the default network mask of the IPAM address pool. Value:
     * 
     */
    public Optional<Output<Boolean>> clearAllocationDefaultCidrMask() {
        return Optional.ofNullable(this.clearAllocationDefaultCidrMask);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The IP protocol version. Currently, only `IPv4` is supported * *.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return The IP protocol version. Currently, only `IPv4` is supported * *.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * The description of the IPAM address pool.
     * It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    @Import(name="ipamPoolDescription")
    private @Nullable Output<String> ipamPoolDescription;

    /**
     * @return The description of the IPAM address pool.
     * It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    public Optional<Output<String>> ipamPoolDescription() {
        return Optional.ofNullable(this.ipamPoolDescription);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="ipamPoolName")
    private @Nullable Output<String> ipamPoolName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> ipamPoolName() {
        return Optional.ofNullable(this.ipamPoolName);
    }

    /**
     * Ipam scope id.
     * 
     */
    @Import(name="ipamScopeId")
    private @Nullable Output<String> ipamScopeId;

    /**
     * @return Ipam scope id.
     * 
     */
    public Optional<Output<String>> ipamScopeId() {
        return Optional.ofNullable(this.ipamScopeId);
    }

    /**
     * The effective region of the IPAM address pool.
     * 
     */
    @Import(name="poolRegionId")
    private @Nullable Output<String> poolRegionId;

    /**
     * @return The effective region of the IPAM address pool.
     * 
     */
    public Optional<Output<String>> poolRegionId() {
        return Optional.ofNullable(this.poolRegionId);
    }

    /**
     * The ID of the IPAM hosting region.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The ID of the IPAM hosting region.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The instance ID of the source IPAM address pool.
     * 
     * &gt; **NOTE:**  If this parameter is not entered, the created address pool is the parent address pool.
     * 
     */
    @Import(name="sourceIpamPoolId")
    private @Nullable Output<String> sourceIpamPoolId;

    /**
     * @return The instance ID of the source IPAM address pool.
     * 
     * &gt; **NOTE:**  If this parameter is not entered, the created address pool is the parent address pool.
     * 
     */
    public Optional<Output<String>> sourceIpamPoolId() {
        return Optional.ofNullable(this.sourceIpamPoolId);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IpamIpamPoolState() {}

    private IpamIpamPoolState(IpamIpamPoolState $) {
        this.allocationDefaultCidrMask = $.allocationDefaultCidrMask;
        this.allocationMaxCidrMask = $.allocationMaxCidrMask;
        this.allocationMinCidrMask = $.allocationMinCidrMask;
        this.autoImport = $.autoImport;
        this.clearAllocationDefaultCidrMask = $.clearAllocationDefaultCidrMask;
        this.createTime = $.createTime;
        this.ipVersion = $.ipVersion;
        this.ipamPoolDescription = $.ipamPoolDescription;
        this.ipamPoolName = $.ipamPoolName;
        this.ipamScopeId = $.ipamScopeId;
        this.poolRegionId = $.poolRegionId;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.sourceIpamPoolId = $.sourceIpamPoolId;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpamIpamPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpamIpamPoolState $;

        public Builder() {
            $ = new IpamIpamPoolState();
        }

        public Builder(IpamIpamPoolState defaults) {
            $ = new IpamIpamPoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationDefaultCidrMask The default network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationDefaultCidrMask(@Nullable Output<Integer> allocationDefaultCidrMask) {
            $.allocationDefaultCidrMask = allocationDefaultCidrMask;
            return this;
        }

        /**
         * @param allocationDefaultCidrMask The default network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationDefaultCidrMask(Integer allocationDefaultCidrMask) {
            return allocationDefaultCidrMask(Output.of(allocationDefaultCidrMask));
        }

        /**
         * @param allocationMaxCidrMask The maximum network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationMaxCidrMask(@Nullable Output<Integer> allocationMaxCidrMask) {
            $.allocationMaxCidrMask = allocationMaxCidrMask;
            return this;
        }

        /**
         * @param allocationMaxCidrMask The maximum network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationMaxCidrMask(Integer allocationMaxCidrMask) {
            return allocationMaxCidrMask(Output.of(allocationMaxCidrMask));
        }

        /**
         * @param allocationMinCidrMask The minimum Network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationMinCidrMask(@Nullable Output<Integer> allocationMinCidrMask) {
            $.allocationMinCidrMask = allocationMinCidrMask;
            return this;
        }

        /**
         * @param allocationMinCidrMask The minimum Network mask assigned by the IPAM address pool.
         * IPv4 network mask value range: **0 to 32** bits.
         * 
         * @return builder
         * 
         */
        public Builder allocationMinCidrMask(Integer allocationMinCidrMask) {
            return allocationMinCidrMask(Output.of(allocationMinCidrMask));
        }

        /**
         * @param autoImport Whether the automatic import function is enabled for the address pool.
         * 
         * @return builder
         * 
         */
        public Builder autoImport(@Nullable Output<Boolean> autoImport) {
            $.autoImport = autoImport;
            return this;
        }

        /**
         * @param autoImport Whether the automatic import function is enabled for the address pool.
         * 
         * @return builder
         * 
         */
        public Builder autoImport(Boolean autoImport) {
            return autoImport(Output.of(autoImport));
        }

        /**
         * @param clearAllocationDefaultCidrMask Whether to clear the default network mask of the IPAM address pool. Value:
         * 
         * @return builder
         * 
         */
        public Builder clearAllocationDefaultCidrMask(@Nullable Output<Boolean> clearAllocationDefaultCidrMask) {
            $.clearAllocationDefaultCidrMask = clearAllocationDefaultCidrMask;
            return this;
        }

        /**
         * @param clearAllocationDefaultCidrMask Whether to clear the default network mask of the IPAM address pool. Value:
         * 
         * @return builder
         * 
         */
        public Builder clearAllocationDefaultCidrMask(Boolean clearAllocationDefaultCidrMask) {
            return clearAllocationDefaultCidrMask(Output.of(clearAllocationDefaultCidrMask));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param ipVersion The IP protocol version. Currently, only `IPv4` is supported * *.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion The IP protocol version. Currently, only `IPv4` is supported * *.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param ipamPoolDescription The description of the IPAM address pool.
         * It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolDescription(@Nullable Output<String> ipamPoolDescription) {
            $.ipamPoolDescription = ipamPoolDescription;
            return this;
        }

        /**
         * @param ipamPoolDescription The description of the IPAM address pool.
         * It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolDescription(String ipamPoolDescription) {
            return ipamPoolDescription(Output.of(ipamPoolDescription));
        }

        /**
         * @param ipamPoolName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolName(@Nullable Output<String> ipamPoolName) {
            $.ipamPoolName = ipamPoolName;
            return this;
        }

        /**
         * @param ipamPoolName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolName(String ipamPoolName) {
            return ipamPoolName(Output.of(ipamPoolName));
        }

        /**
         * @param ipamScopeId Ipam scope id.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeId(@Nullable Output<String> ipamScopeId) {
            $.ipamScopeId = ipamScopeId;
            return this;
        }

        /**
         * @param ipamScopeId Ipam scope id.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeId(String ipamScopeId) {
            return ipamScopeId(Output.of(ipamScopeId));
        }

        /**
         * @param poolRegionId The effective region of the IPAM address pool.
         * 
         * @return builder
         * 
         */
        public Builder poolRegionId(@Nullable Output<String> poolRegionId) {
            $.poolRegionId = poolRegionId;
            return this;
        }

        /**
         * @param poolRegionId The effective region of the IPAM address pool.
         * 
         * @return builder
         * 
         */
        public Builder poolRegionId(String poolRegionId) {
            return poolRegionId(Output.of(poolRegionId));
        }

        /**
         * @param regionId The ID of the IPAM hosting region.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The ID of the IPAM hosting region.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param sourceIpamPoolId The instance ID of the source IPAM address pool.
         * 
         * &gt; **NOTE:**  If this parameter is not entered, the created address pool is the parent address pool.
         * 
         * @return builder
         * 
         */
        public Builder sourceIpamPoolId(@Nullable Output<String> sourceIpamPoolId) {
            $.sourceIpamPoolId = sourceIpamPoolId;
            return this;
        }

        /**
         * @param sourceIpamPoolId The instance ID of the source IPAM address pool.
         * 
         * &gt; **NOTE:**  If this parameter is not entered, the created address pool is the parent address pool.
         * 
         * @return builder
         * 
         */
        public Builder sourceIpamPoolId(String sourceIpamPoolId) {
            return sourceIpamPoolId(Output.of(sourceIpamPoolId));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tag of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public IpamIpamPoolState build() {
            return $;
        }
    }

}
