// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterVpcAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final RouterVpcAssociationState Empty = new RouterVpcAssociationState();

    /**
     * List of allowed route prefixes.
     * 
     */
    @Import(name="allowedPrefixes")
    private @Nullable Output<List<String>> allowedPrefixes;

    /**
     * @return List of allowed route prefixes.
     * 
     */
    public Optional<Output<List<String>>> allowedPrefixes() {
        return Optional.ofNullable(this.allowedPrefixes);
    }

    /**
     * The first ID of the resource.
     * 
     */
    @Import(name="associationId")
    private @Nullable Output<String> associationId;

    /**
     * @return The first ID of the resource.
     * 
     */
    public Optional<Output<String>> associationId() {
        return Optional.ofNullable(this.associationId);
    }

    /**
     * The region to which the VPC or TR belongs.
     * 
     */
    @Import(name="associationRegionId")
    private @Nullable Output<String> associationRegionId;

    /**
     * @return The region to which the VPC or TR belongs.
     * 
     */
    public Optional<Output<String>> associationRegionId() {
        return Optional.ofNullable(this.associationRegionId);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID of the leased line gateway instance.
     * 
     */
    @Import(name="ecrId")
    private @Nullable Output<String> ecrId;

    /**
     * @return The ID of the leased line gateway instance.
     * 
     */
    public Optional<Output<String>> ecrId() {
        return Optional.ofNullable(this.ecrId);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the VPC instance.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the VPC instance.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of the Alibaba Cloud account to which the VPC belongs.
     * 
     */
    @Import(name="vpcOwnerId")
    private @Nullable Output<Integer> vpcOwnerId;

    /**
     * @return The ID of the Alibaba Cloud account to which the VPC belongs.
     * 
     */
    public Optional<Output<Integer>> vpcOwnerId() {
        return Optional.ofNullable(this.vpcOwnerId);
    }

    private RouterVpcAssociationState() {}

    private RouterVpcAssociationState(RouterVpcAssociationState $) {
        this.allowedPrefixes = $.allowedPrefixes;
        this.associationId = $.associationId;
        this.associationRegionId = $.associationRegionId;
        this.createTime = $.createTime;
        this.ecrId = $.ecrId;
        this.status = $.status;
        this.vpcId = $.vpcId;
        this.vpcOwnerId = $.vpcOwnerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterVpcAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterVpcAssociationState $;

        public Builder() {
            $ = new RouterVpcAssociationState();
        }

        public Builder(RouterVpcAssociationState defaults) {
            $ = new RouterVpcAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedPrefixes List of allowed route prefixes.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrefixes(@Nullable Output<List<String>> allowedPrefixes) {
            $.allowedPrefixes = allowedPrefixes;
            return this;
        }

        /**
         * @param allowedPrefixes List of allowed route prefixes.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrefixes(List<String> allowedPrefixes) {
            return allowedPrefixes(Output.of(allowedPrefixes));
        }

        /**
         * @param allowedPrefixes List of allowed route prefixes.
         * 
         * @return builder
         * 
         */
        public Builder allowedPrefixes(String... allowedPrefixes) {
            return allowedPrefixes(List.of(allowedPrefixes));
        }

        /**
         * @param associationId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder associationId(@Nullable Output<String> associationId) {
            $.associationId = associationId;
            return this;
        }

        /**
         * @param associationId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder associationId(String associationId) {
            return associationId(Output.of(associationId));
        }

        /**
         * @param associationRegionId The region to which the VPC or TR belongs.
         * 
         * @return builder
         * 
         */
        public Builder associationRegionId(@Nullable Output<String> associationRegionId) {
            $.associationRegionId = associationRegionId;
            return this;
        }

        /**
         * @param associationRegionId The region to which the VPC or TR belongs.
         * 
         * @return builder
         * 
         */
        public Builder associationRegionId(String associationRegionId) {
            return associationRegionId(Output.of(associationRegionId));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param ecrId The ID of the leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(@Nullable Output<String> ecrId) {
            $.ecrId = ecrId;
            return this;
        }

        /**
         * @param ecrId The ID of the leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(String ecrId) {
            return ecrId(Output.of(ecrId));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId The ID of the VPC instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vpcOwnerId The ID of the Alibaba Cloud account to which the VPC belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcOwnerId(@Nullable Output<Integer> vpcOwnerId) {
            $.vpcOwnerId = vpcOwnerId;
            return this;
        }

        /**
         * @param vpcOwnerId The ID of the Alibaba Cloud account to which the VPC belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcOwnerId(Integer vpcOwnerId) {
            return vpcOwnerId(Output.of(vpcOwnerId));
        }

        public RouterVpcAssociationState build() {
            return $;
        }
    }

}
