// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKeyPairsPairInstance {
    /**
     * @return The ID of the availability zone where the ECS instance is located.
     * 
     */
    private String availabilityZone;
    private String description;
    private String imageId;
    /**
     * @return The ID of the ECS instance.
     * 
     */
    private String instanceId;
    /**
     * @return The name of the ECS instance.
     * 
     */
    private String instanceName;
    private String instanceType;
    /**
     * @return Name of the key pair.
     * 
     */
    private String keyName;
    /**
     * @return The private IP address of the ECS instance.
     * 
     */
    private String privateIp;
    /**
     * @return The public IP address or EIP of the ECS instance.
     * 
     */
    private String publicIp;
    private String regionId;
    private String status;
    /**
     * @return The ID of the VSwitch attached to the ECS instance.
     * 
     */
    private String vswitchId;

    private GetKeyPairsPairInstance() {}
    /**
     * @return The ID of the availability zone where the ECS instance is located.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    public String description() {
        return this.description;
    }
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The ID of the ECS instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The name of the ECS instance.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return Name of the key pair.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    /**
     * @return The private IP address of the ECS instance.
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return The public IP address or EIP of the ECS instance.
     * 
     */
    public String publicIp() {
        return this.publicIp;
    }
    public String regionId() {
        return this.regionId;
    }
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the VSwitch attached to the ECS instance.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyPairsPairInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityZone;
        private String description;
        private String imageId;
        private String instanceId;
        private String instanceName;
        private String instanceType;
        private String keyName;
        private String privateIp;
        private String publicIp;
        private String regionId;
        private String status;
        private String vswitchId;
        public Builder() {}
        public Builder(GetKeyPairsPairInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.description = defaults.description;
    	      this.imageId = defaults.imageId;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.keyName = defaults.keyName;
    	      this.privateIp = defaults.privateIp;
    	      this.publicIp = defaults.publicIp;
    	      this.regionId = defaults.regionId;
    	      this.status = defaults.status;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            if (keyName == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "keyName");
            }
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            if (privateIp == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "privateIp");
            }
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            if (publicIp == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "publicIp");
            }
            this.publicIp = publicIp;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetKeyPairsPairInstance", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        public GetKeyPairsPairInstance build() {
            final var _resultValue = new GetKeyPairsPairInstance();
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.description = description;
            _resultValue.imageId = imageId;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.instanceType = instanceType;
            _resultValue.keyName = keyName;
            _resultValue.privateIp = privateIp;
            _resultValue.publicIp = publicIp;
            _resultValue.regionId = regionId;
            _resultValue.status = status;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
