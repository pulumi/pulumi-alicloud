// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram.inputs;

import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentStatementCondition;
import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentStatementPrincipal;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyDocumentStatement extends com.pulumi.resources.InvokeArgs {

    public static final GetPolicyDocumentStatement Empty = new GetPolicyDocumentStatement();

    /**
     * Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
     * 
     */
    @Import(name="actions", required=true)
    private List<String> actions;

    /**
     * @return Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
     * 
     */
    public List<String> actions() {
        return this.actions;
    }

    /**
     * Specifies the condition that are required for a policy to take effect. See `condition` below.
     * 
     */
    @Import(name="conditions")
    private @Nullable List<GetPolicyDocumentStatementCondition> conditions;

    /**
     * @return Specifies the condition that are required for a policy to take effect. See `condition` below.
     * 
     */
    public Optional<List<GetPolicyDocumentStatementCondition>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
     * 
     */
    @Import(name="effect")
    private @Nullable String effect;

    /**
     * @return This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
     * 
     */
    public Optional<String> effect() {
        return Optional.ofNullable(this.effect);
    }

    /**
     * Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
     * 
     */
    @Import(name="principals")
    private @Nullable List<GetPolicyDocumentStatementPrincipal> principals;

    /**
     * @return Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
     * 
     */
    public Optional<List<GetPolicyDocumentStatementPrincipal>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
     * 
     */
    @Import(name="resources")
    private @Nullable List<String> resources;

    /**
     * @return List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
     * 
     */
    public Optional<List<String>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private GetPolicyDocumentStatement() {}

    private GetPolicyDocumentStatement(GetPolicyDocumentStatement $) {
        this.actions = $.actions;
        this.conditions = $.conditions;
        this.effect = $.effect;
        this.principals = $.principals;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyDocumentStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyDocumentStatement $;

        public Builder() {
            $ = new GetPolicyDocumentStatement();
        }

        public Builder(GetPolicyDocumentStatement defaults) {
            $ = new GetPolicyDocumentStatement(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param conditions Specifies the condition that are required for a policy to take effect. See `condition` below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable List<GetPolicyDocumentStatementCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Specifies the condition that are required for a policy to take effect. See `condition` below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(GetPolicyDocumentStatementCondition... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param effect This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder effect(@Nullable String effect) {
            $.effect = effect;
            return this;
        }

        /**
         * @param principals Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable List<GetPolicyDocumentStatementPrincipal> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
         * 
         * @return builder
         * 
         */
        public Builder principals(GetPolicyDocumentStatementPrincipal... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param resources List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable List<String> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public GetPolicyDocumentStatement build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            return $;
        }
    }

}
