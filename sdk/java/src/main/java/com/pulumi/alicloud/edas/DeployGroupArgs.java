// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DeployGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployGroupArgs Empty = new DeployGroupArgs();

    /**
     * The ID of the application that you want to deploy.
     * 
     */
    @Import(name="appId", required=true)
    private Output<String> appId;

    /**
     * @return The ID of the application that you want to deploy.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }

    /**
     * The name of the instance group that you want to create.
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return The name of the instance group that you want to create.
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    private DeployGroupArgs() {}

    private DeployGroupArgs(DeployGroupArgs $) {
        this.appId = $.appId;
        this.groupName = $.groupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployGroupArgs $;

        public Builder() {
            $ = new DeployGroupArgs();
        }

        public Builder(DeployGroupArgs defaults) {
            $ = new DeployGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId The ID of the application that you want to deploy.
         * 
         * @return builder
         * 
         */
        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId The ID of the application that you want to deploy.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param groupName The name of the instance group that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The name of the instance group that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public DeployGroupArgs build() {
            if ($.appId == null) {
                throw new MissingRequiredPropertyException("DeployGroupArgs", "appId");
            }
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("DeployGroupArgs", "groupName");
            }
            return $;
        }
    }

}
