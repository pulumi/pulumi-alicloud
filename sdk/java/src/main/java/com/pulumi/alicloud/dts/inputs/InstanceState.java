// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Whether to automatically renew the fee when it expires. Valid values:
     * - **false**: No, the default value.
     * - **true**: Yes.
     * 
     */
    @Import(name="autoPay")
    private @Nullable Output<Boolean> autoPay;

    /**
     * @return Whether to automatically renew the fee when it expires. Valid values:
     * - **false**: No, the default value.
     * - **true**: Yes.
     * 
     */
    public Optional<Output<Boolean>> autoPay() {
        return Optional.ofNullable(this.autoPay);
    }

    /**
     * Whether to start the task automatically after the purchase is completed. Value:
     * - **false**: No, the default value.
     * - **true**: Yes.
     * 
     */
    @Import(name="autoStart")
    private @Nullable Output<Boolean> autoStart;

    /**
     * @return Whether to start the task automatically after the purchase is completed. Value:
     * - **false**: No, the default value.
     * - **true**: Yes.
     * 
     */
    public Optional<Output<Boolean>> autoStart() {
        return Optional.ofNullable(this.autoStart);
    }

    /**
     * Specifications of ETL. The unit is compute unit (CU),1CU = 1vCPU +4GB of memory. The value range is an integer greater than or equal to 2. **NOTE:** Enter this parameter and enable ETL to clean and convert data.
     * 
     */
    @Import(name="computeUnit")
    private @Nullable Output<Integer> computeUnit;

    /**
     * @return Specifications of ETL. The unit is compute unit (CU),1CU = 1vCPU +4GB of memory. The value range is an integer greater than or equal to 2. **NOTE:** Enter this parameter and enable ETL to clean and convert data.
     * 
     */
    public Optional<Output<Integer>> computeUnit() {
        return Optional.ofNullable(this.computeUnit);
    }

    /**
     * Instance creation time
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Instance creation time
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The number of private custom RDS instances in the PolarDB-X. The default value is **1**. **NOTE:** This parameter is required only when **source_endpoint_engine_name** is **DRDS**.
     * 
     */
    @Import(name="databaseCount")
    private @Nullable Output<Integer> databaseCount;

    /**
     * @return The number of private custom RDS instances in the PolarDB-X. The default value is **1**. **NOTE:** This parameter is required only when **source_endpoint_engine_name** is **DRDS**.
     * 
     */
    public Optional<Output<Integer>> databaseCount() {
        return Optional.ofNullable(this.databaseCount);
    }

    /**
     * The target database engine type.
     * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
     * - **PolarDB**:PolarDB MySQL.
     * - **polardb_o**:PolarDB O engine.
     * - **polardb_pg**:PolarDB PostgreSQL.
     * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
     * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
     * - **PostgreSQL**: User-created PostgreSQL.
     * - **odps**: MaxCompute project.
     * - **oracle**: self-built Oracle.
     * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
     * - **tidb**:TiDB database.
     * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
     * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
     * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
     * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
     * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
     * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
     * - **clickhouse**: ClickHouse.
     * - **DB2**: self-built DB2 LUW.
     * - **as400**:AS/400.
     * - **Tablestore**: Tablestore.
     * - **NOTE:**
     * - The default value is **MySQL**.
     * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
     * - This parameter or **job_id** must be passed in.
     * 
     */
    @Import(name="destinationEndpointEngineName")
    private @Nullable Output<String> destinationEndpointEngineName;

    /**
     * @return The target database engine type.
     * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
     * - **PolarDB**:PolarDB MySQL.
     * - **polardb_o**:PolarDB O engine.
     * - **polardb_pg**:PolarDB PostgreSQL.
     * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
     * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
     * - **PostgreSQL**: User-created PostgreSQL.
     * - **odps**: MaxCompute project.
     * - **oracle**: self-built Oracle.
     * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
     * - **tidb**:TiDB database.
     * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
     * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
     * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
     * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
     * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
     * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
     * - **clickhouse**: ClickHouse.
     * - **DB2**: self-built DB2 LUW.
     * - **as400**:AS/400.
     * - **Tablestore**: Tablestore.
     * - **NOTE:**
     * - The default value is **MySQL**.
     * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
     * - This parameter or **job_id** must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointEngineName() {
        return Optional.ofNullable(this.destinationEndpointEngineName);
    }

    /**
     * The target instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    @Import(name="destinationRegion")
    private @Nullable Output<String> destinationRegion;

    /**
     * @return The target instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    public Optional<Output<String>> destinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }

    /**
     * The ID of the subscription instance.
     * 
     */
    @Import(name="dtsInstanceId")
    private @Nullable Output<String> dtsInstanceId;

    /**
     * @return The ID of the subscription instance.
     * 
     */
    public Optional<Output<String>> dtsInstanceId() {
        return Optional.ofNullable(this.dtsInstanceId);
    }

    /**
     * Assign a specified number of DU resources to DTS tasks in the DTS exclusive cluster. Valid values: **1** ~ **100**. **NOTE:** The value of this parameter must be within the range of the number of DUs available for the DTS dedicated cluster.
     * 
     */
    @Import(name="du")
    private @Nullable Output<Integer> du;

    /**
     * @return Assign a specified number of DU resources to DTS tasks in the DTS exclusive cluster. Valid values: **1** ~ **100**. **NOTE:** The value of this parameter must be within the range of the number of DUs available for the DTS dedicated cluster.
     * 
     */
    public Optional<Output<Integer>> du() {
        return Optional.ofNullable(this.du);
    }

    /**
     * Subscription billing type, Valid values: `ONLY_CONFIGURATION_FEE`: charges only configuration fees; `CONFIGURATION_FEE_AND_DATA_FEE`: charges configuration fees and data traffic fees.
     * 
     */
    @Import(name="feeType")
    private @Nullable Output<String> feeType;

    /**
     * @return Subscription billing type, Valid values: `ONLY_CONFIGURATION_FEE`: charges only configuration fees; `CONFIGURATION_FEE_AND_DATA_FEE`: charges configuration fees and data traffic fees.
     * 
     */
    public Optional<Output<String>> feeType() {
        return Optional.ofNullable(this.feeType);
    }

    /**
     * The type of the migration or synchronization instance.
     * - The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.
     * - The types of synchronization instances: **large**, **medium**, **small**, **micro**.
     * - **NOTE:** For performance descriptions of different specifications, see [Data Migration Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/cd773b) and [Data Synchronization Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/6bce7c).
     * 
     */
    @Import(name="instanceClass")
    private @Nullable Output<String> instanceClass;

    /**
     * @return The type of the migration or synchronization instance.
     * - The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.
     * - The types of synchronization instances: **large**, **medium**, **small**, **micro**.
     * - **NOTE:** For performance descriptions of different specifications, see [Data Migration Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/cd773b) and [Data Synchronization Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/6bce7c).
     * 
     */
    public Optional<Output<String>> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    /**
     * The name of Dts instance.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of Dts instance.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * The ID of the task obtained by calling the **ConfigureDtsJob** operation (**DtsJobId**).&gt; After you pass in this parameter, you do not need to pass the **source_region**, **destination_region**, **type**, **source_endpoint_engine_name**, or **destination_endpoint_engine_name** parameters. Even if the input is passed in, the configuration in **job_id** shall prevail.
     * 
     */
    @Import(name="jobId")
    private @Nullable Output<String> jobId;

    /**
     * @return The ID of the task obtained by calling the **ConfigureDtsJob** operation (**DtsJobId**).&gt; After you pass in this parameter, you do not need to pass the **source_region**, **destination_region**, **type**, **source_endpoint_engine_name**, or **destination_endpoint_engine_name** parameters. Even if the input is passed in, the configuration in **job_id** shall prevail.
     * 
     */
    public Optional<Output<String>> jobId() {
        return Optional.ofNullable(this.jobId);
    }

    /**
     * The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * The billing method of the subscription instance. Value: `Year`, `Month`. **NOTE:** This parameter is valid and must be passed in only when `paymentType` is `Subscription`.
     * 
     */
    @Import(name="period")
    private @Nullable Output<String> period;

    /**
     * @return The billing method of the subscription instance. Value: `Year`, `Month`. **NOTE:** This parameter is valid and must be passed in only when `paymentType` is `Subscription`.
     * 
     */
    public Optional<Output<String>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Resource Group ID.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return Resource Group ID.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Source instance database engine type.
     * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
     * - **PolarDB**:PolarDB MySQL.
     * - **polardb_o**:PolarDB O engine.
     * - **polardb_pg**:PolarDB PostgreSQL.
     * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
     * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
     * - **PostgreSQL**: User-created PostgreSQL.
     * - **odps**: MaxCompute project.
     * - **oracle**: self-built Oracle.
     * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
     * - **tidb**:TiDB database.
     * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
     * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
     * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
     * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
     * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
     * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
     * - **clickhouse**: ClickHouse.
     * - **DB2**: self-built DB2 LUW.
     * - **as400**:AS/400.
     * - **Tablestore**: Tablestore.
     * - **NOTE:**
     * - The default value is **MySQL**.
     * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
     * - This parameter or **job_id** must be passed in.
     * 
     */
    @Import(name="sourceEndpointEngineName")
    private @Nullable Output<String> sourceEndpointEngineName;

    /**
     * @return Source instance database engine type.
     * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
     * - **PolarDB**:PolarDB MySQL.
     * - **polardb_o**:PolarDB O engine.
     * - **polardb_pg**:PolarDB PostgreSQL.
     * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
     * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
     * - **PostgreSQL**: User-created PostgreSQL.
     * - **odps**: MaxCompute project.
     * - **oracle**: self-built Oracle.
     * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
     * - **tidb**:TiDB database.
     * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
     * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
     * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
     * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
     * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
     * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
     * - **clickhouse**: ClickHouse.
     * - **DB2**: self-built DB2 LUW.
     * - **as400**:AS/400.
     * - **Tablestore**: Tablestore.
     * - **NOTE:**
     * - The default value is **MySQL**.
     * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
     * - This parameter or **job_id** must be passed in.
     * 
     */
    public Optional<Output<String>> sourceEndpointEngineName() {
        return Optional.ofNullable(this.sourceEndpointEngineName);
    }

    /**
     * The source instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    @Import(name="sourceRegion")
    private @Nullable Output<String> sourceRegion;

    /**
     * @return The source instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    public Optional<Output<String>> sourceRegion() {
        return Optional.ofNullable(this.sourceRegion);
    }

    /**
     * Instance status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Instance status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Synchronization topology, value:
     * - **oneway**: one-way synchronization, the default value.
     * - **bidirectional**: two-way synchronization.
     * 
     */
    @Import(name="syncArchitecture")
    private @Nullable Output<String> syncArchitecture;

    /**
     * @return Synchronization topology, value:
     * - **oneway**: one-way synchronization, the default value.
     * - **bidirectional**: two-way synchronization.
     * 
     */
    public Optional<Output<String>> syncArchitecture() {
        return Optional.ofNullable(this.syncArchitecture);
    }

    /**
     * The synchronization direction. Default value: `Forward`. Valid values:
     * - `Forward`: Data is synchronized from the source database to the destination database.
     * - `Reverse`: Data is synchronized from the destination database to the source database.
     * - **NOTE:** You can set this parameter to Reverse to delete the reverse synchronization task only if the topology is two-way synchronization.
     * 
     */
    @Import(name="synchronizationDirection")
    private @Nullable Output<String> synchronizationDirection;

    /**
     * @return The synchronization direction. Default value: `Forward`. Valid values:
     * - `Forward`: Data is synchronized from the source database to the destination database.
     * - `Reverse`: Data is synchronized from the destination database to the source database.
     * - **NOTE:** You can set this parameter to Reverse to delete the reverse synchronization task only if the topology is two-way synchronization.
     * 
     */
    public Optional<Output<String>> synchronizationDirection() {
        return Optional.ofNullable(this.synchronizationDirection);
    }

    /**
     * The tag value corresponding to the tag key.See the following `Block Tags`.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag value corresponding to the tag key.See the following `Block Tags`.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The instance type. Valid values:
     * - **migration**: MIGRATION.
     * - **sync**: synchronization.
     * - **subscribe**: SUBSCRIBE.
     * - **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The instance type. Valid values:
     * - **migration**: MIGRATION.
     * - **sync**: synchronization.
     * - **subscribe**: SUBSCRIBE.
     * - **NOTE:** This parameter or **job_id** must be passed in.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Prepaid instance purchase duration.
     * - When **period** is **Month**, the values are: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When **Period** is **Year**, the values are 1, 2, 3, and 5.
     * - **NOTE:**
     * - This parameter is valid and must be passed in only when **payment_type** is `Subscription`.
     * - The billing method of the subscription instance. You can set the parameter `period`.
     * 
     */
    @Import(name="usedTime")
    private @Nullable Output<Integer> usedTime;

    /**
     * @return Prepaid instance purchase duration.
     * - When **period** is **Month**, the values are: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When **Period** is **Year**, the values are 1, 2, 3, and 5.
     * - **NOTE:**
     * - This parameter is valid and must be passed in only when **payment_type** is `Subscription`.
     * - The billing method of the subscription instance. You can set the parameter `period`.
     * 
     */
    public Optional<Output<Integer>> usedTime() {
        return Optional.ofNullable(this.usedTime);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.autoPay = $.autoPay;
        this.autoStart = $.autoStart;
        this.computeUnit = $.computeUnit;
        this.createTime = $.createTime;
        this.databaseCount = $.databaseCount;
        this.destinationEndpointEngineName = $.destinationEndpointEngineName;
        this.destinationRegion = $.destinationRegion;
        this.dtsInstanceId = $.dtsInstanceId;
        this.du = $.du;
        this.feeType = $.feeType;
        this.instanceClass = $.instanceClass;
        this.instanceName = $.instanceName;
        this.jobId = $.jobId;
        this.paymentType = $.paymentType;
        this.period = $.period;
        this.resourceGroupId = $.resourceGroupId;
        this.sourceEndpointEngineName = $.sourceEndpointEngineName;
        this.sourceRegion = $.sourceRegion;
        this.status = $.status;
        this.syncArchitecture = $.syncArchitecture;
        this.synchronizationDirection = $.synchronizationDirection;
        this.tags = $.tags;
        this.type = $.type;
        this.usedTime = $.usedTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPay Whether to automatically renew the fee when it expires. Valid values:
         * - **false**: No, the default value.
         * - **true**: Yes.
         * 
         * @return builder
         * 
         */
        public Builder autoPay(@Nullable Output<Boolean> autoPay) {
            $.autoPay = autoPay;
            return this;
        }

        /**
         * @param autoPay Whether to automatically renew the fee when it expires. Valid values:
         * - **false**: No, the default value.
         * - **true**: Yes.
         * 
         * @return builder
         * 
         */
        public Builder autoPay(Boolean autoPay) {
            return autoPay(Output.of(autoPay));
        }

        /**
         * @param autoStart Whether to start the task automatically after the purchase is completed. Value:
         * - **false**: No, the default value.
         * - **true**: Yes.
         * 
         * @return builder
         * 
         */
        public Builder autoStart(@Nullable Output<Boolean> autoStart) {
            $.autoStart = autoStart;
            return this;
        }

        /**
         * @param autoStart Whether to start the task automatically after the purchase is completed. Value:
         * - **false**: No, the default value.
         * - **true**: Yes.
         * 
         * @return builder
         * 
         */
        public Builder autoStart(Boolean autoStart) {
            return autoStart(Output.of(autoStart));
        }

        /**
         * @param computeUnit Specifications of ETL. The unit is compute unit (CU),1CU = 1vCPU +4GB of memory. The value range is an integer greater than or equal to 2. **NOTE:** Enter this parameter and enable ETL to clean and convert data.
         * 
         * @return builder
         * 
         */
        public Builder computeUnit(@Nullable Output<Integer> computeUnit) {
            $.computeUnit = computeUnit;
            return this;
        }

        /**
         * @param computeUnit Specifications of ETL. The unit is compute unit (CU),1CU = 1vCPU +4GB of memory. The value range is an integer greater than or equal to 2. **NOTE:** Enter this parameter and enable ETL to clean and convert data.
         * 
         * @return builder
         * 
         */
        public Builder computeUnit(Integer computeUnit) {
            return computeUnit(Output.of(computeUnit));
        }

        /**
         * @param createTime Instance creation time
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Instance creation time
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param databaseCount The number of private custom RDS instances in the PolarDB-X. The default value is **1**. **NOTE:** This parameter is required only when **source_endpoint_engine_name** is **DRDS**.
         * 
         * @return builder
         * 
         */
        public Builder databaseCount(@Nullable Output<Integer> databaseCount) {
            $.databaseCount = databaseCount;
            return this;
        }

        /**
         * @param databaseCount The number of private custom RDS instances in the PolarDB-X. The default value is **1**. **NOTE:** This parameter is required only when **source_endpoint_engine_name** is **DRDS**.
         * 
         * @return builder
         * 
         */
        public Builder databaseCount(Integer databaseCount) {
            return databaseCount(Output.of(databaseCount));
        }

        /**
         * @param destinationEndpointEngineName The target database engine type.
         * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
         * - **PolarDB**:PolarDB MySQL.
         * - **polardb_o**:PolarDB O engine.
         * - **polardb_pg**:PolarDB PostgreSQL.
         * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
         * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
         * - **PostgreSQL**: User-created PostgreSQL.
         * - **odps**: MaxCompute project.
         * - **oracle**: self-built Oracle.
         * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
         * - **tidb**:TiDB database.
         * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
         * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
         * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
         * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
         * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
         * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
         * - **clickhouse**: ClickHouse.
         * - **DB2**: self-built DB2 LUW.
         * - **as400**:AS/400.
         * - **Tablestore**: Tablestore.
         * - **NOTE:**
         * - The default value is **MySQL**.
         * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
         * - This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(@Nullable Output<String> destinationEndpointEngineName) {
            $.destinationEndpointEngineName = destinationEndpointEngineName;
            return this;
        }

        /**
         * @param destinationEndpointEngineName The target database engine type.
         * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
         * - **PolarDB**:PolarDB MySQL.
         * - **polardb_o**:PolarDB O engine.
         * - **polardb_pg**:PolarDB PostgreSQL.
         * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
         * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
         * - **PostgreSQL**: User-created PostgreSQL.
         * - **odps**: MaxCompute project.
         * - **oracle**: self-built Oracle.
         * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
         * - **tidb**:TiDB database.
         * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
         * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
         * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
         * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
         * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
         * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
         * - **clickhouse**: ClickHouse.
         * - **DB2**: self-built DB2 LUW.
         * - **as400**:AS/400.
         * - **Tablestore**: Tablestore.
         * - **NOTE:**
         * - The default value is **MySQL**.
         * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
         * - This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(String destinationEndpointEngineName) {
            return destinationEndpointEngineName(Output.of(destinationEndpointEngineName));
        }

        /**
         * @param destinationRegion The target instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationRegion(@Nullable Output<String> destinationRegion) {
            $.destinationRegion = destinationRegion;
            return this;
        }

        /**
         * @param destinationRegion The target instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationRegion(String destinationRegion) {
            return destinationRegion(Output.of(destinationRegion));
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(@Nullable Output<String> dtsInstanceId) {
            $.dtsInstanceId = dtsInstanceId;
            return this;
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(String dtsInstanceId) {
            return dtsInstanceId(Output.of(dtsInstanceId));
        }

        /**
         * @param du Assign a specified number of DU resources to DTS tasks in the DTS exclusive cluster. Valid values: **1** ~ **100**. **NOTE:** The value of this parameter must be within the range of the number of DUs available for the DTS dedicated cluster.
         * 
         * @return builder
         * 
         */
        public Builder du(@Nullable Output<Integer> du) {
            $.du = du;
            return this;
        }

        /**
         * @param du Assign a specified number of DU resources to DTS tasks in the DTS exclusive cluster. Valid values: **1** ~ **100**. **NOTE:** The value of this parameter must be within the range of the number of DUs available for the DTS dedicated cluster.
         * 
         * @return builder
         * 
         */
        public Builder du(Integer du) {
            return du(Output.of(du));
        }

        /**
         * @param feeType Subscription billing type, Valid values: `ONLY_CONFIGURATION_FEE`: charges only configuration fees; `CONFIGURATION_FEE_AND_DATA_FEE`: charges configuration fees and data traffic fees.
         * 
         * @return builder
         * 
         */
        public Builder feeType(@Nullable Output<String> feeType) {
            $.feeType = feeType;
            return this;
        }

        /**
         * @param feeType Subscription billing type, Valid values: `ONLY_CONFIGURATION_FEE`: charges only configuration fees; `CONFIGURATION_FEE_AND_DATA_FEE`: charges configuration fees and data traffic fees.
         * 
         * @return builder
         * 
         */
        public Builder feeType(String feeType) {
            return feeType(Output.of(feeType));
        }

        /**
         * @param instanceClass The type of the migration or synchronization instance.
         * - The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.
         * - The types of synchronization instances: **large**, **medium**, **small**, **micro**.
         * - **NOTE:** For performance descriptions of different specifications, see [Data Migration Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/cd773b) and [Data Synchronization Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/6bce7c).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass The type of the migration or synchronization instance.
         * - The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.
         * - The types of synchronization instances: **large**, **medium**, **small**, **micro**.
         * - **NOTE:** For performance descriptions of different specifications, see [Data Migration Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/cd773b) and [Data Synchronization Link Specifications](https://www.alibabacloud.com/help/en/data-transmission-service/latest/6bce7c).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param instanceName The name of Dts instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of Dts instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param jobId The ID of the task obtained by calling the **ConfigureDtsJob** operation (**DtsJobId**).&gt; After you pass in this parameter, you do not need to pass the **source_region**, **destination_region**, **type**, **source_endpoint_engine_name**, or **destination_endpoint_engine_name** parameters. Even if the input is passed in, the configuration in **job_id** shall prevail.
         * 
         * @return builder
         * 
         */
        public Builder jobId(@Nullable Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param jobId The ID of the task obtained by calling the **ConfigureDtsJob** operation (**DtsJobId**).&gt; After you pass in this parameter, you do not need to pass the **source_region**, **destination_region**, **type**, **source_endpoint_engine_name**, or **destination_endpoint_engine_name** parameters. Even if the input is passed in, the configuration in **job_id** shall prevail.
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        /**
         * @param paymentType The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param period The billing method of the subscription instance. Value: `Year`, `Month`. **NOTE:** This parameter is valid and must be passed in only when `paymentType` is `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<String> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The billing method of the subscription instance. Value: `Year`, `Month`. **NOTE:** This parameter is valid and must be passed in only when `paymentType` is `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder period(String period) {
            return period(Output.of(period));
        }

        /**
         * @param resourceGroupId Resource Group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId Resource Group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param sourceEndpointEngineName Source instance database engine type.
         * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
         * - **PolarDB**:PolarDB MySQL.
         * - **polardb_o**:PolarDB O engine.
         * - **polardb_pg**:PolarDB PostgreSQL.
         * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
         * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
         * - **PostgreSQL**: User-created PostgreSQL.
         * - **odps**: MaxCompute project.
         * - **oracle**: self-built Oracle.
         * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
         * - **tidb**:TiDB database.
         * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
         * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
         * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
         * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
         * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
         * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
         * - **clickhouse**: ClickHouse.
         * - **DB2**: self-built DB2 LUW.
         * - **as400**:AS/400.
         * - **Tablestore**: Tablestore.
         * - **NOTE:**
         * - The default value is **MySQL**.
         * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
         * - This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(@Nullable Output<String> sourceEndpointEngineName) {
            $.sourceEndpointEngineName = sourceEndpointEngineName;
            return this;
        }

        /**
         * @param sourceEndpointEngineName Source instance database engine type.
         * - **MySQL**:MySQL databases (including RDS MySQL and self-built MySQL).
         * - **PolarDB**:PolarDB MySQL.
         * - **polardb_o**:PolarDB O engine.
         * - **polardb_pg**:PolarDB PostgreSQL.
         * - **Redis**:Redis databases (including apsaradb for Redis and user-created Redis).
         * - **DRDS**: cloud-native distributed database PolarDB-X 1.0 and 2.0.
         * - **PostgreSQL**: User-created PostgreSQL.
         * - **odps**: MaxCompute project.
         * - **oracle**: self-built Oracle.
         * - **mongodb**:MongoDB databases (including apsaradb for MongoDB and user-created MongoDB).
         * - **tidb**:TiDB database.
         * - **ADS**: Cloud native data warehouse AnalyticDB MySQL 2.0.
         * - **ADB30**: Cloud native data warehouse AnalyticDB MySQL 3.0.
         * - **Greenplum**: Cloud native data warehouse AnalyticDB PostgreSQL.
         * - **MSSQL**:SQL Server databases (including RDS SQL Server and self-built SQL Server).
         * - **kafka**:Kafka databases (including Kafka and self-built Kafka).
         * - **DataHub**: DataHub, an Alibaba cloud streaming data service.
         * - **clickhouse**: ClickHouse.
         * - **DB2**: self-built DB2 LUW.
         * - **as400**:AS/400.
         * - **Tablestore**: Tablestore.
         * - **NOTE:**
         * - The default value is **MySQL**.
         * - For more information about the supported source and destination databases, see [Database, Synchronization Initialization Type, and Synchronization Topology](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-synchronization-scenarios-1) and [Supported Database and Migration Type](https://www.alibabacloud.com/help/en/data-transmission-service/latest/overview-of-data-migration-scenarios).
         * - This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(String sourceEndpointEngineName) {
            return sourceEndpointEngineName(Output.of(sourceEndpointEngineName));
        }

        /**
         * @param sourceRegion The source instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(@Nullable Output<String> sourceRegion) {
            $.sourceRegion = sourceRegion;
            return this;
        }

        /**
         * @param sourceRegion The source instance region. For more information, see [List of supported regions](https://www.alibabacloud.com/help/en/data-transmission-service/latest/list-of-supported-regions). **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(String sourceRegion) {
            return sourceRegion(Output.of(sourceRegion));
        }

        /**
         * @param status Instance status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Instance status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param syncArchitecture Synchronization topology, value:
         * - **oneway**: one-way synchronization, the default value.
         * - **bidirectional**: two-way synchronization.
         * 
         * @return builder
         * 
         */
        public Builder syncArchitecture(@Nullable Output<String> syncArchitecture) {
            $.syncArchitecture = syncArchitecture;
            return this;
        }

        /**
         * @param syncArchitecture Synchronization topology, value:
         * - **oneway**: one-way synchronization, the default value.
         * - **bidirectional**: two-way synchronization.
         * 
         * @return builder
         * 
         */
        public Builder syncArchitecture(String syncArchitecture) {
            return syncArchitecture(Output.of(syncArchitecture));
        }

        /**
         * @param synchronizationDirection The synchronization direction. Default value: `Forward`. Valid values:
         * - `Forward`: Data is synchronized from the source database to the destination database.
         * - `Reverse`: Data is synchronized from the destination database to the source database.
         * - **NOTE:** You can set this parameter to Reverse to delete the reverse synchronization task only if the topology is two-way synchronization.
         * 
         * @return builder
         * 
         */
        public Builder synchronizationDirection(@Nullable Output<String> synchronizationDirection) {
            $.synchronizationDirection = synchronizationDirection;
            return this;
        }

        /**
         * @param synchronizationDirection The synchronization direction. Default value: `Forward`. Valid values:
         * - `Forward`: Data is synchronized from the source database to the destination database.
         * - `Reverse`: Data is synchronized from the destination database to the source database.
         * - **NOTE:** You can set this parameter to Reverse to delete the reverse synchronization task only if the topology is two-way synchronization.
         * 
         * @return builder
         * 
         */
        public Builder synchronizationDirection(String synchronizationDirection) {
            return synchronizationDirection(Output.of(synchronizationDirection));
        }

        /**
         * @param tags The tag value corresponding to the tag key.See the following `Block Tags`.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag value corresponding to the tag key.See the following `Block Tags`.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type The instance type. Valid values:
         * - **migration**: MIGRATION.
         * - **sync**: synchronization.
         * - **subscribe**: SUBSCRIBE.
         * - **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The instance type. Valid values:
         * - **migration**: MIGRATION.
         * - **sync**: synchronization.
         * - **subscribe**: SUBSCRIBE.
         * - **NOTE:** This parameter or **job_id** must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param usedTime Prepaid instance purchase duration.
         * - When **period** is **Month**, the values are: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
         * - When **Period** is **Year**, the values are 1, 2, 3, and 5.
         * - **NOTE:**
         * - This parameter is valid and must be passed in only when **payment_type** is `Subscription`.
         * - The billing method of the subscription instance. You can set the parameter `period`.
         * 
         * @return builder
         * 
         */
        public Builder usedTime(@Nullable Output<Integer> usedTime) {
            $.usedTime = usedTime;
            return this;
        }

        /**
         * @param usedTime Prepaid instance purchase duration.
         * - When **period** is **Month**, the values are: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
         * - When **Period** is **Year**, the values are 1, 2, 3, and 5.
         * - **NOTE:**
         * - This parameter is valid and must be passed in only when **payment_type** is `Subscription`.
         * - The billing method of the subscription instance. You can set the parameter `period`.
         * 
         * @return builder
         * 
         */
        public Builder usedTime(Integer usedTime) {
            return usedTime(Output.of(usedTime));
        }

        public InstanceState build() {
            return $;
        }
    }

}
