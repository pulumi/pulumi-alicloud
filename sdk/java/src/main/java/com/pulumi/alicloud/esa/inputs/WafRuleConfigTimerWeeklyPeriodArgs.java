// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WafRuleConfigTimerWeeklyPeriodArgs extends com.pulumi.resources.ResourceArgs {

    public static final WafRuleConfigTimerWeeklyPeriodArgs Empty = new WafRuleConfigTimerWeeklyPeriodArgs();

    /**
     * Daily effective time periods within a weekly schedule. See `dailyPeriods` below.
     * 
     */
    @Import(name="dailyPeriods")
    private @Nullable Output<List<WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs>> dailyPeriods;

    /**
     * @return Daily effective time periods within a weekly schedule. See `dailyPeriods` below.
     * 
     */
    public Optional<Output<List<WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs>>> dailyPeriods() {
        return Optional.ofNullable(this.dailyPeriods);
    }

    /**
     * Cycle, multiple use comma separated, 1-7 respectively represent Monday-Sunday.  Example: Monday, Wednesday value is &#34;1,3&#34;
     * 
     */
    @Import(name="days")
    private @Nullable Output<String> days;

    /**
     * @return Cycle, multiple use comma separated, 1-7 respectively represent Monday-Sunday.  Example: Monday, Wednesday value is &#34;1,3&#34;
     * 
     */
    public Optional<Output<String>> days() {
        return Optional.ofNullable(this.days);
    }

    private WafRuleConfigTimerWeeklyPeriodArgs() {}

    private WafRuleConfigTimerWeeklyPeriodArgs(WafRuleConfigTimerWeeklyPeriodArgs $) {
        this.dailyPeriods = $.dailyPeriods;
        this.days = $.days;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WafRuleConfigTimerWeeklyPeriodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WafRuleConfigTimerWeeklyPeriodArgs $;

        public Builder() {
            $ = new WafRuleConfigTimerWeeklyPeriodArgs();
        }

        public Builder(WafRuleConfigTimerWeeklyPeriodArgs defaults) {
            $ = new WafRuleConfigTimerWeeklyPeriodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dailyPeriods Daily effective time periods within a weekly schedule. See `dailyPeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder dailyPeriods(@Nullable Output<List<WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs>> dailyPeriods) {
            $.dailyPeriods = dailyPeriods;
            return this;
        }

        /**
         * @param dailyPeriods Daily effective time periods within a weekly schedule. See `dailyPeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder dailyPeriods(List<WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs> dailyPeriods) {
            return dailyPeriods(Output.of(dailyPeriods));
        }

        /**
         * @param dailyPeriods Daily effective time periods within a weekly schedule. See `dailyPeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder dailyPeriods(WafRuleConfigTimerWeeklyPeriodDailyPeriodArgs... dailyPeriods) {
            return dailyPeriods(List.of(dailyPeriods));
        }

        /**
         * @param days Cycle, multiple use comma separated, 1-7 respectively represent Monday-Sunday.  Example: Monday, Wednesday value is &#34;1,3&#34;
         * 
         * @return builder
         * 
         */
        public Builder days(@Nullable Output<String> days) {
            $.days = days;
            return this;
        }

        /**
         * @param days Cycle, multiple use comma separated, 1-7 respectively represent Monday-Sunday.  Example: Monday, Wednesday value is &#34;1,3&#34;
         * 
         * @return builder
         * 
         */
        public Builder days(String days) {
            return days(Output.of(days));
        }

        public WafRuleConfigTimerWeeklyPeriodArgs build() {
            return $;
        }
    }

}
