// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClustersCluster {
    /**
     * @return The ID of the cluster that you want to create the application.
     * 
     */
    private String clusterId;
    /**
     * @return The name of the cluster.
     * 
     */
    private String clusterName;
    /**
     * @return The type of the cluster, Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernetes cluster.
     * 
     */
    private Integer clusterType;
    /**
     * @return The total number of CPUs in the cluster.
     * 
     */
    private Integer cpu;
    /**
     * @return The number of used CPUs in the cluster.
     * 
     */
    private Integer cpuUsed;
    /**
     * @return Cluster&#39;s creation time.
     * 
     */
    private Integer createTime;
    /**
     * @return The total amount of memory in the cluser. Unit: MB.
     * 
     */
    private Integer mem;
    /**
     * @return The amount of used memory in the cluser. Unit: MB.
     * 
     */
    private Integer memUsed;
    /**
     * @return The network type of the cluster. Valid values: 1: classic network. 2: VPC.
     * 
     */
    private Integer networkMode;
    /**
     * @return The number of the Elastic Compute Service (ECS) instances that are deployed to the cluster.
     * 
     */
    private Integer nodeNum;
    /**
     * @return The ID of the namespace the application belongs to.
     * 
     */
    private String regionId;
    /**
     * @return The time when the cluster was last updated.
     * 
     */
    private Integer updateTime;
    /**
     * @return The ID of the Virtual Private Cloud (VPC) for the cluster.
     * 
     */
    private String vpcId;

    private GetClustersCluster() {}
    /**
     * @return The ID of the cluster that you want to create the application.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The name of the cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The type of the cluster, Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernetes cluster.
     * 
     */
    public Integer clusterType() {
        return this.clusterType;
    }
    /**
     * @return The total number of CPUs in the cluster.
     * 
     */
    public Integer cpu() {
        return this.cpu;
    }
    /**
     * @return The number of used CPUs in the cluster.
     * 
     */
    public Integer cpuUsed() {
        return this.cpuUsed;
    }
    /**
     * @return Cluster&#39;s creation time.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The total amount of memory in the cluser. Unit: MB.
     * 
     */
    public Integer mem() {
        return this.mem;
    }
    /**
     * @return The amount of used memory in the cluser. Unit: MB.
     * 
     */
    public Integer memUsed() {
        return this.memUsed;
    }
    /**
     * @return The network type of the cluster. Valid values: 1: classic network. 2: VPC.
     * 
     */
    public Integer networkMode() {
        return this.networkMode;
    }
    /**
     * @return The number of the Elastic Compute Service (ECS) instances that are deployed to the cluster.
     * 
     */
    public Integer nodeNum() {
        return this.nodeNum;
    }
    /**
     * @return The ID of the namespace the application belongs to.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The time when the cluster was last updated.
     * 
     */
    public Integer updateTime() {
        return this.updateTime;
    }
    /**
     * @return The ID of the Virtual Private Cloud (VPC) for the cluster.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String clusterName;
        private Integer clusterType;
        private Integer cpu;
        private Integer cpuUsed;
        private Integer createTime;
        private Integer mem;
        private Integer memUsed;
        private Integer networkMode;
        private Integer nodeNum;
        private String regionId;
        private Integer updateTime;
        private String vpcId;
        public Builder() {}
        public Builder(GetClustersCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.clusterName = defaults.clusterName;
    	      this.clusterType = defaults.clusterType;
    	      this.cpu = defaults.cpu;
    	      this.cpuUsed = defaults.cpuUsed;
    	      this.createTime = defaults.createTime;
    	      this.mem = defaults.mem;
    	      this.memUsed = defaults.memUsed;
    	      this.networkMode = defaults.networkMode;
    	      this.nodeNum = defaults.nodeNum;
    	      this.regionId = defaults.regionId;
    	      this.updateTime = defaults.updateTime;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder clusterType(Integer clusterType) {
            if (clusterType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "clusterType");
            }
            this.clusterType = clusterType;
            return this;
        }
        @CustomType.Setter
        public Builder cpu(Integer cpu) {
            if (cpu == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "cpu");
            }
            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder cpuUsed(Integer cpuUsed) {
            if (cpuUsed == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "cpuUsed");
            }
            this.cpuUsed = cpuUsed;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(Integer createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder mem(Integer mem) {
            if (mem == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "mem");
            }
            this.mem = mem;
            return this;
        }
        @CustomType.Setter
        public Builder memUsed(Integer memUsed) {
            if (memUsed == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "memUsed");
            }
            this.memUsed = memUsed;
            return this;
        }
        @CustomType.Setter
        public Builder networkMode(Integer networkMode) {
            if (networkMode == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "networkMode");
            }
            this.networkMode = networkMode;
            return this;
        }
        @CustomType.Setter
        public Builder nodeNum(Integer nodeNum) {
            if (nodeNum == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "nodeNum");
            }
            this.nodeNum = nodeNum;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(Integer updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetClustersCluster build() {
            final var _resultValue = new GetClustersCluster();
            _resultValue.clusterId = clusterId;
            _resultValue.clusterName = clusterName;
            _resultValue.clusterType = clusterType;
            _resultValue.cpu = cpu;
            _resultValue.cpuUsed = cpuUsed;
            _resultValue.createTime = createTime;
            _resultValue.mem = mem;
            _resultValue.memUsed = memUsed;
            _resultValue.networkMode = networkMode;
            _resultValue.nodeNum = nodeNum;
            _resultValue.regionId = regionId;
            _resultValue.updateTime = updateTime;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
