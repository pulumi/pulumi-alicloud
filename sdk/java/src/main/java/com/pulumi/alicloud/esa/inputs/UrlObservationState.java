// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UrlObservationState extends com.pulumi.resources.ResourceArgs {

    public static final UrlObservationState Empty = new UrlObservationState();

    /**
     * Config Id
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Config Id
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * SDK integration mode. Value:
     * 
     */
    @Import(name="sdkType")
    private @Nullable Output<String> sdkType;

    /**
     * @return SDK integration mode. Value:
     * 
     */
    public Optional<Output<String>> sdkType() {
        return Optional.ofNullable(this.sdkType);
    }

    /**
     * The site ID.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The site ID.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The URL of the page to monitor.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The URL of the page to monitor.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private UrlObservationState() {}

    private UrlObservationState(UrlObservationState $) {
        this.configId = $.configId;
        this.sdkType = $.sdkType;
        this.siteId = $.siteId;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UrlObservationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UrlObservationState $;

        public Builder() {
            $ = new UrlObservationState();
        }

        public Builder(UrlObservationState defaults) {
            $ = new UrlObservationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param sdkType SDK integration mode. Value:
         * 
         * @return builder
         * 
         */
        public Builder sdkType(@Nullable Output<String> sdkType) {
            $.sdkType = sdkType;
            return this;
        }

        /**
         * @param sdkType SDK integration mode. Value:
         * 
         * @return builder
         * 
         */
        public Builder sdkType(String sdkType) {
            return sdkType(Output.of(sdkType));
        }

        /**
         * @param siteId The site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param url The URL of the page to monitor.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL of the page to monitor.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public UrlObservationState build() {
            return $;
        }
    }

}
