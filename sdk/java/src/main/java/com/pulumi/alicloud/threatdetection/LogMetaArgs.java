// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LogMetaArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogMetaArgs Empty = new LogMetaArgs();

    /**
     * The name of the exclusive Logstore where logs are stored. Value:
     * - aegis-log-client: client event log
     * - aegis-log-crack: Brute Force log
     * - aegis-log-dns-query:DNS request log
     * - aegis-log-login: login log
     * - aegis-log-network: network connection log
     * - aegis-log-process: process startup log
     * - aegis-snapshot-host: account snapshot log
     * - aegis-snapshot-port: port snapshot log
     * - aegis-snapshot-process: process snapshot log
     * - local-dns: local DNS log
     * - sas-log-dns:DNS resolution log
     * - sas-log-http:WEB access log
     * - sas-log-session: Web session log
     * - sas-security-log: alarm log
     * - sas-vul-log: Vulnerability log
     * - sas-cspm-log: Cloud platform configuration check log
     * - sas-hc-log: baseline log
     * - sas-rasp-log: Application Protection Log
     * - sas-filedetect-log: file detection log
     * - sas-net-block: Network Defense Log
     * 
     */
    @Import(name="logMetaName", required=true)
    private Output<String> logMetaName;

    /**
     * @return The name of the exclusive Logstore where logs are stored. Value:
     * - aegis-log-client: client event log
     * - aegis-log-crack: Brute Force log
     * - aegis-log-dns-query:DNS request log
     * - aegis-log-login: login log
     * - aegis-log-network: network connection log
     * - aegis-log-process: process startup log
     * - aegis-snapshot-host: account snapshot log
     * - aegis-snapshot-port: port snapshot log
     * - aegis-snapshot-process: process snapshot log
     * - local-dns: local DNS log
     * - sas-log-dns:DNS resolution log
     * - sas-log-http:WEB access log
     * - sas-log-session: Web session log
     * - sas-security-log: alarm log
     * - sas-vul-log: Vulnerability log
     * - sas-cspm-log: Cloud platform configuration check log
     * - sas-hc-log: baseline log
     * - sas-rasp-log: Application Protection Log
     * - sas-filedetect-log: file detection log
     * - sas-net-block: Network Defense Log
     * 
     */
    public Output<String> logMetaName() {
        return this.logMetaName;
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    private LogMetaArgs() {}

    private LogMetaArgs(LogMetaArgs $) {
        this.logMetaName = $.logMetaName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogMetaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogMetaArgs $;

        public Builder() {
            $ = new LogMetaArgs();
        }

        public Builder(LogMetaArgs defaults) {
            $ = new LogMetaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logMetaName The name of the exclusive Logstore where logs are stored. Value:
         * - aegis-log-client: client event log
         * - aegis-log-crack: Brute Force log
         * - aegis-log-dns-query:DNS request log
         * - aegis-log-login: login log
         * - aegis-log-network: network connection log
         * - aegis-log-process: process startup log
         * - aegis-snapshot-host: account snapshot log
         * - aegis-snapshot-port: port snapshot log
         * - aegis-snapshot-process: process snapshot log
         * - local-dns: local DNS log
         * - sas-log-dns:DNS resolution log
         * - sas-log-http:WEB access log
         * - sas-log-session: Web session log
         * - sas-security-log: alarm log
         * - sas-vul-log: Vulnerability log
         * - sas-cspm-log: Cloud platform configuration check log
         * - sas-hc-log: baseline log
         * - sas-rasp-log: Application Protection Log
         * - sas-filedetect-log: file detection log
         * - sas-net-block: Network Defense Log
         * 
         * @return builder
         * 
         */
        public Builder logMetaName(Output<String> logMetaName) {
            $.logMetaName = logMetaName;
            return this;
        }

        /**
         * @param logMetaName The name of the exclusive Logstore where logs are stored. Value:
         * - aegis-log-client: client event log
         * - aegis-log-crack: Brute Force log
         * - aegis-log-dns-query:DNS request log
         * - aegis-log-login: login log
         * - aegis-log-network: network connection log
         * - aegis-log-process: process startup log
         * - aegis-snapshot-host: account snapshot log
         * - aegis-snapshot-port: port snapshot log
         * - aegis-snapshot-process: process snapshot log
         * - local-dns: local DNS log
         * - sas-log-dns:DNS resolution log
         * - sas-log-http:WEB access log
         * - sas-log-session: Web session log
         * - sas-security-log: alarm log
         * - sas-vul-log: Vulnerability log
         * - sas-cspm-log: Cloud platform configuration check log
         * - sas-hc-log: baseline log
         * - sas-rasp-log: Application Protection Log
         * - sas-filedetect-log: file detection log
         * - sas-net-block: Network Defense Log
         * 
         * @return builder
         * 
         */
        public Builder logMetaName(String logMetaName) {
            return logMetaName(Output.of(logMetaName));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public LogMetaArgs build() {
            if ($.logMetaName == null) {
                throw new MissingRequiredPropertyException("LogMetaArgs", "logMetaName");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("LogMetaArgs", "status");
            }
            return $;
        }
    }

}
