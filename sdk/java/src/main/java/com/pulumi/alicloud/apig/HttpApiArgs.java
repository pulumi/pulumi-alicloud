// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apig;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HttpApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpApiArgs Empty = new HttpApiArgs();

    /**
     * API path
     * 
     */
    @Import(name="basePath")
    private @Nullable Output<String> basePath;

    /**
     * @return API path
     * 
     */
    public Optional<Output<String>> basePath() {
        return Optional.ofNullable(this.basePath);
    }

    /**
     * Description of API
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of API
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="httpApiName", required=true)
    private Output<String> httpApiName;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> httpApiName() {
        return this.httpApiName;
    }

    /**
     * API protocol
     * 
     */
    @Import(name="protocols", required=true)
    private Output<List<String>> protocols;

    /**
     * @return API protocol
     * 
     */
    public Output<List<String>> protocols() {
        return this.protocols;
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * API type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return API type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private HttpApiArgs() {}

    private HttpApiArgs(HttpApiArgs $) {
        this.basePath = $.basePath;
        this.description = $.description;
        this.httpApiName = $.httpApiName;
        this.protocols = $.protocols;
        this.resourceGroupId = $.resourceGroupId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpApiArgs $;

        public Builder() {
            $ = new HttpApiArgs();
        }

        public Builder(HttpApiArgs defaults) {
            $ = new HttpApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param basePath API path
         * 
         * @return builder
         * 
         */
        public Builder basePath(@Nullable Output<String> basePath) {
            $.basePath = basePath;
            return this;
        }

        /**
         * @param basePath API path
         * 
         * @return builder
         * 
         */
        public Builder basePath(String basePath) {
            return basePath(Output.of(basePath));
        }

        /**
         * @param description Description of API
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of API
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param httpApiName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder httpApiName(Output<String> httpApiName) {
            $.httpApiName = httpApiName;
            return this;
        }

        /**
         * @param httpApiName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder httpApiName(String httpApiName) {
            return httpApiName(Output.of(httpApiName));
        }

        /**
         * @param protocols API protocol
         * 
         * @return builder
         * 
         */
        public Builder protocols(Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols API protocol
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols API protocol
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param type API type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type API type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public HttpApiArgs build() {
            if ($.httpApiName == null) {
                throw new MissingRequiredPropertyException("HttpApiArgs", "httpApiName");
            }
            if ($.protocols == null) {
                throw new MissingRequiredPropertyException("HttpApiArgs", "protocols");
            }
            return $;
        }
    }

}
