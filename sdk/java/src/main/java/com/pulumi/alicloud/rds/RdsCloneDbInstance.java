// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rds.RdsCloneDbInstanceArgs;
import com.pulumi.alicloud.rds.inputs.RdsCloneDbInstanceState;
import com.pulumi.alicloud.rds.outputs.RdsCloneDbInstanceParameter;
import com.pulumi.alicloud.rds.outputs.RdsCloneDbInstancePgHbaConf;
import com.pulumi.alicloud.rds.outputs.RdsCloneDbInstanceServerlessConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an RDS Clone DB Instance resource.
 * 
 * For information about RDS Clone DB Instance and how to use it, see [What is ApsaraDB for RDS](https://www.alibabacloud.com/help/en/rds/product-overview/what-is-apsaradb-rds).
 * 
 * &gt; **NOTE:** Available since v1.149.0+.
 * 
 * ## Example Usage
 * ### Create an RDS MySQL clone instance
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.rds.RdsFunctions;
 * import com.pulumi.alicloud.rds.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.rds.inputs.GetInstanceClassesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.rds.Instance;
 * import com.pulumi.alicloud.rds.InstanceArgs;
 * import com.pulumi.alicloud.rds.RdsBackup;
 * import com.pulumi.alicloud.rds.RdsBackupArgs;
 * import com.pulumi.alicloud.rds.RdsCloneDbInstance;
 * import com.pulumi.alicloud.rds.RdsCloneDbInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleZones = RdsFunctions.getZones(GetZonesArgs.builder()
 *             .engine(&#34;PostgreSQL&#34;)
 *             .engineVersion(&#34;13.0&#34;)
 *             .instanceChargeType(&#34;PostPaid&#34;)
 *             .category(&#34;HighAvailability&#34;)
 *             .dbInstanceStorageType(&#34;cloud_essd&#34;)
 *             .build());
 * 
 *         final var exampleInstanceClasses = RdsFunctions.getInstanceClasses(GetInstanceClassesArgs.builder()
 *             .zoneId(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .engine(&#34;PostgreSQL&#34;)
 *             .engineVersion(&#34;13.0&#34;)
 *             .category(&#34;HighAvailability&#34;)
 *             .dbInstanceStorageType(&#34;cloud_essd&#34;)
 *             .instanceChargeType(&#34;PostPaid&#34;)
 *             .build());
 * 
 *         var exampleNetwork = new Network(&#34;exampleNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(&#34;terraform-example&#34;)
 *             .cidrBlock(&#34;172.16.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSwitch = new Switch(&#34;exampleSwitch&#34;, SwitchArgs.builder()        
 *             .vpcId(exampleNetwork.id())
 *             .cidrBlock(&#34;172.16.0.0/24&#34;)
 *             .zoneId(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .vswitchName(&#34;terraform-example&#34;)
 *             .build());
 * 
 *         var exampleInstance = new Instance(&#34;exampleInstance&#34;, InstanceArgs.builder()        
 *             .engine(&#34;PostgreSQL&#34;)
 *             .engineVersion(&#34;13.0&#34;)
 *             .instanceType(exampleInstanceClasses.applyValue(getInstanceClassesResult -&gt; getInstanceClassesResult.instanceClasses()[0].instanceClass()))
 *             .instanceStorage(exampleInstanceClasses.applyValue(getInstanceClassesResult -&gt; getInstanceClassesResult.instanceClasses()[0].storageRange().min()))
 *             .instanceChargeType(&#34;Postpaid&#34;)
 *             .instanceName(&#34;terraform-example&#34;)
 *             .vswitchId(exampleSwitch.id())
 *             .monitoringPeriod(&#34;60&#34;)
 *             .build());
 * 
 *         var exampleRdsBackup = new RdsBackup(&#34;exampleRdsBackup&#34;, RdsBackupArgs.builder()        
 *             .dbInstanceId(exampleInstance.id())
 *             .removeFromState(&#34;true&#34;)
 *             .build());
 * 
 *         var exampleRdsCloneDbInstance = new RdsCloneDbInstance(&#34;exampleRdsCloneDbInstance&#34;, RdsCloneDbInstanceArgs.builder()        
 *             .sourceDbInstanceId(exampleInstance.id())
 *             .dbInstanceStorageType(&#34;cloud_essd&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .backupId(exampleRdsBackup.backupId())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * RDS Clone DB Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:rds/rdsCloneDbInstance:RdsCloneDbInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:rds/rdsCloneDbInstance:RdsCloneDbInstance")
public class RdsCloneDbInstance extends com.pulumi.resources.CustomResource {
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. This parameter indicates the authentication method. It is allowed only when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    @Export(name="acl", refs={String.class}, tree="[0]")
    private Output<String> acl;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. This parameter indicates the authentication method. It is allowed only when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    public Output<String> acl() {
        return this.acl;
    }
    /**
     * How to upgrade the minor version of the instance. Valid values:
     * * **Auto**: automatically upgrade the minor version.
     * * **Manual**: It is not automatically upgraded. It is only mandatory when the current version is offline.
     * 
     */
    @Export(name="autoUpgradeMinorVersion", refs={String.class}, tree="[0]")
    private Output<String> autoUpgradeMinorVersion;

    /**
     * @return How to upgrade the minor version of the instance. Valid values:
     * * **Auto**: automatically upgrade the minor version.
     * * **Manual**: It is not automatically upgraded. It is only mandatory when the current version is offline.
     * 
     */
    public Output<String> autoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion;
    }
    /**
     * The ID of the data backup file you want to use. You can call the DescribeBackups operation to query the most recent data backup file list.
     * 
     * &gt; **NOTE:** You must specify at least one of the BackupId and RestoreTime parameters. When `payment_type=&#34;Serverless&#34;` and when modifying, do not perform `instance_storage` check. Otherwise, check.
     * 
     */
    @Export(name="backupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backupId;

    /**
     * @return The ID of the data backup file you want to use. You can call the DescribeBackups operation to query the most recent data backup file list.
     * 
     * &gt; **NOTE:** You must specify at least one of the BackupId and RestoreTime parameters. When `payment_type=&#34;Serverless&#34;` and when modifying, do not perform `instance_storage` check. Otherwise, check.
     * 
     */
    public Output<Optional<String>> backupId() {
        return Codegen.optional(this.backupId);
    }
    /**
     * The type of backup that is used to restore the data of the original instance. Valid values:
     * * **FullBackup**: full backup
     * * **IncrementalBackup**: incremental backup
     * 
     */
    @Export(name="backupType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backupType;

    /**
     * @return The type of backup that is used to restore the data of the original instance. Valid values:
     * * **FullBackup**: full backup
     * * **IncrementalBackup**: incremental backup
     * 
     */
    public Output<Optional<String>> backupType() {
        return Codegen.optional(this.backupType);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the certificate type. When the value of ssl_action is Open, the default value of this parameter is aliyun. Value range:
     * * **aliyun**: using cloud certificates
     * * **custom**: use a custom certificate. Valid values: `aliyun`, `custom`.
     * 
     */
    @Export(name="caType", refs={String.class}, tree="[0]")
    private Output<String> caType;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the certificate type. When the value of ssl_action is Open, the default value of this parameter is aliyun. Value range:
     * * **aliyun**: using cloud certificates
     * * **custom**: use a custom certificate. Valid values: `aliyun`, `custom`.
     * 
     */
    public Output<String> caType() {
        return this.caType;
    }
    /**
     * Instance series. Valid values:
     * * **Basic**: Basic Edition
     * * **HighAvailability**: High availability
     * * **AlwaysOn**: Cluster Edition
     * * **Finance**: Three-node Enterprise Edition.
     * * **serverless_basic**: Serverless Basic Edition. (Available in 1.200.0+)
     * * **serverless_standard**: MySQL Serverless High Availability Edition. (Available in 1.207.0+)
     * * **serverless_ha**: SQLServer Serverless High Availability Edition. (Available in 1.207.0+)
     * * **cluster**: MySQL Cluster Edition. (Available in 1.207.0+)
     * 
     */
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output<String> category;

    /**
     * @return Instance series. Valid values:
     * * **Basic**: Basic Edition
     * * **HighAvailability**: High availability
     * * **AlwaysOn**: Cluster Edition
     * * **Finance**: Three-node Enterprise Edition.
     * * **serverless_basic**: Serverless Basic Edition. (Available in 1.200.0+)
     * * **serverless_standard**: MySQL Serverless High Availability Edition. (Available in 1.207.0+)
     * * **serverless_ha**: SQLServer Serverless High Availability Edition. (Available in 1.207.0+)
     * * **cluster**: MySQL Cluster Edition. (Available in 1.207.0+)
     * 
     */
    public Output<String> category() {
        return this.category;
    }
    /**
     * The file that contains the certificate used for TDE.
     * 
     */
    @Export(name="certificate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificate;

    /**
     * @return The file that contains the certificate used for TDE.
     * 
     */
    public Output<Optional<String>> certificate() {
        return Codegen.optional(this.certificate);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the public key of the client certification authority. If the value of client_ca_enabled is 1, this parameter must be configured.
     * 
     */
    @Export(name="clientCaCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientCaCert;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the public key of the client certification authority. If the value of client_ca_enabled is 1, this parameter must be configured.
     * 
     */
    public Output<Optional<String>> clientCaCert() {
        return Codegen.optional(this.clientCaCert);
    }
    /**
     * The client ca enabled.
     * 
     */
    @Export(name="clientCaEnabled", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> clientCaEnabled;

    /**
     * @return The client ca enabled.
     * 
     */
    public Output<Optional<Integer>> clientCaEnabled() {
        return Codegen.optional(this.clientCaEnabled);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version, which indicates that the client revokes the certificate file. If the value of client_crl_enabled is 1, this parameter must be configured.
     * 
     */
    @Export(name="clientCertRevocationList", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientCertRevocationList;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version, which indicates that the client revokes the certificate file. If the value of client_crl_enabled is 1, this parameter must be configured.
     * 
     */
    public Output<Optional<String>> clientCertRevocationList() {
        return Codegen.optional(this.clientCertRevocationList);
    }
    /**
     * The client crl enabled.
     * 
     */
    @Export(name="clientCrlEnabled", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> clientCrlEnabled;

    /**
     * @return The client crl enabled.
     * 
     */
    public Output<Optional<Integer>> clientCrlEnabled() {
        return Codegen.optional(this.clientCrlEnabled);
    }
    /**
     * The database connection address.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output<String> connectionString;

    /**
     * @return The database connection address.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * The connection string prefix.
     * 
     */
    @Export(name="connectionStringPrefix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> connectionStringPrefix;

    /**
     * @return The connection string prefix.
     * 
     */
    public Output<Optional<String>> connectionStringPrefix() {
        return Codegen.optional(this.connectionStringPrefix);
    }
    /**
     * The instance type of the new instance. For information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/help/en/rds/product-overview/primary-apsaradb-rds-instance-types).
     * 
     */
    @Export(name="dbInstanceClass", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceClass;

    /**
     * @return The instance type of the new instance. For information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/help/en/rds/product-overview/primary-apsaradb-rds-instance-types).
     * 
     */
    public Output<String> dbInstanceClass() {
        return this.dbInstanceClass;
    }
    /**
     * The db instance description.
     * 
     */
    @Export(name="dbInstanceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbInstanceDescription;

    /**
     * @return The db instance description.
     * 
     */
    public Output<Optional<String>> dbInstanceDescription() {
        return Codegen.optional(this.dbInstanceDescription);
    }
    /**
     * The storage capacity of the new instance. Unit: GB. The storage capacity increases in increments of 5 GB. For more information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/help/en/rds/product-overview/primary-apsaradb-rds-instance-types).
     * 
     * &gt; **NOTE:** The default value of this parameter is the storage capacity of the original instance.
     * 
     */
    @Export(name="dbInstanceStorage", refs={Integer.class}, tree="[0]")
    private Output<Integer> dbInstanceStorage;

    /**
     * @return The storage capacity of the new instance. Unit: GB. The storage capacity increases in increments of 5 GB. For more information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/help/en/rds/product-overview/primary-apsaradb-rds-instance-types).
     * 
     * &gt; **NOTE:** The default value of this parameter is the storage capacity of the original instance.
     * 
     */
    public Output<Integer> dbInstanceStorage() {
        return this.dbInstanceStorage;
    }
    /**
     * The type of storage media that is used for the new instance. Valid values:
     * * **local_ssd**: local SSDs
     * * **cloud_ssd**: standard SSDs
     * * **cloud_essd**: enhanced SSDs (ESSDs) of performance level 1 (PL1)
     * * **cloud_essd2**: ESSDs of PL2
     * * **cloud_essd3**: ESSDs of PL3
     * 
     */
    @Export(name="dbInstanceStorageType", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceStorageType;

    /**
     * @return The type of storage media that is used for the new instance. Valid values:
     * * **local_ssd**: local SSDs
     * * **cloud_ssd**: standard SSDs
     * * **cloud_essd**: enhanced SSDs (ESSDs) of performance level 1 (PL1)
     * * **cloud_essd2**: ESSDs of PL2
     * * **cloud_essd3**: ESSDs of PL3
     * 
     */
    public Output<String> dbInstanceStorageType() {
        return this.dbInstanceStorageType;
    }
    /**
     * The name of the database for which you want to enable TDE. Up to 50 names can be entered in a single request. If you specify multiple names, separate these names with commas (,).
     * 
     * &gt; **NOTE:** This parameter is available and must be specified only when the instance runs SQL Server 2019 SE or an Enterprise Edition of SQL Server.
     * 
     */
    @Export(name="dbName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbName;

    /**
     * @return The name of the database for which you want to enable TDE. Up to 50 names can be entered in a single request. If you specify multiple names, separate these names with commas (,).
     * 
     * &gt; **NOTE:** This parameter is available and must be specified only when the instance runs SQL Server 2019 SE or an Enterprise Edition of SQL Server.
     * 
     */
    public Output<Optional<String>> dbName() {
        return Codegen.optional(this.dbName);
    }
    /**
     * The names of the databases that you want to create on the new instance.
     * 
     */
    @Export(name="dbNames", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbNames;

    /**
     * @return The names of the databases that you want to create on the new instance.
     * 
     */
    public Output<Optional<String>> dbNames() {
        return Codegen.optional(this.dbNames);
    }
    /**
     * The ID of the dedicated cluster to which the new instance belongs. This parameter takes effect only when you create the new instance in a dedicated cluster.
     * 
     */
    @Export(name="dedicatedHostGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dedicatedHostGroupId;

    /**
     * @return The ID of the dedicated cluster to which the new instance belongs. This parameter takes effect only when you create the new instance in a dedicated cluster.
     * 
     */
    public Output<Optional<String>> dedicatedHostGroupId() {
        return Codegen.optional(this.dedicatedHostGroupId);
    }
    /**
     * The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
     * 
     */
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    /**
     * @return The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
     * 
     */
    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * The direction. Valid values: `Auto`, `Down`, `TempUpgrade`, `Up`.
     * 
     */
    @Export(name="direction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> direction;

    /**
     * @return The direction. Valid values: `Auto`, `Down`, `TempUpgrade`, `Up`.
     * 
     */
    public Output<Optional<String>> direction() {
        return Codegen.optional(this.direction);
    }
    /**
     * The effective time.
     * 
     */
    @Export(name="effectiveTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> effectiveTime;

    /**
     * @return The effective time.
     * 
     */
    public Output<Optional<String>> effectiveTime() {
        return Codegen.optional(this.effectiveTime);
    }
    /**
     * The ID of the private key.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs MySQL.
     * 
     */
    @Export(name="encryptionKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionKey;

    /**
     * @return The ID of the private key.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs MySQL.
     * 
     */
    public Output<Optional<String>> encryptionKey() {
        return Codegen.optional(this.encryptionKey);
    }
    /**
     * Database type. Value options: MySQL, SQLServer, PostgreSQL, MariaDB.
     * 
     */
    @Export(name="engine", refs={String.class}, tree="[0]")
    private Output<String> engine;

    /**
     * @return Database type. Value options: MySQL, SQLServer, PostgreSQL, MariaDB.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * Database version. Value:
     * * MySQL:**5.5/5.6/5.7/8.0**
     * * SQL Server:**2008r2/08r2_ent_ha/2012/2012_ent_ha/2012_std_ha/2012_web/2014_std_ha/2016_ent_ha/2016_std_ha/2016_web/2017_std_ha/2017_ent/2019_std_ha/2019_ent**
     * * PostgreSQL:**9.4/10.0/11.0/12.0/13.0**
     * * MariaDB:**10.3**.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return Database version. Value:
     * * MySQL:**5.5/5.6/5.7/8.0**
     * * SQL Server:**2008r2/08r2_ent_ha/2012/2012_ent_ha/2012_std_ha/2012_web/2014_std_ha/2016_ent_ha/2016_std_ha/2016_web/2017_std_ha/2017_ent/2019_std_ha/2019_ent**
     * * PostgreSQL:**9.4/10.0/11.0/12.0/13.0**
     * * MariaDB:**10.3**.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    @Export(name="forceRestart", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceRestart;

    /**
     * @return Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    public Output<Optional<Boolean>> forceRestart() {
        return Codegen.optional(this.forceRestart);
    }
    /**
     * The high availability mode. Valid values:
     * * **RPO**: Data persistence is preferred. The instance preferentially ensures data reliability to minimize data loss. Use this mode if you have higher requirements on data consistency.
     * * **RTO**: Instance availability is preferred. The instance restores services as soon as possible to ensure availability. Use this mode if you have higher requirements on service availability.
     * 
     */
    @Export(name="haMode", refs={String.class}, tree="[0]")
    private Output<String> haMode;

    /**
     * @return The high availability mode. Valid values:
     * * **RPO**: Data persistence is preferred. The instance preferentially ensures data reliability to minimize data loss. Use this mode if you have higher requirements on data consistency.
     * * **RTO**: Instance availability is preferred. The instance restores services as soon as possible to ensure availability. Use this mode if you have higher requirements on service availability.
     * 
     */
    public Output<String> haMode() {
        return this.haMode;
    }
    /**
     * The network type of the instance. Valid values:
     * * **Classic**: Classic Network
     * * **VPC**: VPC.
     * 
     */
    @Export(name="instanceNetworkType", refs={String.class}, tree="[0]")
    private Output<String> instanceNetworkType;

    /**
     * @return The network type of the instance. Valid values:
     * * **Classic**: Classic Network
     * * **VPC**: VPC.
     * 
     */
    public Output<String> instanceNetworkType() {
        return this.instanceNetworkType;
    }
    /**
     * The maintainable time period of the instance. Format: &lt;I&gt; HH:mm&lt;/I&gt; Z-&lt;I&gt; HH:mm&lt;/I&gt; Z(UTC time).
     * 
     */
    @Export(name="maintainTime", refs={String.class}, tree="[0]")
    private Output<String> maintainTime;

    /**
     * @return The maintainable time period of the instance. Format: &lt;I&gt; HH:mm&lt;/I&gt; Z-&lt;I&gt; HH:mm&lt;/I&gt; Z(UTC time).
     * 
     */
    public Output<String> maintainTime() {
        return this.maintainTime;
    }
    /**
     * Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).See `parameters` below.
     * 
     */
    @Export(name="parameters", refs={List.class,RdsCloneDbInstanceParameter.class}, tree="[0,1]")
    private Output<List<RdsCloneDbInstanceParameter>> parameters;

    /**
     * @return Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).See `parameters` below.
     * 
     */
    public Output<List<RdsCloneDbInstanceParameter>> parameters() {
        return this.parameters;
    }
    /**
     * The password of the certificate.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs SQL Server 2019 SE or an Enterprise Edition of SQL Server.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the certificate.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs SQL Server 2019 SE or an Enterprise Edition of SQL Server.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * The billing method of the new instance. Valid values: `PayAsYouGo` and `Subscription` and `Serverless`.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The billing method of the new instance. Valid values: `PayAsYouGo` and `Subscription` and `Serverless`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The period. Valid values: `Month`, `Year`.
     * 
     * &gt; **NOTE:** If you set the payment_type parameter to Subscription, you must specify the period parameter.
     * 
     */
    @Export(name="period", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> period;

    /**
     * @return The period. Valid values: `Month`, `Year`.
     * 
     * &gt; **NOTE:** If you set the payment_type parameter to Subscription, you must specify the period parameter.
     * 
     */
    public Output<Optional<String>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The details of the AD domain.See `pg_hba_conf` below.
     * 
     */
    @Export(name="pgHbaConfs", refs={List.class,RdsCloneDbInstancePgHbaConf.class}, tree="[0,1]")
    private Output<List<RdsCloneDbInstancePgHbaConf>> pgHbaConfs;

    /**
     * @return The details of the AD domain.See `pg_hba_conf` below.
     * 
     */
    public Output<List<RdsCloneDbInstancePgHbaConf>> pgHbaConfs() {
        return this.pgHbaConfs;
    }
    /**
     * The port.
     * 
     */
    @Export(name="port", refs={String.class}, tree="[0]")
    private Output<String> port;

    /**
     * @return The port.
     * 
     */
    public Output<String> port() {
        return this.port;
    }
    /**
     * The intranet IP address of the new instance must be within the specified vSwitch IP address range. By default, the system automatically allocates by using **VPCId** and **VSwitchId**.
     * 
     */
    @Export(name="privateIpAddress", refs={String.class}, tree="[0]")
    private Output<String> privateIpAddress;

    /**
     * @return The intranet IP address of the new instance must be within the specified vSwitch IP address range. By default, the system automatically allocates by using **VPCId** and **VSwitchId**.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * The file that contains the private key used for TDE.
     * 
     */
    @Export(name="privateKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateKey;

    /**
     * @return The file that contains the private key used for TDE.
     * 
     */
    public Output<Optional<String>> privateKey() {
        return Codegen.optional(this.privateKey);
    }
    /**
     * The released keep policy.
     * 
     */
    @Export(name="releasedKeepPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> releasedKeepPolicy;

    /**
     * @return The released keep policy.
     * 
     */
    public Output<Optional<String>> releasedKeepPolicy() {
        return Codegen.optional(this.releasedKeepPolicy);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version, indicating the authentication method of the replication permission. It is only allowed when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    @Export(name="replicationAcl", refs={String.class}, tree="[0]")
    private Output<String> replicationAcl;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version, indicating the authentication method of the replication permission. It is only allowed when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    public Output<String> replicationAcl() {
        return this.replicationAcl;
    }
    /**
     * The resource group id.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceGroupId;

    /**
     * @return The resource group id.
     * 
     */
    public Output<Optional<String>> resourceGroupId() {
        return Codegen.optional(this.resourceGroupId);
    }
    /**
     * Specifies whether to restore only the databases and tables that you specify. The value 1 specifies to restore only the specified databases and tables. If you do not want to restore only the specified databases or tables, you can choose not to specify this parameter.
     * 
     */
    @Export(name="restoreTable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restoreTable;

    /**
     * @return Specifies whether to restore only the databases and tables that you specify. The value 1 specifies to restore only the specified databases and tables. If you do not want to restore only the specified databases or tables, you can choose not to specify this parameter.
     * 
     */
    public Output<Optional<String>> restoreTable() {
        return Codegen.optional(this.restoreTable);
    }
    /**
     * The point in time to which you want to restore the data of the original instance. The point in time must fall within the specified log backup retention period. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Export(name="restoreTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restoreTime;

    /**
     * @return The point in time to which you want to restore the data of the original instance. The point in time must fall within the specified log backup retention period. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Output<Optional<String>> restoreTime() {
        return Codegen.optional(this.restoreTime);
    }
    /**
     * The Alibaba Cloud Resource Name (ARN) of a RAM role. A RAM role is a virtual RAM identity that you can create within your Alibaba Cloud account.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs MySQL.
     * 
     */
    @Export(name="roleArn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> roleArn;

    /**
     * @return The Alibaba Cloud Resource Name (ARN) of a RAM role. A RAM role is a virtual RAM identity that you can create within your Alibaba Cloud account.
     * 
     * &gt; **NOTE:** This parameter is available only when the instance runs MySQL.
     * 
     */
    public Output<Optional<String>> roleArn() {
        return Codegen.optional(this.roleArn);
    }
    /**
     * The IP address whitelist of the instance. Separate multiple IP addresses with commas (,) and cannot be repeated. The following two formats are supported:
     * * IP address form, for example: 10.23.12.24.
     * * CIDR format, for example, 10.23.12.0/24 (no Inter-Domain Routing, 24 indicates the length of the prefix in the address, ranging from 1 to 32).
     * 
     * &gt; **NOTE:** each instance can add up to 1000 IP addresses or IP segments, that is, the total number of IP addresses or IP segments in all IP whitelist groups cannot exceed 1000. When there are more IP addresses, it is recommended to merge them into IP segments, for example, 10.23.12.0/24.
     * 
     */
    @Export(name="securityIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityIps;

    /**
     * @return The IP address whitelist of the instance. Separate multiple IP addresses with commas (,) and cannot be repeated. The following two formats are supported:
     * * IP address form, for example: 10.23.12.24.
     * * CIDR format, for example, 10.23.12.0/24 (no Inter-Domain Routing, 24 indicates the length of the prefix in the address, ranging from 1 to 32).
     * 
     * &gt; **NOTE:** each instance can add up to 1000 IP addresses or IP segments, that is, the total number of IP addresses or IP segments in all IP whitelist groups cannot exceed 1000. When there are more IP addresses, it is recommended to merge them into IP segments, for example, 10.23.12.0/24.
     * 
     */
    public Output<List<String>> securityIps() {
        return this.securityIps;
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the content of the server certificate. If the CAType value is custom, this parameter must be configured.
     * 
     */
    @Export(name="serverCert", refs={String.class}, tree="[0]")
    private Output<String> serverCert;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the content of the server certificate. If the CAType value is custom, this parameter must be configured.
     * 
     */
    public Output<String> serverCert() {
        return this.serverCert;
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the private key of the server certificate. If the value of CAType is custom, this parameter must be configured.
     * 
     */
    @Export(name="serverKey", refs={String.class}, tree="[0]")
    private Output<String> serverKey;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the private key of the server certificate. If the value of CAType is custom, this parameter must be configured.
     * 
     */
    public Output<String> serverKey() {
        return this.serverKey;
    }
    /**
     * The settings of the serverless instance. This parameter is required when you create a serverless instance. This parameter takes effect only when you create an ApsaraDB RDS for MySQL instance.See `serverless_config` below.
     * 
     */
    @Export(name="serverlessConfigs", refs={List.class,RdsCloneDbInstanceServerlessConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RdsCloneDbInstanceServerlessConfig>> serverlessConfigs;

    /**
     * @return The settings of the serverless instance. This parameter is required when you create a serverless instance. This parameter takes effect only when you create an ApsaraDB RDS for MySQL instance.See `serverless_config` below.
     * 
     */
    public Output<Optional<List<RdsCloneDbInstanceServerlessConfig>>> serverlessConfigs() {
        return Codegen.optional(this.serverlessConfigs);
    }
    /**
     * The source biz.
     * 
     */
    @Export(name="sourceBiz", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceBiz;

    /**
     * @return The source biz.
     * 
     */
    public Output<Optional<String>> sourceBiz() {
        return Codegen.optional(this.sourceBiz);
    }
    /**
     * The source db instance id.
     * 
     */
    @Export(name="sourceDbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> sourceDbInstanceId;

    /**
     * @return The source db instance id.
     * 
     */
    public Output<String> sourceDbInstanceId() {
        return this.sourceDbInstanceId;
    }
    /**
     * Enable or disable SSL. Valid values: `0` and `1`.
     * 
     */
    @Export(name="sslEnabled", refs={Integer.class}, tree="[0]")
    private Output<Integer> sslEnabled;

    /**
     * @return Enable or disable SSL. Valid values: `0` and `1`.
     * 
     */
    public Output<Integer> sslEnabled() {
        return this.sslEnabled;
    }
    /**
     * The time at which you want to apply the specification changes. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Export(name="switchTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> switchTime;

    /**
     * @return The time at which you want to apply the specification changes. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Output<Optional<String>> switchTime() {
        return Codegen.optional(this.switchTime);
    }
    /**
     * [The data replication mode](https://www.alibabacloud.com/help/doc-detail/96055.htm). Valid values:
     * * **Sync**: strong synchronization
     * * **Semi-sync**: Semi-synchronous
     * * **Async**: asynchronous
     * 
     * &gt; **NOTE:** SQL Server 2017 cluster version is currently not supported.
     * 
     */
    @Export(name="syncMode", refs={String.class}, tree="[0]")
    private Output<String> syncMode;

    /**
     * @return [The data replication mode](https://www.alibabacloud.com/help/doc-detail/96055.htm). Valid values:
     * * **Sync**: strong synchronization
     * * **Semi-sync**: Semi-synchronous
     * * **Async**: asynchronous
     * 
     * &gt; **NOTE:** SQL Server 2017 cluster version is currently not supported.
     * 
     */
    public Output<String> syncMode() {
        return this.syncMode;
    }
    /**
     * The information about the databases and tables that you want to restore. Format:
     * [{&#34;type&#34;:&#34;db&#34;,&#34;name&#34;:&#34;The original name of Database 1&#34;,&#34;newname&#34;:&#34;The new name of Database 1&#34;,&#34;tables&#34;:[{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 1 in Database 1&#34;,&#34;newname&#34;:&#34;The new name of Table 1 in Database 1&#34;},{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 2 in Database 1&#34;,&#34;newname&#34;:&#34;The new name of Table 2 in Database 1&#34;}]},{&#34;type&#34;:&#34;db&#34;,&#34;name&#34;:&#34;The original name of Database 2&#34;,&#34;newname&#34;:&#34;The new name of Database 2&#34;,&#34;tables&#34;:[{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 1 in Database 2&#34;,&#34;newname&#34;:&#34;The new name of Table 1 in Database 2&#34;},{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 2 in Database 2&#34;,&#34;newname&#34;:&#34;The new name of Table 2 in Database 2&#34;}]}]
     * 
     */
    @Export(name="tableMeta", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tableMeta;

    /**
     * @return The information about the databases and tables that you want to restore. Format:
     * [{&#34;type&#34;:&#34;db&#34;,&#34;name&#34;:&#34;The original name of Database 1&#34;,&#34;newname&#34;:&#34;The new name of Database 1&#34;,&#34;tables&#34;:[{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 1 in Database 1&#34;,&#34;newname&#34;:&#34;The new name of Table 1 in Database 1&#34;},{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 2 in Database 1&#34;,&#34;newname&#34;:&#34;The new name of Table 2 in Database 1&#34;}]},{&#34;type&#34;:&#34;db&#34;,&#34;name&#34;:&#34;The original name of Database 2&#34;,&#34;newname&#34;:&#34;The new name of Database 2&#34;,&#34;tables&#34;:[{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 1 in Database 2&#34;,&#34;newname&#34;:&#34;The new name of Table 1 in Database 2&#34;},{&#34;type&#34;:&#34;table&#34;,&#34;name&#34;:&#34;The original name of Table 2 in Database 2&#34;,&#34;newname&#34;:&#34;The new name of Table 2 in Database 2&#34;}]}]
     * 
     */
    public Output<Optional<String>> tableMeta() {
        return Codegen.optional(this.tableMeta);
    }
    /**
     * The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    @Export(name="tcpConnectionType", refs={String.class}, tree="[0]")
    private Output<String> tcpConnectionType;

    /**
     * @return The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    public Output<String> tcpConnectionType() {
        return this.tcpConnectionType;
    }
    /**
     * Specifies whether to enable TDE. Valid values:
     * * Enabled
     * * Disabled
     * 
     */
    @Export(name="tdeStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tdeStatus;

    /**
     * @return Specifies whether to enable TDE. Valid values:
     * * Enabled
     * * Disabled
     * 
     */
    public Output<Optional<String>> tdeStatus() {
        return Codegen.optional(this.tdeStatus);
    }
    /**
     * The subscription period of the new instance. This parameter takes effect only when you select the subscription billing method for the new instance. Valid values:
     * * If you set the `Period` parameter to Year, the value of the UsedTime parameter ranges from 1 to 3.
     * * If you set the `Period` parameter to Month, the value of the UsedTime parameter ranges from 1 to 9.
     * 
     * &gt; **NOTE:** If you set the payment_type parameter to Subscription, you must specify the used_time parameter.
     * 
     */
    @Export(name="usedTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> usedTime;

    /**
     * @return The subscription period of the new instance. This parameter takes effect only when you select the subscription billing method for the new instance. Valid values:
     * * If you set the `Period` parameter to Year, the value of the UsedTime parameter ranges from 1 to 3.
     * * If you set the `Period` parameter to Month, the value of the UsedTime parameter ranges from 1 to 9.
     * 
     * &gt; **NOTE:** If you set the payment_type parameter to Subscription, you must specify the used_time parameter.
     * 
     */
    public Output<Optional<Integer>> usedTime() {
        return Codegen.optional(this.usedTime);
    }
    /**
     * The ID of the VPC to which the new instance belongs.
     * 
     * &gt; **NOTE:** Make sure that the VPC resides in the specified region.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC to which the new instance belongs.
     * 
     * &gt; **NOTE:** Make sure that the VPC resides in the specified region.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of the vSwitch associated with the specified VPC. If there are multiple vswitches, separate them with commas. The first vswitch is a primary zone switch and the query only returns that vswitch. If there are multiple vswitches, do not perform `vswitch_id` check.
     * 
     * &gt; **NOTE:** Make sure that the vSwitch belongs to the specified VPC and region.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output<String> vswitchId;

    /**
     * @return The ID of the vSwitch associated with the specified VPC. If there are multiple vswitches, separate them with commas. The first vswitch is a primary zone switch and the query only returns that vswitch. If there are multiple vswitches, do not perform `vswitch_id` check.
     * 
     * &gt; **NOTE:** Make sure that the vSwitch belongs to the specified VPC and region.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }
    /**
     * The ID of the zone to which the new instance belongs. You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-describeregions) operation to query the most recent region list.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The ID of the zone to which the new instance belongs. You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-describeregions) operation to query the most recent region list.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }
    /**
     * The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
     * 
     */
    @Export(name="zoneIdSlaveA", refs={String.class}, tree="[0]")
    private Output<String> zoneIdSlaveA;

    /**
     * @return The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
     * 
     */
    public Output<String> zoneIdSlaveA() {
        return this.zoneIdSlaveA;
    }
    /**
     * The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
     * 
     * &gt; **NOTE:** The default value of this parameter is the ID of the zone to which the original instance belongs.
     * 
     */
    @Export(name="zoneIdSlaveB", refs={String.class}, tree="[0]")
    private Output<String> zoneIdSlaveB;

    /**
     * @return The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
     * 
     * &gt; **NOTE:** The default value of this parameter is the ID of the zone to which the original instance belongs.
     * 
     */
    public Output<String> zoneIdSlaveB() {
        return this.zoneIdSlaveB;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RdsCloneDbInstance(String name) {
        this(name, RdsCloneDbInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RdsCloneDbInstance(String name, RdsCloneDbInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RdsCloneDbInstance(String name, RdsCloneDbInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsCloneDbInstance:RdsCloneDbInstance", name, args == null ? RdsCloneDbInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RdsCloneDbInstance(String name, Output<String> id, @Nullable RdsCloneDbInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsCloneDbInstance:RdsCloneDbInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RdsCloneDbInstance get(String name, Output<String> id, @Nullable RdsCloneDbInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RdsCloneDbInstance(name, id, state, options);
    }
}
