// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyBindingAdvancedOptionsUdmDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyBindingAdvancedOptionsUdmDetailArgs Empty = new PolicyBindingAdvancedOptionsUdmDetailArgs();

    /**
     * Custom KMS key ID of encrypted copy.
     * 
     */
    @Import(name="destinationKmsKeyId")
    private @Nullable Output<String> destinationKmsKeyId;

    /**
     * @return Custom KMS key ID of encrypted copy.
     * 
     */
    public Optional<Output<String>> destinationKmsKeyId() {
        return Optional.ofNullable(this.destinationKmsKeyId);
    }

    /**
     * The list of backup disks. If it is empty, all disks are backed up.
     * 
     */
    @Import(name="diskIdLists")
    private @Nullable Output<List<String>> diskIdLists;

    /**
     * @return The list of backup disks. If it is empty, all disks are backed up.
     * 
     */
    public Optional<Output<List<String>>> diskIdLists() {
        return Optional.ofNullable(this.diskIdLists);
    }

    /**
     * List of cloud disk IDs that are not backed up.
     * 
     */
    @Import(name="excludeDiskIdLists")
    private @Nullable Output<List<String>> excludeDiskIdLists;

    /**
     * @return List of cloud disk IDs that are not backed up.
     * 
     */
    public Optional<Output<List<String>>> excludeDiskIdLists() {
        return Optional.ofNullable(this.excludeDiskIdLists);
    }

    private PolicyBindingAdvancedOptionsUdmDetailArgs() {}

    private PolicyBindingAdvancedOptionsUdmDetailArgs(PolicyBindingAdvancedOptionsUdmDetailArgs $) {
        this.destinationKmsKeyId = $.destinationKmsKeyId;
        this.diskIdLists = $.diskIdLists;
        this.excludeDiskIdLists = $.excludeDiskIdLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyBindingAdvancedOptionsUdmDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyBindingAdvancedOptionsUdmDetailArgs $;

        public Builder() {
            $ = new PolicyBindingAdvancedOptionsUdmDetailArgs();
        }

        public Builder(PolicyBindingAdvancedOptionsUdmDetailArgs defaults) {
            $ = new PolicyBindingAdvancedOptionsUdmDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationKmsKeyId Custom KMS key ID of encrypted copy.
         * 
         * @return builder
         * 
         */
        public Builder destinationKmsKeyId(@Nullable Output<String> destinationKmsKeyId) {
            $.destinationKmsKeyId = destinationKmsKeyId;
            return this;
        }

        /**
         * @param destinationKmsKeyId Custom KMS key ID of encrypted copy.
         * 
         * @return builder
         * 
         */
        public Builder destinationKmsKeyId(String destinationKmsKeyId) {
            return destinationKmsKeyId(Output.of(destinationKmsKeyId));
        }

        /**
         * @param diskIdLists The list of backup disks. If it is empty, all disks are backed up.
         * 
         * @return builder
         * 
         */
        public Builder diskIdLists(@Nullable Output<List<String>> diskIdLists) {
            $.diskIdLists = diskIdLists;
            return this;
        }

        /**
         * @param diskIdLists The list of backup disks. If it is empty, all disks are backed up.
         * 
         * @return builder
         * 
         */
        public Builder diskIdLists(List<String> diskIdLists) {
            return diskIdLists(Output.of(diskIdLists));
        }

        /**
         * @param diskIdLists The list of backup disks. If it is empty, all disks are backed up.
         * 
         * @return builder
         * 
         */
        public Builder diskIdLists(String... diskIdLists) {
            return diskIdLists(List.of(diskIdLists));
        }

        /**
         * @param excludeDiskIdLists List of cloud disk IDs that are not backed up.
         * 
         * @return builder
         * 
         */
        public Builder excludeDiskIdLists(@Nullable Output<List<String>> excludeDiskIdLists) {
            $.excludeDiskIdLists = excludeDiskIdLists;
            return this;
        }

        /**
         * @param excludeDiskIdLists List of cloud disk IDs that are not backed up.
         * 
         * @return builder
         * 
         */
        public Builder excludeDiskIdLists(List<String> excludeDiskIdLists) {
            return excludeDiskIdLists(Output.of(excludeDiskIdLists));
        }

        /**
         * @param excludeDiskIdLists List of cloud disk IDs that are not backed up.
         * 
         * @return builder
         * 
         */
        public Builder excludeDiskIdLists(String... excludeDiskIdLists) {
            return excludeDiskIdLists(List.of(excludeDiskIdLists));
        }

        public PolicyBindingAdvancedOptionsUdmDetailArgs build() {
            return $;
        }
    }

}
