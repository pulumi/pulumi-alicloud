// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectionPolicyDataConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectionPolicyDataConfigArgs Empty = new CollectionPolicyDataConfigArgs();

    /**
     * Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
     * 
     */
    @Import(name="dataProject")
    private @Nullable Output<String> dataProject;

    /**
     * @return Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
     * 
     */
    public Optional<Output<String>> dataProject() {
        return Optional.ofNullable(this.dataProject);
    }

    /**
     * If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
     * 
     */
    @Import(name="dataRegion")
    private @Nullable Output<String> dataRegion;

    /**
     * @return If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
     * 
     */
    public Optional<Output<String>> dataRegion() {
        return Optional.ofNullable(this.dataRegion);
    }

    private CollectionPolicyDataConfigArgs() {}

    private CollectionPolicyDataConfigArgs(CollectionPolicyDataConfigArgs $) {
        this.dataProject = $.dataProject;
        this.dataRegion = $.dataRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectionPolicyDataConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectionPolicyDataConfigArgs $;

        public Builder() {
            $ = new CollectionPolicyDataConfigArgs();
        }

        public Builder(CollectionPolicyDataConfigArgs defaults) {
            $ = new CollectionPolicyDataConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataProject Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
         * 
         * @return builder
         * 
         */
        public Builder dataProject(@Nullable Output<String> dataProject) {
            $.dataProject = dataProject;
            return this;
        }

        /**
         * @param dataProject Valid only when the log type is global. For example, if the productCode is sls, the log is collected to the default dedicated Project of the account in a specific dataRegion.
         * 
         * @return builder
         * 
         */
        public Builder dataProject(String dataProject) {
            return dataProject(Output.of(dataProject));
        }

        /**
         * @param dataRegion If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
         * 
         * @return builder
         * 
         */
        public Builder dataRegion(@Nullable Output<String> dataRegion) {
            $.dataRegion = dataRegion;
            return this;
        }

        /**
         * @param dataRegion If and only if the log type is global log type, for example, if productCode is sls, global logs will be collected to the corresponding region during the first configuration.
         * 
         * @return builder
         * 
         */
        public Builder dataRegion(String dataRegion) {
            return dataRegion(Output.of(dataRegion));
        }

        public CollectionPolicyDataConfigArgs build() {
            return $;
        }
    }

}
