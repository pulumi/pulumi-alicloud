// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.alicloud.oss.inputs.BucketLifecycleRuleFilterNotArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLifecycleRuleFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleRuleFilterArgs Empty = new BucketLifecycleRuleFilterArgs();

    /**
     * The condition that is matched by objects to which the lifecycle rule does not apply. See `not` below.
     * 
     */
    @Import(name="not")
    private @Nullable Output<BucketLifecycleRuleFilterNotArgs> not;

    /**
     * @return The condition that is matched by objects to which the lifecycle rule does not apply. See `not` below.
     * 
     */
    public Optional<Output<BucketLifecycleRuleFilterNotArgs>> not() {
        return Optional.ofNullable(this.not);
    }

    /**
     * Minimum object size (in bytes) to which the rule applies.
     * 
     */
    @Import(name="objectSizeGreaterThan")
    private @Nullable Output<Integer> objectSizeGreaterThan;

    /**
     * @return Minimum object size (in bytes) to which the rule applies.
     * 
     */
    public Optional<Output<Integer>> objectSizeGreaterThan() {
        return Optional.ofNullable(this.objectSizeGreaterThan);
    }

    /**
     * Maximum object size (in bytes) to which the rule applies.
     * 
     */
    @Import(name="objectSizeLessThan")
    private @Nullable Output<Integer> objectSizeLessThan;

    /**
     * @return Maximum object size (in bytes) to which the rule applies.
     * 
     */
    public Optional<Output<Integer>> objectSizeLessThan() {
        return Optional.ofNullable(this.objectSizeLessThan);
    }

    private BucketLifecycleRuleFilterArgs() {}

    private BucketLifecycleRuleFilterArgs(BucketLifecycleRuleFilterArgs $) {
        this.not = $.not;
        this.objectSizeGreaterThan = $.objectSizeGreaterThan;
        this.objectSizeLessThan = $.objectSizeLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleRuleFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleRuleFilterArgs $;

        public Builder() {
            $ = new BucketLifecycleRuleFilterArgs();
        }

        public Builder(BucketLifecycleRuleFilterArgs defaults) {
            $ = new BucketLifecycleRuleFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param not The condition that is matched by objects to which the lifecycle rule does not apply. See `not` below.
         * 
         * @return builder
         * 
         */
        public Builder not(@Nullable Output<BucketLifecycleRuleFilterNotArgs> not) {
            $.not = not;
            return this;
        }

        /**
         * @param not The condition that is matched by objects to which the lifecycle rule does not apply. See `not` below.
         * 
         * @return builder
         * 
         */
        public Builder not(BucketLifecycleRuleFilterNotArgs not) {
            return not(Output.of(not));
        }

        /**
         * @param objectSizeGreaterThan Minimum object size (in bytes) to which the rule applies.
         * 
         * @return builder
         * 
         */
        public Builder objectSizeGreaterThan(@Nullable Output<Integer> objectSizeGreaterThan) {
            $.objectSizeGreaterThan = objectSizeGreaterThan;
            return this;
        }

        /**
         * @param objectSizeGreaterThan Minimum object size (in bytes) to which the rule applies.
         * 
         * @return builder
         * 
         */
        public Builder objectSizeGreaterThan(Integer objectSizeGreaterThan) {
            return objectSizeGreaterThan(Output.of(objectSizeGreaterThan));
        }

        /**
         * @param objectSizeLessThan Maximum object size (in bytes) to which the rule applies.
         * 
         * @return builder
         * 
         */
        public Builder objectSizeLessThan(@Nullable Output<Integer> objectSizeLessThan) {
            $.objectSizeLessThan = objectSizeLessThan;
            return this;
        }

        /**
         * @param objectSizeLessThan Maximum object size (in bytes) to which the rule applies.
         * 
         * @return builder
         * 
         */
        public Builder objectSizeLessThan(Integer objectSizeLessThan) {
            return objectSizeLessThan(Output.of(objectSizeLessThan));
        }

        public BucketLifecycleRuleFilterArgs build() {
            return $;
        }
    }

}
