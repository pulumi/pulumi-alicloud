// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleMetricArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleTimerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationScalingRuleState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScalingRuleState Empty = new ApplicationScalingRuleState();

    /**
     * Application ID.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return Application ID.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * The min ready instance ratio.
     * 
     */
    @Import(name="minReadyInstanceRatio")
    private @Nullable Output<Integer> minReadyInstanceRatio;

    /**
     * @return The min ready instance ratio.
     * 
     */
    public Optional<Output<Integer>> minReadyInstanceRatio() {
        return Optional.ofNullable(this.minReadyInstanceRatio);
    }

    /**
     * The min ready instances.
     * 
     */
    @Import(name="minReadyInstances")
    private @Nullable Output<Integer> minReadyInstances;

    /**
     * @return The min ready instances.
     * 
     */
    public Optional<Output<Integer>> minReadyInstances() {
        return Optional.ofNullable(this.minReadyInstances);
    }

    /**
     * True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
     * 
     */
    @Import(name="scalingRuleEnable")
    private @Nullable Output<Boolean> scalingRuleEnable;

    /**
     * @return True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
     * 
     */
    public Optional<Output<Boolean>> scalingRuleEnable() {
        return Optional.ofNullable(this.scalingRuleEnable);
    }

    /**
     * Monitor the configuration of the indicator elasticity strategy. See `scalingRuleMetric` below.
     * 
     */
    @Import(name="scalingRuleMetric")
    private @Nullable Output<ApplicationScalingRuleScalingRuleMetricArgs> scalingRuleMetric;

    /**
     * @return Monitor the configuration of the indicator elasticity strategy. See `scalingRuleMetric` below.
     * 
     */
    public Optional<Output<ApplicationScalingRuleScalingRuleMetricArgs>> scalingRuleMetric() {
        return Optional.ofNullable(this.scalingRuleMetric);
    }

    /**
     * The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
     * 
     */
    @Import(name="scalingRuleName")
    private @Nullable Output<String> scalingRuleName;

    /**
     * @return The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
     * 
     */
    public Optional<Output<String>> scalingRuleName() {
        return Optional.ofNullable(this.scalingRuleName);
    }

    /**
     * Configuration of Timing Resilient Policies. See `scalingRuleTimer` below.
     * 
     */
    @Import(name="scalingRuleTimer")
    private @Nullable Output<ApplicationScalingRuleScalingRuleTimerArgs> scalingRuleTimer;

    /**
     * @return Configuration of Timing Resilient Policies. See `scalingRuleTimer` below.
     * 
     */
    public Optional<Output<ApplicationScalingRuleScalingRuleTimerArgs>> scalingRuleTimer() {
        return Optional.ofNullable(this.scalingRuleTimer);
    }

    /**
     * Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
     * 
     */
    @Import(name="scalingRuleType")
    private @Nullable Output<String> scalingRuleType;

    /**
     * @return Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
     * 
     */
    public Optional<Output<String>> scalingRuleType() {
        return Optional.ofNullable(this.scalingRuleType);
    }

    private ApplicationScalingRuleState() {}

    private ApplicationScalingRuleState(ApplicationScalingRuleState $) {
        this.appId = $.appId;
        this.minReadyInstanceRatio = $.minReadyInstanceRatio;
        this.minReadyInstances = $.minReadyInstances;
        this.scalingRuleEnable = $.scalingRuleEnable;
        this.scalingRuleMetric = $.scalingRuleMetric;
        this.scalingRuleName = $.scalingRuleName;
        this.scalingRuleTimer = $.scalingRuleTimer;
        this.scalingRuleType = $.scalingRuleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScalingRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScalingRuleState $;

        public Builder() {
            $ = new ApplicationScalingRuleState();
        }

        public Builder(ApplicationScalingRuleState defaults) {
            $ = new ApplicationScalingRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Application ID.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId Application ID.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param minReadyInstanceRatio The min ready instance ratio.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstanceRatio(@Nullable Output<Integer> minReadyInstanceRatio) {
            $.minReadyInstanceRatio = minReadyInstanceRatio;
            return this;
        }

        /**
         * @param minReadyInstanceRatio The min ready instance ratio.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstanceRatio(Integer minReadyInstanceRatio) {
            return minReadyInstanceRatio(Output.of(minReadyInstanceRatio));
        }

        /**
         * @param minReadyInstances The min ready instances.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstances(@Nullable Output<Integer> minReadyInstances) {
            $.minReadyInstances = minReadyInstances;
            return this;
        }

        /**
         * @param minReadyInstances The min ready instances.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstances(Integer minReadyInstances) {
            return minReadyInstances(Output.of(minReadyInstances));
        }

        /**
         * @param scalingRuleEnable True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleEnable(@Nullable Output<Boolean> scalingRuleEnable) {
            $.scalingRuleEnable = scalingRuleEnable;
            return this;
        }

        /**
         * @param scalingRuleEnable True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleEnable(Boolean scalingRuleEnable) {
            return scalingRuleEnable(Output.of(scalingRuleEnable));
        }

        /**
         * @param scalingRuleMetric Monitor the configuration of the indicator elasticity strategy. See `scalingRuleMetric` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleMetric(@Nullable Output<ApplicationScalingRuleScalingRuleMetricArgs> scalingRuleMetric) {
            $.scalingRuleMetric = scalingRuleMetric;
            return this;
        }

        /**
         * @param scalingRuleMetric Monitor the configuration of the indicator elasticity strategy. See `scalingRuleMetric` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleMetric(ApplicationScalingRuleScalingRuleMetricArgs scalingRuleMetric) {
            return scalingRuleMetric(Output.of(scalingRuleMetric));
        }

        /**
         * @param scalingRuleName The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleName(@Nullable Output<String> scalingRuleName) {
            $.scalingRuleName = scalingRuleName;
            return this;
        }

        /**
         * @param scalingRuleName The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleName(String scalingRuleName) {
            return scalingRuleName(Output.of(scalingRuleName));
        }

        /**
         * @param scalingRuleTimer Configuration of Timing Resilient Policies. See `scalingRuleTimer` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleTimer(@Nullable Output<ApplicationScalingRuleScalingRuleTimerArgs> scalingRuleTimer) {
            $.scalingRuleTimer = scalingRuleTimer;
            return this;
        }

        /**
         * @param scalingRuleTimer Configuration of Timing Resilient Policies. See `scalingRuleTimer` below.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleTimer(ApplicationScalingRuleScalingRuleTimerArgs scalingRuleTimer) {
            return scalingRuleTimer(Output.of(scalingRuleTimer));
        }

        /**
         * @param scalingRuleType Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleType(@Nullable Output<String> scalingRuleType) {
            $.scalingRuleType = scalingRuleType;
            return this;
        }

        /**
         * @param scalingRuleType Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
         * 
         * @return builder
         * 
         */
        public Builder scalingRuleType(String scalingRuleType) {
            return scalingRuleType(Output.of(scalingRuleType));
        }

        public ApplicationScalingRuleState build() {
            return $;
        }
    }

}
