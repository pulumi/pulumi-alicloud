// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class MultiAccountDeliveryChannelDeliveryChannelFilter {
    /**
     * @return The account scopes of the delivery channel.
     * 
     */
    private List<String> accountScopes;
    /**
     * @return An array of effective resource types for the delivery channel.
     * - Example: [&#34;ACS::VPC::VPC&#34;, &#34;ACS::ECS::Instance&#34;].
     * - If you want to deliver items of all resource types supported by Resource Center, set this parameter to [&#34;ALL&#34;].
     * 
     */
    private @Nullable List<String> resourceTypes;

    private MultiAccountDeliveryChannelDeliveryChannelFilter() {}
    /**
     * @return The account scopes of the delivery channel.
     * 
     */
    public List<String> accountScopes() {
        return this.accountScopes;
    }
    /**
     * @return An array of effective resource types for the delivery channel.
     * - Example: [&#34;ACS::VPC::VPC&#34;, &#34;ACS::ECS::Instance&#34;].
     * - If you want to deliver items of all resource types supported by Resource Center, set this parameter to [&#34;ALL&#34;].
     * 
     */
    public List<String> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MultiAccountDeliveryChannelDeliveryChannelFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> accountScopes;
        private @Nullable List<String> resourceTypes;
        public Builder() {}
        public Builder(MultiAccountDeliveryChannelDeliveryChannelFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountScopes = defaults.accountScopes;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        @CustomType.Setter
        public Builder accountScopes(List<String> accountScopes) {
            if (accountScopes == null) {
              throw new MissingRequiredPropertyException("MultiAccountDeliveryChannelDeliveryChannelFilter", "accountScopes");
            }
            this.accountScopes = accountScopes;
            return this;
        }
        public Builder accountScopes(String... accountScopes) {
            return accountScopes(List.of(accountScopes));
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {

            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        public MultiAccountDeliveryChannelDeliveryChannelFilter build() {
            final var _resultValue = new MultiAccountDeliveryChannelDeliveryChannelFilter();
            _resultValue.accountScopes = accountScopes;
            _resultValue.resourceTypes = resourceTypes;
            return _resultValue;
        }
    }
}
