// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ListenerAdditionalCertificateAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerAdditionalCertificateAttachmentArgs Empty = new ListenerAdditionalCertificateAttachmentArgs();

    /**
     * The Certificate ID.
     * 
     */
    @Import(name="certificateId", required=true)
    private Output<String> certificateId;

    /**
     * @return The Certificate ID.
     * 
     */
    public Output<String> certificateId() {
        return this.certificateId;
    }

    /**
     * The ID of the ALB listener.
     * 
     */
    @Import(name="listenerId", required=true)
    private Output<String> listenerId;

    /**
     * @return The ID of the ALB listener.
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }

    private ListenerAdditionalCertificateAttachmentArgs() {}

    private ListenerAdditionalCertificateAttachmentArgs(ListenerAdditionalCertificateAttachmentArgs $) {
        this.certificateId = $.certificateId;
        this.listenerId = $.listenerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerAdditionalCertificateAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerAdditionalCertificateAttachmentArgs $;

        public Builder() {
            $ = new ListenerAdditionalCertificateAttachmentArgs();
        }

        public Builder(ListenerAdditionalCertificateAttachmentArgs defaults) {
            $ = new ListenerAdditionalCertificateAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateId The Certificate ID.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId The Certificate ID.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param listenerId The ID of the ALB listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        /**
         * @param listenerId The ID of the ALB listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        public ListenerAdditionalCertificateAttachmentArgs build() {
            if ($.certificateId == null) {
                throw new MissingRequiredPropertyException("ListenerAdditionalCertificateAttachmentArgs", "certificateId");
            }
            if ($.listenerId == null) {
                throw new MissingRequiredPropertyException("ListenerAdditionalCertificateAttachmentArgs", "listenerId");
            }
            return $;
        }
    }

}
