// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs Empty = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs();

    /**
     * Mirroring back-to-source multi-station Region
     * 
     */
    @Import(name="mirrorMultiAlternateDstRegion")
    private @Nullable Output<String> mirrorMultiAlternateDstRegion;

    /**
     * @return Mirroring back-to-source multi-station Region
     * 
     */
    public Optional<Output<String>> mirrorMultiAlternateDstRegion() {
        return Optional.ofNullable(this.mirrorMultiAlternateDstRegion);
    }

    /**
     * Image back-to-source multi-source station serial number
     * 
     */
    @Import(name="mirrorMultiAlternateNumber")
    private @Nullable Output<Integer> mirrorMultiAlternateNumber;

    /**
     * @return Image back-to-source multi-source station serial number
     * 
     */
    public Optional<Output<Integer>> mirrorMultiAlternateNumber() {
        return Optional.ofNullable(this.mirrorMultiAlternateNumber);
    }

    /**
     * Mirroring back-to-source multi-source site URL
     * 
     */
    @Import(name="mirrorMultiAlternateUrl")
    private @Nullable Output<String> mirrorMultiAlternateUrl;

    /**
     * @return Mirroring back-to-source multi-source site URL
     * 
     */
    public Optional<Output<String>> mirrorMultiAlternateUrl() {
        return Optional.ofNullable(this.mirrorMultiAlternateUrl);
    }

    /**
     * Mirroring back-to-source multi-source VpcId
     * 
     */
    @Import(name="mirrorMultiAlternateVpcId")
    private @Nullable Output<String> mirrorMultiAlternateVpcId;

    /**
     * @return Mirroring back-to-source multi-source VpcId
     * 
     */
    public Optional<Output<String>> mirrorMultiAlternateVpcId() {
        return Optional.ofNullable(this.mirrorMultiAlternateVpcId);
    }

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs() {}

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs $) {
        this.mirrorMultiAlternateDstRegion = $.mirrorMultiAlternateDstRegion;
        this.mirrorMultiAlternateNumber = $.mirrorMultiAlternateNumber;
        this.mirrorMultiAlternateUrl = $.mirrorMultiAlternateUrl;
        this.mirrorMultiAlternateVpcId = $.mirrorMultiAlternateVpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs $;

        public Builder() {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs();
        }

        public Builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs defaults) {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mirrorMultiAlternateDstRegion Mirroring back-to-source multi-station Region
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateDstRegion(@Nullable Output<String> mirrorMultiAlternateDstRegion) {
            $.mirrorMultiAlternateDstRegion = mirrorMultiAlternateDstRegion;
            return this;
        }

        /**
         * @param mirrorMultiAlternateDstRegion Mirroring back-to-source multi-station Region
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateDstRegion(String mirrorMultiAlternateDstRegion) {
            return mirrorMultiAlternateDstRegion(Output.of(mirrorMultiAlternateDstRegion));
        }

        /**
         * @param mirrorMultiAlternateNumber Image back-to-source multi-source station serial number
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateNumber(@Nullable Output<Integer> mirrorMultiAlternateNumber) {
            $.mirrorMultiAlternateNumber = mirrorMultiAlternateNumber;
            return this;
        }

        /**
         * @param mirrorMultiAlternateNumber Image back-to-source multi-source station serial number
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateNumber(Integer mirrorMultiAlternateNumber) {
            return mirrorMultiAlternateNumber(Output.of(mirrorMultiAlternateNumber));
        }

        /**
         * @param mirrorMultiAlternateUrl Mirroring back-to-source multi-source site URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateUrl(@Nullable Output<String> mirrorMultiAlternateUrl) {
            $.mirrorMultiAlternateUrl = mirrorMultiAlternateUrl;
            return this;
        }

        /**
         * @param mirrorMultiAlternateUrl Mirroring back-to-source multi-source site URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateUrl(String mirrorMultiAlternateUrl) {
            return mirrorMultiAlternateUrl(Output.of(mirrorMultiAlternateUrl));
        }

        /**
         * @param mirrorMultiAlternateVpcId Mirroring back-to-source multi-source VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateVpcId(@Nullable Output<String> mirrorMultiAlternateVpcId) {
            $.mirrorMultiAlternateVpcId = mirrorMultiAlternateVpcId;
            return this;
        }

        /**
         * @param mirrorMultiAlternateVpcId Mirroring back-to-source multi-source VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternateVpcId(String mirrorMultiAlternateVpcId) {
            return mirrorMultiAlternateVpcId(Output.of(mirrorMultiAlternateVpcId));
        }

        public BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesMirrorMultiAlternateArgs build() {
            return $;
        }
    }

}
