// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginCaCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final OriginCaCertificateArgs Empty = new OriginCaCertificateArgs();

    /**
     * Certificate content.
     * 
     */
    @Import(name="certificate", required=true)
    private Output<String> certificate;

    /**
     * @return Certificate content.
     * 
     */
    public Output<String> certificate() {
        return this.certificate;
    }

    /**
     * The certificate name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The certificate name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Site Id
     * 
     */
    @Import(name="siteId", required=true)
    private Output<Integer> siteId;

    /**
     * @return Site Id
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }

    private OriginCaCertificateArgs() {}

    private OriginCaCertificateArgs(OriginCaCertificateArgs $) {
        this.certificate = $.certificate;
        this.name = $.name;
        this.siteId = $.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginCaCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginCaCertificateArgs $;

        public Builder() {
            $ = new OriginCaCertificateArgs();
        }

        public Builder(OriginCaCertificateArgs defaults) {
            $ = new OriginCaCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate Certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param name The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param siteId Site Id
         * 
         * @return builder
         * 
         */
        public Builder siteId(Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Site Id
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        public OriginCaCertificateArgs build() {
            if ($.certificate == null) {
                throw new MissingRequiredPropertyException("OriginCaCertificateArgs", "certificate");
            }
            if ($.siteId == null) {
                throw new MissingRequiredPropertyException("OriginCaCertificateArgs", "siteId");
            }
            return $;
        }
    }

}
