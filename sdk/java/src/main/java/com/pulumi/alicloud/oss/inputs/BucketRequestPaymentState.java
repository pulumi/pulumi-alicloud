// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketRequestPaymentState extends com.pulumi.resources.ResourceArgs {

    public static final BucketRequestPaymentState Empty = new BucketRequestPaymentState();

    /**
     * The name of the bucket.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
     * 
     */
    @Import(name="payer")
    private @Nullable Output<String> payer;

    /**
     * @return The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
     * 
     */
    public Optional<Output<String>> payer() {
        return Optional.ofNullable(this.payer);
    }

    private BucketRequestPaymentState() {}

    private BucketRequestPaymentState(BucketRequestPaymentState $) {
        this.bucket = $.bucket;
        this.payer = $.payer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketRequestPaymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRequestPaymentState $;

        public Builder() {
            $ = new BucketRequestPaymentState();
        }

        public Builder(BucketRequestPaymentState defaults) {
            $ = new BucketRequestPaymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param payer The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
         * 
         * @return builder
         * 
         */
        public Builder payer(@Nullable Output<String> payer) {
            $.payer = payer;
            return this;
        }

        /**
         * @param payer The payer of the request and traffic fees.Valid values: BucketOwner: request and traffic fees are paid by the bucket owner. Requester: request and traffic fees are paid by the requester.
         * 
         * @return builder
         * 
         */
        public Builder payer(String payer) {
            return payer(Output.of(payer));
        }

        public BucketRequestPaymentState build() {
            return $;
        }
    }

}
