// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogShipperResult {
    /**
     * @return Log Analysis Service authorization status.
     * 
     */
    private String authStatus;
    /**
     * @return Cloud Security Center purchase status.
     * 
     */
    private String buyStatus;
    private @Nullable String enable;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Log analysis shipping activation status.
     * 
     */
    private String openStatus;
    /**
     * @return Log analysis project status.
     * 
     */
    private String slsProjectStatus;
    /**
     * @return Log Analysis Service is activated.
     * 
     */
    private String slsServiceStatus;
    /**
     * @return The current service enable status.
     * 
     */
    private String status;

    private GetLogShipperResult() {}
    /**
     * @return Log Analysis Service authorization status.
     * 
     */
    public String authStatus() {
        return this.authStatus;
    }
    /**
     * @return Cloud Security Center purchase status.
     * 
     */
    public String buyStatus() {
        return this.buyStatus;
    }
    public Optional<String> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Log analysis shipping activation status.
     * 
     */
    public String openStatus() {
        return this.openStatus;
    }
    /**
     * @return Log analysis project status.
     * 
     */
    public String slsProjectStatus() {
        return this.slsProjectStatus;
    }
    /**
     * @return Log Analysis Service is activated.
     * 
     */
    public String slsServiceStatus() {
        return this.slsServiceStatus;
    }
    /**
     * @return The current service enable status.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogShipperResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authStatus;
        private String buyStatus;
        private @Nullable String enable;
        private String id;
        private String openStatus;
        private String slsProjectStatus;
        private String slsServiceStatus;
        private String status;
        public Builder() {}
        public Builder(GetLogShipperResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authStatus = defaults.authStatus;
    	      this.buyStatus = defaults.buyStatus;
    	      this.enable = defaults.enable;
    	      this.id = defaults.id;
    	      this.openStatus = defaults.openStatus;
    	      this.slsProjectStatus = defaults.slsProjectStatus;
    	      this.slsServiceStatus = defaults.slsServiceStatus;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder authStatus(String authStatus) {
            if (authStatus == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "authStatus");
            }
            this.authStatus = authStatus;
            return this;
        }
        @CustomType.Setter
        public Builder buyStatus(String buyStatus) {
            if (buyStatus == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "buyStatus");
            }
            this.buyStatus = buyStatus;
            return this;
        }
        @CustomType.Setter
        public Builder enable(@Nullable String enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder openStatus(String openStatus) {
            if (openStatus == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "openStatus");
            }
            this.openStatus = openStatus;
            return this;
        }
        @CustomType.Setter
        public Builder slsProjectStatus(String slsProjectStatus) {
            if (slsProjectStatus == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "slsProjectStatus");
            }
            this.slsProjectStatus = slsProjectStatus;
            return this;
        }
        @CustomType.Setter
        public Builder slsServiceStatus(String slsServiceStatus) {
            if (slsServiceStatus == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "slsServiceStatus");
            }
            this.slsServiceStatus = slsServiceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetLogShipperResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetLogShipperResult build() {
            final var _resultValue = new GetLogShipperResult();
            _resultValue.authStatus = authStatus;
            _resultValue.buyStatus = buyStatus;
            _resultValue.enable = enable;
            _resultValue.id = id;
            _resultValue.openStatus = openStatus;
            _resultValue.slsProjectStatus = slsProjectStatus;
            _resultValue.slsServiceStatus = slsServiceStatus;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
