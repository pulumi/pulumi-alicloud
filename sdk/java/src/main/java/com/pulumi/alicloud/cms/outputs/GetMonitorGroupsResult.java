// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.GetMonitorGroupsGroup;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitorGroupsResult {
    private @Nullable String dynamicTagRuleId;
    private List<GetMonitorGroupsGroup> groups;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable Boolean includeTemplateHistory;
    private @Nullable String keyword;
    private @Nullable String monitorGroupName;
    private @Nullable String nameRegex;
    private List<String> names;
    private @Nullable String outputFile;
    private @Nullable Boolean selectContactGroups;
    private @Nullable Map<String,Object> tags;
    private @Nullable String type;

    private GetMonitorGroupsResult() {}
    public Optional<String> dynamicTagRuleId() {
        return Optional.ofNullable(this.dynamicTagRuleId);
    }
    public List<GetMonitorGroupsGroup> groups() {
        return this.groups;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<Boolean> includeTemplateHistory() {
        return Optional.ofNullable(this.includeTemplateHistory);
    }
    public Optional<String> keyword() {
        return Optional.ofNullable(this.keyword);
    }
    public Optional<String> monitorGroupName() {
        return Optional.ofNullable(this.monitorGroupName);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Boolean> selectContactGroups() {
        return Optional.ofNullable(this.selectContactGroups);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dynamicTagRuleId;
        private List<GetMonitorGroupsGroup> groups;
        private String id;
        private List<String> ids;
        private @Nullable Boolean includeTemplateHistory;
        private @Nullable String keyword;
        private @Nullable String monitorGroupName;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable Boolean selectContactGroups;
        private @Nullable Map<String,Object> tags;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetMonitorGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dynamicTagRuleId = defaults.dynamicTagRuleId;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.includeTemplateHistory = defaults.includeTemplateHistory;
    	      this.keyword = defaults.keyword;
    	      this.monitorGroupName = defaults.monitorGroupName;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.selectContactGroups = defaults.selectContactGroups;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dynamicTagRuleId(@Nullable String dynamicTagRuleId) {
            this.dynamicTagRuleId = dynamicTagRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<GetMonitorGroupsGroup> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(GetMonitorGroupsGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder includeTemplateHistory(@Nullable Boolean includeTemplateHistory) {
            this.includeTemplateHistory = includeTemplateHistory;
            return this;
        }
        @CustomType.Setter
        public Builder keyword(@Nullable String keyword) {
            this.keyword = keyword;
            return this;
        }
        @CustomType.Setter
        public Builder monitorGroupName(@Nullable String monitorGroupName) {
            this.monitorGroupName = monitorGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder selectContactGroups(@Nullable Boolean selectContactGroups) {
            this.selectContactGroups = selectContactGroups;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetMonitorGroupsResult build() {
            final var o = new GetMonitorGroupsResult();
            o.dynamicTagRuleId = dynamicTagRuleId;
            o.groups = groups;
            o.id = id;
            o.ids = ids;
            o.includeTemplateHistory = includeTemplateHistory;
            o.keyword = keyword;
            o.monitorGroupName = monitorGroupName;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.selectContactGroups = selectContactGroups;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
