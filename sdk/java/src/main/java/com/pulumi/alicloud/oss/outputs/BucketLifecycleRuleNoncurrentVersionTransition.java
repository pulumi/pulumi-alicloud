// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleRuleNoncurrentVersionTransition {
    private Integer days;
    private @Nullable Boolean isAccessTime;
    private @Nullable Boolean returnToStdWhenVisit;
    /**
     * @return The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34;, &#34;ColdArchive&#34; and &#34;DeepColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available since 1.203.0. &#34;DeepColdArchive&#34; is available since 1.209.0.
     * 
     */
    private String storageClass;

    private BucketLifecycleRuleNoncurrentVersionTransition() {}
    public Integer days() {
        return this.days;
    }
    public Optional<Boolean> isAccessTime() {
        return Optional.ofNullable(this.isAccessTime);
    }
    public Optional<Boolean> returnToStdWhenVisit() {
        return Optional.ofNullable(this.returnToStdWhenVisit);
    }
    /**
     * @return The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34;, &#34;ColdArchive&#34; and &#34;DeepColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available since 1.203.0. &#34;DeepColdArchive&#34; is available since 1.209.0.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleNoncurrentVersionTransition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer days;
        private @Nullable Boolean isAccessTime;
        private @Nullable Boolean returnToStdWhenVisit;
        private String storageClass;
        public Builder() {}
        public Builder(BucketLifecycleRuleNoncurrentVersionTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.days = defaults.days;
    	      this.isAccessTime = defaults.isAccessTime;
    	      this.returnToStdWhenVisit = defaults.returnToStdWhenVisit;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder days(Integer days) {
            if (days == null) {
              throw new MissingRequiredPropertyException("BucketLifecycleRuleNoncurrentVersionTransition", "days");
            }
            this.days = days;
            return this;
        }
        @CustomType.Setter
        public Builder isAccessTime(@Nullable Boolean isAccessTime) {

            this.isAccessTime = isAccessTime;
            return this;
        }
        @CustomType.Setter
        public Builder returnToStdWhenVisit(@Nullable Boolean returnToStdWhenVisit) {

            this.returnToStdWhenVisit = returnToStdWhenVisit;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("BucketLifecycleRuleNoncurrentVersionTransition", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        public BucketLifecycleRuleNoncurrentVersionTransition build() {
            final var _resultValue = new BucketLifecycleRuleNoncurrentVersionTransition();
            _resultValue.days = days;
            _resultValue.isAccessTime = isAccessTime;
            _resultValue.returnToStdWhenVisit = returnToStdWhenVisit;
            _resultValue.storageClass = storageClass;
            return _resultValue;
        }
    }
}
