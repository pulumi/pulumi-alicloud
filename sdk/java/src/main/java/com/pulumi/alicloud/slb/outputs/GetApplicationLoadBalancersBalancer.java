// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb.outputs;

import com.pulumi.alicloud.slb.outputs.GetApplicationLoadBalancersBalancerBackendServer;
import com.pulumi.alicloud.slb.outputs.GetApplicationLoadBalancersBalancerListenerPortsAndProtocal;
import com.pulumi.alicloud.slb.outputs.GetApplicationLoadBalancersBalancerListenerPortsAndProtocol;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApplicationLoadBalancersBalancer {
    /**
     * @return Service address of the SLBs.
     * 
     */
    private String address;
    /**
     * @return The address ip version. Valid values `ipv4` and `ipv6`.
     * 
     */
    private String addressIpVersion;
    /**
     * @return The address type of the SLB. Valid values `internet` and `intranet`.
     * 
     */
    private String addressType;
    /**
     * @return The auto release time.
     * 
     */
    private Integer autoReleaseTime;
    /**
     * @return The backend servers of the SLB.
     * 
     */
    private List<GetApplicationLoadBalancersBalancerBackendServer> backendServers;
    /**
     * @return The bandwidth of the SLB.
     * 
     */
    private Integer bandwidth;
    /**
     * @return The create time stamp of the SLB.
     * 
     */
    private Integer createTimeStamp;
    /**
     * @return Whether the SLB should delete protection.
     * 
     */
    private String deleteProtection;
    /**
     * @return The end time of the SLB.
     * 
     */
    private String endTime;
    /**
     * @return The end time stamp of the SLB.
     * 
     */
    private Integer endTimeStamp;
    /**
     * @return ID of the SLB.
     * 
     */
    private String id;
    /**
     * @return The internet charge type. Valid values `PayByBandwidth` and `PayByTraffic`.
     * 
     */
    private String internetChargeType;
    /**
     * @return The listener ports and protocal of the SLB.
     * 
     */
    private List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocal> listenerPortsAndProtocals;
    /**
     * @return The listener ports and protocol of the SLB.
     * 
     */
    private List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocol> listenerPortsAndProtocols;
    /**
     * @return Thd ID of the SLB.
     * 
     */
    private String loadBalancerId;
    /**
     * @return The name of the SLB.
     * 
     */
    private String loadBalancerName;
    /**
     * @return The specification of the SLB.
     * 
     */
    private String loadBalancerSpec;
    /**
     * @return The master zone id of the SLB.
     * 
     */
    private String masterZoneId;
    /**
     * @return The reason of modification protection.
     * 
     */
    private String modificationProtectionReason;
    /**
     * @return The status of modification protection.
     * 
     */
    private String modificationProtectionStatus;
    /**
     * @return Network type of the SLBs. Valid values: `vpc` and `classic`.
     * 
     */
    private String networkType;
    /**
     * @return The payment type of SLB. Valid values `PayAsYouGo` and `Subscription`.
     * 
     */
    private String paymentType;
    /**
     * @return Region ID the SLB belongs to.
     * 
     */
    private String regionIdAlias;
    /**
     * @return The renewal cyc unit of the SLB.
     * 
     */
    private String renewalCycUnit;
    /**
     * @return The renewal duration of the SLB.
     * 
     */
    private Integer renewalDuration;
    /**
     * @return The renewal status of the SLB.
     * 
     */
    private String renewalStatus;
    /**
     * @return The Id of resource group which SLB belongs.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The slave zone id of the SLB.
     * 
     */
    private String slaveZoneId;
    /**
     * @return SLB current status. Possible values: `inactive`, `active` and `locked`.
     * 
     */
    private String status;
    /**
     * @return A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return ID of the VPC linked to the SLBs.
     * 
     */
    private String vpcId;
    /**
     * @return ID of the VSwitch linked to the SLBs.
     * 
     */
    private String vswitchId;

    private GetApplicationLoadBalancersBalancer() {}
    /**
     * @return Service address of the SLBs.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return The address ip version. Valid values `ipv4` and `ipv6`.
     * 
     */
    public String addressIpVersion() {
        return this.addressIpVersion;
    }
    /**
     * @return The address type of the SLB. Valid values `internet` and `intranet`.
     * 
     */
    public String addressType() {
        return this.addressType;
    }
    /**
     * @return The auto release time.
     * 
     */
    public Integer autoReleaseTime() {
        return this.autoReleaseTime;
    }
    /**
     * @return The backend servers of the SLB.
     * 
     */
    public List<GetApplicationLoadBalancersBalancerBackendServer> backendServers() {
        return this.backendServers;
    }
    /**
     * @return The bandwidth of the SLB.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The create time stamp of the SLB.
     * 
     */
    public Integer createTimeStamp() {
        return this.createTimeStamp;
    }
    /**
     * @return Whether the SLB should delete protection.
     * 
     */
    public String deleteProtection() {
        return this.deleteProtection;
    }
    /**
     * @return The end time of the SLB.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return The end time stamp of the SLB.
     * 
     */
    public Integer endTimeStamp() {
        return this.endTimeStamp;
    }
    /**
     * @return ID of the SLB.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The internet charge type. Valid values `PayByBandwidth` and `PayByTraffic`.
     * 
     */
    public String internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * @return The listener ports and protocal of the SLB.
     * 
     */
    public List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocal> listenerPortsAndProtocals() {
        return this.listenerPortsAndProtocals;
    }
    /**
     * @return The listener ports and protocol of the SLB.
     * 
     */
    public List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocol> listenerPortsAndProtocols() {
        return this.listenerPortsAndProtocols;
    }
    /**
     * @return Thd ID of the SLB.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return The name of the SLB.
     * 
     */
    public String loadBalancerName() {
        return this.loadBalancerName;
    }
    /**
     * @return The specification of the SLB.
     * 
     */
    public String loadBalancerSpec() {
        return this.loadBalancerSpec;
    }
    /**
     * @return The master zone id of the SLB.
     * 
     */
    public String masterZoneId() {
        return this.masterZoneId;
    }
    /**
     * @return The reason of modification protection.
     * 
     */
    public String modificationProtectionReason() {
        return this.modificationProtectionReason;
    }
    /**
     * @return The status of modification protection.
     * 
     */
    public String modificationProtectionStatus() {
        return this.modificationProtectionStatus;
    }
    /**
     * @return Network type of the SLBs. Valid values: `vpc` and `classic`.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return The payment type of SLB. Valid values `PayAsYouGo` and `Subscription`.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return Region ID the SLB belongs to.
     * 
     */
    public String regionIdAlias() {
        return this.regionIdAlias;
    }
    /**
     * @return The renewal cyc unit of the SLB.
     * 
     */
    public String renewalCycUnit() {
        return this.renewalCycUnit;
    }
    /**
     * @return The renewal duration of the SLB.
     * 
     */
    public Integer renewalDuration() {
        return this.renewalDuration;
    }
    /**
     * @return The renewal status of the SLB.
     * 
     */
    public String renewalStatus() {
        return this.renewalStatus;
    }
    /**
     * @return The Id of resource group which SLB belongs.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The slave zone id of the SLB.
     * 
     */
    public String slaveZoneId() {
        return this.slaveZoneId;
    }
    /**
     * @return SLB current status. Possible values: `inactive`, `active` and `locked`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return ID of the VPC linked to the SLBs.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return ID of the VSwitch linked to the SLBs.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationLoadBalancersBalancer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String addressIpVersion;
        private String addressType;
        private Integer autoReleaseTime;
        private List<GetApplicationLoadBalancersBalancerBackendServer> backendServers;
        private Integer bandwidth;
        private Integer createTimeStamp;
        private String deleteProtection;
        private String endTime;
        private Integer endTimeStamp;
        private String id;
        private String internetChargeType;
        private List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocal> listenerPortsAndProtocals;
        private List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocol> listenerPortsAndProtocols;
        private String loadBalancerId;
        private String loadBalancerName;
        private String loadBalancerSpec;
        private String masterZoneId;
        private String modificationProtectionReason;
        private String modificationProtectionStatus;
        private String networkType;
        private String paymentType;
        private String regionIdAlias;
        private String renewalCycUnit;
        private Integer renewalDuration;
        private String renewalStatus;
        private String resourceGroupId;
        private String slaveZoneId;
        private String status;
        private Map<String,Object> tags;
        private String vpcId;
        private String vswitchId;
        public Builder() {}
        public Builder(GetApplicationLoadBalancersBalancer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressIpVersion = defaults.addressIpVersion;
    	      this.addressType = defaults.addressType;
    	      this.autoReleaseTime = defaults.autoReleaseTime;
    	      this.backendServers = defaults.backendServers;
    	      this.bandwidth = defaults.bandwidth;
    	      this.createTimeStamp = defaults.createTimeStamp;
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.endTime = defaults.endTime;
    	      this.endTimeStamp = defaults.endTimeStamp;
    	      this.id = defaults.id;
    	      this.internetChargeType = defaults.internetChargeType;
    	      this.listenerPortsAndProtocals = defaults.listenerPortsAndProtocals;
    	      this.listenerPortsAndProtocols = defaults.listenerPortsAndProtocols;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerName = defaults.loadBalancerName;
    	      this.loadBalancerSpec = defaults.loadBalancerSpec;
    	      this.masterZoneId = defaults.masterZoneId;
    	      this.modificationProtectionReason = defaults.modificationProtectionReason;
    	      this.modificationProtectionStatus = defaults.modificationProtectionStatus;
    	      this.networkType = defaults.networkType;
    	      this.paymentType = defaults.paymentType;
    	      this.regionIdAlias = defaults.regionIdAlias;
    	      this.renewalCycUnit = defaults.renewalCycUnit;
    	      this.renewalDuration = defaults.renewalDuration;
    	      this.renewalStatus = defaults.renewalStatus;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.slaveZoneId = defaults.slaveZoneId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressIpVersion(String addressIpVersion) {
            if (addressIpVersion == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "addressIpVersion");
            }
            this.addressIpVersion = addressIpVersion;
            return this;
        }
        @CustomType.Setter
        public Builder addressType(String addressType) {
            if (addressType == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "addressType");
            }
            this.addressType = addressType;
            return this;
        }
        @CustomType.Setter
        public Builder autoReleaseTime(Integer autoReleaseTime) {
            if (autoReleaseTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "autoReleaseTime");
            }
            this.autoReleaseTime = autoReleaseTime;
            return this;
        }
        @CustomType.Setter
        public Builder backendServers(List<GetApplicationLoadBalancersBalancerBackendServer> backendServers) {
            if (backendServers == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "backendServers");
            }
            this.backendServers = backendServers;
            return this;
        }
        public Builder backendServers(GetApplicationLoadBalancersBalancerBackendServer... backendServers) {
            return backendServers(List.of(backendServers));
        }
        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder createTimeStamp(Integer createTimeStamp) {
            if (createTimeStamp == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "createTimeStamp");
            }
            this.createTimeStamp = createTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder deleteProtection(String deleteProtection) {
            if (deleteProtection == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "deleteProtection");
            }
            this.deleteProtection = deleteProtection;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            if (endTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "endTime");
            }
            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder endTimeStamp(Integer endTimeStamp) {
            if (endTimeStamp == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "endTimeStamp");
            }
            this.endTimeStamp = endTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internetChargeType(String internetChargeType) {
            if (internetChargeType == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "internetChargeType");
            }
            this.internetChargeType = internetChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder listenerPortsAndProtocals(List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocal> listenerPortsAndProtocals) {
            if (listenerPortsAndProtocals == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "listenerPortsAndProtocals");
            }
            this.listenerPortsAndProtocals = listenerPortsAndProtocals;
            return this;
        }
        public Builder listenerPortsAndProtocals(GetApplicationLoadBalancersBalancerListenerPortsAndProtocal... listenerPortsAndProtocals) {
            return listenerPortsAndProtocals(List.of(listenerPortsAndProtocals));
        }
        @CustomType.Setter
        public Builder listenerPortsAndProtocols(List<GetApplicationLoadBalancersBalancerListenerPortsAndProtocol> listenerPortsAndProtocols) {
            if (listenerPortsAndProtocols == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "listenerPortsAndProtocols");
            }
            this.listenerPortsAndProtocols = listenerPortsAndProtocols;
            return this;
        }
        public Builder listenerPortsAndProtocols(GetApplicationLoadBalancersBalancerListenerPortsAndProtocol... listenerPortsAndProtocols) {
            return listenerPortsAndProtocols(List.of(listenerPortsAndProtocols));
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerName(String loadBalancerName) {
            if (loadBalancerName == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "loadBalancerName");
            }
            this.loadBalancerName = loadBalancerName;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerSpec(String loadBalancerSpec) {
            if (loadBalancerSpec == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "loadBalancerSpec");
            }
            this.loadBalancerSpec = loadBalancerSpec;
            return this;
        }
        @CustomType.Setter
        public Builder masterZoneId(String masterZoneId) {
            if (masterZoneId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "masterZoneId");
            }
            this.masterZoneId = masterZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionReason(String modificationProtectionReason) {
            if (modificationProtectionReason == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "modificationProtectionReason");
            }
            this.modificationProtectionReason = modificationProtectionReason;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionStatus(String modificationProtectionStatus) {
            if (modificationProtectionStatus == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "modificationProtectionStatus");
            }
            this.modificationProtectionStatus = modificationProtectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            if (networkType == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "networkType");
            }
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder regionIdAlias(String regionIdAlias) {
            if (regionIdAlias == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "regionIdAlias");
            }
            this.regionIdAlias = regionIdAlias;
            return this;
        }
        @CustomType.Setter
        public Builder renewalCycUnit(String renewalCycUnit) {
            if (renewalCycUnit == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "renewalCycUnit");
            }
            this.renewalCycUnit = renewalCycUnit;
            return this;
        }
        @CustomType.Setter
        public Builder renewalDuration(Integer renewalDuration) {
            if (renewalDuration == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "renewalDuration");
            }
            this.renewalDuration = renewalDuration;
            return this;
        }
        @CustomType.Setter
        public Builder renewalStatus(String renewalStatus) {
            if (renewalStatus == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "renewalStatus");
            }
            this.renewalStatus = renewalStatus;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder slaveZoneId(String slaveZoneId) {
            if (slaveZoneId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "slaveZoneId");
            }
            this.slaveZoneId = slaveZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetApplicationLoadBalancersBalancer", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        public GetApplicationLoadBalancersBalancer build() {
            final var _resultValue = new GetApplicationLoadBalancersBalancer();
            _resultValue.address = address;
            _resultValue.addressIpVersion = addressIpVersion;
            _resultValue.addressType = addressType;
            _resultValue.autoReleaseTime = autoReleaseTime;
            _resultValue.backendServers = backendServers;
            _resultValue.bandwidth = bandwidth;
            _resultValue.createTimeStamp = createTimeStamp;
            _resultValue.deleteProtection = deleteProtection;
            _resultValue.endTime = endTime;
            _resultValue.endTimeStamp = endTimeStamp;
            _resultValue.id = id;
            _resultValue.internetChargeType = internetChargeType;
            _resultValue.listenerPortsAndProtocals = listenerPortsAndProtocals;
            _resultValue.listenerPortsAndProtocols = listenerPortsAndProtocols;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerName = loadBalancerName;
            _resultValue.loadBalancerSpec = loadBalancerSpec;
            _resultValue.masterZoneId = masterZoneId;
            _resultValue.modificationProtectionReason = modificationProtectionReason;
            _resultValue.modificationProtectionStatus = modificationProtectionStatus;
            _resultValue.networkType = networkType;
            _resultValue.paymentType = paymentType;
            _resultValue.regionIdAlias = regionIdAlias;
            _resultValue.renewalCycUnit = renewalCycUnit;
            _resultValue.renewalDuration = renewalDuration;
            _resultValue.renewalStatus = renewalStatus;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.slaveZoneId = slaveZoneId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
