// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.hbr.RestoreJobArgs;
import com.pulumi.alicloud.hbr.inputs.RestoreJobState;
import com.pulumi.alicloud.hbr.outputs.RestoreJobOtsDetail;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Hybrid Backup Recovery (HBR) Restore Job resource.
 * 
 * For information about Hybrid Backup Recovery (HBR) Restore Job and how to use it, see [What is Restore Job](https://www.alibabacloud.com/help/doc-detail/186575.htm).
 * 
 * &gt; **NOTE:** Available in v1.133.0+.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.hbr.HbrFunctions;
 * import com.pulumi.alicloud.hbr.inputs.GetEcsBackupPlansArgs;
 * import com.pulumi.alicloud.hbr.inputs.GetOssBackupPlansArgs;
 * import com.pulumi.alicloud.hbr.inputs.GetNasBackupPlansArgs;
 * import com.pulumi.alicloud.hbr.inputs.GetSnapshotsArgs;
 * import com.pulumi.alicloud.hbr.RestoreJob;
 * import com.pulumi.alicloud.hbr.RestoreJobArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var defaultEcsBackupPlans = HbrFunctions.getEcsBackupPlans(GetEcsBackupPlansArgs.builder()
 *             .nameRegex(&#34;plan-tf-used-dont-delete&#34;)
 *             .build());
 * 
 *         final var defaultOssBackupPlans = HbrFunctions.getOssBackupPlans(GetOssBackupPlansArgs.builder()
 *             .nameRegex(&#34;plan-tf-used-dont-delete&#34;)
 *             .build());
 * 
 *         final var defaultNasBackupPlans = HbrFunctions.getNasBackupPlans(GetNasBackupPlansArgs.builder()
 *             .nameRegex(&#34;plan-tf-used-dont-delete&#34;)
 *             .build());
 * 
 *         final var ecsSnapshots = HbrFunctions.getSnapshots(GetSnapshotsArgs.builder()
 *             .sourceType(&#34;ECS_FILE&#34;)
 *             .vaultId(defaultEcsBackupPlans.applyValue(getEcsBackupPlansResult -&gt; getEcsBackupPlansResult.plans()[0].vaultId()))
 *             .instanceId(defaultEcsBackupPlans.applyValue(getEcsBackupPlansResult -&gt; getEcsBackupPlansResult.plans()[0].instanceId()))
 *             .build());
 * 
 *         final var ossSnapshots = HbrFunctions.getSnapshots(GetSnapshotsArgs.builder()
 *             .sourceType(&#34;OSS&#34;)
 *             .vaultId(defaultOssBackupPlans.applyValue(getOssBackupPlansResult -&gt; getOssBackupPlansResult.plans()[0].vaultId()))
 *             .bucket(defaultOssBackupPlans.applyValue(getOssBackupPlansResult -&gt; getOssBackupPlansResult.plans()[0].bucket()))
 *             .build());
 * 
 *         final var nasSnapshots = HbrFunctions.getSnapshots(GetSnapshotsArgs.builder()
 *             .sourceType(&#34;NAS&#34;)
 *             .vaultId(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].vaultId()))
 *             .fileSystemId(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].fileSystemId()))
 *             .createTime(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].createTime()))
 *             .build());
 * 
 *         var nasJob = new RestoreJob(&#34;nasJob&#34;, RestoreJobArgs.builder()        
 *             .snapshotHash(nasSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotHash()))
 *             .vaultId(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].vaultId()))
 *             .sourceType(&#34;NAS&#34;)
 *             .restoreType(&#34;NAS&#34;)
 *             .snapshotId(nasSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotId()))
 *             .targetFileSystemId(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].fileSystemId()))
 *             .targetCreateTime(defaultNasBackupPlans.applyValue(getNasBackupPlansResult -&gt; getNasBackupPlansResult.plans()[0].createTime()))
 *             .targetPath(&#34;/&#34;)
 *             .options(&#34;&#34;&#34;
 *     {&#34;includes&#34;:[], &#34;excludes&#34;:[]}
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var ossJob = new RestoreJob(&#34;ossJob&#34;, RestoreJobArgs.builder()        
 *             .snapshotHash(ossSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotHash()))
 *             .vaultId(defaultOssBackupPlans.applyValue(getOssBackupPlansResult -&gt; getOssBackupPlansResult.plans()[0].vaultId()))
 *             .sourceType(&#34;OSS&#34;)
 *             .restoreType(&#34;OSS&#34;)
 *             .snapshotId(ossSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotId()))
 *             .targetBucket(defaultOssBackupPlans.applyValue(getOssBackupPlansResult -&gt; getOssBackupPlansResult.plans()[0].bucket()))
 *             .targetPrefix(&#34;&#34;)
 *             .options(&#34;&#34;&#34;
 *     {&#34;includes&#34;:[], &#34;excludes&#34;:[]}
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var ecsJob = new RestoreJob(&#34;ecsJob&#34;, RestoreJobArgs.builder()        
 *             .snapshotHash(ecsSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotHash()))
 *             .vaultId(defaultEcsBackupPlans.applyValue(getEcsBackupPlansResult -&gt; getEcsBackupPlansResult.plans()[0].vaultId()))
 *             .sourceType(&#34;ECS_FILE&#34;)
 *             .restoreType(&#34;ECS_FILE&#34;)
 *             .snapshotId(ecsSnapshots.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].snapshotId()))
 *             .targetInstanceId(defaultEcsBackupPlans.applyValue(getEcsBackupPlansResult -&gt; getEcsBackupPlansResult.plans()[0].instanceId()))
 *             .targetPath(&#34;/&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * &gt; **NOTE:** This resource can only be created, cannot be modified or deleted. Therefore, any modification of the resource attribute will not affect exist resource.
 * 
 * ## Import
 * 
 * Hybrid Backup Recovery (HBR) Restore Job can be imported using the id. Format to `&lt;restore_job_id&gt;:&lt;restore_type&gt;`, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:hbr/restoreJob:RestoreJob example your_restore_job_id:your_restore_type
 * ```
 * 
 */
@ResourceType(type="alicloud:hbr/restoreJob:RestoreJob")
public class RestoreJob extends com.pulumi.resources.CustomResource {
    /**
     * The role name created in the original account RAM backup by the cross account managed by the current account.
     * 
     */
    @Export(name="crossAccountRoleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> crossAccountRoleName;

    /**
     * @return The role name created in the original account RAM backup by the cross account managed by the current account.
     * 
     */
    public Output<Optional<String>> crossAccountRoleName() {
        return Codegen.optional(this.crossAccountRoleName);
    }
    /**
     * The type of the cross account backup. Valid values: `SELF_ACCOUNT`, `CROSS_ACCOUNT`.
     * 
     */
    @Export(name="crossAccountType", refs={String.class}, tree="[0]")
    private Output<String> crossAccountType;

    /**
     * @return The type of the cross account backup. Valid values: `SELF_ACCOUNT`, `CROSS_ACCOUNT`.
     * 
     */
    public Output<String> crossAccountType() {
        return this.crossAccountType;
    }
    /**
     * The original account ID of the cross account backup managed by the current account.
     * 
     */
    @Export(name="crossAccountUserId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> crossAccountUserId;

    /**
     * @return The original account ID of the cross account backup managed by the current account.
     * 
     */
    public Output<Optional<Integer>> crossAccountUserId() {
        return Codegen.optional(this.crossAccountUserId);
    }
    /**
     * The exclude path. **NOTE:** Invalid while source_type equals `OSS` or `NAS`. It&#39;s a json string with format:`[&#34;/excludePath]`, up to 255 characters. **WARNING:** If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    @Export(name="exclude", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exclude;

    /**
     * @return The exclude path. **NOTE:** Invalid while source_type equals `OSS` or `NAS`. It&#39;s a json string with format:`[&#34;/excludePath]`, up to 255 characters. **WARNING:** If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    public Output<Optional<String>> exclude() {
        return Codegen.optional(this.exclude);
    }
    /**
     * The include path. **NOTE:** Invalid while source_type equals `OSS` or `NAS`. It&#39;s a json string with format:`[&#34;/includePath&#34;]`, Up to 255 characters. **WARNING:** The field is required while source_type equals `OTS_TABLE` which means source table name. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    @Export(name="include", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> include;

    /**
     * @return The include path. **NOTE:** Invalid while source_type equals `OSS` or `NAS`. It&#39;s a json string with format:`[&#34;/includePath&#34;]`, Up to 255 characters. **WARNING:** The field is required while source_type equals `OTS_TABLE` which means source table name. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    public Output<Optional<String>> include() {
        return Codegen.optional(this.include);
    }
    /**
     * Recovery options. **NOTE:** Required while source_type equals `OSS` or `NAS`, invalid while source_type equals `ECS_FILE`. It&#39;s a json string with format:`&#34;{&#34;includes&#34;:[],&#34;excludes&#34;:[]}&#34;,`. Recovery options. When restores OTS_TABLE and real target time is the rangEnd time of the snapshot, it should be a string with format: `{&#34;UI_TargetTime&#34;:1650032529018}`.
     * 
     */
    @Export(name="options", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> options;

    /**
     * @return Recovery options. **NOTE:** Required while source_type equals `OSS` or `NAS`, invalid while source_type equals `ECS_FILE`. It&#39;s a json string with format:`&#34;{&#34;includes&#34;:[],&#34;excludes&#34;:[]}&#34;,`. Recovery options. When restores OTS_TABLE and real target time is the rangEnd time of the snapshot, it should be a string with format: `{&#34;UI_TargetTime&#34;:1650032529018}`.
     * 
     */
    public Output<Optional<String>> options() {
        return Codegen.optional(this.options);
    }
    /**
     * The details about the Tablestore instance. See the following `Block ots_detail`.
     * 
     */
    @Export(name="otsDetail", refs={RestoreJobOtsDetail.class}, tree="[0]")
    private Output<RestoreJobOtsDetail> otsDetail;

    /**
     * @return The details about the Tablestore instance. See the following `Block ots_detail`.
     * 
     */
    public Output<RestoreJobOtsDetail> otsDetail() {
        return this.otsDetail;
    }
    /**
     * Restore Job ID. It&#39;s the unique key of this resource, if you want to set this argument by yourself, you must specify a unique keyword that never appears.
     * 
     */
    @Export(name="restoreJobId", refs={String.class}, tree="[0]")
    private Output<String> restoreJobId;

    /**
     * @return Restore Job ID. It&#39;s the unique key of this resource, if you want to set this argument by yourself, you must specify a unique keyword that never appears.
     * 
     */
    public Output<String> restoreJobId() {
        return this.restoreJobId;
    }
    /**
     * The type of recovery destination. Valid values: `ECS_FILE`, `NAS`, `OSS`,`OTS_TABLE`,`UDM_ECS_ROLLBACK`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
     * 
     */
    @Export(name="restoreType", refs={String.class}, tree="[0]")
    private Output<String> restoreType;

    /**
     * @return The type of recovery destination. Valid values: `ECS_FILE`, `NAS`, `OSS`,`OTS_TABLE`,`UDM_ECS_ROLLBACK`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
     * 
     */
    public Output<String> restoreType() {
        return this.restoreType;
    }
    /**
     * The hashcode of Snapshot.
     * 
     */
    @Export(name="snapshotHash", refs={String.class}, tree="[0]")
    private Output<String> snapshotHash;

    /**
     * @return The hashcode of Snapshot.
     * 
     */
    public Output<String> snapshotHash() {
        return this.snapshotHash;
    }
    /**
     * The ID of Snapshot.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return The ID of Snapshot.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * The type of data source. Valid values: `ECS_FILE`, `NAS`, `OSS`,`OTS_TABLE`,`UDM_ECS`.
     * 
     */
    @Export(name="sourceType", refs={String.class}, tree="[0]")
    private Output<String> sourceType;

    /**
     * @return The type of data source. Valid values: `ECS_FILE`, `NAS`, `OSS`,`OTS_TABLE`,`UDM_ECS`.
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }
    /**
     * The Restore Job Status.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The Restore Job Status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The target name of OSS bucket. **NOTE:** Required while source_type equals `OSS`,
     * 
     */
    @Export(name="targetBucket", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetBucket;

    /**
     * @return The target name of OSS bucket. **NOTE:** Required while source_type equals `OSS`,
     * 
     */
    public Output<Optional<String>> targetBucket() {
        return Codegen.optional(this.targetBucket);
    }
    /**
     * The target client ID.
     * 
     */
    @Export(name="targetClientId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetClientId;

    /**
     * @return The target client ID.
     * 
     */
    public Output<Optional<String>> targetClientId() {
        return Codegen.optional(this.targetClientId);
    }
    /**
     * The creation time of destination File System. **NOTE:** While source_type equals `NAS`, this parameter must be set. **Note:** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
     * 
     */
    @Export(name="targetCreateTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetCreateTime;

    /**
     * @return The creation time of destination File System. **NOTE:** While source_type equals `NAS`, this parameter must be set. **Note:** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
     * 
     */
    public Output<Optional<String>> targetCreateTime() {
        return Codegen.optional(this.targetCreateTime);
    }
    /**
     * The target data source ID.
     * 
     */
    @Export(name="targetDataSourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetDataSourceId;

    /**
     * @return The target data source ID.
     * 
     */
    public Output<Optional<String>> targetDataSourceId() {
        return Codegen.optional(this.targetDataSourceId);
    }
    /**
     * The ID of destination File System. **NOTE:** Required while source_type equals `NAS`
     * 
     */
    @Export(name="targetFileSystemId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetFileSystemId;

    /**
     * @return The ID of destination File System. **NOTE:** Required while source_type equals `NAS`
     * 
     */
    public Output<Optional<String>> targetFileSystemId() {
        return Codegen.optional(this.targetFileSystemId);
    }
    /**
     * The target ID of ECS instance. **NOTE:** Required while source_type equals `ECS_FILE`
     * 
     */
    @Export(name="targetInstanceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetInstanceId;

    /**
     * @return The target ID of ECS instance. **NOTE:** Required while source_type equals `ECS_FILE`
     * 
     */
    public Output<Optional<String>> targetInstanceId() {
        return Codegen.optional(this.targetInstanceId);
    }
    /**
     * The name of the Table store instance to which you want to restore data.**WARNING:** Required while source_type equals `OTS_TABLE`.
     * 
     */
    @Export(name="targetInstanceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetInstanceName;

    /**
     * @return The name of the Table store instance to which you want to restore data.**WARNING:** Required while source_type equals `OTS_TABLE`.
     * 
     */
    public Output<Optional<String>> targetInstanceName() {
        return Codegen.optional(this.targetInstanceName);
    }
    /**
     * The target file path of (ECS) instance. **WARNING:** Required while source_type equals `NAS` or `ECS_FILE`, If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    @Export(name="targetPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetPath;

    /**
     * @return The target file path of (ECS) instance. **WARNING:** Required while source_type equals `NAS` or `ECS_FILE`, If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    public Output<Optional<String>> targetPath() {
        return Codegen.optional(this.targetPath);
    }
    /**
     * The target prefix of the OSS object. **WARNING:** Required while source_type equals `OSS`. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    @Export(name="targetPrefix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetPrefix;

    /**
     * @return The target prefix of the OSS object. **WARNING:** Required while source_type equals `OSS`. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
     * 
     */
    public Output<Optional<String>> targetPrefix() {
        return Codegen.optional(this.targetPrefix);
    }
    /**
     * The name of the table that stores the restored data. **WARNING:** Required while source_type equals `OTS_TABLE`.
     * 
     */
    @Export(name="targetTableName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetTableName;

    /**
     * @return The name of the table that stores the restored data. **WARNING:** Required while source_type equals `OTS_TABLE`.
     * 
     */
    public Output<Optional<String>> targetTableName() {
        return Codegen.optional(this.targetTableName);
    }
    /**
     * The time when data is restored to the Table store instance. This value is a UNIX timestamp. Unit: seconds. **WARNING:** Required while source_type equals `OTS_TABLE`. **Note:** The time when data is restored to the Tablestore instance. It should be 0 if restores data at the End time of the snapshot.
     * 
     */
    @Export(name="targetTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetTime;

    /**
     * @return The time when data is restored to the Table store instance. This value is a UNIX timestamp. Unit: seconds. **WARNING:** Required while source_type equals `OTS_TABLE`. **Note:** The time when data is restored to the Tablestore instance. It should be 0 if restores data at the End time of the snapshot.
     * 
     */
    public Output<Optional<String>> targetTime() {
        return Codegen.optional(this.targetTime);
    }
    /**
     * The full machine backup details.
     * 
     */
    @Export(name="udmDetail", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> udmDetail;

    /**
     * @return The full machine backup details.
     * 
     */
    public Output<Optional<String>> udmDetail() {
        return Codegen.optional(this.udmDetail);
    }
    /**
     * The ID of backup vault.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return The ID of backup vault.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RestoreJob(String name) {
        this(name, RestoreJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RestoreJob(String name, RestoreJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RestoreJob(String name, RestoreJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/restoreJob:RestoreJob", name, args == null ? RestoreJobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RestoreJob(String name, Output<String> id, @Nullable RestoreJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/restoreJob:RestoreJob", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RestoreJob get(String name, Output<String> id, @Nullable RestoreJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RestoreJob(name, id, state, options);
    }
}
