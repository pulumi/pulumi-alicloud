// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceParameter {
    /**
     * @return The value range of the parameter.
     * 
     */
    private String checkingCode;
    /**
     * @return Indicates whether the parameter can be modified. Valid values: true | false
     * 
     */
    private String forceModify;
    /**
     * @return Indicates whether the modified parameter takes effect only after a database restart. Valid values: true | false
     * 
     */
    private String forceRestart;
    /**
     * @return The description of the parameter.
     * 
     */
    private String parameterDescription;
    /**
     * @return The name of the parameter.
     * 
     */
    private String parameterName;
    /**
     * @return The default value of the parameter.
     * 
     */
    private String parameterValue;

    private GetInstancesInstanceParameter() {}
    /**
     * @return The value range of the parameter.
     * 
     */
    public String checkingCode() {
        return this.checkingCode;
    }
    /**
     * @return Indicates whether the parameter can be modified. Valid values: true | false
     * 
     */
    public String forceModify() {
        return this.forceModify;
    }
    /**
     * @return Indicates whether the modified parameter takes effect only after a database restart. Valid values: true | false
     * 
     */
    public String forceRestart() {
        return this.forceRestart;
    }
    /**
     * @return The description of the parameter.
     * 
     */
    public String parameterDescription() {
        return this.parameterDescription;
    }
    /**
     * @return The name of the parameter.
     * 
     */
    public String parameterName() {
        return this.parameterName;
    }
    /**
     * @return The default value of the parameter.
     * 
     */
    public String parameterValue() {
        return this.parameterValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String checkingCode;
        private String forceModify;
        private String forceRestart;
        private String parameterDescription;
        private String parameterName;
        private String parameterValue;
        public Builder() {}
        public Builder(GetInstancesInstanceParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkingCode = defaults.checkingCode;
    	      this.forceModify = defaults.forceModify;
    	      this.forceRestart = defaults.forceRestart;
    	      this.parameterDescription = defaults.parameterDescription;
    	      this.parameterName = defaults.parameterName;
    	      this.parameterValue = defaults.parameterValue;
        }

        @CustomType.Setter
        public Builder checkingCode(String checkingCode) {
            if (checkingCode == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "checkingCode");
            }
            this.checkingCode = checkingCode;
            return this;
        }
        @CustomType.Setter
        public Builder forceModify(String forceModify) {
            if (forceModify == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "forceModify");
            }
            this.forceModify = forceModify;
            return this;
        }
        @CustomType.Setter
        public Builder forceRestart(String forceRestart) {
            if (forceRestart == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "forceRestart");
            }
            this.forceRestart = forceRestart;
            return this;
        }
        @CustomType.Setter
        public Builder parameterDescription(String parameterDescription) {
            if (parameterDescription == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "parameterDescription");
            }
            this.parameterDescription = parameterDescription;
            return this;
        }
        @CustomType.Setter
        public Builder parameterName(String parameterName) {
            if (parameterName == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "parameterName");
            }
            this.parameterName = parameterName;
            return this;
        }
        @CustomType.Setter
        public Builder parameterValue(String parameterValue) {
            if (parameterValue == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstanceParameter", "parameterValue");
            }
            this.parameterValue = parameterValue;
            return this;
        }
        public GetInstancesInstanceParameter build() {
            final var _resultValue = new GetInstancesInstanceParameter();
            _resultValue.checkingCode = checkingCode;
            _resultValue.forceModify = forceModify;
            _resultValue.forceRestart = forceRestart;
            _resultValue.parameterDescription = parameterDescription;
            _resultValue.parameterName = parameterName;
            _resultValue.parameterValue = parameterValue;
            return _resultValue;
        }
    }
}
