// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge.inputs;

import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersOauthParametersClientParametersArgs;
import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersOauthParametersOauthHttpParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionAuthParametersOauthParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionAuthParametersOauthParametersArgs Empty = new ConnectionAuthParametersOauthParametersArgs();

    @Import(name="authorizationEndpoint")
    private @Nullable Output<String> authorizationEndpoint;

    public Optional<Output<String>> authorizationEndpoint() {
        return Optional.ofNullable(this.authorizationEndpoint);
    }

    @Import(name="clientParameters")
    private @Nullable Output<ConnectionAuthParametersOauthParametersClientParametersArgs> clientParameters;

    public Optional<Output<ConnectionAuthParametersOauthParametersClientParametersArgs>> clientParameters() {
        return Optional.ofNullable(this.clientParameters);
    }

    @Import(name="httpMethod")
    private @Nullable Output<String> httpMethod;

    public Optional<Output<String>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    @Import(name="oauthHttpParameters")
    private @Nullable Output<ConnectionAuthParametersOauthParametersOauthHttpParametersArgs> oauthHttpParameters;

    public Optional<Output<ConnectionAuthParametersOauthParametersOauthHttpParametersArgs>> oauthHttpParameters() {
        return Optional.ofNullable(this.oauthHttpParameters);
    }

    private ConnectionAuthParametersOauthParametersArgs() {}

    private ConnectionAuthParametersOauthParametersArgs(ConnectionAuthParametersOauthParametersArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientParameters = $.clientParameters;
        this.httpMethod = $.httpMethod;
        this.oauthHttpParameters = $.oauthHttpParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionAuthParametersOauthParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionAuthParametersOauthParametersArgs $;

        public Builder() {
            $ = new ConnectionAuthParametersOauthParametersArgs();
        }

        public Builder(ConnectionAuthParametersOauthParametersArgs defaults) {
            $ = new ConnectionAuthParametersOauthParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationEndpoint(@Nullable Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        public Builder clientParameters(@Nullable Output<ConnectionAuthParametersOauthParametersClientParametersArgs> clientParameters) {
            $.clientParameters = clientParameters;
            return this;
        }

        public Builder clientParameters(ConnectionAuthParametersOauthParametersClientParametersArgs clientParameters) {
            return clientParameters(Output.of(clientParameters));
        }

        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        public Builder oauthHttpParameters(@Nullable Output<ConnectionAuthParametersOauthParametersOauthHttpParametersArgs> oauthHttpParameters) {
            $.oauthHttpParameters = oauthHttpParameters;
            return this;
        }

        public Builder oauthHttpParameters(ConnectionAuthParametersOauthParametersOauthHttpParametersArgs oauthHttpParameters) {
            return oauthHttpParameters(Output.of(oauthHttpParameters));
        }

        public ConnectionAuthParametersOauthParametersArgs build() {
            return $;
        }
    }

}
