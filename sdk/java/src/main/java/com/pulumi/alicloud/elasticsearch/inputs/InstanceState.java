// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.elasticsearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * The Elasticsearch cluster&#39;s client node quantity, between 2 and 25.
     * 
     */
    @Import(name="clientNodeAmount")
    private @Nullable Output<Integer> clientNodeAmount;

    /**
     * @return The Elasticsearch cluster&#39;s client node quantity, between 2 and 25.
     * 
     */
    public Optional<Output<Integer>> clientNodeAmount() {
        return Optional.ofNullable(this.clientNodeAmount);
    }

    /**
     * The client node spec. If specified, client node will be created.
     * 
     */
    @Import(name="clientNodeSpec")
    private @Nullable Output<String> clientNodeSpec;

    /**
     * @return The client node spec. If specified, client node will be created.
     * 
     */
    public Optional<Output<String>> clientNodeSpec() {
        return Optional.ofNullable(this.clientNodeSpec);
    }

    /**
     * The Elasticsearch cluster&#39;s data node quantity, between 2 and 50.
     * 
     */
    @Import(name="dataNodeAmount")
    private @Nullable Output<Integer> dataNodeAmount;

    /**
     * @return The Elasticsearch cluster&#39;s data node quantity, between 2 and 50.
     * 
     */
    public Optional<Output<Integer>> dataNodeAmount() {
        return Optional.ofNullable(this.dataNodeAmount);
    }

    /**
     * If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
     * 
     */
    @Import(name="dataNodeDiskEncrypted")
    private @Nullable Output<Boolean> dataNodeDiskEncrypted;

    /**
     * @return If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
     * 
     */
    public Optional<Output<Boolean>> dataNodeDiskEncrypted() {
        return Optional.ofNullable(this.dataNodeDiskEncrypted);
    }

    /**
     * The single data node storage space.
     * 
     */
    @Import(name="dataNodeDiskSize")
    private @Nullable Output<Integer> dataNodeDiskSize;

    /**
     * @return The single data node storage space.
     * 
     */
    public Optional<Output<Integer>> dataNodeDiskSize() {
        return Optional.ofNullable(this.dataNodeDiskSize);
    }

    /**
     * The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
     * 
     */
    @Import(name="dataNodeDiskType")
    private @Nullable Output<String> dataNodeDiskType;

    /**
     * @return The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
     * 
     */
    public Optional<Output<String>> dataNodeDiskType() {
        return Optional.ofNullable(this.dataNodeDiskType);
    }

    /**
     * The data node specifications of the Elasticsearch instance.
     * 
     */
    @Import(name="dataNodeSpec")
    private @Nullable Output<String> dataNodeSpec;

    /**
     * @return The data node specifications of the Elasticsearch instance.
     * 
     */
    public Optional<Output<String>> dataNodeSpec() {
        return Optional.ofNullable(this.dataNodeSpec);
    }

    /**
     * The description of instance. It a string of 0 to 30 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of instance. It a string of 0 to 30 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Instance connection domain (only VPC network access supported).
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Instance connection domain (only VPC network access supported).
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Bool, default to false. When it set to true, the instance can close kibana private network access。
     * 
     */
    @Import(name="enableKibanaPrivateNetwork")
    private @Nullable Output<Boolean> enableKibanaPrivateNetwork;

    /**
     * @return Bool, default to false. When it set to true, the instance can close kibana private network access。
     * 
     */
    public Optional<Output<Boolean>> enableKibanaPrivateNetwork() {
        return Optional.ofNullable(this.enableKibanaPrivateNetwork);
    }

    /**
     * Bool, default to true. When it set to false, the instance can enable kibana public network access。
     * 
     */
    @Import(name="enableKibanaPublicNetwork")
    private @Nullable Output<Boolean> enableKibanaPublicNetwork;

    /**
     * @return Bool, default to true. When it set to false, the instance can enable kibana public network access。
     * 
     */
    public Optional<Output<Boolean>> enableKibanaPublicNetwork() {
        return Optional.ofNullable(this.enableKibanaPublicNetwork);
    }

    /**
     * Bool, default to false. When it set to true, the instance can enable public network access。
     * 
     */
    @Import(name="enablePublic")
    private @Nullable Output<Boolean> enablePublic;

    /**
     * @return Bool, default to false. When it set to true, the instance can enable public network access。
     * 
     */
    public Optional<Output<Boolean>> enablePublic() {
        return Optional.ofNullable(this.enablePublic);
    }

    /**
     * Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instance_charge_ype from `PostPaid` to `PrePaid`, the following attributes are required: `period`. But, updating from `PostPaid` to `PrePaid` is not supported.
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instance_charge_ype from `PostPaid` to `PrePaid`, the following attributes are required: `period`. But, updating from `PostPaid` to `PrePaid` is not supported.
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * Kibana console domain (Internet access supported).
     * 
     */
    @Import(name="kibanaDomain")
    private @Nullable Output<String> kibanaDomain;

    /**
     * @return Kibana console domain (Internet access supported).
     * 
     */
    public Optional<Output<String>> kibanaDomain() {
        return Optional.ofNullable(this.kibanaDomain);
    }

    /**
     * The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
     * 
     */
    @Import(name="kibanaNodeSpec")
    private @Nullable Output<String> kibanaNodeSpec;

    /**
     * @return The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
     * 
     */
    public Optional<Output<String>> kibanaNodeSpec() {
        return Optional.ofNullable(this.kibanaNodeSpec);
    }

    /**
     * Kibana console port.
     * 
     */
    @Import(name="kibanaPort")
    private @Nullable Output<Integer> kibanaPort;

    /**
     * @return Kibana console port.
     * 
     */
    public Optional<Output<Integer>> kibanaPort() {
        return Optional.ofNullable(this.kibanaPort);
    }

    /**
     * Set the Kibana&#39;s IP whitelist in private network.
     * 
     */
    @Import(name="kibanaPrivateWhitelists")
    private @Nullable Output<List<String>> kibanaPrivateWhitelists;

    /**
     * @return Set the Kibana&#39;s IP whitelist in private network.
     * 
     */
    public Optional<Output<List<String>>> kibanaPrivateWhitelists() {
        return Optional.ofNullable(this.kibanaPrivateWhitelists);
    }

    /**
     * Set the Kibana&#39;s IP whitelist in internet network.
     * 
     */
    @Import(name="kibanaWhitelists")
    private @Nullable Output<List<String>> kibanaWhitelists;

    /**
     * @return Set the Kibana&#39;s IP whitelist in internet network.
     * 
     */
    public Optional<Output<List<String>>> kibanaWhitelists() {
        return Optional.ofNullable(this.kibanaWhitelists);
    }

    /**
     * An KMS encrypts password used to a instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kms_encrypted_password` fields.
     * 
     */
    @Import(name="kmsEncryptedPassword")
    private @Nullable Output<String> kmsEncryptedPassword;

    /**
     * @return An KMS encrypts password used to a instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kms_encrypted_password` fields.
     * 
     */
    public Optional<Output<String>> kmsEncryptedPassword() {
        return Optional.ofNullable(this.kmsEncryptedPassword);
    }

    /**
     * An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating instance with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    @Import(name="kmsEncryptionContext")
    private @Nullable Output<Map<String,Object>> kmsEncryptionContext;

    /**
     * @return An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating instance with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    public Optional<Output<Map<String,Object>>> kmsEncryptionContext() {
        return Optional.ofNullable(this.kmsEncryptionContext);
    }

    /**
     * The dedicated master node spec. If specified, dedicated master node will be created.
     * 
     */
    @Import(name="masterNodeSpec")
    private @Nullable Output<String> masterNodeSpec;

    /**
     * @return The dedicated master node spec. If specified, dedicated master node will be created.
     * 
     */
    public Optional<Output<String>> masterNodeSpec() {
        return Optional.ofNullable(this.masterNodeSpec);
    }

    /**
     * The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&amp;*()_+-=`).
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&amp;*()_+-=`).
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The duration that you will buy Elasticsearch instance (in month). It is valid when instance_charge_type is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return The duration that you will buy Elasticsearch instance (in month). It is valid when instance_charge_type is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Instance connection port.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Instance connection port.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Set the instance&#39;s IP whitelist in VPC network.
     * 
     */
    @Import(name="privateWhitelists")
    private @Nullable Output<List<String>> privateWhitelists;

    /**
     * @return Set the instance&#39;s IP whitelist in VPC network.
     * 
     */
    public Optional<Output<List<String>>> privateWhitelists() {
        return Optional.ofNullable(this.privateWhitelists);
    }

    /**
     * Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * (Available in 1.197.0+) Instance connection public domain.
     * 
     */
    @Import(name="publicDomain")
    private @Nullable Output<String> publicDomain;

    /**
     * @return (Available in 1.197.0+) Instance connection public domain.
     * 
     */
    public Optional<Output<String>> publicDomain() {
        return Optional.ofNullable(this.publicDomain);
    }

    /**
     * (Available in 1.197.0+) Instance connection public port.
     * 
     */
    @Import(name="publicPort")
    private @Nullable Output<Integer> publicPort;

    /**
     * @return (Available in 1.197.0+) Instance connection public port.
     * 
     */
    public Optional<Output<Integer>> publicPort() {
        return Optional.ofNullable(this.publicPort);
    }

    /**
     * Set the instance&#39;s IP whitelist in internet network.
     * 
     */
    @Import(name="publicWhitelists")
    private @Nullable Output<List<String>> publicWhitelists;

    /**
     * @return Set the instance&#39;s IP whitelist in internet network.
     * 
     */
    public Optional<Output<List<String>>> publicWhitelists() {
        return Optional.ofNullable(this.publicWhitelists);
    }

    /**
     * The Id of resource group which the Elasticsearch instance belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The Id of resource group which the Elasticsearch instance belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
     * 
     */
    @Import(name="settingConfig")
    private @Nullable Output<Map<String,Object>> settingConfig;

    /**
     * @return The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
     * 
     */
    public Optional<Output<Map<String,Object>>> settingConfig() {
        return Optional.ofNullable(this.settingConfig);
    }

    /**
     * The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * - key: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It cannot be a null string.
     * - value: It can be up to 128 characters in length. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * - key: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It cannot be a null string.
     * - value: It can be up to 128 characters in length. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` and `7.7_with_X-Pack`.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` and `7.7_with_X-Pack`.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * The ID of VSwitch.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of VSwitch.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The Multi-AZ supported for Elasticsearch, between 1 and 3. The `data_node_amount` value must be an integral multiple of the `zone_count` value.
     * 
     */
    @Import(name="zoneCount")
    private @Nullable Output<Integer> zoneCount;

    /**
     * @return The Multi-AZ supported for Elasticsearch, between 1 and 3. The `data_node_amount` value must be an integral multiple of the `zone_count` value.
     * 
     */
    public Optional<Output<Integer>> zoneCount() {
        return Optional.ofNullable(this.zoneCount);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.clientNodeAmount = $.clientNodeAmount;
        this.clientNodeSpec = $.clientNodeSpec;
        this.dataNodeAmount = $.dataNodeAmount;
        this.dataNodeDiskEncrypted = $.dataNodeDiskEncrypted;
        this.dataNodeDiskSize = $.dataNodeDiskSize;
        this.dataNodeDiskType = $.dataNodeDiskType;
        this.dataNodeSpec = $.dataNodeSpec;
        this.description = $.description;
        this.domain = $.domain;
        this.enableKibanaPrivateNetwork = $.enableKibanaPrivateNetwork;
        this.enableKibanaPublicNetwork = $.enableKibanaPublicNetwork;
        this.enablePublic = $.enablePublic;
        this.instanceChargeType = $.instanceChargeType;
        this.kibanaDomain = $.kibanaDomain;
        this.kibanaNodeSpec = $.kibanaNodeSpec;
        this.kibanaPort = $.kibanaPort;
        this.kibanaPrivateWhitelists = $.kibanaPrivateWhitelists;
        this.kibanaWhitelists = $.kibanaWhitelists;
        this.kmsEncryptedPassword = $.kmsEncryptedPassword;
        this.kmsEncryptionContext = $.kmsEncryptionContext;
        this.masterNodeSpec = $.masterNodeSpec;
        this.password = $.password;
        this.period = $.period;
        this.port = $.port;
        this.privateWhitelists = $.privateWhitelists;
        this.protocol = $.protocol;
        this.publicDomain = $.publicDomain;
        this.publicPort = $.publicPort;
        this.publicWhitelists = $.publicWhitelists;
        this.resourceGroupId = $.resourceGroupId;
        this.settingConfig = $.settingConfig;
        this.status = $.status;
        this.tags = $.tags;
        this.version = $.version;
        this.vswitchId = $.vswitchId;
        this.zoneCount = $.zoneCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientNodeAmount The Elasticsearch cluster&#39;s client node quantity, between 2 and 25.
         * 
         * @return builder
         * 
         */
        public Builder clientNodeAmount(@Nullable Output<Integer> clientNodeAmount) {
            $.clientNodeAmount = clientNodeAmount;
            return this;
        }

        /**
         * @param clientNodeAmount The Elasticsearch cluster&#39;s client node quantity, between 2 and 25.
         * 
         * @return builder
         * 
         */
        public Builder clientNodeAmount(Integer clientNodeAmount) {
            return clientNodeAmount(Output.of(clientNodeAmount));
        }

        /**
         * @param clientNodeSpec The client node spec. If specified, client node will be created.
         * 
         * @return builder
         * 
         */
        public Builder clientNodeSpec(@Nullable Output<String> clientNodeSpec) {
            $.clientNodeSpec = clientNodeSpec;
            return this;
        }

        /**
         * @param clientNodeSpec The client node spec. If specified, client node will be created.
         * 
         * @return builder
         * 
         */
        public Builder clientNodeSpec(String clientNodeSpec) {
            return clientNodeSpec(Output.of(clientNodeSpec));
        }

        /**
         * @param dataNodeAmount The Elasticsearch cluster&#39;s data node quantity, between 2 and 50.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeAmount(@Nullable Output<Integer> dataNodeAmount) {
            $.dataNodeAmount = dataNodeAmount;
            return this;
        }

        /**
         * @param dataNodeAmount The Elasticsearch cluster&#39;s data node quantity, between 2 and 50.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeAmount(Integer dataNodeAmount) {
            return dataNodeAmount(Output.of(dataNodeAmount));
        }

        /**
         * @param dataNodeDiskEncrypted If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskEncrypted(@Nullable Output<Boolean> dataNodeDiskEncrypted) {
            $.dataNodeDiskEncrypted = dataNodeDiskEncrypted;
            return this;
        }

        /**
         * @param dataNodeDiskEncrypted If encrypt the data node disk. Valid values are `true`, `false`. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskEncrypted(Boolean dataNodeDiskEncrypted) {
            return dataNodeDiskEncrypted(Output.of(dataNodeDiskEncrypted));
        }

        /**
         * @param dataNodeDiskSize The single data node storage space.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskSize(@Nullable Output<Integer> dataNodeDiskSize) {
            $.dataNodeDiskSize = dataNodeDiskSize;
            return this;
        }

        /**
         * @param dataNodeDiskSize The single data node storage space.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskSize(Integer dataNodeDiskSize) {
            return dataNodeDiskSize(Output.of(dataNodeDiskSize));
        }

        /**
         * @param dataNodeDiskType The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskType(@Nullable Output<String> dataNodeDiskType) {
            $.dataNodeDiskType = dataNodeDiskType;
            return this;
        }

        /**
         * @param dataNodeDiskType The data node disk type. Supported values: cloud_ssd, cloud_efficiency.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeDiskType(String dataNodeDiskType) {
            return dataNodeDiskType(Output.of(dataNodeDiskType));
        }

        /**
         * @param dataNodeSpec The data node specifications of the Elasticsearch instance.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeSpec(@Nullable Output<String> dataNodeSpec) {
            $.dataNodeSpec = dataNodeSpec;
            return this;
        }

        /**
         * @param dataNodeSpec The data node specifications of the Elasticsearch instance.
         * 
         * @return builder
         * 
         */
        public Builder dataNodeSpec(String dataNodeSpec) {
            return dataNodeSpec(Output.of(dataNodeSpec));
        }

        /**
         * @param description The description of instance. It a string of 0 to 30 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of instance. It a string of 0 to 30 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domain Instance connection domain (only VPC network access supported).
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Instance connection domain (only VPC network access supported).
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param enableKibanaPrivateNetwork Bool, default to false. When it set to true, the instance can close kibana private network access。
         * 
         * @return builder
         * 
         */
        public Builder enableKibanaPrivateNetwork(@Nullable Output<Boolean> enableKibanaPrivateNetwork) {
            $.enableKibanaPrivateNetwork = enableKibanaPrivateNetwork;
            return this;
        }

        /**
         * @param enableKibanaPrivateNetwork Bool, default to false. When it set to true, the instance can close kibana private network access。
         * 
         * @return builder
         * 
         */
        public Builder enableKibanaPrivateNetwork(Boolean enableKibanaPrivateNetwork) {
            return enableKibanaPrivateNetwork(Output.of(enableKibanaPrivateNetwork));
        }

        /**
         * @param enableKibanaPublicNetwork Bool, default to true. When it set to false, the instance can enable kibana public network access。
         * 
         * @return builder
         * 
         */
        public Builder enableKibanaPublicNetwork(@Nullable Output<Boolean> enableKibanaPublicNetwork) {
            $.enableKibanaPublicNetwork = enableKibanaPublicNetwork;
            return this;
        }

        /**
         * @param enableKibanaPublicNetwork Bool, default to true. When it set to false, the instance can enable kibana public network access。
         * 
         * @return builder
         * 
         */
        public Builder enableKibanaPublicNetwork(Boolean enableKibanaPublicNetwork) {
            return enableKibanaPublicNetwork(Output.of(enableKibanaPublicNetwork));
        }

        /**
         * @param enablePublic Bool, default to false. When it set to true, the instance can enable public network access。
         * 
         * @return builder
         * 
         */
        public Builder enablePublic(@Nullable Output<Boolean> enablePublic) {
            $.enablePublic = enablePublic;
            return this;
        }

        /**
         * @param enablePublic Bool, default to false. When it set to true, the instance can enable public network access。
         * 
         * @return builder
         * 
         */
        public Builder enablePublic(Boolean enablePublic) {
            return enablePublic(Output.of(enablePublic));
        }

        /**
         * @param instanceChargeType Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instance_charge_ype from `PostPaid` to `PrePaid`, the following attributes are required: `period`. But, updating from `PostPaid` to `PrePaid` is not supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType Valid values are `PrePaid`, `PostPaid`. Default to `PostPaid`. From version 1.69.0, the Elasticsearch cluster allows you to update your instance_charge_ype from `PostPaid` to `PrePaid`, the following attributes are required: `period`. But, updating from `PostPaid` to `PrePaid` is not supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param kibanaDomain Kibana console domain (Internet access supported).
         * 
         * @return builder
         * 
         */
        public Builder kibanaDomain(@Nullable Output<String> kibanaDomain) {
            $.kibanaDomain = kibanaDomain;
            return this;
        }

        /**
         * @param kibanaDomain Kibana console domain (Internet access supported).
         * 
         * @return builder
         * 
         */
        public Builder kibanaDomain(String kibanaDomain) {
            return kibanaDomain(Output.of(kibanaDomain));
        }

        /**
         * @param kibanaNodeSpec The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
         * 
         * @return builder
         * 
         */
        public Builder kibanaNodeSpec(@Nullable Output<String> kibanaNodeSpec) {
            $.kibanaNodeSpec = kibanaNodeSpec;
            return this;
        }

        /**
         * @param kibanaNodeSpec The kibana node specifications of the Elasticsearch instance. Default is `elasticsearch.n4.small`.
         * 
         * @return builder
         * 
         */
        public Builder kibanaNodeSpec(String kibanaNodeSpec) {
            return kibanaNodeSpec(Output.of(kibanaNodeSpec));
        }

        /**
         * @param kibanaPort Kibana console port.
         * 
         * @return builder
         * 
         */
        public Builder kibanaPort(@Nullable Output<Integer> kibanaPort) {
            $.kibanaPort = kibanaPort;
            return this;
        }

        /**
         * @param kibanaPort Kibana console port.
         * 
         * @return builder
         * 
         */
        public Builder kibanaPort(Integer kibanaPort) {
            return kibanaPort(Output.of(kibanaPort));
        }

        /**
         * @param kibanaPrivateWhitelists Set the Kibana&#39;s IP whitelist in private network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaPrivateWhitelists(@Nullable Output<List<String>> kibanaPrivateWhitelists) {
            $.kibanaPrivateWhitelists = kibanaPrivateWhitelists;
            return this;
        }

        /**
         * @param kibanaPrivateWhitelists Set the Kibana&#39;s IP whitelist in private network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaPrivateWhitelists(List<String> kibanaPrivateWhitelists) {
            return kibanaPrivateWhitelists(Output.of(kibanaPrivateWhitelists));
        }

        /**
         * @param kibanaPrivateWhitelists Set the Kibana&#39;s IP whitelist in private network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaPrivateWhitelists(String... kibanaPrivateWhitelists) {
            return kibanaPrivateWhitelists(List.of(kibanaPrivateWhitelists));
        }

        /**
         * @param kibanaWhitelists Set the Kibana&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaWhitelists(@Nullable Output<List<String>> kibanaWhitelists) {
            $.kibanaWhitelists = kibanaWhitelists;
            return this;
        }

        /**
         * @param kibanaWhitelists Set the Kibana&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaWhitelists(List<String> kibanaWhitelists) {
            return kibanaWhitelists(Output.of(kibanaWhitelists));
        }

        /**
         * @param kibanaWhitelists Set the Kibana&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder kibanaWhitelists(String... kibanaWhitelists) {
            return kibanaWhitelists(List.of(kibanaWhitelists));
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to a instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kms_encrypted_password` fields.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(@Nullable Output<String> kmsEncryptedPassword) {
            $.kmsEncryptedPassword = kmsEncryptedPassword;
            return this;
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to a instance. If the `password` is filled in, this field will be ignored, but you have to specify one of `password` and `kms_encrypted_password` fields.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(String kmsEncryptedPassword) {
            return kmsEncryptedPassword(Output.of(kmsEncryptedPassword));
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating instance with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(@Nullable Output<Map<String,Object>> kmsEncryptionContext) {
            $.kmsEncryptionContext = kmsEncryptionContext;
            return this;
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating instance with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(Map<String,Object> kmsEncryptionContext) {
            return kmsEncryptionContext(Output.of(kmsEncryptionContext));
        }

        /**
         * @param masterNodeSpec The dedicated master node spec. If specified, dedicated master node will be created.
         * 
         * @return builder
         * 
         */
        public Builder masterNodeSpec(@Nullable Output<String> masterNodeSpec) {
            $.masterNodeSpec = masterNodeSpec;
            return this;
        }

        /**
         * @param masterNodeSpec The dedicated master node spec. If specified, dedicated master node will be created.
         * 
         * @return builder
         * 
         */
        public Builder masterNodeSpec(String masterNodeSpec) {
            return masterNodeSpec(Output.of(masterNodeSpec));
        }

        /**
         * @param password The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&amp;*()_+-=`).
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the instance. The password can be 8 to 30 characters in length and must contain three of the following conditions: uppercase letters, lowercase letters, numbers, and special characters (`!@#$%^&amp;*()_+-=`).
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param period The duration that you will buy Elasticsearch instance (in month). It is valid when instance_charge_type is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The duration that you will buy Elasticsearch instance (in month). It is valid when instance_charge_type is `PrePaid`. Valid values: [1~9], 12, 24, 36. Default to 1. From version 1.69.2, when to modify this value, the resource can renewal a `PrePaid` instance.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param port Instance connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Instance connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param privateWhitelists Set the instance&#39;s IP whitelist in VPC network.
         * 
         * @return builder
         * 
         */
        public Builder privateWhitelists(@Nullable Output<List<String>> privateWhitelists) {
            $.privateWhitelists = privateWhitelists;
            return this;
        }

        /**
         * @param privateWhitelists Set the instance&#39;s IP whitelist in VPC network.
         * 
         * @return builder
         * 
         */
        public Builder privateWhitelists(List<String> privateWhitelists) {
            return privateWhitelists(Output.of(privateWhitelists));
        }

        /**
         * @param privateWhitelists Set the instance&#39;s IP whitelist in VPC network.
         * 
         * @return builder
         * 
         */
        public Builder privateWhitelists(String... privateWhitelists) {
            return privateWhitelists(List.of(privateWhitelists));
        }

        /**
         * @param protocol Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Elasticsearch protocol. Supported values: `HTTP`, `HTTPS`.default is `HTTP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param publicDomain (Available in 1.197.0+) Instance connection public domain.
         * 
         * @return builder
         * 
         */
        public Builder publicDomain(@Nullable Output<String> publicDomain) {
            $.publicDomain = publicDomain;
            return this;
        }

        /**
         * @param publicDomain (Available in 1.197.0+) Instance connection public domain.
         * 
         * @return builder
         * 
         */
        public Builder publicDomain(String publicDomain) {
            return publicDomain(Output.of(publicDomain));
        }

        /**
         * @param publicPort (Available in 1.197.0+) Instance connection public port.
         * 
         * @return builder
         * 
         */
        public Builder publicPort(@Nullable Output<Integer> publicPort) {
            $.publicPort = publicPort;
            return this;
        }

        /**
         * @param publicPort (Available in 1.197.0+) Instance connection public port.
         * 
         * @return builder
         * 
         */
        public Builder publicPort(Integer publicPort) {
            return publicPort(Output.of(publicPort));
        }

        /**
         * @param publicWhitelists Set the instance&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder publicWhitelists(@Nullable Output<List<String>> publicWhitelists) {
            $.publicWhitelists = publicWhitelists;
            return this;
        }

        /**
         * @param publicWhitelists Set the instance&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder publicWhitelists(List<String> publicWhitelists) {
            return publicWhitelists(Output.of(publicWhitelists));
        }

        /**
         * @param publicWhitelists Set the instance&#39;s IP whitelist in internet network.
         * 
         * @return builder
         * 
         */
        public Builder publicWhitelists(String... publicWhitelists) {
            return publicWhitelists(List.of(publicWhitelists));
        }

        /**
         * @param resourceGroupId The Id of resource group which the Elasticsearch instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The Id of resource group which the Elasticsearch instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param settingConfig The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
         * 
         * @return builder
         * 
         */
        public Builder settingConfig(@Nullable Output<Map<String,Object>> settingConfig) {
            $.settingConfig = settingConfig;
            return this;
        }

        /**
         * @param settingConfig The YML configuration of the instance.[Detailed introduction](https://www.alibabacloud.com/help/doc-detail/61336.html).
         * 
         * @return builder
         * 
         */
        public Builder settingConfig(Map<String,Object> settingConfig) {
            return settingConfig(Output.of(settingConfig));
        }

        /**
         * @param status The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Elasticsearch instance status. Includes `active`, `activating`, `inactive`. Some operations are denied when status is not `active`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - key: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It cannot be a null string.
         * - value: It can be up to 128 characters in length. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - key: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It cannot be a null string.
         * - value: It can be up to 128 characters in length. It cannot contain &#34;http://&#34; and &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param version Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` and `7.7_with_X-Pack`.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Elasticsearch version. Supported values: `5.5.3_with_X-Pack`, `6.3_with_X-Pack`, `6.7_with_X-Pack`, `6.8_with_X-Pack`, `7.4_with_X-Pack` and `7.7_with_X-Pack`.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param vswitchId The ID of VSwitch.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of VSwitch.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneCount The Multi-AZ supported for Elasticsearch, between 1 and 3. The `data_node_amount` value must be an integral multiple of the `zone_count` value.
         * 
         * @return builder
         * 
         */
        public Builder zoneCount(@Nullable Output<Integer> zoneCount) {
            $.zoneCount = zoneCount;
            return this;
        }

        /**
         * @param zoneCount The Multi-AZ supported for Elasticsearch, between 1 and 3. The `data_node_amount` value must be an integral multiple of the `zone_count` value.
         * 
         * @return builder
         * 
         */
        public Builder zoneCount(Integer zoneCount) {
            return zoneCount(Output.of(zoneCount));
        }

        public InstanceState build() {
            return $;
        }
    }

}
