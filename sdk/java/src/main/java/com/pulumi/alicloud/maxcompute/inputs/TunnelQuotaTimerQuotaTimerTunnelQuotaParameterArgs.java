// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs Empty = new TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs();

    /**
     * The number of elastic reserved concurrency (Slot).
     * 
     */
    @Import(name="elasticReservedSlotNum", required=true)
    private Output<Integer> elasticReservedSlotNum;

    /**
     * @return The number of elastic reserved concurrency (Slot).
     * 
     */
    public Output<Integer> elasticReservedSlotNum() {
        return this.elasticReservedSlotNum;
    }

    /**
     * The number of reserved concurrency (Slot).
     * 
     * &gt; **NOTE:** The reserved concurrency (Slot) cannot be modified. The number of concurrency slots must be the same as that of the purchased tunnel quota.
     * 
     */
    @Import(name="slotNum", required=true)
    private Output<Integer> slotNum;

    /**
     * @return The number of reserved concurrency (Slot).
     * 
     * &gt; **NOTE:** The reserved concurrency (Slot) cannot be modified. The number of concurrency slots must be the same as that of the purchased tunnel quota.
     * 
     */
    public Output<Integer> slotNum() {
        return this.slotNum;
    }

    private TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs() {}

    private TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs(TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs $) {
        this.elasticReservedSlotNum = $.elasticReservedSlotNum;
        this.slotNum = $.slotNum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs $;

        public Builder() {
            $ = new TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs();
        }

        public Builder(TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs defaults) {
            $ = new TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticReservedSlotNum The number of elastic reserved concurrency (Slot).
         * 
         * @return builder
         * 
         */
        public Builder elasticReservedSlotNum(Output<Integer> elasticReservedSlotNum) {
            $.elasticReservedSlotNum = elasticReservedSlotNum;
            return this;
        }

        /**
         * @param elasticReservedSlotNum The number of elastic reserved concurrency (Slot).
         * 
         * @return builder
         * 
         */
        public Builder elasticReservedSlotNum(Integer elasticReservedSlotNum) {
            return elasticReservedSlotNum(Output.of(elasticReservedSlotNum));
        }

        /**
         * @param slotNum The number of reserved concurrency (Slot).
         * 
         * &gt; **NOTE:** The reserved concurrency (Slot) cannot be modified. The number of concurrency slots must be the same as that of the purchased tunnel quota.
         * 
         * @return builder
         * 
         */
        public Builder slotNum(Output<Integer> slotNum) {
            $.slotNum = slotNum;
            return this;
        }

        /**
         * @param slotNum The number of reserved concurrency (Slot).
         * 
         * &gt; **NOTE:** The reserved concurrency (Slot) cannot be modified. The number of concurrency slots must be the same as that of the purchased tunnel quota.
         * 
         * @return builder
         * 
         */
        public Builder slotNum(Integer slotNum) {
            return slotNum(Output.of(slotNum));
        }

        public TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs build() {
            if ($.elasticReservedSlotNum == null) {
                throw new MissingRequiredPropertyException("TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs", "elasticReservedSlotNum");
            }
            if ($.slotNum == null) {
                throw new MissingRequiredPropertyException("TunnelQuotaTimerQuotaTimerTunnelQuotaParameterArgs", "slotNum");
            }
            return $;
        }
    }

}
