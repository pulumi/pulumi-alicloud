// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb.outputs;

import com.pulumi.alicloud.nlb.outputs.GetLoadBalancersBalancerOperationLock;
import com.pulumi.alicloud.nlb.outputs.GetLoadBalancersBalancerZoneMapping;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetLoadBalancersBalancer {
    /**
     * @return The IP version.
     * 
     */
    private String addressIpVersion;
    /**
     * @return The type of IPv4 address used by the NLB instance.
     * 
     */
    private String addressType;
    /**
     * @return The ID of the EIP bandwidth plan that is associated with the NLB instance if the NLB instance uses a public IP address.
     * 
     */
    private String bandwidthPackageId;
    /**
     * @return The time when the resource was created. The time is displayed in UTC in `yyyy-MM-ddTHH:mm:ssZ` format.
     * 
     */
    private String createTime;
    /**
     * @return Indicates whether cross-zone load balancing is enabled for the NLB instance.
     * 
     */
    private Boolean crossZoneEnabled;
    /**
     * @return The domain name of the NLB instance.
     * 
     */
    private String dnsName;
    /**
     * @return The ID of the NLB instance.
     * 
     */
    private String id;
    /**
     * @return The type of IPv6 address used by the NLB instance.
     * 
     */
    private String ipv6AddressType;
    /**
     * @return The business status of the NLB instance.
     * 
     */
    private String loadBalancerBusinessStatus;
    /**
     * @return The ID of the NLB instance.
     * 
     */
    private String loadBalancerId;
    /**
     * @return The name of the NLB instance.
     * 
     */
    private String loadBalancerName;
    /**
     * @return The type of the SLB instance. Only Network is supported, which indicates NLB.
     * 
     */
    private String loadBalancerType;
    /**
     * @return The configuration of the operation lock. This parameter takes effect if LoadBalancerBussinessStatus is Abnormal.
     * 
     */
    private List<GetLoadBalancersBalancerOperationLock> operationLocks;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The security group to which the NLB instance belongs.
     * 
     */
    private List<String> securityGroupIds;
    /**
     * @return The status of the NLB instance.
     * 
     */
    private String status;
    /**
     * @return The tag of the resource.
     * 
     */
    private @Nullable Map<String,Object> tags;
    /**
     * @return The ID of the VPC where the NLB instance is deployed.
     * 
     */
    private String vpcId;
    /**
     * @return The zones and the vSwitches in the zones. An NLB instance can be deployed across 2 to 10 zones.
     * 
     */
    private List<GetLoadBalancersBalancerZoneMapping> zoneMappings;

    private GetLoadBalancersBalancer() {}
    /**
     * @return The IP version.
     * 
     */
    public String addressIpVersion() {
        return this.addressIpVersion;
    }
    /**
     * @return The type of IPv4 address used by the NLB instance.
     * 
     */
    public String addressType() {
        return this.addressType;
    }
    /**
     * @return The ID of the EIP bandwidth plan that is associated with the NLB instance if the NLB instance uses a public IP address.
     * 
     */
    public String bandwidthPackageId() {
        return this.bandwidthPackageId;
    }
    /**
     * @return The time when the resource was created. The time is displayed in UTC in `yyyy-MM-ddTHH:mm:ssZ` format.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Indicates whether cross-zone load balancing is enabled for the NLB instance.
     * 
     */
    public Boolean crossZoneEnabled() {
        return this.crossZoneEnabled;
    }
    /**
     * @return The domain name of the NLB instance.
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }
    /**
     * @return The ID of the NLB instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of IPv6 address used by the NLB instance.
     * 
     */
    public String ipv6AddressType() {
        return this.ipv6AddressType;
    }
    /**
     * @return The business status of the NLB instance.
     * 
     */
    public String loadBalancerBusinessStatus() {
        return this.loadBalancerBusinessStatus;
    }
    /**
     * @return The ID of the NLB instance.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return The name of the NLB instance.
     * 
     */
    public String loadBalancerName() {
        return this.loadBalancerName;
    }
    /**
     * @return The type of the SLB instance. Only Network is supported, which indicates NLB.
     * 
     */
    public String loadBalancerType() {
        return this.loadBalancerType;
    }
    /**
     * @return The configuration of the operation lock. This parameter takes effect if LoadBalancerBussinessStatus is Abnormal.
     * 
     */
    public List<GetLoadBalancersBalancerOperationLock> operationLocks() {
        return this.operationLocks;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The security group to which the NLB instance belongs.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * @return The status of the NLB instance.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The tag of the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The ID of the VPC where the NLB instance is deployed.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The zones and the vSwitches in the zones. An NLB instance can be deployed across 2 to 10 zones.
     * 
     */
    public List<GetLoadBalancersBalancerZoneMapping> zoneMappings() {
        return this.zoneMappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancersBalancer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressIpVersion;
        private String addressType;
        private String bandwidthPackageId;
        private String createTime;
        private Boolean crossZoneEnabled;
        private String dnsName;
        private String id;
        private String ipv6AddressType;
        private String loadBalancerBusinessStatus;
        private String loadBalancerId;
        private String loadBalancerName;
        private String loadBalancerType;
        private List<GetLoadBalancersBalancerOperationLock> operationLocks;
        private String resourceGroupId;
        private List<String> securityGroupIds;
        private String status;
        private @Nullable Map<String,Object> tags;
        private String vpcId;
        private List<GetLoadBalancersBalancerZoneMapping> zoneMappings;
        public Builder() {}
        public Builder(GetLoadBalancersBalancer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressIpVersion = defaults.addressIpVersion;
    	      this.addressType = defaults.addressType;
    	      this.bandwidthPackageId = defaults.bandwidthPackageId;
    	      this.createTime = defaults.createTime;
    	      this.crossZoneEnabled = defaults.crossZoneEnabled;
    	      this.dnsName = defaults.dnsName;
    	      this.id = defaults.id;
    	      this.ipv6AddressType = defaults.ipv6AddressType;
    	      this.loadBalancerBusinessStatus = defaults.loadBalancerBusinessStatus;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerName = defaults.loadBalancerName;
    	      this.loadBalancerType = defaults.loadBalancerType;
    	      this.operationLocks = defaults.operationLocks;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.zoneMappings = defaults.zoneMappings;
        }

        @CustomType.Setter
        public Builder addressIpVersion(String addressIpVersion) {
            this.addressIpVersion = Objects.requireNonNull(addressIpVersion);
            return this;
        }
        @CustomType.Setter
        public Builder addressType(String addressType) {
            this.addressType = Objects.requireNonNull(addressType);
            return this;
        }
        @CustomType.Setter
        public Builder bandwidthPackageId(String bandwidthPackageId) {
            this.bandwidthPackageId = Objects.requireNonNull(bandwidthPackageId);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder crossZoneEnabled(Boolean crossZoneEnabled) {
            this.crossZoneEnabled = Objects.requireNonNull(crossZoneEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            this.dnsName = Objects.requireNonNull(dnsName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AddressType(String ipv6AddressType) {
            this.ipv6AddressType = Objects.requireNonNull(ipv6AddressType);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerBusinessStatus(String loadBalancerBusinessStatus) {
            this.loadBalancerBusinessStatus = Objects.requireNonNull(loadBalancerBusinessStatus);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            this.loadBalancerId = Objects.requireNonNull(loadBalancerId);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerName(String loadBalancerName) {
            this.loadBalancerName = Objects.requireNonNull(loadBalancerName);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerType(String loadBalancerType) {
            this.loadBalancerType = Objects.requireNonNull(loadBalancerType);
            return this;
        }
        @CustomType.Setter
        public Builder operationLocks(List<GetLoadBalancersBalancerOperationLock> operationLocks) {
            this.operationLocks = Objects.requireNonNull(operationLocks);
            return this;
        }
        public Builder operationLocks(GetLoadBalancersBalancerOperationLock... operationLocks) {
            return operationLocks(List.of(operationLocks));
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        @CustomType.Setter
        public Builder zoneMappings(List<GetLoadBalancersBalancerZoneMapping> zoneMappings) {
            this.zoneMappings = Objects.requireNonNull(zoneMappings);
            return this;
        }
        public Builder zoneMappings(GetLoadBalancersBalancerZoneMapping... zoneMappings) {
            return zoneMappings(List.of(zoneMappings));
        }
        public GetLoadBalancersBalancer build() {
            final var _resultValue = new GetLoadBalancersBalancer();
            _resultValue.addressIpVersion = addressIpVersion;
            _resultValue.addressType = addressType;
            _resultValue.bandwidthPackageId = bandwidthPackageId;
            _resultValue.createTime = createTime;
            _resultValue.crossZoneEnabled = crossZoneEnabled;
            _resultValue.dnsName = dnsName;
            _resultValue.id = id;
            _resultValue.ipv6AddressType = ipv6AddressType;
            _resultValue.loadBalancerBusinessStatus = loadBalancerBusinessStatus;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerName = loadBalancerName;
            _resultValue.loadBalancerType = loadBalancerType;
            _resultValue.operationLocks = operationLocks;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.securityGroupIds = securityGroupIds;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.vpcId = vpcId;
            _resultValue.zoneMappings = zoneMappings;
            return _resultValue;
        }
    }
}
