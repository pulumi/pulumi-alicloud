// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCrossRegionBackupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCrossRegionBackupsArgs Empty = new GetCrossRegionBackupsArgs();

    /**
     * The ID of the cross-region data backup file.
     * 
     */
    @Import(name="backupId")
    private @Nullable Output<String> backupId;

    /**
     * @return The ID of the cross-region data backup file.
     * 
     */
    public Optional<Output<String>> backupId() {
        return Optional.ofNullable(this.backupId);
    }

    /**
     * The ID of the cross-region data backup file.
     * 
     */
    @Import(name="crossBackupId")
    private @Nullable Output<String> crossBackupId;

    /**
     * @return The ID of the cross-region data backup file.
     * 
     */
    public Optional<Output<String>> crossBackupId() {
        return Optional.ofNullable(this.crossBackupId);
    }

    /**
     * The ID of the destination region where the cross-region data backup file of the instance is stored.
     * 
     */
    @Import(name="crossBackupRegion")
    private @Nullable Output<String> crossBackupRegion;

    /**
     * @return The ID of the destination region where the cross-region data backup file of the instance is stored.
     * 
     */
    public Optional<Output<String>> crossBackupRegion() {
        return Optional.ofNullable(this.crossBackupRegion);
    }

    /**
     * The db instance id.
     * 
     */
    @Import(name="dbInstanceId", required=true)
    private Output<String> dbInstanceId;

    /**
     * @return The db instance id.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }

    /**
     * The end of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return The end of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * A list of Cross Region Backup IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Cross Region Backup IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The beginning of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return The beginning of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private GetCrossRegionBackupsArgs() {}

    private GetCrossRegionBackupsArgs(GetCrossRegionBackupsArgs $) {
        this.backupId = $.backupId;
        this.crossBackupId = $.crossBackupId;
        this.crossBackupRegion = $.crossBackupRegion;
        this.dbInstanceId = $.dbInstanceId;
        this.endTime = $.endTime;
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.resourceGroupId = $.resourceGroupId;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCrossRegionBackupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCrossRegionBackupsArgs $;

        public Builder() {
            $ = new GetCrossRegionBackupsArgs();
        }

        public Builder(GetCrossRegionBackupsArgs defaults) {
            $ = new GetCrossRegionBackupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId The ID of the cross-region data backup file.
         * 
         * @return builder
         * 
         */
        public Builder backupId(@Nullable Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId The ID of the cross-region data backup file.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param crossBackupId The ID of the cross-region data backup file.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupId(@Nullable Output<String> crossBackupId) {
            $.crossBackupId = crossBackupId;
            return this;
        }

        /**
         * @param crossBackupId The ID of the cross-region data backup file.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupId(String crossBackupId) {
            return crossBackupId(Output.of(crossBackupId));
        }

        /**
         * @param crossBackupRegion The ID of the destination region where the cross-region data backup file of the instance is stored.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupRegion(@Nullable Output<String> crossBackupRegion) {
            $.crossBackupRegion = crossBackupRegion;
            return this;
        }

        /**
         * @param crossBackupRegion The ID of the destination region where the cross-region data backup file of the instance is stored.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupRegion(String crossBackupRegion) {
            return crossBackupRegion(Output.of(crossBackupRegion));
        }

        /**
         * @param dbInstanceId The db instance id.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The db instance id.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param endTime The end of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime The end of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param ids A list of Cross Region Backup IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Cross Region Backup IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Cross Region Backup IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param startTime The beginning of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The beginning of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public GetCrossRegionBackupsArgs build() {
            if ($.dbInstanceId == null) {
                throw new MissingRequiredPropertyException("GetCrossRegionBackupsArgs", "dbInstanceId");
            }
            return $;
        }
    }

}
