// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionTunnelOptionsSpecificationTunnelBgpConfig {
    /**
     * @return Whether BGP function is turned on.
     * 
     */
    private @Nullable String bgpStatus;
    /**
     * @return Local asn.
     * 
     */
    private @Nullable String localAsn;
    /**
     * @return Local bgp IP.
     * 
     */
    private @Nullable String localBgpIp;
    /**
     * @return Peer asn.
     * 
     */
    private @Nullable String peerAsn;
    /**
     * @return Peer bgp ip.
     * 
     */
    private @Nullable String peerBgpIp;
    /**
     * @return IPSec tunnel Cidr.
     * 
     */
    private @Nullable String tunnelCidr;

    private ConnectionTunnelOptionsSpecificationTunnelBgpConfig() {}
    /**
     * @return Whether BGP function is turned on.
     * 
     */
    public Optional<String> bgpStatus() {
        return Optional.ofNullable(this.bgpStatus);
    }
    /**
     * @return Local asn.
     * 
     */
    public Optional<String> localAsn() {
        return Optional.ofNullable(this.localAsn);
    }
    /**
     * @return Local bgp IP.
     * 
     */
    public Optional<String> localBgpIp() {
        return Optional.ofNullable(this.localBgpIp);
    }
    /**
     * @return Peer asn.
     * 
     */
    public Optional<String> peerAsn() {
        return Optional.ofNullable(this.peerAsn);
    }
    /**
     * @return Peer bgp ip.
     * 
     */
    public Optional<String> peerBgpIp() {
        return Optional.ofNullable(this.peerBgpIp);
    }
    /**
     * @return IPSec tunnel Cidr.
     * 
     */
    public Optional<String> tunnelCidr() {
        return Optional.ofNullable(this.tunnelCidr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionTunnelOptionsSpecificationTunnelBgpConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bgpStatus;
        private @Nullable String localAsn;
        private @Nullable String localBgpIp;
        private @Nullable String peerAsn;
        private @Nullable String peerBgpIp;
        private @Nullable String tunnelCidr;
        public Builder() {}
        public Builder(ConnectionTunnelOptionsSpecificationTunnelBgpConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpStatus = defaults.bgpStatus;
    	      this.localAsn = defaults.localAsn;
    	      this.localBgpIp = defaults.localBgpIp;
    	      this.peerAsn = defaults.peerAsn;
    	      this.peerBgpIp = defaults.peerBgpIp;
    	      this.tunnelCidr = defaults.tunnelCidr;
        }

        @CustomType.Setter
        public Builder bgpStatus(@Nullable String bgpStatus) {

            this.bgpStatus = bgpStatus;
            return this;
        }
        @CustomType.Setter
        public Builder localAsn(@Nullable String localAsn) {

            this.localAsn = localAsn;
            return this;
        }
        @CustomType.Setter
        public Builder localBgpIp(@Nullable String localBgpIp) {

            this.localBgpIp = localBgpIp;
            return this;
        }
        @CustomType.Setter
        public Builder peerAsn(@Nullable String peerAsn) {

            this.peerAsn = peerAsn;
            return this;
        }
        @CustomType.Setter
        public Builder peerBgpIp(@Nullable String peerBgpIp) {

            this.peerBgpIp = peerBgpIp;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelCidr(@Nullable String tunnelCidr) {

            this.tunnelCidr = tunnelCidr;
            return this;
        }
        public ConnectionTunnelOptionsSpecificationTunnelBgpConfig build() {
            final var _resultValue = new ConnectionTunnelOptionsSpecificationTunnelBgpConfig();
            _resultValue.bgpStatus = bgpStatus;
            _resultValue.localAsn = localAsn;
            _resultValue.localBgpIp = localBgpIp;
            _resultValue.peerAsn = peerAsn;
            _resultValue.peerBgpIp = peerBgpIp;
            _resultValue.tunnelCidr = tunnelCidr;
            return _resultValue;
        }
    }
}
