// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class CollectionPolicyPolicyConfig {
    /**
     * @return A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
     * 
     */
    private @Nullable List<String> instanceIds;
    /**
     * @return The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
     * 
     */
    private @Nullable List<String> regions;
    /**
     * @return Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
     * 
     */
    private String resourceMode;
    /**
     * @return Resource label, valid if and only if resourceMode is attributeMode.
     * 
     * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
     * 
     * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
     * 
     */
    private @Nullable Map<String,String> resourceTags;

    private CollectionPolicyPolicyConfig() {}
    /**
     * @return A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
     * 
     */
    public List<String> instanceIds() {
        return this.instanceIds == null ? List.of() : this.instanceIds;
    }
    /**
     * @return The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
     * 
     */
    public List<String> regions() {
        return this.regions == null ? List.of() : this.regions;
    }
    /**
     * @return Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
     * 
     */
    public String resourceMode() {
        return this.resourceMode;
    }
    /**
     * @return Resource label, valid if and only if resourceMode is attributeMode.
     * 
     * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
     * 
     * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
     * 
     */
    public Map<String,String> resourceTags() {
        return this.resourceTags == null ? Map.of() : this.resourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CollectionPolicyPolicyConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> instanceIds;
        private @Nullable List<String> regions;
        private String resourceMode;
        private @Nullable Map<String,String> resourceTags;
        public Builder() {}
        public Builder(CollectionPolicyPolicyConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceIds = defaults.instanceIds;
    	      this.regions = defaults.regions;
    	      this.resourceMode = defaults.resourceMode;
    	      this.resourceTags = defaults.resourceTags;
        }

        @CustomType.Setter
        public Builder instanceIds(@Nullable List<String> instanceIds) {

            this.instanceIds = instanceIds;
            return this;
        }
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }
        @CustomType.Setter
        public Builder regions(@Nullable List<String> regions) {

            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder resourceMode(String resourceMode) {
            if (resourceMode == null) {
              throw new MissingRequiredPropertyException("CollectionPolicyPolicyConfig", "resourceMode");
            }
            this.resourceMode = resourceMode;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTags(@Nullable Map<String,String> resourceTags) {

            this.resourceTags = resourceTags;
            return this;
        }
        public CollectionPolicyPolicyConfig build() {
            final var _resultValue = new CollectionPolicyPolicyConfig();
            _resultValue.instanceIds = instanceIds;
            _resultValue.regions = regions;
            _resultValue.resourceMode = resourceMode;
            _resultValue.resourceTags = resourceTags;
            return _resultValue;
        }
    }
}
