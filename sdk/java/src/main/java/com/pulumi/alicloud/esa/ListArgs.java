// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListArgs Empty = new ListArgs();

    /**
     * The new description of the list.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The new description of the list.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The items in the updated list. The value is a JSON array.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<String>> items;

    /**
     * @return The items in the updated list. The value is a JSON array.
     * 
     */
    public Optional<Output<List<String>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * The type of the list that you want to create.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The type of the list that you want to create.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The new name of the list.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The new name of the list.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ListArgs() {}

    private ListArgs(ListArgs $) {
        this.description = $.description;
        this.items = $.items;
        this.kind = $.kind;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListArgs $;

        public Builder() {
            $ = new ListArgs();
        }

        public Builder(ListArgs defaults) {
            $ = new ListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The new description of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The new description of the list.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param items The items in the updated list. The value is a JSON array.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<String>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items The items in the updated list. The value is a JSON array.
         * 
         * @return builder
         * 
         */
        public Builder items(List<String> items) {
            return items(Output.of(items));
        }

        /**
         * @param items The items in the updated list. The value is a JSON array.
         * 
         * @return builder
         * 
         */
        public Builder items(String... items) {
            return items(List.of(items));
        }

        /**
         * @param kind The type of the list that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The type of the list that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name The new name of the list.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The new name of the list.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ListArgs build() {
            return $;
        }
    }

}
