// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicemesh.inputs;

import com.pulumi.alicloud.servicemesh.inputs.ServiceMeshMeshConfigKialiOpenIdConfigArgs;
import com.pulumi.alicloud.servicemesh.inputs.ServiceMeshMeshConfigKialiRamOauthConfigArgs;
import com.pulumi.alicloud.servicemesh.inputs.ServiceMeshMeshConfigKialiServerConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMeshMeshConfigKialiArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMeshMeshConfigKialiArgs Empty = new ServiceMeshMeshConfigKialiArgs();

    /**
     * When the mesh topology is deployed in managed mode and integrated with CLB to provide external access, the external access address is automatically generated.
     * 
     */
    @Import(name="aggregatedKialiAddress")
    private @Nullable Output<String> aggregatedKialiAddress;

    /**
     * @return When the mesh topology is deployed in managed mode and integrated with CLB to provide external access, the external access address is automatically generated.
     * 
     */
    public Optional<Output<String>> aggregatedKialiAddress() {
        return Optional.ofNullable(this.aggregatedKialiAddress);
    }

    /**
     * The authentication strategy used when logging into the mesh topology. In data plane deployment mode, the mesh topology can use token, openid, or ramoauth authentication strategies; in managed mode, the mesh topology can use openid or ramoauth authentication strategies.
     * 
     */
    @Import(name="authStrategy")
    private @Nullable Output<String> authStrategy;

    /**
     * @return The authentication strategy used when logging into the mesh topology. In data plane deployment mode, the mesh topology can use token, openid, or ramoauth authentication strategies; in managed mode, the mesh topology can use openid or ramoauth authentication strategies.
     * 
     */
    public Optional<Output<String>> authStrategy() {
        return Optional.ofNullable(this.authStrategy);
    }

    /**
     * When the mesh topology cannot automatically use the integrated ARMS Prometheus, you need to use this property to specify a custom Prometheus HTTP API Url. The corresponding Prometheus instance needs to have been configured to collect Istio metrics in the cluster within the service mesh.
     * 
     */
    @Import(name="customPrometheusUrl")
    private @Nullable Output<String> customPrometheusUrl;

    /**
     * @return When the mesh topology cannot automatically use the integrated ARMS Prometheus, you need to use this property to specify a custom Prometheus HTTP API Url. The corresponding Prometheus instance needs to have been configured to collect Istio metrics in the cluster within the service mesh.
     * 
     */
    public Optional<Output<String>> customPrometheusUrl() {
        return Optional.ofNullable(this.customPrometheusUrl);
    }

    /**
     * The login token provided when the mesh topology is deployed in data plane deployment mode. When the mesh topology authentication strategy is token, this token can be used to log in to the mesh topology service. The key of the property is the Kubernetes cluster id, and the value of the property is the login token of the mesh topology service in the cluster.
     * 
     */
    @Import(name="distributedKialiAccessTokens")
    private @Nullable Output<String> distributedKialiAccessTokens;

    /**
     * @return The login token provided when the mesh topology is deployed in data plane deployment mode. When the mesh topology authentication strategy is token, this token can be used to log in to the mesh topology service. The key of the property is the Kubernetes cluster id, and the value of the property is the login token of the mesh topology service in the cluster.
     * 
     */
    public Optional<Output<String>> distributedKialiAccessTokens() {
        return Optional.ofNullable(this.distributedKialiAccessTokens);
    }

    /**
     * When the mesh topology is deployed in data plane deployment mode and integrated with CLB to provide external access, the external access address is automatically generated. The key of the attribute is the Kubernetes cluster id, and the value is the external access address of the mesh topology service in the cluster.
     * 
     */
    @Import(name="distributedKialiAddresses")
    private @Nullable Output<String> distributedKialiAddresses;

    /**
     * @return When the mesh topology is deployed in data plane deployment mode and integrated with CLB to provide external access, the external access address is automatically generated. The key of the attribute is the Kubernetes cluster id, and the value is the external access address of the mesh topology service in the cluster.
     * 
     */
    public Optional<Output<String>> distributedKialiAddresses() {
        return Optional.ofNullable(this.distributedKialiAddresses);
    }

    /**
     * Enable CNI
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable CNI
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Whether to integrate CLB for mesh topology services to provide external access.
     * 
     */
    @Import(name="integrateClb")
    private @Nullable Output<Boolean> integrateClb;

    /**
     * @return Whether to integrate CLB for mesh topology services to provide external access.
     * 
     */
    public Optional<Output<Boolean>> integrateClb() {
        return Optional.ofNullable(this.integrateClb);
    }

    /**
     * When the mesh topology automatically uses the integrated ARMS Prometheus, if the ARMS Prometheus instance in the cluster has token authentication enabled, you need to use this property to provide the corresponding authentication token for the mesh topology. The key of the property is the Kubernetes cluster id, and the value is the authentication token of the ARMS Prometheus instance corresponding to the cluster. (Service mesh instance version 1.15.3.113 or above is required)
     * 
     */
    @Import(name="kialiArmsAuthTokens")
    private @Nullable Output<String> kialiArmsAuthTokens;

    /**
     * @return When the mesh topology automatically uses the integrated ARMS Prometheus, if the ARMS Prometheus instance in the cluster has token authentication enabled, you need to use this property to provide the corresponding authentication token for the mesh topology. The key of the property is the Kubernetes cluster id, and the value is the authentication token of the ARMS Prometheus instance corresponding to the cluster. (Service mesh instance version 1.15.3.113 or above is required)
     * 
     */
    public Optional<Output<String>> kialiArmsAuthTokens() {
        return Optional.ofNullable(this.kialiArmsAuthTokens);
    }

    /**
     * Annotations for the Service corresponding to the mesh topology service. When the mesh topology service integrates CLB, annotations can be used to control the CLB specifications. The attribute type is map, the key is the Kubernetes cluster id, and the value is the mesh topology service annotation map under the corresponding Kubernetes cluster. When using the managed mode mesh topology, the key is the service mesh instance id. For annotation content, refer to [Configuring traditional load balancing CLB through Annotation](https://www.alibabacloud.com/help/en/ack/serverless-kubernetes/user-guide/use-annotations-to-configure-load-balancing).(Service mesh instance version 1.17.2.19 or above is required)
     * 
     */
    @Import(name="kialiServiceAnnotations")
    private @Nullable Output<String> kialiServiceAnnotations;

    /**
     * @return Annotations for the Service corresponding to the mesh topology service. When the mesh topology service integrates CLB, annotations can be used to control the CLB specifications. The attribute type is map, the key is the Kubernetes cluster id, and the value is the mesh topology service annotation map under the corresponding Kubernetes cluster. When using the managed mode mesh topology, the key is the service mesh instance id. For annotation content, refer to [Configuring traditional load balancing CLB through Annotation](https://www.alibabacloud.com/help/en/ack/serverless-kubernetes/user-guide/use-annotations-to-configure-load-balancing).(Service mesh instance version 1.17.2.19 or above is required)
     * 
     */
    public Optional<Output<String>> kialiServiceAnnotations() {
        return Optional.ofNullable(this.kialiServiceAnnotations);
    }

    /**
     * When the mesh topology&#39;s authentication policy is openid, the configuration used when the mesh topology and OIDC application are connected. If the authentication policy is openid, this configuration must be provided. See `openIdConfig` below.
     * 
     */
    @Import(name="openIdConfig")
    private @Nullable Output<ServiceMeshMeshConfigKialiOpenIdConfigArgs> openIdConfig;

    /**
     * @return When the mesh topology&#39;s authentication policy is openid, the configuration used when the mesh topology and OIDC application are connected. If the authentication policy is openid, this configuration must be provided. See `openIdConfig` below.
     * 
     */
    public Optional<Output<ServiceMeshMeshConfigKialiOpenIdConfigArgs>> openIdConfig() {
        return Optional.ofNullable(this.openIdConfig);
    }

    /**
     * When the authentication strategy of the mesh topology is ramoauth, the mesh topology will be connected to the RAM OAuth application to log in with the Alibaba Cloud account. In this case, this attribute must be provided to configure the connection with the RAM OAuth application. See `ramOauthConfig` below.
     * 
     */
    @Import(name="ramOauthConfig")
    private @Nullable Output<ServiceMeshMeshConfigKialiRamOauthConfigArgs> ramOauthConfig;

    /**
     * @return When the authentication strategy of the mesh topology is ramoauth, the mesh topology will be connected to the RAM OAuth application to log in with the Alibaba Cloud account. In this case, this attribute must be provided to configure the connection with the RAM OAuth application. See `ramOauthConfig` below.
     * 
     */
    public Optional<Output<ServiceMeshMeshConfigKialiRamOauthConfigArgs>> ramOauthConfig() {
        return Optional.ofNullable(this.ramOauthConfig);
    }

    /**
     * When you need to configure external access to the mesh topology through ASM gateway or other means, and access the mesh topology through a custom domain name or address, you need to specify this property. (The service mesh instance version must be 1.16.4.5 or above) See `serverConfig` below.
     * 
     */
    @Import(name="serverConfig")
    private @Nullable Output<ServiceMeshMeshConfigKialiServerConfigArgs> serverConfig;

    /**
     * @return When you need to configure external access to the mesh topology through ASM gateway or other means, and access the mesh topology through a custom domain name or address, you need to specify this property. (The service mesh instance version must be 1.16.4.5 or above) See `serverConfig` below.
     * 
     */
    public Optional<Output<ServiceMeshMeshConfigKialiServerConfigArgs>> serverConfig() {
        return Optional.ofNullable(this.serverConfig);
    }

    /**
     * Kiali service address
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return Kiali service address
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * Whether the mesh topology automatically uses the integrated ARMS Prometheus. When the integrated ARMS Prometheus is automatically used, there is no need to specify the dependent Prometheus HTTP API Url.
     * 
     */
    @Import(name="usePopulatedArmsPrometheus")
    private @Nullable Output<Boolean> usePopulatedArmsPrometheus;

    /**
     * @return Whether the mesh topology automatically uses the integrated ARMS Prometheus. When the integrated ARMS Prometheus is automatically used, there is no need to specify the dependent Prometheus HTTP API Url.
     * 
     */
    public Optional<Output<Boolean>> usePopulatedArmsPrometheus() {
        return Optional.ofNullable(this.usePopulatedArmsPrometheus);
    }

    private ServiceMeshMeshConfigKialiArgs() {}

    private ServiceMeshMeshConfigKialiArgs(ServiceMeshMeshConfigKialiArgs $) {
        this.aggregatedKialiAddress = $.aggregatedKialiAddress;
        this.authStrategy = $.authStrategy;
        this.customPrometheusUrl = $.customPrometheusUrl;
        this.distributedKialiAccessTokens = $.distributedKialiAccessTokens;
        this.distributedKialiAddresses = $.distributedKialiAddresses;
        this.enabled = $.enabled;
        this.integrateClb = $.integrateClb;
        this.kialiArmsAuthTokens = $.kialiArmsAuthTokens;
        this.kialiServiceAnnotations = $.kialiServiceAnnotations;
        this.openIdConfig = $.openIdConfig;
        this.ramOauthConfig = $.ramOauthConfig;
        this.serverConfig = $.serverConfig;
        this.url = $.url;
        this.usePopulatedArmsPrometheus = $.usePopulatedArmsPrometheus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMeshMeshConfigKialiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMeshMeshConfigKialiArgs $;

        public Builder() {
            $ = new ServiceMeshMeshConfigKialiArgs();
        }

        public Builder(ServiceMeshMeshConfigKialiArgs defaults) {
            $ = new ServiceMeshMeshConfigKialiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregatedKialiAddress When the mesh topology is deployed in managed mode and integrated with CLB to provide external access, the external access address is automatically generated.
         * 
         * @return builder
         * 
         */
        public Builder aggregatedKialiAddress(@Nullable Output<String> aggregatedKialiAddress) {
            $.aggregatedKialiAddress = aggregatedKialiAddress;
            return this;
        }

        /**
         * @param aggregatedKialiAddress When the mesh topology is deployed in managed mode and integrated with CLB to provide external access, the external access address is automatically generated.
         * 
         * @return builder
         * 
         */
        public Builder aggregatedKialiAddress(String aggregatedKialiAddress) {
            return aggregatedKialiAddress(Output.of(aggregatedKialiAddress));
        }

        /**
         * @param authStrategy The authentication strategy used when logging into the mesh topology. In data plane deployment mode, the mesh topology can use token, openid, or ramoauth authentication strategies; in managed mode, the mesh topology can use openid or ramoauth authentication strategies.
         * 
         * @return builder
         * 
         */
        public Builder authStrategy(@Nullable Output<String> authStrategy) {
            $.authStrategy = authStrategy;
            return this;
        }

        /**
         * @param authStrategy The authentication strategy used when logging into the mesh topology. In data plane deployment mode, the mesh topology can use token, openid, or ramoauth authentication strategies; in managed mode, the mesh topology can use openid or ramoauth authentication strategies.
         * 
         * @return builder
         * 
         */
        public Builder authStrategy(String authStrategy) {
            return authStrategy(Output.of(authStrategy));
        }

        /**
         * @param customPrometheusUrl When the mesh topology cannot automatically use the integrated ARMS Prometheus, you need to use this property to specify a custom Prometheus HTTP API Url. The corresponding Prometheus instance needs to have been configured to collect Istio metrics in the cluster within the service mesh.
         * 
         * @return builder
         * 
         */
        public Builder customPrometheusUrl(@Nullable Output<String> customPrometheusUrl) {
            $.customPrometheusUrl = customPrometheusUrl;
            return this;
        }

        /**
         * @param customPrometheusUrl When the mesh topology cannot automatically use the integrated ARMS Prometheus, you need to use this property to specify a custom Prometheus HTTP API Url. The corresponding Prometheus instance needs to have been configured to collect Istio metrics in the cluster within the service mesh.
         * 
         * @return builder
         * 
         */
        public Builder customPrometheusUrl(String customPrometheusUrl) {
            return customPrometheusUrl(Output.of(customPrometheusUrl));
        }

        /**
         * @param distributedKialiAccessTokens The login token provided when the mesh topology is deployed in data plane deployment mode. When the mesh topology authentication strategy is token, this token can be used to log in to the mesh topology service. The key of the property is the Kubernetes cluster id, and the value of the property is the login token of the mesh topology service in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder distributedKialiAccessTokens(@Nullable Output<String> distributedKialiAccessTokens) {
            $.distributedKialiAccessTokens = distributedKialiAccessTokens;
            return this;
        }

        /**
         * @param distributedKialiAccessTokens The login token provided when the mesh topology is deployed in data plane deployment mode. When the mesh topology authentication strategy is token, this token can be used to log in to the mesh topology service. The key of the property is the Kubernetes cluster id, and the value of the property is the login token of the mesh topology service in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder distributedKialiAccessTokens(String distributedKialiAccessTokens) {
            return distributedKialiAccessTokens(Output.of(distributedKialiAccessTokens));
        }

        /**
         * @param distributedKialiAddresses When the mesh topology is deployed in data plane deployment mode and integrated with CLB to provide external access, the external access address is automatically generated. The key of the attribute is the Kubernetes cluster id, and the value is the external access address of the mesh topology service in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder distributedKialiAddresses(@Nullable Output<String> distributedKialiAddresses) {
            $.distributedKialiAddresses = distributedKialiAddresses;
            return this;
        }

        /**
         * @param distributedKialiAddresses When the mesh topology is deployed in data plane deployment mode and integrated with CLB to provide external access, the external access address is automatically generated. The key of the attribute is the Kubernetes cluster id, and the value is the external access address of the mesh topology service in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder distributedKialiAddresses(String distributedKialiAddresses) {
            return distributedKialiAddresses(Output.of(distributedKialiAddresses));
        }

        /**
         * @param enabled Enable CNI
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable CNI
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param integrateClb Whether to integrate CLB for mesh topology services to provide external access.
         * 
         * @return builder
         * 
         */
        public Builder integrateClb(@Nullable Output<Boolean> integrateClb) {
            $.integrateClb = integrateClb;
            return this;
        }

        /**
         * @param integrateClb Whether to integrate CLB for mesh topology services to provide external access.
         * 
         * @return builder
         * 
         */
        public Builder integrateClb(Boolean integrateClb) {
            return integrateClb(Output.of(integrateClb));
        }

        /**
         * @param kialiArmsAuthTokens When the mesh topology automatically uses the integrated ARMS Prometheus, if the ARMS Prometheus instance in the cluster has token authentication enabled, you need to use this property to provide the corresponding authentication token for the mesh topology. The key of the property is the Kubernetes cluster id, and the value is the authentication token of the ARMS Prometheus instance corresponding to the cluster. (Service mesh instance version 1.15.3.113 or above is required)
         * 
         * @return builder
         * 
         */
        public Builder kialiArmsAuthTokens(@Nullable Output<String> kialiArmsAuthTokens) {
            $.kialiArmsAuthTokens = kialiArmsAuthTokens;
            return this;
        }

        /**
         * @param kialiArmsAuthTokens When the mesh topology automatically uses the integrated ARMS Prometheus, if the ARMS Prometheus instance in the cluster has token authentication enabled, you need to use this property to provide the corresponding authentication token for the mesh topology. The key of the property is the Kubernetes cluster id, and the value is the authentication token of the ARMS Prometheus instance corresponding to the cluster. (Service mesh instance version 1.15.3.113 or above is required)
         * 
         * @return builder
         * 
         */
        public Builder kialiArmsAuthTokens(String kialiArmsAuthTokens) {
            return kialiArmsAuthTokens(Output.of(kialiArmsAuthTokens));
        }

        /**
         * @param kialiServiceAnnotations Annotations for the Service corresponding to the mesh topology service. When the mesh topology service integrates CLB, annotations can be used to control the CLB specifications. The attribute type is map, the key is the Kubernetes cluster id, and the value is the mesh topology service annotation map under the corresponding Kubernetes cluster. When using the managed mode mesh topology, the key is the service mesh instance id. For annotation content, refer to [Configuring traditional load balancing CLB through Annotation](https://www.alibabacloud.com/help/en/ack/serverless-kubernetes/user-guide/use-annotations-to-configure-load-balancing).(Service mesh instance version 1.17.2.19 or above is required)
         * 
         * @return builder
         * 
         */
        public Builder kialiServiceAnnotations(@Nullable Output<String> kialiServiceAnnotations) {
            $.kialiServiceAnnotations = kialiServiceAnnotations;
            return this;
        }

        /**
         * @param kialiServiceAnnotations Annotations for the Service corresponding to the mesh topology service. When the mesh topology service integrates CLB, annotations can be used to control the CLB specifications. The attribute type is map, the key is the Kubernetes cluster id, and the value is the mesh topology service annotation map under the corresponding Kubernetes cluster. When using the managed mode mesh topology, the key is the service mesh instance id. For annotation content, refer to [Configuring traditional load balancing CLB through Annotation](https://www.alibabacloud.com/help/en/ack/serverless-kubernetes/user-guide/use-annotations-to-configure-load-balancing).(Service mesh instance version 1.17.2.19 or above is required)
         * 
         * @return builder
         * 
         */
        public Builder kialiServiceAnnotations(String kialiServiceAnnotations) {
            return kialiServiceAnnotations(Output.of(kialiServiceAnnotations));
        }

        /**
         * @param openIdConfig When the mesh topology&#39;s authentication policy is openid, the configuration used when the mesh topology and OIDC application are connected. If the authentication policy is openid, this configuration must be provided. See `openIdConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder openIdConfig(@Nullable Output<ServiceMeshMeshConfigKialiOpenIdConfigArgs> openIdConfig) {
            $.openIdConfig = openIdConfig;
            return this;
        }

        /**
         * @param openIdConfig When the mesh topology&#39;s authentication policy is openid, the configuration used when the mesh topology and OIDC application are connected. If the authentication policy is openid, this configuration must be provided. See `openIdConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder openIdConfig(ServiceMeshMeshConfigKialiOpenIdConfigArgs openIdConfig) {
            return openIdConfig(Output.of(openIdConfig));
        }

        /**
         * @param ramOauthConfig When the authentication strategy of the mesh topology is ramoauth, the mesh topology will be connected to the RAM OAuth application to log in with the Alibaba Cloud account. In this case, this attribute must be provided to configure the connection with the RAM OAuth application. See `ramOauthConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder ramOauthConfig(@Nullable Output<ServiceMeshMeshConfigKialiRamOauthConfigArgs> ramOauthConfig) {
            $.ramOauthConfig = ramOauthConfig;
            return this;
        }

        /**
         * @param ramOauthConfig When the authentication strategy of the mesh topology is ramoauth, the mesh topology will be connected to the RAM OAuth application to log in with the Alibaba Cloud account. In this case, this attribute must be provided to configure the connection with the RAM OAuth application. See `ramOauthConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder ramOauthConfig(ServiceMeshMeshConfigKialiRamOauthConfigArgs ramOauthConfig) {
            return ramOauthConfig(Output.of(ramOauthConfig));
        }

        /**
         * @param serverConfig When you need to configure external access to the mesh topology through ASM gateway or other means, and access the mesh topology through a custom domain name or address, you need to specify this property. (The service mesh instance version must be 1.16.4.5 or above) See `serverConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder serverConfig(@Nullable Output<ServiceMeshMeshConfigKialiServerConfigArgs> serverConfig) {
            $.serverConfig = serverConfig;
            return this;
        }

        /**
         * @param serverConfig When you need to configure external access to the mesh topology through ASM gateway or other means, and access the mesh topology through a custom domain name or address, you need to specify this property. (The service mesh instance version must be 1.16.4.5 or above) See `serverConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder serverConfig(ServiceMeshMeshConfigKialiServerConfigArgs serverConfig) {
            return serverConfig(Output.of(serverConfig));
        }

        /**
         * @param url Kiali service address
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Kiali service address
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param usePopulatedArmsPrometheus Whether the mesh topology automatically uses the integrated ARMS Prometheus. When the integrated ARMS Prometheus is automatically used, there is no need to specify the dependent Prometheus HTTP API Url.
         * 
         * @return builder
         * 
         */
        public Builder usePopulatedArmsPrometheus(@Nullable Output<Boolean> usePopulatedArmsPrometheus) {
            $.usePopulatedArmsPrometheus = usePopulatedArmsPrometheus;
            return this;
        }

        /**
         * @param usePopulatedArmsPrometheus Whether the mesh topology automatically uses the integrated ARMS Prometheus. When the integrated ARMS Prometheus is automatically used, there is no need to specify the dependent Prometheus HTTP API Url.
         * 
         * @return builder
         * 
         */
        public Builder usePopulatedArmsPrometheus(Boolean usePopulatedArmsPrometheus) {
            return usePopulatedArmsPrometheus(Output.of(usePopulatedArmsPrometheus));
        }

        public ServiceMeshMeshConfigKialiArgs build() {
            return $;
        }
    }

}
