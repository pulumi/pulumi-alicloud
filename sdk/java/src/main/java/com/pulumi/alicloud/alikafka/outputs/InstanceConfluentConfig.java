// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alikafka.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceConfluentConfig {
    /**
     * @return The number of CPU cores of Connect.
     * 
     */
    private @Nullable Integer connectCu;
    /**
     * @return The number of replicas of Connect.
     * 
     */
    private @Nullable Integer connectReplica;
    /**
     * @return The number of CPU cores of Control Center.
     * 
     */
    private @Nullable Integer controlCenterCu;
    /**
     * @return The number of replicas of Control Center.
     * 
     */
    private @Nullable Integer controlCenterReplica;
    /**
     * @return The disk capacity of Control Center.
     * 
     */
    private @Nullable Integer controlCenterStorage;
    /**
     * @return The number of CPU cores of the Kafka broker.
     * 
     */
    private @Nullable Integer kafkaCu;
    /**
     * @return The number of replicas of the Kafka broker.
     * 
     */
    private @Nullable Integer kafkaReplica;
    /**
     * @return The number of CPU cores of Kafka Rest Proxy.
     * 
     */
    private @Nullable Integer kafkaRestProxyCu;
    /**
     * @return The number of replicas of Kafka Rest Proxy.
     * 
     */
    private @Nullable Integer kafkaRestProxyReplica;
    /**
     * @return The disk capacity of the Kafka broker.
     * 
     */
    private @Nullable Integer kafkaStorage;
    /**
     * @return The number of CPU cores of ksqlDB.
     * 
     */
    private @Nullable Integer ksqlCu;
    /**
     * @return The number of replicas of ksqlDB.
     * 
     */
    private @Nullable Integer ksqlReplica;
    /**
     * @return The disk capacity of ksqlDB.
     * 
     */
    private @Nullable Integer ksqlStorage;
    /**
     * @return The number of CPU cores of Schema Registry.
     * 
     */
    private @Nullable Integer schemaRegistryCu;
    /**
     * @return The number of replicas of Schema Registry.
     * 
     */
    private @Nullable Integer schemaRegistryReplica;
    /**
     * @return The number of CPU cores of ZooKeeper.
     * 
     */
    private @Nullable Integer zookeeperCu;
    /**
     * @return The number of replicas of ZooKeeper.
     * 
     */
    private @Nullable Integer zookeeperReplica;
    /**
     * @return The disk capacity of ZooKeeper.
     * 
     */
    private @Nullable Integer zookeeperStorage;

    private InstanceConfluentConfig() {}
    /**
     * @return The number of CPU cores of Connect.
     * 
     */
    public Optional<Integer> connectCu() {
        return Optional.ofNullable(this.connectCu);
    }
    /**
     * @return The number of replicas of Connect.
     * 
     */
    public Optional<Integer> connectReplica() {
        return Optional.ofNullable(this.connectReplica);
    }
    /**
     * @return The number of CPU cores of Control Center.
     * 
     */
    public Optional<Integer> controlCenterCu() {
        return Optional.ofNullable(this.controlCenterCu);
    }
    /**
     * @return The number of replicas of Control Center.
     * 
     */
    public Optional<Integer> controlCenterReplica() {
        return Optional.ofNullable(this.controlCenterReplica);
    }
    /**
     * @return The disk capacity of Control Center.
     * 
     */
    public Optional<Integer> controlCenterStorage() {
        return Optional.ofNullable(this.controlCenterStorage);
    }
    /**
     * @return The number of CPU cores of the Kafka broker.
     * 
     */
    public Optional<Integer> kafkaCu() {
        return Optional.ofNullable(this.kafkaCu);
    }
    /**
     * @return The number of replicas of the Kafka broker.
     * 
     */
    public Optional<Integer> kafkaReplica() {
        return Optional.ofNullable(this.kafkaReplica);
    }
    /**
     * @return The number of CPU cores of Kafka Rest Proxy.
     * 
     */
    public Optional<Integer> kafkaRestProxyCu() {
        return Optional.ofNullable(this.kafkaRestProxyCu);
    }
    /**
     * @return The number of replicas of Kafka Rest Proxy.
     * 
     */
    public Optional<Integer> kafkaRestProxyReplica() {
        return Optional.ofNullable(this.kafkaRestProxyReplica);
    }
    /**
     * @return The disk capacity of the Kafka broker.
     * 
     */
    public Optional<Integer> kafkaStorage() {
        return Optional.ofNullable(this.kafkaStorage);
    }
    /**
     * @return The number of CPU cores of ksqlDB.
     * 
     */
    public Optional<Integer> ksqlCu() {
        return Optional.ofNullable(this.ksqlCu);
    }
    /**
     * @return The number of replicas of ksqlDB.
     * 
     */
    public Optional<Integer> ksqlReplica() {
        return Optional.ofNullable(this.ksqlReplica);
    }
    /**
     * @return The disk capacity of ksqlDB.
     * 
     */
    public Optional<Integer> ksqlStorage() {
        return Optional.ofNullable(this.ksqlStorage);
    }
    /**
     * @return The number of CPU cores of Schema Registry.
     * 
     */
    public Optional<Integer> schemaRegistryCu() {
        return Optional.ofNullable(this.schemaRegistryCu);
    }
    /**
     * @return The number of replicas of Schema Registry.
     * 
     */
    public Optional<Integer> schemaRegistryReplica() {
        return Optional.ofNullable(this.schemaRegistryReplica);
    }
    /**
     * @return The number of CPU cores of ZooKeeper.
     * 
     */
    public Optional<Integer> zookeeperCu() {
        return Optional.ofNullable(this.zookeeperCu);
    }
    /**
     * @return The number of replicas of ZooKeeper.
     * 
     */
    public Optional<Integer> zookeeperReplica() {
        return Optional.ofNullable(this.zookeeperReplica);
    }
    /**
     * @return The disk capacity of ZooKeeper.
     * 
     */
    public Optional<Integer> zookeeperStorage() {
        return Optional.ofNullable(this.zookeeperStorage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceConfluentConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer connectCu;
        private @Nullable Integer connectReplica;
        private @Nullable Integer controlCenterCu;
        private @Nullable Integer controlCenterReplica;
        private @Nullable Integer controlCenterStorage;
        private @Nullable Integer kafkaCu;
        private @Nullable Integer kafkaReplica;
        private @Nullable Integer kafkaRestProxyCu;
        private @Nullable Integer kafkaRestProxyReplica;
        private @Nullable Integer kafkaStorage;
        private @Nullable Integer ksqlCu;
        private @Nullable Integer ksqlReplica;
        private @Nullable Integer ksqlStorage;
        private @Nullable Integer schemaRegistryCu;
        private @Nullable Integer schemaRegistryReplica;
        private @Nullable Integer zookeeperCu;
        private @Nullable Integer zookeeperReplica;
        private @Nullable Integer zookeeperStorage;
        public Builder() {}
        public Builder(InstanceConfluentConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectCu = defaults.connectCu;
    	      this.connectReplica = defaults.connectReplica;
    	      this.controlCenterCu = defaults.controlCenterCu;
    	      this.controlCenterReplica = defaults.controlCenterReplica;
    	      this.controlCenterStorage = defaults.controlCenterStorage;
    	      this.kafkaCu = defaults.kafkaCu;
    	      this.kafkaReplica = defaults.kafkaReplica;
    	      this.kafkaRestProxyCu = defaults.kafkaRestProxyCu;
    	      this.kafkaRestProxyReplica = defaults.kafkaRestProxyReplica;
    	      this.kafkaStorage = defaults.kafkaStorage;
    	      this.ksqlCu = defaults.ksqlCu;
    	      this.ksqlReplica = defaults.ksqlReplica;
    	      this.ksqlStorage = defaults.ksqlStorage;
    	      this.schemaRegistryCu = defaults.schemaRegistryCu;
    	      this.schemaRegistryReplica = defaults.schemaRegistryReplica;
    	      this.zookeeperCu = defaults.zookeeperCu;
    	      this.zookeeperReplica = defaults.zookeeperReplica;
    	      this.zookeeperStorage = defaults.zookeeperStorage;
        }

        @CustomType.Setter
        public Builder connectCu(@Nullable Integer connectCu) {

            this.connectCu = connectCu;
            return this;
        }
        @CustomType.Setter
        public Builder connectReplica(@Nullable Integer connectReplica) {

            this.connectReplica = connectReplica;
            return this;
        }
        @CustomType.Setter
        public Builder controlCenterCu(@Nullable Integer controlCenterCu) {

            this.controlCenterCu = controlCenterCu;
            return this;
        }
        @CustomType.Setter
        public Builder controlCenterReplica(@Nullable Integer controlCenterReplica) {

            this.controlCenterReplica = controlCenterReplica;
            return this;
        }
        @CustomType.Setter
        public Builder controlCenterStorage(@Nullable Integer controlCenterStorage) {

            this.controlCenterStorage = controlCenterStorage;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaCu(@Nullable Integer kafkaCu) {

            this.kafkaCu = kafkaCu;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaReplica(@Nullable Integer kafkaReplica) {

            this.kafkaReplica = kafkaReplica;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRestProxyCu(@Nullable Integer kafkaRestProxyCu) {

            this.kafkaRestProxyCu = kafkaRestProxyCu;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaRestProxyReplica(@Nullable Integer kafkaRestProxyReplica) {

            this.kafkaRestProxyReplica = kafkaRestProxyReplica;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaStorage(@Nullable Integer kafkaStorage) {

            this.kafkaStorage = kafkaStorage;
            return this;
        }
        @CustomType.Setter
        public Builder ksqlCu(@Nullable Integer ksqlCu) {

            this.ksqlCu = ksqlCu;
            return this;
        }
        @CustomType.Setter
        public Builder ksqlReplica(@Nullable Integer ksqlReplica) {

            this.ksqlReplica = ksqlReplica;
            return this;
        }
        @CustomType.Setter
        public Builder ksqlStorage(@Nullable Integer ksqlStorage) {

            this.ksqlStorage = ksqlStorage;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistryCu(@Nullable Integer schemaRegistryCu) {

            this.schemaRegistryCu = schemaRegistryCu;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistryReplica(@Nullable Integer schemaRegistryReplica) {

            this.schemaRegistryReplica = schemaRegistryReplica;
            return this;
        }
        @CustomType.Setter
        public Builder zookeeperCu(@Nullable Integer zookeeperCu) {

            this.zookeeperCu = zookeeperCu;
            return this;
        }
        @CustomType.Setter
        public Builder zookeeperReplica(@Nullable Integer zookeeperReplica) {

            this.zookeeperReplica = zookeeperReplica;
            return this;
        }
        @CustomType.Setter
        public Builder zookeeperStorage(@Nullable Integer zookeeperStorage) {

            this.zookeeperStorage = zookeeperStorage;
            return this;
        }
        public InstanceConfluentConfig build() {
            final var _resultValue = new InstanceConfluentConfig();
            _resultValue.connectCu = connectCu;
            _resultValue.connectReplica = connectReplica;
            _resultValue.controlCenterCu = controlCenterCu;
            _resultValue.controlCenterReplica = controlCenterReplica;
            _resultValue.controlCenterStorage = controlCenterStorage;
            _resultValue.kafkaCu = kafkaCu;
            _resultValue.kafkaReplica = kafkaReplica;
            _resultValue.kafkaRestProxyCu = kafkaRestProxyCu;
            _resultValue.kafkaRestProxyReplica = kafkaRestProxyReplica;
            _resultValue.kafkaStorage = kafkaStorage;
            _resultValue.ksqlCu = ksqlCu;
            _resultValue.ksqlReplica = ksqlReplica;
            _resultValue.ksqlStorage = ksqlStorage;
            _resultValue.schemaRegistryCu = schemaRegistryCu;
            _resultValue.schemaRegistryReplica = schemaRegistryReplica;
            _resultValue.zookeeperCu = zookeeperCu;
            _resultValue.zookeeperReplica = zookeeperReplica;
            _resultValue.zookeeperStorage = zookeeperStorage;
            return _resultValue;
        }
    }
}
