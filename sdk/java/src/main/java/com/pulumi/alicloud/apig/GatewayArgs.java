// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apig;

import com.pulumi.alicloud.apig.inputs.GatewayLogConfigArgs;
import com.pulumi.alicloud.apig.inputs.GatewayNetworkAccessConfigArgs;
import com.pulumi.alicloud.apig.inputs.GatewayVpcArgs;
import com.pulumi.alicloud.apig.inputs.GatewayVswitchArgs;
import com.pulumi.alicloud.apig.inputs.GatewayZoneConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayArgs Empty = new GatewayArgs();

    /**
     * The name of the resource
     * 
     */
    @Import(name="gatewayName")
    private @Nullable Output<String> gatewayName;

    /**
     * @return The name of the resource
     * 
     */
    public Optional<Output<String>> gatewayName() {
        return Optional.ofNullable(this.gatewayName);
    }

    /**
     * Log Configuration See `log_config` below.
     * 
     */
    @Import(name="logConfig")
    private @Nullable Output<GatewayLogConfigArgs> logConfig;

    /**
     * @return Log Configuration See `log_config` below.
     * 
     */
    public Optional<Output<GatewayLogConfigArgs>> logConfig() {
        return Optional.ofNullable(this.logConfig);
    }

    /**
     * Network Access Configuration See `network_access_config` below.
     * 
     */
    @Import(name="networkAccessConfig")
    private @Nullable Output<GatewayNetworkAccessConfigArgs> networkAccessConfig;

    /**
     * @return Network Access Configuration See `network_access_config` below.
     * 
     */
    public Optional<Output<GatewayNetworkAccessConfigArgs>> networkAccessConfig() {
        return Optional.ofNullable(this.networkAccessConfig);
    }

    /**
     * The payment type of the resource
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Gateway instance specifications
     * 
     */
    @Import(name="spec")
    private @Nullable Output<String> spec;

    /**
     * @return Gateway instance specifications
     * 
     */
    public Optional<Output<String>> spec() {
        return Optional.ofNullable(this.spec);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The VPC associated with the Gateway. See `vpc` below.
     * 
     */
    @Import(name="vpc")
    private @Nullable Output<GatewayVpcArgs> vpc;

    /**
     * @return The VPC associated with the Gateway. See `vpc` below.
     * 
     */
    public Optional<Output<GatewayVpcArgs>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    /**
     * The virtual switch associated with the Gateway. See `vswitch` below.
     * 
     */
    @Import(name="vswitch")
    private @Nullable Output<GatewayVswitchArgs> vswitch;

    /**
     * @return The virtual switch associated with the Gateway. See `vswitch` below.
     * 
     */
    public Optional<Output<GatewayVswitchArgs>> vswitch() {
        return Optional.ofNullable(this.vswitch);
    }

    /**
     * Availability Zone Configuration See `zone_config` below.
     * 
     */
    @Import(name="zoneConfig", required=true)
    private Output<GatewayZoneConfigArgs> zoneConfig;

    /**
     * @return Availability Zone Configuration See `zone_config` below.
     * 
     */
    public Output<GatewayZoneConfigArgs> zoneConfig() {
        return this.zoneConfig;
    }

    private GatewayArgs() {}

    private GatewayArgs(GatewayArgs $) {
        this.gatewayName = $.gatewayName;
        this.logConfig = $.logConfig;
        this.networkAccessConfig = $.networkAccessConfig;
        this.paymentType = $.paymentType;
        this.resourceGroupId = $.resourceGroupId;
        this.spec = $.spec;
        this.tags = $.tags;
        this.vpc = $.vpc;
        this.vswitch = $.vswitch;
        this.zoneConfig = $.zoneConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayArgs $;

        public Builder() {
            $ = new GatewayArgs();
        }

        public Builder(GatewayArgs defaults) {
            $ = new GatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(@Nullable Output<String> gatewayName) {
            $.gatewayName = gatewayName;
            return this;
        }

        /**
         * @param gatewayName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(String gatewayName) {
            return gatewayName(Output.of(gatewayName));
        }

        /**
         * @param logConfig Log Configuration See `log_config` below.
         * 
         * @return builder
         * 
         */
        public Builder logConfig(@Nullable Output<GatewayLogConfigArgs> logConfig) {
            $.logConfig = logConfig;
            return this;
        }

        /**
         * @param logConfig Log Configuration See `log_config` below.
         * 
         * @return builder
         * 
         */
        public Builder logConfig(GatewayLogConfigArgs logConfig) {
            return logConfig(Output.of(logConfig));
        }

        /**
         * @param networkAccessConfig Network Access Configuration See `network_access_config` below.
         * 
         * @return builder
         * 
         */
        public Builder networkAccessConfig(@Nullable Output<GatewayNetworkAccessConfigArgs> networkAccessConfig) {
            $.networkAccessConfig = networkAccessConfig;
            return this;
        }

        /**
         * @param networkAccessConfig Network Access Configuration See `network_access_config` below.
         * 
         * @return builder
         * 
         */
        public Builder networkAccessConfig(GatewayNetworkAccessConfigArgs networkAccessConfig) {
            return networkAccessConfig(Output.of(networkAccessConfig));
        }

        /**
         * @param paymentType The payment type of the resource
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the resource
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param spec Gateway instance specifications
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Gateway instance specifications
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpc The VPC associated with the Gateway. See `vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Output<GatewayVpcArgs> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc The VPC associated with the Gateway. See `vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder vpc(GatewayVpcArgs vpc) {
            return vpc(Output.of(vpc));
        }

        /**
         * @param vswitch The virtual switch associated with the Gateway. See `vswitch` below.
         * 
         * @return builder
         * 
         */
        public Builder vswitch(@Nullable Output<GatewayVswitchArgs> vswitch) {
            $.vswitch = vswitch;
            return this;
        }

        /**
         * @param vswitch The virtual switch associated with the Gateway. See `vswitch` below.
         * 
         * @return builder
         * 
         */
        public Builder vswitch(GatewayVswitchArgs vswitch) {
            return vswitch(Output.of(vswitch));
        }

        /**
         * @param zoneConfig Availability Zone Configuration See `zone_config` below.
         * 
         * @return builder
         * 
         */
        public Builder zoneConfig(Output<GatewayZoneConfigArgs> zoneConfig) {
            $.zoneConfig = zoneConfig;
            return this;
        }

        /**
         * @param zoneConfig Availability Zone Configuration See `zone_config` below.
         * 
         * @return builder
         * 
         */
        public Builder zoneConfig(GatewayZoneConfigArgs zoneConfig) {
            return zoneConfig(Output.of(zoneConfig));
        }

        public GatewayArgs build() {
            if ($.paymentType == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "paymentType");
            }
            if ($.zoneConfig == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "zoneConfig");
            }
            return $;
        }
    }

}
