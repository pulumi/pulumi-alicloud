// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sag.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclRuleState extends com.pulumi.resources.ResourceArgs {

    public static final AclRuleState Empty = new AclRuleState();

    /**
     * The ID of the ACL.
     * 
     */
    @Import(name="aclId")
    private @Nullable Output<String> aclId;

    /**
     * @return The ID of the ACL.
     * 
     */
    public Optional<Output<String>> aclId() {
        return Optional.ofNullable(this.aclId);
    }

    /**
     * The description of the ACL rule. It must be 1 to 512 characters in length.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the ACL rule. It must be 1 to 512 characters in length.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The destination address. It is an IPv4 address range in CIDR format. Default value: 0.0.0.0/0.
     * 
     */
    @Import(name="destCidr")
    private @Nullable Output<String> destCidr;

    /**
     * @return The destination address. It is an IPv4 address range in CIDR format. Default value: 0.0.0.0/0.
     * 
     */
    public Optional<Output<String>> destCidr() {
        return Optional.ofNullable(this.destCidr);
    }

    /**
     * The range of the destination port. Valid value: 80/80.
     * 
     */
    @Import(name="destPortRange")
    private @Nullable Output<String> destPortRange;

    /**
     * @return The range of the destination port. Valid value: 80/80.
     * 
     */
    public Optional<Output<String>> destPortRange() {
        return Optional.ofNullable(this.destPortRange);
    }

    /**
     * The direction of the ACL rule. Valid values: in|out.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The direction of the ACL rule. Valid values: in|out.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * The protocol used by the ACL rule. The value is not case sensitive.
     * 
     */
    @Import(name="ipProtocol")
    private @Nullable Output<String> ipProtocol;

    /**
     * @return The protocol used by the ACL rule. The value is not case sensitive.
     * 
     */
    public Optional<Output<String>> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }

    /**
     * The policy used by the ACL rule. Valid values: accept|drop.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The policy used by the ACL rule. Valid values: accept|drop.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The priority of the ACL rule. Value range: 1 to 100.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the ACL rule. Value range: 1 to 100.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The source address. It is an IPv4 address range in the CIDR format. Default value: 0.0.0.0/0.
     * 
     */
    @Import(name="sourceCidr")
    private @Nullable Output<String> sourceCidr;

    /**
     * @return The source address. It is an IPv4 address range in the CIDR format. Default value: 0.0.0.0/0.
     * 
     */
    public Optional<Output<String>> sourceCidr() {
        return Optional.ofNullable(this.sourceCidr);
    }

    /**
     * The range of the source port. Valid value: 80/80.
     * 
     */
    @Import(name="sourcePortRange")
    private @Nullable Output<String> sourcePortRange;

    /**
     * @return The range of the source port. Valid value: 80/80.
     * 
     */
    public Optional<Output<String>> sourcePortRange() {
        return Optional.ofNullable(this.sourcePortRange);
    }

    private AclRuleState() {}

    private AclRuleState(AclRuleState $) {
        this.aclId = $.aclId;
        this.description = $.description;
        this.destCidr = $.destCidr;
        this.destPortRange = $.destPortRange;
        this.direction = $.direction;
        this.ipProtocol = $.ipProtocol;
        this.policy = $.policy;
        this.priority = $.priority;
        this.sourceCidr = $.sourceCidr;
        this.sourcePortRange = $.sourcePortRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRuleState $;

        public Builder() {
            $ = new AclRuleState();
        }

        public Builder(AclRuleState defaults) {
            $ = new AclRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclId The ID of the ACL.
         * 
         * @return builder
         * 
         */
        public Builder aclId(@Nullable Output<String> aclId) {
            $.aclId = aclId;
            return this;
        }

        /**
         * @param aclId The ID of the ACL.
         * 
         * @return builder
         * 
         */
        public Builder aclId(String aclId) {
            return aclId(Output.of(aclId));
        }

        /**
         * @param description The description of the ACL rule. It must be 1 to 512 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the ACL rule. It must be 1 to 512 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destCidr The destination address. It is an IPv4 address range in CIDR format. Default value: 0.0.0.0/0.
         * 
         * @return builder
         * 
         */
        public Builder destCidr(@Nullable Output<String> destCidr) {
            $.destCidr = destCidr;
            return this;
        }

        /**
         * @param destCidr The destination address. It is an IPv4 address range in CIDR format. Default value: 0.0.0.0/0.
         * 
         * @return builder
         * 
         */
        public Builder destCidr(String destCidr) {
            return destCidr(Output.of(destCidr));
        }

        /**
         * @param destPortRange The range of the destination port. Valid value: 80/80.
         * 
         * @return builder
         * 
         */
        public Builder destPortRange(@Nullable Output<String> destPortRange) {
            $.destPortRange = destPortRange;
            return this;
        }

        /**
         * @param destPortRange The range of the destination port. Valid value: 80/80.
         * 
         * @return builder
         * 
         */
        public Builder destPortRange(String destPortRange) {
            return destPortRange(Output.of(destPortRange));
        }

        /**
         * @param direction The direction of the ACL rule. Valid values: in|out.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction of the ACL rule. Valid values: in|out.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param ipProtocol The protocol used by the ACL rule. The value is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(@Nullable Output<String> ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param ipProtocol The protocol used by the ACL rule. The value is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(String ipProtocol) {
            return ipProtocol(Output.of(ipProtocol));
        }

        /**
         * @param policy The policy used by the ACL rule. Valid values: accept|drop.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The policy used by the ACL rule. Valid values: accept|drop.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param priority The priority of the ACL rule. Value range: 1 to 100.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the ACL rule. Value range: 1 to 100.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param sourceCidr The source address. It is an IPv4 address range in the CIDR format. Default value: 0.0.0.0/0.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(@Nullable Output<String> sourceCidr) {
            $.sourceCidr = sourceCidr;
            return this;
        }

        /**
         * @param sourceCidr The source address. It is an IPv4 address range in the CIDR format. Default value: 0.0.0.0/0.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(String sourceCidr) {
            return sourceCidr(Output.of(sourceCidr));
        }

        /**
         * @param sourcePortRange The range of the source port. Valid value: 80/80.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(@Nullable Output<String> sourcePortRange) {
            $.sourcePortRange = sourcePortRange;
            return this;
        }

        /**
         * @param sourcePortRange The range of the source port. Valid value: 80/80.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(String sourcePortRange) {
            return sourcePortRange(Output.of(sourcePortRange));
        }

        public AclRuleState build() {
            return $;
        }
    }

}
