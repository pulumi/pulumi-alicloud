// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.aligreen.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageLibState extends com.pulumi.resources.ResourceArgs {

    public static final ImageLibState Empty = new ImageLibState();

    /**
     * List of business scenarios. For example: [&#34;bizTypeA&#34;, &#34;bizTypeB&#34;, &#34;bizTypeC&#34;]
     * 
     */
    @Import(name="bizTypes")
    private @Nullable Output<List<String>> bizTypes;

    /**
     * @return List of business scenarios. For example: [&#34;bizTypeA&#34;, &#34;bizTypeB&#34;, &#34;bizTypeC&#34;]
     * 
     */
    public Optional<Output<List<String>>> bizTypes() {
        return Optional.ofNullable(this.bizTypes);
    }

    /**
     * The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
     * 
     */
    @Import(name="imageLibName")
    private @Nullable Output<String> imageLibName;

    /**
     * @return The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
     * 
     */
    public Optional<Output<String>> imageLibName() {
        return Optional.ofNullable(this.imageLibName);
    }

    /**
     * The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
     * 
     */
    @Import(name="scene")
    private @Nullable Output<String> scene;

    /**
     * @return The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
     * 
     */
    public Optional<Output<String>> scene() {
        return Optional.ofNullable(this.scene);
    }

    private ImageLibState() {}

    private ImageLibState(ImageLibState $) {
        this.bizTypes = $.bizTypes;
        this.category = $.category;
        this.enable = $.enable;
        this.imageLibName = $.imageLibName;
        this.scene = $.scene;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageLibState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageLibState $;

        public Builder() {
            $ = new ImageLibState();
        }

        public Builder(ImageLibState defaults) {
            $ = new ImageLibState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bizTypes List of business scenarios. For example: [&#34;bizTypeA&#34;, &#34;bizTypeB&#34;, &#34;bizTypeC&#34;]
         * 
         * @return builder
         * 
         */
        public Builder bizTypes(@Nullable Output<List<String>> bizTypes) {
            $.bizTypes = bizTypes;
            return this;
        }

        /**
         * @param bizTypes List of business scenarios. For example: [&#34;bizTypeA&#34;, &#34;bizTypeB&#34;, &#34;bizTypeC&#34;]
         * 
         * @return builder
         * 
         */
        public Builder bizTypes(List<String> bizTypes) {
            return bizTypes(Output.of(bizTypes));
        }

        /**
         * @param bizTypes List of business scenarios. For example: [&#34;bizTypeA&#34;, &#34;bizTypeB&#34;, &#34;bizTypeC&#34;]
         * 
         * @return builder
         * 
         */
        public Builder bizTypes(String... bizTypes) {
            return bizTypes(List.of(bizTypes));
        }

        /**
         * @param category The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The category of the image library. Valid values: BLACK: a blacklist, WHITE: a whitelist, REVIEW: a review list
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param enable Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Specifies whether to enable the image library. Valid values: true: Enable the image library. This is the default value. false: Disable the image library.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param imageLibName The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
         * 
         * @return builder
         * 
         */
        public Builder imageLibName(@Nullable Output<String> imageLibName) {
            $.imageLibName = imageLibName;
            return this;
        }

        /**
         * @param imageLibName The name of the image library defined by the customer. It can contain no more than 20 characters in Chinese, English, and underscore (_).
         * 
         * @return builder
         * 
         */
        public Builder imageLibName(String imageLibName) {
            return imageLibName(Output.of(imageLibName));
        }

        /**
         * @param scene The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
         * 
         * @return builder
         * 
         */
        public Builder scene(@Nullable Output<String> scene) {
            $.scene = scene;
            return this;
        }

        /**
         * @param scene The moderation scenario to which the custom image library applies. Valid values: PORN: pornography detection, AD: ad detection, ILLEGAL: terrorist content detection
         * 
         * @return builder
         * 
         */
        public Builder scene(String scene) {
            return scene(Output.of(scene));
        }

        public ImageLibState build() {
            return $;
        }
    }

}
