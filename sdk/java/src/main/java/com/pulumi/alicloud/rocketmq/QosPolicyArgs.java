// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QosPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final QosPolicyArgs Empty = new QosPolicyArgs();

    /**
     * The description of the QoS policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the QoS policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The destination CIDR block.
     * 
     */
    @Import(name="destCidr", required=true)
    private Output<String> destCidr;

    /**
     * @return The destination CIDR block.
     * 
     */
    public Output<String> destCidr() {
        return this.destCidr;
    }

    /**
     * The destination port range.
     * 
     */
    @Import(name="destPortRange", required=true)
    private Output<String> destPortRange;

    /**
     * @return The destination port range.
     * 
     */
    public Output<String> destPortRange() {
        return this.destPortRange;
    }

    /**
     * The expiration time of the quintuple rule.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return The expiration time of the quintuple rule.
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * The transport layer protocol.
     * 
     */
    @Import(name="ipProtocol", required=true)
    private Output<String> ipProtocol;

    /**
     * @return The transport layer protocol.
     * 
     */
    public Output<String> ipProtocol() {
        return this.ipProtocol;
    }

    /**
     * The name of the QoS policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the QoS policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * The instance ID of the QoS policy to which the quintuple rule is created.
     * 
     */
    @Import(name="qosId", required=true)
    private Output<String> qosId;

    /**
     * @return The instance ID of the QoS policy to which the quintuple rule is created.
     * 
     */
    public Output<String> qosId() {
        return this.qosId;
    }

    /**
     * The source CIDR block.
     * 
     */
    @Import(name="sourceCidr", required=true)
    private Output<String> sourceCidr;

    /**
     * @return The source CIDR block.
     * 
     */
    public Output<String> sourceCidr() {
        return this.sourceCidr;
    }

    /**
     * The source port range of the transport layer.
     * 
     */
    @Import(name="sourcePortRange", required=true)
    private Output<String> sourcePortRange;

    /**
     * @return The source port range of the transport layer.
     * 
     */
    public Output<String> sourcePortRange() {
        return this.sourcePortRange;
    }

    /**
     * The time when the quintuple rule takes effect.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return The time when the quintuple rule takes effect.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private QosPolicyArgs() {}

    private QosPolicyArgs(QosPolicyArgs $) {
        this.description = $.description;
        this.destCidr = $.destCidr;
        this.destPortRange = $.destPortRange;
        this.endTime = $.endTime;
        this.ipProtocol = $.ipProtocol;
        this.name = $.name;
        this.priority = $.priority;
        this.qosId = $.qosId;
        this.sourceCidr = $.sourceCidr;
        this.sourcePortRange = $.sourcePortRange;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QosPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QosPolicyArgs $;

        public Builder() {
            $ = new QosPolicyArgs();
        }

        public Builder(QosPolicyArgs defaults) {
            $ = new QosPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destCidr The destination CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder destCidr(Output<String> destCidr) {
            $.destCidr = destCidr;
            return this;
        }

        /**
         * @param destCidr The destination CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder destCidr(String destCidr) {
            return destCidr(Output.of(destCidr));
        }

        /**
         * @param destPortRange The destination port range.
         * 
         * @return builder
         * 
         */
        public Builder destPortRange(Output<String> destPortRange) {
            $.destPortRange = destPortRange;
            return this;
        }

        /**
         * @param destPortRange The destination port range.
         * 
         * @return builder
         * 
         */
        public Builder destPortRange(String destPortRange) {
            return destPortRange(Output.of(destPortRange));
        }

        /**
         * @param endTime The expiration time of the quintuple rule.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime The expiration time of the quintuple rule.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param ipProtocol The transport layer protocol.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(Output<String> ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param ipProtocol The transport layer protocol.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(String ipProtocol) {
            return ipProtocol(Output.of(ipProtocol));
        }

        /**
         * @param name The name of the QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param qosId The instance ID of the QoS policy to which the quintuple rule is created.
         * 
         * @return builder
         * 
         */
        public Builder qosId(Output<String> qosId) {
            $.qosId = qosId;
            return this;
        }

        /**
         * @param qosId The instance ID of the QoS policy to which the quintuple rule is created.
         * 
         * @return builder
         * 
         */
        public Builder qosId(String qosId) {
            return qosId(Output.of(qosId));
        }

        /**
         * @param sourceCidr The source CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(Output<String> sourceCidr) {
            $.sourceCidr = sourceCidr;
            return this;
        }

        /**
         * @param sourceCidr The source CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(String sourceCidr) {
            return sourceCidr(Output.of(sourceCidr));
        }

        /**
         * @param sourcePortRange The source port range of the transport layer.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(Output<String> sourcePortRange) {
            $.sourcePortRange = sourcePortRange;
            return this;
        }

        /**
         * @param sourcePortRange The source port range of the transport layer.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(String sourcePortRange) {
            return sourcePortRange(Output.of(sourcePortRange));
        }

        /**
         * @param startTime The time when the quintuple rule takes effect.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The time when the quintuple rule takes effect.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public QosPolicyArgs build() {
            if ($.destCidr == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "destCidr");
            }
            if ($.destPortRange == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "destPortRange");
            }
            if ($.ipProtocol == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "ipProtocol");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "priority");
            }
            if ($.qosId == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "qosId");
            }
            if ($.sourceCidr == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "sourceCidr");
            }
            if ($.sourcePortRange == null) {
                throw new MissingRequiredPropertyException("QosPolicyArgs", "sourcePortRange");
            }
            return $;
        }
    }

}
