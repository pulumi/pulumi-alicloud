// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.privatelink.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpcEndpointServicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcEndpointServicesPlainArgs Empty = new GetVpcEndpointServicesPlainArgs();

    /**
     * Whether to automatically accept terminal node connections.
     * 
     */
    @Import(name="autoAcceptConnection")
    private @Nullable Boolean autoAcceptConnection;

    /**
     * @return Whether to automatically accept terminal node connections.
     * 
     */
    public Optional<Boolean> autoAcceptConnection() {
        return Optional.ofNullable(this.autoAcceptConnection);
    }

    /**
     * A list of Vpc Endpoint Service IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Vpc Endpoint Service IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Vpc Endpoint Service name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Vpc Endpoint Service name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    @Import(name="serviceBusinessStatus")
    private @Nullable String serviceBusinessStatus;

    /**
     * @return The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    public Optional<String> serviceBusinessStatus() {
        return Optional.ofNullable(this.serviceBusinessStatus);
    }

    /**
     * The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The name of Vpc Endpoint Service.
     * 
     */
    @Import(name="vpcEndpointServiceName")
    private @Nullable String vpcEndpointServiceName;

    /**
     * @return The name of Vpc Endpoint Service.
     * 
     */
    public Optional<String> vpcEndpointServiceName() {
        return Optional.ofNullable(this.vpcEndpointServiceName);
    }

    private GetVpcEndpointServicesPlainArgs() {}

    private GetVpcEndpointServicesPlainArgs(GetVpcEndpointServicesPlainArgs $) {
        this.autoAcceptConnection = $.autoAcceptConnection;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.serviceBusinessStatus = $.serviceBusinessStatus;
        this.status = $.status;
        this.vpcEndpointServiceName = $.vpcEndpointServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcEndpointServicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcEndpointServicesPlainArgs $;

        public Builder() {
            $ = new GetVpcEndpointServicesPlainArgs();
        }

        public Builder(GetVpcEndpointServicesPlainArgs defaults) {
            $ = new GetVpcEndpointServicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoAcceptConnection Whether to automatically accept terminal node connections.
         * 
         * @return builder
         * 
         */
        public Builder autoAcceptConnection(@Nullable Boolean autoAcceptConnection) {
            $.autoAcceptConnection = autoAcceptConnection;
            return this;
        }

        /**
         * @param ids A list of Vpc Endpoint Service IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Vpc Endpoint Service IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Vpc Endpoint Service name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param serviceBusinessStatus The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusinessStatus(@Nullable String serviceBusinessStatus) {
            $.serviceBusinessStatus = serviceBusinessStatus;
            return this;
        }

        /**
         * @param status The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param vpcEndpointServiceName The name of Vpc Endpoint Service.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceName(@Nullable String vpcEndpointServiceName) {
            $.vpcEndpointServiceName = vpcEndpointServiceName;
            return this;
        }

        public GetVpcEndpointServicesPlainArgs build() {
            return $;
        }
    }

}
