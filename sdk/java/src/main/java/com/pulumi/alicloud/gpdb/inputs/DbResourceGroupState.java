// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbResourceGroupState extends com.pulumi.resources.ResourceArgs {

    public static final DbResourceGroupState Empty = new DbResourceGroupState();

    /**
     * The instance ID.&gt; You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
     * 
     */
    @Import(name="dbInstanceId")
    private @Nullable Output<String> dbInstanceId;

    /**
     * @return The instance ID.&gt; You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
     * 
     */
    public Optional<Output<String>> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }

    /**
     * Resource group configuration.
     * 
     */
    @Import(name="resourceGroupConfig")
    private @Nullable Output<String> resourceGroupConfig;

    /**
     * @return Resource group configuration.
     * 
     */
    public Optional<Output<String>> resourceGroupConfig() {
        return Optional.ofNullable(this.resourceGroupConfig);
    }

    /**
     * Resource group name.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Resource group name.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Role List
     * 
     */
    @Import(name="roleLists")
    private @Nullable Output<List<String>> roleLists;

    /**
     * @return Role List
     * 
     */
    public Optional<Output<List<String>>> roleLists() {
        return Optional.ofNullable(this.roleLists);
    }

    private DbResourceGroupState() {}

    private DbResourceGroupState(DbResourceGroupState $) {
        this.dbInstanceId = $.dbInstanceId;
        this.resourceGroupConfig = $.resourceGroupConfig;
        this.resourceGroupName = $.resourceGroupName;
        this.roleLists = $.roleLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbResourceGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbResourceGroupState $;

        public Builder() {
            $ = new DbResourceGroupState();
        }

        public Builder(DbResourceGroupState defaults) {
            $ = new DbResourceGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbInstanceId The instance ID.&gt; You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(@Nullable Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The instance ID.&gt; You can call the DescribeDBInstances operation to view the instance IDs of all AnalyticDB PostgreSQL instances in the target region.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param resourceGroupConfig Resource group configuration.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupConfig(@Nullable Output<String> resourceGroupConfig) {
            $.resourceGroupConfig = resourceGroupConfig;
            return this;
        }

        /**
         * @param resourceGroupConfig Resource group configuration.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupConfig(String resourceGroupConfig) {
            return resourceGroupConfig(Output.of(resourceGroupConfig));
        }

        /**
         * @param resourceGroupName Resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param roleLists Role List
         * 
         * @return builder
         * 
         */
        public Builder roleLists(@Nullable Output<List<String>> roleLists) {
            $.roleLists = roleLists;
            return this;
        }

        /**
         * @param roleLists Role List
         * 
         * @return builder
         * 
         */
        public Builder roleLists(List<String> roleLists) {
            return roleLists(Output.of(roleLists));
        }

        /**
         * @param roleLists Role List
         * 
         * @return builder
         * 
         */
        public Builder roleLists(String... roleLists) {
            return roleLists(List.of(roleLists));
        }

        public DbResourceGroupState build() {
            return $;
        }
    }

}
