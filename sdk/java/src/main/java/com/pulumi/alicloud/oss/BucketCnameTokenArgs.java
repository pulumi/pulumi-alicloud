// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class BucketCnameTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketCnameTokenArgs Empty = new BucketCnameTokenArgs();

    /**
     * The name of the bucket
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The name of the bucket
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The custom domain
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return The custom domain
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    private BucketCnameTokenArgs() {}

    private BucketCnameTokenArgs(BucketCnameTokenArgs $) {
        this.bucket = $.bucket;
        this.domain = $.domain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketCnameTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketCnameTokenArgs $;

        public Builder() {
            $ = new BucketCnameTokenArgs();
        }

        public Builder(BucketCnameTokenArgs defaults) {
            $ = new BucketCnameTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param domain The custom domain
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The custom domain
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public BucketCnameTokenArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketCnameTokenArgs", "bucket");
            }
            if ($.domain == null) {
                throw new MissingRequiredPropertyException("BucketCnameTokenArgs", "domain");
            }
            return $;
        }
    }

}
