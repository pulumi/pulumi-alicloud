// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pvtz;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.pvtz.RuleAttachmentArgs;
import com.pulumi.alicloud.pvtz.inputs.RuleAttachmentState;
import com.pulumi.alicloud.pvtz.outputs.RuleAttachmentVpc;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Private Zone Rule Attachment resource.
 * 
 * For information about Private Zone Rule Attachment and how to use it, see [What is Rule Attachment](https://www.alibabacloud.com/help/en/doc-detail/177601.htm).
 * 
 * &gt; **NOTE:** Available since v1.143.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.pvtz.PvtzFunctions;
 * import com.pulumi.alicloud.pvtz.inputs.GetResolverZonesArgs;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetRegionsArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.CidrsubnetArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.pvtz.Endpoint;
 * import com.pulumi.alicloud.pvtz.EndpointArgs;
 * import com.pulumi.alicloud.pvtz.inputs.EndpointIpConfigArgs;
 * import com.pulumi.alicloud.pvtz.Rule;
 * import com.pulumi.alicloud.pvtz.RuleArgs;
 * import com.pulumi.alicloud.pvtz.inputs.RuleForwardIpArgs;
 * import com.pulumi.alicloud.pvtz.RuleAttachment;
 * import com.pulumi.alicloud.pvtz.RuleAttachmentArgs;
 * import com.pulumi.alicloud.pvtz.inputs.RuleAttachmentVpcArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("example_value");
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         final var default = PvtzFunctions.getResolverZones(GetResolverZonesArgs.builder()
 *             .status("NORMAL")
 *             .build());
 * 
 *         final var defaultGetRegions = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         for (var i = 0; i < 3; i++) {
 *             new Network("defaultNetwork-" + i, NetworkArgs.builder()
 *                 .vpcName(name)
 *                 .cidrBlock("172.16.0.0/12")
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i < 2; i++) {
 *             new Switch("defaultSwitch-" + i, SwitchArgs.builder()
 *                 .vpcId(defaultNetwork[2].id())
 *                 .cidrBlock(defaultNetwork[2].cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
 *                     .input(_cidrBlock)
 *                     .newbits(8)
 *                     .netnum(range.value())
 *                     .build())).applyValue(_invoke -> _invoke.result()))
 *                 .zoneId(default_.zones()[range.value()].zoneId())
 *                 .build());
 * 
 *         
 * }
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .vpcId(defaultNetwork[2].id())
 *             .name(name)
 *             .build());
 * 
 *         var defaultEndpoint = new Endpoint("defaultEndpoint", EndpointArgs.builder()
 *             .endpointName(String.format("%s-%s", name,defaultInteger.result()))
 *             .securityGroupId(defaultSecurityGroup.id())
 *             .vpcId(defaultNetwork[2].id())
 *             .vpcRegionId(defaultGetRegions.regions()[0].id())
 *             .ipConfigs(            
 *                 EndpointIpConfigArgs.builder()
 *                     .zoneId(defaultSwitch[0].zoneId())
 *                     .cidrBlock(defaultSwitch[0].cidrBlock())
 *                     .vswitchId(defaultSwitch[0].id())
 *                     .build(),
 *                 EndpointIpConfigArgs.builder()
 *                     .zoneId(defaultSwitch[1].zoneId())
 *                     .cidrBlock(defaultSwitch[1].cidrBlock())
 *                     .vswitchId(defaultSwitch[1].id())
 *                     .build())
 *             .build());
 * 
 *         var defaultRule = new Rule("defaultRule", RuleArgs.builder()
 *             .endpointId(defaultEndpoint.id())
 *             .ruleName(String.format("%s-%s", name,defaultInteger.result()))
 *             .type("OUTBOUND")
 *             .zoneName(name)
 *             .forwardIps(RuleForwardIpArgs.builder()
 *                 .ip("114.114.114.114")
 *                 .port(8080)
 *                 .build())
 *             .build());
 * 
 *         var defaultRuleAttachment = new RuleAttachment("defaultRuleAttachment", RuleAttachmentArgs.builder()
 *             .ruleId(defaultRule.id())
 *             .vpcs(            
 *                 RuleAttachmentVpcArgs.builder()
 *                     .regionId(defaultGetRegions.regions()[0].id())
 *                     .vpcId(defaultNetwork[0].id())
 *                     .build(),
 *                 RuleAttachmentVpcArgs.builder()
 *                     .regionId(defaultGetRegions.regions()[0].id())
 *                     .vpcId(defaultNetwork[1].id())
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Private Zone Rule Attachment can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:pvtz/ruleAttachment:RuleAttachment example &lt;rule_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:pvtz/ruleAttachment:RuleAttachment")
public class RuleAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the rule.
     * 
     */
    @Export(name="ruleId", refs={String.class}, tree="[0]")
    private Output<String> ruleId;

    /**
     * @return The ID of the rule.
     * 
     */
    public Output<String> ruleId() {
        return this.ruleId;
    }
    /**
     * The List of the VPC. See `vpcs` below.
     * 
     */
    @Export(name="vpcs", refs={List.class,RuleAttachmentVpc.class}, tree="[0,1]")
    private Output<List<RuleAttachmentVpc>> vpcs;

    /**
     * @return The List of the VPC. See `vpcs` below.
     * 
     */
    public Output<List<RuleAttachmentVpc>> vpcs() {
        return this.vpcs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RuleAttachment(java.lang.String name) {
        this(name, RuleAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RuleAttachment(java.lang.String name, RuleAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RuleAttachment(java.lang.String name, RuleAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:pvtz/ruleAttachment:RuleAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RuleAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable RuleAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:pvtz/ruleAttachment:RuleAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static RuleAttachmentArgs makeArgs(RuleAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RuleAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RuleAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable RuleAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RuleAttachment(name, id, state, options);
    }
}
