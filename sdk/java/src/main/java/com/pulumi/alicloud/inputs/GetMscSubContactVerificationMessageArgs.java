// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetMscSubContactVerificationMessageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMscSubContactVerificationMessageArgs Empty = new GetMscSubContactVerificationMessageArgs();

    /**
     * The ID of the Contact.
     * 
     */
    @Import(name="contactId", required=true)
    private Output<String> contactId;

    /**
     * @return The ID of the Contact.
     * 
     */
    public Output<String> contactId() {
        return this.contactId;
    }

    /**
     * How a user receives verification messages. Valid values : `1`, `2`.
     * 
     */
    @Import(name="type", required=true)
    private Output<Integer> type;

    /**
     * @return How a user receives verification messages. Valid values : `1`, `2`.
     * 
     */
    public Output<Integer> type() {
        return this.type;
    }

    private GetMscSubContactVerificationMessageArgs() {}

    private GetMscSubContactVerificationMessageArgs(GetMscSubContactVerificationMessageArgs $) {
        this.contactId = $.contactId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMscSubContactVerificationMessageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMscSubContactVerificationMessageArgs $;

        public Builder() {
            $ = new GetMscSubContactVerificationMessageArgs();
        }

        public Builder(GetMscSubContactVerificationMessageArgs defaults) {
            $ = new GetMscSubContactVerificationMessageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactId The ID of the Contact.
         * 
         * @return builder
         * 
         */
        public Builder contactId(Output<String> contactId) {
            $.contactId = contactId;
            return this;
        }

        /**
         * @param contactId The ID of the Contact.
         * 
         * @return builder
         * 
         */
        public Builder contactId(String contactId) {
            return contactId(Output.of(contactId));
        }

        /**
         * @param type How a user receives verification messages. Valid values : `1`, `2`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<Integer> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type How a user receives verification messages. Valid values : `1`, `2`.
         * 
         * @return builder
         * 
         */
        public Builder type(Integer type) {
            return type(Output.of(type));
        }

        public GetMscSubContactVerificationMessageArgs build() {
            if ($.contactId == null) {
                throw new MissingRequiredPropertyException("GetMscSubContactVerificationMessageArgs", "contactId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetMscSubContactVerificationMessageArgs", "type");
            }
            return $;
        }
    }

}
