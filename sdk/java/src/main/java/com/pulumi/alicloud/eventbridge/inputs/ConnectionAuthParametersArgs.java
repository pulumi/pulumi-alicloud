// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge.inputs;

import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersApiKeyAuthParametersArgs;
import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersBasicAuthParametersArgs;
import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersOauthParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionAuthParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionAuthParametersArgs Empty = new ConnectionAuthParametersArgs();

    /**
     * The parameters that are configured for API key authentication. See `api_key_auth_parameters` below.
     * 
     */
    @Import(name="apiKeyAuthParameters")
    private @Nullable Output<ConnectionAuthParametersApiKeyAuthParametersArgs> apiKeyAuthParameters;

    /**
     * @return The parameters that are configured for API key authentication. See `api_key_auth_parameters` below.
     * 
     */
    public Optional<Output<ConnectionAuthParametersApiKeyAuthParametersArgs>> apiKeyAuthParameters() {
        return Optional.ofNullable(this.apiKeyAuthParameters);
    }

    /**
     * The type of the authentication. Valid values: `API_KEY_AUTH`, `BASIC_AUTH`, `OAUTH_AUTH`.
     * 
     */
    @Import(name="authorizationType")
    private @Nullable Output<String> authorizationType;

    /**
     * @return The type of the authentication. Valid values: `API_KEY_AUTH`, `BASIC_AUTH`, `OAUTH_AUTH`.
     * 
     */
    public Optional<Output<String>> authorizationType() {
        return Optional.ofNullable(this.authorizationType);
    }

    /**
     * The parameters that are configured for basic authentication. See `basic_auth_parameters` below.
     * 
     */
    @Import(name="basicAuthParameters")
    private @Nullable Output<ConnectionAuthParametersBasicAuthParametersArgs> basicAuthParameters;

    /**
     * @return The parameters that are configured for basic authentication. See `basic_auth_parameters` below.
     * 
     */
    public Optional<Output<ConnectionAuthParametersBasicAuthParametersArgs>> basicAuthParameters() {
        return Optional.ofNullable(this.basicAuthParameters);
    }

    /**
     * The parameters that are configured for OAuth authentication. See `oauth_parameters` below.
     * 
     */
    @Import(name="oauthParameters")
    private @Nullable Output<ConnectionAuthParametersOauthParametersArgs> oauthParameters;

    /**
     * @return The parameters that are configured for OAuth authentication. See `oauth_parameters` below.
     * 
     */
    public Optional<Output<ConnectionAuthParametersOauthParametersArgs>> oauthParameters() {
        return Optional.ofNullable(this.oauthParameters);
    }

    private ConnectionAuthParametersArgs() {}

    private ConnectionAuthParametersArgs(ConnectionAuthParametersArgs $) {
        this.apiKeyAuthParameters = $.apiKeyAuthParameters;
        this.authorizationType = $.authorizationType;
        this.basicAuthParameters = $.basicAuthParameters;
        this.oauthParameters = $.oauthParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionAuthParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionAuthParametersArgs $;

        public Builder() {
            $ = new ConnectionAuthParametersArgs();
        }

        public Builder(ConnectionAuthParametersArgs defaults) {
            $ = new ConnectionAuthParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKeyAuthParameters The parameters that are configured for API key authentication. See `api_key_auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyAuthParameters(@Nullable Output<ConnectionAuthParametersApiKeyAuthParametersArgs> apiKeyAuthParameters) {
            $.apiKeyAuthParameters = apiKeyAuthParameters;
            return this;
        }

        /**
         * @param apiKeyAuthParameters The parameters that are configured for API key authentication. See `api_key_auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyAuthParameters(ConnectionAuthParametersApiKeyAuthParametersArgs apiKeyAuthParameters) {
            return apiKeyAuthParameters(Output.of(apiKeyAuthParameters));
        }

        /**
         * @param authorizationType The type of the authentication. Valid values: `API_KEY_AUTH`, `BASIC_AUTH`, `OAUTH_AUTH`.
         * 
         * @return builder
         * 
         */
        public Builder authorizationType(@Nullable Output<String> authorizationType) {
            $.authorizationType = authorizationType;
            return this;
        }

        /**
         * @param authorizationType The type of the authentication. Valid values: `API_KEY_AUTH`, `BASIC_AUTH`, `OAUTH_AUTH`.
         * 
         * @return builder
         * 
         */
        public Builder authorizationType(String authorizationType) {
            return authorizationType(Output.of(authorizationType));
        }

        /**
         * @param basicAuthParameters The parameters that are configured for basic authentication. See `basic_auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder basicAuthParameters(@Nullable Output<ConnectionAuthParametersBasicAuthParametersArgs> basicAuthParameters) {
            $.basicAuthParameters = basicAuthParameters;
            return this;
        }

        /**
         * @param basicAuthParameters The parameters that are configured for basic authentication. See `basic_auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder basicAuthParameters(ConnectionAuthParametersBasicAuthParametersArgs basicAuthParameters) {
            return basicAuthParameters(Output.of(basicAuthParameters));
        }

        /**
         * @param oauthParameters The parameters that are configured for OAuth authentication. See `oauth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder oauthParameters(@Nullable Output<ConnectionAuthParametersOauthParametersArgs> oauthParameters) {
            $.oauthParameters = oauthParameters;
            return this;
        }

        /**
         * @param oauthParameters The parameters that are configured for OAuth authentication. See `oauth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder oauthParameters(ConnectionAuthParametersOauthParametersArgs oauthParameters) {
            return oauthParameters(Output.of(oauthParameters));
        }

        public ConnectionAuthParametersArgs build() {
            return $;
        }
    }

}
