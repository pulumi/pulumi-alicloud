// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppGroupOrderArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppGroupOrderArgs Empty = new AppGroupOrderArgs();

    /**
     * Whether to renew automatically. It only takes effect when the parameter paymentType takes the value `Subscription`.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Whether to renew automatically. It only takes effect when the parameter paymentType takes the value `Subscription`.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * Order cycle. The minimum value is not less than 0.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<Integer> duration;

    /**
     * @return Order cycle. The minimum value is not less than 0.
     * 
     */
    public Optional<Output<Integer>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * Order cycle unit. Valid values: `Year` and `Month`.
     * 
     */
    @Import(name="pricingCycle")
    private @Nullable Output<String> pricingCycle;

    /**
     * @return Order cycle unit. Valid values: `Year` and `Month`.
     * 
     */
    public Optional<Output<String>> pricingCycle() {
        return Optional.ofNullable(this.pricingCycle);
    }

    private AppGroupOrderArgs() {}

    private AppGroupOrderArgs(AppGroupOrderArgs $) {
        this.autoRenew = $.autoRenew;
        this.duration = $.duration;
        this.pricingCycle = $.pricingCycle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppGroupOrderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppGroupOrderArgs $;

        public Builder() {
            $ = new AppGroupOrderArgs();
        }

        public Builder(AppGroupOrderArgs defaults) {
            $ = new AppGroupOrderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRenew Whether to renew automatically. It only takes effect when the parameter paymentType takes the value `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Whether to renew automatically. It only takes effect when the parameter paymentType takes the value `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param duration Order cycle. The minimum value is not less than 0.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration Order cycle. The minimum value is not less than 0.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param pricingCycle Order cycle unit. Valid values: `Year` and `Month`.
         * 
         * @return builder
         * 
         */
        public Builder pricingCycle(@Nullable Output<String> pricingCycle) {
            $.pricingCycle = pricingCycle;
            return this;
        }

        /**
         * @param pricingCycle Order cycle unit. Valid values: `Year` and `Month`.
         * 
         * @return builder
         * 
         */
        public Builder pricingCycle(String pricingCycle) {
            return pricingCycle(Output.of(pricingCycle));
        }

        public AppGroupOrderArgs build() {
            return $;
        }
    }

}
