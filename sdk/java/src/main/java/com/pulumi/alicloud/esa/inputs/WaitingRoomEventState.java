// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WaitingRoomEventState extends com.pulumi.resources.ResourceArgs {

    public static final WaitingRoomEventState Empty = new WaitingRoomEventState();

    /**
     * The type of the waiting room. Valid values:
     * 
     * - default
     * - custom
     * 
     */
    @Import(name="customPageHtml")
    private @Nullable Output<String> customPageHtml;

    /**
     * @return The type of the waiting room. Valid values:
     * 
     * - default
     * - custom
     * 
     */
    public Optional<Output<String>> customPageHtml() {
        return Optional.ofNullable(this.customPageHtml);
    }

    /**
     * Specifies whether to enable JSON response. Valid values:
     * 
     * - on
     * - off
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies whether to enable JSON response. Valid values:
     * 
     * - on
     * - off
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The maximum duration for which a session remains valid after a user leaves the origin. Unit: minutes.
     * 
     */
    @Import(name="disableSessionRenewalEnable")
    private @Nullable Output<String> disableSessionRenewalEnable;

    /**
     * @return The maximum duration for which a session remains valid after a user leaves the origin. Unit: minutes.
     * 
     */
    public Optional<Output<String>> disableSessionRenewalEnable() {
        return Optional.ofNullable(this.disableSessionRenewalEnable);
    }

    /**
     * The start time of the event. This value is a UNIX timestamp.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return The start time of the event. This value is a UNIX timestamp.
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * The HTTP status code to return while a user is in the queue. Valid values:
     * 
     * - 200
     * - 202
     * - 429
     * 
     */
    @Import(name="jsonResponseEnable")
    private @Nullable Output<String> jsonResponseEnable;

    /**
     * @return The HTTP status code to return while a user is in the queue. Valid values:
     * 
     * - 200
     * - 202
     * - 429
     * 
     */
    public Optional<Output<String>> jsonResponseEnable() {
        return Optional.ofNullable(this.jsonResponseEnable);
    }

    /**
     * Specifies whether to enable random queuing.
     * 
     * - on
     * - off
     * 
     */
    @Import(name="language")
    private @Nullable Output<String> language;

    /**
     * @return Specifies whether to enable random queuing.
     * 
     * - on
     * - off
     * 
     */
    public Optional<Output<String>> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * The maximum number of active users.
     * 
     */
    @Import(name="newUsersPerMinute")
    private @Nullable Output<String> newUsersPerMinute;

    /**
     * @return The maximum number of active users.
     * 
     */
    public Optional<Output<String>> newUsersPerMinute() {
        return Optional.ofNullable(this.newUsersPerMinute);
    }

    /**
     * The end time of the event. This value is a UNIX timestamp.
     * 
     */
    @Import(name="preQueueEnable")
    private @Nullable Output<String> preQueueEnable;

    /**
     * @return The end time of the event. This value is a UNIX timestamp.
     * 
     */
    public Optional<Output<String>> preQueueEnable() {
        return Optional.ofNullable(this.preQueueEnable);
    }

    /**
     * Specifies whether to enable pre-queuing.
     * 
     * - on
     * - off
     * 
     */
    @Import(name="preQueueStartTime")
    private @Nullable Output<String> preQueueStartTime;

    /**
     * @return Specifies whether to enable pre-queuing.
     * 
     * - on
     * - off
     * 
     */
    public Optional<Output<String>> preQueueStartTime() {
        return Optional.ofNullable(this.preQueueStartTime);
    }

    /**
     * Specifies whether to disable session renewal. Valid values:
     * 
     * - on
     * - off
     * 
     */
    @Import(name="queuingMethod")
    private @Nullable Output<String> queuingMethod;

    /**
     * @return Specifies whether to disable session renewal. Valid values:
     * 
     * - on
     * - off
     * 
     */
    public Optional<Output<String>> queuingMethod() {
        return Optional.ofNullable(this.queuingMethod);
    }

    /**
     * The queuing method. Valid values:
     * 
     * - random: Users gain access to the origin randomly, regardless of the arrival time.
     * - fifo: Users gain access to the origin in order of arrival.
     * - passthrough: Users pass through the waiting room and go straight to the origin.
     * - reject-all: All requests are blocked from accessing the origin.
     * 
     */
    @Import(name="queuingStatusCode")
    private @Nullable Output<String> queuingStatusCode;

    /**
     * @return The queuing method. Valid values:
     * 
     * - random: Users gain access to the origin randomly, regardless of the arrival time.
     * - fifo: Users gain access to the origin in order of arrival.
     * - passthrough: Users pass through the waiting room and go straight to the origin.
     * - reject-all: All requests are blocked from accessing the origin.
     * 
     */
    public Optional<Output<String>> queuingStatusCode() {
        return Optional.ofNullable(this.queuingStatusCode);
    }

    /**
     * The start time for pre-queuing.
     * 
     */
    @Import(name="randomPreQueueEnable")
    private @Nullable Output<String> randomPreQueueEnable;

    /**
     * @return The start time for pre-queuing.
     * 
     */
    public Optional<Output<String>> randomPreQueueEnable() {
        return Optional.ofNullable(this.randomPreQueueEnable);
    }

    /**
     * The maximum number of new users per minute.
     * 
     */
    @Import(name="sessionDuration")
    private @Nullable Output<String> sessionDuration;

    /**
     * @return The maximum number of new users per minute.
     * 
     */
    public Optional<Output<String>> sessionDuration() {
        return Optional.ofNullable(this.sessionDuration);
    }

    /**
     * The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The content of the custom waiting room page. You must specify this parameter if you set WaitingRoomType to custom. The content must be Base64-encoded.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return The content of the custom waiting room page. You must specify this parameter if you set WaitingRoomType to custom. The content must be Base64-encoded.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * The ID of the waiting room event, which can be obtained by calling the [ListWaitingRoomEvents](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The ID of the waiting room event, which can be obtained by calling the [ListWaitingRoomEvents](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The name of the waiting room event.
     * 
     */
    @Import(name="totalActiveUsers")
    private @Nullable Output<String> totalActiveUsers;

    /**
     * @return The name of the waiting room event.
     * 
     */
    public Optional<Output<String>> totalActiveUsers() {
        return Optional.ofNullable(this.totalActiveUsers);
    }

    /**
     * The unique ID of the waiting room, which can be obtained by calling the [ListWaitingRooms](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
     * 
     */
    @Import(name="waitingRoomEventId")
    private @Nullable Output<Integer> waitingRoomEventId;

    /**
     * @return The unique ID of the waiting room, which can be obtained by calling the [ListWaitingRooms](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
     * 
     */
    public Optional<Output<Integer>> waitingRoomEventId() {
        return Optional.ofNullable(this.waitingRoomEventId);
    }

    /**
     * Specifies whether to enable the waiting room event. Valid values:
     * 
     */
    @Import(name="waitingRoomEventName")
    private @Nullable Output<String> waitingRoomEventName;

    /**
     * @return Specifies whether to enable the waiting room event. Valid values:
     * 
     */
    public Optional<Output<String>> waitingRoomEventName() {
        return Optional.ofNullable(this.waitingRoomEventName);
    }

    /**
     * The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
     * 
     */
    @Import(name="waitingRoomId")
    private @Nullable Output<String> waitingRoomId;

    /**
     * @return The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
     * 
     */
    public Optional<Output<String>> waitingRoomId() {
        return Optional.ofNullable(this.waitingRoomId);
    }

    /**
     * The description of the waiting room.
     * 
     */
    @Import(name="waitingRoomType")
    private @Nullable Output<String> waitingRoomType;

    /**
     * @return The description of the waiting room.
     * 
     */
    public Optional<Output<String>> waitingRoomType() {
        return Optional.ofNullable(this.waitingRoomType);
    }

    private WaitingRoomEventState() {}

    private WaitingRoomEventState(WaitingRoomEventState $) {
        this.customPageHtml = $.customPageHtml;
        this.description = $.description;
        this.disableSessionRenewalEnable = $.disableSessionRenewalEnable;
        this.endTime = $.endTime;
        this.jsonResponseEnable = $.jsonResponseEnable;
        this.language = $.language;
        this.newUsersPerMinute = $.newUsersPerMinute;
        this.preQueueEnable = $.preQueueEnable;
        this.preQueueStartTime = $.preQueueStartTime;
        this.queuingMethod = $.queuingMethod;
        this.queuingStatusCode = $.queuingStatusCode;
        this.randomPreQueueEnable = $.randomPreQueueEnable;
        this.sessionDuration = $.sessionDuration;
        this.siteId = $.siteId;
        this.startTime = $.startTime;
        this.status = $.status;
        this.totalActiveUsers = $.totalActiveUsers;
        this.waitingRoomEventId = $.waitingRoomEventId;
        this.waitingRoomEventName = $.waitingRoomEventName;
        this.waitingRoomId = $.waitingRoomId;
        this.waitingRoomType = $.waitingRoomType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WaitingRoomEventState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WaitingRoomEventState $;

        public Builder() {
            $ = new WaitingRoomEventState();
        }

        public Builder(WaitingRoomEventState defaults) {
            $ = new WaitingRoomEventState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customPageHtml The type of the waiting room. Valid values:
         * 
         * - default
         * - custom
         * 
         * @return builder
         * 
         */
        public Builder customPageHtml(@Nullable Output<String> customPageHtml) {
            $.customPageHtml = customPageHtml;
            return this;
        }

        /**
         * @param customPageHtml The type of the waiting room. Valid values:
         * 
         * - default
         * - custom
         * 
         * @return builder
         * 
         */
        public Builder customPageHtml(String customPageHtml) {
            return customPageHtml(Output.of(customPageHtml));
        }

        /**
         * @param description Specifies whether to enable JSON response. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies whether to enable JSON response. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disableSessionRenewalEnable The maximum duration for which a session remains valid after a user leaves the origin. Unit: minutes.
         * 
         * @return builder
         * 
         */
        public Builder disableSessionRenewalEnable(@Nullable Output<String> disableSessionRenewalEnable) {
            $.disableSessionRenewalEnable = disableSessionRenewalEnable;
            return this;
        }

        /**
         * @param disableSessionRenewalEnable The maximum duration for which a session remains valid after a user leaves the origin. Unit: minutes.
         * 
         * @return builder
         * 
         */
        public Builder disableSessionRenewalEnable(String disableSessionRenewalEnable) {
            return disableSessionRenewalEnable(Output.of(disableSessionRenewalEnable));
        }

        /**
         * @param endTime The start time of the event. This value is a UNIX timestamp.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime The start time of the event. This value is a UNIX timestamp.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param jsonResponseEnable The HTTP status code to return while a user is in the queue. Valid values:
         * 
         * - 200
         * - 202
         * - 429
         * 
         * @return builder
         * 
         */
        public Builder jsonResponseEnable(@Nullable Output<String> jsonResponseEnable) {
            $.jsonResponseEnable = jsonResponseEnable;
            return this;
        }

        /**
         * @param jsonResponseEnable The HTTP status code to return while a user is in the queue. Valid values:
         * 
         * - 200
         * - 202
         * - 429
         * 
         * @return builder
         * 
         */
        public Builder jsonResponseEnable(String jsonResponseEnable) {
            return jsonResponseEnable(Output.of(jsonResponseEnable));
        }

        /**
         * @param language Specifies whether to enable random queuing.
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder language(@Nullable Output<String> language) {
            $.language = language;
            return this;
        }

        /**
         * @param language Specifies whether to enable random queuing.
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder language(String language) {
            return language(Output.of(language));
        }

        /**
         * @param newUsersPerMinute The maximum number of active users.
         * 
         * @return builder
         * 
         */
        public Builder newUsersPerMinute(@Nullable Output<String> newUsersPerMinute) {
            $.newUsersPerMinute = newUsersPerMinute;
            return this;
        }

        /**
         * @param newUsersPerMinute The maximum number of active users.
         * 
         * @return builder
         * 
         */
        public Builder newUsersPerMinute(String newUsersPerMinute) {
            return newUsersPerMinute(Output.of(newUsersPerMinute));
        }

        /**
         * @param preQueueEnable The end time of the event. This value is a UNIX timestamp.
         * 
         * @return builder
         * 
         */
        public Builder preQueueEnable(@Nullable Output<String> preQueueEnable) {
            $.preQueueEnable = preQueueEnable;
            return this;
        }

        /**
         * @param preQueueEnable The end time of the event. This value is a UNIX timestamp.
         * 
         * @return builder
         * 
         */
        public Builder preQueueEnable(String preQueueEnable) {
            return preQueueEnable(Output.of(preQueueEnable));
        }

        /**
         * @param preQueueStartTime Specifies whether to enable pre-queuing.
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder preQueueStartTime(@Nullable Output<String> preQueueStartTime) {
            $.preQueueStartTime = preQueueStartTime;
            return this;
        }

        /**
         * @param preQueueStartTime Specifies whether to enable pre-queuing.
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder preQueueStartTime(String preQueueStartTime) {
            return preQueueStartTime(Output.of(preQueueStartTime));
        }

        /**
         * @param queuingMethod Specifies whether to disable session renewal. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder queuingMethod(@Nullable Output<String> queuingMethod) {
            $.queuingMethod = queuingMethod;
            return this;
        }

        /**
         * @param queuingMethod Specifies whether to disable session renewal. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder queuingMethod(String queuingMethod) {
            return queuingMethod(Output.of(queuingMethod));
        }

        /**
         * @param queuingStatusCode The queuing method. Valid values:
         * 
         * - random: Users gain access to the origin randomly, regardless of the arrival time.
         * - fifo: Users gain access to the origin in order of arrival.
         * - passthrough: Users pass through the waiting room and go straight to the origin.
         * - reject-all: All requests are blocked from accessing the origin.
         * 
         * @return builder
         * 
         */
        public Builder queuingStatusCode(@Nullable Output<String> queuingStatusCode) {
            $.queuingStatusCode = queuingStatusCode;
            return this;
        }

        /**
         * @param queuingStatusCode The queuing method. Valid values:
         * 
         * - random: Users gain access to the origin randomly, regardless of the arrival time.
         * - fifo: Users gain access to the origin in order of arrival.
         * - passthrough: Users pass through the waiting room and go straight to the origin.
         * - reject-all: All requests are blocked from accessing the origin.
         * 
         * @return builder
         * 
         */
        public Builder queuingStatusCode(String queuingStatusCode) {
            return queuingStatusCode(Output.of(queuingStatusCode));
        }

        /**
         * @param randomPreQueueEnable The start time for pre-queuing.
         * 
         * @return builder
         * 
         */
        public Builder randomPreQueueEnable(@Nullable Output<String> randomPreQueueEnable) {
            $.randomPreQueueEnable = randomPreQueueEnable;
            return this;
        }

        /**
         * @param randomPreQueueEnable The start time for pre-queuing.
         * 
         * @return builder
         * 
         */
        public Builder randomPreQueueEnable(String randomPreQueueEnable) {
            return randomPreQueueEnable(Output.of(randomPreQueueEnable));
        }

        /**
         * @param sessionDuration The maximum number of new users per minute.
         * 
         * @return builder
         * 
         */
        public Builder sessionDuration(@Nullable Output<String> sessionDuration) {
            $.sessionDuration = sessionDuration;
            return this;
        }

        /**
         * @param sessionDuration The maximum number of new users per minute.
         * 
         * @return builder
         * 
         */
        public Builder sessionDuration(String sessionDuration) {
            return sessionDuration(Output.of(sessionDuration));
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param startTime The content of the custom waiting room page. You must specify this parameter if you set WaitingRoomType to custom. The content must be Base64-encoded.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The content of the custom waiting room page. You must specify this parameter if you set WaitingRoomType to custom. The content must be Base64-encoded.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param status The ID of the waiting room event, which can be obtained by calling the [ListWaitingRoomEvents](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The ID of the waiting room event, which can be obtained by calling the [ListWaitingRoomEvents](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param totalActiveUsers The name of the waiting room event.
         * 
         * @return builder
         * 
         */
        public Builder totalActiveUsers(@Nullable Output<String> totalActiveUsers) {
            $.totalActiveUsers = totalActiveUsers;
            return this;
        }

        /**
         * @param totalActiveUsers The name of the waiting room event.
         * 
         * @return builder
         * 
         */
        public Builder totalActiveUsers(String totalActiveUsers) {
            return totalActiveUsers(Output.of(totalActiveUsers));
        }

        /**
         * @param waitingRoomEventId The unique ID of the waiting room, which can be obtained by calling the [ListWaitingRooms](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomEventId(@Nullable Output<Integer> waitingRoomEventId) {
            $.waitingRoomEventId = waitingRoomEventId;
            return this;
        }

        /**
         * @param waitingRoomEventId The unique ID of the waiting room, which can be obtained by calling the [ListWaitingRooms](https://www.alibabacloud.com/help/en/doc-detail/2850279.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomEventId(Integer waitingRoomEventId) {
            return waitingRoomEventId(Output.of(waitingRoomEventId));
        }

        /**
         * @param waitingRoomEventName Specifies whether to enable the waiting room event. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomEventName(@Nullable Output<String> waitingRoomEventName) {
            $.waitingRoomEventName = waitingRoomEventName;
            return this;
        }

        /**
         * @param waitingRoomEventName Specifies whether to enable the waiting room event. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomEventName(String waitingRoomEventName) {
            return waitingRoomEventName(Output.of(waitingRoomEventName));
        }

        /**
         * @param waitingRoomId The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomId(@Nullable Output<String> waitingRoomId) {
            $.waitingRoomId = waitingRoomId;
            return this;
        }

        /**
         * @param waitingRoomId The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomId(String waitingRoomId) {
            return waitingRoomId(Output.of(waitingRoomId));
        }

        /**
         * @param waitingRoomType The description of the waiting room.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomType(@Nullable Output<String> waitingRoomType) {
            $.waitingRoomType = waitingRoomType;
            return this;
        }

        /**
         * @param waitingRoomType The description of the waiting room.
         * 
         * @return builder
         * 
         */
        public Builder waitingRoomType(String waitingRoomType) {
            return waitingRoomType(Output.of(waitingRoomType));
        }

        public WaitingRoomEventState build() {
            return $;
        }
    }

}
