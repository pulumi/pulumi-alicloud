// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return DNS security level.
     * 
     */
    private String dnsSecurity;
    private String domain;
    /**
     * @return Number of domain names bound.
     * 
     */
    private String domainNumbers;
    /**
     * @return Id of the instance.
     * 
     */
    private String id;
    /**
     * @return Id of the instance resource.
     * 
     */
    private String instanceId;
    private String paymentType;
    /**
     * @return Paid package version.
     * 
     */
    private String versionCode;
    /**
     * @return Paid package version name.
     * 
     */
    private String versionName;

    private GetInstancesInstance() {}
    /**
     * @return DNS security level.
     * 
     */
    public String dnsSecurity() {
        return this.dnsSecurity;
    }
    public String domain() {
        return this.domain;
    }
    /**
     * @return Number of domain names bound.
     * 
     */
    public String domainNumbers() {
        return this.domainNumbers;
    }
    /**
     * @return Id of the instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Id of the instance resource.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return Paid package version.
     * 
     */
    public String versionCode() {
        return this.versionCode;
    }
    /**
     * @return Paid package version name.
     * 
     */
    public String versionName() {
        return this.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dnsSecurity;
        private String domain;
        private String domainNumbers;
        private String id;
        private String instanceId;
        private String paymentType;
        private String versionCode;
        private String versionName;
        public Builder() {}
        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsSecurity = defaults.dnsSecurity;
    	      this.domain = defaults.domain;
    	      this.domainNumbers = defaults.domainNumbers;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.paymentType = defaults.paymentType;
    	      this.versionCode = defaults.versionCode;
    	      this.versionName = defaults.versionName;
        }

        @CustomType.Setter
        public Builder dnsSecurity(String dnsSecurity) {
            this.dnsSecurity = Objects.requireNonNull(dnsSecurity);
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder domainNumbers(String domainNumbers) {
            this.domainNumbers = Objects.requireNonNull(domainNumbers);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        @CustomType.Setter
        public Builder versionCode(String versionCode) {
            this.versionCode = Objects.requireNonNull(versionCode);
            return this;
        }
        @CustomType.Setter
        public Builder versionName(String versionName) {
            this.versionName = Objects.requireNonNull(versionName);
            return this;
        }
        public GetInstancesInstance build() {
            final var o = new GetInstancesInstance();
            o.dnsSecurity = dnsSecurity;
            o.domain = domain;
            o.domainNumbers = domainNumbers;
            o.id = id;
            o.instanceId = instanceId;
            o.paymentType = paymentType;
            o.versionCode = versionCode;
            o.versionName = versionName;
            return o;
        }
    }
}
