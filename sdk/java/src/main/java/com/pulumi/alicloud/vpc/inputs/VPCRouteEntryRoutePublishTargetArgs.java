// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VPCRouteEntryRoutePublishTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VPCRouteEntryRoutePublishTargetArgs Empty = new VPCRouteEntryRoutePublishTargetArgs();

    /**
     * Route Publish Status
     * 
     */
    @Import(name="publishStatus")
    private @Nullable Output<String> publishStatus;

    /**
     * @return Route Publish Status
     * 
     */
    public Optional<Output<String>> publishStatus() {
        return Optional.ofNullable(this.publishStatus);
    }

    /**
     * Route publish target instance id.
     * 
     */
    @Import(name="targetInstanceId")
    private @Nullable Output<String> targetInstanceId;

    /**
     * @return Route publish target instance id.
     * 
     */
    public Optional<Output<String>> targetInstanceId() {
        return Optional.ofNullable(this.targetInstanceId);
    }

    /**
     * Route publish target type
     * 
     */
    @Import(name="targetType", required=true)
    private Output<String> targetType;

    /**
     * @return Route publish target type
     * 
     */
    public Output<String> targetType() {
        return this.targetType;
    }

    private VPCRouteEntryRoutePublishTargetArgs() {}

    private VPCRouteEntryRoutePublishTargetArgs(VPCRouteEntryRoutePublishTargetArgs $) {
        this.publishStatus = $.publishStatus;
        this.targetInstanceId = $.targetInstanceId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VPCRouteEntryRoutePublishTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VPCRouteEntryRoutePublishTargetArgs $;

        public Builder() {
            $ = new VPCRouteEntryRoutePublishTargetArgs();
        }

        public Builder(VPCRouteEntryRoutePublishTargetArgs defaults) {
            $ = new VPCRouteEntryRoutePublishTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publishStatus Route Publish Status
         * 
         * @return builder
         * 
         */
        public Builder publishStatus(@Nullable Output<String> publishStatus) {
            $.publishStatus = publishStatus;
            return this;
        }

        /**
         * @param publishStatus Route Publish Status
         * 
         * @return builder
         * 
         */
        public Builder publishStatus(String publishStatus) {
            return publishStatus(Output.of(publishStatus));
        }

        /**
         * @param targetInstanceId Route publish target instance id.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceId(@Nullable Output<String> targetInstanceId) {
            $.targetInstanceId = targetInstanceId;
            return this;
        }

        /**
         * @param targetInstanceId Route publish target instance id.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceId(String targetInstanceId) {
            return targetInstanceId(Output.of(targetInstanceId));
        }

        /**
         * @param targetType Route publish target type
         * 
         * @return builder
         * 
         */
        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType Route publish target type
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public VPCRouteEntryRoutePublishTargetArgs build() {
            if ($.targetType == null) {
                throw new MissingRequiredPropertyException("VPCRouteEntryRoutePublishTargetArgs", "targetType");
            }
            return $;
        }
    }

}
