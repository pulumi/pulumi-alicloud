// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.lindorm.inputs;

import com.pulumi.alicloud.lindorm.inputs.InstanceV2EngineListConnectAddressListArgs;
import com.pulumi.alicloud.lindorm.inputs.InstanceV2EngineListNodeGroupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceV2EngineListArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceV2EngineListArgs Empty = new InstanceV2EngineListArgs();

    /**
     * Connect Address List
     * 
     */
    @Import(name="connectAddressLists")
    private @Nullable Output<List<InstanceV2EngineListConnectAddressListArgs>> connectAddressLists;

    /**
     * @return Connect Address List
     * 
     */
    public Optional<Output<List<InstanceV2EngineListConnectAddressListArgs>>> connectAddressLists() {
        return Optional.ofNullable(this.connectAddressLists);
    }

    /**
     * Engine
     * 
     */
    @Import(name="engineType", required=true)
    private Output<String> engineType;

    /**
     * @return Engine
     * 
     */
    public Output<String> engineType() {
        return this.engineType;
    }

    /**
     * Whether it is the latest version
     * 
     */
    @Import(name="isLastVersion")
    private @Nullable Output<Boolean> isLastVersion;

    /**
     * @return Whether it is the latest version
     * 
     */
    public Optional<Output<Boolean>> isLastVersion() {
        return Optional.ofNullable(this.isLastVersion);
    }

    /**
     * Latest Version
     * 
     */
    @Import(name="latestVersion")
    private @Nullable Output<String> latestVersion;

    /**
     * @return Latest Version
     * 
     */
    public Optional<Output<String>> latestVersion() {
        return Optional.ofNullable(this.latestVersion);
    }

    /**
     * Node Group List See `nodeGroup` below.
     * 
     */
    @Import(name="nodeGroups")
    private @Nullable Output<List<InstanceV2EngineListNodeGroupArgs>> nodeGroups;

    /**
     * @return Node Group List See `nodeGroup` below.
     * 
     */
    public Optional<Output<List<InstanceV2EngineListNodeGroupArgs>>> nodeGroups() {
        return Optional.ofNullable(this.nodeGroups);
    }

    /**
     * Engine Version
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Engine Version
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private InstanceV2EngineListArgs() {}

    private InstanceV2EngineListArgs(InstanceV2EngineListArgs $) {
        this.connectAddressLists = $.connectAddressLists;
        this.engineType = $.engineType;
        this.isLastVersion = $.isLastVersion;
        this.latestVersion = $.latestVersion;
        this.nodeGroups = $.nodeGroups;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceV2EngineListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceV2EngineListArgs $;

        public Builder() {
            $ = new InstanceV2EngineListArgs();
        }

        public Builder(InstanceV2EngineListArgs defaults) {
            $ = new InstanceV2EngineListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectAddressLists Connect Address List
         * 
         * @return builder
         * 
         */
        public Builder connectAddressLists(@Nullable Output<List<InstanceV2EngineListConnectAddressListArgs>> connectAddressLists) {
            $.connectAddressLists = connectAddressLists;
            return this;
        }

        /**
         * @param connectAddressLists Connect Address List
         * 
         * @return builder
         * 
         */
        public Builder connectAddressLists(List<InstanceV2EngineListConnectAddressListArgs> connectAddressLists) {
            return connectAddressLists(Output.of(connectAddressLists));
        }

        /**
         * @param connectAddressLists Connect Address List
         * 
         * @return builder
         * 
         */
        public Builder connectAddressLists(InstanceV2EngineListConnectAddressListArgs... connectAddressLists) {
            return connectAddressLists(List.of(connectAddressLists));
        }

        /**
         * @param engineType Engine
         * 
         * @return builder
         * 
         */
        public Builder engineType(Output<String> engineType) {
            $.engineType = engineType;
            return this;
        }

        /**
         * @param engineType Engine
         * 
         * @return builder
         * 
         */
        public Builder engineType(String engineType) {
            return engineType(Output.of(engineType));
        }

        /**
         * @param isLastVersion Whether it is the latest version
         * 
         * @return builder
         * 
         */
        public Builder isLastVersion(@Nullable Output<Boolean> isLastVersion) {
            $.isLastVersion = isLastVersion;
            return this;
        }

        /**
         * @param isLastVersion Whether it is the latest version
         * 
         * @return builder
         * 
         */
        public Builder isLastVersion(Boolean isLastVersion) {
            return isLastVersion(Output.of(isLastVersion));
        }

        /**
         * @param latestVersion Latest Version
         * 
         * @return builder
         * 
         */
        public Builder latestVersion(@Nullable Output<String> latestVersion) {
            $.latestVersion = latestVersion;
            return this;
        }

        /**
         * @param latestVersion Latest Version
         * 
         * @return builder
         * 
         */
        public Builder latestVersion(String latestVersion) {
            return latestVersion(Output.of(latestVersion));
        }

        /**
         * @param nodeGroups Node Group List See `nodeGroup` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(@Nullable Output<List<InstanceV2EngineListNodeGroupArgs>> nodeGroups) {
            $.nodeGroups = nodeGroups;
            return this;
        }

        /**
         * @param nodeGroups Node Group List See `nodeGroup` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(List<InstanceV2EngineListNodeGroupArgs> nodeGroups) {
            return nodeGroups(Output.of(nodeGroups));
        }

        /**
         * @param nodeGroups Node Group List See `nodeGroup` below.
         * 
         * @return builder
         * 
         */
        public Builder nodeGroups(InstanceV2EngineListNodeGroupArgs... nodeGroups) {
            return nodeGroups(List.of(nodeGroups));
        }

        /**
         * @param version Engine Version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Engine Version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public InstanceV2EngineListArgs build() {
            if ($.engineType == null) {
                throw new MissingRequiredPropertyException("InstanceV2EngineListArgs", "engineType");
            }
            return $;
        }
    }

}
