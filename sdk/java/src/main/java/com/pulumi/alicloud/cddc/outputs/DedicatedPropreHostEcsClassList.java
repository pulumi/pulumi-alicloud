// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cddc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DedicatedPropreHostEcsClassList {
    /**
     * @return Data disk PL level.
     * 
     */
    private @Nullable String dataDiskPerformanceLevel;
    /**
     * @return The capacity of the data disk.
     * 
     */
    private @Nullable Integer diskCapacity;
    /**
     * @return Number of mounted data disks.
     * 
     */
    private @Nullable Integer diskCount;
    /**
     * @return Data disk type, value range:
     * - **cloud_essd**: the ESSD cloud disk.
     * - **cloud_ssd**: SSD cloud disk.
     * - **cloud_efficiency**: The ultra cloud disk.
     * - **cloud_auto**: ESSD AutoPL cloud disk.
     * 
     */
    private @Nullable String diskType;
    /**
     * @return ECS specifications.
     * 
     */
    private String instanceType;
    /**
     * @return System disk capacity.
     * 
     */
    private Integer sysDiskCapacity;
    /**
     * @return System disk type, value:
     * - **cloud_essd**: the ESSD cloud disk.
     * - **cloud_ssd**: SSD cloud disk.
     * - **cloud_efficiency**: The ultra cloud disk.
     * - **cloud_auto**: ESSD AutoPL cloud disk.
     * 
     */
    private String sysDiskType;
    /**
     * @return System disk PL level.
     * 
     */
    private @Nullable String systemDiskPerformanceLevel;

    private DedicatedPropreHostEcsClassList() {}
    /**
     * @return Data disk PL level.
     * 
     */
    public Optional<String> dataDiskPerformanceLevel() {
        return Optional.ofNullable(this.dataDiskPerformanceLevel);
    }
    /**
     * @return The capacity of the data disk.
     * 
     */
    public Optional<Integer> diskCapacity() {
        return Optional.ofNullable(this.diskCapacity);
    }
    /**
     * @return Number of mounted data disks.
     * 
     */
    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }
    /**
     * @return Data disk type, value range:
     * - **cloud_essd**: the ESSD cloud disk.
     * - **cloud_ssd**: SSD cloud disk.
     * - **cloud_efficiency**: The ultra cloud disk.
     * - **cloud_auto**: ESSD AutoPL cloud disk.
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * @return ECS specifications.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return System disk capacity.
     * 
     */
    public Integer sysDiskCapacity() {
        return this.sysDiskCapacity;
    }
    /**
     * @return System disk type, value:
     * - **cloud_essd**: the ESSD cloud disk.
     * - **cloud_ssd**: SSD cloud disk.
     * - **cloud_efficiency**: The ultra cloud disk.
     * - **cloud_auto**: ESSD AutoPL cloud disk.
     * 
     */
    public String sysDiskType() {
        return this.sysDiskType;
    }
    /**
     * @return System disk PL level.
     * 
     */
    public Optional<String> systemDiskPerformanceLevel() {
        return Optional.ofNullable(this.systemDiskPerformanceLevel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DedicatedPropreHostEcsClassList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataDiskPerformanceLevel;
        private @Nullable Integer diskCapacity;
        private @Nullable Integer diskCount;
        private @Nullable String diskType;
        private String instanceType;
        private Integer sysDiskCapacity;
        private String sysDiskType;
        private @Nullable String systemDiskPerformanceLevel;
        public Builder() {}
        public Builder(DedicatedPropreHostEcsClassList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDiskPerformanceLevel = defaults.dataDiskPerformanceLevel;
    	      this.diskCapacity = defaults.diskCapacity;
    	      this.diskCount = defaults.diskCount;
    	      this.diskType = defaults.diskType;
    	      this.instanceType = defaults.instanceType;
    	      this.sysDiskCapacity = defaults.sysDiskCapacity;
    	      this.sysDiskType = defaults.sysDiskType;
    	      this.systemDiskPerformanceLevel = defaults.systemDiskPerformanceLevel;
        }

        @CustomType.Setter
        public Builder dataDiskPerformanceLevel(@Nullable String dataDiskPerformanceLevel) {
            this.dataDiskPerformanceLevel = dataDiskPerformanceLevel;
            return this;
        }
        @CustomType.Setter
        public Builder diskCapacity(@Nullable Integer diskCapacity) {
            this.diskCapacity = diskCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder diskCount(@Nullable Integer diskCount) {
            this.diskCount = diskCount;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {
            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder sysDiskCapacity(Integer sysDiskCapacity) {
            this.sysDiskCapacity = Objects.requireNonNull(sysDiskCapacity);
            return this;
        }
        @CustomType.Setter
        public Builder sysDiskType(String sysDiskType) {
            this.sysDiskType = Objects.requireNonNull(sysDiskType);
            return this;
        }
        @CustomType.Setter
        public Builder systemDiskPerformanceLevel(@Nullable String systemDiskPerformanceLevel) {
            this.systemDiskPerformanceLevel = systemDiskPerformanceLevel;
            return this;
        }
        public DedicatedPropreHostEcsClassList build() {
            final var o = new DedicatedPropreHostEcsClassList();
            o.dataDiskPerformanceLevel = dataDiskPerformanceLevel;
            o.diskCapacity = diskCapacity;
            o.diskCount = diskCount;
            o.diskType = diskType;
            o.instanceType = instanceType;
            o.sysDiskCapacity = sysDiskCapacity;
            o.sysDiskType = sysDiskType;
            o.systemDiskPerformanceLevel = systemDiskPerformanceLevel;
            return o;
        }
    }
}
