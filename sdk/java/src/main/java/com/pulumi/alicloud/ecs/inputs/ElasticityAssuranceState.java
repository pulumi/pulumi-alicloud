// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticityAssuranceState extends com.pulumi.resources.ResourceArgs {

    public static final ElasticityAssuranceState Empty = new ElasticityAssuranceState();

    /**
     * The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
     * 
     */
    @Import(name="assuranceTimes")
    private @Nullable Output<String> assuranceTimes;

    /**
     * @return The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
     * 
     */
    public Optional<Output<String>> assuranceTimes() {
        return Optional.ofNullable(this.assuranceTimes);
    }

    /**
     * Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
     * - true
     * - false
     * 
     * Default value: `false`.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
     * - true
     * - false
     * 
     * Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
     * - Default value when `PeriodUnit` is set to Month: 1.
     * - Default value when `PeriodUnit` is set to Year: 12.
     * 
     * &gt; **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
     * 
     */
    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    /**
     * @return The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
     * - Default value when `PeriodUnit` is set to Month: 1.
     * - Default value when `PeriodUnit` is set to Year: 12.
     * 
     * &gt; **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
     * 
     */
    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * Unit of duration. Value range:
     * - Month: Month
     * - Year: Year
     * 
     * Default value: Year
     * 
     */
    @Import(name="autoRenewPeriodUnit")
    private @Nullable Output<String> autoRenewPeriodUnit;

    /**
     * @return Unit of duration. Value range:
     * - Month: Month
     * - Year: Year
     * 
     * Default value: Year
     * 
     */
    public Optional<Output<String>> autoRenewPeriodUnit() {
        return Optional.ofNullable(this.autoRenewPeriodUnit);
    }

    /**
     * Description of flexible guarantee service.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of flexible guarantee service.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The first ID of the resource
     * 
     */
    @Import(name="elasticityAssuranceId")
    private @Nullable Output<String> elasticityAssuranceId;

    /**
     * @return The first ID of the resource
     * 
     */
    public Optional<Output<String>> elasticityAssuranceId() {
        return Optional.ofNullable(this.elasticityAssuranceId);
    }

    /**
     * Flexible guarantee service failure time.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return Flexible guarantee service failure time.
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
     * 
     */
    @Import(name="instanceAmount")
    private @Nullable Output<Integer> instanceAmount;

    /**
     * @return The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
     * 
     */
    public Optional<Output<Integer>> instanceAmount() {
        return Optional.ofNullable(this.instanceAmount);
    }

    /**
     * The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * Instance type. Currently, only one instance type is supported.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Instance type. Currently, only one instance type is supported.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Length of purchase. The unit of duration is determined by the &#39;period_unit&#39; parameter. Default value: 1.
     * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Length of purchase. The unit of duration is determined by the &#39;period_unit&#39; parameter. Default value: 1.
     * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
     * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
     * 
     */
    @Import(name="periodUnit")
    private @Nullable Output<String> periodUnit;

    /**
     * @return Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
     * 
     */
    public Optional<Output<String>> periodUnit() {
        return Optional.ofNullable(this.periodUnit);
    }

    /**
     * The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     * 
     */
    @Import(name="privatePoolOptionsMatchCriteria")
    private @Nullable Output<String> privatePoolOptionsMatchCriteria;

    /**
     * @return The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     * 
     */
    public Optional<Output<String>> privatePoolOptionsMatchCriteria() {
        return Optional.ofNullable(this.privatePoolOptionsMatchCriteria);
    }

    /**
     * The name of the flexible protection service.
     * 
     */
    @Import(name="privatePoolOptionsName")
    private @Nullable Output<String> privatePoolOptionsName;

    /**
     * @return The name of the flexible protection service.
     * 
     */
    public Optional<Output<String>> privatePoolOptionsName() {
        return Optional.ofNullable(this.privatePoolOptionsName);
    }

    /**
     * (Available since v1.261.0) The region ID of the elasticity assurance.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return (Available since v1.261.0) The region ID of the elasticity assurance.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Flexible guarantee service effective time.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return Flexible guarantee service effective time.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     * 
     */
    @Import(name="startTimeType")
    private @Nullable Output<String> startTimeType;

    /**
     * @return Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     * 
     */
    public Optional<Output<String>> startTimeType() {
        return Optional.ofNullable(this.startTimeType);
    }

    /**
     * The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag key-value pair information bound by the elastic guarantee service.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag key-value pair information bound by the elastic guarantee service.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * This parameter is not yet available.
     * 
     */
    @Import(name="usedAssuranceTimes")
    private @Nullable Output<Integer> usedAssuranceTimes;

    /**
     * @return This parameter is not yet available.
     * 
     */
    public Optional<Output<Integer>> usedAssuranceTimes() {
        return Optional.ofNullable(this.usedAssuranceTimes);
    }

    /**
     * The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
     * 
     */
    @Import(name="zoneIds")
    private @Nullable Output<List<String>> zoneIds;

    /**
     * @return The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
     * 
     */
    public Optional<Output<List<String>>> zoneIds() {
        return Optional.ofNullable(this.zoneIds);
    }

    private ElasticityAssuranceState() {}

    private ElasticityAssuranceState(ElasticityAssuranceState $) {
        this.assuranceTimes = $.assuranceTimes;
        this.autoRenew = $.autoRenew;
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.autoRenewPeriodUnit = $.autoRenewPeriodUnit;
        this.description = $.description;
        this.elasticityAssuranceId = $.elasticityAssuranceId;
        this.endTime = $.endTime;
        this.instanceAmount = $.instanceAmount;
        this.instanceChargeType = $.instanceChargeType;
        this.instanceType = $.instanceType;
        this.period = $.period;
        this.periodUnit = $.periodUnit;
        this.privatePoolOptionsMatchCriteria = $.privatePoolOptionsMatchCriteria;
        this.privatePoolOptionsName = $.privatePoolOptionsName;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.startTime = $.startTime;
        this.startTimeType = $.startTimeType;
        this.status = $.status;
        this.tags = $.tags;
        this.usedAssuranceTimes = $.usedAssuranceTimes;
        this.zoneIds = $.zoneIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticityAssuranceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticityAssuranceState $;

        public Builder() {
            $ = new ElasticityAssuranceState();
        }

        public Builder(ElasticityAssuranceState defaults) {
            $ = new ElasticityAssuranceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param assuranceTimes The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
         * 
         * @return builder
         * 
         */
        public Builder assuranceTimes(@Nullable Output<String> assuranceTimes) {
            $.assuranceTimes = assuranceTimes;
            return this;
        }

        /**
         * @param assuranceTimes The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
         * 
         * @return builder
         * 
         */
        public Builder assuranceTimes(String assuranceTimes) {
            return assuranceTimes(Output.of(assuranceTimes));
        }

        /**
         * @param autoRenew Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
         * - true
         * - false
         * 
         * Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Specifies whether to enable auto-renewal for the elasticity assurance. Valid values:
         * - true
         * - false
         * 
         * Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewPeriod The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
         * - Default value when `PeriodUnit` is set to Month: 1.
         * - Default value when `PeriodUnit` is set to Year: 12.
         * 
         * &gt; **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        /**
         * @param autoRenewPeriod The auto-renewal period. Unit: month. Valid values: 1, 2, 3, 6, 12, 24, and 36.
         * - Default value when `PeriodUnit` is set to Month: 1.
         * - Default value when `PeriodUnit` is set to Year: 12.
         * 
         * &gt; **NOTE:**  If you set `AutoRenew` to true, you must specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param autoRenewPeriodUnit Unit of duration. Value range:
         * - Month: Month
         * - Year: Year
         * 
         * Default value: Year
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriodUnit(@Nullable Output<String> autoRenewPeriodUnit) {
            $.autoRenewPeriodUnit = autoRenewPeriodUnit;
            return this;
        }

        /**
         * @param autoRenewPeriodUnit Unit of duration. Value range:
         * - Month: Month
         * - Year: Year
         * 
         * Default value: Year
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriodUnit(String autoRenewPeriodUnit) {
            return autoRenewPeriodUnit(Output.of(autoRenewPeriodUnit));
        }

        /**
         * @param description Description of flexible guarantee service.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of flexible guarantee service.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param elasticityAssuranceId The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder elasticityAssuranceId(@Nullable Output<String> elasticityAssuranceId) {
            $.elasticityAssuranceId = elasticityAssuranceId;
            return this;
        }

        /**
         * @param elasticityAssuranceId The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder elasticityAssuranceId(String elasticityAssuranceId) {
            return elasticityAssuranceId(Output.of(elasticityAssuranceId));
        }

        /**
         * @param endTime Flexible guarantee service failure time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime Flexible guarantee service failure time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param instanceAmount The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder instanceAmount(@Nullable Output<Integer> instanceAmount) {
            $.instanceAmount = instanceAmount;
            return this;
        }

        /**
         * @param instanceAmount The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000. **NOTE:** From version 1.261.0, `instanceAmount` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder instanceAmount(Integer instanceAmount) {
            return instanceAmount(Output.of(instanceAmount));
        }

        /**
         * @param instanceChargeType The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param instanceType Instance type. Currently, only one instance type is supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Instance type. Currently, only one instance type is supported.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param period Length of purchase. The unit of duration is determined by the &#39;period_unit&#39; parameter. Default value: 1.
         * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
         * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Length of purchase. The unit of duration is determined by the &#39;period_unit&#39; parameter. Default value: 1.
         * - When the `periodUnit` parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
         * - When the `periodUnit` parameter is set to Year, the valid values are 1, 2, 3, 4, and 5.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param periodUnit Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
         * 
         * @return builder
         * 
         */
        public Builder periodUnit(@Nullable Output<String> periodUnit) {
            $.periodUnit = periodUnit;
            return this;
        }

        /**
         * @param periodUnit Duration unit. Value range:-Month: Month-Year: YearDefault value: Year
         * 
         * @return builder
         * 
         */
        public Builder periodUnit(String periodUnit) {
            return periodUnit(Output.of(periodUnit));
        }

        /**
         * @param privatePoolOptionsMatchCriteria The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolOptionsMatchCriteria(@Nullable Output<String> privatePoolOptionsMatchCriteria) {
            $.privatePoolOptionsMatchCriteria = privatePoolOptionsMatchCriteria;
            return this;
        }

        /**
         * @param privatePoolOptionsMatchCriteria The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolOptionsMatchCriteria(String privatePoolOptionsMatchCriteria) {
            return privatePoolOptionsMatchCriteria(Output.of(privatePoolOptionsMatchCriteria));
        }

        /**
         * @param privatePoolOptionsName The name of the flexible protection service.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolOptionsName(@Nullable Output<String> privatePoolOptionsName) {
            $.privatePoolOptionsName = privatePoolOptionsName;
            return this;
        }

        /**
         * @param privatePoolOptionsName The name of the flexible protection service.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolOptionsName(String privatePoolOptionsName) {
            return privatePoolOptionsName(Output.of(privatePoolOptionsName));
        }

        /**
         * @param regionId (Available since v1.261.0) The region ID of the elasticity assurance.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId (Available since v1.261.0) The region ID of the elasticity assurance.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param startTime Flexible guarantee service effective time.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Flexible guarantee service effective time.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param startTimeType Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
         * 
         * @return builder
         * 
         */
        public Builder startTimeType(@Nullable Output<String> startTimeType) {
            $.startTimeType = startTimeType;
            return this;
        }

        /**
         * @param startTimeType Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
         * 
         * @return builder
         * 
         */
        public Builder startTimeType(String startTimeType) {
            return startTimeType(Output.of(startTimeType));
        }

        /**
         * @param status The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tag key-value pair information bound by the elastic guarantee service.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag key-value pair information bound by the elastic guarantee service.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param usedAssuranceTimes This parameter is not yet available.
         * 
         * @return builder
         * 
         */
        public Builder usedAssuranceTimes(@Nullable Output<Integer> usedAssuranceTimes) {
            $.usedAssuranceTimes = usedAssuranceTimes;
            return this;
        }

        /**
         * @param usedAssuranceTimes This parameter is not yet available.
         * 
         * @return builder
         * 
         */
        public Builder usedAssuranceTimes(Integer usedAssuranceTimes) {
            return usedAssuranceTimes(Output.of(usedAssuranceTimes));
        }

        /**
         * @param zoneIds The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(@Nullable Output<List<String>> zoneIds) {
            $.zoneIds = zoneIds;
            return this;
        }

        /**
         * @param zoneIds The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(List<String> zoneIds) {
            return zoneIds(Output.of(zoneIds));
        }

        /**
         * @param zoneIds The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(String... zoneIds) {
            return zoneIds(List.of(zoneIds));
        }

        public ElasticityAssuranceState build() {
            return $;
        }
    }

}
