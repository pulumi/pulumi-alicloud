// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleArgs Empty = new RoleArgs();

    /**
     * The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
     * 
     */
    @Import(name="assumeRolePolicyDocument")
    private @Nullable Output<String> assumeRolePolicyDocument;

    /**
     * @return The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
     * 
     */
    public Optional<Output<String>> assumeRolePolicyDocument() {
        return Optional.ofNullable(this.assumeRolePolicyDocument);
    }

    /**
     * The description of the RAM role.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the RAM role.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Field `document` has been deprecated from provider version 1.252.0. New field `assumeRolePolicyDocument` instead.
     * 
     * @deprecated
     * Field &#39;document&#39; has been deprecated from provider version 1.252.0. New field &#39;assume_role_policy_document&#39; instead.
     * 
     */
    @Deprecated /* Field 'document' has been deprecated from provider version 1.252.0. New field 'assume_role_policy_document' instead. */
    @Import(name="document")
    private @Nullable Output<String> document;

    /**
     * @return Field `document` has been deprecated from provider version 1.252.0. New field `assumeRolePolicyDocument` instead.
     * 
     * @deprecated
     * Field &#39;document&#39; has been deprecated from provider version 1.252.0. New field &#39;assume_role_policy_document&#39; instead.
     * 
     */
    @Deprecated /* Field 'document' has been deprecated from provider version 1.252.0. New field 'assume_role_policy_document' instead. */
    public Optional<Output<String>> document() {
        return Optional.ofNullable(this.document);
    }

    /**
     * Specifies whether to force delete the Role. Default value: `false`. Valid values:
     * 
     */
    @Import(name="force")
    private @Nullable Output<Boolean> force;

    /**
     * @return Specifies whether to force delete the Role. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> force() {
        return Optional.ofNullable(this.force);
    }

    /**
     * The maximum session time of the RAM role. Default value: `3600`. Valid values: `3600` to `43200`.
     * 
     */
    @Import(name="maxSessionDuration")
    private @Nullable Output<Integer> maxSessionDuration;

    /**
     * @return The maximum session time of the RAM role. Default value: `3600`. Valid values: `3600` to `43200`.
     * 
     */
    public Optional<Output<Integer>> maxSessionDuration() {
        return Optional.ofNullable(this.maxSessionDuration);
    }

    /**
     * Field `name` has been deprecated from provider version 1.252.0. New field `roleName` instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.252.0. New field &#39;role_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.252.0. New field 'role_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Field `name` has been deprecated from provider version 1.252.0. New field `roleName` instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.252.0. New field &#39;role_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.252.0. New field 'role_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Field `ramUsers` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;ram_users&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'ram_users' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    @Import(name="ramUsers")
    private @Nullable Output<List<String>> ramUsers;

    /**
     * @return Field `ramUsers` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;ram_users&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'ram_users' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    public Optional<Output<List<String>>> ramUsers() {
        return Optional.ofNullable(this.ramUsers);
    }

    /**
     * The name of the RAM role.
     * 
     */
    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    /**
     * @return The name of the RAM role.
     * 
     */
    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    /**
     * Field `services` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;services&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'services' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    @Import(name="services")
    private @Nullable Output<List<String>> services;

    /**
     * @return Field `services` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;services&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'services' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    public Optional<Output<List<String>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * The list of tags for the role.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The list of tags for the role.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;version&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'version' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;version&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
     * 
     */
    @Deprecated /* Field 'version' has been deprecated from provider version 1.49.0. New field 'document' instead. */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private RoleArgs() {}

    private RoleArgs(RoleArgs $) {
        this.assumeRolePolicyDocument = $.assumeRolePolicyDocument;
        this.description = $.description;
        this.document = $.document;
        this.force = $.force;
        this.maxSessionDuration = $.maxSessionDuration;
        this.name = $.name;
        this.ramUsers = $.ramUsers;
        this.roleName = $.roleName;
        this.services = $.services;
        this.tags = $.tags;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleArgs $;

        public Builder() {
            $ = new RoleArgs();
        }

        public Builder(RoleArgs defaults) {
            $ = new RoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assumeRolePolicyDocument The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
         * 
         * @return builder
         * 
         */
        public Builder assumeRolePolicyDocument(@Nullable Output<String> assumeRolePolicyDocument) {
            $.assumeRolePolicyDocument = assumeRolePolicyDocument;
            return this;
        }

        /**
         * @param assumeRolePolicyDocument The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
         * 
         * @return builder
         * 
         */
        public Builder assumeRolePolicyDocument(String assumeRolePolicyDocument) {
            return assumeRolePolicyDocument(Output.of(assumeRolePolicyDocument));
        }

        /**
         * @param description The description of the RAM role.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the RAM role.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param document Field `document` has been deprecated from provider version 1.252.0. New field `assumeRolePolicyDocument` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;document&#39; has been deprecated from provider version 1.252.0. New field &#39;assume_role_policy_document&#39; instead.
         * 
         */
        @Deprecated /* Field 'document' has been deprecated from provider version 1.252.0. New field 'assume_role_policy_document' instead. */
        public Builder document(@Nullable Output<String> document) {
            $.document = document;
            return this;
        }

        /**
         * @param document Field `document` has been deprecated from provider version 1.252.0. New field `assumeRolePolicyDocument` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;document&#39; has been deprecated from provider version 1.252.0. New field &#39;assume_role_policy_document&#39; instead.
         * 
         */
        @Deprecated /* Field 'document' has been deprecated from provider version 1.252.0. New field 'assume_role_policy_document' instead. */
        public Builder document(String document) {
            return document(Output.of(document));
        }

        /**
         * @param force Specifies whether to force delete the Role. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder force(@Nullable Output<Boolean> force) {
            $.force = force;
            return this;
        }

        /**
         * @param force Specifies whether to force delete the Role. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder force(Boolean force) {
            return force(Output.of(force));
        }

        /**
         * @param maxSessionDuration The maximum session time of the RAM role. Default value: `3600`. Valid values: `3600` to `43200`.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(@Nullable Output<Integer> maxSessionDuration) {
            $.maxSessionDuration = maxSessionDuration;
            return this;
        }

        /**
         * @param maxSessionDuration The maximum session time of the RAM role. Default value: `3600`. Valid values: `3600` to `43200`.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(Integer maxSessionDuration) {
            return maxSessionDuration(Output.of(maxSessionDuration));
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.252.0. New field `roleName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.252.0. New field &#39;role_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.252.0. New field 'role_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.252.0. New field `roleName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.252.0. New field &#39;role_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.252.0. New field 'role_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ramUsers Field `ramUsers` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ram_users&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'ram_users' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder ramUsers(@Nullable Output<List<String>> ramUsers) {
            $.ramUsers = ramUsers;
            return this;
        }

        /**
         * @param ramUsers Field `ramUsers` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ram_users&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'ram_users' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder ramUsers(List<String> ramUsers) {
            return ramUsers(Output.of(ramUsers));
        }

        /**
         * @param ramUsers Field `ramUsers` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ram_users&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'ram_users' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder ramUsers(String... ramUsers) {
            return ramUsers(List.of(ramUsers));
        }

        /**
         * @param roleName The name of the RAM role.
         * 
         * @return builder
         * 
         */
        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName The name of the RAM role.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        /**
         * @param services Field `services` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;services&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'services' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder services(@Nullable Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services Field `services` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;services&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'services' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services Field `services` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;services&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'services' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        /**
         * @param tags The list of tags for the role.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The list of tags for the role.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param version Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;version&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'version' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;version&#39; has been deprecated from provider version 1.49.0. New field &#39;document&#39; instead.
         * 
         */
        @Deprecated /* Field 'version' has been deprecated from provider version 1.49.0. New field 'document' instead. */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public RoleArgs build() {
            return $;
        }
    }

}
