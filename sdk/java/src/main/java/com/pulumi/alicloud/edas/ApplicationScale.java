// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.edas.ApplicationScaleArgs;
import com.pulumi.alicloud.edas.inputs.ApplicationScaleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This operation is provided to scale out an EDAS application, see [What is EDAS Application Scale](https://www.alibabacloud.com/help/en/edas/developer-reference/api-edas-2017-08-01-scaleoutapplication).
 * 
 * &gt; **NOTE:** Available since v1.82.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetRegionsArgs;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.edas.Cluster;
 * import com.pulumi.alicloud.edas.ClusterArgs;
 * import com.pulumi.alicloud.edas.InstanceClusterAttachment;
 * import com.pulumi.alicloud.edas.InstanceClusterAttachmentArgs;
 * import com.pulumi.alicloud.edas.Application;
 * import com.pulumi.alicloud.edas.ApplicationArgs;
 * import com.pulumi.alicloud.edas.DeployGroup;
 * import com.pulumi.alicloud.edas.DeployGroupArgs;
 * import com.pulumi.alicloud.edas.EdasFunctions;
 * import com.pulumi.alicloud.edas.inputs.GetDeployGroupsArgs;
 * import com.pulumi.alicloud.edas.ApplicationScale;
 * import com.pulumi.alicloud.edas.ApplicationScaleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
 *             .owners("system")
 *             .build());
 * 
 *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(defaultGetZones.zones()[0].id())
 *             .cpuCoreCount(1)
 *             .memorySize(2)
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vswitchName(name)
 *             .cidrBlock("10.4.0.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(defaultGetZones.zones()[0].id())
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
 *             .availabilityZone(defaultGetZones.zones()[0].id())
 *             .instanceName(name)
 *             .imageId(defaultGetImages.images()[0].id())
 *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
 *             .securityGroups(defaultSecurityGroup.id())
 *             .vswitchId(defaultSwitch.id())
 *             .internetMaxBandwidthOut(10)
 *             .internetChargeType("PayByTraffic")
 *             .instanceChargeType("PostPaid")
 *             .systemDiskCategory("cloud_efficiency")
 *             .build());
 * 
 *         var defaultCluster = new Cluster("defaultCluster", ClusterArgs.builder()
 *             .clusterName(name)
 *             .clusterType(2)
 *             .networkMode(2)
 *             .logicalRegionId(default_.regions()[0].id())
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultInstanceClusterAttachment = new InstanceClusterAttachment("defaultInstanceClusterAttachment", InstanceClusterAttachmentArgs.builder()
 *             .clusterId(defaultCluster.id())
 *             .instanceIds(defaultInstance.id())
 *             .build());
 * 
 *         var defaultApplication = new Application("defaultApplication", ApplicationArgs.builder()
 *             .applicationName(name)
 *             .clusterId(defaultCluster.id())
 *             .packageType("WAR")
 *             .build());
 * 
 *         var defaultDeployGroup = new DeployGroup("defaultDeployGroup", DeployGroupArgs.builder()
 *             .appId(defaultApplication.id())
 *             .groupName(name)
 *             .build());
 * 
 *         final var defaultGetDeployGroups = EdasFunctions.getDeployGroups(GetDeployGroupsArgs.builder()
 *             .appId(defaultDeployGroup.appId())
 *             .build());
 * 
 *         var defaultApplicationScale = new ApplicationScale("defaultApplicationScale", ApplicationScaleArgs.builder()
 *             .appId(defaultApplication.id())
 *             .deployGroup(defaultGetDeployGroups.applyValue(_defaultGetDeployGroups -> _defaultGetDeployGroups.groups()[0].groupId()))
 *             .ecuInfos(Output.tuple(defaultInstanceClusterAttachment.ecuMap(), defaultInstance.id()).applyValue(values -> {
 *                 var ecuMap = values.t1;
 *                 var id = values.t2;
 *                 return ecuMap[id];
 *             }))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="alicloud:edas/applicationScale:ApplicationScale")
public class ApplicationScale extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the application that you want to deploy.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The ID of the application that you want to deploy.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The ID of the instance group to which you want to add ECS instances to scale out the application.
     * 
     */
    @Export(name="deployGroup", refs={String.class}, tree="[0]")
    private Output<String> deployGroup;

    /**
     * @return The ID of the instance group to which you want to add ECS instances to scale out the application.
     * 
     */
    public Output<String> deployGroup() {
        return this.deployGroup;
    }
    /**
     * The ecc information of the resource supplied above. The value is formulated as `&lt;ecc1,ecc2&gt;`.
     * 
     */
    @Export(name="eccInfo", refs={String.class}, tree="[0]")
    private Output<String> eccInfo;

    /**
     * @return The ecc information of the resource supplied above. The value is formulated as `&lt;ecc1,ecc2&gt;`.
     * 
     */
    public Output<String> eccInfo() {
        return this.eccInfo;
    }
    /**
     * The IDs of the Elastic Compute Unit (ECU) where you want to deploy the application. Type: List.
     * 
     */
    @Export(name="ecuInfos", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> ecuInfos;

    /**
     * @return The IDs of the Elastic Compute Unit (ECU) where you want to deploy the application. Type: List.
     * 
     */
    public Output<List<String>> ecuInfos() {
        return this.ecuInfos;
    }
    /**
     * This parameter specifies whether to forcibly remove an ECS instance where the application is deployed. It is set as true only after the ECS instance expires. In normal cases, this parameter do not need to be specified.
     * 
     */
    @Export(name="forceStatus", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceStatus;

    /**
     * @return This parameter specifies whether to forcibly remove an ECS instance where the application is deployed. It is set as true only after the ECS instance expires. In normal cases, this parameter do not need to be specified.
     * 
     */
    public Output<Optional<Boolean>> forceStatus() {
        return Codegen.optional(this.forceStatus);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationScale(java.lang.String name) {
        this(name, ApplicationScaleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationScale(java.lang.String name, ApplicationScaleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationScale(java.lang.String name, ApplicationScaleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/applicationScale:ApplicationScale", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ApplicationScale(java.lang.String name, Output<java.lang.String> id, @Nullable ApplicationScaleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/applicationScale:ApplicationScale", name, state, makeResourceOptions(options, id), false);
    }

    private static ApplicationScaleArgs makeArgs(ApplicationScaleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ApplicationScaleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationScale get(java.lang.String name, Output<java.lang.String> id, @Nullable ApplicationScaleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationScale(name, id, state, options);
    }
}
