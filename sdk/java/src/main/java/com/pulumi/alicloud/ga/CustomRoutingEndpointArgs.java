// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomRoutingEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomRoutingEndpointArgs Empty = new CustomRoutingEndpointArgs();

    /**
     * The ID of the endpoint (vSwitch).
     * 
     */
    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    /**
     * @return The ID of the endpoint (vSwitch).
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }

    /**
     * The ID of the endpoint group in which to create endpoints.
     * 
     */
    @Import(name="endpointGroupId", required=true)
    private Output<String> endpointGroupId;

    /**
     * @return The ID of the endpoint group in which to create endpoints.
     * 
     */
    public Output<String> endpointGroupId() {
        return this.endpointGroupId;
    }

    /**
     * The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
     * 
     */
    @Import(name="trafficToEndpointPolicy")
    private @Nullable Output<String> trafficToEndpointPolicy;

    /**
     * @return The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
     * 
     */
    public Optional<Output<String>> trafficToEndpointPolicy() {
        return Optional.ofNullable(this.trafficToEndpointPolicy);
    }

    /**
     * The backend service type of the endpoint. Valid values: `PrivateSubNet`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The backend service type of the endpoint. Valid values: `PrivateSubNet`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private CustomRoutingEndpointArgs() {}

    private CustomRoutingEndpointArgs(CustomRoutingEndpointArgs $) {
        this.endpoint = $.endpoint;
        this.endpointGroupId = $.endpointGroupId;
        this.trafficToEndpointPolicy = $.trafficToEndpointPolicy;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomRoutingEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomRoutingEndpointArgs $;

        public Builder() {
            $ = new CustomRoutingEndpointArgs();
        }

        public Builder(CustomRoutingEndpointArgs defaults) {
            $ = new CustomRoutingEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpoint The ID of the endpoint (vSwitch).
         * 
         * @return builder
         * 
         */
        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The ID of the endpoint (vSwitch).
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param endpointGroupId The ID of the endpoint group in which to create endpoints.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(Output<String> endpointGroupId) {
            $.endpointGroupId = endpointGroupId;
            return this;
        }

        /**
         * @param endpointGroupId The ID of the endpoint group in which to create endpoints.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(String endpointGroupId) {
            return endpointGroupId(Output.of(endpointGroupId));
        }

        /**
         * @param trafficToEndpointPolicy The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder trafficToEndpointPolicy(@Nullable Output<String> trafficToEndpointPolicy) {
            $.trafficToEndpointPolicy = trafficToEndpointPolicy;
            return this;
        }

        /**
         * @param trafficToEndpointPolicy The access policy of traffic to the endpoint. Default value: `DenyAll`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder trafficToEndpointPolicy(String trafficToEndpointPolicy) {
            return trafficToEndpointPolicy(Output.of(trafficToEndpointPolicy));
        }

        /**
         * @param type The backend service type of the endpoint. Valid values: `PrivateSubNet`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The backend service type of the endpoint. Valid values: `PrivateSubNet`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CustomRoutingEndpointArgs build() {
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            $.endpointGroupId = Objects.requireNonNull($.endpointGroupId, "expected parameter 'endpointGroupId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
