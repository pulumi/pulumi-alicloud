// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HandshakeArgs extends com.pulumi.resources.ResourceArgs {

    public static final HandshakeArgs Empty = new HandshakeArgs();

    /**
     * The description of the invitation.
     * The description can be up to 1,024 characters in length.
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return The description of the invitation.
     * The description can be up to 1,024 characters in length.
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * The ID or logon email address of the account that you want to invite.
     * 
     */
    @Import(name="targetEntity", required=true)
    private Output<String> targetEntity;

    /**
     * @return The ID or logon email address of the account that you want to invite.
     * 
     */
    public Output<String> targetEntity() {
        return this.targetEntity;
    }

    /**
     * The type of the invited account. Valid values:
     * 
     * - Account: indicates the ID of the account.
     * - Email: indicates the logon email address of the account.
     * 
     */
    @Import(name="targetType", required=true)
    private Output<String> targetType;

    /**
     * @return The type of the invited account. Valid values:
     * 
     * - Account: indicates the ID of the account.
     * - Email: indicates the logon email address of the account.
     * 
     */
    public Output<String> targetType() {
        return this.targetType;
    }

    private HandshakeArgs() {}

    private HandshakeArgs(HandshakeArgs $) {
        this.note = $.note;
        this.targetEntity = $.targetEntity;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HandshakeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HandshakeArgs $;

        public Builder() {
            $ = new HandshakeArgs();
        }

        public Builder(HandshakeArgs defaults) {
            $ = new HandshakeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param note The description of the invitation.
         * The description can be up to 1,024 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note The description of the invitation.
         * The description can be up to 1,024 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @param targetEntity The ID or logon email address of the account that you want to invite.
         * 
         * @return builder
         * 
         */
        public Builder targetEntity(Output<String> targetEntity) {
            $.targetEntity = targetEntity;
            return this;
        }

        /**
         * @param targetEntity The ID or logon email address of the account that you want to invite.
         * 
         * @return builder
         * 
         */
        public Builder targetEntity(String targetEntity) {
            return targetEntity(Output.of(targetEntity));
        }

        /**
         * @param targetType The type of the invited account. Valid values:
         * 
         * - Account: indicates the ID of the account.
         * - Email: indicates the logon email address of the account.
         * 
         * @return builder
         * 
         */
        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The type of the invited account. Valid values:
         * 
         * - Account: indicates the ID of the account.
         * - Email: indicates the logon email address of the account.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public HandshakeArgs build() {
            if ($.targetEntity == null) {
                throw new MissingRequiredPropertyException("HandshakeArgs", "targetEntity");
            }
            if ($.targetType == null) {
                throw new MissingRequiredPropertyException("HandshakeArgs", "targetType");
            }
            return $;
        }
    }

}
