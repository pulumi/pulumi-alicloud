// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPrometheisPromethei {
    /**
     * @return The ID of the cluster.
     * 
     */
    private String clusterId;
    /**
     * @return The name of the cluster.
     * 
     */
    private String clusterName;
    /**
     * @return The type of the cluster.
     * 
     */
    private String clusterType;
    /**
     * @return The ID of the Grafana workspace.
     * 
     */
    private String grafanaInstanceId;
    /**
     * @return The ID of the Prometheus.
     * 
     */
    private String id;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The ID of the security group.
     * 
     */
    private String securityGroupId;
    /**
     * @return The child instance json string of the globalView instance.
     * 
     */
    private String subClustersJson;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return The ID of the VPC.
     * 
     */
    private String vpcId;
    /**
     * @return The ID of the VSwitch.
     * 
     */
    private String vswitchId;

    private GetPrometheisPromethei() {}
    /**
     * @return The ID of the cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The name of the cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The type of the cluster.
     * 
     */
    public String clusterType() {
        return this.clusterType;
    }
    /**
     * @return The ID of the Grafana workspace.
     * 
     */
    public String grafanaInstanceId() {
        return this.grafanaInstanceId;
    }
    /**
     * @return The ID of the Prometheus.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The ID of the security group.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return The child instance json string of the globalView instance.
     * 
     */
    public String subClustersJson() {
        return this.subClustersJson;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return The ID of the VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The ID of the VSwitch.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrometheisPromethei defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String clusterName;
        private String clusterType;
        private String grafanaInstanceId;
        private String id;
        private String resourceGroupId;
        private String securityGroupId;
        private String subClustersJson;
        private Map<String,Object> tags;
        private String vpcId;
        private String vswitchId;
        public Builder() {}
        public Builder(GetPrometheisPromethei defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.clusterName = defaults.clusterName;
    	      this.clusterType = defaults.clusterType;
    	      this.grafanaInstanceId = defaults.grafanaInstanceId;
    	      this.id = defaults.id;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.subClustersJson = defaults.subClustersJson;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder clusterType(String clusterType) {
            this.clusterType = Objects.requireNonNull(clusterType);
            return this;
        }
        @CustomType.Setter
        public Builder grafanaInstanceId(String grafanaInstanceId) {
            this.grafanaInstanceId = Objects.requireNonNull(grafanaInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder subClustersJson(String subClustersJson) {
            this.subClustersJson = Objects.requireNonNull(subClustersJson);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }
        public GetPrometheisPromethei build() {
            final var o = new GetPrometheisPromethei();
            o.clusterId = clusterId;
            o.clusterName = clusterName;
            o.clusterType = clusterType;
            o.grafanaInstanceId = grafanaInstanceId;
            o.id = id;
            o.resourceGroupId = resourceGroupId;
            o.securityGroupId = securityGroupId;
            o.subClustersJson = subClustersJson;
            o.tags = tags;
            o.vpcId = vpcId;
            o.vswitchId = vswitchId;
            return o;
        }
    }
}
