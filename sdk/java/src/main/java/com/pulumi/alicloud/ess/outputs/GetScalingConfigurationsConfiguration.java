// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess.outputs;

import com.pulumi.alicloud.ess.outputs.GetScalingConfigurationsConfigurationDataDisk;
import com.pulumi.alicloud.ess.outputs.GetScalingConfigurationsConfigurationSpotPriceLimit;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScalingConfigurationsConfiguration {
    /**
     * @return Creation time of the scaling configuration.
     * 
     */
    private String creationTime;
    /**
     * @return Performance mode of the t5 burstable instance.
     * 
     */
    private String creditSpecification;
    /**
     * @return Data disks of the scaling configuration.
     * 
     */
    private List<GetScalingConfigurationsConfigurationDataDisk> dataDisks;
    /**
     * @return (Optional,Available in 1.143.0+) Hostname of an ECS instance.
     * 
     */
    private String hostName;
    /**
     * @return ID of the scaling rule.
     * 
     */
    private String id;
    /**
     * @return Image ID of the scaling configuration.
     * 
     */
    private String imageId;
    /**
     * @return (Optional,Available in 1.143.0+) InstanceName of an ECS instance.
     * 
     */
    private String instanceName;
    /**
     * @return Resource type of an ECS instance.
     * 
     */
    private String instanceType;
    /**
     * @return Internet charge type of the scaling configuration.
     * 
     */
    private String internetChargeType;
    /**
     * @return Internet max bandwidth in of the scaling configuration.
     * 
     */
    private Integer internetMaxBandwidthIn;
    /**
     * @return Internet max bandwidth of the scaling configuration.
     * 
     */
    private Integer internetMaxBandwidthOut;
    /**
     * @return Lifecycle state of the scaling configuration.
     * 
     */
    private String lifecycleState;
    /**
     * @return Name of the scaling configuration.
     * 
     */
    private String name;
    /**
     * @return Scaling group id the scaling configurations belong to.
     * 
     */
    private String scalingGroupId;
    /**
     * @return Security group ID of the scaling configuration.
     * 
     */
    private String securityGroupId;
    /**
     * @return (Optional, Available in 1.151.0+) The maximum price hourly for instance types.
     * 
     */
    private List<GetScalingConfigurationsConfigurationSpotPriceLimit> spotPriceLimits;
    /**
     * @return (Optional, Available in 1.151.0+) The spot strategy for a Pay-As-You-Go instance.
     * 
     */
    private String spotStrategy;
    /**
     * @return System disk category of the scaling configuration.
     * 
     */
    private String systemDiskCategory;
    /**
     * @return The performance level of the ESSD used as the system disk.
     * 
     */
    private String systemDiskPerformanceLevel;
    /**
     * @return System disk size of the scaling configuration.
     * 
     */
    private Integer systemDiskSize;

    private GetScalingConfigurationsConfiguration() {}
    /**
     * @return Creation time of the scaling configuration.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return Performance mode of the t5 burstable instance.
     * 
     */
    public String creditSpecification() {
        return this.creditSpecification;
    }
    /**
     * @return Data disks of the scaling configuration.
     * 
     */
    public List<GetScalingConfigurationsConfigurationDataDisk> dataDisks() {
        return this.dataDisks;
    }
    /**
     * @return (Optional,Available in 1.143.0+) Hostname of an ECS instance.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return ID of the scaling rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Image ID of the scaling configuration.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return (Optional,Available in 1.143.0+) InstanceName of an ECS instance.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return Resource type of an ECS instance.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return Internet charge type of the scaling configuration.
     * 
     */
    public String internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * @return Internet max bandwidth in of the scaling configuration.
     * 
     */
    public Integer internetMaxBandwidthIn() {
        return this.internetMaxBandwidthIn;
    }
    /**
     * @return Internet max bandwidth of the scaling configuration.
     * 
     */
    public Integer internetMaxBandwidthOut() {
        return this.internetMaxBandwidthOut;
    }
    /**
     * @return Lifecycle state of the scaling configuration.
     * 
     */
    public String lifecycleState() {
        return this.lifecycleState;
    }
    /**
     * @return Name of the scaling configuration.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Scaling group id the scaling configurations belong to.
     * 
     */
    public String scalingGroupId() {
        return this.scalingGroupId;
    }
    /**
     * @return Security group ID of the scaling configuration.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return (Optional, Available in 1.151.0+) The maximum price hourly for instance types.
     * 
     */
    public List<GetScalingConfigurationsConfigurationSpotPriceLimit> spotPriceLimits() {
        return this.spotPriceLimits;
    }
    /**
     * @return (Optional, Available in 1.151.0+) The spot strategy for a Pay-As-You-Go instance.
     * 
     */
    public String spotStrategy() {
        return this.spotStrategy;
    }
    /**
     * @return System disk category of the scaling configuration.
     * 
     */
    public String systemDiskCategory() {
        return this.systemDiskCategory;
    }
    /**
     * @return The performance level of the ESSD used as the system disk.
     * 
     */
    public String systemDiskPerformanceLevel() {
        return this.systemDiskPerformanceLevel;
    }
    /**
     * @return System disk size of the scaling configuration.
     * 
     */
    public Integer systemDiskSize() {
        return this.systemDiskSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScalingConfigurationsConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String creditSpecification;
        private List<GetScalingConfigurationsConfigurationDataDisk> dataDisks;
        private String hostName;
        private String id;
        private String imageId;
        private String instanceName;
        private String instanceType;
        private String internetChargeType;
        private Integer internetMaxBandwidthIn;
        private Integer internetMaxBandwidthOut;
        private String lifecycleState;
        private String name;
        private String scalingGroupId;
        private String securityGroupId;
        private List<GetScalingConfigurationsConfigurationSpotPriceLimit> spotPriceLimits;
        private String spotStrategy;
        private String systemDiskCategory;
        private String systemDiskPerformanceLevel;
        private Integer systemDiskSize;
        public Builder() {}
        public Builder(GetScalingConfigurationsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.creditSpecification = defaults.creditSpecification;
    	      this.dataDisks = defaults.dataDisks;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.internetChargeType = defaults.internetChargeType;
    	      this.internetMaxBandwidthIn = defaults.internetMaxBandwidthIn;
    	      this.internetMaxBandwidthOut = defaults.internetMaxBandwidthOut;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.name = defaults.name;
    	      this.scalingGroupId = defaults.scalingGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.spotPriceLimits = defaults.spotPriceLimits;
    	      this.spotStrategy = defaults.spotStrategy;
    	      this.systemDiskCategory = defaults.systemDiskCategory;
    	      this.systemDiskPerformanceLevel = defaults.systemDiskPerformanceLevel;
    	      this.systemDiskSize = defaults.systemDiskSize;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder creditSpecification(String creditSpecification) {
            this.creditSpecification = Objects.requireNonNull(creditSpecification);
            return this;
        }
        @CustomType.Setter
        public Builder dataDisks(List<GetScalingConfigurationsConfigurationDataDisk> dataDisks) {
            this.dataDisks = Objects.requireNonNull(dataDisks);
            return this;
        }
        public Builder dataDisks(GetScalingConfigurationsConfigurationDataDisk... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            this.instanceName = Objects.requireNonNull(instanceName);
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder internetChargeType(String internetChargeType) {
            this.internetChargeType = Objects.requireNonNull(internetChargeType);
            return this;
        }
        @CustomType.Setter
        public Builder internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
            this.internetMaxBandwidthIn = Objects.requireNonNull(internetMaxBandwidthIn);
            return this;
        }
        @CustomType.Setter
        public Builder internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
            this.internetMaxBandwidthOut = Objects.requireNonNull(internetMaxBandwidthOut);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleState(String lifecycleState) {
            this.lifecycleState = Objects.requireNonNull(lifecycleState);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder scalingGroupId(String scalingGroupId) {
            this.scalingGroupId = Objects.requireNonNull(scalingGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder spotPriceLimits(List<GetScalingConfigurationsConfigurationSpotPriceLimit> spotPriceLimits) {
            this.spotPriceLimits = Objects.requireNonNull(spotPriceLimits);
            return this;
        }
        public Builder spotPriceLimits(GetScalingConfigurationsConfigurationSpotPriceLimit... spotPriceLimits) {
            return spotPriceLimits(List.of(spotPriceLimits));
        }
        @CustomType.Setter
        public Builder spotStrategy(String spotStrategy) {
            this.spotStrategy = Objects.requireNonNull(spotStrategy);
            return this;
        }
        @CustomType.Setter
        public Builder systemDiskCategory(String systemDiskCategory) {
            this.systemDiskCategory = Objects.requireNonNull(systemDiskCategory);
            return this;
        }
        @CustomType.Setter
        public Builder systemDiskPerformanceLevel(String systemDiskPerformanceLevel) {
            this.systemDiskPerformanceLevel = Objects.requireNonNull(systemDiskPerformanceLevel);
            return this;
        }
        @CustomType.Setter
        public Builder systemDiskSize(Integer systemDiskSize) {
            this.systemDiskSize = Objects.requireNonNull(systemDiskSize);
            return this;
        }
        public GetScalingConfigurationsConfiguration build() {
            final var o = new GetScalingConfigurationsConfiguration();
            o.creationTime = creationTime;
            o.creditSpecification = creditSpecification;
            o.dataDisks = dataDisks;
            o.hostName = hostName;
            o.id = id;
            o.imageId = imageId;
            o.instanceName = instanceName;
            o.instanceType = instanceType;
            o.internetChargeType = internetChargeType;
            o.internetMaxBandwidthIn = internetMaxBandwidthIn;
            o.internetMaxBandwidthOut = internetMaxBandwidthOut;
            o.lifecycleState = lifecycleState;
            o.name = name;
            o.scalingGroupId = scalingGroupId;
            o.securityGroupId = securityGroupId;
            o.spotPriceLimits = spotPriceLimits;
            o.spotStrategy = spotStrategy;
            o.systemDiskCategory = systemDiskCategory;
            o.systemDiskPerformanceLevel = systemDiskPerformanceLevel;
            o.systemDiskSize = systemDiskSize;
            return o;
        }
    }
}
