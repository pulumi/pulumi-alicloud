// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEtlsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEtlsPlainArgs Empty = new GetEtlsPlainArgs();

    /**
     * A list of Etl IDs. The value is formulated as `&lt;project&gt;:&lt;job_name&gt;`.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Etl IDs. The value is formulated as `&lt;project&gt;:&lt;job_name&gt;`.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Source Logstore Name.
     * 
     */
    @Import(name="logstore", required=true)
    private String logstore;

    /**
     * @return Source Logstore Name.
     * 
     */
    public String logstore() {
        return this.logstore;
    }

    /**
     * Query start row. The default value is 0.
     * 
     */
    @Import(name="offset")
    private @Nullable Integer offset;

    /**
     * @return Query start row. The default value is 0.
     * 
     */
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Project Name
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return Project Name
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * Specify the number of data processing tasks returned by the query
     * 
     */
    @Import(name="size")
    private @Nullable Integer size;

    /**
     * @return Specify the number of data processing tasks returned by the query
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    private GetEtlsPlainArgs() {}

    private GetEtlsPlainArgs(GetEtlsPlainArgs $) {
        this.ids = $.ids;
        this.logstore = $.logstore;
        this.offset = $.offset;
        this.outputFile = $.outputFile;
        this.project = $.project;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEtlsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEtlsPlainArgs $;

        public Builder() {
            $ = new GetEtlsPlainArgs();
        }

        public Builder(GetEtlsPlainArgs defaults) {
            $ = new GetEtlsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Etl IDs. The value is formulated as `&lt;project&gt;:&lt;job_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Etl IDs. The value is formulated as `&lt;project&gt;:&lt;job_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param logstore Source Logstore Name.
         * 
         * @return builder
         * 
         */
        public Builder logstore(String logstore) {
            $.logstore = logstore;
            return this;
        }

        /**
         * @param offset Query start row. The default value is 0.
         * 
         * @return builder
         * 
         */
        public Builder offset(@Nullable Integer offset) {
            $.offset = offset;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param project Project Name
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param size Specify the number of data processing tasks returned by the query
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Integer size) {
            $.size = size;
            return this;
        }

        public GetEtlsPlainArgs build() {
            if ($.logstore == null) {
                throw new MissingRequiredPropertyException("GetEtlsPlainArgs", "logstore");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetEtlsPlainArgs", "project");
            }
            return $;
        }
    }

}
