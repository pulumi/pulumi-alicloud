// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProductVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProductVersionArgs Empty = new ProductVersionArgs();

    /**
     * Whether the version is activated
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether the version is activated
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Version description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Version description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Administrator guidance
     * 
     */
    @Import(name="guidance")
    private @Nullable Output<String> guidance;

    /**
     * @return Administrator guidance
     * 
     */
    public Optional<Output<String>> guidance() {
        return Optional.ofNullable(this.guidance);
    }

    /**
     * Product ID
     * 
     */
    @Import(name="productId", required=true)
    private Output<String> productId;

    /**
     * @return Product ID
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="productVersionName", required=true)
    private Output<String> productVersionName;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> productVersionName() {
        return this.productVersionName;
    }

    /**
     * Template Type
     * 
     */
    @Import(name="templateType", required=true)
    private Output<String> templateType;

    /**
     * @return Template Type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }

    /**
     * Template URL
     * 
     */
    @Import(name="templateUrl", required=true)
    private Output<String> templateUrl;

    /**
     * @return Template URL
     * 
     */
    public Output<String> templateUrl() {
        return this.templateUrl;
    }

    private ProductVersionArgs() {}

    private ProductVersionArgs(ProductVersionArgs $) {
        this.active = $.active;
        this.description = $.description;
        this.guidance = $.guidance;
        this.productId = $.productId;
        this.productVersionName = $.productVersionName;
        this.templateType = $.templateType;
        this.templateUrl = $.templateUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProductVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProductVersionArgs $;

        public Builder() {
            $ = new ProductVersionArgs();
        }

        public Builder(ProductVersionArgs defaults) {
            $ = new ProductVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether the version is activated
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether the version is activated
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param description Version description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Version description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param guidance Administrator guidance
         * 
         * @return builder
         * 
         */
        public Builder guidance(@Nullable Output<String> guidance) {
            $.guidance = guidance;
            return this;
        }

        /**
         * @param guidance Administrator guidance
         * 
         * @return builder
         * 
         */
        public Builder guidance(String guidance) {
            return guidance(Output.of(guidance));
        }

        /**
         * @param productId Product ID
         * 
         * @return builder
         * 
         */
        public Builder productId(Output<String> productId) {
            $.productId = productId;
            return this;
        }

        /**
         * @param productId Product ID
         * 
         * @return builder
         * 
         */
        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        /**
         * @param productVersionName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder productVersionName(Output<String> productVersionName) {
            $.productVersionName = productVersionName;
            return this;
        }

        /**
         * @param productVersionName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder productVersionName(String productVersionName) {
            return productVersionName(Output.of(productVersionName));
        }

        /**
         * @param templateType Template Type
         * 
         * @return builder
         * 
         */
        public Builder templateType(Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType Template Type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param templateUrl Template URL
         * 
         * @return builder
         * 
         */
        public Builder templateUrl(Output<String> templateUrl) {
            $.templateUrl = templateUrl;
            return this;
        }

        /**
         * @param templateUrl Template URL
         * 
         * @return builder
         * 
         */
        public Builder templateUrl(String templateUrl) {
            return templateUrl(Output.of(templateUrl));
        }

        public ProductVersionArgs build() {
            if ($.productId == null) {
                throw new MissingRequiredPropertyException("ProductVersionArgs", "productId");
            }
            if ($.productVersionName == null) {
                throw new MissingRequiredPropertyException("ProductVersionArgs", "productVersionName");
            }
            if ($.templateType == null) {
                throw new MissingRequiredPropertyException("ProductVersionArgs", "templateType");
            }
            if ($.templateUrl == null) {
                throw new MissingRequiredPropertyException("ProductVersionArgs", "templateUrl");
            }
            return $;
        }
    }

}
