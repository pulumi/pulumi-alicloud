// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasegateway.outputs;

import com.pulumi.alicloud.databasegateway.outputs.GetGatewaysGatewayGatewayInstance;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGatewaysGateway {
    /**
     * @return The creation time of Gateway.
     * 
     */
    private String createTime;
    /**
     * @return The description of Gateway.
     * 
     */
    private String gatewayDesc;
    private List<GetGatewaysGatewayGatewayInstance> gatewayInstances;
    /**
     * @return The name of the Gateway.
     * 
     */
    private String gatewayName;
    /**
     * @return A host of information.
     * 
     */
    private String hosts;
    /**
     * @return The ID of Gateway.
     * 
     */
    private String id;
    /**
     * @return The Modify time of Gateway.
     * 
     */
    private String modifiedTime;
    /**
     * @return The parent node Id of Gateway.
     * 
     */
    private String parentId;
    /**
     * @return The status of gateway. Valid values: `EXCEPTION`, `NEW`, `RUNNING`, `STOPPED`.
     * 
     */
    private String status;
    /**
     * @return The user&#39;s id.
     * 
     */
    private String userId;

    private GetGatewaysGateway() {}
    /**
     * @return The creation time of Gateway.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of Gateway.
     * 
     */
    public String gatewayDesc() {
        return this.gatewayDesc;
    }
    public List<GetGatewaysGatewayGatewayInstance> gatewayInstances() {
        return this.gatewayInstances;
    }
    /**
     * @return The name of the Gateway.
     * 
     */
    public String gatewayName() {
        return this.gatewayName;
    }
    /**
     * @return A host of information.
     * 
     */
    public String hosts() {
        return this.hosts;
    }
    /**
     * @return The ID of Gateway.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Modify time of Gateway.
     * 
     */
    public String modifiedTime() {
        return this.modifiedTime;
    }
    /**
     * @return The parent node Id of Gateway.
     * 
     */
    public String parentId() {
        return this.parentId;
    }
    /**
     * @return The status of gateway. Valid values: `EXCEPTION`, `NEW`, `RUNNING`, `STOPPED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The user&#39;s id.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewaysGateway defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String gatewayDesc;
        private List<GetGatewaysGatewayGatewayInstance> gatewayInstances;
        private String gatewayName;
        private String hosts;
        private String id;
        private String modifiedTime;
        private String parentId;
        private String status;
        private String userId;
        public Builder() {}
        public Builder(GetGatewaysGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.gatewayDesc = defaults.gatewayDesc;
    	      this.gatewayInstances = defaults.gatewayInstances;
    	      this.gatewayName = defaults.gatewayName;
    	      this.hosts = defaults.hosts;
    	      this.id = defaults.id;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.parentId = defaults.parentId;
    	      this.status = defaults.status;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayDesc(String gatewayDesc) {
            if (gatewayDesc == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "gatewayDesc");
            }
            this.gatewayDesc = gatewayDesc;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayInstances(List<GetGatewaysGatewayGatewayInstance> gatewayInstances) {
            if (gatewayInstances == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "gatewayInstances");
            }
            this.gatewayInstances = gatewayInstances;
            return this;
        }
        public Builder gatewayInstances(GetGatewaysGatewayGatewayInstance... gatewayInstances) {
            return gatewayInstances(List.of(gatewayInstances));
        }
        @CustomType.Setter
        public Builder gatewayName(String gatewayName) {
            if (gatewayName == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "gatewayName");
            }
            this.gatewayName = gatewayName;
            return this;
        }
        @CustomType.Setter
        public Builder hosts(String hosts) {
            if (hosts == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "hosts");
            }
            this.hosts = hosts;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(String modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(String parentId) {
            if (parentId == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "parentId");
            }
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetGatewaysGateway", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetGatewaysGateway build() {
            final var _resultValue = new GetGatewaysGateway();
            _resultValue.createTime = createTime;
            _resultValue.gatewayDesc = gatewayDesc;
            _resultValue.gatewayInstances = gatewayInstances;
            _resultValue.gatewayName = gatewayName;
            _resultValue.hosts = hosts;
            _resultValue.id = id;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.parentId = parentId;
            _resultValue.status = status;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
