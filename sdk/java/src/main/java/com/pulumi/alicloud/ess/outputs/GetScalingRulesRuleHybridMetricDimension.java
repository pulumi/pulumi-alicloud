// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScalingRulesRuleHybridMetricDimension {
    /**
     * @return (Available since v1.250.0) The dimension key of the metric.
     * 
     */
    private String dimensionKey;
    /**
     * @return (Available since v1.250.0) The dimension value of the metric.
     * 
     */
    private String dimensionValue;

    private GetScalingRulesRuleHybridMetricDimension() {}
    /**
     * @return (Available since v1.250.0) The dimension key of the metric.
     * 
     */
    public String dimensionKey() {
        return this.dimensionKey;
    }
    /**
     * @return (Available since v1.250.0) The dimension value of the metric.
     * 
     */
    public String dimensionValue() {
        return this.dimensionValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScalingRulesRuleHybridMetricDimension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dimensionKey;
        private String dimensionValue;
        public Builder() {}
        public Builder(GetScalingRulesRuleHybridMetricDimension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensionKey = defaults.dimensionKey;
    	      this.dimensionValue = defaults.dimensionValue;
        }

        @CustomType.Setter
        public Builder dimensionKey(String dimensionKey) {
            if (dimensionKey == null) {
              throw new MissingRequiredPropertyException("GetScalingRulesRuleHybridMetricDimension", "dimensionKey");
            }
            this.dimensionKey = dimensionKey;
            return this;
        }
        @CustomType.Setter
        public Builder dimensionValue(String dimensionValue) {
            if (dimensionValue == null) {
              throw new MissingRequiredPropertyException("GetScalingRulesRuleHybridMetricDimension", "dimensionValue");
            }
            this.dimensionValue = dimensionValue;
            return this;
        }
        public GetScalingRulesRuleHybridMetricDimension build() {
            final var _resultValue = new GetScalingRulesRuleHybridMetricDimension();
            _resultValue.dimensionKey = dimensionKey;
            _resultValue.dimensionValue = dimensionValue;
            return _resultValue;
        }
    }
}
