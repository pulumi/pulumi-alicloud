// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.alicloud.alb.outputs.LoadBalancerZoneMappingLoadBalancerAddress;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerZoneMapping {
    /**
     * @return An IP address of the IPv4 type.
     * 
     */
    private @Nullable String address;
    /**
     * @return The ID of the EIP instance.
     * 
     */
    private @Nullable String allocationId;
    /**
     * @return The type of the EIP instance.
     * 
     */
    private @Nullable String eipType;
    /**
     * @return IPv4 private network address.
     * 
     */
    private @Nullable String intranetAddress;
    /**
     * @return An IP address of the IPv6 type.
     * 
     */
    private @Nullable String ipv6Address;
    /**
     * @return The instance address.
     * 
     */
    private @Nullable List<LoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses;
    /**
     * @return The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
     * 
     */
    private String vswitchId;
    /**
     * @return The ID of the zone to which the SLB instance belongs.
     * 
     */
    private String zoneId;

    private LoadBalancerZoneMapping() {}
    /**
     * @return An IP address of the IPv4 type.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return The ID of the EIP instance.
     * 
     */
    public Optional<String> allocationId() {
        return Optional.ofNullable(this.allocationId);
    }
    /**
     * @return The type of the EIP instance.
     * 
     */
    public Optional<String> eipType() {
        return Optional.ofNullable(this.eipType);
    }
    /**
     * @return IPv4 private network address.
     * 
     */
    public Optional<String> intranetAddress() {
        return Optional.ofNullable(this.intranetAddress);
    }
    /**
     * @return An IP address of the IPv6 type.
     * 
     */
    public Optional<String> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }
    /**
     * @return The instance address.
     * 
     */
    public List<LoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses() {
        return this.loadBalancerAddresses == null ? List.of() : this.loadBalancerAddresses;
    }
    /**
     * @return The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The ID of the zone to which the SLB instance belongs.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerZoneMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String allocationId;
        private @Nullable String eipType;
        private @Nullable String intranetAddress;
        private @Nullable String ipv6Address;
        private @Nullable List<LoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses;
        private String vswitchId;
        private String zoneId;
        public Builder() {}
        public Builder(LoadBalancerZoneMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.allocationId = defaults.allocationId;
    	      this.eipType = defaults.eipType;
    	      this.intranetAddress = defaults.intranetAddress;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.loadBalancerAddresses = defaults.loadBalancerAddresses;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {

            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder allocationId(@Nullable String allocationId) {

            this.allocationId = allocationId;
            return this;
        }
        @CustomType.Setter
        public Builder eipType(@Nullable String eipType) {

            this.eipType = eipType;
            return this;
        }
        @CustomType.Setter
        public Builder intranetAddress(@Nullable String intranetAddress) {

            this.intranetAddress = intranetAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Address(@Nullable String ipv6Address) {

            this.ipv6Address = ipv6Address;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerAddresses(@Nullable List<LoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses) {

            this.loadBalancerAddresses = loadBalancerAddresses;
            return this;
        }
        public Builder loadBalancerAddresses(LoadBalancerZoneMappingLoadBalancerAddress... loadBalancerAddresses) {
            return loadBalancerAddresses(List.of(loadBalancerAddresses));
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("LoadBalancerZoneMapping", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("LoadBalancerZoneMapping", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public LoadBalancerZoneMapping build() {
            final var _resultValue = new LoadBalancerZoneMapping();
            _resultValue.address = address;
            _resultValue.allocationId = allocationId;
            _resultValue.eipType = eipType;
            _resultValue.intranetAddress = intranetAddress;
            _resultValue.ipv6Address = ipv6Address;
            _resultValue.loadBalancerAddresses = loadBalancerAddresses;
            _resultValue.vswitchId = vswitchId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
