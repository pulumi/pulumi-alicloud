// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HybridMonitorSlsTaskSlsProcessConfigFilterFilter {
    /**
     * @return The method that is used to filter logs imported from Log Service. Valid values: `&gt;`, `&gt;=`, `=`, `&lt;=`, `&lt;`, `!=`, `contain`, `notContain`.
     * 
     */
    private @Nullable String operator;
    /**
     * @return The name of the key that is used to filter logs imported from Log Service.
     * 
     */
    private @Nullable String slsKeyName;
    /**
     * @return The tag value of the metric.
     * 
     */
    private @Nullable String value;

    private HybridMonitorSlsTaskSlsProcessConfigFilterFilter() {}
    /**
     * @return The method that is used to filter logs imported from Log Service. Valid values: `&gt;`, `&gt;=`, `=`, `&lt;=`, `&lt;`, `!=`, `contain`, `notContain`.
     * 
     */
    public Optional<String> operator() {
        return Optional.ofNullable(this.operator);
    }
    /**
     * @return The name of the key that is used to filter logs imported from Log Service.
     * 
     */
    public Optional<String> slsKeyName() {
        return Optional.ofNullable(this.slsKeyName);
    }
    /**
     * @return The tag value of the metric.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridMonitorSlsTaskSlsProcessConfigFilterFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String operator;
        private @Nullable String slsKeyName;
        private @Nullable String value;
        public Builder() {}
        public Builder(HybridMonitorSlsTaskSlsProcessConfigFilterFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operator = defaults.operator;
    	      this.slsKeyName = defaults.slsKeyName;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder operator(@Nullable String operator) {
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder slsKeyName(@Nullable String slsKeyName) {
            this.slsKeyName = slsKeyName;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public HybridMonitorSlsTaskSlsProcessConfigFilterFilter build() {
            final var o = new HybridMonitorSlsTaskSlsProcessConfigFilterFilter();
            o.operator = operator;
            o.slsKeyName = slsKeyName;
            o.value = value;
            return o;
        }
    }
}
