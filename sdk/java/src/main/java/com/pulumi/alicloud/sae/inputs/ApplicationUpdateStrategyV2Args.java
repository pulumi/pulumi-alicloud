// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationUpdateStrategyV2BatchUpdateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationUpdateStrategyV2Args extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationUpdateStrategyV2Args Empty = new ApplicationUpdateStrategyV2Args();

    /**
     * The phased release policy. See `batch_update` below.
     * 
     */
    @Import(name="batchUpdate")
    private @Nullable Output<ApplicationUpdateStrategyV2BatchUpdateArgs> batchUpdate;

    /**
     * @return The phased release policy. See `batch_update` below.
     * 
     */
    public Optional<Output<ApplicationUpdateStrategyV2BatchUpdateArgs>> batchUpdate() {
        return Optional.ofNullable(this.batchUpdate);
    }

    /**
     * The type of the release policy. Valid values: `GrayBatchUpdate` and `BatchUpdate`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the release policy. Valid values: `GrayBatchUpdate` and `BatchUpdate`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ApplicationUpdateStrategyV2Args() {}

    private ApplicationUpdateStrategyV2Args(ApplicationUpdateStrategyV2Args $) {
        this.batchUpdate = $.batchUpdate;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationUpdateStrategyV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationUpdateStrategyV2Args $;

        public Builder() {
            $ = new ApplicationUpdateStrategyV2Args();
        }

        public Builder(ApplicationUpdateStrategyV2Args defaults) {
            $ = new ApplicationUpdateStrategyV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param batchUpdate The phased release policy. See `batch_update` below.
         * 
         * @return builder
         * 
         */
        public Builder batchUpdate(@Nullable Output<ApplicationUpdateStrategyV2BatchUpdateArgs> batchUpdate) {
            $.batchUpdate = batchUpdate;
            return this;
        }

        /**
         * @param batchUpdate The phased release policy. See `batch_update` below.
         * 
         * @return builder
         * 
         */
        public Builder batchUpdate(ApplicationUpdateStrategyV2BatchUpdateArgs batchUpdate) {
            return batchUpdate(Output.of(batchUpdate));
        }

        /**
         * @param type The type of the release policy. Valid values: `GrayBatchUpdate` and `BatchUpdate`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the release policy. Valid values: `GrayBatchUpdate` and `BatchUpdate`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ApplicationUpdateStrategyV2Args build() {
            return $;
        }
    }

}
