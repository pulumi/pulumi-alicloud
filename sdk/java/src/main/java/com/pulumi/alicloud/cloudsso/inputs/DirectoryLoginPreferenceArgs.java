// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryLoginPreferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryLoginPreferenceArgs Empty = new DirectoryLoginPreferenceArgs();

    /**
     * Whether the user can obtain the program access credential in the portal after logging in.
     * 
     */
    @Import(name="allowUserToGetCredentials")
    private @Nullable Output<Boolean> allowUserToGetCredentials;

    /**
     * @return Whether the user can obtain the program access credential in the portal after logging in.
     * 
     */
    public Optional<Output<Boolean>> allowUserToGetCredentials() {
        return Optional.ofNullable(this.allowUserToGetCredentials);
    }

    /**
     * IP address whitelist
     * 
     */
    @Import(name="loginNetworkMasks")
    private @Nullable Output<String> loginNetworkMasks;

    /**
     * @return IP address whitelist
     * 
     */
    public Optional<Output<String>> loginNetworkMasks() {
        return Optional.ofNullable(this.loginNetworkMasks);
    }

    private DirectoryLoginPreferenceArgs() {}

    private DirectoryLoginPreferenceArgs(DirectoryLoginPreferenceArgs $) {
        this.allowUserToGetCredentials = $.allowUserToGetCredentials;
        this.loginNetworkMasks = $.loginNetworkMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryLoginPreferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryLoginPreferenceArgs $;

        public Builder() {
            $ = new DirectoryLoginPreferenceArgs();
        }

        public Builder(DirectoryLoginPreferenceArgs defaults) {
            $ = new DirectoryLoginPreferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowUserToGetCredentials Whether the user can obtain the program access credential in the portal after logging in.
         * 
         * @return builder
         * 
         */
        public Builder allowUserToGetCredentials(@Nullable Output<Boolean> allowUserToGetCredentials) {
            $.allowUserToGetCredentials = allowUserToGetCredentials;
            return this;
        }

        /**
         * @param allowUserToGetCredentials Whether the user can obtain the program access credential in the portal after logging in.
         * 
         * @return builder
         * 
         */
        public Builder allowUserToGetCredentials(Boolean allowUserToGetCredentials) {
            return allowUserToGetCredentials(Output.of(allowUserToGetCredentials));
        }

        /**
         * @param loginNetworkMasks IP address whitelist
         * 
         * @return builder
         * 
         */
        public Builder loginNetworkMasks(@Nullable Output<String> loginNetworkMasks) {
            $.loginNetworkMasks = loginNetworkMasks;
            return this;
        }

        /**
         * @param loginNetworkMasks IP address whitelist
         * 
         * @return builder
         * 
         */
        public Builder loginNetworkMasks(String loginNetworkMasks) {
            return loginNetworkMasks(Output.of(loginNetworkMasks));
        }

        public DirectoryLoginPreferenceArgs build() {
            return $;
        }
    }

}
