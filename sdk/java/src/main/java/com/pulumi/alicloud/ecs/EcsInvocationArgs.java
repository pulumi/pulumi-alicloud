// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EcsInvocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EcsInvocationArgs Empty = new EcsInvocationArgs();

    /**
     * The ID of the command.
     * 
     */
    @Import(name="commandId", required=true)
    private Output<String> commandId;

    /**
     * @return The ID of the command.
     * 
     */
    public Output<String> commandId() {
        return this.commandId;
    }

    /**
     * The schedule on which the recurring execution of the command takes place. Take note of the following items:
     * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
     * * When you set Timed to true, you must specify Frequency.
     * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     * 
     */
    @Import(name="frequency")
    private @Nullable Output<String> frequency;

    /**
     * @return The schedule on which the recurring execution of the command takes place. Take note of the following items:
     * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
     * * When you set Timed to true, you must specify Frequency.
     * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     * 
     */
    public Optional<Output<String>> frequency() {
        return Optional.ofNullable(this.frequency);
    }

    /**
     * The list of instances to execute the command. You can specify up to 50 instance IDs.
     * 
     */
    @Import(name="instanceIds", required=true)
    private Output<List<String>> instanceIds;

    /**
     * @return The list of instances to execute the command. You can specify up to 50 instance IDs.
     * 
     */
    public Output<List<String>> instanceIds() {
        return this.instanceIds;
    }

    /**
     * The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,Object>> parameters;

    /**
     * @return The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
     * 
     */
    public Optional<Output<Map<String,Object>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeat_mode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeat_mode` is specified.
     * 
     */
    @Import(name="repeatMode")
    private @Nullable Output<String> repeatMode;

    /**
     * @return Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeat_mode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeat_mode` is specified.
     * 
     */
    public Optional<Output<String>> repeatMode() {
        return Optional.ofNullable(this.repeatMode);
    }

    /**
     * Specifies whether to periodically run the command. Default value: `false`.
     * 
     */
    @Import(name="timed")
    private @Nullable Output<Boolean> timed;

    /**
     * @return Specifies whether to periodically run the command. Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> timed() {
        return Optional.ofNullable(this.timed);
    }

    /**
     * The username that is used to run the command on the ECS instance.
     * * For Linux instances, the root username is used.
     * * For Windows instances, the System username is used.
     * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The username that is used to run the command on the ECS instance.
     * * For Linux instances, the root username is used.
     * * For Windows instances, the System username is used.
     * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * The name of the password used to run the command on a Windows instance.
     * 
     */
    @Import(name="windowsPasswordName")
    private @Nullable Output<String> windowsPasswordName;

    /**
     * @return The name of the password used to run the command on a Windows instance.
     * 
     */
    public Optional<Output<String>> windowsPasswordName() {
        return Optional.ofNullable(this.windowsPasswordName);
    }

    private EcsInvocationArgs() {}

    private EcsInvocationArgs(EcsInvocationArgs $) {
        this.commandId = $.commandId;
        this.frequency = $.frequency;
        this.instanceIds = $.instanceIds;
        this.parameters = $.parameters;
        this.repeatMode = $.repeatMode;
        this.timed = $.timed;
        this.username = $.username;
        this.windowsPasswordName = $.windowsPasswordName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EcsInvocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EcsInvocationArgs $;

        public Builder() {
            $ = new EcsInvocationArgs();
        }

        public Builder(EcsInvocationArgs defaults) {
            $ = new EcsInvocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commandId The ID of the command.
         * 
         * @return builder
         * 
         */
        public Builder commandId(Output<String> commandId) {
            $.commandId = commandId;
            return this;
        }

        /**
         * @param commandId The ID of the command.
         * 
         * @return builder
         * 
         */
        public Builder commandId(String commandId) {
            return commandId(Output.of(commandId));
        }

        /**
         * @param frequency The schedule on which the recurring execution of the command takes place. Take note of the following items:
         * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
         * * When you set Timed to true, you must specify Frequency.
         * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
         * 
         * @return builder
         * 
         */
        public Builder frequency(@Nullable Output<String> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency The schedule on which the recurring execution of the command takes place. Take note of the following items:
         * * The interval between two consecutive executions must be 10 seconds or longer. The minimum interval cannot be less than the timeout period of the execution.
         * * When you set Timed to true, you must specify Frequency.
         * * The value of the Frequency parameter is a cron expression. For more information, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
         * 
         * @return builder
         * 
         */
        public Builder frequency(String frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param instanceIds The list of instances to execute the command. You can specify up to 50 instance IDs.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(Output<List<String>> instanceIds) {
            $.instanceIds = instanceIds;
            return this;
        }

        /**
         * @param instanceIds The list of instances to execute the command. You can specify up to 50 instance IDs.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(List<String> instanceIds) {
            return instanceIds(Output.of(instanceIds));
        }

        /**
         * @param instanceIds The list of instances to execute the command. You can specify up to 50 instance IDs.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }

        /**
         * @param parameters The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,Object>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,Object> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param repeatMode Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeat_mode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeat_mode` is specified.
         * 
         * @return builder
         * 
         */
        public Builder repeatMode(@Nullable Output<String> repeatMode) {
            $.repeatMode = repeatMode;
            return this;
        }

        /**
         * @param repeatMode Specifies how to run the command. Valid values: `Once`, `Period`, `NextRebootOnly`, `EveryReboot`. Default value: When `timed` is set to false and Frequency is not specified, the default value of `repeat_mode` is `Once`. When `Timed` is set to true and Frequency is specified, `period` is used as the value of RepeatMode regardless of whether `repeat_mode` is specified.
         * 
         * @return builder
         * 
         */
        public Builder repeatMode(String repeatMode) {
            return repeatMode(Output.of(repeatMode));
        }

        /**
         * @param timed Specifies whether to periodically run the command. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder timed(@Nullable Output<Boolean> timed) {
            $.timed = timed;
            return this;
        }

        /**
         * @param timed Specifies whether to periodically run the command. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder timed(Boolean timed) {
            return timed(Output.of(timed));
        }

        /**
         * @param username The username that is used to run the command on the ECS instance.
         * * For Linux instances, the root username is used.
         * * For Windows instances, the System username is used.
         * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username that is used to run the command on the ECS instance.
         * * For Linux instances, the root username is used.
         * * For Windows instances, the System username is used.
         * * You can also specify other usernames that already exist in the ECS instance to run the command. It is more secure to run Cloud Assistant commands as a regular user. For more information, see [Configure a regular user to run Cloud Assistant commands](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/run-cloud-assistant-commands-as-a-regular-user).
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param windowsPasswordName The name of the password used to run the command on a Windows instance.
         * 
         * @return builder
         * 
         */
        public Builder windowsPasswordName(@Nullable Output<String> windowsPasswordName) {
            $.windowsPasswordName = windowsPasswordName;
            return this;
        }

        /**
         * @param windowsPasswordName The name of the password used to run the command on a Windows instance.
         * 
         * @return builder
         * 
         */
        public Builder windowsPasswordName(String windowsPasswordName) {
            return windowsPasswordName(Output.of(windowsPasswordName));
        }

        public EcsInvocationArgs build() {
            if ($.commandId == null) {
                throw new MissingRequiredPropertyException("EcsInvocationArgs", "commandId");
            }
            if ($.instanceIds == null) {
                throw new MissingRequiredPropertyException("EcsInvocationArgs", "instanceIds");
            }
            return $;
        }
    }

}
