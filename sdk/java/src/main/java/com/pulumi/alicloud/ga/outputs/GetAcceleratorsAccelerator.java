// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetAcceleratorsAcceleratorBasicBandwidthPackage;
import com.pulumi.alicloud.ga.outputs.GetAcceleratorsAcceleratorCrossDomainBandwidthPackage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAcceleratorsAccelerator {
    /**
     * @return The ID of the GA instance to query.
     * 
     */
    private String acceleratorId;
    /**
     * @return The Name of the GA instance.
     * 
     */
    private String acceleratorName;
    /**
     * @return Details of the basic bandwidth package bound to the global acceleration instance.
     * 
     */
    private List<GetAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
    /**
     * @return The cloud enterprise network instance ID bound to the global acceleration instance.
     * 
     */
    private String cenId;
    /**
     * @return Details of the cross-domain acceleration package bound to the global acceleration instance.
     * 
     */
    private List<GetAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
    /**
     * @return DDoS high-defense instance ID that is unbound from the global acceleration instance.
     * 
     */
    private String ddosId;
    /**
     * @return Descriptive information of the global acceleration instance.
     * 
     */
    private String description;
    /**
     * @return CNAME address assigned by Global Acceleration instance.
     * 
     */
    private String dnsName;
    /**
     * @return Time when the global acceleration instance expires.
     * 
     */
    private Integer expiredTime;
    /**
     * @return The ID of the Accelerator.
     * 
     */
    private String id;
    /**
     * @return The billing method of the GA instance. Valid values: `POSTPAY`, `PREPAY`.
     * 
     */
    private String paymentType;
    /**
     * @return CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
     * 
     */
    private String secondDnsName;
    /**
     * @return The instance type of the GA instance.
     * 
     */
    private String spec;
    /**
     * @return The status of the GA instance. Valid values: `active`, `binding`, `configuring`, `deleting`, `finacialLocked`, `init`, `unbinding`.
     * 
     */
    private String status;

    private GetAcceleratorsAccelerator() {}
    /**
     * @return The ID of the GA instance to query.
     * 
     */
    public String acceleratorId() {
        return this.acceleratorId;
    }
    /**
     * @return The Name of the GA instance.
     * 
     */
    public String acceleratorName() {
        return this.acceleratorName;
    }
    /**
     * @return Details of the basic bandwidth package bound to the global acceleration instance.
     * 
     */
    public List<GetAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages() {
        return this.basicBandwidthPackages;
    }
    /**
     * @return The cloud enterprise network instance ID bound to the global acceleration instance.
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    /**
     * @return Details of the cross-domain acceleration package bound to the global acceleration instance.
     * 
     */
    public List<GetAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages() {
        return this.crossDomainBandwidthPackages;
    }
    /**
     * @return DDoS high-defense instance ID that is unbound from the global acceleration instance.
     * 
     */
    public String ddosId() {
        return this.ddosId;
    }
    /**
     * @return Descriptive information of the global acceleration instance.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return CNAME address assigned by Global Acceleration instance.
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }
    /**
     * @return Time when the global acceleration instance expires.
     * 
     */
    public Integer expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return The ID of the Accelerator.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The billing method of the GA instance. Valid values: `POSTPAY`, `PREPAY`.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
     * 
     */
    public String secondDnsName() {
        return this.secondDnsName;
    }
    /**
     * @return The instance type of the GA instance.
     * 
     */
    public String spec() {
        return this.spec;
    }
    /**
     * @return The status of the GA instance. Valid values: `active`, `binding`, `configuring`, `deleting`, `finacialLocked`, `init`, `unbinding`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAcceleratorsAccelerator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acceleratorId;
        private String acceleratorName;
        private List<GetAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
        private String cenId;
        private List<GetAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
        private String ddosId;
        private String description;
        private String dnsName;
        private Integer expiredTime;
        private String id;
        private String paymentType;
        private String secondDnsName;
        private String spec;
        private String status;
        public Builder() {}
        public Builder(GetAcceleratorsAccelerator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorId = defaults.acceleratorId;
    	      this.acceleratorName = defaults.acceleratorName;
    	      this.basicBandwidthPackages = defaults.basicBandwidthPackages;
    	      this.cenId = defaults.cenId;
    	      this.crossDomainBandwidthPackages = defaults.crossDomainBandwidthPackages;
    	      this.ddosId = defaults.ddosId;
    	      this.description = defaults.description;
    	      this.dnsName = defaults.dnsName;
    	      this.expiredTime = defaults.expiredTime;
    	      this.id = defaults.id;
    	      this.paymentType = defaults.paymentType;
    	      this.secondDnsName = defaults.secondDnsName;
    	      this.spec = defaults.spec;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder acceleratorId(String acceleratorId) {
            if (acceleratorId == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "acceleratorId");
            }
            this.acceleratorId = acceleratorId;
            return this;
        }
        @CustomType.Setter
        public Builder acceleratorName(String acceleratorName) {
            if (acceleratorName == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "acceleratorName");
            }
            this.acceleratorName = acceleratorName;
            return this;
        }
        @CustomType.Setter
        public Builder basicBandwidthPackages(List<GetAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages) {
            if (basicBandwidthPackages == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "basicBandwidthPackages");
            }
            this.basicBandwidthPackages = basicBandwidthPackages;
            return this;
        }
        public Builder basicBandwidthPackages(GetAcceleratorsAcceleratorBasicBandwidthPackage... basicBandwidthPackages) {
            return basicBandwidthPackages(List.of(basicBandwidthPackages));
        }
        @CustomType.Setter
        public Builder cenId(String cenId) {
            if (cenId == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "cenId");
            }
            this.cenId = cenId;
            return this;
        }
        @CustomType.Setter
        public Builder crossDomainBandwidthPackages(List<GetAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages) {
            if (crossDomainBandwidthPackages == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "crossDomainBandwidthPackages");
            }
            this.crossDomainBandwidthPackages = crossDomainBandwidthPackages;
            return this;
        }
        public Builder crossDomainBandwidthPackages(GetAcceleratorsAcceleratorCrossDomainBandwidthPackage... crossDomainBandwidthPackages) {
            return crossDomainBandwidthPackages(List.of(crossDomainBandwidthPackages));
        }
        @CustomType.Setter
        public Builder ddosId(String ddosId) {
            if (ddosId == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "ddosId");
            }
            this.ddosId = ddosId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            if (dnsName == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "dnsName");
            }
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder expiredTime(Integer expiredTime) {
            if (expiredTime == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "expiredTime");
            }
            this.expiredTime = expiredTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder secondDnsName(String secondDnsName) {
            if (secondDnsName == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "secondDnsName");
            }
            this.secondDnsName = secondDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder spec(String spec) {
            if (spec == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "spec");
            }
            this.spec = spec;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAcceleratorsAccelerator", "status");
            }
            this.status = status;
            return this;
        }
        public GetAcceleratorsAccelerator build() {
            final var _resultValue = new GetAcceleratorsAccelerator();
            _resultValue.acceleratorId = acceleratorId;
            _resultValue.acceleratorName = acceleratorName;
            _resultValue.basicBandwidthPackages = basicBandwidthPackages;
            _resultValue.cenId = cenId;
            _resultValue.crossDomainBandwidthPackages = crossDomainBandwidthPackages;
            _resultValue.ddosId = ddosId;
            _resultValue.description = description;
            _resultValue.dnsName = dnsName;
            _resultValue.expiredTime = expiredTime;
            _resultValue.id = id;
            _resultValue.paymentType = paymentType;
            _resultValue.secondDnsName = secondDnsName;
            _resultValue.spec = spec;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
