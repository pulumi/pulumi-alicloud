// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gwlb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerGroupConnectionDrainConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerGroupConnectionDrainConfigArgs Empty = new ServerGroupConnectionDrainConfigArgs();

    /**
     * Whether to open the connection graceful interrupt. Value:
     * 
     */
    @Import(name="connectionDrainEnabled")
    private @Nullable Output<Boolean> connectionDrainEnabled;

    /**
     * @return Whether to open the connection graceful interrupt. Value:
     * 
     */
    public Optional<Output<Boolean>> connectionDrainEnabled() {
        return Optional.ofNullable(this.connectionDrainEnabled);
    }

    /**
     * Connection Grace interrupt timeout.
     * 
     * Unit: seconds.
     * 
     * Value range: 1~3600.
     * 
     */
    @Import(name="connectionDrainTimeout")
    private @Nullable Output<Integer> connectionDrainTimeout;

    /**
     * @return Connection Grace interrupt timeout.
     * 
     * Unit: seconds.
     * 
     * Value range: 1~3600.
     * 
     */
    public Optional<Output<Integer>> connectionDrainTimeout() {
        return Optional.ofNullable(this.connectionDrainTimeout);
    }

    private ServerGroupConnectionDrainConfigArgs() {}

    private ServerGroupConnectionDrainConfigArgs(ServerGroupConnectionDrainConfigArgs $) {
        this.connectionDrainEnabled = $.connectionDrainEnabled;
        this.connectionDrainTimeout = $.connectionDrainTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerGroupConnectionDrainConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerGroupConnectionDrainConfigArgs $;

        public Builder() {
            $ = new ServerGroupConnectionDrainConfigArgs();
        }

        public Builder(ServerGroupConnectionDrainConfigArgs defaults) {
            $ = new ServerGroupConnectionDrainConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionDrainEnabled Whether to open the connection graceful interrupt. Value:
         * 
         * @return builder
         * 
         */
        public Builder connectionDrainEnabled(@Nullable Output<Boolean> connectionDrainEnabled) {
            $.connectionDrainEnabled = connectionDrainEnabled;
            return this;
        }

        /**
         * @param connectionDrainEnabled Whether to open the connection graceful interrupt. Value:
         * 
         * @return builder
         * 
         */
        public Builder connectionDrainEnabled(Boolean connectionDrainEnabled) {
            return connectionDrainEnabled(Output.of(connectionDrainEnabled));
        }

        /**
         * @param connectionDrainTimeout Connection Grace interrupt timeout.
         * 
         * Unit: seconds.
         * 
         * Value range: 1~3600.
         * 
         * @return builder
         * 
         */
        public Builder connectionDrainTimeout(@Nullable Output<Integer> connectionDrainTimeout) {
            $.connectionDrainTimeout = connectionDrainTimeout;
            return this;
        }

        /**
         * @param connectionDrainTimeout Connection Grace interrupt timeout.
         * 
         * Unit: seconds.
         * 
         * Value range: 1~3600.
         * 
         * @return builder
         * 
         */
        public Builder connectionDrainTimeout(Integer connectionDrainTimeout) {
            return connectionDrainTimeout(Output.of(connectionDrainTimeout));
        }

        public ServerGroupConnectionDrainConfigArgs build() {
            return $;
        }
    }

}
