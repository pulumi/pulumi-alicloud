// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
import com.pulumi.alicloud.vpn.inputs.GetConnectionsPlainArgs;
import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysPlainArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesPlainArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsPlainArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesPlainArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
import com.pulumi.alicloud.vpn.inputs.GetGatewaysPlainArgs;
import com.pulumi.alicloud.vpn.outputs.GetConnectionsResult;
import com.pulumi.alicloud.vpn.outputs.GetCustomerGatewaysResult;
import com.pulumi.alicloud.vpn.outputs.GetGatewayVcoRoutesResult;
import com.pulumi.alicloud.vpn.outputs.GetGatewayVpnAttachmentsResult;
import com.pulumi.alicloud.vpn.outputs.GetGatewayZonesResult;
import com.pulumi.alicloud.vpn.outputs.GetGatewaysResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class VpnFunctions {
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetConnectionsResult> getConnections() {
        return getConnections(GetConnectionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetConnectionsResult> getConnectionsPlain() {
        return getConnectionsPlain(GetConnectionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetConnectionsResult> getConnections(GetConnectionsArgs args) {
        return getConnections(args, InvokeOptions.Empty);
    }
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetConnectionsResult> getConnectionsPlain(GetConnectionsPlainArgs args) {
        return getConnectionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetConnectionsResult> getConnections(GetConnectionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getConnections:getConnections", TypeShape.of(GetConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getConnections(GetConnectionsArgs.builder()
     *             .customerGatewayId(&#34;fake-cgw-id&#34;)
     *             .ids(&#34;fake-conn-id&#34;)
     *             .outputFile(&#34;/tmp/vpnconn&#34;)
     *             .vpnGatewayId(&#34;fake-vpn-id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetConnectionsResult> getConnectionsPlain(GetConnectionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getConnections:getConnections", TypeShape.of(GetConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCustomerGatewaysResult> getCustomerGateways() {
        return getCustomerGateways(GetCustomerGatewaysArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCustomerGatewaysResult> getCustomerGatewaysPlain() {
        return getCustomerGatewaysPlain(GetCustomerGatewaysPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCustomerGatewaysResult> getCustomerGateways(GetCustomerGatewaysArgs args) {
        return getCustomerGateways(args, InvokeOptions.Empty);
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCustomerGatewaysResult> getCustomerGatewaysPlain(GetCustomerGatewaysPlainArgs args) {
        return getCustomerGatewaysPlain(args, InvokeOptions.Empty);
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCustomerGatewaysResult> getCustomerGateways(GetCustomerGatewaysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getCustomerGateways:getCustomerGateways", TypeShape.of(GetCustomerGatewaysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The VPN customers gateways data source lists a number of VPN customer gateways resource information owned by an Alicloud account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetCustomerGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = VpnFunctions.getCustomerGateways(GetCustomerGatewaysArgs.builder()
     *             .ids(            
     *                 &#34;fake-id1&#34;,
     *                 &#34;fake-id2&#34;)
     *             .nameRegex(&#34;testAcc*&#34;)
     *             .outputFile(&#34;/tmp/cgws&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCustomerGatewaysResult> getCustomerGatewaysPlain(GetCustomerGatewaysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getCustomerGateways:getCustomerGateways", TypeShape.of(GetCustomerGatewaysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Vpn Gateway Vco Routes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.cen.Instance;
     * import com.pulumi.alicloud.cen.InstanceArgs;
     * import com.pulumi.alicloud.cen.TransitRouter;
     * import com.pulumi.alicloud.cen.TransitRouterArgs;
     * import com.pulumi.alicloud.cen.CenFunctions;
     * import com.pulumi.alicloud.cen.inputs.GetTransitRouterAvailableResourcesArgs;
     * import com.pulumi.alicloud.vpn.CustomerGateway;
     * import com.pulumi.alicloud.vpn.CustomerGatewayArgs;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachment;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIkeConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIpsecConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentBgpConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentHealthCheckConfigArgs;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachment;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachmentArgs;
     * import com.pulumi.alicloud.cen.inputs.TransitRouterVpnAttachmentZoneArgs;
     * import com.pulumi.alicloud.vpn.GatewayVcoRoute;
     * import com.pulumi.alicloud.vpn.GatewayVcoRouteArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultInstance = new Instance(&#34;defaultInstance&#34;, InstanceArgs.builder()        
     *             .cenInstanceName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouter = new TransitRouter(&#34;defaultTransitRouter&#34;, TransitRouterArgs.builder()        
     *             .cenId(defaultInstance.id())
     *             .transitRouterDescription(&#34;desd&#34;)
     *             .transitRouterName(var_.name())
     *             .build());
     * 
     *         final var defaultTransitRouterAvailableResources = CenFunctions.getTransitRouterAvailableResources();
     * 
     *         var defaultCustomerGateway = new CustomerGateway(&#34;defaultCustomerGateway&#34;, CustomerGatewayArgs.builder()        
     *             .ipAddress(&#34;42.104.22.210&#34;)
     *             .asn(&#34;45014&#34;)
     *             .description(&#34;testAccVpnConnectionDesc&#34;)
     *             .build());
     * 
     *         var defaultGatewayVpnAttachment = new GatewayVpnAttachment(&#34;defaultGatewayVpnAttachment&#34;, GatewayVpnAttachmentArgs.builder()        
     *             .customerGatewayId(defaultCustomerGateway.id())
     *             .networkType(&#34;public&#34;)
     *             .localSubnet(&#34;0.0.0.0/0&#34;)
     *             .remoteSubnet(&#34;0.0.0.0/0&#34;)
     *             .effectImmediately(false)
     *             .ikeConfig(GatewayVpnAttachmentIkeConfigArgs.builder()
     *                 .ikeAuthAlg(&#34;md5&#34;)
     *                 .ikeEncAlg(&#34;des&#34;)
     *                 .ikeVersion(&#34;ikev2&#34;)
     *                 .ikeMode(&#34;main&#34;)
     *                 .ikeLifetime(86400)
     *                 .psk(&#34;tf-testvpn2&#34;)
     *                 .ikePfs(&#34;group1&#34;)
     *                 .remoteId(&#34;testbob2&#34;)
     *                 .localId(&#34;testalice2&#34;)
     *                 .build())
     *             .ipsecConfig(GatewayVpnAttachmentIpsecConfigArgs.builder()
     *                 .ipsecPfs(&#34;group5&#34;)
     *                 .ipsecEncAlg(&#34;des&#34;)
     *                 .ipsecAuthAlg(&#34;md5&#34;)
     *                 .ipsecLifetime(86400)
     *                 .build())
     *             .bgpConfig(GatewayVpnAttachmentBgpConfigArgs.builder()
     *                 .enable(true)
     *                 .localAsn(45014)
     *                 .tunnelCidr(&#34;169.254.11.0/30&#34;)
     *                 .localBgpIp(&#34;169.254.11.1&#34;)
     *                 .build())
     *             .healthCheckConfig(GatewayVpnAttachmentHealthCheckConfigArgs.builder()
     *                 .enable(true)
     *                 .sip(&#34;192.168.1.1&#34;)
     *                 .dip(&#34;10.0.0.1&#34;)
     *                 .interval(10)
     *                 .retry(10)
     *                 .policy(&#34;revoke_route&#34;)
     *                 .build())
     *             .enableDpd(true)
     *             .enableNatTraversal(true)
     *             .vpnAttachmentName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouterVpnAttachment = new TransitRouterVpnAttachment(&#34;defaultTransitRouterVpnAttachment&#34;, TransitRouterVpnAttachmentArgs.builder()        
     *             .autoPublishRouteEnabled(false)
     *             .transitRouterAttachmentDescription(var_.name())
     *             .transitRouterAttachmentName(var_.name())
     *             .cenId(defaultTransitRouter.cenId())
     *             .transitRouterId(defaultTransitRouter.transitRouterId())
     *             .vpnId(defaultGatewayVpnAttachment.id())
     *             .zones(TransitRouterVpnAttachmentZoneArgs.builder()
     *                 .zoneId(defaultTransitRouterAvailableResources.applyValue(getTransitRouterAvailableResourcesResult -&gt; getTransitRouterAvailableResourcesResult.resources()[0].masterZones()[0]))
     *                 .build())
     *             .build());
     * 
     *         var defaultGatewayVcoRoute = new GatewayVcoRoute(&#34;defaultGatewayVcoRoute&#34;, GatewayVcoRouteArgs.builder()        
     *             .routeDest(&#34;192.168.12.0/24&#34;)
     *             .nextHop(defaultTransitRouterVpnAttachment.vpnId())
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .weight(100)
     *             .build());
     * 
     *         final var defaultGatewayVcoRoutes = VpnFunctions.getGatewayVcoRoutes(GetGatewayVcoRoutesArgs.builder()
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVcoRouteId1&#34;, data.alicloud_vpn_gateway_vco_routes().ids().routes()[0].id());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayVcoRoutesResult> getGatewayVcoRoutes(GetGatewayVcoRoutesArgs args) {
        return getGatewayVcoRoutes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vco Routes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.cen.Instance;
     * import com.pulumi.alicloud.cen.InstanceArgs;
     * import com.pulumi.alicloud.cen.TransitRouter;
     * import com.pulumi.alicloud.cen.TransitRouterArgs;
     * import com.pulumi.alicloud.cen.CenFunctions;
     * import com.pulumi.alicloud.cen.inputs.GetTransitRouterAvailableResourcesArgs;
     * import com.pulumi.alicloud.vpn.CustomerGateway;
     * import com.pulumi.alicloud.vpn.CustomerGatewayArgs;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachment;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIkeConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIpsecConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentBgpConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentHealthCheckConfigArgs;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachment;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachmentArgs;
     * import com.pulumi.alicloud.cen.inputs.TransitRouterVpnAttachmentZoneArgs;
     * import com.pulumi.alicloud.vpn.GatewayVcoRoute;
     * import com.pulumi.alicloud.vpn.GatewayVcoRouteArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultInstance = new Instance(&#34;defaultInstance&#34;, InstanceArgs.builder()        
     *             .cenInstanceName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouter = new TransitRouter(&#34;defaultTransitRouter&#34;, TransitRouterArgs.builder()        
     *             .cenId(defaultInstance.id())
     *             .transitRouterDescription(&#34;desd&#34;)
     *             .transitRouterName(var_.name())
     *             .build());
     * 
     *         final var defaultTransitRouterAvailableResources = CenFunctions.getTransitRouterAvailableResources();
     * 
     *         var defaultCustomerGateway = new CustomerGateway(&#34;defaultCustomerGateway&#34;, CustomerGatewayArgs.builder()        
     *             .ipAddress(&#34;42.104.22.210&#34;)
     *             .asn(&#34;45014&#34;)
     *             .description(&#34;testAccVpnConnectionDesc&#34;)
     *             .build());
     * 
     *         var defaultGatewayVpnAttachment = new GatewayVpnAttachment(&#34;defaultGatewayVpnAttachment&#34;, GatewayVpnAttachmentArgs.builder()        
     *             .customerGatewayId(defaultCustomerGateway.id())
     *             .networkType(&#34;public&#34;)
     *             .localSubnet(&#34;0.0.0.0/0&#34;)
     *             .remoteSubnet(&#34;0.0.0.0/0&#34;)
     *             .effectImmediately(false)
     *             .ikeConfig(GatewayVpnAttachmentIkeConfigArgs.builder()
     *                 .ikeAuthAlg(&#34;md5&#34;)
     *                 .ikeEncAlg(&#34;des&#34;)
     *                 .ikeVersion(&#34;ikev2&#34;)
     *                 .ikeMode(&#34;main&#34;)
     *                 .ikeLifetime(86400)
     *                 .psk(&#34;tf-testvpn2&#34;)
     *                 .ikePfs(&#34;group1&#34;)
     *                 .remoteId(&#34;testbob2&#34;)
     *                 .localId(&#34;testalice2&#34;)
     *                 .build())
     *             .ipsecConfig(GatewayVpnAttachmentIpsecConfigArgs.builder()
     *                 .ipsecPfs(&#34;group5&#34;)
     *                 .ipsecEncAlg(&#34;des&#34;)
     *                 .ipsecAuthAlg(&#34;md5&#34;)
     *                 .ipsecLifetime(86400)
     *                 .build())
     *             .bgpConfig(GatewayVpnAttachmentBgpConfigArgs.builder()
     *                 .enable(true)
     *                 .localAsn(45014)
     *                 .tunnelCidr(&#34;169.254.11.0/30&#34;)
     *                 .localBgpIp(&#34;169.254.11.1&#34;)
     *                 .build())
     *             .healthCheckConfig(GatewayVpnAttachmentHealthCheckConfigArgs.builder()
     *                 .enable(true)
     *                 .sip(&#34;192.168.1.1&#34;)
     *                 .dip(&#34;10.0.0.1&#34;)
     *                 .interval(10)
     *                 .retry(10)
     *                 .policy(&#34;revoke_route&#34;)
     *                 .build())
     *             .enableDpd(true)
     *             .enableNatTraversal(true)
     *             .vpnAttachmentName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouterVpnAttachment = new TransitRouterVpnAttachment(&#34;defaultTransitRouterVpnAttachment&#34;, TransitRouterVpnAttachmentArgs.builder()        
     *             .autoPublishRouteEnabled(false)
     *             .transitRouterAttachmentDescription(var_.name())
     *             .transitRouterAttachmentName(var_.name())
     *             .cenId(defaultTransitRouter.cenId())
     *             .transitRouterId(defaultTransitRouter.transitRouterId())
     *             .vpnId(defaultGatewayVpnAttachment.id())
     *             .zones(TransitRouterVpnAttachmentZoneArgs.builder()
     *                 .zoneId(defaultTransitRouterAvailableResources.applyValue(getTransitRouterAvailableResourcesResult -&gt; getTransitRouterAvailableResourcesResult.resources()[0].masterZones()[0]))
     *                 .build())
     *             .build());
     * 
     *         var defaultGatewayVcoRoute = new GatewayVcoRoute(&#34;defaultGatewayVcoRoute&#34;, GatewayVcoRouteArgs.builder()        
     *             .routeDest(&#34;192.168.12.0/24&#34;)
     *             .nextHop(defaultTransitRouterVpnAttachment.vpnId())
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .weight(100)
     *             .build());
     * 
     *         final var defaultGatewayVcoRoutes = VpnFunctions.getGatewayVcoRoutes(GetGatewayVcoRoutesArgs.builder()
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVcoRouteId1&#34;, data.alicloud_vpn_gateway_vco_routes().ids().routes()[0].id());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayVcoRoutesResult> getGatewayVcoRoutesPlain(GetGatewayVcoRoutesPlainArgs args) {
        return getGatewayVcoRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vco Routes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.cen.Instance;
     * import com.pulumi.alicloud.cen.InstanceArgs;
     * import com.pulumi.alicloud.cen.TransitRouter;
     * import com.pulumi.alicloud.cen.TransitRouterArgs;
     * import com.pulumi.alicloud.cen.CenFunctions;
     * import com.pulumi.alicloud.cen.inputs.GetTransitRouterAvailableResourcesArgs;
     * import com.pulumi.alicloud.vpn.CustomerGateway;
     * import com.pulumi.alicloud.vpn.CustomerGatewayArgs;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachment;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIkeConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIpsecConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentBgpConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentHealthCheckConfigArgs;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachment;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachmentArgs;
     * import com.pulumi.alicloud.cen.inputs.TransitRouterVpnAttachmentZoneArgs;
     * import com.pulumi.alicloud.vpn.GatewayVcoRoute;
     * import com.pulumi.alicloud.vpn.GatewayVcoRouteArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultInstance = new Instance(&#34;defaultInstance&#34;, InstanceArgs.builder()        
     *             .cenInstanceName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouter = new TransitRouter(&#34;defaultTransitRouter&#34;, TransitRouterArgs.builder()        
     *             .cenId(defaultInstance.id())
     *             .transitRouterDescription(&#34;desd&#34;)
     *             .transitRouterName(var_.name())
     *             .build());
     * 
     *         final var defaultTransitRouterAvailableResources = CenFunctions.getTransitRouterAvailableResources();
     * 
     *         var defaultCustomerGateway = new CustomerGateway(&#34;defaultCustomerGateway&#34;, CustomerGatewayArgs.builder()        
     *             .ipAddress(&#34;42.104.22.210&#34;)
     *             .asn(&#34;45014&#34;)
     *             .description(&#34;testAccVpnConnectionDesc&#34;)
     *             .build());
     * 
     *         var defaultGatewayVpnAttachment = new GatewayVpnAttachment(&#34;defaultGatewayVpnAttachment&#34;, GatewayVpnAttachmentArgs.builder()        
     *             .customerGatewayId(defaultCustomerGateway.id())
     *             .networkType(&#34;public&#34;)
     *             .localSubnet(&#34;0.0.0.0/0&#34;)
     *             .remoteSubnet(&#34;0.0.0.0/0&#34;)
     *             .effectImmediately(false)
     *             .ikeConfig(GatewayVpnAttachmentIkeConfigArgs.builder()
     *                 .ikeAuthAlg(&#34;md5&#34;)
     *                 .ikeEncAlg(&#34;des&#34;)
     *                 .ikeVersion(&#34;ikev2&#34;)
     *                 .ikeMode(&#34;main&#34;)
     *                 .ikeLifetime(86400)
     *                 .psk(&#34;tf-testvpn2&#34;)
     *                 .ikePfs(&#34;group1&#34;)
     *                 .remoteId(&#34;testbob2&#34;)
     *                 .localId(&#34;testalice2&#34;)
     *                 .build())
     *             .ipsecConfig(GatewayVpnAttachmentIpsecConfigArgs.builder()
     *                 .ipsecPfs(&#34;group5&#34;)
     *                 .ipsecEncAlg(&#34;des&#34;)
     *                 .ipsecAuthAlg(&#34;md5&#34;)
     *                 .ipsecLifetime(86400)
     *                 .build())
     *             .bgpConfig(GatewayVpnAttachmentBgpConfigArgs.builder()
     *                 .enable(true)
     *                 .localAsn(45014)
     *                 .tunnelCidr(&#34;169.254.11.0/30&#34;)
     *                 .localBgpIp(&#34;169.254.11.1&#34;)
     *                 .build())
     *             .healthCheckConfig(GatewayVpnAttachmentHealthCheckConfigArgs.builder()
     *                 .enable(true)
     *                 .sip(&#34;192.168.1.1&#34;)
     *                 .dip(&#34;10.0.0.1&#34;)
     *                 .interval(10)
     *                 .retry(10)
     *                 .policy(&#34;revoke_route&#34;)
     *                 .build())
     *             .enableDpd(true)
     *             .enableNatTraversal(true)
     *             .vpnAttachmentName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouterVpnAttachment = new TransitRouterVpnAttachment(&#34;defaultTransitRouterVpnAttachment&#34;, TransitRouterVpnAttachmentArgs.builder()        
     *             .autoPublishRouteEnabled(false)
     *             .transitRouterAttachmentDescription(var_.name())
     *             .transitRouterAttachmentName(var_.name())
     *             .cenId(defaultTransitRouter.cenId())
     *             .transitRouterId(defaultTransitRouter.transitRouterId())
     *             .vpnId(defaultGatewayVpnAttachment.id())
     *             .zones(TransitRouterVpnAttachmentZoneArgs.builder()
     *                 .zoneId(defaultTransitRouterAvailableResources.applyValue(getTransitRouterAvailableResourcesResult -&gt; getTransitRouterAvailableResourcesResult.resources()[0].masterZones()[0]))
     *                 .build())
     *             .build());
     * 
     *         var defaultGatewayVcoRoute = new GatewayVcoRoute(&#34;defaultGatewayVcoRoute&#34;, GatewayVcoRouteArgs.builder()        
     *             .routeDest(&#34;192.168.12.0/24&#34;)
     *             .nextHop(defaultTransitRouterVpnAttachment.vpnId())
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .weight(100)
     *             .build());
     * 
     *         final var defaultGatewayVcoRoutes = VpnFunctions.getGatewayVcoRoutes(GetGatewayVcoRoutesArgs.builder()
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVcoRouteId1&#34;, data.alicloud_vpn_gateway_vco_routes().ids().routes()[0].id());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayVcoRoutesResult> getGatewayVcoRoutes(GetGatewayVcoRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getGatewayVcoRoutes:getGatewayVcoRoutes", TypeShape.of(GetGatewayVcoRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Vpn Gateway Vco Routes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.cen.Instance;
     * import com.pulumi.alicloud.cen.InstanceArgs;
     * import com.pulumi.alicloud.cen.TransitRouter;
     * import com.pulumi.alicloud.cen.TransitRouterArgs;
     * import com.pulumi.alicloud.cen.CenFunctions;
     * import com.pulumi.alicloud.cen.inputs.GetTransitRouterAvailableResourcesArgs;
     * import com.pulumi.alicloud.vpn.CustomerGateway;
     * import com.pulumi.alicloud.vpn.CustomerGatewayArgs;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachment;
     * import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIkeConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIpsecConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentBgpConfigArgs;
     * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentHealthCheckConfigArgs;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachment;
     * import com.pulumi.alicloud.cen.TransitRouterVpnAttachmentArgs;
     * import com.pulumi.alicloud.cen.inputs.TransitRouterVpnAttachmentZoneArgs;
     * import com.pulumi.alicloud.vpn.GatewayVcoRoute;
     * import com.pulumi.alicloud.vpn.GatewayVcoRouteArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVcoRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultInstance = new Instance(&#34;defaultInstance&#34;, InstanceArgs.builder()        
     *             .cenInstanceName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouter = new TransitRouter(&#34;defaultTransitRouter&#34;, TransitRouterArgs.builder()        
     *             .cenId(defaultInstance.id())
     *             .transitRouterDescription(&#34;desd&#34;)
     *             .transitRouterName(var_.name())
     *             .build());
     * 
     *         final var defaultTransitRouterAvailableResources = CenFunctions.getTransitRouterAvailableResources();
     * 
     *         var defaultCustomerGateway = new CustomerGateway(&#34;defaultCustomerGateway&#34;, CustomerGatewayArgs.builder()        
     *             .ipAddress(&#34;42.104.22.210&#34;)
     *             .asn(&#34;45014&#34;)
     *             .description(&#34;testAccVpnConnectionDesc&#34;)
     *             .build());
     * 
     *         var defaultGatewayVpnAttachment = new GatewayVpnAttachment(&#34;defaultGatewayVpnAttachment&#34;, GatewayVpnAttachmentArgs.builder()        
     *             .customerGatewayId(defaultCustomerGateway.id())
     *             .networkType(&#34;public&#34;)
     *             .localSubnet(&#34;0.0.0.0/0&#34;)
     *             .remoteSubnet(&#34;0.0.0.0/0&#34;)
     *             .effectImmediately(false)
     *             .ikeConfig(GatewayVpnAttachmentIkeConfigArgs.builder()
     *                 .ikeAuthAlg(&#34;md5&#34;)
     *                 .ikeEncAlg(&#34;des&#34;)
     *                 .ikeVersion(&#34;ikev2&#34;)
     *                 .ikeMode(&#34;main&#34;)
     *                 .ikeLifetime(86400)
     *                 .psk(&#34;tf-testvpn2&#34;)
     *                 .ikePfs(&#34;group1&#34;)
     *                 .remoteId(&#34;testbob2&#34;)
     *                 .localId(&#34;testalice2&#34;)
     *                 .build())
     *             .ipsecConfig(GatewayVpnAttachmentIpsecConfigArgs.builder()
     *                 .ipsecPfs(&#34;group5&#34;)
     *                 .ipsecEncAlg(&#34;des&#34;)
     *                 .ipsecAuthAlg(&#34;md5&#34;)
     *                 .ipsecLifetime(86400)
     *                 .build())
     *             .bgpConfig(GatewayVpnAttachmentBgpConfigArgs.builder()
     *                 .enable(true)
     *                 .localAsn(45014)
     *                 .tunnelCidr(&#34;169.254.11.0/30&#34;)
     *                 .localBgpIp(&#34;169.254.11.1&#34;)
     *                 .build())
     *             .healthCheckConfig(GatewayVpnAttachmentHealthCheckConfigArgs.builder()
     *                 .enable(true)
     *                 .sip(&#34;192.168.1.1&#34;)
     *                 .dip(&#34;10.0.0.1&#34;)
     *                 .interval(10)
     *                 .retry(10)
     *                 .policy(&#34;revoke_route&#34;)
     *                 .build())
     *             .enableDpd(true)
     *             .enableNatTraversal(true)
     *             .vpnAttachmentName(var_.name())
     *             .build());
     * 
     *         var defaultTransitRouterVpnAttachment = new TransitRouterVpnAttachment(&#34;defaultTransitRouterVpnAttachment&#34;, TransitRouterVpnAttachmentArgs.builder()        
     *             .autoPublishRouteEnabled(false)
     *             .transitRouterAttachmentDescription(var_.name())
     *             .transitRouterAttachmentName(var_.name())
     *             .cenId(defaultTransitRouter.cenId())
     *             .transitRouterId(defaultTransitRouter.transitRouterId())
     *             .vpnId(defaultGatewayVpnAttachment.id())
     *             .zones(TransitRouterVpnAttachmentZoneArgs.builder()
     *                 .zoneId(defaultTransitRouterAvailableResources.applyValue(getTransitRouterAvailableResourcesResult -&gt; getTransitRouterAvailableResourcesResult.resources()[0].masterZones()[0]))
     *                 .build())
     *             .build());
     * 
     *         var defaultGatewayVcoRoute = new GatewayVcoRoute(&#34;defaultGatewayVcoRoute&#34;, GatewayVcoRouteArgs.builder()        
     *             .routeDest(&#34;192.168.12.0/24&#34;)
     *             .nextHop(defaultTransitRouterVpnAttachment.vpnId())
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .weight(100)
     *             .build());
     * 
     *         final var defaultGatewayVcoRoutes = VpnFunctions.getGatewayVcoRoutes(GetGatewayVcoRoutesArgs.builder()
     *             .vpnConnectionId(defaultTransitRouterVpnAttachment.vpnId())
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVcoRouteId1&#34;, data.alicloud_vpn_gateway_vco_routes().ids().routes()[0].id());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayVcoRoutesResult> getGatewayVcoRoutesPlain(GetGatewayVcoRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getGatewayVcoRoutes:getGatewayVcoRoutes", TypeShape.of(GetGatewayVcoRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachments() {
        return getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachmentsPlain() {
        return getGatewayVpnAttachmentsPlain(GetGatewayVpnAttachmentsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs args) {
        return getGatewayVpnAttachments(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachmentsPlain(GetGatewayVpnAttachmentsPlainArgs args) {
        return getGatewayVpnAttachmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getGatewayVpnAttachments:getGatewayVpnAttachments", TypeShape.of(GetGatewayVpnAttachmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Vpn Gateway Vpn Attachments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayVpnAttachmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = VpnFunctions.getGatewayVpnAttachments();
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId1&#34;, ids.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         final var nameRegex = VpnFunctions.getGatewayVpnAttachments(GetGatewayVpnAttachmentsArgs.builder()
     *             .nameRegex(&#34;^my-VpnAttachment&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;vpnGatewayVpnAttachmentId2&#34;, nameRegex.applyValue(getGatewayVpnAttachmentsResult -&gt; getGatewayVpnAttachmentsResult.attachments()[0].id()));
     *         ctx.export(&#34;localId&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].ike_config()[0].local_id());
     *         ctx.export(&#34;internetIp&#34;, data.alicloud_vpn_gateway_vpn_attachments().vpn_attachments().attachments()[0].internet_ip());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayVpnAttachmentsResult> getGatewayVpnAttachmentsPlain(GetGatewayVpnAttachmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getGatewayVpnAttachments:getGatewayVpnAttachments", TypeShape.of(GetGatewayVpnAttachmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)
     * 
     * &gt; **NOTE:** Available since v1.216.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = VpnFunctions.getGatewayZones(GetGatewayZonesArgs.builder()
     *             .spec(&#34;5M&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayZonesResult> getGatewayZones(GetGatewayZonesArgs args) {
        return getGatewayZones(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)
     * 
     * &gt; **NOTE:** Available since v1.216.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = VpnFunctions.getGatewayZones(GetGatewayZonesArgs.builder()
     *             .spec(&#34;5M&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayZonesResult> getGatewayZonesPlain(GetGatewayZonesPlainArgs args) {
        return getGatewayZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)
     * 
     * &gt; **NOTE:** Available since v1.216.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = VpnFunctions.getGatewayZones(GetGatewayZonesArgs.builder()
     *             .spec(&#34;5M&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewayZonesResult> getGatewayZones(GetGatewayZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getGatewayZones:getGatewayZones", TypeShape.of(GetGatewayZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides VPN Gateway Zone available to the user.[What is Zone](https://next.api.alibabacloud.com/api/Vpc/2016-04-28/DescribeVpnGatewayAvailableZones?lang=JAVA)
     * 
     * &gt; **NOTE:** Available since v1.216.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewayZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = VpnFunctions.getGatewayZones(GetGatewayZonesArgs.builder()
     *             .spec(&#34;5M&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewayZonesResult> getGatewayZonesPlain(GetGatewayZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getGatewayZones:getGatewayZones", TypeShape.of(GetGatewayZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewaysResult> getGateways() {
        return getGateways(GetGatewaysArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain() {
        return getGatewaysPlain(GetGatewaysPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewaysResult> getGateways(GetGatewaysArgs args) {
        return getGateways(args, InvokeOptions.Empty);
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain(GetGatewaysPlainArgs args) {
        return getGatewaysPlain(args, InvokeOptions.Empty);
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGatewaysResult> getGateways(GetGatewaysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:vpn/getGateways:getGateways", TypeShape.of(GetGatewaysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The VPNs data source lists a number of VPNs resource information owned by an Alicloud account.
     * 
     * &gt; **NOTE:** Available since v1.18.0.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.vpn.Gateway;
     * import com.pulumi.alicloud.vpn.GatewayArgs;
     * import com.pulumi.alicloud.vpn.VpnFunctions;
     * import com.pulumi.alicloud.vpn.inputs.GetGatewaysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         final var defaultNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex(&#34;^default-NODELETING$&#34;)
     *             .build());
     * 
     *         final var defaultSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .build());
     * 
     *         var defaultGateway = new Gateway(&#34;defaultGateway&#34;, GatewayArgs.builder()        
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .bandwidth(&#34;10&#34;)
     *             .enableSsl(true)
     *             .enableIpsec(true)
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .description(name)
     *             .vswitchId(defaultSwitches.applyValue(getSwitchesResult -&gt; getSwitchesResult.ids()[0]))
     *             .networkType(&#34;public&#34;)
     *             .build());
     * 
     *         final var vpnGateways = VpnFunctions.getGateways(GetGatewaysArgs.builder()
     *             .vpcId(defaultNetworks.applyValue(getNetworksResult -&gt; getNetworksResult.ids()[0]))
     *             .ids(defaultGateway.id())
     *             .status(&#34;Active&#34;)
     *             .businessStatus(&#34;Normal&#34;)
     *             .nameRegex(&#34;tf-example&#34;)
     *             .includeReservationData(true)
     *             .outputFile(&#34;/tmp/vpns&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain(GetGatewaysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:vpn/getGateways:getGateways", TypeShape.of(GetGatewaysResult.class), args, Utilities.withVersion(options));
    }
}
