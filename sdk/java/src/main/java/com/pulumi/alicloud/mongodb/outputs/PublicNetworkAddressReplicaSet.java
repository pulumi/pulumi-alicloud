// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mongodb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PublicNetworkAddressReplicaSet {
    /**
     * @return The connection address of the node.
     * 
     */
    private @Nullable String connectionDomain;
    /**
     * @return The connection port of the node.
     * 
     */
    private @Nullable String connectionPort;
    /**
     * @return The connection type.
     * 
     */
    private @Nullable String connectionType;
    /**
     * @return The network type, should be always &#34;Public&#34;.
     * 
     */
    private @Nullable String networkType;
    /**
     * @return The role of the node.
     * 
     */
    private @Nullable String replicaSetRole;
    /**
     * @return The id of the role.
     * 
     */
    private @Nullable String roleId;

    private PublicNetworkAddressReplicaSet() {}
    /**
     * @return The connection address of the node.
     * 
     */
    public Optional<String> connectionDomain() {
        return Optional.ofNullable(this.connectionDomain);
    }
    /**
     * @return The connection port of the node.
     * 
     */
    public Optional<String> connectionPort() {
        return Optional.ofNullable(this.connectionPort);
    }
    /**
     * @return The connection type.
     * 
     */
    public Optional<String> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }
    /**
     * @return The network type, should be always &#34;Public&#34;.
     * 
     */
    public Optional<String> networkType() {
        return Optional.ofNullable(this.networkType);
    }
    /**
     * @return The role of the node.
     * 
     */
    public Optional<String> replicaSetRole() {
        return Optional.ofNullable(this.replicaSetRole);
    }
    /**
     * @return The id of the role.
     * 
     */
    public Optional<String> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicNetworkAddressReplicaSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connectionDomain;
        private @Nullable String connectionPort;
        private @Nullable String connectionType;
        private @Nullable String networkType;
        private @Nullable String replicaSetRole;
        private @Nullable String roleId;
        public Builder() {}
        public Builder(PublicNetworkAddressReplicaSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionDomain = defaults.connectionDomain;
    	      this.connectionPort = defaults.connectionPort;
    	      this.connectionType = defaults.connectionType;
    	      this.networkType = defaults.networkType;
    	      this.replicaSetRole = defaults.replicaSetRole;
    	      this.roleId = defaults.roleId;
        }

        @CustomType.Setter
        public Builder connectionDomain(@Nullable String connectionDomain) {

            this.connectionDomain = connectionDomain;
            return this;
        }
        @CustomType.Setter
        public Builder connectionPort(@Nullable String connectionPort) {

            this.connectionPort = connectionPort;
            return this;
        }
        @CustomType.Setter
        public Builder connectionType(@Nullable String connectionType) {

            this.connectionType = connectionType;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(@Nullable String networkType) {

            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder replicaSetRole(@Nullable String replicaSetRole) {

            this.replicaSetRole = replicaSetRole;
            return this;
        }
        @CustomType.Setter
        public Builder roleId(@Nullable String roleId) {

            this.roleId = roleId;
            return this;
        }
        public PublicNetworkAddressReplicaSet build() {
            final var _resultValue = new PublicNetworkAddressReplicaSet();
            _resultValue.connectionDomain = connectionDomain;
            _resultValue.connectionPort = connectionPort;
            _resultValue.connectionType = connectionType;
            _resultValue.networkType = networkType;
            _resultValue.replicaSetRole = replicaSetRole;
            _resultValue.roleId = roleId;
            return _resultValue;
        }
    }
}
