// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.polardb.inputs.GetAccountsArgs;
import com.pulumi.alicloud.polardb.inputs.GetAccountsPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
import com.pulumi.alicloud.polardb.inputs.GetClustersPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetDatabasesArgs;
import com.pulumi.alicloud.polardb.inputs.GetDatabasesPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetEndpointsArgs;
import com.pulumi.alicloud.polardb.inputs.GetEndpointsPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
import com.pulumi.alicloud.polardb.inputs.GetNodeClassesPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsPlainArgs;
import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
import com.pulumi.alicloud.polardb.inputs.GetZonesPlainArgs;
import com.pulumi.alicloud.polardb.outputs.GetAccountsResult;
import com.pulumi.alicloud.polardb.outputs.GetClustersResult;
import com.pulumi.alicloud.polardb.outputs.GetDatabasesResult;
import com.pulumi.alicloud.polardb.outputs.GetEndpointsResult;
import com.pulumi.alicloud.polardb.outputs.GetGlobalDatabaseNetworksResult;
import com.pulumi.alicloud.polardb.outputs.GetNodeClassesResult;
import com.pulumi.alicloud.polardb.outputs.GetParameterGroupsResult;
import com.pulumi.alicloud.polardb.outputs.GetZonesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class PolardbFunctions {
    /**
     * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
     * Filters support regular expression for the account name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Account;
     * import com.pulumi.alicloud.polardb.AccountArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var accountAccount = new Account(&#34;accountAccount&#34;, AccountArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .accountName(&#34;tfnormal_01&#34;)
     *             .accountPassword(&#34;Test12345&#34;)
     *             .accountDescription(&#34;tf_account_description&#34;)
     *             .accountType(&#34;Normal&#34;)
     *             .build());
     * 
     *         final var defaultAccounts = PolardbFunctions.getAccounts(GetAccountsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(accountAccount.accountName())
     *             .build());
     * 
     *         ctx.export(&#34;account&#34;, defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult).applyValue(defaultAccounts -&gt; defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].accountName())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args) {
        return getAccounts(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
     * Filters support regular expression for the account name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Account;
     * import com.pulumi.alicloud.polardb.AccountArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var accountAccount = new Account(&#34;accountAccount&#34;, AccountArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .accountName(&#34;tfnormal_01&#34;)
     *             .accountPassword(&#34;Test12345&#34;)
     *             .accountDescription(&#34;tf_account_description&#34;)
     *             .accountType(&#34;Normal&#34;)
     *             .build());
     * 
     *         final var defaultAccounts = PolardbFunctions.getAccounts(GetAccountsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(accountAccount.accountName())
     *             .build());
     * 
     *         ctx.export(&#34;account&#34;, defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult).applyValue(defaultAccounts -&gt; defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].accountName())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args) {
        return getAccountsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
     * Filters support regular expression for the account name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Account;
     * import com.pulumi.alicloud.polardb.AccountArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var accountAccount = new Account(&#34;accountAccount&#34;, AccountArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .accountName(&#34;tfnormal_01&#34;)
     *             .accountPassword(&#34;Test12345&#34;)
     *             .accountDescription(&#34;tf_account_description&#34;)
     *             .accountType(&#34;Normal&#34;)
     *             .build());
     * 
     *         final var defaultAccounts = PolardbFunctions.getAccounts(GetAccountsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(accountAccount.accountName())
     *             .build());
     * 
     *         ctx.export(&#34;account&#34;, defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult).applyValue(defaultAccounts -&gt; defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].accountName())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getAccounts` data source provides a collection of PolarDB cluster database account available in Alibaba Cloud account.
     * Filters support regular expression for the account name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Account;
     * import com.pulumi.alicloud.polardb.AccountArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var accountAccount = new Account(&#34;accountAccount&#34;, AccountArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .accountName(&#34;tfnormal_01&#34;)
     *             .accountPassword(&#34;Test12345&#34;)
     *             .accountDescription(&#34;tf_account_description&#34;)
     *             .accountType(&#34;Normal&#34;)
     *             .build());
     * 
     *         final var defaultAccounts = PolardbFunctions.getAccounts(GetAccountsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(accountAccount.accountName())
     *             .build());
     * 
     *         ctx.export(&#34;account&#34;, defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult).applyValue(defaultAccounts -&gt; defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].accountName())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClustersResult> getClusters() {
        return getClusters(GetClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClustersResult> getClustersPlain() {
        return getClustersPlain(GetClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClustersResult> getClusters(GetClustersArgs args) {
        return getClusters(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClustersResult> getClustersPlain(GetClustersPlainArgs args) {
        return getClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetClustersResult> getClusters(GetClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getClusters:getClusters", TypeShape.of(GetClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getClusters` data source provides a collection of PolarDB clusters available in Alibaba Cloud account.
     * Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.66.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.id())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolardbClusterId&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetClustersResult> getClustersPlain(GetClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getClusters:getClusters", TypeShape.of(GetClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getDatabases` data source provides a collection of PolarDB cluster database available in Alibaba Cloud account.
     * Filters support regular expression for the database name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Database;
     * import com.pulumi.alicloud.polardb.DatabaseArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var defaultDatabase = new Database(&#34;defaultDatabase&#34;, DatabaseArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .dbName(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; String.format(&#34;tfaccountpri_%s&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id()))))
     *             .dbDescription(&#34;from terraform&#34;)
     *             .build());
     * 
     *         final var defaultDatabases = PolardbFunctions.getDatabases(GetDatabasesArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(defaultDatabase.dbName())
     *             .build());
     * 
     *         ctx.export(&#34;database&#34;, defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult).applyValue(defaultDatabases -&gt; defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult.databases()[0].dbName())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(GetDatabasesArgs args) {
        return getDatabases(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getDatabases` data source provides a collection of PolarDB cluster database available in Alibaba Cloud account.
     * Filters support regular expression for the database name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Database;
     * import com.pulumi.alicloud.polardb.DatabaseArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var defaultDatabase = new Database(&#34;defaultDatabase&#34;, DatabaseArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .dbName(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; String.format(&#34;tfaccountpri_%s&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id()))))
     *             .dbDescription(&#34;from terraform&#34;)
     *             .build());
     * 
     *         final var defaultDatabases = PolardbFunctions.getDatabases(GetDatabasesArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(defaultDatabase.dbName())
     *             .build());
     * 
     *         ctx.export(&#34;database&#34;, defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult).applyValue(defaultDatabases -&gt; defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult.databases()[0].dbName())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(GetDatabasesPlainArgs args) {
        return getDatabasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getDatabases` data source provides a collection of PolarDB cluster database available in Alibaba Cloud account.
     * Filters support regular expression for the database name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Database;
     * import com.pulumi.alicloud.polardb.DatabaseArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var defaultDatabase = new Database(&#34;defaultDatabase&#34;, DatabaseArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .dbName(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; String.format(&#34;tfaccountpri_%s&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id()))))
     *             .dbDescription(&#34;from terraform&#34;)
     *             .build());
     * 
     *         final var defaultDatabases = PolardbFunctions.getDatabases(GetDatabasesArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(defaultDatabase.dbName())
     *             .build());
     * 
     *         ctx.export(&#34;database&#34;, defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult).applyValue(defaultDatabases -&gt; defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult.databases()[0].dbName())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(GetDatabasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getDatabases` data source provides a collection of PolarDB cluster database available in Alibaba Cloud account.
     * Filters support regular expression for the database name, searches by clusterId.
     * 
     * &gt; **NOTE:** Available since v1.70.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.Database;
     * import com.pulumi.alicloud.polardb.DatabaseArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         var defaultDatabase = new Database(&#34;defaultDatabase&#34;, DatabaseArgs.builder()        
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .dbName(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; String.format(&#34;tfaccountpri_%s&#34;, polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id()))))
     *             .dbDescription(&#34;from terraform&#34;)
     *             .build());
     * 
     *         final var defaultDatabases = PolardbFunctions.getDatabases(GetDatabasesArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .nameRegex(defaultDatabase.dbName())
     *             .build());
     * 
     *         ctx.export(&#34;database&#34;, defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult).applyValue(defaultDatabases -&gt; defaultDatabases.applyValue(getDatabasesResult -&gt; getDatabasesResult.databases()[0].dbName())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(GetDatabasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
     * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.68.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetEndpointsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         final var defaultEndpoints = PolardbFunctions.getEndpoints(GetEndpointsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .build());
     * 
     *         ctx.export(&#34;endpoint&#34;, defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult).applyValue(defaultEndpoints -&gt; defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult.endpoints()[0].dbEndpointId())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEndpointsResult> getEndpoints(GetEndpointsArgs args) {
        return getEndpoints(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
     * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.68.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetEndpointsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         final var defaultEndpoints = PolardbFunctions.getEndpoints(GetEndpointsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .build());
     * 
     *         ctx.export(&#34;endpoint&#34;, defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult).applyValue(defaultEndpoints -&gt; defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult.endpoints()[0].dbEndpointId())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEndpointsResult> getEndpointsPlain(GetEndpointsPlainArgs args) {
        return getEndpointsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
     * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.68.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetEndpointsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         final var defaultEndpoints = PolardbFunctions.getEndpoints(GetEndpointsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .build());
     * 
     *         ctx.export(&#34;endpoint&#34;, defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult).applyValue(defaultEndpoints -&gt; defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult.endpoints()[0].dbEndpointId())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEndpointsResult> getEndpoints(GetEndpointsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getEndpoints:getEndpoints", TypeShape.of(GetEndpointsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.polardb.getEndpoints` data source provides a collection of PolarDB endpoints available in Alibaba Cloud account.
     * Filters support regular expression for the cluster name, searches by clusterId, and other filters which are listed below.
     * 
     * &gt; **NOTE:** Available since v1.68.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetClustersArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetEndpointsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         final var polardbClustersDs = PolardbFunctions.getClusters(GetClustersArgs.builder()
     *             .descriptionRegex(cluster.description())
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         final var defaultEndpoints = PolardbFunctions.getEndpoints(GetEndpointsArgs.builder()
     *             .dbClusterId(polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult).applyValue(polardbClustersDs -&gt; polardbClustersDs.applyValue(getClustersResult -&gt; getClustersResult.clusters()[0].id())))
     *             .build());
     * 
     *         ctx.export(&#34;endpoint&#34;, defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult).applyValue(defaultEndpoints -&gt; defaultEndpoints.applyValue(getEndpointsResult -&gt; getEndpointsResult.endpoints()[0].dbEndpointId())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEndpointsResult> getEndpointsPlain(GetEndpointsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getEndpoints:getEndpoints", TypeShape.of(GetEndpointsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworks() {
        return getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworksPlain() {
        return getGlobalDatabaseNetworksPlain(GetGlobalDatabaseNetworksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs args) {
        return getGlobalDatabaseNetworks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworksPlain(GetGlobalDatabaseNetworksPlainArgs args) {
        return getGlobalDatabaseNetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getGlobalDatabaseNetworks:getGlobalDatabaseNetworks", TypeShape.of(GetGlobalDatabaseNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB Global Database Networks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.181.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.polardb.Cluster;
     * import com.pulumi.alicloud.polardb.ClusterArgs;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetwork;
     * import com.pulumi.alicloud.polardb.GlobalDatabaseNetworkArgs;
     * import com.pulumi.alicloud.polardb.inputs.GetGlobalDatabaseNetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .category(&#34;Normal&#34;)
     *             .build());
     * 
     *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;terraform-example&#34;)
     *             .cidrBlock(&#34;172.16.0.0/16&#34;)
     *             .build());
     * 
     *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(this_.classes()[0].zoneId())
     *             .vswitchName(&#34;terraform-example&#34;)
     *             .build());
     * 
     *         var cluster = new Cluster(&#34;cluster&#34;, ClusterArgs.builder()        
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .payType(&#34;PostPaid&#34;)
     *             .dbNodeCount(&#34;2&#34;)
     *             .dbNodeClass(this_.classes()[0].supportedEngines()[0].availableResources()[0].dbNodeClass())
     *             .vswitchId(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultGlobalDatabaseNetwork = new GlobalDatabaseNetwork(&#34;defaultGlobalDatabaseNetwork&#34;, GlobalDatabaseNetworkArgs.builder()        
     *             .dbClusterId(cluster.id())
     *             .description(cluster.id())
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .ids(defaultGlobalDatabaseNetwork.id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId1&#34;, ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(ids -&gt; ids.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *         final var description = PolardbFunctions.getGlobalDatabaseNetworks(GetGlobalDatabaseNetworksArgs.builder()
     *             .description(defaultGlobalDatabaseNetwork.description())
     *             .build());
     * 
     *         ctx.export(&#34;polardbGlobalDatabaseNetworkId2&#34;, description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult).applyValue(description -&gt; description.applyValue(getGlobalDatabaseNetworksResult -&gt; getGlobalDatabaseNetworksResult.networks()[0].id())));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGlobalDatabaseNetworksResult> getGlobalDatabaseNetworksPlain(GetGlobalDatabaseNetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getGlobalDatabaseNetworks:getGlobalDatabaseNetworks", TypeShape.of(GetGlobalDatabaseNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB node classes resource available info of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.81.0+
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .payType(&#34;PostPaid&#34;)
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;5.6&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;polardbNodeClasses&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()));
     *         ctx.export(&#34;polardbAvailableZoneId&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()[0].zoneId()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNodeClassesResult> getNodeClasses(GetNodeClassesArgs args) {
        return getNodeClasses(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB node classes resource available info of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.81.0+
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .payType(&#34;PostPaid&#34;)
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;5.6&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;polardbNodeClasses&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()));
     *         ctx.export(&#34;polardbAvailableZoneId&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()[0].zoneId()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNodeClassesResult> getNodeClassesPlain(GetNodeClassesPlainArgs args) {
        return getNodeClassesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB node classes resource available info of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.81.0+
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .payType(&#34;PostPaid&#34;)
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;5.6&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;polardbNodeClasses&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()));
     *         ctx.export(&#34;polardbAvailableZoneId&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()[0].zoneId()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNodeClassesResult> getNodeClasses(GetNodeClassesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getNodeClasses:getNodeClasses", TypeShape.of(GetNodeClassesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB node classes resource available info of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.81.0+
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetNodeClassesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = PolardbFunctions.getNodeClasses(GetNodeClassesArgs.builder()
     *             .payType(&#34;PostPaid&#34;)
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;5.6&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;polardbNodeClasses&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()));
     *         ctx.export(&#34;polardbAvailableZoneId&#34;, resources.applyValue(getNodeClassesResult -&gt; getNodeClassesResult.classes()[0].zoneId()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNodeClassesResult> getNodeClassesPlain(GetNodeClassesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getNodeClasses:getNodeClasses", TypeShape.of(GetNodeClassesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParameterGroupsResult> getParameterGroups() {
        return getParameterGroups(GetParameterGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParameterGroupsResult> getParameterGroupsPlain() {
        return getParameterGroupsPlain(GetParameterGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParameterGroupsResult> getParameterGroups(GetParameterGroupsArgs args) {
        return getParameterGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParameterGroupsResult> getParameterGroupsPlain(GetParameterGroupsPlainArgs args) {
        return getParameterGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParameterGroupsResult> getParameterGroups(GetParameterGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getParameterGroups:getParameterGroups", TypeShape.of(GetParameterGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.183.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetParameterGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .dbType(&#34;MySQL&#34;)
     *             .dbVersion(&#34;8.0&#34;)
     *             .build());
     * 
     *         final var ids = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .ids(default_.groups()[0].id())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId1&#34;, ids.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *         final var nameRegex = PolardbFunctions.getParameterGroups(GetParameterGroupsArgs.builder()
     *             .nameRegex(default_.groups()[0].parameterGroupName())
     *             .build());
     * 
     *         ctx.export(&#34;polardbParameterGroupId2&#34;, nameRegex.applyValue(getParameterGroupsResult -&gt; getParameterGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParameterGroupsResult> getParameterGroupsPlain(GetParameterGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getParameterGroups:getParameterGroups", TypeShape.of(GetParameterGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetZonesResult> getZones() {
        return getZones(GetZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain() {
        return getZonesPlain(GetZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args) {
        return getZones(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args) {
        return getZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:polardb/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides availability zones for PolarDB that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.polardb.PolardbFunctions;
     * import com.pulumi.alicloud.polardb.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var zonesIds = PolardbFunctions.getZones();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:polardb/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
}
