// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WhitelistTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final WhitelistTemplateArgs Empty = new WhitelistTemplateArgs();

    /**
     * IP whitelist, multiple IP addresses should be separated by commas (,) and cannot be duplicated.Supports the following two formats:
     * - IP address format, for example: 10.23.XX.XX.
     * - CIDR format, for example: 10.23.XX.XX/24 (no inter domain routing, 24 represents the length of the prefix in the address, ranging from 1 to 32).
     * 
     */
    @Import(name="ipWhiteList", required=true)
    private Output<String> ipWhiteList;

    /**
     * @return IP whitelist, multiple IP addresses should be separated by commas (,) and cannot be duplicated.Supports the following two formats:
     * - IP address format, for example: 10.23.XX.XX.
     * - CIDR format, for example: 10.23.XX.XX/24 (no inter domain routing, 24 represents the length of the prefix in the address, ranging from 1 to 32).
     * 
     */
    public Output<String> ipWhiteList() {
        return this.ipWhiteList;
    }

    /**
     * Whitelist template name. Passed in when creating a template, and cannot have the same name under the same account, starting with a letter.
     * 
     */
    @Import(name="templateName", required=true)
    private Output<String> templateName;

    /**
     * @return Whitelist template name. Passed in when creating a template, and cannot have the same name under the same account, starting with a letter.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    private WhitelistTemplateArgs() {}

    private WhitelistTemplateArgs(WhitelistTemplateArgs $) {
        this.ipWhiteList = $.ipWhiteList;
        this.templateName = $.templateName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WhitelistTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WhitelistTemplateArgs $;

        public Builder() {
            $ = new WhitelistTemplateArgs();
        }

        public Builder(WhitelistTemplateArgs defaults) {
            $ = new WhitelistTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipWhiteList IP whitelist, multiple IP addresses should be separated by commas (,) and cannot be duplicated.Supports the following two formats:
         * - IP address format, for example: 10.23.XX.XX.
         * - CIDR format, for example: 10.23.XX.XX/24 (no inter domain routing, 24 represents the length of the prefix in the address, ranging from 1 to 32).
         * 
         * @return builder
         * 
         */
        public Builder ipWhiteList(Output<String> ipWhiteList) {
            $.ipWhiteList = ipWhiteList;
            return this;
        }

        /**
         * @param ipWhiteList IP whitelist, multiple IP addresses should be separated by commas (,) and cannot be duplicated.Supports the following two formats:
         * - IP address format, for example: 10.23.XX.XX.
         * - CIDR format, for example: 10.23.XX.XX/24 (no inter domain routing, 24 represents the length of the prefix in the address, ranging from 1 to 32).
         * 
         * @return builder
         * 
         */
        public Builder ipWhiteList(String ipWhiteList) {
            return ipWhiteList(Output.of(ipWhiteList));
        }

        /**
         * @param templateName Whitelist template name. Passed in when creating a template, and cannot have the same name under the same account, starting with a letter.
         * 
         * @return builder
         * 
         */
        public Builder templateName(Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName Whitelist template name. Passed in when creating a template, and cannot have the same name under the same account, starting with a letter.
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        public WhitelistTemplateArgs build() {
            if ($.ipWhiteList == null) {
                throw new MissingRequiredPropertyException("WhitelistTemplateArgs", "ipWhiteList");
            }
            if ($.templateName == null) {
                throw new MissingRequiredPropertyException("WhitelistTemplateArgs", "templateName");
            }
            return $;
        }
    }

}
