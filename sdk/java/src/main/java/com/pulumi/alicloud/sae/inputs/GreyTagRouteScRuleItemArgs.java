// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GreyTagRouteScRuleItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final GreyTagRouteScRuleItemArgs Empty = new GreyTagRouteScRuleItemArgs();

    @Import(name="cond")
    private @Nullable Output<String> cond;

    public Optional<Output<String>> cond() {
        return Optional.ofNullable(this.cond);
    }

    /**
     * The name of the parameter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the parameter.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="operator")
    private @Nullable Output<String> operator;

    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * The compare types. Valid values: `param`, `cookie`, `header`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The compare types. Valid values: `param`, `cookie`, `header`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private GreyTagRouteScRuleItemArgs() {}

    private GreyTagRouteScRuleItemArgs(GreyTagRouteScRuleItemArgs $) {
        this.cond = $.cond;
        this.name = $.name;
        this.operator = $.operator;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GreyTagRouteScRuleItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GreyTagRouteScRuleItemArgs $;

        public Builder() {
            $ = new GreyTagRouteScRuleItemArgs();
        }

        public Builder(GreyTagRouteScRuleItemArgs defaults) {
            $ = new GreyTagRouteScRuleItemArgs(Objects.requireNonNull(defaults));
        }

        public Builder cond(@Nullable Output<String> cond) {
            $.cond = cond;
            return this;
        }

        public Builder cond(String cond) {
            return cond(Output.of(cond));
        }

        /**
         * @param name The name of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the parameter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param type The compare types. Valid values: `param`, `cookie`, `header`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The compare types. Valid values: `param`, `cookie`, `header`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public GreyTagRouteScRuleItemArgs build() {
            return $;
        }
    }

}
