// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LoadbalancerCommonBandwidthPackageAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerCommonBandwidthPackageAttachmentArgs Empty = new LoadbalancerCommonBandwidthPackageAttachmentArgs();

    /**
     * The ID of the bound shared bandwidth package.
     * 
     */
    @Import(name="bandwidthPackageId", required=true)
    private Output<String> bandwidthPackageId;

    /**
     * @return The ID of the bound shared bandwidth package.
     * 
     */
    public Output<String> bandwidthPackageId() {
        return this.bandwidthPackageId;
    }

    /**
     * The ID of the network-based server load balancer instance.
     * 
     */
    @Import(name="loadBalancerId", required=true)
    private Output<String> loadBalancerId;

    /**
     * @return The ID of the network-based server load balancer instance.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    private LoadbalancerCommonBandwidthPackageAttachmentArgs() {}

    private LoadbalancerCommonBandwidthPackageAttachmentArgs(LoadbalancerCommonBandwidthPackageAttachmentArgs $) {
        this.bandwidthPackageId = $.bandwidthPackageId;
        this.loadBalancerId = $.loadBalancerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerCommonBandwidthPackageAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerCommonBandwidthPackageAttachmentArgs $;

        public Builder() {
            $ = new LoadbalancerCommonBandwidthPackageAttachmentArgs();
        }

        public Builder(LoadbalancerCommonBandwidthPackageAttachmentArgs defaults) {
            $ = new LoadbalancerCommonBandwidthPackageAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidthPackageId The ID of the bound shared bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageId(Output<String> bandwidthPackageId) {
            $.bandwidthPackageId = bandwidthPackageId;
            return this;
        }

        /**
         * @param bandwidthPackageId The ID of the bound shared bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageId(String bandwidthPackageId) {
            return bandwidthPackageId(Output.of(bandwidthPackageId));
        }

        /**
         * @param loadBalancerId The ID of the network-based server load balancer instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The ID of the network-based server load balancer instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        public LoadbalancerCommonBandwidthPackageAttachmentArgs build() {
            $.bandwidthPackageId = Objects.requireNonNull($.bandwidthPackageId, "expected parameter 'bandwidthPackageId' to be non-null");
            $.loadBalancerId = Objects.requireNonNull($.loadBalancerId, "expected parameter 'loadBalancerId' to be non-null");
            return $;
        }
    }

}
