// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.alicloud.sls.outputs.GetLogtailConfigsConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogtailConfigsResult {
    /**
     * @return A list of Logtail Config Entries. Each element contains the following attributes:
     * 
     */
    private List<GetLogtailConfigsConfig> configs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Logtail Config IDs.
     * 
     */
    private List<String> ids;
    private String logstoreName;
    /**
     * @return The name of the resource
     * 
     */
    private @Nullable String logtailConfigName;
    private @Nullable String nameRegex;
    /**
     * @return A list of name of Logtail Configs.
     * 
     */
    private List<String> names;
    private Integer offset;
    private @Nullable String outputFile;
    private String projectName;
    private Integer size;

    private GetLogtailConfigsResult() {}
    /**
     * @return A list of Logtail Config Entries. Each element contains the following attributes:
     * 
     */
    public List<GetLogtailConfigsConfig> configs() {
        return this.configs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Logtail Config IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public String logstoreName() {
        return this.logstoreName;
    }
    /**
     * @return The name of the resource
     * 
     */
    public Optional<String> logtailConfigName() {
        return Optional.ofNullable(this.logtailConfigName);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of name of Logtail Configs.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Integer offset() {
        return this.offset;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public String projectName() {
        return this.projectName;
    }
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogtailConfigsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLogtailConfigsConfig> configs;
        private String id;
        private List<String> ids;
        private String logstoreName;
        private @Nullable String logtailConfigName;
        private @Nullable String nameRegex;
        private List<String> names;
        private Integer offset;
        private @Nullable String outputFile;
        private String projectName;
        private Integer size;
        public Builder() {}
        public Builder(GetLogtailConfigsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.logstoreName = defaults.logstoreName;
    	      this.logtailConfigName = defaults.logtailConfigName;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.offset = defaults.offset;
    	      this.outputFile = defaults.outputFile;
    	      this.projectName = defaults.projectName;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder configs(List<GetLogtailConfigsConfig> configs) {
            if (configs == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "configs");
            }
            this.configs = configs;
            return this;
        }
        public Builder configs(GetLogtailConfigsConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder logstoreName(String logstoreName) {
            if (logstoreName == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "logstoreName");
            }
            this.logstoreName = logstoreName;
            return this;
        }
        @CustomType.Setter
        public Builder logtailConfigName(@Nullable String logtailConfigName) {

            this.logtailConfigName = logtailConfigName;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder offset(Integer offset) {
            if (offset == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "offset");
            }
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetLogtailConfigsResult", "size");
            }
            this.size = size;
            return this;
        }
        public GetLogtailConfigsResult build() {
            final var _resultValue = new GetLogtailConfigsResult();
            _resultValue.configs = configs;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.logstoreName = logstoreName;
            _resultValue.logtailConfigName = logtailConfigName;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.offset = offset;
            _resultValue.outputFile = outputFile;
            _resultValue.projectName = projectName;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
