// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.dts.JobMonitorRuleArgs;
import com.pulumi.alicloud.dts.inputs.JobMonitorRuleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a DTS Job Monitor Rule resource.
 * 
 * For information about DTS Job Monitor Rule and how to use it, see [What is Job Monitor Rule](https://www.alibabacloud.com/help/en/dts/developer-reference/api-createjobmonitorrule).
 * 
 * &gt; **NOTE:** Available since v1.134.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetRegionsArgs;
 * import com.pulumi.alicloud.rds.RdsFunctions;
 * import com.pulumi.alicloud.rds.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.rds.inputs.GetInstanceClassesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.rds.Instance;
 * import com.pulumi.alicloud.rds.InstanceArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import com.pulumi.alicloud.rds.RdsAccount;
 * import com.pulumi.alicloud.rds.RdsAccountArgs;
 * import com.pulumi.alicloud.rds.Database;
 * import com.pulumi.alicloud.rds.DatabaseArgs;
 * import com.pulumi.alicloud.rds.AccountPrivilege;
 * import com.pulumi.alicloud.rds.AccountPrivilegeArgs;
 * import com.pulumi.alicloud.dts.MigrationInstance;
 * import com.pulumi.alicloud.dts.MigrationInstanceArgs;
 * import com.pulumi.alicloud.dts.MigrationJob;
 * import com.pulumi.alicloud.dts.MigrationJobArgs;
 * import com.pulumi.alicloud.dts.JobMonitorRule;
 * import com.pulumi.alicloud.dts.JobMonitorRuleArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var example = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         final var exampleGetZones = RdsFunctions.getZones(GetZonesArgs.builder()
 *             .engine("MySQL")
 *             .engineVersion("8.0")
 *             .instanceChargeType("PostPaid")
 *             .category("Basic")
 *             .dbInstanceStorageType("cloud_essd")
 *             .build());
 * 
 *         final var exampleGetInstanceClasses = RdsFunctions.getInstanceClasses(GetInstanceClassesArgs.builder()
 *             .zoneId(exampleGetZones.zones()[0].id())
 *             .engine("MySQL")
 *             .engineVersion("8.0")
 *             .instanceChargeType("PostPaid")
 *             .category("Basic")
 *             .dbInstanceStorageType("cloud_essd")
 *             .build());
 * 
 *         var exampleNetwork = new Network("exampleNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.16.0.0/16")
 *             .build());
 * 
 *         var exampleSwitch = new Switch("exampleSwitch", SwitchArgs.builder()
 *             .vpcId(exampleNetwork.id())
 *             .cidrBlock("172.16.0.0/24")
 *             .zoneId(exampleGetZones.zones()[0].id())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var exampleSecurityGroup = new SecurityGroup("exampleSecurityGroup", SecurityGroupArgs.builder()
 *             .name(name)
 *             .vpcId(exampleNetwork.id())
 *             .build());
 * 
 *         for (var i = 0; i < 2; i++) {
 *             new Instance("exampleInstance-" + i, InstanceArgs.builder()
 *                 .engine("MySQL")
 *                 .engineVersion("8.0")
 *                 .instanceType(exampleGetInstanceClasses.instanceClasses()[0].instanceClass())
 *                 .instanceStorage(exampleGetInstanceClasses.instanceClasses()[0].storageRange().min())
 *                 .instanceChargeType("Postpaid")
 *                 .instanceName(StdFunctions.format(FormatArgs.builder()
 *                     .input(String.format("%s_%d", name))
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .vswitchId(exampleSwitch.id())
 *                 .monitoringPeriod(60)
 *                 .dbInstanceStorageType("cloud_essd")
 *                 .securityGroupIds(exampleSecurityGroup.id())
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i < 2; i++) {
 *             new RdsAccount("exampleRdsAccount-" + i, RdsAccountArgs.builder()
 *                 .dbInstanceId(exampleInstance[range.value()].id())
 *                 .accountName(StdFunctions.format(FormatArgs.builder()
 *                     .input("example_name_%d")
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .accountPassword(StdFunctions.format(FormatArgs.builder()
 *                     .input("example_password_%d")
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i < 2; i++) {
 *             new Database("exampleDatabase-" + i, DatabaseArgs.builder()
 *                 .instanceId(exampleInstance[range.value()].id())
 *                 .name(StdFunctions.format(FormatArgs.builder()
 *                     .input(String.format("%s_%d", name))
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i < 2; i++) {
 *             new AccountPrivilege("exampleAccountPrivilege-" + i, AccountPrivilegeArgs.builder()
 *                 .instanceId(exampleInstance[range.value()].id())
 *                 .accountName(exampleRdsAccount[range.value()].name())
 *                 .privilege("ReadWrite")
 *                 .dbNames(exampleDatabase[range.value()].name())
 *                 .build());
 * 
 *         
 * }
 *         var exampleMigrationInstance = new MigrationInstance("exampleMigrationInstance", MigrationInstanceArgs.builder()
 *             .paymentType("PayAsYouGo")
 *             .sourceEndpointEngineName("MySQL")
 *             .sourceEndpointRegion(example.regions()[0].id())
 *             .destinationEndpointEngineName("MySQL")
 *             .destinationEndpointRegion(example.regions()[0].id())
 *             .instanceClass("small")
 *             .syncArchitecture("oneway")
 *             .build());
 * 
 *         var exampleMigrationJob = new MigrationJob("exampleMigrationJob", MigrationJobArgs.builder()
 *             .dtsInstanceId(exampleMigrationInstance.id())
 *             .dtsJobName(name)
 *             .sourceEndpointInstanceType("RDS")
 *             .sourceEndpointInstanceId(exampleAccountPrivilege[0].instanceId())
 *             .sourceEndpointEngineName("MySQL")
 *             .sourceEndpointRegion(example.regions()[0].id())
 *             .sourceEndpointUserName(exampleRdsAccount[0].accountName())
 *             .sourceEndpointPassword(exampleRdsAccount[0].accountPassword())
 *             .destinationEndpointInstanceType("RDS")
 *             .destinationEndpointInstanceId(exampleAccountPrivilege[1].instanceId())
 *             .destinationEndpointEngineName("MySQL")
 *             .destinationEndpointRegion(example.regions()[0].id())
 *             .destinationEndpointUserName(exampleRdsAccount[1].accountName())
 *             .destinationEndpointPassword(exampleRdsAccount[1].accountPassword())
 *             .dbList(Output.tuple(exampleDatabase[0].name(), exampleDatabase[1].name()).applyValue(values -> {
 *                 var exampleDatabaseName = values.t1;
 *                 var exampleDatabaseName1 = values.t2;
 *                 return serializeJson(
 *                     jsonObject(
 *                         jsonProperty(exampleDatabaseName, jsonObject(
 *                             jsonProperty("name", exampleDatabaseName1),
 *                             jsonProperty("all", true)
 *                         ))
 *                     ));
 *             }))
 *             .structureInitialization(true)
 *             .dataInitialization(true)
 *             .dataSynchronization(true)
 *             .status("Migrating")
 *             .build());
 * 
 *         var exampleJobMonitorRule = new JobMonitorRule("exampleJobMonitorRule", JobMonitorRuleArgs.builder()
 *             .dtsJobId(exampleMigrationJob.id())
 *             .type("delay")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * DTS Job Monitor Rule can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:dts/jobMonitorRule:JobMonitorRule example &lt;dts_job_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:dts/jobMonitorRule:JobMonitorRule")
public class JobMonitorRule extends com.pulumi.resources.CustomResource {
    /**
     * Trigger delay alarm threshold, which is measured in seconds.
     * 
     */
    @Export(name="delayRuleTime", refs={String.class}, tree="[0]")
    private Output<String> delayRuleTime;

    /**
     * @return Trigger delay alarm threshold, which is measured in seconds.
     * 
     */
    public Output<String> delayRuleTime() {
        return this.delayRuleTime;
    }
    /**
     * Migration, synchronization or subscription task ID can be by calling the [DescribeDtsJobs] get.
     * 
     */
    @Export(name="dtsJobId", refs={String.class}, tree="[0]")
    private Output<String> dtsJobId;

    /**
     * @return Migration, synchronization or subscription task ID can be by calling the [DescribeDtsJobs] get.
     * 
     */
    public Output<String> dtsJobId() {
        return this.dtsJobId;
    }
    /**
     * The alarm is triggered after notification of the contact phone number, A plurality of phone numbers between them with a comma (,) to separate.
     * 
     */
    @Export(name="phone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> phone;

    /**
     * @return The alarm is triggered after notification of the contact phone number, A plurality of phone numbers between them with a comma (,) to separate.
     * 
     */
    public Output<Optional<String>> phone() {
        return Codegen.optional(this.phone);
    }
    /**
     * Whether to enable monitoring rules, valid values: `Y`, `N`.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Whether to enable monitoring rules, valid values: `Y`, `N`.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Monitoring rules of type, valid values: `delay`, `error`. **delay**: delay alarm. **error**: abnormal alarm.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Monitoring rules of type, valid values: `delay`, `error`. **delay**: delay alarm. **error**: abnormal alarm.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public JobMonitorRule(java.lang.String name) {
        this(name, JobMonitorRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public JobMonitorRule(java.lang.String name, JobMonitorRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public JobMonitorRule(java.lang.String name, JobMonitorRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dts/jobMonitorRule:JobMonitorRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private JobMonitorRule(java.lang.String name, Output<java.lang.String> id, @Nullable JobMonitorRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dts/jobMonitorRule:JobMonitorRule", name, state, makeResourceOptions(options, id), false);
    }

    private static JobMonitorRuleArgs makeArgs(JobMonitorRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? JobMonitorRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static JobMonitorRule get(java.lang.String name, Output<java.lang.String> id, @Nullable JobMonitorRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new JobMonitorRule(name, id, state, options);
    }
}
