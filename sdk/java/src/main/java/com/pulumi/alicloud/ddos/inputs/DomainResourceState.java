// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos.inputs;

import com.pulumi.alicloud.ddos.inputs.DomainResourceProxyTypeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainResourceState extends com.pulumi.resources.ResourceArgs {

    public static final DomainResourceState Empty = new DomainResourceState();

    /**
     * (Available since v1.207.2) The CNAME assigned to the domain name.
     * 
     */
    @Import(name="cname")
    private @Nullable Output<String> cname;

    /**
     * @return (Available since v1.207.2) The CNAME assigned to the domain name.
     * 
     */
    public Optional<Output<String>> cname() {
        return Optional.ofNullable(this.cname);
    }

    /**
     * The domain name of the website that you want to add to the instance.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain name of the website that you want to add to the instance.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     * 
     */
    @Import(name="httpsExt")
    private @Nullable Output<String> httpsExt;

    /**
     * @return The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
     * 
     */
    public Optional<Output<String>> httpsExt() {
        return Optional.ofNullable(this.httpsExt);
    }

    /**
     * A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     * &gt; **NOTE:** There is a potential diff error because of the order of `instance_ids` values indefinite. So, from version 1.161.0, `instance_ids` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
     * 
     */
    @Import(name="instanceIds")
    private @Nullable Output<List<String>> instanceIds;

    /**
     * @return A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
     * &gt; **NOTE:** There is a potential diff error because of the order of `instance_ids` values indefinite. So, from version 1.161.0, `instance_ids` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
     * 
     */
    public Optional<Output<List<String>>> instanceIds() {
        return Optional.ofNullable(this.instanceIds);
    }

    /**
     * Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
     * 
     */
    @Import(name="ocspEnabled")
    private @Nullable Output<Boolean> ocspEnabled;

    /**
     * @return Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> ocspEnabled() {
        return Optional.ofNullable(this.ocspEnabled);
    }

    /**
     * Protocol type and port number information. See `proxy_types` below.
     * &gt; **NOTE:** From version 1.206.0, `proxy_types` can be modified.
     * 
     */
    @Import(name="proxyTypes")
    private @Nullable Output<List<DomainResourceProxyTypeArgs>> proxyTypes;

    /**
     * @return Protocol type and port number information. See `proxy_types` below.
     * &gt; **NOTE:** From version 1.206.0, `proxy_types` can be modified.
     * 
     */
    public Optional<Output<List<DomainResourceProxyTypeArgs>>> proxyTypes() {
        return Optional.ofNullable(this.proxyTypes);
    }

    /**
     * the IP address. This field is required and must be a string array.
     * 
     */
    @Import(name="realServers")
    private @Nullable Output<List<String>> realServers;

    /**
     * @return the IP address. This field is required and must be a string array.
     * 
     */
    public Optional<Output<List<String>>> realServers() {
        return Optional.ofNullable(this.realServers);
    }

    /**
     * The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
     * 
     */
    @Import(name="rsType")
    private @Nullable Output<Integer> rsType;

    /**
     * @return The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
     * 
     */
    public Optional<Output<Integer>> rsType() {
        return Optional.ofNullable(this.rsType);
    }

    private DomainResourceState() {}

    private DomainResourceState(DomainResourceState $) {
        this.cname = $.cname;
        this.domain = $.domain;
        this.httpsExt = $.httpsExt;
        this.instanceIds = $.instanceIds;
        this.ocspEnabled = $.ocspEnabled;
        this.proxyTypes = $.proxyTypes;
        this.realServers = $.realServers;
        this.rsType = $.rsType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainResourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainResourceState $;

        public Builder() {
            $ = new DomainResourceState();
        }

        public Builder(DomainResourceState defaults) {
            $ = new DomainResourceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cname (Available since v1.207.2) The CNAME assigned to the domain name.
         * 
         * @return builder
         * 
         */
        public Builder cname(@Nullable Output<String> cname) {
            $.cname = cname;
            return this;
        }

        /**
         * @param cname (Available since v1.207.2) The CNAME assigned to the domain name.
         * 
         * @return builder
         * 
         */
        public Builder cname(String cname) {
            return cname(Output.of(cname));
        }

        /**
         * @param domain The domain name of the website that you want to add to the instance.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain name of the website that you want to add to the instance.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param httpsExt The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
         * 
         * @return builder
         * 
         */
        public Builder httpsExt(@Nullable Output<String> httpsExt) {
            $.httpsExt = httpsExt;
            return this;
        }

        /**
         * @param httpsExt The advanced HTTPS settings. This parameter takes effect only when the value of ProxyType includes https. This parameter is a string that contains a JSON struct. The JSON struct includes the following fields:
         * 
         * @return builder
         * 
         */
        public Builder httpsExt(String httpsExt) {
            return httpsExt(Output.of(httpsExt));
        }

        /**
         * @param instanceIds A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
         * &gt; **NOTE:** There is a potential diff error because of the order of `instance_ids` values indefinite. So, from version 1.161.0, `instance_ids` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(@Nullable Output<List<String>> instanceIds) {
            $.instanceIds = instanceIds;
            return this;
        }

        /**
         * @param instanceIds A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
         * &gt; **NOTE:** There is a potential diff error because of the order of `instance_ids` values indefinite. So, from version 1.161.0, `instance_ids` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(List<String> instanceIds) {
            return instanceIds(Output.of(instanceIds));
        }

        /**
         * @param instanceIds A list of instance ID that you want to associate. If this parameter is empty, only the domain name of the website is added but no instance is associated with the website.
         * &gt; **NOTE:** There is a potential diff error because of the order of `instance_ids` values indefinite. So, from version 1.161.0, `instance_ids` type has been updated as `set` from `list`, and you can use tolist to convert it to a list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }

        /**
         * @param ocspEnabled Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ocspEnabled(@Nullable Output<Boolean> ocspEnabled) {
            $.ocspEnabled = ocspEnabled;
            return this;
        }

        /**
         * @param ocspEnabled Specifies whether to enable the OCSP feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ocspEnabled(Boolean ocspEnabled) {
            return ocspEnabled(Output.of(ocspEnabled));
        }

        /**
         * @param proxyTypes Protocol type and port number information. See `proxy_types` below.
         * &gt; **NOTE:** From version 1.206.0, `proxy_types` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder proxyTypes(@Nullable Output<List<DomainResourceProxyTypeArgs>> proxyTypes) {
            $.proxyTypes = proxyTypes;
            return this;
        }

        /**
         * @param proxyTypes Protocol type and port number information. See `proxy_types` below.
         * &gt; **NOTE:** From version 1.206.0, `proxy_types` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder proxyTypes(List<DomainResourceProxyTypeArgs> proxyTypes) {
            return proxyTypes(Output.of(proxyTypes));
        }

        /**
         * @param proxyTypes Protocol type and port number information. See `proxy_types` below.
         * &gt; **NOTE:** From version 1.206.0, `proxy_types` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder proxyTypes(DomainResourceProxyTypeArgs... proxyTypes) {
            return proxyTypes(List.of(proxyTypes));
        }

        /**
         * @param realServers the IP address. This field is required and must be a string array.
         * 
         * @return builder
         * 
         */
        public Builder realServers(@Nullable Output<List<String>> realServers) {
            $.realServers = realServers;
            return this;
        }

        /**
         * @param realServers the IP address. This field is required and must be a string array.
         * 
         * @return builder
         * 
         */
        public Builder realServers(List<String> realServers) {
            return realServers(Output.of(realServers));
        }

        /**
         * @param realServers the IP address. This field is required and must be a string array.
         * 
         * @return builder
         * 
         */
        public Builder realServers(String... realServers) {
            return realServers(List.of(realServers));
        }

        /**
         * @param rsType The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder rsType(@Nullable Output<Integer> rsType) {
            $.rsType = rsType;
            return this;
        }

        /**
         * @param rsType The address type of the origin server. Use the domain name of the origin server if you deploy proxies, such as Web Application Firewall (WAF), between the origin server and the Anti-DDoS Pro or Anti-DDoS Premium instance. If you use the domain name, you must enter the address of the proxy, such as the CNAME of WAF. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder rsType(Integer rsType) {
            return rsType(Output.of(rsType));
        }

        public DomainResourceState build() {
            return $;
        }
    }

}
