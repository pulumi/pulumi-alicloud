// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBackupPoliciesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupPoliciesArgs Empty = new GetBackupPoliciesArgs();

    @Import(name="currentPage")
    private @Nullable Output<Integer> currentPage;

    public Optional<Output<Integer>> currentPage() {
        return Optional.ofNullable(this.currentPage);
    }

    /**
     * A list of Threat Detection Backup Policies IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Threat Detection Backup Policies IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The information that you want to use to identify the servers protected by the anti-ransomware policy. You can enter the IP address or ID of a server.
     * 
     */
    @Import(name="machineRemark")
    private @Nullable Output<String> machineRemark;

    /**
     * @return The information that you want to use to identify the servers protected by the anti-ransomware policy. You can enter the IP address or ID of a server.
     * 
     */
    public Optional<Output<String>> machineRemark() {
        return Optional.ofNullable(this.machineRemark);
    }

    /**
     * The name of the anti-ransomware policy that you want to query.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the anti-ransomware policy that you want to query.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A regex string to filter results by Threat Detection Backup Policies name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Threat Detection Backup Policies name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="pageSize")
    private @Nullable Output<Integer> pageSize;

    public Optional<Output<Integer>> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetBackupPoliciesArgs() {}

    private GetBackupPoliciesArgs(GetBackupPoliciesArgs $) {
        this.currentPage = $.currentPage;
        this.ids = $.ids;
        this.machineRemark = $.machineRemark;
        this.name = $.name;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.pageSize = $.pageSize;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupPoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupPoliciesArgs $;

        public Builder() {
            $ = new GetBackupPoliciesArgs();
        }

        public Builder(GetBackupPoliciesArgs defaults) {
            $ = new GetBackupPoliciesArgs(Objects.requireNonNull(defaults));
        }

        public Builder currentPage(@Nullable Output<Integer> currentPage) {
            $.currentPage = currentPage;
            return this;
        }

        public Builder currentPage(Integer currentPage) {
            return currentPage(Output.of(currentPage));
        }

        /**
         * @param ids A list of Threat Detection Backup Policies IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Threat Detection Backup Policies IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Threat Detection Backup Policies IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param machineRemark The information that you want to use to identify the servers protected by the anti-ransomware policy. You can enter the IP address or ID of a server.
         * 
         * @return builder
         * 
         */
        public Builder machineRemark(@Nullable Output<String> machineRemark) {
            $.machineRemark = machineRemark;
            return this;
        }

        /**
         * @param machineRemark The information that you want to use to identify the servers protected by the anti-ransomware policy. You can enter the IP address or ID of a server.
         * 
         * @return builder
         * 
         */
        public Builder machineRemark(String machineRemark) {
            return machineRemark(Output.of(machineRemark));
        }

        /**
         * @param name The name of the anti-ransomware policy that you want to query.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the anti-ransomware policy that you want to query.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameRegex A regex string to filter results by Threat Detection Backup Policies name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Threat Detection Backup Policies name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public Builder pageSize(@Nullable Output<Integer> pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        public Builder pageSize(Integer pageSize) {
            return pageSize(Output.of(pageSize));
        }

        /**
         * @param status The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetBackupPoliciesArgs build() {
            return $;
        }
    }

}
