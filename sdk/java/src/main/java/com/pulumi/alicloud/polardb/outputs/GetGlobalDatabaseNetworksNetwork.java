// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.outputs;

import com.pulumi.alicloud.polardb.outputs.GetGlobalDatabaseNetworksNetworkDbCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGlobalDatabaseNetworksNetwork {
    /**
     * @return The time when the Global Database Network was created. The time is in the YYYY-MM-DDThh:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    private String createTime;
    /**
     * @return The details of each cluster in the Global Database Network.
     * 
     */
    private List<GetGlobalDatabaseNetworksNetworkDbCluster> dbClusters;
    /**
     * @return The type of the database engine. Only MySQL is supported.
     * 
     */
    private String dbType;
    /**
     * @return The version number of the database engine. Only the 8.0 version is supported.
     * 
     */
    private String dbVersion;
    /**
     * @return The description of the Global Database Network.
     * 
     */
    private String description;
    /**
     * @return The ID of the Global Database Network.
     * 
     */
    private String gdnId;
    /**
     * @return The ID of the Global Database Network.
     * 
     */
    private String id;
    /**
     * @return The status of the Global Database Network.
     * 
     */
    private String status;

    private GetGlobalDatabaseNetworksNetwork() {}
    /**
     * @return The time when the Global Database Network was created. The time is in the YYYY-MM-DDThh:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The details of each cluster in the Global Database Network.
     * 
     */
    public List<GetGlobalDatabaseNetworksNetworkDbCluster> dbClusters() {
        return this.dbClusters;
    }
    /**
     * @return The type of the database engine. Only MySQL is supported.
     * 
     */
    public String dbType() {
        return this.dbType;
    }
    /**
     * @return The version number of the database engine. Only the 8.0 version is supported.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return The description of the Global Database Network.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Global Database Network.
     * 
     */
    public String gdnId() {
        return this.gdnId;
    }
    /**
     * @return The ID of the Global Database Network.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The status of the Global Database Network.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalDatabaseNetworksNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private List<GetGlobalDatabaseNetworksNetworkDbCluster> dbClusters;
        private String dbType;
        private String dbVersion;
        private String description;
        private String gdnId;
        private String id;
        private String status;
        public Builder() {}
        public Builder(GetGlobalDatabaseNetworksNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dbClusters = defaults.dbClusters;
    	      this.dbType = defaults.dbType;
    	      this.dbVersion = defaults.dbVersion;
    	      this.description = defaults.description;
    	      this.gdnId = defaults.gdnId;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder dbClusters(List<GetGlobalDatabaseNetworksNetworkDbCluster> dbClusters) {
            this.dbClusters = Objects.requireNonNull(dbClusters);
            return this;
        }
        public Builder dbClusters(GetGlobalDatabaseNetworksNetworkDbCluster... dbClusters) {
            return dbClusters(List.of(dbClusters));
        }
        @CustomType.Setter
        public Builder dbType(String dbType) {
            this.dbType = Objects.requireNonNull(dbType);
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder gdnId(String gdnId) {
            this.gdnId = Objects.requireNonNull(gdnId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetGlobalDatabaseNetworksNetwork build() {
            final var o = new GetGlobalDatabaseNetworksNetwork();
            o.createTime = createTime;
            o.dbClusters = dbClusters;
            o.dbType = dbType;
            o.dbVersion = dbVersion;
            o.description = description;
            o.gdnId = gdnId;
            o.id = id;
            o.status = status;
            return o;
        }
    }
}
