// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.outputs;

import com.pulumi.alicloud.rds.outputs.GetInstanceClassInfosInfo;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceClassInfosResult {
    private String commodityCode;
    private @Nullable String dbInstanceId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Rds instance class codes.
     * 
     */
    private List<String> ids;
    /**
     * @return A list of Rds available resource. Each element contains the following attributes:
     * 
     */
    private @Nullable List<GetInstanceClassInfosInfo> infos;
    private String orderType;
    private @Nullable String outputFile;

    private GetInstanceClassInfosResult() {}
    public String commodityCode() {
        return this.commodityCode;
    }
    public Optional<String> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Rds instance class codes.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return A list of Rds available resource. Each element contains the following attributes:
     * 
     */
    public List<GetInstanceClassInfosInfo> infos() {
        return this.infos == null ? List.of() : this.infos;
    }
    public String orderType() {
        return this.orderType;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceClassInfosResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commodityCode;
        private @Nullable String dbInstanceId;
        private String id;
        private List<String> ids;
        private @Nullable List<GetInstanceClassInfosInfo> infos;
        private String orderType;
        private @Nullable String outputFile;
        public Builder() {}
        public Builder(GetInstanceClassInfosResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commodityCode = defaults.commodityCode;
    	      this.dbInstanceId = defaults.dbInstanceId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.infos = defaults.infos;
    	      this.orderType = defaults.orderType;
    	      this.outputFile = defaults.outputFile;
        }

        @CustomType.Setter
        public Builder commodityCode(String commodityCode) {
            this.commodityCode = Objects.requireNonNull(commodityCode);
            return this;
        }
        @CustomType.Setter
        public Builder dbInstanceId(@Nullable String dbInstanceId) {
            this.dbInstanceId = dbInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder infos(@Nullable List<GetInstanceClassInfosInfo> infos) {
            this.infos = infos;
            return this;
        }
        public Builder infos(GetInstanceClassInfosInfo... infos) {
            return infos(List.of(infos));
        }
        @CustomType.Setter
        public Builder orderType(String orderType) {
            this.orderType = Objects.requireNonNull(orderType);
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public GetInstanceClassInfosResult build() {
            final var _resultValue = new GetInstanceClassInfosResult();
            _resultValue.commodityCode = commodityCode;
            _resultValue.dbInstanceId = dbInstanceId;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.infos = infos;
            _resultValue.orderType = orderType;
            _resultValue.outputFile = outputFile;
            return _resultValue;
        }
    }
}
