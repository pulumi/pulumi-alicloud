// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms;

import com.pulumi.alicloud.cms.inputs.EventRuleContactParameterArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleEventPatternArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleFcParameterArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleMnsParameterArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleOpenApiParameterArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleSlsParameterArgs;
import com.pulumi.alicloud.cms.inputs.EventRuleWebhookParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventRuleArgs Empty = new EventRuleArgs();

    /**
     * The information about the alert contact groups that receive alert notifications. See `contact_parameters` below.
     * 
     */
    @Import(name="contactParameters")
    private @Nullable Output<List<EventRuleContactParameterArgs>> contactParameters;

    /**
     * @return The information about the alert contact groups that receive alert notifications. See `contact_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleContactParameterArgs>>> contactParameters() {
        return Optional.ofNullable(this.contactParameters);
    }

    /**
     * The description of the event-triggered alert rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the event-triggered alert rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Event mode, used to describe the trigger conditions for this event. See `event_pattern` below.
     * 
     */
    @Import(name="eventPattern", required=true)
    private Output<EventRuleEventPatternArgs> eventPattern;

    /**
     * @return Event mode, used to describe the trigger conditions for this event. See `event_pattern` below.
     * 
     */
    public Output<EventRuleEventPatternArgs> eventPattern() {
        return this.eventPattern;
    }

    /**
     * The information about the recipients in Function Compute. See `fc_parameters` below.
     * 
     */
    @Import(name="fcParameters")
    private @Nullable Output<List<EventRuleFcParameterArgs>> fcParameters;

    /**
     * @return The information about the recipients in Function Compute. See `fc_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleFcParameterArgs>>> fcParameters() {
        return Optional.ofNullable(this.fcParameters);
    }

    /**
     * The ID of the application group to which the event-triggered alert rule belongs.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return The ID of the application group to which the event-triggered alert rule belongs.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The information about the recipients in Message Service (MNS). See `mns_parameters` below.
     * 
     */
    @Import(name="mnsParameters")
    private @Nullable Output<List<EventRuleMnsParameterArgs>> mnsParameters;

    /**
     * @return The information about the recipients in Message Service (MNS). See `mns_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleMnsParameterArgs>>> mnsParameters() {
        return Optional.ofNullable(this.mnsParameters);
    }

    /**
     * The parameters of API callback notification. See `open_api_parameters` below.
     * 
     */
    @Import(name="openApiParameters")
    private @Nullable Output<List<EventRuleOpenApiParameterArgs>> openApiParameters;

    /**
     * @return The parameters of API callback notification. See `open_api_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleOpenApiParameterArgs>>> openApiParameters() {
        return Optional.ofNullable(this.openApiParameters);
    }

    /**
     * The name of the event-triggered alert rule.
     * 
     */
    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    /**
     * @return The name of the event-triggered alert rule.
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }

    /**
     * The silence time.
     * 
     */
    @Import(name="silenceTime")
    private @Nullable Output<Integer> silenceTime;

    /**
     * @return The silence time.
     * 
     */
    public Optional<Output<Integer>> silenceTime() {
        return Optional.ofNullable(this.silenceTime);
    }

    /**
     * The information about the recipients in Simple Log Service. See `sls_parameters` below.
     * 
     */
    @Import(name="slsParameters")
    private @Nullable Output<List<EventRuleSlsParameterArgs>> slsParameters;

    /**
     * @return The information about the recipients in Simple Log Service. See `sls_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleSlsParameterArgs>>> slsParameters() {
        return Optional.ofNullable(this.slsParameters);
    }

    /**
     * The status of the resource. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The information about the callback URLs that are used to receive alert notifications. See `webhook_parameters` below.
     * 
     */
    @Import(name="webhookParameters")
    private @Nullable Output<List<EventRuleWebhookParameterArgs>> webhookParameters;

    /**
     * @return The information about the callback URLs that are used to receive alert notifications. See `webhook_parameters` below.
     * 
     */
    public Optional<Output<List<EventRuleWebhookParameterArgs>>> webhookParameters() {
        return Optional.ofNullable(this.webhookParameters);
    }

    private EventRuleArgs() {}

    private EventRuleArgs(EventRuleArgs $) {
        this.contactParameters = $.contactParameters;
        this.description = $.description;
        this.eventPattern = $.eventPattern;
        this.fcParameters = $.fcParameters;
        this.groupId = $.groupId;
        this.mnsParameters = $.mnsParameters;
        this.openApiParameters = $.openApiParameters;
        this.ruleName = $.ruleName;
        this.silenceTime = $.silenceTime;
        this.slsParameters = $.slsParameters;
        this.status = $.status;
        this.webhookParameters = $.webhookParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventRuleArgs $;

        public Builder() {
            $ = new EventRuleArgs();
        }

        public Builder(EventRuleArgs defaults) {
            $ = new EventRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactParameters The information about the alert contact groups that receive alert notifications. See `contact_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder contactParameters(@Nullable Output<List<EventRuleContactParameterArgs>> contactParameters) {
            $.contactParameters = contactParameters;
            return this;
        }

        /**
         * @param contactParameters The information about the alert contact groups that receive alert notifications. See `contact_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder contactParameters(List<EventRuleContactParameterArgs> contactParameters) {
            return contactParameters(Output.of(contactParameters));
        }

        /**
         * @param contactParameters The information about the alert contact groups that receive alert notifications. See `contact_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder contactParameters(EventRuleContactParameterArgs... contactParameters) {
            return contactParameters(List.of(contactParameters));
        }

        /**
         * @param description The description of the event-triggered alert rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the event-triggered alert rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eventPattern Event mode, used to describe the trigger conditions for this event. See `event_pattern` below.
         * 
         * @return builder
         * 
         */
        public Builder eventPattern(Output<EventRuleEventPatternArgs> eventPattern) {
            $.eventPattern = eventPattern;
            return this;
        }

        /**
         * @param eventPattern Event mode, used to describe the trigger conditions for this event. See `event_pattern` below.
         * 
         * @return builder
         * 
         */
        public Builder eventPattern(EventRuleEventPatternArgs eventPattern) {
            return eventPattern(Output.of(eventPattern));
        }

        /**
         * @param fcParameters The information about the recipients in Function Compute. See `fc_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder fcParameters(@Nullable Output<List<EventRuleFcParameterArgs>> fcParameters) {
            $.fcParameters = fcParameters;
            return this;
        }

        /**
         * @param fcParameters The information about the recipients in Function Compute. See `fc_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder fcParameters(List<EventRuleFcParameterArgs> fcParameters) {
            return fcParameters(Output.of(fcParameters));
        }

        /**
         * @param fcParameters The information about the recipients in Function Compute. See `fc_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder fcParameters(EventRuleFcParameterArgs... fcParameters) {
            return fcParameters(List.of(fcParameters));
        }

        /**
         * @param groupId The ID of the application group to which the event-triggered alert rule belongs.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the application group to which the event-triggered alert rule belongs.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param mnsParameters The information about the recipients in Message Service (MNS). See `mns_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder mnsParameters(@Nullable Output<List<EventRuleMnsParameterArgs>> mnsParameters) {
            $.mnsParameters = mnsParameters;
            return this;
        }

        /**
         * @param mnsParameters The information about the recipients in Message Service (MNS). See `mns_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder mnsParameters(List<EventRuleMnsParameterArgs> mnsParameters) {
            return mnsParameters(Output.of(mnsParameters));
        }

        /**
         * @param mnsParameters The information about the recipients in Message Service (MNS). See `mns_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder mnsParameters(EventRuleMnsParameterArgs... mnsParameters) {
            return mnsParameters(List.of(mnsParameters));
        }

        /**
         * @param openApiParameters The parameters of API callback notification. See `open_api_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder openApiParameters(@Nullable Output<List<EventRuleOpenApiParameterArgs>> openApiParameters) {
            $.openApiParameters = openApiParameters;
            return this;
        }

        /**
         * @param openApiParameters The parameters of API callback notification. See `open_api_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder openApiParameters(List<EventRuleOpenApiParameterArgs> openApiParameters) {
            return openApiParameters(Output.of(openApiParameters));
        }

        /**
         * @param openApiParameters The parameters of API callback notification. See `open_api_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder openApiParameters(EventRuleOpenApiParameterArgs... openApiParameters) {
            return openApiParameters(List.of(openApiParameters));
        }

        /**
         * @param ruleName The name of the event-triggered alert rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The name of the event-triggered alert rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param silenceTime The silence time.
         * 
         * @return builder
         * 
         */
        public Builder silenceTime(@Nullable Output<Integer> silenceTime) {
            $.silenceTime = silenceTime;
            return this;
        }

        /**
         * @param silenceTime The silence time.
         * 
         * @return builder
         * 
         */
        public Builder silenceTime(Integer silenceTime) {
            return silenceTime(Output.of(silenceTime));
        }

        /**
         * @param slsParameters The information about the recipients in Simple Log Service. See `sls_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder slsParameters(@Nullable Output<List<EventRuleSlsParameterArgs>> slsParameters) {
            $.slsParameters = slsParameters;
            return this;
        }

        /**
         * @param slsParameters The information about the recipients in Simple Log Service. See `sls_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder slsParameters(List<EventRuleSlsParameterArgs> slsParameters) {
            return slsParameters(Output.of(slsParameters));
        }

        /**
         * @param slsParameters The information about the recipients in Simple Log Service. See `sls_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder slsParameters(EventRuleSlsParameterArgs... slsParameters) {
            return slsParameters(List.of(slsParameters));
        }

        /**
         * @param status The status of the resource. Valid values: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param webhookParameters The information about the callback URLs that are used to receive alert notifications. See `webhook_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder webhookParameters(@Nullable Output<List<EventRuleWebhookParameterArgs>> webhookParameters) {
            $.webhookParameters = webhookParameters;
            return this;
        }

        /**
         * @param webhookParameters The information about the callback URLs that are used to receive alert notifications. See `webhook_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder webhookParameters(List<EventRuleWebhookParameterArgs> webhookParameters) {
            return webhookParameters(Output.of(webhookParameters));
        }

        /**
         * @param webhookParameters The information about the callback URLs that are used to receive alert notifications. See `webhook_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder webhookParameters(EventRuleWebhookParameterArgs... webhookParameters) {
            return webhookParameters(List.of(webhookParameters));
        }

        public EventRuleArgs build() {
            if ($.eventPattern == null) {
                throw new MissingRequiredPropertyException("EventRuleArgs", "eventPattern");
            }
            if ($.ruleName == null) {
                throw new MissingRequiredPropertyException("EventRuleArgs", "ruleName");
            }
            return $;
        }
    }

}
