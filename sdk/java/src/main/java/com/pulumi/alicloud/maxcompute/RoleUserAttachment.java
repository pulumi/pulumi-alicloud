// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.maxcompute.RoleUserAttachmentArgs;
import com.pulumi.alicloud.maxcompute.inputs.RoleUserAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Max Compute Role User Attachment resource.
 * 
 * Resources associated with a user and a project-level role.
 * 
 * For information about Max Compute Role User Attachment and how to use it, see [What is Role User Attachment](https://www.alibabacloud.com/help/en/).
 * 
 * &gt; **NOTE:** Available since v1.242.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.maxcompute.RoleUserAttachment;
 * import com.pulumi.alicloud.maxcompute.RoleUserAttachmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var aliyunUser = config.get("aliyunUser").orElse("ALIYUN$openapiautomation}{@literal @}{@code test.aliyunid.com");
 *         final var ramUser = config.get("ramUser").orElse("RAM$openapiautomation}{@literal @}{@code test.aliyunid.com:tf-example");
 *         final var ramRole = config.get("ramRole").orElse("RAM$openapiautomation}{@literal @}{@code test.aliyunid.com:role/terraform-no-ak-assumerole-no-deleting");
 *         final var roleName = config.get("roleName").orElse("role_project_admin");
 *         final var projectName = config.get("projectName").orElse("default_project_669886c");
 *         var default_ = new RoleUserAttachment("default", RoleUserAttachmentArgs.builder()
 *             .roleName(roleName)
 *             .user(ramRole)
 *             .projectName(projectName)
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Max Compute Role User Attachment can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:maxcompute/roleUserAttachment:RoleUserAttachment example &lt;project_name&gt;-&lt;role_name&gt;-&lt;user&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:maxcompute/roleUserAttachment:RoleUserAttachment")
public class RoleUserAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Project Name
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return Project Name
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * Role Name, Valid Values: super_administrator, admin, Custom Role
     * 
     * &gt; **NOTE:** -- super_administrator: the built-in management role of MaxCompute. The Super Administrator of the project has the permission to operate all resources in the project and the management permission. Project owners or users with the Super_Administrator role can assign the Super_Administrator role to other users. -- admin: the built-in management role of MaxCompute, which has the permission to operate all resources in the project and some basic management permissions. Project owners can assign the Admin role to other users. -- Custom role: a role that is not built-in to MaxCompute and needs to be customized. You can refer to the role (starting with role_) definition in DataWorks.
     * 
     */
    @Export(name="roleName", refs={String.class}, tree="[0]")
    private Output<String> roleName;

    /**
     * @return Role Name, Valid Values: super_administrator, admin, Custom Role
     * 
     * &gt; **NOTE:** -- super_administrator: the built-in management role of MaxCompute. The Super Administrator of the project has the permission to operate all resources in the project and the management permission. Project owners or users with the Super_Administrator role can assign the Super_Administrator role to other users. -- admin: the built-in management role of MaxCompute, which has the permission to operate all resources in the project and some basic management permissions. Project owners can assign the Admin role to other users. -- Custom role: a role that is not built-in to MaxCompute and needs to be customized. You can refer to the role (starting with role_) definition in DataWorks.
     * 
     */
    public Output<String> roleName() {
        return this.roleName;
    }
    /**
     * Supported input: Alibaba Cloud account, RAM user, and RAM role
     * 
     * &gt; **NOTE:** -- Alibaba Cloud account: the account registered on the Alibaba Cloud official website. - RAM User: a user created by an Alibaba Cloud account to assist the Alibaba Cloud account to complete data processing. -- RAM role: a RAM role, like a RAM user, is a type of RAM identity. A RAM role is a virtual user that does not have a specific identity authentication key and needs to be played by a trusted entity user for normal use.
     * 
     */
    @Export(name="user", refs={String.class}, tree="[0]")
    private Output<String> user;

    /**
     * @return Supported input: Alibaba Cloud account, RAM user, and RAM role
     * 
     * &gt; **NOTE:** -- Alibaba Cloud account: the account registered on the Alibaba Cloud official website. - RAM User: a user created by an Alibaba Cloud account to assist the Alibaba Cloud account to complete data processing. -- RAM role: a RAM role, like a RAM user, is a type of RAM identity. A RAM role is a virtual user that does not have a specific identity authentication key and needs to be played by a trusted entity user for normal use.
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleUserAttachment(java.lang.String name) {
        this(name, RoleUserAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleUserAttachment(java.lang.String name, RoleUserAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleUserAttachment(java.lang.String name, RoleUserAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:maxcompute/roleUserAttachment:RoleUserAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RoleUserAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable RoleUserAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:maxcompute/roleUserAttachment:RoleUserAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static RoleUserAttachmentArgs makeArgs(RoleUserAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RoleUserAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleUserAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable RoleUserAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleUserAttachment(name, id, state, options);
    }
}
