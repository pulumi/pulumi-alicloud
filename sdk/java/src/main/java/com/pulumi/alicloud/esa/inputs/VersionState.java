// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VersionState extends com.pulumi.resources.ResourceArgs {

    public static final VersionState Empty = new VersionState();

    /**
     * The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The Site version&#39;s description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Site version&#39;s description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    @Import(name="originVersion")
    private @Nullable Output<Integer> originVersion;

    /**
     * @return The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    public Optional<Output<Integer>> originVersion() {
        return Optional.ofNullable(this.originVersion);
    }

    /**
     * The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The version number of the site configuration.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return The version number of the site configuration.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    /**
     * Site version status:：`online`.：`configuring`._faild`：`configure_faild`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Site version status:：`online`.：`configuring`._faild`：`configure_faild`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private VersionState() {}

    private VersionState(VersionState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.originVersion = $.originVersion;
        this.siteId = $.siteId;
        this.siteVersion = $.siteVersion;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VersionState $;

        public Builder() {
            $ = new VersionState();
        }

        public Builder(VersionState defaults) {
            $ = new VersionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time. The date format follows ISO8601 notation and uses UTC time. The format is yyyy-MM-ddTHH:mm:ssZ.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The Site version&#39;s description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Site version&#39;s description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param originVersion The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
         * 
         * @return builder
         * 
         */
        public Builder originVersion(@Nullable Output<Integer> originVersion) {
            $.originVersion = originVersion;
            return this;
        }

        /**
         * @param originVersion The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
         * 
         * @return builder
         * 
         */
        public Builder originVersion(Integer originVersion) {
            return originVersion(Output.of(originVersion));
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteVersion The version number of the site configuration.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion The version number of the site configuration.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        /**
         * @param status Site version status:：`online`.：`configuring`._faild`：`configure_faild`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Site version status:：`online`.：`configuring`._faild`：`configure_faild`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public VersionState build() {
            return $;
        }
    }

}
