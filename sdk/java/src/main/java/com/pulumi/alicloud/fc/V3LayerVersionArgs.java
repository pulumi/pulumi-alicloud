// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.fc.inputs.V3LayerVersionCodeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3LayerVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3LayerVersionArgs Empty = new V3LayerVersionArgs();

    /**
     * The access permission of the layer, 1: public, 0: private, default is private
     * 
     */
    @Import(name="acl")
    private @Nullable Output<String> acl;

    /**
     * @return The access permission of the layer, 1: public, 0: private, default is private
     * 
     */
    public Optional<Output<String>> acl() {
        return Optional.ofNullable(this.acl);
    }

    /**
     * Layer code configuration See `code` below.
     * 
     */
    @Import(name="code")
    private @Nullable Output<V3LayerVersionCodeArgs> code;

    /**
     * @return Layer code configuration See `code` below.
     * 
     */
    public Optional<Output<V3LayerVersionCodeArgs>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * List of runtime environments supported by the layer
     * 
     */
    @Import(name="compatibleRuntimes")
    private @Nullable Output<List<String>> compatibleRuntimes;

    /**
     * @return List of runtime environments supported by the layer
     * 
     */
    public Optional<Output<List<String>>> compatibleRuntimes() {
        return Optional.ofNullable(this.compatibleRuntimes);
    }

    /**
     * Description of the version
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the version
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the layer
     * 
     */
    @Import(name="layerName", required=true)
    private Output<String> layerName;

    /**
     * @return Name of the layer
     * 
     */
    public Output<String> layerName() {
        return this.layerName;
    }

    /**
     * Layer License Agreement
     * 
     */
    @Import(name="license")
    private @Nullable Output<String> license;

    /**
     * @return Layer License Agreement
     * 
     */
    public Optional<Output<String>> license() {
        return Optional.ofNullable(this.license);
    }

    /**
     * Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
     * 
     */
    @Import(name="public")
    private @Nullable Output<String> public_;

    /**
     * @return Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
     * 
     */
    public Optional<Output<String>> public_() {
        return Optional.ofNullable(this.public_);
    }

    private V3LayerVersionArgs() {}

    private V3LayerVersionArgs(V3LayerVersionArgs $) {
        this.acl = $.acl;
        this.code = $.code;
        this.compatibleRuntimes = $.compatibleRuntimes;
        this.description = $.description;
        this.layerName = $.layerName;
        this.license = $.license;
        this.public_ = $.public_;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3LayerVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3LayerVersionArgs $;

        public Builder() {
            $ = new V3LayerVersionArgs();
        }

        public Builder(V3LayerVersionArgs defaults) {
            $ = new V3LayerVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acl The access permission of the layer, 1: public, 0: private, default is private
         * 
         * @return builder
         * 
         */
        public Builder acl(@Nullable Output<String> acl) {
            $.acl = acl;
            return this;
        }

        /**
         * @param acl The access permission of the layer, 1: public, 0: private, default is private
         * 
         * @return builder
         * 
         */
        public Builder acl(String acl) {
            return acl(Output.of(acl));
        }

        /**
         * @param code Layer code configuration See `code` below.
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<V3LayerVersionCodeArgs> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code Layer code configuration See `code` below.
         * 
         * @return builder
         * 
         */
        public Builder code(V3LayerVersionCodeArgs code) {
            return code(Output.of(code));
        }

        /**
         * @param compatibleRuntimes List of runtime environments supported by the layer
         * 
         * @return builder
         * 
         */
        public Builder compatibleRuntimes(@Nullable Output<List<String>> compatibleRuntimes) {
            $.compatibleRuntimes = compatibleRuntimes;
            return this;
        }

        /**
         * @param compatibleRuntimes List of runtime environments supported by the layer
         * 
         * @return builder
         * 
         */
        public Builder compatibleRuntimes(List<String> compatibleRuntimes) {
            return compatibleRuntimes(Output.of(compatibleRuntimes));
        }

        /**
         * @param compatibleRuntimes List of runtime environments supported by the layer
         * 
         * @return builder
         * 
         */
        public Builder compatibleRuntimes(String... compatibleRuntimes) {
            return compatibleRuntimes(List.of(compatibleRuntimes));
        }

        /**
         * @param description Description of the version
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the version
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param layerName Name of the layer
         * 
         * @return builder
         * 
         */
        public Builder layerName(Output<String> layerName) {
            $.layerName = layerName;
            return this;
        }

        /**
         * @param layerName Name of the layer
         * 
         * @return builder
         * 
         */
        public Builder layerName(String layerName) {
            return layerName(Output.of(layerName));
        }

        /**
         * @param license Layer License Agreement
         * 
         * @return builder
         * 
         */
        public Builder license(@Nullable Output<String> license) {
            $.license = license;
            return this;
        }

        /**
         * @param license Layer License Agreement
         * 
         * @return builder
         * 
         */
        public Builder license(String license) {
            return license(Output.of(license));
        }

        /**
         * @param public_ Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
         * 
         * @return builder
         * 
         */
        public Builder public_(@Nullable Output<String> public_) {
            $.public_ = public_;
            return this;
        }

        /**
         * @param public_ Whether to expose the layer. Enumeration values: true, false. (Deprecated, please use acl instead)
         * 
         * @return builder
         * 
         */
        public Builder public_(String public_) {
            return public_(Output.of(public_));
        }

        public V3LayerVersionArgs build() {
            if ($.layerName == null) {
                throw new MissingRequiredPropertyException("V3LayerVersionArgs", "layerName");
            }
            return $;
        }
    }

}
