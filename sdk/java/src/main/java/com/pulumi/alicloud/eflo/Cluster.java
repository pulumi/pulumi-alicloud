// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eflo.ClusterArgs;
import com.pulumi.alicloud.eflo.inputs.ClusterState;
import com.pulumi.alicloud.eflo.outputs.ClusterComponent;
import com.pulumi.alicloud.eflo.outputs.ClusterNetworks;
import com.pulumi.alicloud.eflo.outputs.ClusterNodeGroup;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Eflo Cluster resource.
 * 
 * Large computing cluster.
 * 
 * For information about Eflo Cluster and how to use it, see [What is Cluster](https://next.api.alibabacloud.com/document/eflo-controller/2022-12-15/CreateCluster).
 * 
 * &gt; **NOTE:** Available since v1.246.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.eflo.Cluster;
 * import com.pulumi.alicloud.eflo.ClusterArgs;
 * import com.pulumi.alicloud.eflo.inputs.ClusterNodeGroupArgs;
 * import com.pulumi.alicloud.eflo.inputs.ClusterNetworksArgs;
 * import com.pulumi.alicloud.eflo.inputs.ClusterNetworksNewVpdInfoArgs;
 * import com.pulumi.alicloud.eflo.inputs.ClusterNetworksVpdInfoArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         var createVpc = new Network("createVpc", NetworkArgs.builder()
 *             .cidrBlock("192.168.0.0/16")
 *             .vpcName("cluster-resoure-example")
 *             .build());
 * 
 *         var createVswitch = new Switch("createVswitch", SwitchArgs.builder()
 *             .vpcId(createVpc.id())
 *             .zoneId("cn-hangzhou-b")
 *             .cidrBlock("192.168.0.0/24")
 *             .vswitchName("cluster-resoure-example")
 *             .build());
 * 
 *         var createSecurityGroup = new SecurityGroup("createSecurityGroup", SecurityGroupArgs.builder()
 *             .description("sg")
 *             .securityGroupName("cluster-resoure-example")
 *             .securityGroupType("normal")
 *             .vpcId(createVpc.id())
 *             .build());
 * 
 *         var defaultCluster = new Cluster("defaultCluster", ClusterArgs.builder()
 *             .clusterDescription("cluster-resource-example")
 *             .openEniJumboFrame(false)
 *             .hpnZone("B1")
 *             .nimizVswitches("1111")
 *             .ignoreFailedNodeTasks(true)
 *             .resourceGroupId(default_.ids()[1])
 *             .nodeGroups(ClusterNodeGroupArgs.builder()
 *                 .imageId("i198448731735114628708")
 *                 .zoneId("cn-hangzhou-b")
 *                 .nodeGroupName("cluster-resource-example")
 *                 .nodeGroupDescription("cluster-resource-example")
 *                 .machineType("efg2.C48cA3sen")
 *                 .build())
 *             .networks(ClusterNetworksArgs.builder()
 *                 .tailIpVersion("ipv4")
 *                 .newVpdInfo(ClusterNetworksNewVpdInfoArgs.builder()
 *                     .monitorVpcId(createVpc.id())
 *                     .monitorVswitchId(createVswitch.id())
 *                     .cenId("11111")
 *                     .cloudLinkId("1111")
 *                     .vpdCidr("111")
 *                     .vpdSubnets(ClusterNetworksNewVpdInfoVpdSubnetArgs.builder()
 *                         .zoneId("1111")
 *                         .subnetCidr("111")
 *                         .subnetType("111")
 *                         .build())
 *                     .cloudLinkCidr("169.254.128.0/23")
 *                     .build())
 *                 .securityGroupId(createSecurityGroup.id())
 *                 .vswitchZoneId("cn-hangzhou-b")
 *                 .vpcId(createVpc.id())
 *                 .vswitchId(createVswitch.id())
 *                 .vpdInfo(ClusterNetworksVpdInfoArgs.builder()
 *                     .vpdId("111")
 *                     .vpdSubnets("111")
 *                     .build())
 *                 .ipAllocationPolicies(ClusterNetworksIpAllocationPolicyArgs.builder()
 *                     .bondPolicy(ClusterNetworksIpAllocationPolicyBondPolicyArgs.builder()
 *                         .bondDefaultSubnet("111")
 *                         .bonds(ClusterNetworksIpAllocationPolicyBondPolicyBondArgs.builder()
 *                             .name("111")
 *                             .subnet("111")
 *                             .build())
 *                         .build())
 *                     .machineTypePolicies(ClusterNetworksIpAllocationPolicyMachineTypePolicyArgs.builder()
 *                         .bonds(ClusterNetworksIpAllocationPolicyMachineTypePolicyBondArgs.builder()
 *                             .name("111")
 *                             .subnet("111")
 *                             .build())
 *                         .machineType("111")
 *                         .build())
 *                     .nodePolicies(ClusterNetworksIpAllocationPolicyNodePolicyArgs.builder()
 *                         .bonds(ClusterNetworksIpAllocationPolicyNodePolicyBondArgs.builder()
 *                             .name("111")
 *                             .subnet("111")
 *                             .build())
 *                         .nodeId("111")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .clusterName("tfacceflo7165")
 *             .clusterType("Lite")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Eflo Cluster can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:eflo/cluster:Cluster example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eflo/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * cluster description
     * 
     */
    @Export(name="clusterDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterDescription;

    /**
     * @return cluster description
     * 
     */
    public Output<Optional<String>> clusterDescription() {
        return Codegen.optional(this.clusterDescription);
    }
    /**
     * ClusterName
     * 
     */
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterName;

    /**
     * @return ClusterName
     * 
     */
    public Output<Optional<String>> clusterName() {
        return Codegen.optional(this.clusterName);
    }
    /**
     * cluster type
     * 
     */
    @Export(name="clusterType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterType;

    /**
     * @return cluster type
     * 
     */
    public Output<Optional<String>> clusterType() {
        return Codegen.optional(this.clusterType);
    }
    /**
     * Component (software instance) See `components` below.
     * 
     */
    @Export(name="components", refs={List.class,ClusterComponent.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ClusterComponent>> components;

    /**
     * @return Component (software instance) See `components` below.
     * 
     */
    public Output<Optional<List<ClusterComponent>>> components() {
        return Codegen.optional(this.components);
    }
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Cluster Number
     * 
     */
    @Export(name="hpnZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hpnZone;

    /**
     * @return Cluster Number
     * 
     */
    public Output<Optional<String>> hpnZone() {
        return Codegen.optional(this.hpnZone);
    }
    /**
     * Whether to allow skipping failed nodes. Default value: False
     * 
     */
    @Export(name="ignoreFailedNodeTasks", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ignoreFailedNodeTasks;

    /**
     * @return Whether to allow skipping failed nodes. Default value: False
     * 
     */
    public Output<Optional<Boolean>> ignoreFailedNodeTasks() {
        return Codegen.optional(this.ignoreFailedNodeTasks);
    }
    /**
     * Network Information See `networks` below.
     * 
     */
    @Export(name="networks", refs={ClusterNetworks.class}, tree="[0]")
    private Output</* @Nullable */ ClusterNetworks> networks;

    /**
     * @return Network Information See `networks` below.
     * 
     */
    public Output<Optional<ClusterNetworks>> networks() {
        return Codegen.optional(this.networks);
    }
    /**
     * Node virtual switch
     * 
     */
    @Export(name="nimizVswitches", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> nimizVswitches;

    /**
     * @return Node virtual switch
     * 
     */
    public Output<Optional<List<String>>> nimizVswitches() {
        return Codegen.optional(this.nimizVswitches);
    }
    /**
     * Node Group List See `nodeGroups` below.
     * 
     */
    @Export(name="nodeGroups", refs={List.class,ClusterNodeGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ClusterNodeGroup>> nodeGroups;

    /**
     * @return Node Group List See `nodeGroups` below.
     * 
     */
    public Output<Optional<List<ClusterNodeGroup>>> nodeGroups() {
        return Codegen.optional(this.nodeGroups);
    }
    /**
     * Whether the network interface supports jumbo frames
     * 
     */
    @Export(name="openEniJumboFrame", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> openEniJumboFrame;

    /**
     * @return Whether the network interface supports jumbo frames
     * 
     */
    public Output<Optional<Boolean>> openEniJumboFrame() {
        return Codegen.optional(this.openEniJumboFrame);
    }
    /**
     * The ID of the resource group
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The status of the resource
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * tag
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return tag
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(java.lang.String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(java.lang.String name, @Nullable ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(java.lang.String name, @Nullable ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/cluster:Cluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Cluster(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/cluster:Cluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterArgs makeArgs(@Nullable ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
