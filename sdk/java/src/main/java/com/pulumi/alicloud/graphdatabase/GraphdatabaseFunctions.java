// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.graphdatabase;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesPlainArgs;
import com.pulumi.alicloud.graphdatabase.outputs.GetDbInstancesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class GraphdatabaseFunctions {
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbInstancesResult> getDbInstances() {
        return getDbInstances(GetDbInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbInstancesResult> getDbInstancesPlain() {
        return getDbInstancesPlain(GetDbInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbInstancesResult> getDbInstances(GetDbInstancesArgs args) {
        return getDbInstances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbInstancesResult> getDbInstancesPlain(GetDbInstancesPlainArgs args) {
        return getDbInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbInstancesResult> getDbInstances(GetDbInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:graphdatabase/getDbInstances:getDbInstances", TypeShape.of(GetDbInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbInstancesResult> getDbInstances(GetDbInstancesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:graphdatabase/getDbInstances:getDbInstances", TypeShape.of(GetDbInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.graphdatabase.GraphdatabaseFunctions;
     * import com.pulumi.alicloud.graphdatabase.inputs.GetDbInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId1", ids.instances()[0].id());
     *         final var status = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId2", status.instances()[0].id());
     *         final var description = GraphdatabaseFunctions.getDbInstances(GetDbInstancesArgs.builder()
     *             .ids("example_id")
     *             .dbInstanceDescription("example_value")
     *             .build());
     * 
     *         ctx.export("graphDatabaseDbInstanceId3", description.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbInstancesResult> getDbInstancesPlain(GetDbInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:graphdatabase/getDbInstances:getDbInstances", TypeShape.of(GetDbInstancesResult.class), args, Utilities.withVersion(options));
    }
}
