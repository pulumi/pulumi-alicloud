// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudfirewall.inputs;

import com.pulumi.alicloud.cloudfirewall.inputs.FirewallVpcFirewallLocalVpcArgs;
import com.pulumi.alicloud.cloudfirewall.inputs.FirewallVpcFirewallPeerVpcArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallVpcFirewallState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallVpcFirewallState Empty = new FirewallVpcFirewallState();

    /**
     * Bandwidth specifications for high-speed channels. Unit: Mbps.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return Bandwidth specifications for high-speed channels. Unit: Mbps.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The communication type of the VPC firewall.
     * 
     */
    @Import(name="connectType")
    private @Nullable Output<String> connectType;

    /**
     * @return The communication type of the VPC firewall.
     * 
     */
    public Optional<Output<String>> connectType() {
        return Optional.ofNullable(this.connectType);
    }

    /**
     * The language type of the requested and received messages. Valid values:
     * 
     */
    @Import(name="lang")
    private @Nullable Output<String> lang;

    /**
     * @return The language type of the requested and received messages. Valid values:
     * 
     */
    public Optional<Output<String>> lang() {
        return Optional.ofNullable(this.lang);
    }

    /**
     * The details of the local VPC. See `local_vpc` below.
     * 
     */
    @Import(name="localVpc")
    private @Nullable Output<FirewallVpcFirewallLocalVpcArgs> localVpc;

    /**
     * @return The details of the local VPC. See `local_vpc` below.
     * 
     */
    public Optional<Output<FirewallVpcFirewallLocalVpcArgs>> localVpc() {
        return Optional.ofNullable(this.localVpc);
    }

    /**
     * The UID of the Alibaba Cloud member account.
     * 
     */
    @Import(name="memberUid")
    private @Nullable Output<String> memberUid;

    /**
     * @return The UID of the Alibaba Cloud member account.
     * 
     */
    public Optional<Output<String>> memberUid() {
        return Optional.ofNullable(this.memberUid);
    }

    /**
     * The details of the peer VPC. See `peer_vpc` below.
     * 
     */
    @Import(name="peerVpc")
    private @Nullable Output<FirewallVpcFirewallPeerVpcArgs> peerVpc;

    /**
     * @return The details of the peer VPC. See `peer_vpc` below.
     * 
     */
    public Optional<Output<FirewallVpcFirewallPeerVpcArgs>> peerVpc() {
        return Optional.ofNullable(this.peerVpc);
    }

    /**
     * The region is open.
     * 
     */
    @Import(name="regionStatus")
    private @Nullable Output<String> regionStatus;

    /**
     * @return The region is open.
     * 
     */
    public Optional<Output<String>> regionStatus() {
        return Optional.ofNullable(this.regionStatus);
    }

    /**
     * The status of the resource. Valid values:
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values:
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the VPC firewall instance.
     * 
     */
    @Import(name="vpcFirewallId")
    private @Nullable Output<String> vpcFirewallId;

    /**
     * @return The ID of the VPC firewall instance.
     * 
     */
    public Optional<Output<String>> vpcFirewallId() {
        return Optional.ofNullable(this.vpcFirewallId);
    }

    /**
     * The name of the VPC firewall instance.
     * 
     */
    @Import(name="vpcFirewallName")
    private @Nullable Output<String> vpcFirewallName;

    /**
     * @return The name of the VPC firewall instance.
     * 
     */
    public Optional<Output<String>> vpcFirewallName() {
        return Optional.ofNullable(this.vpcFirewallName);
    }

    private FirewallVpcFirewallState() {}

    private FirewallVpcFirewallState(FirewallVpcFirewallState $) {
        this.bandwidth = $.bandwidth;
        this.connectType = $.connectType;
        this.lang = $.lang;
        this.localVpc = $.localVpc;
        this.memberUid = $.memberUid;
        this.peerVpc = $.peerVpc;
        this.regionStatus = $.regionStatus;
        this.status = $.status;
        this.vpcFirewallId = $.vpcFirewallId;
        this.vpcFirewallName = $.vpcFirewallName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallVpcFirewallState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallVpcFirewallState $;

        public Builder() {
            $ = new FirewallVpcFirewallState();
        }

        public Builder(FirewallVpcFirewallState defaults) {
            $ = new FirewallVpcFirewallState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth Bandwidth specifications for high-speed channels. Unit: Mbps.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth Bandwidth specifications for high-speed channels. Unit: Mbps.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param connectType The communication type of the VPC firewall.
         * 
         * @return builder
         * 
         */
        public Builder connectType(@Nullable Output<String> connectType) {
            $.connectType = connectType;
            return this;
        }

        /**
         * @param connectType The communication type of the VPC firewall.
         * 
         * @return builder
         * 
         */
        public Builder connectType(String connectType) {
            return connectType(Output.of(connectType));
        }

        /**
         * @param lang The language type of the requested and received messages. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder lang(@Nullable Output<String> lang) {
            $.lang = lang;
            return this;
        }

        /**
         * @param lang The language type of the requested and received messages. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder lang(String lang) {
            return lang(Output.of(lang));
        }

        /**
         * @param localVpc The details of the local VPC. See `local_vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder localVpc(@Nullable Output<FirewallVpcFirewallLocalVpcArgs> localVpc) {
            $.localVpc = localVpc;
            return this;
        }

        /**
         * @param localVpc The details of the local VPC. See `local_vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder localVpc(FirewallVpcFirewallLocalVpcArgs localVpc) {
            return localVpc(Output.of(localVpc));
        }

        /**
         * @param memberUid The UID of the Alibaba Cloud member account.
         * 
         * @return builder
         * 
         */
        public Builder memberUid(@Nullable Output<String> memberUid) {
            $.memberUid = memberUid;
            return this;
        }

        /**
         * @param memberUid The UID of the Alibaba Cloud member account.
         * 
         * @return builder
         * 
         */
        public Builder memberUid(String memberUid) {
            return memberUid(Output.of(memberUid));
        }

        /**
         * @param peerVpc The details of the peer VPC. See `peer_vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder peerVpc(@Nullable Output<FirewallVpcFirewallPeerVpcArgs> peerVpc) {
            $.peerVpc = peerVpc;
            return this;
        }

        /**
         * @param peerVpc The details of the peer VPC. See `peer_vpc` below.
         * 
         * @return builder
         * 
         */
        public Builder peerVpc(FirewallVpcFirewallPeerVpcArgs peerVpc) {
            return peerVpc(Output.of(peerVpc));
        }

        /**
         * @param regionStatus The region is open.
         * 
         * @return builder
         * 
         */
        public Builder regionStatus(@Nullable Output<String> regionStatus) {
            $.regionStatus = regionStatus;
            return this;
        }

        /**
         * @param regionStatus The region is open.
         * 
         * @return builder
         * 
         */
        public Builder regionStatus(String regionStatus) {
            return regionStatus(Output.of(regionStatus));
        }

        /**
         * @param status The status of the resource. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcFirewallId The ID of the VPC firewall instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcFirewallId(@Nullable Output<String> vpcFirewallId) {
            $.vpcFirewallId = vpcFirewallId;
            return this;
        }

        /**
         * @param vpcFirewallId The ID of the VPC firewall instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcFirewallId(String vpcFirewallId) {
            return vpcFirewallId(Output.of(vpcFirewallId));
        }

        /**
         * @param vpcFirewallName The name of the VPC firewall instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcFirewallName(@Nullable Output<String> vpcFirewallName) {
            $.vpcFirewallName = vpcFirewallName;
            return this;
        }

        /**
         * @param vpcFirewallName The name of the VPC firewall instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcFirewallName(String vpcFirewallName) {
            return vpcFirewallName(Output.of(vpcFirewallName));
        }

        public FirewallVpcFirewallState build() {
            return $;
        }
    }

}
