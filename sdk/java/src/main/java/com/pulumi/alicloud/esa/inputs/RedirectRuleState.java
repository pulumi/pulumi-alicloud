// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RedirectRuleState extends com.pulumi.resources.ResourceArgs {

    public static final RedirectRuleState Empty = new RedirectRuleState();

    /**
     * Config Id
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Config Id
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Indicates whether the feature of retaining the query string is enabled. Valid values:
     * 
     * - on
     * - off
     * 
     */
    @Import(name="reserveQueryString")
    private @Nullable Output<String> reserveQueryString;

    /**
     * @return Indicates whether the feature of retaining the query string is enabled. Valid values:
     * 
     * - on
     * - off
     * 
     */
    public Optional<Output<String>> reserveQueryString() {
        return Optional.ofNullable(this.reserveQueryString);
    }

    /**
     * The rule content.
     * 
     */
    @Import(name="rule")
    private @Nullable Output<String> rule;

    /**
     * @return The rule content.
     * 
     */
    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    /**
     * Indicates whether the rule is enabled. Valid values:
     * 
     */
    @Import(name="ruleEnable")
    private @Nullable Output<String> ruleEnable;

    /**
     * @return Indicates whether the rule is enabled. Valid values:
     * 
     */
    public Optional<Output<String>> ruleEnable() {
        return Optional.ofNullable(this.ruleEnable);
    }

    /**
     * 规则名，可以查出规则名为所传字段的那条规则，只有传了functionName才生效
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return 规则名，可以查出规则名为所传字段的那条规则，只有传了functionName才生效
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The version of the website configurations.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return The version of the website configurations.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    /**
     * The response code that you want to use to indicate URL redirection. Valid values:
     * 
     * - 301
     * - 302
     * - 303
     * - 307
     * - 308
     * 
     */
    @Import(name="statusCode")
    private @Nullable Output<String> statusCode;

    /**
     * @return The response code that you want to use to indicate URL redirection. Valid values:
     * 
     * - 301
     * - 302
     * - 303
     * - 307
     * - 308
     * 
     */
    public Optional<Output<String>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    /**
     * The destination URL to which requests are redirected.
     * 
     */
    @Import(name="targetUrl")
    private @Nullable Output<String> targetUrl;

    /**
     * @return The destination URL to which requests are redirected.
     * 
     */
    public Optional<Output<String>> targetUrl() {
        return Optional.ofNullable(this.targetUrl);
    }

    /**
     * The redirect type. Valid value:
     * 
     * - static
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The redirect type. Valid value:
     * 
     * - static
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private RedirectRuleState() {}

    private RedirectRuleState(RedirectRuleState $) {
        this.configId = $.configId;
        this.reserveQueryString = $.reserveQueryString;
        this.rule = $.rule;
        this.ruleEnable = $.ruleEnable;
        this.ruleName = $.ruleName;
        this.siteId = $.siteId;
        this.siteVersion = $.siteVersion;
        this.statusCode = $.statusCode;
        this.targetUrl = $.targetUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedirectRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedirectRuleState $;

        public Builder() {
            $ = new RedirectRuleState();
        }

        public Builder(RedirectRuleState defaults) {
            $ = new RedirectRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param reserveQueryString Indicates whether the feature of retaining the query string is enabled. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder reserveQueryString(@Nullable Output<String> reserveQueryString) {
            $.reserveQueryString = reserveQueryString;
            return this;
        }

        /**
         * @param reserveQueryString Indicates whether the feature of retaining the query string is enabled. Valid values:
         * 
         * - on
         * - off
         * 
         * @return builder
         * 
         */
        public Builder reserveQueryString(String reserveQueryString) {
            return reserveQueryString(Output.of(reserveQueryString));
        }

        /**
         * @param rule The rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param ruleEnable Indicates whether the rule is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(@Nullable Output<String> ruleEnable) {
            $.ruleEnable = ruleEnable;
            return this;
        }

        /**
         * @param ruleEnable Indicates whether the rule is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(String ruleEnable) {
            return ruleEnable(Output.of(ruleEnable));
        }

        /**
         * @param ruleName 规则名，可以查出规则名为所传字段的那条规则，只有传了functionName才生效
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName 规则名，可以查出规则名为所传字段的那条规则，只有传了functionName才生效
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param siteId The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The website ID, which can be obtained by calling the [ListSites](https://www.alibabacloud.com/help/en/doc-detail/2850189.html) operation.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteVersion The version of the website configurations.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion The version of the website configurations.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        /**
         * @param statusCode The response code that you want to use to indicate URL redirection. Valid values:
         * 
         * - 301
         * - 302
         * - 303
         * - 307
         * - 308
         * 
         * @return builder
         * 
         */
        public Builder statusCode(@Nullable Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The response code that you want to use to indicate URL redirection. Valid values:
         * 
         * - 301
         * - 302
         * - 303
         * - 307
         * - 308
         * 
         * @return builder
         * 
         */
        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        /**
         * @param targetUrl The destination URL to which requests are redirected.
         * 
         * @return builder
         * 
         */
        public Builder targetUrl(@Nullable Output<String> targetUrl) {
            $.targetUrl = targetUrl;
            return this;
        }

        /**
         * @param targetUrl The destination URL to which requests are redirected.
         * 
         * @return builder
         * 
         */
        public Builder targetUrl(String targetUrl) {
            return targetUrl(Output.of(targetUrl));
        }

        /**
         * @param type The redirect type. Valid value:
         * 
         * - static
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The redirect type. Valid value:
         * 
         * - static
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RedirectRuleState build() {
            return $;
        }
    }

}
