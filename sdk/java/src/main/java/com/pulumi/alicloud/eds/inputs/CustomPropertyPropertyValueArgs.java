// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomPropertyPropertyValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomPropertyPropertyValueArgs Empty = new CustomPropertyPropertyValueArgs();

    /**
     * The value of an attribute.
     * 
     */
    @Import(name="propertyValue")
    private @Nullable Output<String> propertyValue;

    /**
     * @return The value of an attribute.
     * 
     */
    public Optional<Output<String>> propertyValue() {
        return Optional.ofNullable(this.propertyValue);
    }

    /**
     * The value of an attribute id.
     * 
     */
    @Import(name="propertyValueId")
    private @Nullable Output<String> propertyValueId;

    /**
     * @return The value of an attribute id.
     * 
     */
    public Optional<Output<String>> propertyValueId() {
        return Optional.ofNullable(this.propertyValueId);
    }

    private CustomPropertyPropertyValueArgs() {}

    private CustomPropertyPropertyValueArgs(CustomPropertyPropertyValueArgs $) {
        this.propertyValue = $.propertyValue;
        this.propertyValueId = $.propertyValueId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomPropertyPropertyValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomPropertyPropertyValueArgs $;

        public Builder() {
            $ = new CustomPropertyPropertyValueArgs();
        }

        public Builder(CustomPropertyPropertyValueArgs defaults) {
            $ = new CustomPropertyPropertyValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param propertyValue The value of an attribute.
         * 
         * @return builder
         * 
         */
        public Builder propertyValue(@Nullable Output<String> propertyValue) {
            $.propertyValue = propertyValue;
            return this;
        }

        /**
         * @param propertyValue The value of an attribute.
         * 
         * @return builder
         * 
         */
        public Builder propertyValue(String propertyValue) {
            return propertyValue(Output.of(propertyValue));
        }

        /**
         * @param propertyValueId The value of an attribute id.
         * 
         * @return builder
         * 
         */
        public Builder propertyValueId(@Nullable Output<String> propertyValueId) {
            $.propertyValueId = propertyValueId;
            return this;
        }

        /**
         * @param propertyValueId The value of an attribute id.
         * 
         * @return builder
         * 
         */
        public Builder propertyValueId(String propertyValueId) {
            return propertyValueId(Output.of(propertyValueId));
        }

        public CustomPropertyPropertyValueArgs build() {
            return $;
        }
    }

}
