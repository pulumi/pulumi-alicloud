// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mse;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayArgs Empty = new GatewayArgs();

    /**
     * The backup vswitch id.
     * 
     */
    @Import(name="backupVswitchId")
    private @Nullable Output<String> backupVswitchId;

    /**
     * @return The backup vswitch id.
     * 
     */
    public Optional<Output<String>> backupVswitchId() {
        return Optional.ofNullable(this.backupVswitchId);
    }

    /**
     * Whether to delete the SLB purchased on behalf of the gateway at the same time.
     * 
     */
    @Import(name="deleteSlb")
    private @Nullable Output<Boolean> deleteSlb;

    /**
     * @return Whether to delete the SLB purchased on behalf of the gateway at the same time.
     * 
     */
    public Optional<Output<Boolean>> deleteSlb() {
        return Optional.ofNullable(this.deleteSlb);
    }

    /**
     * Whether the enterprise security group type.
     * 
     */
    @Import(name="enterpriseSecurityGroup")
    private @Nullable Output<Boolean> enterpriseSecurityGroup;

    /**
     * @return Whether the enterprise security group type.
     * 
     */
    public Optional<Output<Boolean>> enterpriseSecurityGroup() {
        return Optional.ofNullable(this.enterpriseSecurityGroup);
    }

    /**
     * The name of the Gateway .
     * 
     */
    @Import(name="gatewayName")
    private @Nullable Output<String> gatewayName;

    /**
     * @return The name of the Gateway .
     * 
     */
    public Optional<Output<String>> gatewayName() {
        return Optional.ofNullable(this.gatewayName);
    }

    /**
     * Public network SLB specifications.
     * 
     */
    @Import(name="internetSlbSpec")
    private @Nullable Output<String> internetSlbSpec;

    /**
     * @return Public network SLB specifications.
     * 
     */
    public Optional<Output<String>> internetSlbSpec() {
        return Optional.ofNullable(this.internetSlbSpec);
    }

    /**
     * Number of Gateway Nodes.
     * 
     */
    @Import(name="replica", required=true)
    private Output<Integer> replica;

    /**
     * @return Number of Gateway Nodes.
     * 
     */
    public Output<Integer> replica() {
        return this.replica;
    }

    /**
     * Private network SLB specifications.
     * 
     */
    @Import(name="slbSpec")
    private @Nullable Output<String> slbSpec;

    /**
     * @return Private network SLB specifications.
     * 
     */
    public Optional<Output<String>> slbSpec() {
        return Optional.ofNullable(this.slbSpec);
    }

    /**
     * Gateway Node Specifications. Valid values: `MSE_GTW_2_4_200_c`, `MSE_GTW_4_8_200_c`, `MSE_GTW_8_16_200_c`, `MSE_GTW_16_32_200_c`.
     * 
     */
    @Import(name="spec", required=true)
    private Output<String> spec;

    /**
     * @return Gateway Node Specifications. Valid values: `MSE_GTW_2_4_200_c`, `MSE_GTW_4_8_200_c`, `MSE_GTW_8_16_200_c`, `MSE_GTW_16_32_200_c`.
     * 
     */
    public Output<String> spec() {
        return this.spec;
    }

    /**
     * The ID of the vpc.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the vpc.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     * The ID of the vswitch.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The ID of the vswitch.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private GatewayArgs() {}

    private GatewayArgs(GatewayArgs $) {
        this.backupVswitchId = $.backupVswitchId;
        this.deleteSlb = $.deleteSlb;
        this.enterpriseSecurityGroup = $.enterpriseSecurityGroup;
        this.gatewayName = $.gatewayName;
        this.internetSlbSpec = $.internetSlbSpec;
        this.replica = $.replica;
        this.slbSpec = $.slbSpec;
        this.spec = $.spec;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayArgs $;

        public Builder() {
            $ = new GatewayArgs();
        }

        public Builder(GatewayArgs defaults) {
            $ = new GatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupVswitchId The backup vswitch id.
         * 
         * @return builder
         * 
         */
        public Builder backupVswitchId(@Nullable Output<String> backupVswitchId) {
            $.backupVswitchId = backupVswitchId;
            return this;
        }

        /**
         * @param backupVswitchId The backup vswitch id.
         * 
         * @return builder
         * 
         */
        public Builder backupVswitchId(String backupVswitchId) {
            return backupVswitchId(Output.of(backupVswitchId));
        }

        /**
         * @param deleteSlb Whether to delete the SLB purchased on behalf of the gateway at the same time.
         * 
         * @return builder
         * 
         */
        public Builder deleteSlb(@Nullable Output<Boolean> deleteSlb) {
            $.deleteSlb = deleteSlb;
            return this;
        }

        /**
         * @param deleteSlb Whether to delete the SLB purchased on behalf of the gateway at the same time.
         * 
         * @return builder
         * 
         */
        public Builder deleteSlb(Boolean deleteSlb) {
            return deleteSlb(Output.of(deleteSlb));
        }

        /**
         * @param enterpriseSecurityGroup Whether the enterprise security group type.
         * 
         * @return builder
         * 
         */
        public Builder enterpriseSecurityGroup(@Nullable Output<Boolean> enterpriseSecurityGroup) {
            $.enterpriseSecurityGroup = enterpriseSecurityGroup;
            return this;
        }

        /**
         * @param enterpriseSecurityGroup Whether the enterprise security group type.
         * 
         * @return builder
         * 
         */
        public Builder enterpriseSecurityGroup(Boolean enterpriseSecurityGroup) {
            return enterpriseSecurityGroup(Output.of(enterpriseSecurityGroup));
        }

        /**
         * @param gatewayName The name of the Gateway .
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(@Nullable Output<String> gatewayName) {
            $.gatewayName = gatewayName;
            return this;
        }

        /**
         * @param gatewayName The name of the Gateway .
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(String gatewayName) {
            return gatewayName(Output.of(gatewayName));
        }

        /**
         * @param internetSlbSpec Public network SLB specifications.
         * 
         * @return builder
         * 
         */
        public Builder internetSlbSpec(@Nullable Output<String> internetSlbSpec) {
            $.internetSlbSpec = internetSlbSpec;
            return this;
        }

        /**
         * @param internetSlbSpec Public network SLB specifications.
         * 
         * @return builder
         * 
         */
        public Builder internetSlbSpec(String internetSlbSpec) {
            return internetSlbSpec(Output.of(internetSlbSpec));
        }

        /**
         * @param replica Number of Gateway Nodes.
         * 
         * @return builder
         * 
         */
        public Builder replica(Output<Integer> replica) {
            $.replica = replica;
            return this;
        }

        /**
         * @param replica Number of Gateway Nodes.
         * 
         * @return builder
         * 
         */
        public Builder replica(Integer replica) {
            return replica(Output.of(replica));
        }

        /**
         * @param slbSpec Private network SLB specifications.
         * 
         * @return builder
         * 
         */
        public Builder slbSpec(@Nullable Output<String> slbSpec) {
            $.slbSpec = slbSpec;
            return this;
        }

        /**
         * @param slbSpec Private network SLB specifications.
         * 
         * @return builder
         * 
         */
        public Builder slbSpec(String slbSpec) {
            return slbSpec(Output.of(slbSpec));
        }

        /**
         * @param spec Gateway Node Specifications. Valid values: `MSE_GTW_2_4_200_c`, `MSE_GTW_4_8_200_c`, `MSE_GTW_8_16_200_c`, `MSE_GTW_16_32_200_c`.
         * 
         * @return builder
         * 
         */
        public Builder spec(Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Gateway Node Specifications. Valid values: `MSE_GTW_2_4_200_c`, `MSE_GTW_4_8_200_c`, `MSE_GTW_8_16_200_c`, `MSE_GTW_16_32_200_c`.
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        /**
         * @param vpcId The ID of the vpc.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the vpc.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The ID of the vswitch.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of the vswitch.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public GatewayArgs build() {
            if ($.replica == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "replica");
            }
            if ($.spec == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "spec");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "vpcId");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "vswitchId");
            }
            return $;
        }
    }

}
