// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dfs.inputs;

import com.pulumi.alicloud.dfs.inputs.VscMountPointInstanceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VscMountPointState extends com.pulumi.resources.ResourceArgs {

    public static final VscMountPointState Empty = new VscMountPointState();

    /**
     * Mount point alias prefix, which is used as the prefix for generating VSC mount point aliases.
     * 
     */
    @Import(name="aliasPrefix")
    private @Nullable Output<String> aliasPrefix;

    /**
     * @return Mount point alias prefix, which is used as the prefix for generating VSC mount point aliases.
     * 
     */
    public Optional<Output<String>> aliasPrefix() {
        return Optional.ofNullable(this.aliasPrefix);
    }

    /**
     * The description of the Mount point.  The length is 0 to 100 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Mount point.  The length is 0 to 100 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ID of the HDFS file system resource associated with the VSC mount point.
     * 
     */
    @Import(name="fileSystemId")
    private @Nullable Output<String> fileSystemId;

    /**
     * @return The ID of the HDFS file system resource associated with the VSC mount point.
     * 
     */
    public Optional<Output<String>> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }

    /**
     * The collection of ECS instances on which the HDFS file system is mounted.
     * 
     */
    @Import(name="instances")
    private @Nullable Output<List<VscMountPointInstanceArgs>> instances;

    /**
     * @return The collection of ECS instances on which the HDFS file system is mounted.
     * 
     */
    public Optional<Output<List<VscMountPointInstanceArgs>>> instances() {
        return Optional.ofNullable(this.instances);
    }

    /**
     * VSC mount point ID, which is the unique identifier of the vsc mount point and is used to access the associated HDFS file system.
     * 
     */
    @Import(name="mountPointId")
    private @Nullable Output<String> mountPointId;

    /**
     * @return VSC mount point ID, which is the unique identifier of the vsc mount point and is used to access the associated HDFS file system.
     * 
     */
    public Optional<Output<String>> mountPointId() {
        return Optional.ofNullable(this.mountPointId);
    }

    private VscMountPointState() {}

    private VscMountPointState(VscMountPointState $) {
        this.aliasPrefix = $.aliasPrefix;
        this.description = $.description;
        this.fileSystemId = $.fileSystemId;
        this.instances = $.instances;
        this.mountPointId = $.mountPointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VscMountPointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VscMountPointState $;

        public Builder() {
            $ = new VscMountPointState();
        }

        public Builder(VscMountPointState defaults) {
            $ = new VscMountPointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliasPrefix Mount point alias prefix, which is used as the prefix for generating VSC mount point aliases.
         * 
         * @return builder
         * 
         */
        public Builder aliasPrefix(@Nullable Output<String> aliasPrefix) {
            $.aliasPrefix = aliasPrefix;
            return this;
        }

        /**
         * @param aliasPrefix Mount point alias prefix, which is used as the prefix for generating VSC mount point aliases.
         * 
         * @return builder
         * 
         */
        public Builder aliasPrefix(String aliasPrefix) {
            return aliasPrefix(Output.of(aliasPrefix));
        }

        /**
         * @param description The description of the Mount point.  The length is 0 to 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Mount point.  The length is 0 to 100 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fileSystemId The ID of the HDFS file system resource associated with the VSC mount point.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(@Nullable Output<String> fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        /**
         * @param fileSystemId The ID of the HDFS file system resource associated with the VSC mount point.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(String fileSystemId) {
            return fileSystemId(Output.of(fileSystemId));
        }

        /**
         * @param instances The collection of ECS instances on which the HDFS file system is mounted.
         * 
         * @return builder
         * 
         */
        public Builder instances(@Nullable Output<List<VscMountPointInstanceArgs>> instances) {
            $.instances = instances;
            return this;
        }

        /**
         * @param instances The collection of ECS instances on which the HDFS file system is mounted.
         * 
         * @return builder
         * 
         */
        public Builder instances(List<VscMountPointInstanceArgs> instances) {
            return instances(Output.of(instances));
        }

        /**
         * @param instances The collection of ECS instances on which the HDFS file system is mounted.
         * 
         * @return builder
         * 
         */
        public Builder instances(VscMountPointInstanceArgs... instances) {
            return instances(List.of(instances));
        }

        /**
         * @param mountPointId VSC mount point ID, which is the unique identifier of the vsc mount point and is used to access the associated HDFS file system.
         * 
         * @return builder
         * 
         */
        public Builder mountPointId(@Nullable Output<String> mountPointId) {
            $.mountPointId = mountPointId;
            return this;
        }

        /**
         * @param mountPointId VSC mount point ID, which is the unique identifier of the vsc mount point and is used to access the associated HDFS file system.
         * 
         * @return builder
         * 
         */
        public Builder mountPointId(String mountPointId) {
            return mountPointId(Output.of(mountPointId));
        }

        public VscMountPointState build() {
            return $;
        }
    }

}
