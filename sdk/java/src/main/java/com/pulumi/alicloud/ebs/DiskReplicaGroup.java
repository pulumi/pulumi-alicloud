// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ebs.DiskReplicaGroupArgs;
import com.pulumi.alicloud.ebs.inputs.DiskReplicaGroupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Elastic Block Storage(EBS) Disk Replica Group resource.
 * 
 * consistent replica group.
 * 
 * For information about Elastic Block Storage(EBS) Disk Replica Group and how to use it, see [What is Disk Replica Group](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/creatediskreplicagroup).
 * 
 * &gt; **NOTE:** Available since v1.187.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.ebs.EbsFunctions;
 * import com.pulumi.alicloud.ebs.DiskReplicaGroup;
 * import com.pulumi.alicloud.ebs.DiskReplicaGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         final var defaultGetRegions = EbsFunctions.getRegions(GetRegionsArgs.builder()
 *             .regionId(default_.regions()[0].id())
 *             .build());
 * 
 *         var defaultDiskReplicaGroup = new DiskReplicaGroup("defaultDiskReplicaGroup", DiskReplicaGroupArgs.builder()
 *             .sourceRegionId(default_.regions()[0].id())
 *             .sourceZoneId(defaultGetRegions.regions()[0].zones()[0].zoneId())
 *             .destinationRegionId(default_.regions()[0].id())
 *             .destinationZoneId(defaultGetRegions.regions()[0].zones()[1].zoneId())
 *             .groupName(name)
 *             .description(name)
 *             .rpo(900)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Elastic Block Storage(EBS) Disk Replica Group can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ebs/diskReplicaGroup:DiskReplicaGroup example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ebs/diskReplicaGroup:DiskReplicaGroup")
public class DiskReplicaGroup extends com.pulumi.resources.CustomResource {
    /**
     * The description of the consistent replication group.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the consistent replication group.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The ID of the region to which the disaster recovery site belongs.
     * 
     */
    @Export(name="destinationRegionId", refs={String.class}, tree="[0]")
    private Output<String> destinationRegionId;

    /**
     * @return The ID of the region to which the disaster recovery site belongs.
     * 
     */
    public Output<String> destinationRegionId() {
        return this.destinationRegionId;
    }
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     * 
     */
    @Export(name="destinationZoneId", refs={String.class}, tree="[0]")
    private Output<String> destinationZoneId;

    /**
     * @return The ID of the zone to which the disaster recovery site belongs.
     * 
     */
    public Output<String> destinationZoneId() {
        return this.destinationZoneId;
    }
    /**
     * Consistent replication group name.
     * 
     */
    @Export(name="diskReplicaGroupName", refs={String.class}, tree="[0]")
    private Output<String> diskReplicaGroupName;

    /**
     * @return Consistent replication group name.
     * 
     */
    public Output<String> diskReplicaGroupName() {
        return this.diskReplicaGroupName;
    }
    /**
     * . Field &#39;group_name&#39; has been deprecated from provider version 1.245.0. New field &#39;disk_replica_group_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;group_name&#39; has been deprecated since provider version 1.245.0. New field &#39;disk_replica_group_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'group_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_group_name' instead. */
    @Export(name="groupName", refs={String.class}, tree="[0]")
    private Output<String> groupName;

    /**
     * @return . Field &#39;group_name&#39; has been deprecated from provider version 1.245.0. New field &#39;disk_replica_group_name&#39; instead.
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     * 
     * Default value: false.
     * 
     */
    @Export(name="oneShot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> oneShot;

    /**
     * @return Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     * 
     * Default value: false.
     * 
     */
    public Output<Optional<Boolean>> oneShot() {
        return Codegen.optional(this.oneShot);
    }
    /**
     * List of replication pair IDs contained in a consistent replication group.
     * 
     */
    @Export(name="pairIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> pairIds;

    /**
     * @return List of replication pair IDs contained in a consistent replication group.
     * 
     */
    public Output<Optional<List<String>>> pairIds() {
        return Codegen.optional(this.pairIds);
    }
    /**
     * resource group ID of enterprise
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return resource group ID of enterprise
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     * 
     */
    @Export(name="reverseReplicate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reverseReplicate;

    /**
     * @return Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     * 
     */
    public Output<Optional<Boolean>> reverseReplicate() {
        return Codegen.optional(this.reverseReplicate);
    }
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     * 
     */
    @Export(name="rpo", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> rpo;

    /**
     * @return The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     * 
     */
    public Output<Optional<Integer>> rpo() {
        return Codegen.optional(this.rpo);
    }
    /**
     * The ID of the region to which the production site belongs.
     * 
     */
    @Export(name="sourceRegionId", refs={String.class}, tree="[0]")
    private Output<String> sourceRegionId;

    /**
     * @return The ID of the region to which the production site belongs.
     * 
     */
    public Output<String> sourceRegionId() {
        return this.sourceRegionId;
    }
    /**
     * The ID of the zone to which the production site belongs.
     * 
     */
    @Export(name="sourceZoneId", refs={String.class}, tree="[0]")
    private Output<String> sourceZoneId;

    /**
     * @return The ID of the zone to which the production site belongs.
     * 
     */
    public Output<String> sourceZoneId() {
        return this.sourceZoneId;
    }
    /**
     * The status of the consistent replication group. Possible values:
     * - invalid: invalid. This state indicates that there is an exception to the replication pair in the consistent replication group.
     * - creating: creating.
     * - created: created.
     * - create_failed: creation failed.
     * - manual_syncing: in a single synchronization. If it is the first single synchronization, this status is also displayed in the synchronization.
     * - syncing: synchronization. This state is the first time data is copied asynchronously between the master and slave disks.
     * - normal: normal. When data replication is completed within the current cycle of asynchronous replication, it will be in this state.
     * - stopping: stopping.
     * - stopped: stopped.
     * - stop_failed: Stop failed.
     * - Failover: failover.
     * - Failed: failover completed.
     * - failover_failed: failover failed.
     * - Reprotection: In reverse copy operation.
     * - reprotect_failed: reverse replication failed.
     * - deleting: deleting.
     * - delete_failed: delete failed.
     * - deleted: deleted.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the consistent replication group. Possible values:
     * - invalid: invalid. This state indicates that there is an exception to the replication pair in the consistent replication group.
     * - creating: creating.
     * - created: created.
     * - create_failed: creation failed.
     * - manual_syncing: in a single synchronization. If it is the first single synchronization, this status is also displayed in the synchronization.
     * - syncing: synchronization. This state is the first time data is copied asynchronously between the master and slave disks.
     * - normal: normal. When data replication is completed within the current cycle of asynchronous replication, it will be in this state.
     * - stopping: stopping.
     * - stopped: stopped.
     * - stop_failed: Stop failed.
     * - Failover: failover.
     * - Failed: failover completed.
     * - failover_failed: failover failed.
     * - Reprotection: In reverse copy operation.
     * - reprotect_failed: reverse replication failed.
     * - deleting: deleting.
     * - delete_failed: delete failed.
     * - deleted: deleted.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiskReplicaGroup(java.lang.String name) {
        this(name, DiskReplicaGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiskReplicaGroup(java.lang.String name, DiskReplicaGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiskReplicaGroup(java.lang.String name, DiskReplicaGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/diskReplicaGroup:DiskReplicaGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DiskReplicaGroup(java.lang.String name, Output<java.lang.String> id, @Nullable DiskReplicaGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/diskReplicaGroup:DiskReplicaGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static DiskReplicaGroupArgs makeArgs(DiskReplicaGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DiskReplicaGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiskReplicaGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable DiskReplicaGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiskReplicaGroup(name, id, state, options);
    }
}
