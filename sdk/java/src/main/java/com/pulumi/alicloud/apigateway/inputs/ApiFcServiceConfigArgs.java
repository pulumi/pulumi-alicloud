// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiFcServiceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiFcServiceConfigArgs Empty = new ApiFcServiceConfigArgs();

    /**
     * RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
     * 
     */
    @Import(name="arnRole")
    private @Nullable Output<String> arnRole;

    /**
     * @return RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
     * 
     */
    public Optional<Output<String>> arnRole() {
        return Optional.ofNullable(this.arnRole);
    }

    /**
     * The function name of function compute service.
     * 
     */
    @Import(name="functionName", required=true)
    private Output<String> functionName;

    /**
     * @return The function name of function compute service.
     * 
     */
    public Output<String> functionName() {
        return this.functionName;
    }

    /**
     * The region that the function compute service belongs to.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region that the function compute service belongs to.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * The service name of function compute service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The service name of function compute service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Backend service time-out time; unit: millisecond.
     * 
     */
    @Import(name="timeout", required=true)
    private Output<Integer> timeout;

    /**
     * @return Backend service time-out time; unit: millisecond.
     * 
     */
    public Output<Integer> timeout() {
        return this.timeout;
    }

    private ApiFcServiceConfigArgs() {}

    private ApiFcServiceConfigArgs(ApiFcServiceConfigArgs $) {
        this.arnRole = $.arnRole;
        this.functionName = $.functionName;
        this.region = $.region;
        this.serviceName = $.serviceName;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiFcServiceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiFcServiceConfigArgs $;

        public Builder() {
            $ = new ApiFcServiceConfigArgs();
        }

        public Builder(ApiFcServiceConfigArgs defaults) {
            $ = new ApiFcServiceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arnRole RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
         * 
         * @return builder
         * 
         */
        public Builder arnRole(@Nullable Output<String> arnRole) {
            $.arnRole = arnRole;
            return this;
        }

        /**
         * @param arnRole RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
         * 
         * @return builder
         * 
         */
        public Builder arnRole(String arnRole) {
            return arnRole(Output.of(arnRole));
        }

        /**
         * @param functionName The function name of function compute service.
         * 
         * @return builder
         * 
         */
        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        /**
         * @param functionName The function name of function compute service.
         * 
         * @return builder
         * 
         */
        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        /**
         * @param region The region that the function compute service belongs to.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region that the function compute service belongs to.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName The service name of function compute service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name of function compute service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param timeout Backend service time-out time; unit: millisecond.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Backend service time-out time; unit: millisecond.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public ApiFcServiceConfigArgs build() {
            if ($.functionName == null) {
                throw new MissingRequiredPropertyException("ApiFcServiceConfigArgs", "functionName");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("ApiFcServiceConfigArgs", "region");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("ApiFcServiceConfigArgs", "serviceName");
            }
            if ($.timeout == null) {
                throw new MissingRequiredPropertyException("ApiFcServiceConfigArgs", "timeout");
            }
            return $;
        }
    }

}
