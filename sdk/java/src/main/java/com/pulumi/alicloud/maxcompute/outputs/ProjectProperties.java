// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.outputs;

import com.pulumi.alicloud.maxcompute.outputs.ProjectPropertiesEncryption;
import com.pulumi.alicloud.maxcompute.outputs.ProjectPropertiesTableLifecycle;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectProperties {
    /**
     * @return Whether to allow full table scan.
     * 
     */
    private @Nullable Boolean allowFullScan;
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    private @Nullable Boolean enableDecimal2;
    /**
     * @return Whether encryption is turned on. See `encryption` below.
     * 
     */
    private @Nullable ProjectPropertiesEncryption encryption;
    /**
     * @return Job default retention time.
     * 
     */
    private @Nullable Integer retentionDays;
    /**
     * @return SQL charge limit.
     * 
     */
    private @Nullable String sqlMeteringMax;
    /**
     * @return Life cycle of tables. See `table_lifecycle` below.
     * 
     */
    private @Nullable ProjectPropertiesTableLifecycle tableLifecycle;
    /**
     * @return Project time zone.
     * 
     */
    private @Nullable String timezone;
    /**
     * @return Type system.
     * 
     */
    private @Nullable String typeSystem;

    private ProjectProperties() {}
    /**
     * @return Whether to allow full table scan.
     * 
     */
    public Optional<Boolean> allowFullScan() {
        return Optional.ofNullable(this.allowFullScan);
    }
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    public Optional<Boolean> enableDecimal2() {
        return Optional.ofNullable(this.enableDecimal2);
    }
    /**
     * @return Whether encryption is turned on. See `encryption` below.
     * 
     */
    public Optional<ProjectPropertiesEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return Job default retention time.
     * 
     */
    public Optional<Integer> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }
    /**
     * @return SQL charge limit.
     * 
     */
    public Optional<String> sqlMeteringMax() {
        return Optional.ofNullable(this.sqlMeteringMax);
    }
    /**
     * @return Life cycle of tables. See `table_lifecycle` below.
     * 
     */
    public Optional<ProjectPropertiesTableLifecycle> tableLifecycle() {
        return Optional.ofNullable(this.tableLifecycle);
    }
    /**
     * @return Project time zone.
     * 
     */
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }
    /**
     * @return Type system.
     * 
     */
    public Optional<String> typeSystem() {
        return Optional.ofNullable(this.typeSystem);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowFullScan;
        private @Nullable Boolean enableDecimal2;
        private @Nullable ProjectPropertiesEncryption encryption;
        private @Nullable Integer retentionDays;
        private @Nullable String sqlMeteringMax;
        private @Nullable ProjectPropertiesTableLifecycle tableLifecycle;
        private @Nullable String timezone;
        private @Nullable String typeSystem;
        public Builder() {}
        public Builder(ProjectProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowFullScan = defaults.allowFullScan;
    	      this.enableDecimal2 = defaults.enableDecimal2;
    	      this.encryption = defaults.encryption;
    	      this.retentionDays = defaults.retentionDays;
    	      this.sqlMeteringMax = defaults.sqlMeteringMax;
    	      this.tableLifecycle = defaults.tableLifecycle;
    	      this.timezone = defaults.timezone;
    	      this.typeSystem = defaults.typeSystem;
        }

        @CustomType.Setter
        public Builder allowFullScan(@Nullable Boolean allowFullScan) {

            this.allowFullScan = allowFullScan;
            return this;
        }
        @CustomType.Setter
        public Builder enableDecimal2(@Nullable Boolean enableDecimal2) {

            this.enableDecimal2 = enableDecimal2;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable ProjectPropertiesEncryption encryption) {

            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder retentionDays(@Nullable Integer retentionDays) {

            this.retentionDays = retentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder sqlMeteringMax(@Nullable String sqlMeteringMax) {

            this.sqlMeteringMax = sqlMeteringMax;
            return this;
        }
        @CustomType.Setter
        public Builder tableLifecycle(@Nullable ProjectPropertiesTableLifecycle tableLifecycle) {

            this.tableLifecycle = tableLifecycle;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {

            this.timezone = timezone;
            return this;
        }
        @CustomType.Setter
        public Builder typeSystem(@Nullable String typeSystem) {

            this.typeSystem = typeSystem;
            return this;
        }
        public ProjectProperties build() {
            final var _resultValue = new ProjectProperties();
            _resultValue.allowFullScan = allowFullScan;
            _resultValue.enableDecimal2 = enableDecimal2;
            _resultValue.encryption = encryption;
            _resultValue.retentionDays = retentionDays;
            _resultValue.sqlMeteringMax = sqlMeteringMax;
            _resultValue.tableLifecycle = tableLifecycle;
            _resultValue.timezone = timezone;
            _resultValue.typeSystem = typeSystem;
            return _resultValue;
        }
    }
}
