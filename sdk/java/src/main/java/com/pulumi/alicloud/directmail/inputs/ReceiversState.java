// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.directmail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReceiversState extends com.pulumi.resources.ResourceArgs {

    public static final ReceiversState Empty = new ReceiversState();

    /**
     * The description of receivers and 1-50 characters in length.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of receivers and 1-50 characters in length.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The alias of receivers. Must email address and less than 30 characters in length.
     * 
     */
    @Import(name="receiversAlias")
    private @Nullable Output<String> receiversAlias;

    /**
     * @return The alias of receivers. Must email address and less than 30 characters in length.
     * 
     */
    public Optional<Output<String>> receiversAlias() {
        return Optional.ofNullable(this.receiversAlias);
    }

    /**
     * The name of the resource. The length that cannot be repeated is 1-30 characters.
     * 
     */
    @Import(name="receiversName")
    private @Nullable Output<String> receiversName;

    /**
     * @return The name of the resource. The length that cannot be repeated is 1-30 characters.
     * 
     */
    public Optional<Output<String>> receiversName() {
        return Optional.ofNullable(this.receiversName);
    }

    /**
     * The status of the resource. `0` means uploading, `1` means upload completed.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the resource. `0` means uploading, `1` means upload completed.
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    private ReceiversState() {}

    private ReceiversState(ReceiversState $) {
        this.description = $.description;
        this.receiversAlias = $.receiversAlias;
        this.receiversName = $.receiversName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReceiversState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReceiversState $;

        public Builder() {
            $ = new ReceiversState();
        }

        public Builder(ReceiversState defaults) {
            $ = new ReceiversState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of receivers and 1-50 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of receivers and 1-50 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param receiversAlias The alias of receivers. Must email address and less than 30 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder receiversAlias(@Nullable Output<String> receiversAlias) {
            $.receiversAlias = receiversAlias;
            return this;
        }

        /**
         * @param receiversAlias The alias of receivers. Must email address and less than 30 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder receiversAlias(String receiversAlias) {
            return receiversAlias(Output.of(receiversAlias));
        }

        /**
         * @param receiversName The name of the resource. The length that cannot be repeated is 1-30 characters.
         * 
         * @return builder
         * 
         */
        public Builder receiversName(@Nullable Output<String> receiversName) {
            $.receiversName = receiversName;
            return this;
        }

        /**
         * @param receiversName The name of the resource. The length that cannot be repeated is 1-30 characters.
         * 
         * @return builder
         * 
         */
        public Builder receiversName(String receiversName) {
            return receiversName(Output.of(receiversName));
        }

        /**
         * @param status The status of the resource. `0` means uploading, `1` means upload completed.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. `0` means uploading, `1` means upload completed.
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        public ReceiversState build() {
            return $;
        }
    }

}
