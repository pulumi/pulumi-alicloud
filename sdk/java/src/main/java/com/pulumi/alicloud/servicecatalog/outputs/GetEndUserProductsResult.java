// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.outputs;

import com.pulumi.alicloud.servicecatalog.outputs.GetEndUserProductsEndUserProduct;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEndUserProductsResult {
    /**
     * @return A list of End User Product Entries. Each element contains the following attributes:
     * 
     */
    private List<GetEndUserProductsEndUserProduct> endUserProducts;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of End User Product IDs.
     * 
     */
    private List<String> ids;
    private @Nullable String nameRegex;
    private @Nullable String outputFile;
    private @Nullable Integer pageNumber;
    private @Nullable Integer pageSize;
    private @Nullable String sortBy;
    private @Nullable String sortOrder;

    private GetEndUserProductsResult() {}
    /**
     * @return A list of End User Product Entries. Each element contains the following attributes:
     * 
     */
    public List<GetEndUserProductsEndUserProduct> endUserProducts() {
        return this.endUserProducts;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of End User Product IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndUserProductsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEndUserProductsEndUserProduct> endUserProducts;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private @Nullable String outputFile;
        private @Nullable Integer pageNumber;
        private @Nullable Integer pageSize;
        private @Nullable String sortBy;
        private @Nullable String sortOrder;
        public Builder() {}
        public Builder(GetEndUserProductsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endUserProducts = defaults.endUserProducts;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.outputFile = defaults.outputFile;
    	      this.pageNumber = defaults.pageNumber;
    	      this.pageSize = defaults.pageSize;
    	      this.sortBy = defaults.sortBy;
    	      this.sortOrder = defaults.sortOrder;
        }

        @CustomType.Setter
        public Builder endUserProducts(List<GetEndUserProductsEndUserProduct> endUserProducts) {
            this.endUserProducts = Objects.requireNonNull(endUserProducts);
            return this;
        }
        public Builder endUserProducts(GetEndUserProductsEndUserProduct... endUserProducts) {
            return endUserProducts(List.of(endUserProducts));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder pageNumber(@Nullable Integer pageNumber) {
            this.pageNumber = pageNumber;
            return this;
        }
        @CustomType.Setter
        public Builder pageSize(@Nullable Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }
        @CustomType.Setter
        public Builder sortBy(@Nullable String sortBy) {
            this.sortBy = sortBy;
            return this;
        }
        @CustomType.Setter
        public Builder sortOrder(@Nullable String sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }
        public GetEndUserProductsResult build() {
            final var o = new GetEndUserProductsResult();
            o.endUserProducts = endUserProducts;
            o.id = id;
            o.ids = ids;
            o.nameRegex = nameRegex;
            o.outputFile = outputFile;
            o.pageNumber = pageNumber;
            o.pageSize = pageSize;
            o.sortBy = sortBy;
            o.sortOrder = sortOrder;
            return o;
        }
    }
}
