// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostShareKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostShareKeyArgs Empty = new HostShareKeyArgs();

    /**
     * The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     * 
     */
    @Import(name="hostShareKeyName", required=true)
    private Output<String> hostShareKeyName;

    /**
     * @return The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
     * 
     */
    public Output<String> hostShareKeyName() {
        return this.hostShareKeyName;
    }

    /**
     * The ID of the Bastion instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the Bastion instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The password of the private key. The value is a Base64-encoded string.
     * 
     */
    @Import(name="passPhrase")
    private @Nullable Output<String> passPhrase;

    /**
     * @return The password of the private key. The value is a Base64-encoded string.
     * 
     */
    public Optional<Output<String>> passPhrase() {
        return Optional.ofNullable(this.passPhrase);
    }

    /**
     * The private key. The value is a Base64-encoded string.
     * 
     */
    @Import(name="privateKey", required=true)
    private Output<String> privateKey;

    /**
     * @return The private key. The value is a Base64-encoded string.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }

    private HostShareKeyArgs() {}

    private HostShareKeyArgs(HostShareKeyArgs $) {
        this.hostShareKeyName = $.hostShareKeyName;
        this.instanceId = $.instanceId;
        this.passPhrase = $.passPhrase;
        this.privateKey = $.privateKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostShareKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostShareKeyArgs $;

        public Builder() {
            $ = new HostShareKeyArgs();
        }

        public Builder(HostShareKeyArgs defaults) {
            $ = new HostShareKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostShareKeyName The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder hostShareKeyName(Output<String> hostShareKeyName) {
            $.hostShareKeyName = hostShareKeyName;
            return this;
        }

        /**
         * @param hostShareKeyName The name of the host shared key to be added. The name can be a maximum of 128 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder hostShareKeyName(String hostShareKeyName) {
            return hostShareKeyName(Output.of(hostShareKeyName));
        }

        /**
         * @param instanceId The ID of the Bastion instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the Bastion instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param passPhrase The password of the private key. The value is a Base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder passPhrase(@Nullable Output<String> passPhrase) {
            $.passPhrase = passPhrase;
            return this;
        }

        /**
         * @param passPhrase The password of the private key. The value is a Base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder passPhrase(String passPhrase) {
            return passPhrase(Output.of(passPhrase));
        }

        /**
         * @param privateKey The private key. The value is a Base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey The private key. The value is a Base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        public HostShareKeyArgs build() {
            if ($.hostShareKeyName == null) {
                throw new MissingRequiredPropertyException("HostShareKeyArgs", "hostShareKeyName");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("HostShareKeyArgs", "instanceId");
            }
            if ($.privateKey == null) {
                throw new MissingRequiredPropertyException("HostShareKeyArgs", "privateKey");
            }
            return $;
        }
    }

}
