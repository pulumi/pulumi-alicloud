// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.alicloud.cen.inputs.TrafficMarkingPolicyTrafficMatchRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrafficMarkingPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final TrafficMarkingPolicyState Empty = new TrafficMarkingPolicyState();

    /**
     * TrafficMarkingPolicyDescription
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return TrafficMarkingPolicyDescription
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether to PreCheck only this request. Value:
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Whether to PreCheck only this request. Value:
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * MarkingDscp
     * 
     */
    @Import(name="markingDscp")
    private @Nullable Output<Integer> markingDscp;

    /**
     * @return MarkingDscp
     * 
     */
    public Optional<Output<Integer>> markingDscp() {
        return Optional.ofNullable(this.markingDscp);
    }

    /**
     * Priority
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The first ID of the resource
     * 
     */
    @Import(name="trafficMarkingPolicyId")
    private @Nullable Output<String> trafficMarkingPolicyId;

    /**
     * @return The first ID of the resource
     * 
     */
    public Optional<Output<String>> trafficMarkingPolicyId() {
        return Optional.ofNullable(this.trafficMarkingPolicyId);
    }

    /**
     * TrafficMarkingPolicyName
     * 
     */
    @Import(name="trafficMarkingPolicyName")
    private @Nullable Output<String> trafficMarkingPolicyName;

    /**
     * @return TrafficMarkingPolicyName
     * 
     */
    public Optional<Output<String>> trafficMarkingPolicyName() {
        return Optional.ofNullable(this.trafficMarkingPolicyName);
    }

    /**
     * List of stream classification rules.
     * 
     * You can add up to 50 stream classification rules at a time. See `traffic_match_rules` below.
     * 
     */
    @Import(name="trafficMatchRules")
    private @Nullable Output<List<TrafficMarkingPolicyTrafficMatchRuleArgs>> trafficMatchRules;

    /**
     * @return List of stream classification rules.
     * 
     * You can add up to 50 stream classification rules at a time. See `traffic_match_rules` below.
     * 
     */
    public Optional<Output<List<TrafficMarkingPolicyTrafficMatchRuleArgs>>> trafficMatchRules() {
        return Optional.ofNullable(this.trafficMatchRules);
    }

    /**
     * TransitRouterId
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return TransitRouterId
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    private TrafficMarkingPolicyState() {}

    private TrafficMarkingPolicyState(TrafficMarkingPolicyState $) {
        this.description = $.description;
        this.dryRun = $.dryRun;
        this.markingDscp = $.markingDscp;
        this.priority = $.priority;
        this.status = $.status;
        this.trafficMarkingPolicyId = $.trafficMarkingPolicyId;
        this.trafficMarkingPolicyName = $.trafficMarkingPolicyName;
        this.trafficMatchRules = $.trafficMatchRules;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrafficMarkingPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrafficMarkingPolicyState $;

        public Builder() {
            $ = new TrafficMarkingPolicyState();
        }

        public Builder(TrafficMarkingPolicyState defaults) {
            $ = new TrafficMarkingPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description TrafficMarkingPolicyDescription
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description TrafficMarkingPolicyDescription
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dryRun Whether to PreCheck only this request. Value:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Whether to PreCheck only this request. Value:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param markingDscp MarkingDscp
         * 
         * @return builder
         * 
         */
        public Builder markingDscp(@Nullable Output<Integer> markingDscp) {
            $.markingDscp = markingDscp;
            return this;
        }

        /**
         * @param markingDscp MarkingDscp
         * 
         * @return builder
         * 
         */
        public Builder markingDscp(Integer markingDscp) {
            return markingDscp(Output.of(markingDscp));
        }

        /**
         * @param priority Priority
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param trafficMarkingPolicyId The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyId(@Nullable Output<String> trafficMarkingPolicyId) {
            $.trafficMarkingPolicyId = trafficMarkingPolicyId;
            return this;
        }

        /**
         * @param trafficMarkingPolicyId The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyId(String trafficMarkingPolicyId) {
            return trafficMarkingPolicyId(Output.of(trafficMarkingPolicyId));
        }

        /**
         * @param trafficMarkingPolicyName TrafficMarkingPolicyName
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyName(@Nullable Output<String> trafficMarkingPolicyName) {
            $.trafficMarkingPolicyName = trafficMarkingPolicyName;
            return this;
        }

        /**
         * @param trafficMarkingPolicyName TrafficMarkingPolicyName
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyName(String trafficMarkingPolicyName) {
            return trafficMarkingPolicyName(Output.of(trafficMarkingPolicyName));
        }

        /**
         * @param trafficMatchRules List of stream classification rules.
         * 
         * You can add up to 50 stream classification rules at a time. See `traffic_match_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder trafficMatchRules(@Nullable Output<List<TrafficMarkingPolicyTrafficMatchRuleArgs>> trafficMatchRules) {
            $.trafficMatchRules = trafficMatchRules;
            return this;
        }

        /**
         * @param trafficMatchRules List of stream classification rules.
         * 
         * You can add up to 50 stream classification rules at a time. See `traffic_match_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder trafficMatchRules(List<TrafficMarkingPolicyTrafficMatchRuleArgs> trafficMatchRules) {
            return trafficMatchRules(Output.of(trafficMatchRules));
        }

        /**
         * @param trafficMatchRules List of stream classification rules.
         * 
         * You can add up to 50 stream classification rules at a time. See `traffic_match_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder trafficMatchRules(TrafficMarkingPolicyTrafficMatchRuleArgs... trafficMatchRules) {
            return trafficMatchRules(List.of(trafficMatchRules));
        }

        /**
         * @param transitRouterId TransitRouterId
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId TransitRouterId
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        public TrafficMarkingPolicyState build() {
            return $;
        }
    }

}
