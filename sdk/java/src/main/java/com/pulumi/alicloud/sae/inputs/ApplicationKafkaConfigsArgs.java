// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationKafkaConfigsKafkaConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationKafkaConfigsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationKafkaConfigsArgs Empty = new ApplicationKafkaConfigsArgs();

    /**
     * One or more logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
     * 
     */
    @Import(name="kafkaConfigs")
    private @Nullable Output<List<ApplicationKafkaConfigsKafkaConfigArgs>> kafkaConfigs;

    /**
     * @return One or more logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
     * 
     */
    public Optional<Output<List<ApplicationKafkaConfigsKafkaConfigArgs>>> kafkaConfigs() {
        return Optional.ofNullable(this.kafkaConfigs);
    }

    /**
     * The endpoint of the ApsaraMQ for Kafka API.
     * 
     */
    @Import(name="kafkaEndpoint")
    private @Nullable Output<String> kafkaEndpoint;

    /**
     * @return The endpoint of the ApsaraMQ for Kafka API.
     * 
     */
    public Optional<Output<String>> kafkaEndpoint() {
        return Optional.ofNullable(this.kafkaEndpoint);
    }

    /**
     * The  ID of the ApsaraMQ for Kafka instance.
     * 
     */
    @Import(name="kafkaInstanceId")
    private @Nullable Output<String> kafkaInstanceId;

    /**
     * @return The  ID of the ApsaraMQ for Kafka instance.
     * 
     */
    public Optional<Output<String>> kafkaInstanceId() {
        return Optional.ofNullable(this.kafkaInstanceId);
    }

    private ApplicationKafkaConfigsArgs() {}

    private ApplicationKafkaConfigsArgs(ApplicationKafkaConfigsArgs $) {
        this.kafkaConfigs = $.kafkaConfigs;
        this.kafkaEndpoint = $.kafkaEndpoint;
        this.kafkaInstanceId = $.kafkaInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationKafkaConfigsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationKafkaConfigsArgs $;

        public Builder() {
            $ = new ApplicationKafkaConfigsArgs();
        }

        public Builder(ApplicationKafkaConfigsArgs defaults) {
            $ = new ApplicationKafkaConfigsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kafkaConfigs One or more logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfigs(@Nullable Output<List<ApplicationKafkaConfigsKafkaConfigArgs>> kafkaConfigs) {
            $.kafkaConfigs = kafkaConfigs;
            return this;
        }

        /**
         * @param kafkaConfigs One or more logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfigs(List<ApplicationKafkaConfigsKafkaConfigArgs> kafkaConfigs) {
            return kafkaConfigs(Output.of(kafkaConfigs));
        }

        /**
         * @param kafkaConfigs One or more logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfigs(ApplicationKafkaConfigsKafkaConfigArgs... kafkaConfigs) {
            return kafkaConfigs(List.of(kafkaConfigs));
        }

        /**
         * @param kafkaEndpoint The endpoint of the ApsaraMQ for Kafka API.
         * 
         * @return builder
         * 
         */
        public Builder kafkaEndpoint(@Nullable Output<String> kafkaEndpoint) {
            $.kafkaEndpoint = kafkaEndpoint;
            return this;
        }

        /**
         * @param kafkaEndpoint The endpoint of the ApsaraMQ for Kafka API.
         * 
         * @return builder
         * 
         */
        public Builder kafkaEndpoint(String kafkaEndpoint) {
            return kafkaEndpoint(Output.of(kafkaEndpoint));
        }

        /**
         * @param kafkaInstanceId The  ID of the ApsaraMQ for Kafka instance.
         * 
         * @return builder
         * 
         */
        public Builder kafkaInstanceId(@Nullable Output<String> kafkaInstanceId) {
            $.kafkaInstanceId = kafkaInstanceId;
            return this;
        }

        /**
         * @param kafkaInstanceId The  ID of the ApsaraMQ for Kafka instance.
         * 
         * @return builder
         * 
         */
        public Builder kafkaInstanceId(String kafkaInstanceId) {
            return kafkaInstanceId(Output.of(kafkaInstanceId));
        }

        public ApplicationKafkaConfigsArgs build() {
            return $;
        }
    }

}
