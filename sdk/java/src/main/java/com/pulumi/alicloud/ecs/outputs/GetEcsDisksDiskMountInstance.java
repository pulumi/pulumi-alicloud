// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEcsDisksDiskMountInstance {
    /**
     * @return A mount of time.
     * 
     */
    private String attachedTime;
    /**
     * @return The mount point of the disk.
     * 
     */
    private String device;
    /**
     * @return The instance ID of the disk mount.
     * 
     */
    private String instanceId;

    private GetEcsDisksDiskMountInstance() {}
    /**
     * @return A mount of time.
     * 
     */
    public String attachedTime() {
        return this.attachedTime;
    }
    /**
     * @return The mount point of the disk.
     * 
     */
    public String device() {
        return this.device;
    }
    /**
     * @return The instance ID of the disk mount.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsDisksDiskMountInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attachedTime;
        private String device;
        private String instanceId;
        public Builder() {}
        public Builder(GetEcsDisksDiskMountInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedTime = defaults.attachedTime;
    	      this.device = defaults.device;
    	      this.instanceId = defaults.instanceId;
        }

        @CustomType.Setter
        public Builder attachedTime(String attachedTime) {
            this.attachedTime = Objects.requireNonNull(attachedTime);
            return this;
        }
        @CustomType.Setter
        public Builder device(String device) {
            this.device = Objects.requireNonNull(device);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public GetEcsDisksDiskMountInstance build() {
            final var o = new GetEcsDisksDiskMountInstance();
            o.attachedTime = attachedTime;
            o.device = device;
            o.instanceId = instanceId;
            return o;
        }
    }
}
