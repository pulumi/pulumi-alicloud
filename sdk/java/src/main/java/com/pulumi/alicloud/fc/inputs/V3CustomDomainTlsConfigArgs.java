// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3CustomDomainTlsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3CustomDomainTlsConfigArgs Empty = new V3CustomDomainTlsConfigArgs();

    /**
     * List of TLS cipher suites
     * 
     */
    @Import(name="cipherSuites")
    private @Nullable Output<List<String>> cipherSuites;

    /**
     * @return List of TLS cipher suites
     * 
     */
    public Optional<Output<List<String>>> cipherSuites() {
        return Optional.ofNullable(this.cipherSuites);
    }

    /**
     * The maximum version of TLS. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
     * 
     */
    @Import(name="maxVersion")
    private @Nullable Output<String> maxVersion;

    /**
     * @return The maximum version of TLS. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
     * 
     */
    public Optional<Output<String>> maxVersion() {
        return Optional.ofNullable(this.maxVersion);
    }

    /**
     * TLS minimum version number. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
     * 
     */
    @Import(name="minVersion")
    private @Nullable Output<String> minVersion;

    /**
     * @return TLS minimum version number. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
     * 
     */
    public Optional<Output<String>> minVersion() {
        return Optional.ofNullable(this.minVersion);
    }

    private V3CustomDomainTlsConfigArgs() {}

    private V3CustomDomainTlsConfigArgs(V3CustomDomainTlsConfigArgs $) {
        this.cipherSuites = $.cipherSuites;
        this.maxVersion = $.maxVersion;
        this.minVersion = $.minVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3CustomDomainTlsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3CustomDomainTlsConfigArgs $;

        public Builder() {
            $ = new V3CustomDomainTlsConfigArgs();
        }

        public Builder(V3CustomDomainTlsConfigArgs defaults) {
            $ = new V3CustomDomainTlsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cipherSuites List of TLS cipher suites
         * 
         * @return builder
         * 
         */
        public Builder cipherSuites(@Nullable Output<List<String>> cipherSuites) {
            $.cipherSuites = cipherSuites;
            return this;
        }

        /**
         * @param cipherSuites List of TLS cipher suites
         * 
         * @return builder
         * 
         */
        public Builder cipherSuites(List<String> cipherSuites) {
            return cipherSuites(Output.of(cipherSuites));
        }

        /**
         * @param cipherSuites List of TLS cipher suites
         * 
         * @return builder
         * 
         */
        public Builder cipherSuites(String... cipherSuites) {
            return cipherSuites(List.of(cipherSuites));
        }

        /**
         * @param maxVersion The maximum version of TLS. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
         * 
         * @return builder
         * 
         */
        public Builder maxVersion(@Nullable Output<String> maxVersion) {
            $.maxVersion = maxVersion;
            return this;
        }

        /**
         * @param maxVersion The maximum version of TLS. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
         * 
         * @return builder
         * 
         */
        public Builder maxVersion(String maxVersion) {
            return maxVersion(Output.of(maxVersion));
        }

        /**
         * @param minVersion TLS minimum version number. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
         * 
         * @return builder
         * 
         */
        public Builder minVersion(@Nullable Output<String> minVersion) {
            $.minVersion = minVersion;
            return this;
        }

        /**
         * @param minVersion TLS minimum version number. Enumeration values: TLSv1.3, TLSv1.2, TLSv1.1, TLSv1.0
         * 
         * @return builder
         * 
         */
        public Builder minVersion(String minVersion) {
            return minVersion(Output.of(minVersion));
        }

        public V3CustomDomainTlsConfigArgs build() {
            return $;
        }
    }

}
