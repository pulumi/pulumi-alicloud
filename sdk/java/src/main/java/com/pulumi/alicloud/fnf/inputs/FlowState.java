// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fnf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowState extends com.pulumi.resources.ResourceArgs {

    public static final FlowState Empty = new FlowState();

    /**
     * The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
     * 
     */
    @Import(name="definition")
    private @Nullable Output<String> definition;

    /**
     * @return The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
     * 
     */
    public Optional<Output<String>> definition() {
        return Optional.ofNullable(this.definition);
    }

    /**
     * The description of the flow.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the flow.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The unique ID of the flow.
     * 
     */
    @Import(name="flowId")
    private @Nullable Output<String> flowId;

    /**
     * @return The unique ID of the flow.
     * 
     */
    public Optional<Output<String>> flowId() {
        return Optional.ofNullable(this.flowId);
    }

    /**
     * The time when the flow was last modified.
     * 
     */
    @Import(name="lastModifiedTime")
    private @Nullable Output<String> lastModifiedTime;

    /**
     * @return The time when the flow was last modified.
     * 
     */
    public Optional<Output<String>> lastModifiedTime() {
        return Optional.ofNullable(this.lastModifiedTime);
    }

    /**
     * The name of the flow. The name must be unique in an Alibaba Cloud account.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the flow. The name must be unique in an Alibaba Cloud account.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * The type of the flow. Valid values are `FDL` or `DEFAULT`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the flow. Valid values are `FDL` or `DEFAULT`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private FlowState() {}

    private FlowState(FlowState $) {
        this.definition = $.definition;
        this.description = $.description;
        this.flowId = $.flowId;
        this.lastModifiedTime = $.lastModifiedTime;
        this.name = $.name;
        this.roleArn = $.roleArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowState $;

        public Builder() {
            $ = new FlowState();
        }

        public Builder(FlowState defaults) {
            $ = new FlowState(Objects.requireNonNull(defaults));
        }

        /**
         * @param definition The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
         * 
         * @return builder
         * 
         */
        public Builder definition(@Nullable Output<String> definition) {
            $.definition = definition;
            return this;
        }

        /**
         * @param definition The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
         * 
         * @return builder
         * 
         */
        public Builder definition(String definition) {
            return definition(Output.of(definition));
        }

        /**
         * @param description The description of the flow.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the flow.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param flowId The unique ID of the flow.
         * 
         * @return builder
         * 
         */
        public Builder flowId(@Nullable Output<String> flowId) {
            $.flowId = flowId;
            return this;
        }

        /**
         * @param flowId The unique ID of the flow.
         * 
         * @return builder
         * 
         */
        public Builder flowId(String flowId) {
            return flowId(Output.of(flowId));
        }

        /**
         * @param lastModifiedTime The time when the flow was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTime(@Nullable Output<String> lastModifiedTime) {
            $.lastModifiedTime = lastModifiedTime;
            return this;
        }

        /**
         * @param lastModifiedTime The time when the flow was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTime(String lastModifiedTime) {
            return lastModifiedTime(Output.of(lastModifiedTime));
        }

        /**
         * @param name The name of the flow. The name must be unique in an Alibaba Cloud account.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the flow. The name must be unique in an Alibaba Cloud account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleArn The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param type The type of the flow. Valid values are `FDL` or `DEFAULT`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the flow. Valid values are `FDL` or `DEFAULT`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FlowState build() {
            return $;
        }
    }

}
