// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BgpPolicyContentFingerPrintRuleList {
    /**
     * @return End of destination port 0-65535.
     * 
     */
    private Integer dstPortEnd;
    /**
     * @return Destination Port start 0-65535.
     * 
     */
    private Integer dstPortStart;
    /**
     * @return The UUID of the rule is required to be deleted and modified, and it is not required to be created.
     * 
     */
    private @Nullable String fingerPrintRuleId;
    /**
     * @return Action. Currently, only drop is supported.
     * 
     */
    private String matchAction;
    /**
     * @return Maximum bag length.
     * 
     */
    private Integer maxPktLen;
    /**
     * @return Minimum package length.
     * 
     */
    private Integer minPktLen;
    /**
     * @return Offset.
     * 
     */
    private @Nullable Integer offset;
    /**
     * @return Load match, hexadecimal string; Similar to &#39;abcd&#39;.
     * 
     */
    private @Nullable String payloadBytes;
    /**
     * @return Protocol, tcp or udp.
     * 
     */
    private String protocol;
    /**
     * @return Speed limit value 1-100000.
     * 
     */
    private @Nullable Integer rateValue;
    /**
     * @return Serial number 1-100 ● Affects the order issued by the bottom layer ● The larger the number, the lower it is.
     * 
     */
    private Integer seqNo;
    /**
     * @return Source Port end 0-65535.
     * 
     */
    private Integer srcPortEnd;
    /**
     * @return Source port start 0-65535.
     * 
     */
    private Integer srcPortStart;

    private BgpPolicyContentFingerPrintRuleList() {}
    /**
     * @return End of destination port 0-65535.
     * 
     */
    public Integer dstPortEnd() {
        return this.dstPortEnd;
    }
    /**
     * @return Destination Port start 0-65535.
     * 
     */
    public Integer dstPortStart() {
        return this.dstPortStart;
    }
    /**
     * @return The UUID of the rule is required to be deleted and modified, and it is not required to be created.
     * 
     */
    public Optional<String> fingerPrintRuleId() {
        return Optional.ofNullable(this.fingerPrintRuleId);
    }
    /**
     * @return Action. Currently, only drop is supported.
     * 
     */
    public String matchAction() {
        return this.matchAction;
    }
    /**
     * @return Maximum bag length.
     * 
     */
    public Integer maxPktLen() {
        return this.maxPktLen;
    }
    /**
     * @return Minimum package length.
     * 
     */
    public Integer minPktLen() {
        return this.minPktLen;
    }
    /**
     * @return Offset.
     * 
     */
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }
    /**
     * @return Load match, hexadecimal string; Similar to &#39;abcd&#39;.
     * 
     */
    public Optional<String> payloadBytes() {
        return Optional.ofNullable(this.payloadBytes);
    }
    /**
     * @return Protocol, tcp or udp.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Speed limit value 1-100000.
     * 
     */
    public Optional<Integer> rateValue() {
        return Optional.ofNullable(this.rateValue);
    }
    /**
     * @return Serial number 1-100 ● Affects the order issued by the bottom layer ● The larger the number, the lower it is.
     * 
     */
    public Integer seqNo() {
        return this.seqNo;
    }
    /**
     * @return Source Port end 0-65535.
     * 
     */
    public Integer srcPortEnd() {
        return this.srcPortEnd;
    }
    /**
     * @return Source port start 0-65535.
     * 
     */
    public Integer srcPortStart() {
        return this.srcPortStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BgpPolicyContentFingerPrintRuleList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dstPortEnd;
        private Integer dstPortStart;
        private @Nullable String fingerPrintRuleId;
        private String matchAction;
        private Integer maxPktLen;
        private Integer minPktLen;
        private @Nullable Integer offset;
        private @Nullable String payloadBytes;
        private String protocol;
        private @Nullable Integer rateValue;
        private Integer seqNo;
        private Integer srcPortEnd;
        private Integer srcPortStart;
        public Builder() {}
        public Builder(BgpPolicyContentFingerPrintRuleList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dstPortEnd = defaults.dstPortEnd;
    	      this.dstPortStart = defaults.dstPortStart;
    	      this.fingerPrintRuleId = defaults.fingerPrintRuleId;
    	      this.matchAction = defaults.matchAction;
    	      this.maxPktLen = defaults.maxPktLen;
    	      this.minPktLen = defaults.minPktLen;
    	      this.offset = defaults.offset;
    	      this.payloadBytes = defaults.payloadBytes;
    	      this.protocol = defaults.protocol;
    	      this.rateValue = defaults.rateValue;
    	      this.seqNo = defaults.seqNo;
    	      this.srcPortEnd = defaults.srcPortEnd;
    	      this.srcPortStart = defaults.srcPortStart;
        }

        @CustomType.Setter
        public Builder dstPortEnd(Integer dstPortEnd) {
            if (dstPortEnd == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "dstPortEnd");
            }
            this.dstPortEnd = dstPortEnd;
            return this;
        }
        @CustomType.Setter
        public Builder dstPortStart(Integer dstPortStart) {
            if (dstPortStart == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "dstPortStart");
            }
            this.dstPortStart = dstPortStart;
            return this;
        }
        @CustomType.Setter
        public Builder fingerPrintRuleId(@Nullable String fingerPrintRuleId) {

            this.fingerPrintRuleId = fingerPrintRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder matchAction(String matchAction) {
            if (matchAction == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "matchAction");
            }
            this.matchAction = matchAction;
            return this;
        }
        @CustomType.Setter
        public Builder maxPktLen(Integer maxPktLen) {
            if (maxPktLen == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "maxPktLen");
            }
            this.maxPktLen = maxPktLen;
            return this;
        }
        @CustomType.Setter
        public Builder minPktLen(Integer minPktLen) {
            if (minPktLen == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "minPktLen");
            }
            this.minPktLen = minPktLen;
            return this;
        }
        @CustomType.Setter
        public Builder offset(@Nullable Integer offset) {

            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder payloadBytes(@Nullable String payloadBytes) {

            this.payloadBytes = payloadBytes;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder rateValue(@Nullable Integer rateValue) {

            this.rateValue = rateValue;
            return this;
        }
        @CustomType.Setter
        public Builder seqNo(Integer seqNo) {
            if (seqNo == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "seqNo");
            }
            this.seqNo = seqNo;
            return this;
        }
        @CustomType.Setter
        public Builder srcPortEnd(Integer srcPortEnd) {
            if (srcPortEnd == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "srcPortEnd");
            }
            this.srcPortEnd = srcPortEnd;
            return this;
        }
        @CustomType.Setter
        public Builder srcPortStart(Integer srcPortStart) {
            if (srcPortStart == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentFingerPrintRuleList", "srcPortStart");
            }
            this.srcPortStart = srcPortStart;
            return this;
        }
        public BgpPolicyContentFingerPrintRuleList build() {
            final var _resultValue = new BgpPolicyContentFingerPrintRuleList();
            _resultValue.dstPortEnd = dstPortEnd;
            _resultValue.dstPortStart = dstPortStart;
            _resultValue.fingerPrintRuleId = fingerPrintRuleId;
            _resultValue.matchAction = matchAction;
            _resultValue.maxPktLen = maxPktLen;
            _resultValue.minPktLen = minPktLen;
            _resultValue.offset = offset;
            _resultValue.payloadBytes = payloadBytes;
            _resultValue.protocol = protocol;
            _resultValue.rateValue = rateValue;
            _resultValue.seqNo = seqNo;
            _resultValue.srcPortEnd = srcPortEnd;
            _resultValue.srcPortStart = srcPortStart;
            return _resultValue;
        }
    }
}
