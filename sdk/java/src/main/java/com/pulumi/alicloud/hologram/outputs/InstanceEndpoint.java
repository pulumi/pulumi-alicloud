// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hologram.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceEndpoint {
    /**
     * @return Some old instances have both AnyTunnel and SingleTunnel enabled. When switching from AnyTunnel to SingleTunnel, the endpoints of both are retained. Therefore, one more field is required to store the Endpoint.
     * 
     */
    private @Nullable String alternativeEndpoints;
    /**
     * @return Whether to turn on the network.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Domain name.
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return The network type.
     * 
     */
    private @Nullable String type;
    /**
     * @return VPC primary key.
     * 
     */
    private @Nullable String vpcId;
    /**
     * @return The vpc instance ID.
     * 
     */
    private @Nullable String vpcInstanceId;
    /**
     * @return The ID of the virtual switch.
     * 
     */
    private @Nullable String vswitchId;

    private InstanceEndpoint() {}
    /**
     * @return Some old instances have both AnyTunnel and SingleTunnel enabled. When switching from AnyTunnel to SingleTunnel, the endpoints of both are retained. Therefore, one more field is required to store the Endpoint.
     * 
     */
    public Optional<String> alternativeEndpoints() {
        return Optional.ofNullable(this.alternativeEndpoints);
    }
    /**
     * @return Whether to turn on the network.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Domain name.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return The network type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return VPC primary key.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return The vpc instance ID.
     * 
     */
    public Optional<String> vpcInstanceId() {
        return Optional.ofNullable(this.vpcInstanceId);
    }
    /**
     * @return The ID of the virtual switch.
     * 
     */
    public Optional<String> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String alternativeEndpoints;
        private @Nullable Boolean enabled;
        private @Nullable String endpoint;
        private @Nullable String type;
        private @Nullable String vpcId;
        private @Nullable String vpcInstanceId;
        private @Nullable String vswitchId;
        public Builder() {}
        public Builder(InstanceEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternativeEndpoints = defaults.alternativeEndpoints;
    	      this.enabled = defaults.enabled;
    	      this.endpoint = defaults.endpoint;
    	      this.type = defaults.type;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcInstanceId = defaults.vpcInstanceId;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder alternativeEndpoints(@Nullable String alternativeEndpoints) {
            this.alternativeEndpoints = alternativeEndpoints;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcInstanceId(@Nullable String vpcInstanceId) {
            this.vpcInstanceId = vpcInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(@Nullable String vswitchId) {
            this.vswitchId = vswitchId;
            return this;
        }
        public InstanceEndpoint build() {
            final var _resultValue = new InstanceEndpoint();
            _resultValue.alternativeEndpoints = alternativeEndpoints;
            _resultValue.enabled = enabled;
            _resultValue.endpoint = endpoint;
            _resultValue.type = type;
            _resultValue.vpcId = vpcId;
            _resultValue.vpcInstanceId = vpcInstanceId;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
