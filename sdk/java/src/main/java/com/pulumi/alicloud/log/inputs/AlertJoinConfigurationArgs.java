// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AlertJoinConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertJoinConfigurationArgs Empty = new AlertJoinConfigurationArgs();

    /**
     * Join condition.
     * 
     */
    @Import(name="condition", required=true)
    private Output<String> condition;

    /**
     * @return Join condition.
     * 
     */
    public Output<String> condition() {
        return this.condition;
    }

    /**
     * Join type, including cross_join, inner_join, left_join, right_join, full_join, left_exclude, right_exclude, concat, no_join.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Join type, including cross_join, inner_join, left_join, right_join, full_join, left_exclude, right_exclude, concat, no_join.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AlertJoinConfigurationArgs() {}

    private AlertJoinConfigurationArgs(AlertJoinConfigurationArgs $) {
        this.condition = $.condition;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertJoinConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertJoinConfigurationArgs $;

        public Builder() {
            $ = new AlertJoinConfigurationArgs();
        }

        public Builder(AlertJoinConfigurationArgs defaults) {
            $ = new AlertJoinConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition Join condition.
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition Join condition.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param type Join type, including cross_join, inner_join, left_join, right_join, full_join, left_exclude, right_exclude, concat, no_join.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Join type, including cross_join, inner_join, left_join, right_join, full_join, left_exclude, right_exclude, concat, no_join.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AlertJoinConfigurationArgs build() {
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("AlertJoinConfigurationArgs", "condition");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AlertJoinConfigurationArgs", "type");
            }
            return $;
        }
    }

}
