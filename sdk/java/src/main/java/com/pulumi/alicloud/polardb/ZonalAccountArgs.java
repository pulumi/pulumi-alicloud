// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZonalAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZonalAccountArgs Empty = new ZonalAccountArgs();

    /**
     * Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     * 
     */
    @Import(name="accountDescription")
    private @Nullable Output<String> accountDescription;

    /**
     * @return Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
     * 
     */
    public Optional<Output<String>> accountDescription() {
        return Optional.ofNullable(this.accountDescription);
    }

    /**
     * Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
     * 
     */
    @Import(name="accountPassword")
    private @Nullable Output<String> accountPassword;

    /**
     * @return Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
     * 
     */
    public Optional<Output<String>> accountPassword() {
        return Optional.ofNullable(this.accountPassword);
    }

    /**
     * Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
     * 
     */
    @Import(name="accountType")
    private @Nullable Output<String> accountType;

    /**
     * @return Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
     * 
     */
    public Optional<Output<String>> accountType() {
        return Optional.ofNullable(this.accountType);
    }

    /**
     * The Id of cluster in which account belongs.
     * 
     */
    @Import(name="dbClusterId", required=true)
    private Output<String> dbClusterId;

    /**
     * @return The Id of cluster in which account belongs.
     * 
     */
    public Output<String> dbClusterId() {
        return this.dbClusterId;
    }

    private ZonalAccountArgs() {}

    private ZonalAccountArgs(ZonalAccountArgs $) {
        this.accountDescription = $.accountDescription;
        this.accountName = $.accountName;
        this.accountPassword = $.accountPassword;
        this.accountType = $.accountType;
        this.dbClusterId = $.dbClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZonalAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZonalAccountArgs $;

        public Builder() {
            $ = new ZonalAccountArgs();
        }

        public Builder(ZonalAccountArgs defaults) {
            $ = new ZonalAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountDescription Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountDescription(@Nullable Output<String> accountDescription) {
            $.accountDescription = accountDescription;
            return this;
        }

        /**
         * @param accountDescription Account description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountDescription(String accountDescription) {
            return accountDescription(Output.of(accountDescription));
        }

        /**
         * @param accountName Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName Operation account requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter and have no more than 16 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param accountPassword Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountPassword(@Nullable Output<String> accountPassword) {
            $.accountPassword = accountPassword;
            return this;
        }

        /**
         * @param accountPassword Operation password. It may consist of letters, digits, or underlines, with a length of 6 to 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder accountPassword(String accountPassword) {
            return accountPassword(Output.of(accountPassword));
        }

        /**
         * @param accountType Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder accountType(@Nullable Output<String> accountType) {
            $.accountType = accountType;
            return this;
        }

        /**
         * @param accountType Account type, Valid values are `Normal`, `Super`, Default to `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder accountType(String accountType) {
            return accountType(Output.of(accountType));
        }

        /**
         * @param dbClusterId The Id of cluster in which account belongs.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterId(Output<String> dbClusterId) {
            $.dbClusterId = dbClusterId;
            return this;
        }

        /**
         * @param dbClusterId The Id of cluster in which account belongs.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterId(String dbClusterId) {
            return dbClusterId(Output.of(dbClusterId));
        }

        public ZonalAccountArgs build() {
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("ZonalAccountArgs", "accountName");
            }
            if ($.dbClusterId == null) {
                throw new MissingRequiredPropertyException("ZonalAccountArgs", "dbClusterId");
            }
            return $;
        }
    }

}
