// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dataworks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DwResourceGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DwResourceGroupArgs Empty = new DwResourceGroupArgs();

    /**
     * Whether to automatically renew. The default value is false.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Whether to automatically renew. The default value is false.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * The VPC ID of the default network resource.
     * 
     */
    @Import(name="defaultVpcId", required=true)
    private Output<String> defaultVpcId;

    /**
     * @return The VPC ID of the default network resource.
     * 
     */
    public Output<String> defaultVpcId() {
        return this.defaultVpcId;
    }

    /**
     * The ID of the vswitch bound to the network resource by default.
     * 
     */
    @Import(name="defaultVswitchId", required=true)
    private Output<String> defaultVswitchId;

    /**
     * @return The ID of the vswitch bound to the network resource by default.
     * 
     */
    public Output<String> defaultVswitchId() {
        return this.defaultVswitchId;
    }

    /**
     * When the payment method is Prepaid, the unit is PaymentDurationUnit.
     * 
     */
    @Import(name="paymentDuration")
    private @Nullable Output<Integer> paymentDuration;

    /**
     * @return When the payment method is Prepaid, the unit is PaymentDurationUnit.
     * 
     */
    public Optional<Output<Integer>> paymentDuration() {
        return Optional.ofNullable(this.paymentDuration);
    }

    /**
     * When the payment method is Prepaid, the payment duration unit, Month is Month, Year is Year, and there is no other optional value.
     * 
     */
    @Import(name="paymentDurationUnit")
    private @Nullable Output<String> paymentDurationUnit;

    /**
     * @return When the payment method is Prepaid, the payment duration unit, Month is Month, Year is Year, and there is no other optional value.
     * 
     */
    public Optional<Output<String>> paymentDurationUnit() {
        return Optional.ofNullable(this.paymentDurationUnit);
    }

    /**
     * The billing type of the resource group. PrePaid is Subscription, and PostPaid is Pay-As-You-Go.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The billing type of the resource group. PrePaid is Subscription, and PostPaid is Pay-As-You-Go.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * Resource Group Comments
     * 
     */
    @Import(name="remark", required=true)
    private Output<String> remark;

    /**
     * @return Resource Group Comments
     * 
     */
    public Output<String> remark() {
        return this.remark;
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Resource group name
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Resource group name
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Package year and package month resource group specifications, unit CU
     * 
     */
    @Import(name="specification")
    private @Nullable Output<Integer> specification;

    /**
     * @return Package year and package month resource group specifications, unit CU
     * 
     */
    public Optional<Output<Integer>> specification() {
        return Optional.ofNullable(this.specification);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DwResourceGroupArgs() {}

    private DwResourceGroupArgs(DwResourceGroupArgs $) {
        this.autoRenew = $.autoRenew;
        this.defaultVpcId = $.defaultVpcId;
        this.defaultVswitchId = $.defaultVswitchId;
        this.paymentDuration = $.paymentDuration;
        this.paymentDurationUnit = $.paymentDurationUnit;
        this.paymentType = $.paymentType;
        this.remark = $.remark;
        this.resourceGroupId = $.resourceGroupId;
        this.resourceGroupName = $.resourceGroupName;
        this.specification = $.specification;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DwResourceGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DwResourceGroupArgs $;

        public Builder() {
            $ = new DwResourceGroupArgs();
        }

        public Builder(DwResourceGroupArgs defaults) {
            $ = new DwResourceGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRenew Whether to automatically renew. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Whether to automatically renew. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param defaultVpcId The VPC ID of the default network resource.
         * 
         * @return builder
         * 
         */
        public Builder defaultVpcId(Output<String> defaultVpcId) {
            $.defaultVpcId = defaultVpcId;
            return this;
        }

        /**
         * @param defaultVpcId The VPC ID of the default network resource.
         * 
         * @return builder
         * 
         */
        public Builder defaultVpcId(String defaultVpcId) {
            return defaultVpcId(Output.of(defaultVpcId));
        }

        /**
         * @param defaultVswitchId The ID of the vswitch bound to the network resource by default.
         * 
         * @return builder
         * 
         */
        public Builder defaultVswitchId(Output<String> defaultVswitchId) {
            $.defaultVswitchId = defaultVswitchId;
            return this;
        }

        /**
         * @param defaultVswitchId The ID of the vswitch bound to the network resource by default.
         * 
         * @return builder
         * 
         */
        public Builder defaultVswitchId(String defaultVswitchId) {
            return defaultVswitchId(Output.of(defaultVswitchId));
        }

        /**
         * @param paymentDuration When the payment method is Prepaid, the unit is PaymentDurationUnit.
         * 
         * @return builder
         * 
         */
        public Builder paymentDuration(@Nullable Output<Integer> paymentDuration) {
            $.paymentDuration = paymentDuration;
            return this;
        }

        /**
         * @param paymentDuration When the payment method is Prepaid, the unit is PaymentDurationUnit.
         * 
         * @return builder
         * 
         */
        public Builder paymentDuration(Integer paymentDuration) {
            return paymentDuration(Output.of(paymentDuration));
        }

        /**
         * @param paymentDurationUnit When the payment method is Prepaid, the payment duration unit, Month is Month, Year is Year, and there is no other optional value.
         * 
         * @return builder
         * 
         */
        public Builder paymentDurationUnit(@Nullable Output<String> paymentDurationUnit) {
            $.paymentDurationUnit = paymentDurationUnit;
            return this;
        }

        /**
         * @param paymentDurationUnit When the payment method is Prepaid, the payment duration unit, Month is Month, Year is Year, and there is no other optional value.
         * 
         * @return builder
         * 
         */
        public Builder paymentDurationUnit(String paymentDurationUnit) {
            return paymentDurationUnit(Output.of(paymentDurationUnit));
        }

        /**
         * @param paymentType The billing type of the resource group. PrePaid is Subscription, and PostPaid is Pay-As-You-Go.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The billing type of the resource group. PrePaid is Subscription, and PostPaid is Pay-As-You-Go.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param remark Resource Group Comments
         * 
         * @return builder
         * 
         */
        public Builder remark(Output<String> remark) {
            $.remark = remark;
            return this;
        }

        /**
         * @param remark Resource Group Comments
         * 
         * @return builder
         * 
         */
        public Builder remark(String remark) {
            return remark(Output.of(remark));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param resourceGroupName Resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Resource group name
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param specification Package year and package month resource group specifications, unit CU
         * 
         * @return builder
         * 
         */
        public Builder specification(@Nullable Output<Integer> specification) {
            $.specification = specification;
            return this;
        }

        /**
         * @param specification Package year and package month resource group specifications, unit CU
         * 
         * @return builder
         * 
         */
        public Builder specification(Integer specification) {
            return specification(Output.of(specification));
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DwResourceGroupArgs build() {
            if ($.defaultVpcId == null) {
                throw new MissingRequiredPropertyException("DwResourceGroupArgs", "defaultVpcId");
            }
            if ($.defaultVswitchId == null) {
                throw new MissingRequiredPropertyException("DwResourceGroupArgs", "defaultVswitchId");
            }
            if ($.remark == null) {
                throw new MissingRequiredPropertyException("DwResourceGroupArgs", "remark");
            }
            return $;
        }
    }

}
