// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteServiceArgs Empty = new RouteServiceArgs();

    /**
     * The region of the network instances that access the cloud services.
     * 
     */
    @Import(name="accessRegionId", required=true)
    private Output<String> accessRegionId;

    /**
     * @return The region of the network instances that access the cloud services.
     * 
     */
    public Output<String> accessRegionId() {
        return this.accessRegionId;
    }

    /**
     * The ID of the CEN instance.
     * 
     */
    @Import(name="cenId", required=true)
    private Output<String> cenId;

    /**
     * @return The ID of the CEN instance.
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }

    /**
     * The description of the cloud service.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the cloud service.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The domain name or IP address of the cloud service.
     * 
     */
    @Import(name="host", required=true)
    private Output<String> host;

    /**
     * @return The domain name or IP address of the cloud service.
     * 
     */
    public Output<String> host() {
        return this.host;
    }

    /**
     * The region of the cloud service.
     * 
     */
    @Import(name="hostRegionId", required=true)
    private Output<String> hostRegionId;

    /**
     * @return The region of the cloud service.
     * 
     */
    public Output<String> hostRegionId() {
        return this.hostRegionId;
    }

    /**
     * The VPC associated with the cloud service.
     * 
     * &gt; **NOTE:** The values of `host_region_id` and `access_region_id` must be consistent.
     * 
     */
    @Import(name="hostVpcId", required=true)
    private Output<String> hostVpcId;

    /**
     * @return The VPC associated with the cloud service.
     * 
     * &gt; **NOTE:** The values of `host_region_id` and `access_region_id` must be consistent.
     * 
     */
    public Output<String> hostVpcId() {
        return this.hostVpcId;
    }

    private RouteServiceArgs() {}

    private RouteServiceArgs(RouteServiceArgs $) {
        this.accessRegionId = $.accessRegionId;
        this.cenId = $.cenId;
        this.description = $.description;
        this.host = $.host;
        this.hostRegionId = $.hostRegionId;
        this.hostVpcId = $.hostVpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteServiceArgs $;

        public Builder() {
            $ = new RouteServiceArgs();
        }

        public Builder(RouteServiceArgs defaults) {
            $ = new RouteServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessRegionId The region of the network instances that access the cloud services.
         * 
         * @return builder
         * 
         */
        public Builder accessRegionId(Output<String> accessRegionId) {
            $.accessRegionId = accessRegionId;
            return this;
        }

        /**
         * @param accessRegionId The region of the network instances that access the cloud services.
         * 
         * @return builder
         * 
         */
        public Builder accessRegionId(String accessRegionId) {
            return accessRegionId(Output.of(accessRegionId));
        }

        /**
         * @param cenId The ID of the CEN instance.
         * 
         * @return builder
         * 
         */
        public Builder cenId(Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the CEN instance.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param description The description of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param host The domain name or IP address of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The domain name or IP address of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param hostRegionId The region of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder hostRegionId(Output<String> hostRegionId) {
            $.hostRegionId = hostRegionId;
            return this;
        }

        /**
         * @param hostRegionId The region of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder hostRegionId(String hostRegionId) {
            return hostRegionId(Output.of(hostRegionId));
        }

        /**
         * @param hostVpcId The VPC associated with the cloud service.
         * 
         * &gt; **NOTE:** The values of `host_region_id` and `access_region_id` must be consistent.
         * 
         * @return builder
         * 
         */
        public Builder hostVpcId(Output<String> hostVpcId) {
            $.hostVpcId = hostVpcId;
            return this;
        }

        /**
         * @param hostVpcId The VPC associated with the cloud service.
         * 
         * &gt; **NOTE:** The values of `host_region_id` and `access_region_id` must be consistent.
         * 
         * @return builder
         * 
         */
        public Builder hostVpcId(String hostVpcId) {
            return hostVpcId(Output.of(hostVpcId));
        }

        public RouteServiceArgs build() {
            if ($.accessRegionId == null) {
                throw new MissingRequiredPropertyException("RouteServiceArgs", "accessRegionId");
            }
            if ($.cenId == null) {
                throw new MissingRequiredPropertyException("RouteServiceArgs", "cenId");
            }
            if ($.host == null) {
                throw new MissingRequiredPropertyException("RouteServiceArgs", "host");
            }
            if ($.hostRegionId == null) {
                throw new MissingRequiredPropertyException("RouteServiceArgs", "hostRegionId");
            }
            if ($.hostVpcId == null) {
                throw new MissingRequiredPropertyException("RouteServiceArgs", "hostVpcId");
            }
            return $;
        }
    }

}
