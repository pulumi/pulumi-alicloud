// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mse;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EngineNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final EngineNamespaceArgs Empty = new EngineNamespaceArgs();

    /**
     * The language type of the returned information. Valid values: `zh`, `en`.
     * 
     */
    @Import(name="acceptLanguage")
    private @Nullable Output<String> acceptLanguage;

    /**
     * @return The language type of the returned information. Valid values: `zh`, `en`.
     * 
     */
    public Optional<Output<String>> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }

    /**
     * The id of the cluster.It is formatted to `mse-xxxxxxxx`.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The id of the cluster.It is formatted to `mse-xxxxxxxx`.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The description of the namespace.
     * 
     * **NOTE:** You must set `cluster_id` or `instance_id` or both.
     * 
     */
    @Import(name="namespaceDesc")
    private @Nullable Output<String> namespaceDesc;

    /**
     * @return The description of the namespace.
     * 
     * **NOTE:** You must set `cluster_id` or `instance_id` or both.
     * 
     */
    public Optional<Output<String>> namespaceDesc() {
        return Optional.ofNullable(this.namespaceDesc);
    }

    /**
     * The id of Namespace.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable Output<String> namespaceId;

    /**
     * @return The id of Namespace.
     * 
     */
    public Optional<Output<String>> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * The name of the Engine Namespace.
     * 
     */
    @Import(name="namespaceShowName", required=true)
    private Output<String> namespaceShowName;

    /**
     * @return The name of the Engine Namespace.
     * 
     */
    public Output<String> namespaceShowName() {
        return this.namespaceShowName;
    }

    private EngineNamespaceArgs() {}

    private EngineNamespaceArgs(EngineNamespaceArgs $) {
        this.acceptLanguage = $.acceptLanguage;
        this.clusterId = $.clusterId;
        this.instanceId = $.instanceId;
        this.namespaceDesc = $.namespaceDesc;
        this.namespaceId = $.namespaceId;
        this.namespaceShowName = $.namespaceShowName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EngineNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EngineNamespaceArgs $;

        public Builder() {
            $ = new EngineNamespaceArgs();
        }

        public Builder(EngineNamespaceArgs defaults) {
            $ = new EngineNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptLanguage The language type of the returned information. Valid values: `zh`, `en`.
         * 
         * @return builder
         * 
         */
        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            $.acceptLanguage = acceptLanguage;
            return this;
        }

        /**
         * @param acceptLanguage The language type of the returned information. Valid values: `zh`, `en`.
         * 
         * @return builder
         * 
         */
        public Builder acceptLanguage(String acceptLanguage) {
            return acceptLanguage(Output.of(acceptLanguage));
        }

        /**
         * @param clusterId The id of the cluster.It is formatted to `mse-xxxxxxxx`.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The id of the cluster.It is formatted to `mse-xxxxxxxx`.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param instanceId The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The instance id of the cluster. It is formatted to `mse-cn-xxxxxxxxxxx`.Available since v1.232.0.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param namespaceDesc The description of the namespace.
         * 
         * **NOTE:** You must set `cluster_id` or `instance_id` or both.
         * 
         * @return builder
         * 
         */
        public Builder namespaceDesc(@Nullable Output<String> namespaceDesc) {
            $.namespaceDesc = namespaceDesc;
            return this;
        }

        /**
         * @param namespaceDesc The description of the namespace.
         * 
         * **NOTE:** You must set `cluster_id` or `instance_id` or both.
         * 
         * @return builder
         * 
         */
        public Builder namespaceDesc(String namespaceDesc) {
            return namespaceDesc(Output.of(namespaceDesc));
        }

        /**
         * @param namespaceId The id of Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The id of Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param namespaceShowName The name of the Engine Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceShowName(Output<String> namespaceShowName) {
            $.namespaceShowName = namespaceShowName;
            return this;
        }

        /**
         * @param namespaceShowName The name of the Engine Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceShowName(String namespaceShowName) {
            return namespaceShowName(Output.of(namespaceShowName));
        }

        public EngineNamespaceArgs build() {
            if ($.namespaceShowName == null) {
                throw new MissingRequiredPropertyException("EngineNamespaceArgs", "namespaceShowName");
            }
            return $;
        }
    }

}
