// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
import com.pulumi.alicloud.arms.inputs.EnvServiceMonitorState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ARMS Env Service Monitor resource. ServiceMonitor for the arms environment.
 * 
 * For information about ARMS Env Service Monitor and how to use it, see [What is Env Service Monitor](https://www.alibabacloud.com/help/en/arms/developer-reference/api-arms-2019-08-08-createenvservicemonitor).
 * 
 * &gt; **NOTE:** Available since v1.212.0.
 * 
 * ## Import
 * 
 * ARMS Env Service Monitor can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:arms/envServiceMonitor:EnvServiceMonitor example &lt;environment_id&gt;:&lt;namespace&gt;:&lt;env_service_monitor_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:arms/envServiceMonitor:EnvServiceMonitor")
public class EnvServiceMonitor extends com.pulumi.resources.CustomResource {
    /**
     * Language environment, default is Chinese zh | en.
     * 
     */
    @Export(name="aliyunLang", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aliyunLang;

    /**
     * @return Language environment, default is Chinese zh | en.
     * 
     */
    public Output<Optional<String>> aliyunLang() {
        return Codegen.optional(this.aliyunLang);
    }
    /**
     * Yaml configuration string.
     * 
     */
    @Export(name="configYaml", refs={String.class}, tree="[0]")
    private Output<String> configYaml;

    /**
     * @return Yaml configuration string.
     * 
     */
    public Output<String> configYaml() {
        return this.configYaml;
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="envServiceMonitorName", refs={String.class}, tree="[0]")
    private Output<String> envServiceMonitorName;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> envServiceMonitorName() {
        return this.envServiceMonitorName;
    }
    /**
     * Environment id.
     * 
     */
    @Export(name="environmentId", refs={String.class}, tree="[0]")
    private Output<String> environmentId;

    /**
     * @return Environment id.
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }
    /**
     * The namespace where the resource is located.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return The namespace where the resource is located.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * Status: run, stop.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Status: run, stop.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EnvServiceMonitor(String name) {
        this(name, EnvServiceMonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EnvServiceMonitor(String name, EnvServiceMonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EnvServiceMonitor(String name, EnvServiceMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:arms/envServiceMonitor:EnvServiceMonitor", name, args == null ? EnvServiceMonitorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EnvServiceMonitor(String name, Output<String> id, @Nullable EnvServiceMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:arms/envServiceMonitor:EnvServiceMonitor", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EnvServiceMonitor get(String name, Output<String> id, @Nullable EnvServiceMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EnvServiceMonitor(name, id, state, options);
    }
}
