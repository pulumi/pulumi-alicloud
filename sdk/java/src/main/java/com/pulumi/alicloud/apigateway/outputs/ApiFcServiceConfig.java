// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiFcServiceConfig {
    /**
     * @return RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
     * 
     */
    private String arnRole;
    /**
     * @return The base url of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    private @Nullable String functionBaseUrl;
    /**
     * @return The function name of function compute service. Required if `function_type` is `FCEvent`.
     * 
     */
    private @Nullable String functionName;
    /**
     * @return The type of function compute service. Supports values of `FCEvent`,`HttpTrigger`. Default value: `FCEvent`.
     * 
     */
    private @Nullable String functionType;
    /**
     * @return The function compute version of function compute service. Supports values of `2.0`, `3.0`. Default value: `2.0`.
     * 
     */
    private @Nullable String functionVersion;
    /**
     * @return The http method of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    private @Nullable String method;
    /**
     * @return Whether to filter path in `function_base_url`. Optional if `function_type` is `HttpTrigger`.
     * 
     */
    private @Nullable Boolean onlyBusinessPath;
    /**
     * @return The path of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    private @Nullable String path;
    /**
     * @return The qualifier of function name of compute service.
     * 
     */
    private @Nullable String qualifier;
    /**
     * @return The region that the function compute service belongs to.
     * 
     */
    private String region;
    /**
     * @return The service name of function compute service. Required if `function_type` is `FCEvent` and `function_version` is `2.0`.
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return Backend service time-out time; unit: millisecond.
     * 
     */
    private Integer timeout;

    private ApiFcServiceConfig() {}
    /**
     * @return RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
     * 
     */
    public String arnRole() {
        return this.arnRole;
    }
    /**
     * @return The base url of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    public Optional<String> functionBaseUrl() {
        return Optional.ofNullable(this.functionBaseUrl);
    }
    /**
     * @return The function name of function compute service. Required if `function_type` is `FCEvent`.
     * 
     */
    public Optional<String> functionName() {
        return Optional.ofNullable(this.functionName);
    }
    /**
     * @return The type of function compute service. Supports values of `FCEvent`,`HttpTrigger`. Default value: `FCEvent`.
     * 
     */
    public Optional<String> functionType() {
        return Optional.ofNullable(this.functionType);
    }
    /**
     * @return The function compute version of function compute service. Supports values of `2.0`, `3.0`. Default value: `2.0`.
     * 
     */
    public Optional<String> functionVersion() {
        return Optional.ofNullable(this.functionVersion);
    }
    /**
     * @return The http method of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    /**
     * @return Whether to filter path in `function_base_url`. Optional if `function_type` is `HttpTrigger`.
     * 
     */
    public Optional<Boolean> onlyBusinessPath() {
        return Optional.ofNullable(this.onlyBusinessPath);
    }
    /**
     * @return The path of function compute service. Required if `function_type` is `HttpTrigger`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return The qualifier of function name of compute service.
     * 
     */
    public Optional<String> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }
    /**
     * @return The region that the function compute service belongs to.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The service name of function compute service. Required if `function_type` is `FCEvent` and `function_version` is `2.0`.
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return Backend service time-out time; unit: millisecond.
     * 
     */
    public Integer timeout() {
        return this.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiFcServiceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arnRole;
        private @Nullable String functionBaseUrl;
        private @Nullable String functionName;
        private @Nullable String functionType;
        private @Nullable String functionVersion;
        private @Nullable String method;
        private @Nullable Boolean onlyBusinessPath;
        private @Nullable String path;
        private @Nullable String qualifier;
        private String region;
        private @Nullable String serviceName;
        private Integer timeout;
        public Builder() {}
        public Builder(ApiFcServiceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arnRole = defaults.arnRole;
    	      this.functionBaseUrl = defaults.functionBaseUrl;
    	      this.functionName = defaults.functionName;
    	      this.functionType = defaults.functionType;
    	      this.functionVersion = defaults.functionVersion;
    	      this.method = defaults.method;
    	      this.onlyBusinessPath = defaults.onlyBusinessPath;
    	      this.path = defaults.path;
    	      this.qualifier = defaults.qualifier;
    	      this.region = defaults.region;
    	      this.serviceName = defaults.serviceName;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder arnRole(String arnRole) {
            if (arnRole == null) {
              throw new MissingRequiredPropertyException("ApiFcServiceConfig", "arnRole");
            }
            this.arnRole = arnRole;
            return this;
        }
        @CustomType.Setter
        public Builder functionBaseUrl(@Nullable String functionBaseUrl) {

            this.functionBaseUrl = functionBaseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder functionName(@Nullable String functionName) {

            this.functionName = functionName;
            return this;
        }
        @CustomType.Setter
        public Builder functionType(@Nullable String functionType) {

            this.functionType = functionType;
            return this;
        }
        @CustomType.Setter
        public Builder functionVersion(@Nullable String functionVersion) {

            this.functionVersion = functionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {

            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder onlyBusinessPath(@Nullable Boolean onlyBusinessPath) {

            this.onlyBusinessPath = onlyBusinessPath;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder qualifier(@Nullable String qualifier) {

            this.qualifier = qualifier;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("ApiFcServiceConfig", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {

            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("ApiFcServiceConfig", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        public ApiFcServiceConfig build() {
            final var _resultValue = new ApiFcServiceConfig();
            _resultValue.arnRole = arnRole;
            _resultValue.functionBaseUrl = functionBaseUrl;
            _resultValue.functionName = functionName;
            _resultValue.functionType = functionType;
            _resultValue.functionVersion = functionVersion;
            _resultValue.method = method;
            _resultValue.onlyBusinessPath = onlyBusinessPath;
            _resultValue.path = path;
            _resultValue.qualifier = qualifier;
            _resultValue.region = region;
            _resultValue.serviceName = serviceName;
            _resultValue.timeout = timeout;
            return _resultValue;
        }
    }
}
