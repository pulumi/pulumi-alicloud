// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity {
    private Integer availableDisk;
    private String dataDiskCategory;
    private Integer totalDisk;

    private GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity() {}
    public Integer availableDisk() {
        return this.availableDisk;
    }
    public String dataDiskCategory() {
        return this.dataDiskCategory;
    }
    public Integer totalDisk() {
        return this.totalDisk;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availableDisk;
        private String dataDiskCategory;
        private Integer totalDisk;
        public Builder() {}
        public Builder(GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableDisk = defaults.availableDisk;
    	      this.dataDiskCategory = defaults.dataDiskCategory;
    	      this.totalDisk = defaults.totalDisk;
        }

        @CustomType.Setter
        public Builder availableDisk(Integer availableDisk) {
            if (availableDisk == null) {
              throw new MissingRequiredPropertyException("GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity", "availableDisk");
            }
            this.availableDisk = availableDisk;
            return this;
        }
        @CustomType.Setter
        public Builder dataDiskCategory(String dataDiskCategory) {
            if (dataDiskCategory == null) {
              throw new MissingRequiredPropertyException("GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity", "dataDiskCategory");
            }
            this.dataDiskCategory = dataDiskCategory;
            return this;
        }
        @CustomType.Setter
        public Builder totalDisk(Integer totalDisk) {
            if (totalDisk == null) {
              throw new MissingRequiredPropertyException("GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity", "totalDisk");
            }
            this.totalDisk = totalDisk;
            return this;
        }
        public GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity build() {
            final var _resultValue = new GetEcsDedicatedHostClustersClusterDedicatedHostClusterCapacityLocalStorageCapacity();
            _resultValue.availableDisk = availableDisk;
            _resultValue.dataDiskCategory = dataDiskCategory;
            _resultValue.totalDisk = totalDisk;
            return _resultValue;
        }
    }
}
