// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewayVpnAttachmentsAttachmentHealthCheckConfig {
    /**
     * @return The destination IP address.
     * 
     */
    private String dip;
    /**
     * @return Specifies whether to enable health checks.
     * 
     */
    private Boolean enable;
    /**
     * @return The interval between two consecutive health checks. Unit: seconds.
     * 
     */
    private Integer interval;
    /**
     * @return Whether to revoke the published route when the health check fails.
     * 
     */
    private String policy;
    /**
     * @return The maximum number of health check retries.
     * 
     */
    private Integer retry;
    /**
     * @return The source IP address.
     * 
     */
    private String sip;
    /**
     * @return The status of the resource.
     * 
     */
    private String status;

    private GetGatewayVpnAttachmentsAttachmentHealthCheckConfig() {}
    /**
     * @return The destination IP address.
     * 
     */
    public String dip() {
        return this.dip;
    }
    /**
     * @return Specifies whether to enable health checks.
     * 
     */
    public Boolean enable() {
        return this.enable;
    }
    /**
     * @return The interval between two consecutive health checks. Unit: seconds.
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return Whether to revoke the published route when the health check fails.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return The maximum number of health check retries.
     * 
     */
    public Integer retry() {
        return this.retry;
    }
    /**
     * @return The source IP address.
     * 
     */
    public String sip() {
        return this.sip;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayVpnAttachmentsAttachmentHealthCheckConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dip;
        private Boolean enable;
        private Integer interval;
        private String policy;
        private Integer retry;
        private String sip;
        private String status;
        public Builder() {}
        public Builder(GetGatewayVpnAttachmentsAttachmentHealthCheckConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dip = defaults.dip;
    	      this.enable = defaults.enable;
    	      this.interval = defaults.interval;
    	      this.policy = defaults.policy;
    	      this.retry = defaults.retry;
    	      this.sip = defaults.sip;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder dip(String dip) {
            if (dip == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "dip");
            }
            this.dip = dip;
            return this;
        }
        @CustomType.Setter
        public Builder enable(Boolean enable) {
            if (enable == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "enable");
            }
            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder retry(Integer retry) {
            if (retry == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "retry");
            }
            this.retry = retry;
            return this;
        }
        @CustomType.Setter
        public Builder sip(String sip) {
            if (sip == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "sip");
            }
            this.sip = sip;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetGatewayVpnAttachmentsAttachmentHealthCheckConfig", "status");
            }
            this.status = status;
            return this;
        }
        public GetGatewayVpnAttachmentsAttachmentHealthCheckConfig build() {
            final var _resultValue = new GetGatewayVpnAttachmentsAttachmentHealthCheckConfig();
            _resultValue.dip = dip;
            _resultValue.enable = enable;
            _resultValue.interval = interval;
            _resultValue.policy = policy;
            _resultValue.retry = retry;
            _resultValue.sip = sip;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
