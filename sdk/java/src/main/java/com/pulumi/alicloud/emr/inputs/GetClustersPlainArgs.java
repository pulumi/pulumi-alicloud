// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emr.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClustersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClustersPlainArgs Empty = new GetClustersPlainArgs();

    /**
     * The cluster name.
     * 
     */
    @Import(name="clusterName")
    private @Nullable String clusterName;

    /**
     * @return The cluster name.
     * 
     */
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The cluster type list.
     * 
     */
    @Import(name="clusterTypeLists")
    private @Nullable List<String> clusterTypeLists;

    /**
     * @return The cluster type list.
     * 
     */
    public Optional<List<String>> clusterTypeLists() {
        return Optional.ofNullable(this.clusterTypeLists);
    }

    /**
     * How to create a cluster. Valid values: `ON-DEMAND`, `MANUAL`.
     * 
     */
    @Import(name="createType")
    private @Nullable String createType;

    /**
     * @return How to create a cluster. Valid values: `ON-DEMAND`, `MANUAL`.
     * 
     */
    public Optional<String> createType() {
        return Optional.ofNullable(this.createType);
    }

    /**
     * The default status.
     * 
     */
    @Import(name="defaultStatus")
    private @Nullable Boolean defaultStatus;

    /**
     * @return The default status.
     * 
     */
    public Optional<Boolean> defaultStatus() {
        return Optional.ofNullable(this.defaultStatus);
    }

    /**
     * The hosting type of the cluster. Valid values: `HALF_MANAGED`, `MANAGED`.
     * 
     */
    @Import(name="depositType")
    private @Nullable String depositType;

    /**
     * @return The hosting type of the cluster. Valid values: `HALF_MANAGED`, `MANAGED`.
     * 
     */
    public Optional<String> depositType() {
        return Optional.ofNullable(this.depositType);
    }

    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    @Import(name="enableDetails")
    private @Nullable Boolean enableDetails;

    /**
     * @return Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of Cluster IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Cluster IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The is desc.
     * 
     */
    @Import(name="isDesc")
    private @Nullable Boolean isDesc;

    /**
     * @return The is desc.
     * 
     */
    public Optional<Boolean> isDesc() {
        return Optional.ofNullable(this.isDesc);
    }

    /**
     * The host type of the cluster. The default is ECS. Valid values: `DOCKER`, `ECS`, `PYHSICAL_MACHINE`, `ECS_FROM_ECM_HOSTPOOL`.
     * 
     */
    @Import(name="machineType")
    private @Nullable String machineType;

    /**
     * @return The host type of the cluster. The default is ECS. Valid values: `DOCKER`, `ECS`, `PYHSICAL_MACHINE`, `ECS_FROM_ECM_HOSTPOOL`.
     * 
     */
    public Optional<String> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * A regex string to filter results by Cluster name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Cluster name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="pageNumber")
    private @Nullable Integer pageNumber;

    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    @Import(name="pageSize")
    private @Nullable Integer pageSize;

    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * The Resource Group ID.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable String resourceGroupId;

    /**
     * @return The Resource Group ID.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status list. Valid values: `ABNORMAL`, `CREATE_FAILED`, `CREATING`, `IDLE`, `RELEASED`, `RELEASE_FAILED`, `RELEASING`, `RUNNING`, `WAIT_FOR_PAY`.
     * 
     */
    @Import(name="statusLists")
    private @Nullable List<String> statusLists;

    /**
     * @return The status list. Valid values: `ABNORMAL`, `CREATE_FAILED`, `CREATING`, `IDLE`, `RELEASED`, `RELEASE_FAILED`, `RELEASING`, `RUNNING`, `WAIT_FOR_PAY`.
     * 
     */
    public Optional<List<String>> statusLists() {
        return Optional.ofNullable(this.statusLists);
    }

    /**
     * The VPC ID.
     * 
     */
    @Import(name="vpcId")
    private @Nullable String vpcId;

    /**
     * @return The VPC ID.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetClustersPlainArgs() {}

    private GetClustersPlainArgs(GetClustersPlainArgs $) {
        this.clusterName = $.clusterName;
        this.clusterTypeLists = $.clusterTypeLists;
        this.createType = $.createType;
        this.defaultStatus = $.defaultStatus;
        this.depositType = $.depositType;
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.isDesc = $.isDesc;
        this.machineType = $.machineType;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
        this.resourceGroupId = $.resourceGroupId;
        this.statusLists = $.statusLists;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClustersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClustersPlainArgs $;

        public Builder() {
            $ = new GetClustersPlainArgs();
        }

        public Builder(GetClustersPlainArgs defaults) {
            $ = new GetClustersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The cluster name.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterTypeLists The cluster type list.
         * 
         * @return builder
         * 
         */
        public Builder clusterTypeLists(@Nullable List<String> clusterTypeLists) {
            $.clusterTypeLists = clusterTypeLists;
            return this;
        }

        /**
         * @param clusterTypeLists The cluster type list.
         * 
         * @return builder
         * 
         */
        public Builder clusterTypeLists(String... clusterTypeLists) {
            return clusterTypeLists(List.of(clusterTypeLists));
        }

        /**
         * @param createType How to create a cluster. Valid values: `ON-DEMAND`, `MANUAL`.
         * 
         * @return builder
         * 
         */
        public Builder createType(@Nullable String createType) {
            $.createType = createType;
            return this;
        }

        /**
         * @param defaultStatus The default status.
         * 
         * @return builder
         * 
         */
        public Builder defaultStatus(@Nullable Boolean defaultStatus) {
            $.defaultStatus = defaultStatus;
            return this;
        }

        /**
         * @param depositType The hosting type of the cluster. Valid values: `HALF_MANAGED`, `MANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder depositType(@Nullable String depositType) {
            $.depositType = depositType;
            return this;
        }

        /**
         * @param enableDetails Default to `false`. Set it to `true` can output more details about resource attributes.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        /**
         * @param ids A list of Cluster IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Cluster IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param isDesc The is desc.
         * 
         * @return builder
         * 
         */
        public Builder isDesc(@Nullable Boolean isDesc) {
            $.isDesc = isDesc;
            return this;
        }

        /**
         * @param machineType The host type of the cluster. The default is ECS. Valid values: `DOCKER`, `ECS`, `PYHSICAL_MACHINE`, `ECS_FROM_ECM_HOSTPOOL`.
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable String machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Cluster name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder pageNumber(@Nullable Integer pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        public Builder pageSize(@Nullable Integer pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        /**
         * @param resourceGroupId The Resource Group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param statusLists The status list. Valid values: `ABNORMAL`, `CREATE_FAILED`, `CREATING`, `IDLE`, `RELEASED`, `RELEASE_FAILED`, `RELEASING`, `RUNNING`, `WAIT_FOR_PAY`.
         * 
         * @return builder
         * 
         */
        public Builder statusLists(@Nullable List<String> statusLists) {
            $.statusLists = statusLists;
            return this;
        }

        /**
         * @param statusLists The status list. Valid values: `ABNORMAL`, `CREATE_FAILED`, `CREATING`, `IDLE`, `RELEASED`, `RELEASE_FAILED`, `RELEASING`, `RUNNING`, `WAIT_FOR_PAY`.
         * 
         * @return builder
         * 
         */
        public Builder statusLists(String... statusLists) {
            return statusLists(List.of(statusLists));
        }

        /**
         * @param vpcId The VPC ID.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetClustersPlainArgs build() {
            return $;
        }
    }

}
