// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHostsHostProtocol {
    /**
     * @return Host fingerprint information, it is possible to uniquely identify a host.
     * 
     */
    private String hostFingerPrint;
    /**
     * @return Host the service port of the RDS.
     * 
     */
    private Integer port;
    /**
     * @return The host uses the protocol name.
     * 
     */
    private String protocolName;

    private GetHostsHostProtocol() {}
    /**
     * @return Host fingerprint information, it is possible to uniquely identify a host.
     * 
     */
    public String hostFingerPrint() {
        return this.hostFingerPrint;
    }
    /**
     * @return Host the service port of the RDS.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The host uses the protocol name.
     * 
     */
    public String protocolName() {
        return this.protocolName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostsHostProtocol defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostFingerPrint;
        private Integer port;
        private String protocolName;
        public Builder() {}
        public Builder(GetHostsHostProtocol defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostFingerPrint = defaults.hostFingerPrint;
    	      this.port = defaults.port;
    	      this.protocolName = defaults.protocolName;
        }

        @CustomType.Setter
        public Builder hostFingerPrint(String hostFingerPrint) {
            if (hostFingerPrint == null) {
              throw new MissingRequiredPropertyException("GetHostsHostProtocol", "hostFingerPrint");
            }
            this.hostFingerPrint = hostFingerPrint;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetHostsHostProtocol", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocolName(String protocolName) {
            if (protocolName == null) {
              throw new MissingRequiredPropertyException("GetHostsHostProtocol", "protocolName");
            }
            this.protocolName = protocolName;
            return this;
        }
        public GetHostsHostProtocol build() {
            final var _resultValue = new GetHostsHostProtocol();
            _resultValue.hostFingerPrint = hostFingerPrint;
            _resultValue.port = port;
            _resultValue.protocolName = protocolName;
            return _resultValue;
        }
    }
}
