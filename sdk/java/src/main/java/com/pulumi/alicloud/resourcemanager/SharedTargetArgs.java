// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SharedTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SharedTargetArgs Empty = new SharedTargetArgs();

    /**
     * The ID of the resource share.
     * 
     */
    @Import(name="resourceShareId", required=true)
    private Output<String> resourceShareId;

    /**
     * @return The ID of the resource share.
     * 
     */
    public Output<String> resourceShareId() {
        return this.resourceShareId;
    }

    /**
     * The ID of the principal.
     * 
     */
    @Import(name="targetId", required=true)
    private Output<String> targetId;

    /**
     * @return The ID of the principal.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }

    private SharedTargetArgs() {}

    private SharedTargetArgs(SharedTargetArgs $) {
        this.resourceShareId = $.resourceShareId;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedTargetArgs $;

        public Builder() {
            $ = new SharedTargetArgs();
        }

        public Builder(SharedTargetArgs defaults) {
            $ = new SharedTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceShareId The ID of the resource share.
         * 
         * @return builder
         * 
         */
        public Builder resourceShareId(Output<String> resourceShareId) {
            $.resourceShareId = resourceShareId;
            return this;
        }

        /**
         * @param resourceShareId The ID of the resource share.
         * 
         * @return builder
         * 
         */
        public Builder resourceShareId(String resourceShareId) {
            return resourceShareId(Output.of(resourceShareId));
        }

        /**
         * @param targetId The ID of the principal.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The ID of the principal.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public SharedTargetArgs build() {
            if ($.resourceShareId == null) {
                throw new MissingRequiredPropertyException("SharedTargetArgs", "resourceShareId");
            }
            if ($.targetId == null) {
                throw new MissingRequiredPropertyException("SharedTargetArgs", "targetId");
            }
            return $;
        }
    }

}
