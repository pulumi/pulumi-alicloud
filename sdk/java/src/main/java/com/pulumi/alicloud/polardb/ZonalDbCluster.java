// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.polardb.ZonalDbClusterArgs;
import com.pulumi.alicloud.polardb.inputs.ZonalDbClusterState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an PolarDB zonal cluster resource. An PolarDB zonal cluster is an isolated database
 * environment in the cloud. An PolarDB zonal cluster can contain multiple user-created
 * databases.
 * 
 * &gt; **NOTE:** Available since v1.66.0.
 * 
 * ## Example Usage
 * 
 * Create a PolarDB MySQL zonal cluster
 * 
 * ## Import
 * 
 * PolarDB zonal cluster can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:polardb/zonalDbCluster:ZonalDbCluster example pc-abc12345678
 * ```
 * 
 */
@ResourceType(type="alicloud:polardb/zonalDbCluster:ZonalDbCluster")
public class ZonalDbCluster extends com.pulumi.resources.CustomResource {
    /**
     * Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     * 
     */
    @Export(name="autoRenewPeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoRenewPeriod;

    /**
     * @return Auto-renewal period of an cluster, in the unit of the month. It is valid when payType is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     * 
     */
    public Output<Optional<Integer>> autoRenewPeriod() {
        return Codegen.optional(this.autoRenewPeriod);
    }
    /**
     * PolarDB zonal cluster latest version.
     * 
     */
    @Export(name="clusterLatestVersion", refs={String.class}, tree="[0]")
    private Output<String> clusterLatestVersion;

    /**
     * @return PolarDB zonal cluster latest version.
     * 
     */
    public Output<String> clusterLatestVersion() {
        return this.clusterLatestVersion;
    }
    /**
     * current DB Cluster revision Version.
     * 
     */
    @Export(name="clusterVersion", refs={String.class}, tree="[0]")
    private Output<String> clusterVersion;

    /**
     * @return current DB Cluster revision Version.
     * 
     */
    public Output<String> clusterVersion() {
        return this.clusterVersion;
    }
    /**
     * PolarDB zonal cluster creation time.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return PolarDB zonal cluster creation time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The edition of the PolarDB service. Valid values are `SENormal`.
     * 
     */
    @Export(name="creationCategory", refs={String.class}, tree="[0]")
    private Output<String> creationCategory;

    /**
     * @return The edition of the PolarDB service. Valid values are `SENormal`.
     * 
     */
    public Output<String> creationCategory() {
        return this.creationCategory;
    }
    /**
     * Cache of the relationship between node key and node ID for PolarDB zonal Cluster
     * 
     */
    @Export(name="dbClusterNodesAttributes", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> dbClusterNodesAttributes;

    /**
     * @return Cache of the relationship between node key and node ID for PolarDB zonal Cluster
     * 
     */
    public Output<Map<String,String>> dbClusterNodesAttributes() {
        return this.dbClusterNodesAttributes;
    }
    /**
     * Map of node needs to be created after DB cluster was launched.
     * 
     */
    @Export(name="dbClusterNodesConfigs", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> dbClusterNodesConfigs;

    /**
     * @return Map of node needs to be created after DB cluster was launched.
     * 
     */
    public Output<Map<String,String>> dbClusterNodesConfigs() {
        return this.dbClusterNodesConfigs;
    }
    /**
     * Cache of node ID for PolarDB zonal Cluster
     * 
     */
    @Export(name="dbClusterNodesIds", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> dbClusterNodesIds;

    /**
     * @return Cache of node ID for PolarDB zonal Cluster
     * 
     */
    public Output<Map<String,String>> dbClusterNodesIds() {
        return this.dbClusterNodesIds;
    }
    /**
     * Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
     * 
     */
    @Export(name="dbMinorVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbMinorVersion;

    /**
     * @return Database minor version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBMinorVersion`. This parameter takes effect only when `dbType` is MySQL and `dbVersion` is 8.0.
     * 
     */
    public Output<Optional<String>> dbMinorVersion() {
        return Codegen.optional(this.dbMinorVersion);
    }
    /**
     * The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
     * 
     */
    @Export(name="dbNodeClass", refs={String.class}, tree="[0]")
    private Output<String> dbNodeClass;

    /**
     * @return The dbNodeClass of cluster node.Only effective when the cluster is created for the first time. After the cluster is started, the cluster specification is maintained through the node class.
     * 
     */
    public Output<String> dbNodeClass() {
        return this.dbNodeClass;
    }
    /**
     * Database type. Value options: MySQL, Oracle, PostgreSQL.
     * 
     */
    @Export(name="dbType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbType;

    /**
     * @return Database type. Value options: MySQL, Oracle, PostgreSQL.
     * 
     */
    public Output<Optional<String>> dbType() {
        return Codegen.optional(this.dbType);
    }
    /**
     * Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
     * 
     */
    @Export(name="dbVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbVersion;

    /**
     * @return Database version. Value options can refer to the latest docs [CreateDBCluster](https://www.alibabacloud.com/help/en/polardb/latest/createdbcluster-1) `DBVersion`.
     * 
     */
    public Output<Optional<String>> dbVersion() {
        return Codegen.optional(this.dbVersion);
    }
    /**
     * The description of cluster.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of cluster.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The Zone to launch the DB cluster.
     * 
     */
    @Export(name="ensRegionId", refs={String.class}, tree="[0]")
    private Output<String> ensRegionId;

    /**
     * @return The Zone to launch the DB cluster.
     * 
     */
    public Output<String> ensRegionId() {
        return this.ensRegionId;
    }
    /**
     * Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     * 
     */
    @Export(name="payType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> payType;

    /**
     * @return Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     * 
     */
    public Output<Optional<String>> payType() {
        return Codegen.optional(this.payType);
    }
    /**
     * PolarDB zonal cluster region
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return PolarDB zonal cluster region
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     * 
     */
    @Export(name="renewalStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> renewalStatus;

    /**
     * @return Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     * 
     */
    public Output<Optional<String>> renewalStatus() {
        return Codegen.optional(this.renewalStatus);
    }
    /**
     * The billing method of the storage. Valid values `Prepaid`.
     * 
     */
    @Export(name="storagePayType", refs={String.class}, tree="[0]")
    private Output<String> storagePayType;

    /**
     * @return The billing method of the storage. Valid values `Prepaid`.
     * 
     */
    public Output<String> storagePayType() {
        return this.storagePayType;
    }
    /**
     * Storage space charged by space (monthly package). Unit: GB.
     * &gt; **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
     * 
     */
    @Export(name="storageSpace", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> storageSpace;

    /**
     * @return Storage space charged by space (monthly package). Unit: GB.
     * &gt; **NOTE:**  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when payType are `PrePaid` ,`PostPaid`.
     * 
     */
    public Output<Optional<Integer>> storageSpace() {
        return Codegen.optional(this.storageSpace);
    }
    /**
     * The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageType;

    /**
     * @return The storage type of the cluster. Valid values are `ESSDPL1`, `ESSDPL0`.
     * 
     */
    public Output<Optional<String>> storageType() {
        return Codegen.optional(this.storageType);
    }
    /**
     * The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
     * 
     */
    @Export(name="targetMinorVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetMinorVersion;

    /**
     * @return The Version Code of the target version, whose parameter values can be obtained from the [DescribeDBClusterVersionZonal](https://www.alibabacloud.com/help/en/polardb/api-polardb-2017-08-01-describedbclusterversionzonal) interface.
     * 
     */
    public Output<Optional<String>> targetMinorVersion() {
        return Codegen.optional(this.targetMinorVersion);
    }
    /**
     * The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
     * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
     * 
     */
    @Export(name="usedTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> usedTime;

    /**
     * @return The duration that you will buy DB cluster (in month). It is valid when payType is `PrePaid`. Valid values: [1~9], 12, 24, 36.
     * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to `PostPaid`. Once effect, it will not be modified that means running `pulumi up` will not affect the resource.
     * 
     */
    public Output<Optional<Integer>> usedTime() {
        return Codegen.optional(this.usedTime);
    }
    /**
     * The id of the ENS VPC.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The id of the ENS VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ENS virtual switch ID to launch DB instances in one VPC.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output<String> vswitchId;

    /**
     * @return The ENS virtual switch ID to launch DB instances in one VPC.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ZonalDbCluster(java.lang.String name) {
        this(name, ZonalDbClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ZonalDbCluster(java.lang.String name, ZonalDbClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ZonalDbCluster(java.lang.String name, ZonalDbClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ZonalDbCluster(java.lang.String name, Output<java.lang.String> id, @Nullable ZonalDbClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:polardb/zonalDbCluster:ZonalDbCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ZonalDbClusterArgs makeArgs(ZonalDbClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ZonalDbClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ZonalDbCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ZonalDbClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ZonalDbCluster(name, id, state, options);
    }
}
