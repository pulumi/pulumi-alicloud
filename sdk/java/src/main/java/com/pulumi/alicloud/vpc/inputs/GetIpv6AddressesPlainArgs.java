// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpv6AddressesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpv6AddressesPlainArgs Empty = new GetIpv6AddressesPlainArgs();

    /**
     * The ID of the instance that is assigned the IPv6 address.
     * 
     */
    @Import(name="associatedInstanceId")
    private @Nullable String associatedInstanceId;

    /**
     * @return The ID of the instance that is assigned the IPv6 address.
     * 
     */
    public Optional<String> associatedInstanceId() {
        return Optional.ofNullable(this.associatedInstanceId);
    }

    @Import(name="ids")
    private @Nullable List<String> ids;

    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the IPv6 address. Valid values:`Pending` or `Available`.
     * - `Pending`: The IPv6 address is being configured.
     * - `Available`: The IPv6 address is available.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the IPv6 address. Valid values:`Pending` or `Available`.
     * - `Pending`: The IPv6 address is being configured.
     * - `Available`: The IPv6 address is available.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the VPC to which the IPv6 address belongs.
     * 
     */
    @Import(name="vpcId")
    private @Nullable String vpcId;

    /**
     * @return The ID of the VPC to which the IPv6 address belongs.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of the vSwitch to which the IPv6 address belongs.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable String vswitchId;

    /**
     * @return The ID of the vSwitch to which the IPv6 address belongs.
     * 
     */
    public Optional<String> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private GetIpv6AddressesPlainArgs() {}

    private GetIpv6AddressesPlainArgs(GetIpv6AddressesPlainArgs $) {
        this.associatedInstanceId = $.associatedInstanceId;
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpv6AddressesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpv6AddressesPlainArgs $;

        public Builder() {
            $ = new GetIpv6AddressesPlainArgs();
        }

        public Builder(GetIpv6AddressesPlainArgs defaults) {
            $ = new GetIpv6AddressesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associatedInstanceId The ID of the instance that is assigned the IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder associatedInstanceId(@Nullable String associatedInstanceId) {
            $.associatedInstanceId = associatedInstanceId;
            return this;
        }

        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The status of the IPv6 address. Valid values:`Pending` or `Available`.
         * - `Pending`: The IPv6 address is being configured.
         * - `Available`: The IPv6 address is available.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC to which the IPv6 address belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vswitchId The ID of the vSwitch to which the IPv6 address belongs.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable String vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        public GetIpv6AddressesPlainArgs build() {
            return $;
        }
    }

}
