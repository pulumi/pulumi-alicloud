// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.adb.DBClusterLakeVersionArgs;
import com.pulumi.alicloud.adb.inputs.DBClusterLakeVersionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
 * 
 * For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/developer-reference/api-adb-2021-12-01-createdbcluster).
 * 
 * &gt; **NOTE:** Available since v1.190.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.adb.AdbFunctions;
 * import com.pulumi.alicloud.adb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.VpcFunctions;
 * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
 * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersion;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = AdbFunctions.getZones();
 * 
 *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
 *             .nameRegex("^default-NODELETING$")
 *             .build());
 * 
 *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
 *             .vpcId(defaultGetNetworks.applyValue(getNetworksResult -> getNetworksResult.ids()[0]))
 *             .zoneId(default_.ids()[0])
 *             .build());
 * 
 *         var defaultDBClusterLakeVersion = new DBClusterLakeVersion("defaultDBClusterLakeVersion", DBClusterLakeVersionArgs.builder()
 *             .dbClusterVersion("5.0")
 *             .vpcId(defaultGetNetworks.applyValue(getNetworksResult -> getNetworksResult.ids()[0]))
 *             .vswitchId(defaultGetSwitches.applyValue(getSwitchesResult -> getSwitchesResult.ids()[0]))
 *             .zoneId(default_.ids()[0])
 *             .computeResource("16ACU")
 *             .storageResource("0ACU")
 *             .paymentType("PayAsYouGo")
 *             .enableDefaultResourceGroup(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion")
public class DBClusterLakeVersion extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the backup set that you want to use to restore data.
     * 
     */
    @Export(name="backupSetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backupSetId;

    /**
     * @return The ID of the backup set that you want to use to restore data.
     * 
     */
    public Output<Optional<String>> backupSetId() {
        return Codegen.optional(this.backupSetId);
    }
    /**
     * The name of the service.
     * 
     */
    @Export(name="commodityCode", refs={String.class}, tree="[0]")
    private Output<String> commodityCode;

    /**
     * @return The name of the service.
     * 
     */
    public Output<String> commodityCode() {
        return this.commodityCode;
    }
    /**
     * The computing resources of the cluster.
     * 
     */
    @Export(name="computeResource", refs={String.class}, tree="[0]")
    private Output<String> computeResource;

    /**
     * @return The computing resources of the cluster.
     * 
     */
    public Output<String> computeResource() {
        return this.computeResource;
    }
    /**
     * The endpoint of the cluster.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output<String> connectionString;

    /**
     * @return The endpoint of the cluster.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * The createTime of the cluster.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The createTime of the cluster.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The description of the cluster.
     * 
     */
    @Export(name="dbClusterDescription", refs={String.class}, tree="[0]")
    private Output<String> dbClusterDescription;

    /**
     * @return The description of the cluster.
     * 
     */
    public Output<String> dbClusterDescription() {
        return this.dbClusterDescription;
    }
    /**
     * The version of the cluster. Valid values: `5.0`.
     * 
     */
    @Export(name="dbClusterVersion", refs={String.class}, tree="[0]")
    private Output<String> dbClusterVersion;

    /**
     * @return The version of the cluster. Valid values: `5.0`.
     * 
     */
    public Output<String> dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * Specifies whether to enable disk encryption. Valid values: `true`, `false`.
     * 
     */
    @Export(name="diskEncryption", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> diskEncryption;

    /**
     * @return Specifies whether to enable disk encryption. Valid values: `true`, `false`.
     * 
     */
    public Output<Optional<Boolean>> diskEncryption() {
        return Codegen.optional(this.diskEncryption);
    }
    /**
     * Whether to enable default allocation of resources to user_default resource groups.
     * 
     */
    @Export(name="enableDefaultResourceGroup", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableDefaultResourceGroup;

    /**
     * @return Whether to enable default allocation of resources to user_default resource groups.
     * 
     */
    public Output<Optional<Boolean>> enableDefaultResourceGroup() {
        return Codegen.optional(this.enableDefaultResourceGroup);
    }
    /**
     * Specifies whether to enable SSL encryption. Valid values: `true`, `false`.
     * 
     */
    @Export(name="enableSsl", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableSsl;

    /**
     * @return Specifies whether to enable SSL encryption. Valid values: `true`, `false`.
     * 
     */
    public Output<Optional<Boolean>> enableSsl() {
        return Codegen.optional(this.enableSsl);
    }
    /**
     * The engine of the database.
     * 
     */
    @Export(name="engine", refs={String.class}, tree="[0]")
    private Output<String> engine;

    /**
     * @return The engine of the database.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * The engine version of the database.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return The engine version of the database.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * The time when the cluster expires.
     * 
     */
    @Export(name="expireTime", refs={String.class}, tree="[0]")
    private Output<String> expireTime;

    /**
     * @return The time when the cluster expires.
     * 
     */
    public Output<String> expireTime() {
        return this.expireTime;
    }
    /**
     * Indicates whether the cluster has expired.
     * 
     */
    @Export(name="expired", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> expired;

    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    public Output<Boolean> expired() {
        return this.expired;
    }
    /**
     * The ID of the key that is used to encrypt disk data. `kms_id` is valid only when `disk_encryption` is set to `true`.
     * 
     */
    @Export(name="kmsId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsId;

    /**
     * @return The ID of the key that is used to encrypt disk data. `kms_id` is valid only when `disk_encryption` is set to `true`.
     * 
     */
    public Output<Optional<String>> kmsId() {
        return Codegen.optional(this.kmsId);
    }
    /**
     * The lock mode of the cluster.
     * 
     */
    @Export(name="lockMode", refs={String.class}, tree="[0]")
    private Output<String> lockMode;

    /**
     * @return The lock mode of the cluster.
     * 
     */
    public Output<String> lockMode() {
        return this.lockMode;
    }
    /**
     * The reason why the cluster is locked.
     * 
     */
    @Export(name="lockReason", refs={String.class}, tree="[0]")
    private Output<String> lockReason;

    /**
     * @return The reason why the cluster is locked.
     * 
     */
    public Output<String> lockReason() {
        return this.lockReason;
    }
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`. **NOTE:** From version 1.245.0, `payment_type` can be set to `Subscription`.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource. Valid values: `PayAsYouGo`, `Subscription`. **NOTE:** From version 1.245.0, `payment_type` can be set to `Subscription`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The subscription period of the subscription cluster. Valid values: `1` to `9`, `12`, `24`, `36`.
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The subscription period of the subscription cluster. Valid values: `1` to `9`, `12`, `24`, `36`.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The port that is used to access the cluster.
     * 
     */
    @Export(name="port", refs={String.class}, tree="[0]")
    private Output<String> port;

    /**
     * @return The port that is used to access the cluster.
     * 
     */
    public Output<String> port() {
        return this.port;
    }
    /**
     * The product form of the cluster. Valid values:
     * - `IntegrationForm`: Integrated.
     * - `LegacyForm`: Data Lakehouse Edition.
     * 
     */
    @Export(name="productForm", refs={String.class}, tree="[0]")
    private Output<String> productForm;

    /**
     * @return The product form of the cluster. Valid values:
     * - `IntegrationForm`: Integrated.
     * - `LegacyForm`: Data Lakehouse Edition.
     * 
     */
    public Output<String> productForm() {
        return this.productForm;
    }
    /**
     * The edition of the cluster. Valid values:
     * - `BasicVersion`: Basic Edition.
     * - `EnterpriseVersion`: Enterprise Edition.
     * &gt; **NOTE:** `product_version` must be specified only when `product_form` is set to `IntegrationForm`.
     * 
     */
    @Export(name="productVersion", refs={String.class}, tree="[0]")
    private Output<String> productVersion;

    /**
     * @return The edition of the cluster. Valid values:
     * - `BasicVersion`: Basic Edition.
     * - `EnterpriseVersion`: Enterprise Edition.
     * &gt; **NOTE:** `product_version` must be specified only when `product_form` is set to `IntegrationForm`.
     * 
     */
    public Output<String> productVersion() {
        return this.productVersion;
    }
    /**
     * The number of reserved resource nodes.
     * 
     */
    @Export(name="reservedNodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> reservedNodeCount;

    /**
     * @return The number of reserved resource nodes.
     * 
     */
    public Output<Integer> reservedNodeCount() {
        return this.reservedNodeCount;
    }
    /**
     * The specifications of reserved resource nodes.
     * 
     */
    @Export(name="reservedNodeSize", refs={String.class}, tree="[0]")
    private Output<String> reservedNodeSize;

    /**
     * @return The specifications of reserved resource nodes.
     * 
     */
    public Output<String> reservedNodeSize() {
        return this.reservedNodeSize;
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The point in time to which you want to restore data from the backup set.
     * 
     */
    @Export(name="restoreToTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restoreToTime;

    /**
     * @return The point in time to which you want to restore data from the backup set.
     * 
     */
    public Output<Optional<String>> restoreToTime() {
        return Codegen.optional(this.restoreToTime);
    }
    /**
     * The method that you want to use to restore data. Valid values:
     * 
     */
    @Export(name="restoreType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restoreType;

    /**
     * @return The method that you want to use to restore data. Valid values:
     * 
     */
    public Output<Optional<String>> restoreType() {
        return Codegen.optional(this.restoreType);
    }
    /**
     * The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     * 
     */
    @Export(name="securityIps", refs={String.class}, tree="[0]")
    private Output<String> securityIps;

    /**
     * @return The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
     * - IP addresses, such as 10.23.XX.XX.
     * - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
     * 
     */
    public Output<String> securityIps() {
        return this.securityIps;
    }
    /**
     * The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     * 
     */
    @Export(name="sourceDbClusterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceDbClusterId;

    /**
     * @return The ID of the source AnalyticDB for MySQL Data Warehouse Edition cluster.
     * 
     */
    public Output<Optional<String>> sourceDbClusterId() {
        return Codegen.optional(this.sourceDbClusterId);
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The storage resources of the cluster.
     * 
     */
    @Export(name="storageResource", refs={String.class}, tree="[0]")
    private Output<String> storageResource;

    /**
     * @return The storage resources of the cluster.
     * 
     */
    public Output<String> storageResource() {
        return this.storageResource;
    }
    /**
     * The vpc ID of the resource.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The vpc ID of the resource.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of the vSwitch.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output<String> vswitchId;

    /**
     * @return The ID of the vSwitch.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }
    /**
     * The zone ID of the resource.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone ID of the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DBClusterLakeVersion(java.lang.String name) {
        this(name, DBClusterLakeVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DBClusterLakeVersion(java.lang.String name, DBClusterLakeVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DBClusterLakeVersion(java.lang.String name, DBClusterLakeVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DBClusterLakeVersion(java.lang.String name, Output<java.lang.String> id, @Nullable DBClusterLakeVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/dBClusterLakeVersion:DBClusterLakeVersion", name, state, makeResourceOptions(options, id), false);
    }

    private static DBClusterLakeVersionArgs makeArgs(DBClusterLakeVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DBClusterLakeVersionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DBClusterLakeVersion get(java.lang.String name, Output<java.lang.String> id, @Nullable DBClusterLakeVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DBClusterLakeVersion(name, id, state, options);
    }
}
