// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rds.RdsUpgradeDbInstanceArgs;
import com.pulumi.alicloud.rds.inputs.RdsUpgradeDbInstanceState;
import com.pulumi.alicloud.rds.outputs.RdsUpgradeDbInstanceParameter;
import com.pulumi.alicloud.rds.outputs.RdsUpgradeDbInstancePgHbaConf;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a RDS Upgrade DB Instance resource.
 * 
 * For information about RDS Upgrade DB Instance and how to use it, see [What is ApsaraDB for RDS](https://www.alibabacloud.com/help/en/doc-detail/26092.htm).
 * 
 * &gt; **NOTE:** Available in v1.153.0+.
 * 
 * ## Example Usage
 * ### Create a RDS MySQL upgrade instance
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.rds.Instance;
 * import com.pulumi.alicloud.rds.InstanceArgs;
 * import com.pulumi.alicloud.rds.RdsUpgradeDbInstance;
 * import com.pulumi.alicloud.rds.RdsUpgradeDbInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testaccdbinstance&#34;);
 *         final var creation = config.get(&#34;creation&#34;).orElse(&#34;Rds&#34;);
 *         final var exampleZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(creation)
 *             .build());
 * 
 *         var exampleNetwork = new Network(&#34;exampleNetwork&#34;, NetworkArgs.builder()        
 *             .cidrBlock(&#34;172.16.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSwitch = new Switch(&#34;exampleSwitch&#34;, SwitchArgs.builder()        
 *             .vpcId(exampleNetwork.id())
 *             .cidrBlock(&#34;172.16.0.0/24&#34;)
 *             .zoneId(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var exampleInstance = new Instance(&#34;exampleInstance&#34;, InstanceArgs.builder()        
 *             .engine(&#34;PostgreSQL&#34;)
 *             .engineVersion(&#34;12.0&#34;)
 *             .instanceType(&#34;pg.n2.small.2c&#34;)
 *             .instanceStorage(&#34;20&#34;)
 *             .instanceChargeType(&#34;Postpaid&#34;)
 *             .instanceName(name)
 *             .vswitchId(exampleSwitch.id())
 *             .build());
 * 
 *         var exampleRdsUpgradeDbInstance = new RdsUpgradeDbInstance(&#34;exampleRdsUpgradeDbInstance&#34;, RdsUpgradeDbInstanceArgs.builder()        
 *             .sourceDbInstanceId(exampleInstance.id())
 *             .targetMajorVersion(&#34;13.0&#34;)
 *             .dbInstanceClass(&#34;pg.n2.small.2c&#34;)
 *             .dbInstanceStorage(&#34;20&#34;)
 *             .instanceNetworkType(&#34;VPC&#34;)
 *             .dbInstanceStorageType(&#34;cloud_ssd&#34;)
 *             .collectStatMode(&#34;After&#34;)
 *             .switchOver(&#34;false&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .dbInstanceDescription(name)
 *             .vswitchId(exampleSwitch.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * RDS Upgrade DB Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:rds/rdsUpgradeDbInstance:RdsUpgradeDbInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:rds/rdsUpgradeDbInstance:RdsUpgradeDbInstance")
public class RdsUpgradeDbInstance extends com.pulumi.resources.CustomResource {
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. This parameter indicates the authentication method. It is allowed only when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    @Export(name="acl", type=String.class, parameters={})
    private Output<String> acl;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. This parameter indicates the authentication method. It is allowed only when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    public Output<String> acl() {
        return this.acl;
    }
    /**
     * How to upgrade the minor version of the instance. Valid values:
     * * **Auto**: automatically upgrade the minor version.
     * * **Manual**: It is not automatically upgraded. It is only mandatory when the current version is offline.
     * 
     */
    @Export(name="autoUpgradeMinorVersion", type=String.class, parameters={})
    private Output<String> autoUpgradeMinorVersion;

    /**
     * @return How to upgrade the minor version of the instance. Valid values:
     * * **Auto**: automatically upgrade the minor version.
     * * **Manual**: It is not automatically upgraded. It is only mandatory when the current version is offline.
     * 
     */
    public Output<String> autoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion;
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the certificate type. When the value of ssl_action is Open, the default value of this parameter is aliyun. Value range:
     * * **aliyun**: using cloud certificates.
     * * **custom**: use a custom certificate. Valid values: `aliyun`, `custom`.
     * 
     */
    @Export(name="caType", type=String.class, parameters={})
    private Output<String> caType;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the certificate type. When the value of ssl_action is Open, the default value of this parameter is aliyun. Value range:
     * * **aliyun**: using cloud certificates.
     * * **custom**: use a custom certificate. Valid values: `aliyun`, `custom`.
     * 
     */
    public Output<String> caType() {
        return this.caType;
    }
    /**
     * The file that contains the certificate used for TDE.
     * 
     */
    @Export(name="certificate", type=String.class, parameters={})
    private Output</* @Nullable */ String> certificate;

    /**
     * @return The file that contains the certificate used for TDE.
     * 
     */
    public Output<Optional<String>> certificate() {
        return Codegen.optional(this.certificate);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the public key of the client certification authority. If the value of client_ca_enabled is 1, this parameter must be configured.
     * 
     */
    @Export(name="clientCaCert", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientCaCert;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the public key of the client certification authority. If the value of client_ca_enabled is 1, this parameter must be configured.
     * 
     */
    public Output<Optional<String>> clientCaCert() {
        return Codegen.optional(this.clientCaCert);
    }
    /**
     * The client ca enabled.
     * 
     */
    @Export(name="clientCaEnabled", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> clientCaEnabled;

    /**
     * @return The client ca enabled.
     * 
     */
    public Output<Optional<Integer>> clientCaEnabled() {
        return Codegen.optional(this.clientCaEnabled);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version, which indicates that the client revokes the certificate file. If the value of client_crl_enabled is 1, this parameter must be configured.
     * 
     */
    @Export(name="clientCertRevocationList", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientCertRevocationList;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version, which indicates that the client revokes the certificate file. If the value of client_crl_enabled is 1, this parameter must be configured.
     * 
     */
    public Output<Optional<String>> clientCertRevocationList() {
        return Codegen.optional(this.clientCertRevocationList);
    }
    /**
     * The client crl enabled.
     * 
     */
    @Export(name="clientCrlEnabled", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> clientCrlEnabled;

    /**
     * @return The client crl enabled.
     * 
     */
    public Output<Optional<Integer>> clientCrlEnabled() {
        return Codegen.optional(this.clientCrlEnabled);
    }
    /**
     * The time at which ApsaraDB RDS collects the statistics of the new instance.
     * * **Before**: ApsaraDB RDS collects the statistics of the new instance before the switchover to ensure service stability. If the original instance contains a large amount of data, the upgrade may require a long period of time.
     * * **After**: ApsaraDB RDS collects the statistics of the new instance after the switchover to accelerate the upgrade. If you access tables for which no statistics are generated, the query plans that you specify may be inaccurately executed. In addition, your database service may be unavailable during peak hours.
     * 
     */
    @Export(name="collectStatMode", type=String.class, parameters={})
    private Output<String> collectStatMode;

    /**
     * @return The time at which ApsaraDB RDS collects the statistics of the new instance.
     * * **Before**: ApsaraDB RDS collects the statistics of the new instance before the switchover to ensure service stability. If the original instance contains a large amount of data, the upgrade may require a long period of time.
     * * **After**: ApsaraDB RDS collects the statistics of the new instance after the switchover to accelerate the upgrade. If you access tables for which no statistics are generated, the query plans that you specify may be inaccurately executed. In addition, your database service may be unavailable during peak hours.
     * 
     */
    public Output<String> collectStatMode() {
        return this.collectStatMode;
    }
    /**
     * The database connection address.
     * 
     */
    @Export(name="connectionString", type=String.class, parameters={})
    private Output<String> connectionString;

    /**
     * @return The database connection address.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * The connection string prefix.
     * 
     */
    @Export(name="connectionStringPrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> connectionStringPrefix;

    /**
     * @return The connection string prefix.
     * 
     */
    public Output<Optional<String>> connectionStringPrefix() {
        return Codegen.optional(this.connectionStringPrefix);
    }
    /**
     * The instance type of the new instance. For information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/doc-detail/26312.htm).
     * 
     */
    @Export(name="dbInstanceClass", type=String.class, parameters={})
    private Output<String> dbInstanceClass;

    /**
     * @return The instance type of the new instance. For information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/doc-detail/26312.htm).
     * 
     */
    public Output<String> dbInstanceClass() {
        return this.dbInstanceClass;
    }
    /**
     * The db instance description.
     * 
     */
    @Export(name="dbInstanceDescription", type=String.class, parameters={})
    private Output<String> dbInstanceDescription;

    /**
     * @return The db instance description.
     * 
     */
    public Output<String> dbInstanceDescription() {
        return this.dbInstanceDescription;
    }
    /**
     * The storage capacity of the new instance. Unit: GB. The storage capacity increases in increments of 5 GB. For more information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/doc-detail/26312.htm).
     * 
     */
    @Export(name="dbInstanceStorage", type=Integer.class, parameters={})
    private Output<Integer> dbInstanceStorage;

    /**
     * @return The storage capacity of the new instance. Unit: GB. The storage capacity increases in increments of 5 GB. For more information, see [Primary ApsaraDB RDS instance types](https://www.alibabacloud.com/doc-detail/26312.htm).
     * 
     */
    public Output<Integer> dbInstanceStorage() {
        return this.dbInstanceStorage;
    }
    /**
     * The type of storage media that is used for the new instance. Valid values:
     * * **local_ssd**: local SSDs.
     * * **cloud_ssd**: standard SSDs.
     * * **cloud_essd**: enhanced SSDs (ESSDs) of performance level 1 (PL1).
     * * **cloud_essd2**: ESSDs of PL2.
     * * **cloud_essd3**: ESSDs of PL3.
     * 
     */
    @Export(name="dbInstanceStorageType", type=String.class, parameters={})
    private Output<String> dbInstanceStorageType;

    /**
     * @return The type of storage media that is used for the new instance. Valid values:
     * * **local_ssd**: local SSDs.
     * * **cloud_ssd**: standard SSDs.
     * * **cloud_essd**: enhanced SSDs (ESSDs) of performance level 1 (PL1).
     * * **cloud_essd2**: ESSDs of PL2.
     * * **cloud_essd3**: ESSDs of PL3.
     * 
     */
    public Output<String> dbInstanceStorageType() {
        return this.dbInstanceStorageType;
    }
    /**
     * The name of the database for which you want to enable TDE. Up to 50 names can be entered in a single request. If you specify multiple names, separate these names with commas (,).
     * 
     */
    @Export(name="dbName", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbName;

    /**
     * @return The name of the database for which you want to enable TDE. Up to 50 names can be entered in a single request. If you specify multiple names, separate these names with commas (,).
     * 
     */
    public Output<Optional<String>> dbName() {
        return Codegen.optional(this.dbName);
    }
    /**
     * The ID of the dedicated cluster to which the new instance belongs. This parameter takes effect only when you create the new instance in a dedicated cluster.
     * 
     */
    @Export(name="dedicatedHostGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> dedicatedHostGroupId;

    /**
     * @return The ID of the dedicated cluster to which the new instance belongs. This parameter takes effect only when you create the new instance in a dedicated cluster.
     * 
     */
    public Output<Optional<String>> dedicatedHostGroupId() {
        return Codegen.optional(this.dedicatedHostGroupId);
    }
    /**
     * The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     */
    @Export(name="deletionProtection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deletionProtection;

    /**
     * @return The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     */
    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * The direction. Valid values: `Auto`, `Down`, `TempUpgrade`, `Up`.
     * 
     */
    @Export(name="direction", type=String.class, parameters={})
    private Output</* @Nullable */ String> direction;

    /**
     * @return The direction. Valid values: `Auto`, `Down`, `TempUpgrade`, `Up`.
     * 
     */
    public Output<Optional<String>> direction() {
        return Codegen.optional(this.direction);
    }
    /**
     * The effective time.
     * 
     */
    @Export(name="effectiveTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> effectiveTime;

    /**
     * @return The effective time.
     * 
     */
    public Output<Optional<String>> effectiveTime() {
        return Codegen.optional(this.effectiveTime);
    }
    /**
     * The ID of the private key.
     * 
     */
    @Export(name="encryptionKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> encryptionKey;

    /**
     * @return The ID of the private key.
     * 
     */
    public Output<Optional<String>> encryptionKey() {
        return Codegen.optional(this.encryptionKey);
    }
    /**
     * Database type. Value options: MySQL, SQLServer, PostgreSQL.
     * 
     */
    @Export(name="engine", type=String.class, parameters={})
    private Output<String> engine;

    /**
     * @return Database type. Value options: MySQL, SQLServer, PostgreSQL.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * Database version. Value:
     * * MySQL: **5.5/5.6/5.7/8.0**.
     * * SQL Server: **2008r2/08r2_ent_ha/2012/2012_ent_ha/2012_std_ha/2012_web/2014_std_ha/2016_ent_ha/2016_std_ha/2016_web/2017_std_ha/2017_ent/2019_std_ha/2019_ent**.
     * * PostgreSQL: **9.4/10.0/11.0/12.0/13.0**.
     * * MariaDB: **10.3**.
     * 
     */
    @Export(name="engineVersion", type=String.class, parameters={})
    private Output<String> engineVersion;

    /**
     * @return Database version. Value:
     * * MySQL: **5.5/5.6/5.7/8.0**.
     * * SQL Server: **2008r2/08r2_ent_ha/2012/2012_ent_ha/2012_std_ha/2012_web/2014_std_ha/2016_ent_ha/2016_std_ha/2016_web/2017_std_ha/2017_ent/2019_std_ha/2019_ent**.
     * * PostgreSQL: **9.4/10.0/11.0/12.0/13.0**.
     * * MariaDB: **10.3**.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    @Export(name="forceRestart", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceRestart;

    /**
     * @return Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    public Output<Optional<Boolean>> forceRestart() {
        return Codegen.optional(this.forceRestart);
    }
    /**
     * The high availability mode. Valid values:
     * * **RPO**: Data persistence is preferred. The instance preferentially ensures data reliability to minimize data loss. Use this mode if you have higher requirements on data consistency.
     * * **RTO**: Instance availability is preferred. The instance restores services as soon as possible to ensure availability. Use this mode if you have higher requirements on service availability.
     * 
     */
    @Export(name="haMode", type=String.class, parameters={})
    private Output<String> haMode;

    /**
     * @return The high availability mode. Valid values:
     * * **RPO**: Data persistence is preferred. The instance preferentially ensures data reliability to minimize data loss. Use this mode if you have higher requirements on data consistency.
     * * **RTO**: Instance availability is preferred. The instance restores services as soon as possible to ensure availability. Use this mode if you have higher requirements on service availability.
     * 
     */
    public Output<String> haMode() {
        return this.haMode;
    }
    /**
     * The network type of the instance. Valid values:
     * * **Classic**: Classic Network.
     * * **VPC**: VPC.
     * 
     */
    @Export(name="instanceNetworkType", type=String.class, parameters={})
    private Output<String> instanceNetworkType;

    /**
     * @return The network type of the instance. Valid values:
     * * **Classic**: Classic Network.
     * * **VPC**: VPC.
     * 
     */
    public Output<String> instanceNetworkType() {
        return this.instanceNetworkType;
    }
    /**
     * The maintainable time period of the instance. Format: &lt;I&gt; HH:mm&lt;/I&gt; Z-&lt;I&gt; HH:mm&lt;/I&gt; Z(UTC time).
     * 
     */
    @Export(name="maintainTime", type=String.class, parameters={})
    private Output<String> maintainTime;

    /**
     * @return The maintainable time period of the instance. Format: &lt;I&gt; HH:mm&lt;/I&gt; Z-&lt;I&gt; HH:mm&lt;/I&gt; Z(UTC time).
     * 
     */
    public Output<String> maintainTime() {
        return this.maintainTime;
    }
    /**
     * Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
     * 
     */
    @Export(name="parameters", type=List.class, parameters={RdsUpgradeDbInstanceParameter.class})
    private Output<List<RdsUpgradeDbInstanceParameter>> parameters;

    /**
     * @return Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm).
     * 
     */
    public Output<List<RdsUpgradeDbInstanceParameter>> parameters() {
        return this.parameters;
    }
    /**
     * The password of the certificate.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the certificate.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * The billing method of the new instance. Valid values: `PayAsYouGo` and `Subscription`.
     * 
     */
    @Export(name="paymentType", type=String.class, parameters={})
    private Output<String> paymentType;

    /**
     * @return The billing method of the new instance. Valid values: `PayAsYouGo` and `Subscription`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) (documented below).
     * 
     */
    @Export(name="pgHbaConfs", type=List.class, parameters={RdsUpgradeDbInstancePgHbaConf.class})
    private Output<List<RdsUpgradeDbInstancePgHbaConf>> pgHbaConfs;

    /**
     * @return The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) (documented below).
     * 
     */
    public Output<List<RdsUpgradeDbInstancePgHbaConf>> pgHbaConfs() {
        return this.pgHbaConfs;
    }
    /**
     * The port.
     * 
     */
    @Export(name="port", type=String.class, parameters={})
    private Output<String> port;

    /**
     * @return The port.
     * 
     */
    public Output<String> port() {
        return this.port;
    }
    /**
     * The intranet IP address of the new instance must be within the specified vSwitch IP address range. By default, the system automatically allocates by using **VPCId** and **VSwitchId**.
     * 
     */
    @Export(name="privateIpAddress", type=String.class, parameters={})
    private Output<String> privateIpAddress;

    /**
     * @return The intranet IP address of the new instance must be within the specified vSwitch IP address range. By default, the system automatically allocates by using **VPCId** and **VSwitchId**.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * The file that contains the private key used for TDE.
     * 
     */
    @Export(name="privateKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateKey;

    /**
     * @return The file that contains the private key used for TDE.
     * 
     */
    public Output<Optional<String>> privateKey() {
        return Codegen.optional(this.privateKey);
    }
    /**
     * The released keep policy.
     * 
     */
    @Export(name="releasedKeepPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> releasedKeepPolicy;

    /**
     * @return The released keep policy.
     * 
     */
    public Output<Optional<String>> releasedKeepPolicy() {
        return Codegen.optional(this.releasedKeepPolicy);
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version, indicating the authentication method of the replication permission. It is only allowed when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    @Export(name="replicationAcl", type=String.class, parameters={})
    private Output<String> replicationAcl;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version, indicating the authentication method of the replication permission. It is only allowed when the public key of the client certificate authority is enabled. Valid values: `cert` and `perfer` and `verify-ca` and `verify-full (supported by RDS PostgreSQL above 12)`.
     * 
     */
    public Output<String> replicationAcl() {
        return this.replicationAcl;
    }
    /**
     * The resource group id.
     * 
     */
    @Export(name="resourceGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceGroupId;

    /**
     * @return The resource group id.
     * 
     */
    public Output<Optional<String>> resourceGroupId() {
        return Codegen.optional(this.resourceGroupId);
    }
    /**
     * The Alibaba Cloud Resource Name (ARN) of a RAM role. A RAM role is a virtual RAM identity that you can create within your Alibaba Cloud account. For more information, see [RAM role overview](https://www.alibabacloud.com/doc-detail/93689.htm).
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleArn;

    /**
     * @return The Alibaba Cloud Resource Name (ARN) of a RAM role. A RAM role is a virtual RAM identity that you can create within your Alibaba Cloud account. For more information, see [RAM role overview](https://www.alibabacloud.com/doc-detail/93689.htm).
     * 
     */
    public Output<Optional<String>> roleArn() {
        return Codegen.optional(this.roleArn);
    }
    /**
     * The IP address whitelist of the instance. Separate multiple IP addresses with commas (,) and cannot be repeated. The following two formats are supported:
     * * IP address form, for example: 10.23.12.24.
     * * CIDR format, for example, 10.23.12.0/24 (no Inter-Domain Routing, 24 indicates the length of the prefix in the address, ranging from 1 to 32).
     * 
     */
    @Export(name="securityIps", type=List.class, parameters={String.class})
    private Output<List<String>> securityIps;

    /**
     * @return The IP address whitelist of the instance. Separate multiple IP addresses with commas (,) and cannot be repeated. The following two formats are supported:
     * * IP address form, for example: 10.23.12.24.
     * * CIDR format, for example, 10.23.12.0/24 (no Inter-Domain Routing, 24 indicates the length of the prefix in the address, ranging from 1 to 32).
     * 
     */
    public Output<List<String>> securityIps() {
        return this.securityIps;
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the content of the server certificate. If the CAType value is custom, this parameter must be configured.
     * 
     */
    @Export(name="serverCert", type=String.class, parameters={})
    private Output<String> serverCert;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the content of the server certificate. If the CAType value is custom, this parameter must be configured.
     * 
     */
    public Output<String> serverCert() {
        return this.serverCert;
    }
    /**
     * This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the private key of the server certificate. If the value of CAType is custom, this parameter must be configured.
     * 
     */
    @Export(name="serverKey", type=String.class, parameters={})
    private Output<String> serverKey;

    /**
     * @return This parameter is only supported by the RDS PostgreSQL cloud disk version. It indicates the private key of the server certificate. If the value of CAType is custom, this parameter must be configured.
     * 
     */
    public Output<String> serverKey() {
        return this.serverKey;
    }
    /**
     * The source biz.
     * 
     */
    @Export(name="sourceBiz", type=String.class, parameters={})
    private Output</* @Nullable */ String> sourceBiz;

    /**
     * @return The source biz.
     * 
     */
    public Output<Optional<String>> sourceBiz() {
        return Codegen.optional(this.sourceBiz);
    }
    /**
     * The source db instance id.
     * 
     */
    @Export(name="sourceDbInstanceId", type=String.class, parameters={})
    private Output<String> sourceDbInstanceId;

    /**
     * @return The source db instance id.
     * 
     */
    public Output<String> sourceDbInstanceId() {
        return this.sourceDbInstanceId;
    }
    /**
     * Enable or disable SSL. Valid values: `0` and `1`.
     * 
     */
    @Export(name="sslEnabled", type=Integer.class, parameters={})
    private Output<Integer> sslEnabled;

    /**
     * @return Enable or disable SSL. Valid values: `0` and `1`.
     * 
     */
    public Output<Integer> sslEnabled() {
        return this.sslEnabled;
    }
    /**
     * Specifies whether ApsaraDB RDS automatically switches your workloads over to the new instance after data is migrated to the new instance. Valid values:
     * * **true**: ApsaraDB RDS automatically switches workloads over to the new instance. If you set this parameter to true, you must take note of the following information:
     * * After the switchover is complete, you cannot roll your workloads back to the original instance. Proceed with caution.
     * * During the switchover, the original instance processes only read requests. You must perform the switchover during off-peak hours.
     * * If read-only instances are attached to the original instance, you can set this parameter only to false. In this case, the read-only instances that are attached to the original instance cannot be cloned. After the upgrade is complete, you must create read-only instances for the new instance.
     * * **false**: ApsaraDB RDS does not automatically switch your workloads over to the new instance. Before you perform an upgrade, we recommend that you set this parameter to false to test whether the new major engine version is compatible with your workloads. If you set this parameter to false, you must take note of the following information:
     * * The data migration does not interrupt your workloads on the original instance.
     * * After data is migrated to the new instance, you must update the endpoint configuration on your application. This update requires you to replace the endpoint of the original instance with the endpoint of the new instance. For more information about how to view the endpoint of an instance, see [View and change the internal and public endpoints and port numbers of an ApsaraDB RDS for PostgreSQL instance](https://www.alibabacloud.com/help/doc-detail/96788.htm).
     * 
     */
    @Export(name="switchOver", type=String.class, parameters={})
    private Output<String> switchOver;

    /**
     * @return Specifies whether ApsaraDB RDS automatically switches your workloads over to the new instance after data is migrated to the new instance. Valid values:
     * * **true**: ApsaraDB RDS automatically switches workloads over to the new instance. If you set this parameter to true, you must take note of the following information:
     * * After the switchover is complete, you cannot roll your workloads back to the original instance. Proceed with caution.
     * * During the switchover, the original instance processes only read requests. You must perform the switchover during off-peak hours.
     * * If read-only instances are attached to the original instance, you can set this parameter only to false. In this case, the read-only instances that are attached to the original instance cannot be cloned. After the upgrade is complete, you must create read-only instances for the new instance.
     * * **false**: ApsaraDB RDS does not automatically switch your workloads over to the new instance. Before you perform an upgrade, we recommend that you set this parameter to false to test whether the new major engine version is compatible with your workloads. If you set this parameter to false, you must take note of the following information:
     * * The data migration does not interrupt your workloads on the original instance.
     * * After data is migrated to the new instance, you must update the endpoint configuration on your application. This update requires you to replace the endpoint of the original instance with the endpoint of the new instance. For more information about how to view the endpoint of an instance, see [View and change the internal and public endpoints and port numbers of an ApsaraDB RDS for PostgreSQL instance](https://www.alibabacloud.com/help/doc-detail/96788.htm).
     * 
     */
    public Output<String> switchOver() {
        return this.switchOver;
    }
    /**
     * The time at which you want to apply the specification changes. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Export(name="switchTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> switchTime;

    /**
     * @return The time at which you want to apply the specification changes. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Output<Optional<String>> switchTime() {
        return Codegen.optional(this.switchTime);
    }
    /**
     * The time at which ApsaraDB RDS switches your workloads over to the new instance. This parameter is used together with the SwitchOver parameter and takes effect only when you set the SwitchOver parameter to true. Valid values:
     * * **Immediate**: After data is migrated to the new instance, ApsaraDB RDS immediately switches your workloads over to the new instance.
     * * **MaintainTime**: After data is migrated to the new instance, ApsaraDB RDS switches your workloads over to the new instance during the maintenance window that you specify. You can call the [ModifyDBInstanceMaintainTime](https://www.alibabacloud.com/help/doc-detail/26249.htm) operation to change the maintenance window of an instance.
     * 
     */
    @Export(name="switchTimeMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> switchTimeMode;

    /**
     * @return The time at which ApsaraDB RDS switches your workloads over to the new instance. This parameter is used together with the SwitchOver parameter and takes effect only when you set the SwitchOver parameter to true. Valid values:
     * * **Immediate**: After data is migrated to the new instance, ApsaraDB RDS immediately switches your workloads over to the new instance.
     * * **MaintainTime**: After data is migrated to the new instance, ApsaraDB RDS switches your workloads over to the new instance during the maintenance window that you specify. You can call the [ModifyDBInstanceMaintainTime](https://www.alibabacloud.com/help/doc-detail/26249.htm) operation to change the maintenance window of an instance.
     * 
     */
    public Output<Optional<String>> switchTimeMode() {
        return Codegen.optional(this.switchTimeMode);
    }
    /**
     * [The data replication mode](https://www.alibabacloud.com/help/doc-detail/96055.htm). Valid values:
     * * **Sync**: strong synchronization.
     * * **Semi-sync**: Semi-synchronous.
     * * **Async**: asynchronous.
     * 
     */
    @Export(name="syncMode", type=String.class, parameters={})
    private Output<String> syncMode;

    /**
     * @return [The data replication mode](https://www.alibabacloud.com/help/doc-detail/96055.htm). Valid values:
     * * **Sync**: strong synchronization.
     * * **Semi-sync**: Semi-synchronous.
     * * **Async**: asynchronous.
     * 
     */
    public Output<String> syncMode() {
        return this.syncMode;
    }
    /**
     * The major engine version of the new instance. The value of this parameter must be the major engine version on which an upgrade check is performed.
     * 
     */
    @Export(name="targetMajorVersion", type=String.class, parameters={})
    private Output<String> targetMajorVersion;

    /**
     * @return The major engine version of the new instance. The value of this parameter must be the major engine version on which an upgrade check is performed.
     * 
     */
    public Output<String> targetMajorVersion() {
        return this.targetMajorVersion;
    }
    /**
     * The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    @Export(name="tcpConnectionType", type=String.class, parameters={})
    private Output<String> tcpConnectionType;

    /**
     * @return The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    public Output<String> tcpConnectionType() {
        return this.tcpConnectionType;
    }
    /**
     * Specifies whether to enable TDE. Valid values: `Enabled` and `Disabled`.
     * 
     */
    @Export(name="tdeStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> tdeStatus;

    /**
     * @return Specifies whether to enable TDE. Valid values: `Enabled` and `Disabled`.
     * 
     */
    public Output<Optional<String>> tdeStatus() {
        return Codegen.optional(this.tdeStatus);
    }
    /**
     * The ID of the VPC to which the new instance belongs.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC to which the new instance belongs.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of the vSwitch associated with the specified VPC.
     * 
     */
    @Export(name="vswitchId", type=String.class, parameters={})
    private Output<String> vswitchId;

    /**
     * @return The ID of the vSwitch associated with the specified VPC.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }
    /**
     * The ID of the zone to which the new instance belongs. You can call the [DescribeRegions](https://www.alibabacloud.com/doc-detail/26243.htm) operation to query the most recent region list.
     * 
     */
    @Export(name="zoneId", type=String.class, parameters={})
    private Output<String> zoneId;

    /**
     * @return The ID of the zone to which the new instance belongs. You can call the [DescribeRegions](https://www.alibabacloud.com/doc-detail/26243.htm) operation to query the most recent region list.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }
    /**
     * The ID of the zone to which the secondary instance of the new instance belongs. You can specify this parameter only when the original instance runs RDS High-availability Edition. You can select a zone that belongs to the region where the original instance resides. You can call the [DescribeRegions](https://www.alibabacloud.com/help/doc-detail/26243.htm) operation to query zone IDs.
     * 
     */
    @Export(name="zoneIdSlave1", type=String.class, parameters={})
    private Output<String> zoneIdSlave1;

    /**
     * @return The ID of the zone to which the secondary instance of the new instance belongs. You can specify this parameter only when the original instance runs RDS High-availability Edition. You can select a zone that belongs to the region where the original instance resides. You can call the [DescribeRegions](https://www.alibabacloud.com/help/doc-detail/26243.htm) operation to query zone IDs.
     * 
     */
    public Output<String> zoneIdSlave1() {
        return this.zoneIdSlave1;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RdsUpgradeDbInstance(String name) {
        this(name, RdsUpgradeDbInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RdsUpgradeDbInstance(String name, RdsUpgradeDbInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RdsUpgradeDbInstance(String name, RdsUpgradeDbInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsUpgradeDbInstance:RdsUpgradeDbInstance", name, args == null ? RdsUpgradeDbInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RdsUpgradeDbInstance(String name, Output<String> id, @Nullable RdsUpgradeDbInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsUpgradeDbInstance:RdsUpgradeDbInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RdsUpgradeDbInstance get(String name, Output<String> id, @Nullable RdsUpgradeDbInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RdsUpgradeDbInstance(name, id, state, options);
    }
}
