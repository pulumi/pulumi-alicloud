// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpc.SnatEntryArgs;
import com.pulumi.alicloud.vpc.inputs.SnatEntryState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a NAT Gateway Snat Entry resource.
 * 
 * For information about NAT Gateway Snat Entry and how to use it, see [What is Snat Entry](https://www.alibabacloud.com/help/en/nat-gateway/developer-reference/api-vpc-2016-04-28-createsnatentry-natgws).
 * 
 * &gt; **NOTE:** Available since v1.119.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.vpc.NatGateway;
 * import com.pulumi.alicloud.vpc.NatGatewayArgs;
 * import com.pulumi.alicloud.ecs.EipAddress;
 * import com.pulumi.alicloud.ecs.EipAddressArgs;
 * import com.pulumi.alicloud.ecs.EipAssociation;
 * import com.pulumi.alicloud.ecs.EipAssociationArgs;
 * import com.pulumi.alicloud.vpc.SnatEntry;
 * import com.pulumi.alicloud.vpc.SnatEntryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.16.0.0/12")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock("172.16.0.0/21")
 *             .zoneId(default_.zones()[0].id())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultNatGateway = new NatGateway("defaultNatGateway", NatGatewayArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .natGatewayName(name)
 *             .paymentType("PayAsYouGo")
 *             .vswitchId(defaultSwitch.id())
 *             .natType("Enhanced")
 *             .build());
 * 
 *         var defaultEipAddress = new EipAddress("defaultEipAddress", EipAddressArgs.builder()
 *             .addressName(name)
 *             .build());
 * 
 *         var defaultEipAssociation = new EipAssociation("defaultEipAssociation", EipAssociationArgs.builder()
 *             .allocationId(defaultEipAddress.id())
 *             .instanceId(defaultNatGateway.id())
 *             .build());
 * 
 *         var defaultSnatEntry = new SnatEntry("defaultSnatEntry", SnatEntryArgs.builder()
 *             .snatTableId(defaultNatGateway.snatTableIds())
 *             .sourceVswitchId(defaultSwitch.id())
 *             .snatIp(defaultEipAddress.ipAddress())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * NAT Gateway Snat Entry can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:vpc/snatEntry:SnatEntry example &lt;snat_table_id&gt;:&lt;snat_entry_id&gt;
 * ```
 * 
 * ```sh
 * $ pulumi import alicloud:vpc/snatEntry:SnatEntry example &lt;snat_entry_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vpc/snatEntry:SnatEntry")
public class SnatEntry extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether to enable EIP affinity. Default value: `0`. Valid values:
     * 
     */
    @Export(name="eipAffinity", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> eipAffinity;

    /**
     * @return Specifies whether to enable EIP affinity. Default value: `0`. Valid values:
     * 
     */
    public Output<Optional<Integer>> eipAffinity() {
        return Codegen.optional(this.eipAffinity);
    }
    /**
     * The id of the snat entry on the server.
     * 
     */
    @Export(name="snatEntryId", refs={String.class}, tree="[0]")
    private Output<String> snatEntryId;

    /**
     * @return The id of the snat entry on the server.
     * 
     */
    public Output<String> snatEntryId() {
        return this.snatEntryId;
    }
    /**
     * The name of the SNAT entry. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`.
     * 
     */
    @Export(name="snatEntryName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> snatEntryName;

    /**
     * @return The name of the SNAT entry. The name must be `2` to `128` characters in length. It must start with a letter but cannot start with `http://` or `https://`.
     * 
     */
    public Output<Optional<String>> snatEntryName() {
        return Codegen.optional(this.snatEntryName);
    }
    /**
     * The IP of a SNAT entry. Separate multiple EIP or NAT IP addresses with commas (,). **NOTE:** From version 1.241.0, `snatIp` can be modified.
     * 
     */
    @Export(name="snatIp", refs={String.class}, tree="[0]")
    private Output<String> snatIp;

    /**
     * @return The IP of a SNAT entry. Separate multiple EIP or NAT IP addresses with commas (,). **NOTE:** From version 1.241.0, `snatIp` can be modified.
     * 
     */
    public Output<String> snatIp() {
        return this.snatIp;
    }
    /**
     * The ID of the SNAT table.
     * 
     */
    @Export(name="snatTableId", refs={String.class}, tree="[0]")
    private Output<String> snatTableId;

    /**
     * @return The ID of the SNAT table.
     * 
     */
    public Output<String> snatTableId() {
        return this.snatTableId;
    }
    /**
     * The source CIDR block specified in the SNAT entry.
     * 
     */
    @Export(name="sourceCidr", refs={String.class}, tree="[0]")
    private Output<String> sourceCidr;

    /**
     * @return The source CIDR block specified in the SNAT entry.
     * 
     */
    public Output<String> sourceCidr() {
        return this.sourceCidr;
    }
    /**
     * The ID of the vSwitch.
     * 
     */
    @Export(name="sourceVswitchId", refs={String.class}, tree="[0]")
    private Output<String> sourceVswitchId;

    /**
     * @return The ID of the vSwitch.
     * 
     */
    public Output<String> sourceVswitchId() {
        return this.sourceVswitchId;
    }
    /**
     * (Available since v1.119.1) The ID of the SNAT entry.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return (Available since v1.119.1) The ID of the SNAT entry.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnatEntry(java.lang.String name) {
        this(name, SnatEntryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnatEntry(java.lang.String name, SnatEntryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnatEntry(java.lang.String name, SnatEntryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/snatEntry:SnatEntry", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SnatEntry(java.lang.String name, Output<java.lang.String> id, @Nullable SnatEntryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/snatEntry:SnatEntry", name, state, makeResourceOptions(options, id), false);
    }

    private static SnatEntryArgs makeArgs(SnatEntryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnatEntryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnatEntry get(java.lang.String name, Output<java.lang.String> id, @Nullable SnatEntryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnatEntry(name, id, state, options);
    }
}
