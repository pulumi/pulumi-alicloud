// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDedicatedHostsHostInstance {
    /**
     * @return The ID of the ECS instance.
     * 
     */
    private String instanceId;
    /**
     * @return The ID of the ECS instance owner.
     * 
     */
    private Integer instanceOwnerId;
    /**
     * @return The instance type of the ECS instance that was created on the dedicated host.
     * 
     */
    private String instanceType;
    /**
     * @return The ID of the socket to which the ECS instance belongs.
     * 
     */
    private String socketId;

    private GetDedicatedHostsHostInstance() {}
    /**
     * @return The ID of the ECS instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The ID of the ECS instance owner.
     * 
     */
    public Integer instanceOwnerId() {
        return this.instanceOwnerId;
    }
    /**
     * @return The instance type of the ECS instance that was created on the dedicated host.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The ID of the socket to which the ECS instance belongs.
     * 
     */
    public String socketId() {
        return this.socketId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedHostsHostInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String instanceId;
        private Integer instanceOwnerId;
        private String instanceType;
        private String socketId;
        public Builder() {}
        public Builder(GetDedicatedHostsHostInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceId = defaults.instanceId;
    	      this.instanceOwnerId = defaults.instanceOwnerId;
    	      this.instanceType = defaults.instanceType;
    	      this.socketId = defaults.socketId;
        }

        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetDedicatedHostsHostInstance", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceOwnerId(Integer instanceOwnerId) {
            if (instanceOwnerId == null) {
              throw new MissingRequiredPropertyException("GetDedicatedHostsHostInstance", "instanceOwnerId");
            }
            this.instanceOwnerId = instanceOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetDedicatedHostsHostInstance", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder socketId(String socketId) {
            if (socketId == null) {
              throw new MissingRequiredPropertyException("GetDedicatedHostsHostInstance", "socketId");
            }
            this.socketId = socketId;
            return this;
        }
        public GetDedicatedHostsHostInstance build() {
            final var _resultValue = new GetDedicatedHostsHostInstance();
            _resultValue.instanceId = instanceId;
            _resultValue.instanceOwnerId = instanceOwnerId;
            _resultValue.instanceType = instanceType;
            _resultValue.socketId = socketId;
            return _resultValue;
        }
    }
}
