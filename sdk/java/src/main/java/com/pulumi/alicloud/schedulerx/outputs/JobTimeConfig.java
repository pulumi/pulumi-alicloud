// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTimeConfig {
    /**
     * @return The cron type can optionally fill in a custom calendar.
     * 
     */
    private @Nullable String calendar;
    /**
     * @return Cron type can choose time offset, unit s.
     * 
     */
    private @Nullable Integer dataOffset;
    /**
     * @return Time expressions. Currently, the following types of time expressions are supported:
     * 
     */
    private @Nullable String timeExpression;
    /**
     * @return Time configuration type. Currently, the following time types are supported:
     * 
     */
    private Integer timeType;

    private JobTimeConfig() {}
    /**
     * @return The cron type can optionally fill in a custom calendar.
     * 
     */
    public Optional<String> calendar() {
        return Optional.ofNullable(this.calendar);
    }
    /**
     * @return Cron type can choose time offset, unit s.
     * 
     */
    public Optional<Integer> dataOffset() {
        return Optional.ofNullable(this.dataOffset);
    }
    /**
     * @return Time expressions. Currently, the following types of time expressions are supported:
     * 
     */
    public Optional<String> timeExpression() {
        return Optional.ofNullable(this.timeExpression);
    }
    /**
     * @return Time configuration type. Currently, the following time types are supported:
     * 
     */
    public Integer timeType() {
        return this.timeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTimeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String calendar;
        private @Nullable Integer dataOffset;
        private @Nullable String timeExpression;
        private Integer timeType;
        public Builder() {}
        public Builder(JobTimeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calendar = defaults.calendar;
    	      this.dataOffset = defaults.dataOffset;
    	      this.timeExpression = defaults.timeExpression;
    	      this.timeType = defaults.timeType;
        }

        @CustomType.Setter
        public Builder calendar(@Nullable String calendar) {

            this.calendar = calendar;
            return this;
        }
        @CustomType.Setter
        public Builder dataOffset(@Nullable Integer dataOffset) {

            this.dataOffset = dataOffset;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpression(@Nullable String timeExpression) {

            this.timeExpression = timeExpression;
            return this;
        }
        @CustomType.Setter
        public Builder timeType(Integer timeType) {
            if (timeType == null) {
              throw new MissingRequiredPropertyException("JobTimeConfig", "timeType");
            }
            this.timeType = timeType;
            return this;
        }
        public JobTimeConfig build() {
            final var _resultValue = new JobTimeConfig();
            _resultValue.calendar = calendar;
            _resultValue.dataOffset = dataOffset;
            _resultValue.timeExpression = timeExpression;
            _resultValue.timeType = timeType;
            return _resultValue;
        }
    }
}
