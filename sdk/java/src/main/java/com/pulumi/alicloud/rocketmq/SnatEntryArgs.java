// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SnatEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnatEntryArgs Empty = new SnatEntryArgs();

    /**
     * The destination CIDR block.
     * 
     */
    @Import(name="cidrBlock", required=true)
    private Output<String> cidrBlock;

    /**
     * @return The destination CIDR block.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }

    /**
     * The ID of the SAG instance.
     * 
     */
    @Import(name="sagId", required=true)
    private Output<String> sagId;

    /**
     * @return The ID of the SAG instance.
     * 
     */
    public Output<String> sagId() {
        return this.sagId;
    }

    /**
     * The public IP address.
     * 
     */
    @Import(name="snatIp", required=true)
    private Output<String> snatIp;

    /**
     * @return The public IP address.
     * 
     */
    public Output<String> snatIp() {
        return this.snatIp;
    }

    private SnatEntryArgs() {}

    private SnatEntryArgs(SnatEntryArgs $) {
        this.cidrBlock = $.cidrBlock;
        this.sagId = $.sagId;
        this.snatIp = $.snatIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnatEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnatEntryArgs $;

        public Builder() {
            $ = new SnatEntryArgs();
        }

        public Builder(SnatEntryArgs defaults) {
            $ = new SnatEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlock The destination CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The destination CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param sagId The ID of the SAG instance.
         * 
         * @return builder
         * 
         */
        public Builder sagId(Output<String> sagId) {
            $.sagId = sagId;
            return this;
        }

        /**
         * @param sagId The ID of the SAG instance.
         * 
         * @return builder
         * 
         */
        public Builder sagId(String sagId) {
            return sagId(Output.of(sagId));
        }

        /**
         * @param snatIp The public IP address.
         * 
         * @return builder
         * 
         */
        public Builder snatIp(Output<String> snatIp) {
            $.snatIp = snatIp;
            return this;
        }

        /**
         * @param snatIp The public IP address.
         * 
         * @return builder
         * 
         */
        public Builder snatIp(String snatIp) {
            return snatIp(Output.of(snatIp));
        }

        public SnatEntryArgs build() {
            if ($.cidrBlock == null) {
                throw new MissingRequiredPropertyException("SnatEntryArgs", "cidrBlock");
            }
            if ($.sagId == null) {
                throw new MissingRequiredPropertyException("SnatEntryArgs", "sagId");
            }
            if ($.snatIp == null) {
                throw new MissingRequiredPropertyException("SnatEntryArgs", "snatIp");
            }
            return $;
        }
    }

}
