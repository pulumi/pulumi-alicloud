// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.alicloud.fc.inputs.V3FunctionNasConfigMountPointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3FunctionNasConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3FunctionNasConfigArgs Empty = new V3FunctionNasConfigArgs();

    /**
     * Group ID.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<Integer> groupId;

    /**
     * @return Group ID.
     * 
     */
    public Optional<Output<Integer>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Mount point list. See `mount_points` below.
     * 
     */
    @Import(name="mountPoints")
    private @Nullable Output<List<V3FunctionNasConfigMountPointArgs>> mountPoints;

    /**
     * @return Mount point list. See `mount_points` below.
     * 
     */
    public Optional<Output<List<V3FunctionNasConfigMountPointArgs>>> mountPoints() {
        return Optional.ofNullable(this.mountPoints);
    }

    /**
     * Account ID.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<Integer> userId;

    /**
     * @return Account ID.
     * 
     */
    public Optional<Output<Integer>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private V3FunctionNasConfigArgs() {}

    private V3FunctionNasConfigArgs(V3FunctionNasConfigArgs $) {
        this.groupId = $.groupId;
        this.mountPoints = $.mountPoints;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3FunctionNasConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3FunctionNasConfigArgs $;

        public Builder() {
            $ = new V3FunctionNasConfigArgs();
        }

        public Builder(V3FunctionNasConfigArgs defaults) {
            $ = new V3FunctionNasConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId Group ID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Group ID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param mountPoints Mount point list. See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(@Nullable Output<List<V3FunctionNasConfigMountPointArgs>> mountPoints) {
            $.mountPoints = mountPoints;
            return this;
        }

        /**
         * @param mountPoints Mount point list. See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(List<V3FunctionNasConfigMountPointArgs> mountPoints) {
            return mountPoints(Output.of(mountPoints));
        }

        /**
         * @param mountPoints Mount point list. See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(V3FunctionNasConfigMountPointArgs... mountPoints) {
            return mountPoints(List.of(mountPoints));
        }

        /**
         * @param userId Account ID.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<Integer> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId Account ID.
         * 
         * @return builder
         * 
         */
        public Builder userId(Integer userId) {
            return userId(Output.of(userId));
        }

        public V3FunctionNasConfigArgs build() {
            return $;
        }
    }

}
