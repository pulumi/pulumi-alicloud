// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKubernetesVersionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubernetesVersionArgs Empty = new GetKubernetesVersionArgs();

    /**
     * The type of cluster. Its valid value are `Kubernetes` and `ManagedKubernetes`.
     * 
     */
    @Import(name="clusterType", required=true)
    private Output<String> clusterType;

    /**
     * @return The type of cluster. Its valid value are `Kubernetes` and `ManagedKubernetes`.
     * 
     */
    public Output<String> clusterType() {
        return this.clusterType;
    }

    /**
     * The ACK released kubernetes version.
     * 
     */
    @Import(name="kubernetesVersion")
    private @Nullable Output<String> kubernetesVersion;

    /**
     * @return The ACK released kubernetes version.
     * 
     */
    public Optional<Output<String>> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }

    /**
     * The profile of cluster. Its valid value are `Default`, `Serverless` and `Edge`.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return The profile of cluster. Its valid value are `Default`, `Serverless` and `Edge`.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    private GetKubernetesVersionArgs() {}

    private GetKubernetesVersionArgs(GetKubernetesVersionArgs $) {
        this.clusterType = $.clusterType;
        this.kubernetesVersion = $.kubernetesVersion;
        this.profile = $.profile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubernetesVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubernetesVersionArgs $;

        public Builder() {
            $ = new GetKubernetesVersionArgs();
        }

        public Builder(GetKubernetesVersionArgs defaults) {
            $ = new GetKubernetesVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterType The type of cluster. Its valid value are `Kubernetes` and `ManagedKubernetes`.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType The type of cluster. Its valid value are `Kubernetes` and `ManagedKubernetes`.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param kubernetesVersion The ACK released kubernetes version.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(@Nullable Output<String> kubernetesVersion) {
            $.kubernetesVersion = kubernetesVersion;
            return this;
        }

        /**
         * @param kubernetesVersion The ACK released kubernetes version.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(String kubernetesVersion) {
            return kubernetesVersion(Output.of(kubernetesVersion));
        }

        /**
         * @param profile The profile of cluster. Its valid value are `Default`, `Serverless` and `Edge`.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile The profile of cluster. Its valid value are `Default`, `Serverless` and `Edge`.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public GetKubernetesVersionArgs build() {
            if ($.clusterType == null) {
                throw new MissingRequiredPropertyException("GetKubernetesVersionArgs", "clusterType");
            }
            return $;
        }
    }

}
