// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudstoragegateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayCacheDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayCacheDiskArgs Empty = new GatewayCacheDiskArgs();

    /**
     * The cache disk type. Valid values: `cloud_efficiency`, `cloud_ssd`.
     * 
     */
    @Import(name="cacheDiskCategory")
    private @Nullable Output<String> cacheDiskCategory;

    /**
     * @return The cache disk type. Valid values: `cloud_efficiency`, `cloud_ssd`.
     * 
     */
    public Optional<Output<String>> cacheDiskCategory() {
        return Optional.ofNullable(this.cacheDiskCategory);
    }

    /**
     * size of the cache disk. Unit: `GB`. The upper limit of the basic gateway cache disk is `1` TB (`1024` GB), that of the standard gateway is `2` TB (`2048` GB), and that of other gateway cache disks is `32` TB (`32768` GB). The lower limit for the file gateway cache disk capacity is `40` GB, and the lower limit for the block gateway cache disk capacity is `20` GB.
     * 
     */
    @Import(name="cacheDiskSizeInGb", required=true)
    private Output<Integer> cacheDiskSizeInGb;

    /**
     * @return size of the cache disk. Unit: `GB`. The upper limit of the basic gateway cache disk is `1` TB (`1024` GB), that of the standard gateway is `2` TB (`2048` GB), and that of other gateway cache disks is `32` TB (`32768` GB). The lower limit for the file gateway cache disk capacity is `40` GB, and the lower limit for the block gateway cache disk capacity is `20` GB.
     * 
     */
    public Output<Integer> cacheDiskSizeInGb() {
        return this.cacheDiskSizeInGb;
    }

    /**
     * The ID of the gateway.
     * 
     */
    @Import(name="gatewayId", required=true)
    private Output<String> gatewayId;

    /**
     * @return The ID of the gateway.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }

    private GatewayCacheDiskArgs() {}

    private GatewayCacheDiskArgs(GatewayCacheDiskArgs $) {
        this.cacheDiskCategory = $.cacheDiskCategory;
        this.cacheDiskSizeInGb = $.cacheDiskSizeInGb;
        this.gatewayId = $.gatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayCacheDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayCacheDiskArgs $;

        public Builder() {
            $ = new GatewayCacheDiskArgs();
        }

        public Builder(GatewayCacheDiskArgs defaults) {
            $ = new GatewayCacheDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheDiskCategory The cache disk type. Valid values: `cloud_efficiency`, `cloud_ssd`.
         * 
         * @return builder
         * 
         */
        public Builder cacheDiskCategory(@Nullable Output<String> cacheDiskCategory) {
            $.cacheDiskCategory = cacheDiskCategory;
            return this;
        }

        /**
         * @param cacheDiskCategory The cache disk type. Valid values: `cloud_efficiency`, `cloud_ssd`.
         * 
         * @return builder
         * 
         */
        public Builder cacheDiskCategory(String cacheDiskCategory) {
            return cacheDiskCategory(Output.of(cacheDiskCategory));
        }

        /**
         * @param cacheDiskSizeInGb size of the cache disk. Unit: `GB`. The upper limit of the basic gateway cache disk is `1` TB (`1024` GB), that of the standard gateway is `2` TB (`2048` GB), and that of other gateway cache disks is `32` TB (`32768` GB). The lower limit for the file gateway cache disk capacity is `40` GB, and the lower limit for the block gateway cache disk capacity is `20` GB.
         * 
         * @return builder
         * 
         */
        public Builder cacheDiskSizeInGb(Output<Integer> cacheDiskSizeInGb) {
            $.cacheDiskSizeInGb = cacheDiskSizeInGb;
            return this;
        }

        /**
         * @param cacheDiskSizeInGb size of the cache disk. Unit: `GB`. The upper limit of the basic gateway cache disk is `1` TB (`1024` GB), that of the standard gateway is `2` TB (`2048` GB), and that of other gateway cache disks is `32` TB (`32768` GB). The lower limit for the file gateway cache disk capacity is `40` GB, and the lower limit for the block gateway cache disk capacity is `20` GB.
         * 
         * @return builder
         * 
         */
        public Builder cacheDiskSizeInGb(Integer cacheDiskSizeInGb) {
            return cacheDiskSizeInGb(Output.of(cacheDiskSizeInGb));
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        public GatewayCacheDiskArgs build() {
            if ($.cacheDiskSizeInGb == null) {
                throw new MissingRequiredPropertyException("GatewayCacheDiskArgs", "cacheDiskSizeInGb");
            }
            if ($.gatewayId == null) {
                throw new MissingRequiredPropertyException("GatewayCacheDiskArgs", "gatewayId");
            }
            return $;
        }
    }

}
