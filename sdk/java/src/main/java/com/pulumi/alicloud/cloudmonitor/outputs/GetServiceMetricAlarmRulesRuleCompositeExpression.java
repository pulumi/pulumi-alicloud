// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor.outputs;

import com.pulumi.alicloud.cloudmonitor.outputs.GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceMetricAlarmRulesRuleCompositeExpression {
    /**
     * @return The relationship between the trigger conditions for multiple metrics.
     * 
     */
    private String expressionListJoin;
    /**
     * @return The trigger conditions that are created in standard mode.
     * 
     */
    private List<GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList> expressionLists;
    /**
     * @return The trigger conditions that are created by using expressions.
     * 
     */
    private String expressionRaw;
    /**
     * @return The alert level.
     * 
     */
    private String level;
    /**
     * @return The number of consecutive triggers.
     * 
     */
    private Integer times;

    private GetServiceMetricAlarmRulesRuleCompositeExpression() {}
    /**
     * @return The relationship between the trigger conditions for multiple metrics.
     * 
     */
    public String expressionListJoin() {
        return this.expressionListJoin;
    }
    /**
     * @return The trigger conditions that are created in standard mode.
     * 
     */
    public List<GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList> expressionLists() {
        return this.expressionLists;
    }
    /**
     * @return The trigger conditions that are created by using expressions.
     * 
     */
    public String expressionRaw() {
        return this.expressionRaw;
    }
    /**
     * @return The alert level.
     * 
     */
    public String level() {
        return this.level;
    }
    /**
     * @return The number of consecutive triggers.
     * 
     */
    public Integer times() {
        return this.times;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMetricAlarmRulesRuleCompositeExpression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String expressionListJoin;
        private List<GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList> expressionLists;
        private String expressionRaw;
        private String level;
        private Integer times;
        public Builder() {}
        public Builder(GetServiceMetricAlarmRulesRuleCompositeExpression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expressionListJoin = defaults.expressionListJoin;
    	      this.expressionLists = defaults.expressionLists;
    	      this.expressionRaw = defaults.expressionRaw;
    	      this.level = defaults.level;
    	      this.times = defaults.times;
        }

        @CustomType.Setter
        public Builder expressionListJoin(String expressionListJoin) {
            if (expressionListJoin == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRuleCompositeExpression", "expressionListJoin");
            }
            this.expressionListJoin = expressionListJoin;
            return this;
        }
        @CustomType.Setter
        public Builder expressionLists(List<GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList> expressionLists) {
            if (expressionLists == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRuleCompositeExpression", "expressionLists");
            }
            this.expressionLists = expressionLists;
            return this;
        }
        public Builder expressionLists(GetServiceMetricAlarmRulesRuleCompositeExpressionExpressionList... expressionLists) {
            return expressionLists(List.of(expressionLists));
        }
        @CustomType.Setter
        public Builder expressionRaw(String expressionRaw) {
            if (expressionRaw == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRuleCompositeExpression", "expressionRaw");
            }
            this.expressionRaw = expressionRaw;
            return this;
        }
        @CustomType.Setter
        public Builder level(String level) {
            if (level == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRuleCompositeExpression", "level");
            }
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder times(Integer times) {
            if (times == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesRuleCompositeExpression", "times");
            }
            this.times = times;
            return this;
        }
        public GetServiceMetricAlarmRulesRuleCompositeExpression build() {
            final var _resultValue = new GetServiceMetricAlarmRulesRuleCompositeExpression();
            _resultValue.expressionListJoin = expressionListJoin;
            _resultValue.expressionLists = expressionLists;
            _resultValue.expressionRaw = expressionRaw;
            _resultValue.level = level;
            _resultValue.times = times;
            return _resultValue;
        }
    }
}
