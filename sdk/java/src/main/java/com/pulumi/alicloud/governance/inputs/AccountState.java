// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.governance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountState extends com.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    /**
     * The ID of the enrolled account.
     * - If you are creating a new resource account, this parameter is not required.
     * - If you are enrolling a existing account to account factory, this parameter is required.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<Integer> accountId;

    /**
     * @return The ID of the enrolled account.
     * - If you are creating a new resource account, this parameter is not required.
     * - If you are enrolling a existing account to account factory, this parameter is required.
     * 
     */
    public Optional<Output<Integer>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Account name prefix.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="accountNamePrefix")
    private @Nullable Output<String> accountNamePrefix;

    /**
     * @return Account name prefix.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> accountNamePrefix() {
        return Optional.ofNullable(this.accountNamePrefix);
    }

    /**
     * The baseline ID.
     * 
     * If it is left blank, the system default baseline is used by default.
     * 
     */
    @Import(name="baselineId")
    private @Nullable Output<String> baselineId;

    /**
     * @return The baseline ID.
     * 
     * If it is left blank, the system default baseline is used by default.
     * 
     */
    public Optional<Output<String>> baselineId() {
        return Optional.ofNullable(this.baselineId);
    }

    /**
     * The account display name.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The account display name.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The ID of the parent resource folder.
     * 
     * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
     * 
     * If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="folderId")
    private @Nullable Output<String> folderId;

    /**
     * @return The ID of the parent resource folder.
     * 
     * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
     * 
     * If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> folderId() {
        return Optional.ofNullable(this.folderId);
    }

    /**
     * The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    @Import(name="payerAccountId")
    private @Nullable Output<Integer> payerAccountId;

    /**
     * @return The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    public Optional<Output<Integer>> payerAccountId() {
        return Optional.ofNullable(this.payerAccountId);
    }

    /**
     * Account registration status. Value:
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Account registration status. Value:
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private AccountState() {}

    private AccountState(AccountState $) {
        this.accountId = $.accountId;
        this.accountNamePrefix = $.accountNamePrefix;
        this.baselineId = $.baselineId;
        this.displayName = $.displayName;
        this.folderId = $.folderId;
        this.payerAccountId = $.payerAccountId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountState $;

        public Builder() {
            $ = new AccountState();
        }

        public Builder(AccountState defaults) {
            $ = new AccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The ID of the enrolled account.
         * - If you are creating a new resource account, this parameter is not required.
         * - If you are enrolling a existing account to account factory, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<Integer> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The ID of the enrolled account.
         * - If you are creating a new resource account, this parameter is not required.
         * - If you are enrolling a existing account to account factory, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Integer accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountNamePrefix Account name prefix.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(@Nullable Output<String> accountNamePrefix) {
            $.accountNamePrefix = accountNamePrefix;
            return this;
        }

        /**
         * @param accountNamePrefix Account name prefix.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(String accountNamePrefix) {
            return accountNamePrefix(Output.of(accountNamePrefix));
        }

        /**
         * @param baselineId The baseline ID.
         * 
         * If it is left blank, the system default baseline is used by default.
         * 
         * @return builder
         * 
         */
        public Builder baselineId(@Nullable Output<String> baselineId) {
            $.baselineId = baselineId;
            return this;
        }

        /**
         * @param baselineId The baseline ID.
         * 
         * If it is left blank, the system default baseline is used by default.
         * 
         * @return builder
         * 
         */
        public Builder baselineId(String baselineId) {
            return baselineId(Output.of(baselineId));
        }

        /**
         * @param displayName The account display name.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The account display name.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param folderId The ID of the parent resource folder.
         * 
         * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
         * 
         * If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder folderId(@Nullable Output<String> folderId) {
            $.folderId = folderId;
            return this;
        }

        /**
         * @param folderId The ID of the parent resource folder.
         * 
         * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
         * 
         * If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder folderId(String folderId) {
            return folderId(Output.of(folderId));
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(@Nullable Output<Integer> payerAccountId) {
            $.payerAccountId = payerAccountId;
            return this;
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(Integer payerAccountId) {
            return payerAccountId(Output.of(payerAccountId));
        }

        /**
         * @param status Account registration status. Value:
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Account registration status. Value:
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public AccountState build() {
            return $;
        }
    }

}
