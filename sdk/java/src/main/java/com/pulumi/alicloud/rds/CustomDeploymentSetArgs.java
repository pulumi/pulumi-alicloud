// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomDeploymentSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDeploymentSetArgs Empty = new CustomDeploymentSetArgs();

    /**
     * The name of the resource
     * 
     */
    @Import(name="customDeploymentSetName")
    private @Nullable Output<String> customDeploymentSetName;

    /**
     * @return The name of the resource
     * 
     */
    public Optional<Output<String>> customDeploymentSetName() {
        return Optional.ofNullable(this.customDeploymentSetName);
    }

    /**
     * Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
     * 
     * Default value: 3
     * 
     * &gt; **NOTE:**  This parameter takes effect only when &#39;Strategy = AvailabilityGroup.
     * 
     */
    @Import(name="groupCount")
    private @Nullable Output<Integer> groupCount;

    /**
     * @return Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
     * 
     * Default value: 3
     * 
     * &gt; **NOTE:**  This parameter takes effect only when &#39;Strategy = AvailabilityGroup.
     * 
     */
    public Optional<Output<Integer>> groupCount() {
        return Optional.ofNullable(this.groupCount);
    }

    /**
     * After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
     * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
     * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
     * 
     * Default value: CancelMembershipAndStart.
     * 
     */
    @Import(name="onUnableToRedeployFailedInstance")
    private @Nullable Output<String> onUnableToRedeployFailedInstance;

    /**
     * @return After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
     * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
     * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
     * 
     * Default value: CancelMembershipAndStart.
     * 
     */
    public Optional<Output<String>> onUnableToRedeployFailedInstance() {
        return Optional.ofNullable(this.onUnableToRedeployFailedInstance);
    }

    /**
     * Deployment strategy. Value range:
     * - `Availability`: High Availability policy.
     * - `AvailabilityGroup`: the high availability policy of the deployment set group.
     * - `LowLatency`: Network low latency policy.
     * 
     * Default value: Availability.
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<String> strategy;

    /**
     * @return Deployment strategy. Value range:
     * - `Availability`: High Availability policy.
     * - `AvailabilityGroup`: the high availability policy of the deployment set group.
     * - `LowLatency`: Network low latency policy.
     * 
     * Default value: Availability.
     * 
     */
    public Optional<Output<String>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    private CustomDeploymentSetArgs() {}

    private CustomDeploymentSetArgs(CustomDeploymentSetArgs $) {
        this.customDeploymentSetName = $.customDeploymentSetName;
        this.description = $.description;
        this.groupCount = $.groupCount;
        this.onUnableToRedeployFailedInstance = $.onUnableToRedeployFailedInstance;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomDeploymentSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomDeploymentSetArgs $;

        public Builder() {
            $ = new CustomDeploymentSetArgs();
        }

        public Builder(CustomDeploymentSetArgs defaults) {
            $ = new CustomDeploymentSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDeploymentSetName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder customDeploymentSetName(@Nullable Output<String> customDeploymentSetName) {
            $.customDeploymentSetName = customDeploymentSetName;
            return this;
        }

        /**
         * @param customDeploymentSetName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder customDeploymentSetName(String customDeploymentSetName) {
            return customDeploymentSetName(Output.of(customDeploymentSetName));
        }

        /**
         * @param description Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Deployment set description information. It must be 2 to 256 characters in length and cannot start with http:// or https.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param groupCount Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
         * 
         * Default value: 3
         * 
         * &gt; **NOTE:**  This parameter takes effect only when &#39;Strategy = AvailabilityGroup.
         * 
         * @return builder
         * 
         */
        public Builder groupCount(@Nullable Output<Integer> groupCount) {
            $.groupCount = groupCount;
            return this;
        }

        /**
         * @param groupCount Set the number of groups for the deployment set group high availability policy. Value range: 1~7.
         * 
         * Default value: 3
         * 
         * &gt; **NOTE:**  This parameter takes effect only when &#39;Strategy = AvailabilityGroup.
         * 
         * @return builder
         * 
         */
        public Builder groupCount(Integer groupCount) {
            return groupCount(Output.of(groupCount));
        }

        /**
         * @param onUnableToRedeployFailedInstance After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
         * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
         * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
         * 
         * Default value: CancelMembershipAndStart.
         * 
         * @return builder
         * 
         */
        public Builder onUnableToRedeployFailedInstance(@Nullable Output<String> onUnableToRedeployFailedInstance) {
            $.onUnableToRedeployFailedInstance = onUnableToRedeployFailedInstance;
            return this;
        }

        /**
         * @param onUnableToRedeployFailedInstance After the instance in the deployment set is down and migrated, there is no emergency solution for the scattered instance inventory. Value range:
         * - `CancelMembershipAndStart`: removes the instance from the deployment set and starts the instance immediately after the instance is down and migrated.
         * - `KeepStopped`: The deployment set of the instance is maintained. The instance remains in the stopped state.
         * 
         * Default value: CancelMembershipAndStart.
         * 
         * @return builder
         * 
         */
        public Builder onUnableToRedeployFailedInstance(String onUnableToRedeployFailedInstance) {
            return onUnableToRedeployFailedInstance(Output.of(onUnableToRedeployFailedInstance));
        }

        /**
         * @param strategy Deployment strategy. Value range:
         * - `Availability`: High Availability policy.
         * - `AvailabilityGroup`: the high availability policy of the deployment set group.
         * - `LowLatency`: Network low latency policy.
         * 
         * Default value: Availability.
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy Deployment strategy. Value range:
         * - `Availability`: High Availability policy.
         * - `AvailabilityGroup`: the high availability policy of the deployment set group.
         * - `LowLatency`: Network low latency policy.
         * 
         * Default value: Availability.
         * 
         * @return builder
         * 
         */
        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public CustomDeploymentSetArgs build() {
            return $;
        }
    }

}
