// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SharedResourceState extends com.pulumi.resources.ResourceArgs {

    public static final SharedResourceState Empty = new SharedResourceState();

    /**
     * (Available since v1.259.0) The time when the shared resource was associated with the resource share.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return (Available since v1.259.0) The time when the shared resource was associated with the resource share.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID of the shared resource.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The ID of the shared resource.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * The ID of the resource share.
     * 
     */
    @Import(name="resourceShareId")
    private @Nullable Output<String> resourceShareId;

    /**
     * @return The ID of the resource share.
     * 
     */
    public Optional<Output<String>> resourceShareId() {
        return Optional.ofNullable(this.resourceShareId);
    }

    /**
     * The type of the shared resource. Valid values:
     * - `VSwitch`.
     * - The following types are added after v1.173.0: `ROSTemplate` and `ServiceCatalogPortfolio`.
     * - The following types are added after v1.192.0: `PrefixList` and `Image`.
     * - The following types are added after v1.194.1: `PublicIpAddressPool`.
     * - The following types are added after v1.208.0: `KMSInstance`.
     * - The following types are added after v1.240.0: `Snapshot`.
     * - For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](https://help.aliyun.com/zh/resource-management/resource-sharing/product-overview/services-that-work-with-resource-sharing?spm=api-workbench.API%20Document.0.0.32fff3cdFveEud)
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The type of the shared resource. Valid values:
     * - `VSwitch`.
     * - The following types are added after v1.173.0: `ROSTemplate` and `ServiceCatalogPortfolio`.
     * - The following types are added after v1.192.0: `PrefixList` and `Image`.
     * - The following types are added after v1.194.1: `PublicIpAddressPool`.
     * - The following types are added after v1.208.0: `KMSInstance`.
     * - The following types are added after v1.240.0: `Snapshot`.
     * - For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](https://help.aliyun.com/zh/resource-management/resource-sharing/product-overview/services-that-work-with-resource-sharing?spm=api-workbench.API%20Document.0.0.32fff3cdFveEud)
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The status of the Shared Resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the Shared Resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private SharedResourceState() {}

    private SharedResourceState(SharedResourceState $) {
        this.createTime = $.createTime;
        this.resourceId = $.resourceId;
        this.resourceShareId = $.resourceShareId;
        this.resourceType = $.resourceType;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedResourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedResourceState $;

        public Builder() {
            $ = new SharedResourceState();
        }

        public Builder(SharedResourceState defaults) {
            $ = new SharedResourceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime (Available since v1.259.0) The time when the shared resource was associated with the resource share.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime (Available since v1.259.0) The time when the shared resource was associated with the resource share.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param resourceId The ID of the shared resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the shared resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceShareId The ID of the resource share.
         * 
         * @return builder
         * 
         */
        public Builder resourceShareId(@Nullable Output<String> resourceShareId) {
            $.resourceShareId = resourceShareId;
            return this;
        }

        /**
         * @param resourceShareId The ID of the resource share.
         * 
         * @return builder
         * 
         */
        public Builder resourceShareId(String resourceShareId) {
            return resourceShareId(Output.of(resourceShareId));
        }

        /**
         * @param resourceType The type of the shared resource. Valid values:
         * - `VSwitch`.
         * - The following types are added after v1.173.0: `ROSTemplate` and `ServiceCatalogPortfolio`.
         * - The following types are added after v1.192.0: `PrefixList` and `Image`.
         * - The following types are added after v1.194.1: `PublicIpAddressPool`.
         * - The following types are added after v1.208.0: `KMSInstance`.
         * - The following types are added after v1.240.0: `Snapshot`.
         * - For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](https://help.aliyun.com/zh/resource-management/resource-sharing/product-overview/services-that-work-with-resource-sharing?spm=api-workbench.API%20Document.0.0.32fff3cdFveEud)
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of the shared resource. Valid values:
         * - `VSwitch`.
         * - The following types are added after v1.173.0: `ROSTemplate` and `ServiceCatalogPortfolio`.
         * - The following types are added after v1.192.0: `PrefixList` and `Image`.
         * - The following types are added after v1.194.1: `PublicIpAddressPool`.
         * - The following types are added after v1.208.0: `KMSInstance`.
         * - The following types are added after v1.240.0: `Snapshot`.
         * - For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](https://help.aliyun.com/zh/resource-management/resource-sharing/product-overview/services-that-work-with-resource-sharing?spm=api-workbench.API%20Document.0.0.32fff3cdFveEud)
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param status The status of the Shared Resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the Shared Resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public SharedResourceState build() {
            return $;
        }
    }

}
