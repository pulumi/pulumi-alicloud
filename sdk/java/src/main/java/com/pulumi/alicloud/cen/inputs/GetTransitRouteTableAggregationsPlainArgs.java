// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTransitRouteTableAggregationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitRouteTableAggregationsPlainArgs Empty = new GetTransitRouteTableAggregationsPlainArgs();

    /**
     * A list of Transit Route Table Aggregation IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Transit Route Table Aggregation IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Transit Route Table Aggregation name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Transit Route Table Aggregation name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="outputFile")
    private @Nullable String outputFile;

    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The destination CIDR block of the aggregate route.
     * 
     */
    @Import(name="transitRouteTableAggregationCidr")
    private @Nullable String transitRouteTableAggregationCidr;

    /**
     * @return The destination CIDR block of the aggregate route.
     * 
     */
    public Optional<String> transitRouteTableAggregationCidr() {
        return Optional.ofNullable(this.transitRouteTableAggregationCidr);
    }

    /**
     * The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    @Import(name="transitRouteTableId", required=true)
    private String transitRouteTableId;

    /**
     * @return The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    public String transitRouteTableId() {
        return this.transitRouteTableId;
    }

    private GetTransitRouteTableAggregationsPlainArgs() {}

    private GetTransitRouteTableAggregationsPlainArgs(GetTransitRouteTableAggregationsPlainArgs $) {
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.transitRouteTableAggregationCidr = $.transitRouteTableAggregationCidr;
        this.transitRouteTableId = $.transitRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitRouteTableAggregationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitRouteTableAggregationsPlainArgs $;

        public Builder() {
            $ = new GetTransitRouteTableAggregationsPlainArgs();
        }

        public Builder(GetTransitRouteTableAggregationsPlainArgs defaults) {
            $ = new GetTransitRouteTableAggregationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Transit Route Table Aggregation IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Transit Route Table Aggregation IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Transit Route Table Aggregation name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param transitRouteTableAggregationCidr The destination CIDR block of the aggregate route.
         * 
         * @return builder
         * 
         */
        public Builder transitRouteTableAggregationCidr(@Nullable String transitRouteTableAggregationCidr) {
            $.transitRouteTableAggregationCidr = transitRouteTableAggregationCidr;
            return this;
        }

        /**
         * @param transitRouteTableId The ID of the route table of the Enterprise Edition transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouteTableId(String transitRouteTableId) {
            $.transitRouteTableId = transitRouteTableId;
            return this;
        }

        public GetTransitRouteTableAggregationsPlainArgs build() {
            $.transitRouteTableId = Objects.requireNonNull($.transitRouteTableId, "expected parameter 'transitRouteTableId' to be non-null");
            return $;
        }
    }

}
