// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectoryMfaAuthenticationSettingInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DirectoryMfaAuthenticationSettingInfoArgs Empty = new DirectoryMfaAuthenticationSettingInfoArgs();

    /**
     * Global MFA validation policy
     * 
     */
    @Import(name="mfaAuthenticationAdvanceSettings")
    private @Nullable Output<String> mfaAuthenticationAdvanceSettings;

    /**
     * @return Global MFA validation policy
     * 
     */
    public Optional<Output<String>> mfaAuthenticationAdvanceSettings() {
        return Optional.ofNullable(this.mfaAuthenticationAdvanceSettings);
    }

    /**
     * MFA verification policy for abnormal logon.
     * 
     */
    @Import(name="operationForRiskLogin")
    private @Nullable Output<String> operationForRiskLogin;

    /**
     * @return MFA verification policy for abnormal logon.
     * 
     */
    public Optional<Output<String>> operationForRiskLogin() {
        return Optional.ofNullable(this.operationForRiskLogin);
    }

    private DirectoryMfaAuthenticationSettingInfoArgs() {}

    private DirectoryMfaAuthenticationSettingInfoArgs(DirectoryMfaAuthenticationSettingInfoArgs $) {
        this.mfaAuthenticationAdvanceSettings = $.mfaAuthenticationAdvanceSettings;
        this.operationForRiskLogin = $.operationForRiskLogin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectoryMfaAuthenticationSettingInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectoryMfaAuthenticationSettingInfoArgs $;

        public Builder() {
            $ = new DirectoryMfaAuthenticationSettingInfoArgs();
        }

        public Builder(DirectoryMfaAuthenticationSettingInfoArgs defaults) {
            $ = new DirectoryMfaAuthenticationSettingInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mfaAuthenticationAdvanceSettings Global MFA validation policy
         * 
         * @return builder
         * 
         */
        public Builder mfaAuthenticationAdvanceSettings(@Nullable Output<String> mfaAuthenticationAdvanceSettings) {
            $.mfaAuthenticationAdvanceSettings = mfaAuthenticationAdvanceSettings;
            return this;
        }

        /**
         * @param mfaAuthenticationAdvanceSettings Global MFA validation policy
         * 
         * @return builder
         * 
         */
        public Builder mfaAuthenticationAdvanceSettings(String mfaAuthenticationAdvanceSettings) {
            return mfaAuthenticationAdvanceSettings(Output.of(mfaAuthenticationAdvanceSettings));
        }

        /**
         * @param operationForRiskLogin MFA verification policy for abnormal logon.
         * 
         * @return builder
         * 
         */
        public Builder operationForRiskLogin(@Nullable Output<String> operationForRiskLogin) {
            $.operationForRiskLogin = operationForRiskLogin;
            return this;
        }

        /**
         * @param operationForRiskLogin MFA verification policy for abnormal logon.
         * 
         * @return builder
         * 
         */
        public Builder operationForRiskLogin(String operationForRiskLogin) {
            return operationForRiskLogin(Output.of(operationForRiskLogin));
        }

        public DirectoryMfaAuthenticationSettingInfoArgs build() {
            return $;
        }
    }

}
