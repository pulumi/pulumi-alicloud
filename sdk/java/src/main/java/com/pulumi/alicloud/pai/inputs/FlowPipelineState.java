// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowPipelineState extends com.pulumi.resources.ResourceArgs {

    public static final FlowPipelineState Empty = new FlowPipelineState();

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The pipeline definition. For more information, see the sample pipeline definition).
     * 
     */
    @Import(name="manifest")
    private @Nullable Output<String> manifest;

    /**
     * @return The pipeline definition. For more information, see the sample pipeline definition).
     * 
     */
    public Optional<Output<String>> manifest() {
        return Optional.ofNullable(this.manifest);
    }

    /**
     * The ID of the workspace.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return The ID of the workspace.
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private FlowPipelineState() {}

    private FlowPipelineState(FlowPipelineState $) {
        this.createTime = $.createTime;
        this.manifest = $.manifest;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowPipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowPipelineState $;

        public Builder() {
            $ = new FlowPipelineState();
        }

        public Builder(FlowPipelineState defaults) {
            $ = new FlowPipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param manifest The pipeline definition. For more information, see the sample pipeline definition).
         * 
         * @return builder
         * 
         */
        public Builder manifest(@Nullable Output<String> manifest) {
            $.manifest = manifest;
            return this;
        }

        /**
         * @param manifest The pipeline definition. For more information, see the sample pipeline definition).
         * 
         * @return builder
         * 
         */
        public Builder manifest(String manifest) {
            return manifest(Output.of(manifest));
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public FlowPipelineState build() {
            return $;
        }
    }

}
