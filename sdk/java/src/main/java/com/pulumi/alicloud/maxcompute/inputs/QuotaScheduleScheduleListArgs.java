// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.alicloud.maxcompute.inputs.QuotaScheduleScheduleListConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuotaScheduleScheduleListArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuotaScheduleScheduleListArgs Empty = new QuotaScheduleScheduleListArgs();

    /**
     * The value of effective condition. See `condition` below.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<QuotaScheduleScheduleListConditionArgs> condition;

    /**
     * @return The value of effective condition. See `condition` below.
     * 
     */
    public Optional<Output<QuotaScheduleScheduleListConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * The name of the quota plan.
     * 
     */
    @Import(name="plan", required=true)
    private Output<String> plan;

    /**
     * @return The name of the quota plan.
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }

    /**
     * The type of the quota plan. Valid values: daily
     * 
     * &gt; **NOTE:** Currently, only daily is supported.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the quota plan. Valid values: daily
     * 
     * &gt; **NOTE:** Currently, only daily is supported.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private QuotaScheduleScheduleListArgs() {}

    private QuotaScheduleScheduleListArgs(QuotaScheduleScheduleListArgs $) {
        this.condition = $.condition;
        this.plan = $.plan;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaScheduleScheduleListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaScheduleScheduleListArgs $;

        public Builder() {
            $ = new QuotaScheduleScheduleListArgs();
        }

        public Builder(QuotaScheduleScheduleListArgs defaults) {
            $ = new QuotaScheduleScheduleListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition The value of effective condition. See `condition` below.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<QuotaScheduleScheduleListConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition The value of effective condition. See `condition` below.
         * 
         * @return builder
         * 
         */
        public Builder condition(QuotaScheduleScheduleListConditionArgs condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param plan The name of the quota plan.
         * 
         * @return builder
         * 
         */
        public Builder plan(Output<String> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan The name of the quota plan.
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param type The type of the quota plan. Valid values: daily
         * 
         * &gt; **NOTE:** Currently, only daily is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the quota plan. Valid values: daily
         * 
         * &gt; **NOTE:** Currently, only daily is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public QuotaScheduleScheduleListArgs build() {
            if ($.plan == null) {
                throw new MissingRequiredPropertyException("QuotaScheduleScheduleListArgs", "plan");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("QuotaScheduleScheduleListArgs", "type");
            }
            return $;
        }
    }

}
