// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionCustomContainerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionCustomContainerConfigArgs Empty = new FunctionCustomContainerConfigArgs();

    /**
     * The args field specifies the arguments passed to the command.
     * 
     */
    @Import(name="args")
    private @Nullable Output<String> args;

    /**
     * @return The args field specifies the arguments passed to the command.
     * 
     */
    public Optional<Output<String>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * The entry point of the container, which specifies the actual command run by the container.
     * 
     */
    @Import(name="command")
    private @Nullable Output<String> command;

    /**
     * @return The entry point of the container, which specifies the actual command run by the container.
     * 
     */
    public Optional<Output<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * The container image address.
     * 
     */
    @Import(name="image", required=true)
    private Output<String> image;

    /**
     * @return The container image address.
     * 
     */
    public Output<String> image() {
        return this.image;
    }

    private FunctionCustomContainerConfigArgs() {}

    private FunctionCustomContainerConfigArgs(FunctionCustomContainerConfigArgs $) {
        this.args = $.args;
        this.command = $.command;
        this.image = $.image;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionCustomContainerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionCustomContainerConfigArgs $;

        public Builder() {
            $ = new FunctionCustomContainerConfigArgs();
        }

        public Builder(FunctionCustomContainerConfigArgs defaults) {
            $ = new FunctionCustomContainerConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param args The args field specifies the arguments passed to the command.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<String> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args The args field specifies the arguments passed to the command.
         * 
         * @return builder
         * 
         */
        public Builder args(String args) {
            return args(Output.of(args));
        }

        /**
         * @param command The entry point of the container, which specifies the actual command run by the container.
         * 
         * @return builder
         * 
         */
        public Builder command(@Nullable Output<String> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command The entry point of the container, which specifies the actual command run by the container.
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param image The container image address.
         * 
         * @return builder
         * 
         */
        public Builder image(Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image The container image address.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        public FunctionCustomContainerConfigArgs build() {
            if ($.image == null) {
                throw new MissingRequiredPropertyException("FunctionCustomContainerConfigArgs", "image");
            }
            return $;
        }
    }

}
