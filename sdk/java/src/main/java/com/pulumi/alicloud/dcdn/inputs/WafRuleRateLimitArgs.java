// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dcdn.inputs;

import com.pulumi.alicloud.dcdn.inputs.WafRuleRateLimitStatusArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WafRuleRateLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final WafRuleRateLimitArgs Empty = new WafRuleRateLimitArgs();

    /**
     * Statistical duration, 5-1800.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    /**
     * @return Statistical duration, 5-1800.
     * 
     */
    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * The status of the waf rule. Valid values: `on` and `off`. Default value: on.
     * 
     */
    @Import(name="status")
    private @Nullable Output<WafRuleRateLimitStatusArgs> status;

    /**
     * @return The status of the waf rule. Valid values: `on` and `off`. Default value: on.
     * 
     */
    public Optional<Output<WafRuleRateLimitStatusArgs>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The match subfield.
     * 
     */
    @Import(name="subKey")
    private @Nullable Output<String> subKey;

    /**
     * @return The match subfield.
     * 
     */
    public Optional<Output<String>> subKey() {
        return Optional.ofNullable(this.subKey);
    }

    /**
     * The statistical field for frequency control. Currently, `IP`, `Header`, `Query String Parameter`, `Cookie Name`, `Session` is supported.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return The statistical field for frequency control. Currently, `IP`, `Header`, `Query String Parameter`, `Cookie Name`, `Session` is supported.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<Integer> threshold;

    /**
     * @return The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
     * 
     */
    public Optional<Output<Integer>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    /**
     * The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private WafRuleRateLimitArgs() {}

    private WafRuleRateLimitArgs(WafRuleRateLimitArgs $) {
        this.interval = $.interval;
        this.status = $.status;
        this.subKey = $.subKey;
        this.target = $.target;
        this.threshold = $.threshold;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WafRuleRateLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WafRuleRateLimitArgs $;

        public Builder() {
            $ = new WafRuleRateLimitArgs();
        }

        public Builder(WafRuleRateLimitArgs defaults) {
            $ = new WafRuleRateLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interval Statistical duration, 5-1800.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval Statistical duration, 5-1800.
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param status The status of the waf rule. Valid values: `on` and `off`. Default value: on.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<WafRuleRateLimitStatusArgs> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the waf rule. Valid values: `on` and `off`. Default value: on.
         * 
         * @return builder
         * 
         */
        public Builder status(WafRuleRateLimitStatusArgs status) {
            return status(Output.of(status));
        }

        /**
         * @param subKey The match subfield.
         * 
         * @return builder
         * 
         */
        public Builder subKey(@Nullable Output<String> subKey) {
            $.subKey = subKey;
            return this;
        }

        /**
         * @param subKey The match subfield.
         * 
         * @return builder
         * 
         */
        public Builder subKey(String subKey) {
            return subKey(Output.of(subKey));
        }

        /**
         * @param target The statistical field for frequency control. Currently, `IP`, `Header`, `Query String Parameter`, `Cookie Name`, `Session` is supported.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target The statistical field for frequency control. Currently, `IP`, `Header`, `Query String Parameter`, `Cookie Name`, `Session` is supported.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param threshold The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
         * 
         * @return builder
         * 
         */
        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        /**
         * @param ttl The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public WafRuleRateLimitArgs build() {
            return $;
        }
    }

}
