// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpamIpamPoolAllocationsAllocation {
    /**
     * @return The allocated address segment.
     * 
     */
    private String cidr;
    /**
     * @return Instance creation time.
     * 
     */
    private String createTime;
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    private String id;
    /**
     * @return The description of the ipam pool alloctaion.It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    private String ipamPoolAllocationDescription;
    /**
     * @return The instance ID of the ipam pool allocation.
     * 
     */
    private String ipamPoolAllocationId;
    /**
     * @return The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    private String ipamPoolAllocationName;
    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    private String ipamPoolId;
    /**
     * @return When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
     * 
     */
    private String regionId;
    /**
     * @return The ID of the resource.
     * 
     */
    private String resourceId;
    /**
     * @return The ID of the Alibaba Cloud account (primary account) to which the resource belongs.
     * 
     */
    private Integer resourceOwnerId;
    /**
     * @return The region of the resource.
     * 
     */
    private String resourceRegionId;
    /**
     * @return The type of resource. Value:-**VPC**: indicates that the resource type is VPC.-**IpamPool**: indicates that the resource type is a child address pool.-**Custom**: indicates that the resource type is a Custom reserved CIDR block.
     * 
     */
    private String resourceType;
    /**
     * @return The source address segment.
     * 
     */
    private String sourceCidr;
    /**
     * @return The status of the instance. Value:-**Created**: indicates that the creation is complete.
     * 
     */
    private String status;
    /**
     * @return Total number of records.
     * 
     */
    private Integer totalCount;

    private GetIpamIpamPoolAllocationsAllocation() {}
    /**
     * @return The allocated address segment.
     * 
     */
    public String cidr() {
        return this.cidr;
    }
    /**
     * @return Instance creation time.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The description of the ipam pool alloctaion.It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    public String ipamPoolAllocationDescription() {
        return this.ipamPoolAllocationDescription;
    }
    /**
     * @return The instance ID of the ipam pool allocation.
     * 
     */
    public String ipamPoolAllocationId() {
        return this.ipamPoolAllocationId;
    }
    /**
     * @return The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    public String ipamPoolAllocationName() {
        return this.ipamPoolAllocationName;
    }
    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    public String ipamPoolId() {
        return this.ipamPoolId;
    }
    /**
     * @return When the IPAM Pool to which CIDR is allocated has the region attribute, this attribute is the IPAM Pool region.When the IPAM Pool to which CIDR is allocated does not have the region attribute, this attribute is the IPAM region.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The ID of the resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The ID of the Alibaba Cloud account (primary account) to which the resource belongs.
     * 
     */
    public Integer resourceOwnerId() {
        return this.resourceOwnerId;
    }
    /**
     * @return The region of the resource.
     * 
     */
    public String resourceRegionId() {
        return this.resourceRegionId;
    }
    /**
     * @return The type of resource. Value:-**VPC**: indicates that the resource type is VPC.-**IpamPool**: indicates that the resource type is a child address pool.-**Custom**: indicates that the resource type is a Custom reserved CIDR block.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The source address segment.
     * 
     */
    public String sourceCidr() {
        return this.sourceCidr;
    }
    /**
     * @return The status of the instance. Value:-**Created**: indicates that the creation is complete.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Total number of records.
     * 
     */
    public Integer totalCount() {
        return this.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpamIpamPoolAllocationsAllocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidr;
        private String createTime;
        private String id;
        private String ipamPoolAllocationDescription;
        private String ipamPoolAllocationId;
        private String ipamPoolAllocationName;
        private String ipamPoolId;
        private String regionId;
        private String resourceId;
        private Integer resourceOwnerId;
        private String resourceRegionId;
        private String resourceType;
        private String sourceCidr;
        private String status;
        private Integer totalCount;
        public Builder() {}
        public Builder(GetIpamIpamPoolAllocationsAllocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.ipamPoolAllocationDescription = defaults.ipamPoolAllocationDescription;
    	      this.ipamPoolAllocationId = defaults.ipamPoolAllocationId;
    	      this.ipamPoolAllocationName = defaults.ipamPoolAllocationName;
    	      this.ipamPoolId = defaults.ipamPoolId;
    	      this.regionId = defaults.regionId;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceOwnerId = defaults.resourceOwnerId;
    	      this.resourceRegionId = defaults.resourceRegionId;
    	      this.resourceType = defaults.resourceType;
    	      this.sourceCidr = defaults.sourceCidr;
    	      this.status = defaults.status;
    	      this.totalCount = defaults.totalCount;
        }

        @CustomType.Setter
        public Builder cidr(String cidr) {
            if (cidr == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "cidr");
            }
            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolAllocationDescription(String ipamPoolAllocationDescription) {
            if (ipamPoolAllocationDescription == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "ipamPoolAllocationDescription");
            }
            this.ipamPoolAllocationDescription = ipamPoolAllocationDescription;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolAllocationId(String ipamPoolAllocationId) {
            if (ipamPoolAllocationId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "ipamPoolAllocationId");
            }
            this.ipamPoolAllocationId = ipamPoolAllocationId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolAllocationName(String ipamPoolAllocationName) {
            if (ipamPoolAllocationName == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "ipamPoolAllocationName");
            }
            this.ipamPoolAllocationName = ipamPoolAllocationName;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolId(String ipamPoolId) {
            if (ipamPoolId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "ipamPoolId");
            }
            this.ipamPoolId = ipamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceOwnerId(Integer resourceOwnerId) {
            if (resourceOwnerId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "resourceOwnerId");
            }
            this.resourceOwnerId = resourceOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRegionId(String resourceRegionId) {
            if (resourceRegionId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "resourceRegionId");
            }
            this.resourceRegionId = resourceRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCidr(String sourceCidr) {
            if (sourceCidr == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "sourceCidr");
            }
            this.sourceCidr = sourceCidr;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder totalCount(Integer totalCount) {
            if (totalCount == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsAllocation", "totalCount");
            }
            this.totalCount = totalCount;
            return this;
        }
        public GetIpamIpamPoolAllocationsAllocation build() {
            final var _resultValue = new GetIpamIpamPoolAllocationsAllocation();
            _resultValue.cidr = cidr;
            _resultValue.createTime = createTime;
            _resultValue.id = id;
            _resultValue.ipamPoolAllocationDescription = ipamPoolAllocationDescription;
            _resultValue.ipamPoolAllocationId = ipamPoolAllocationId;
            _resultValue.ipamPoolAllocationName = ipamPoolAllocationName;
            _resultValue.ipamPoolId = ipamPoolId;
            _resultValue.regionId = regionId;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceOwnerId = resourceOwnerId;
            _resultValue.resourceRegionId = resourceRegionId;
            _resultValue.resourceType = resourceType;
            _resultValue.sourceCidr = sourceCidr;
            _resultValue.status = status;
            _resultValue.totalCount = totalCount;
            return _resultValue;
        }
    }
}
