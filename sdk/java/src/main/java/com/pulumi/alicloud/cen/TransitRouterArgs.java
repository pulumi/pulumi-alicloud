// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterArgs Empty = new TransitRouterArgs();

    /**
     * The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    @Import(name="cenId", required=true)
    private Output<String> cenId;

    /**
     * @return The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }

    /**
     * The dry run.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
     * 
     */
    @Import(name="supportMulticast")
    private @Nullable Output<Boolean> supportMulticast;

    /**
     * @return Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
     * 
     */
    public Optional<Output<Boolean>> supportMulticast() {
        return Optional.ofNullable(this.supportMulticast);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The description of the Enterprise Edition transit router instance.
     * The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
     * 
     */
    @Import(name="transitRouterDescription")
    private @Nullable Output<String> transitRouterDescription;

    /**
     * @return The description of the Enterprise Edition transit router instance.
     * The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
     * 
     */
    public Optional<Output<String>> transitRouterDescription() {
        return Optional.ofNullable(this.transitRouterDescription);
    }

    /**
     * The name of the Enterprise Edition transit router.
     * The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
     * 
     */
    @Import(name="transitRouterName")
    private @Nullable Output<String> transitRouterName;

    /**
     * @return The name of the Enterprise Edition transit router.
     * The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
     * 
     */
    public Optional<Output<String>> transitRouterName() {
        return Optional.ofNullable(this.transitRouterName);
    }

    private TransitRouterArgs() {}

    private TransitRouterArgs(TransitRouterArgs $) {
        this.cenId = $.cenId;
        this.dryRun = $.dryRun;
        this.supportMulticast = $.supportMulticast;
        this.tags = $.tags;
        this.transitRouterDescription = $.transitRouterDescription;
        this.transitRouterName = $.transitRouterName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterArgs $;

        public Builder() {
            $ = new TransitRouterArgs();
        }

        public Builder(TransitRouterArgs defaults) {
            $ = new TransitRouterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId The ID of the Cloud Enterprise Network (CEN) instance.
         * 
         * @return builder
         * 
         */
        public Builder cenId(Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the Cloud Enterprise Network (CEN) instance.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param supportMulticast Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder supportMulticast(@Nullable Output<Boolean> supportMulticast) {
            $.supportMulticast = supportMulticast;
            return this;
        }

        /**
         * @param supportMulticast Specifies whether to enable the multicast feature for the Enterprise Edition transit router. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder supportMulticast(Boolean supportMulticast) {
            return supportMulticast(Output.of(supportMulticast));
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param transitRouterDescription The description of the Enterprise Edition transit router instance.
         * The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterDescription(@Nullable Output<String> transitRouterDescription) {
            $.transitRouterDescription = transitRouterDescription;
            return this;
        }

        /**
         * @param transitRouterDescription The description of the Enterprise Edition transit router instance.
         * The description must be 1 to 256 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterDescription(String transitRouterDescription) {
            return transitRouterDescription(Output.of(transitRouterDescription));
        }

        /**
         * @param transitRouterName The name of the Enterprise Edition transit router.
         * The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterName(@Nullable Output<String> transitRouterName) {
            $.transitRouterName = transitRouterName;
            return this;
        }

        /**
         * @param transitRouterName The name of the Enterprise Edition transit router.
         * The name must be 1 to 128 characters in length, and cannot start with http:// or https://. You can also leave this parameter empty.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterName(String transitRouterName) {
            return transitRouterName(Output.of(transitRouterName));
        }

        public TransitRouterArgs build() {
            if ($.cenId == null) {
                throw new MissingRequiredPropertyException("TransitRouterArgs", "cenId");
            }
            return $;
        }
    }

}
