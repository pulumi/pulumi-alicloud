// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeliveriesDelivery {
    /**
     * @return The Aliyun User Id.
     * 
     */
    private String accountId;
    /**
     * @return Open or close delivery configuration change history.
     * 
     */
    private Boolean configurationItemChangeNotification;
    /**
     * @return Open or close timed snapshot of shipping resources.
     * 
     */
    private Boolean configurationSnapshot;
    /**
     * @return The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
     * 
     */
    private String deliveryChannelAssumeRoleArn;
    /**
     * @return The rule attached to the delivery method.
     * 
     */
    private String deliveryChannelCondition;
    /**
     * @return The ID of the delivery method.
     * 
     */
    private String deliveryChannelId;
    /**
     * @return The name of the delivery method.
     * 
     */
    private String deliveryChannelName;
    /**
     * @return The ARN of the delivery destination.
     * 
     */
    private String deliveryChannelTargetArn;
    /**
     * @return The type of the delivery method.
     * 
     */
    private String deliveryChannelType;
    /**
     * @return The description of the delivery method.
     * 
     */
    private String description;
    /**
     * @return The ID of the Delivery.
     * 
     */
    private String id;
    /**
     * @return Open or close non-compliance events of delivery resources.
     * 
     */
    private Boolean nonCompliantNotification;
    /**
     * @return The oss ARN of the delivery channel when the value data oversized limit.
     * 
     */
    private String oversizedDataOssTargetArn;
    /**
     * @return The status of the delivery method. Valid values: `0`: The delivery method is disabled. `1`: The delivery destination is enabled.
     * 
     */
    private Integer status;

    private GetDeliveriesDelivery() {}
    /**
     * @return The Aliyun User Id.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Open or close delivery configuration change history.
     * 
     */
    public Boolean configurationItemChangeNotification() {
        return this.configurationItemChangeNotification;
    }
    /**
     * @return Open or close timed snapshot of shipping resources.
     * 
     */
    public Boolean configurationSnapshot() {
        return this.configurationSnapshot;
    }
    /**
     * @return The Alibaba Cloud Resource Name (ARN) of the role to be assumed by the delivery method.
     * 
     */
    public String deliveryChannelAssumeRoleArn() {
        return this.deliveryChannelAssumeRoleArn;
    }
    /**
     * @return The rule attached to the delivery method.
     * 
     */
    public String deliveryChannelCondition() {
        return this.deliveryChannelCondition;
    }
    /**
     * @return The ID of the delivery method.
     * 
     */
    public String deliveryChannelId() {
        return this.deliveryChannelId;
    }
    /**
     * @return The name of the delivery method.
     * 
     */
    public String deliveryChannelName() {
        return this.deliveryChannelName;
    }
    /**
     * @return The ARN of the delivery destination.
     * 
     */
    public String deliveryChannelTargetArn() {
        return this.deliveryChannelTargetArn;
    }
    /**
     * @return The type of the delivery method.
     * 
     */
    public String deliveryChannelType() {
        return this.deliveryChannelType;
    }
    /**
     * @return The description of the delivery method.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Delivery.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Open or close non-compliance events of delivery resources.
     * 
     */
    public Boolean nonCompliantNotification() {
        return this.nonCompliantNotification;
    }
    /**
     * @return The oss ARN of the delivery channel when the value data oversized limit.
     * 
     */
    public String oversizedDataOssTargetArn() {
        return this.oversizedDataOssTargetArn;
    }
    /**
     * @return The status of the delivery method. Valid values: `0`: The delivery method is disabled. `1`: The delivery destination is enabled.
     * 
     */
    public Integer status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeliveriesDelivery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean configurationItemChangeNotification;
        private Boolean configurationSnapshot;
        private String deliveryChannelAssumeRoleArn;
        private String deliveryChannelCondition;
        private String deliveryChannelId;
        private String deliveryChannelName;
        private String deliveryChannelTargetArn;
        private String deliveryChannelType;
        private String description;
        private String id;
        private Boolean nonCompliantNotification;
        private String oversizedDataOssTargetArn;
        private Integer status;
        public Builder() {}
        public Builder(GetDeliveriesDelivery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.configurationItemChangeNotification = defaults.configurationItemChangeNotification;
    	      this.configurationSnapshot = defaults.configurationSnapshot;
    	      this.deliveryChannelAssumeRoleArn = defaults.deliveryChannelAssumeRoleArn;
    	      this.deliveryChannelCondition = defaults.deliveryChannelCondition;
    	      this.deliveryChannelId = defaults.deliveryChannelId;
    	      this.deliveryChannelName = defaults.deliveryChannelName;
    	      this.deliveryChannelTargetArn = defaults.deliveryChannelTargetArn;
    	      this.deliveryChannelType = defaults.deliveryChannelType;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.nonCompliantNotification = defaults.nonCompliantNotification;
    	      this.oversizedDataOssTargetArn = defaults.oversizedDataOssTargetArn;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder configurationItemChangeNotification(Boolean configurationItemChangeNotification) {
            this.configurationItemChangeNotification = Objects.requireNonNull(configurationItemChangeNotification);
            return this;
        }
        @CustomType.Setter
        public Builder configurationSnapshot(Boolean configurationSnapshot) {
            this.configurationSnapshot = Objects.requireNonNull(configurationSnapshot);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelAssumeRoleArn(String deliveryChannelAssumeRoleArn) {
            this.deliveryChannelAssumeRoleArn = Objects.requireNonNull(deliveryChannelAssumeRoleArn);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelCondition(String deliveryChannelCondition) {
            this.deliveryChannelCondition = Objects.requireNonNull(deliveryChannelCondition);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelId(String deliveryChannelId) {
            this.deliveryChannelId = Objects.requireNonNull(deliveryChannelId);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelName(String deliveryChannelName) {
            this.deliveryChannelName = Objects.requireNonNull(deliveryChannelName);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelTargetArn(String deliveryChannelTargetArn) {
            this.deliveryChannelTargetArn = Objects.requireNonNull(deliveryChannelTargetArn);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryChannelType(String deliveryChannelType) {
            this.deliveryChannelType = Objects.requireNonNull(deliveryChannelType);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder nonCompliantNotification(Boolean nonCompliantNotification) {
            this.nonCompliantNotification = Objects.requireNonNull(nonCompliantNotification);
            return this;
        }
        @CustomType.Setter
        public Builder oversizedDataOssTargetArn(String oversizedDataOssTargetArn) {
            this.oversizedDataOssTargetArn = Objects.requireNonNull(oversizedDataOssTargetArn);
            return this;
        }
        @CustomType.Setter
        public Builder status(Integer status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetDeliveriesDelivery build() {
            final var o = new GetDeliveriesDelivery();
            o.accountId = accountId;
            o.configurationItemChangeNotification = configurationItemChangeNotification;
            o.configurationSnapshot = configurationSnapshot;
            o.deliveryChannelAssumeRoleArn = deliveryChannelAssumeRoleArn;
            o.deliveryChannelCondition = deliveryChannelCondition;
            o.deliveryChannelId = deliveryChannelId;
            o.deliveryChannelName = deliveryChannelName;
            o.deliveryChannelTargetArn = deliveryChannelTargetArn;
            o.deliveryChannelType = deliveryChannelType;
            o.description = description;
            o.id = id;
            o.nonCompliantNotification = nonCompliantNotification;
            o.oversizedDataOssTargetArn = oversizedDataOssTargetArn;
            o.status = status;
            return o;
        }
    }
}
