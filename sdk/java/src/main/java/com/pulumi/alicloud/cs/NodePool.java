// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cs.NodePoolArgs;
import com.pulumi.alicloud.cs.inputs.NodePoolState;
import com.pulumi.alicloud.cs.outputs.NodePoolDataDisk;
import com.pulumi.alicloud.cs.outputs.NodePoolKubeletConfiguration;
import com.pulumi.alicloud.cs.outputs.NodePoolLabel;
import com.pulumi.alicloud.cs.outputs.NodePoolManagement;
import com.pulumi.alicloud.cs.outputs.NodePoolRollingPolicy;
import com.pulumi.alicloud.cs.outputs.NodePoolRolloutPolicy;
import com.pulumi.alicloud.cs.outputs.NodePoolScalingConfig;
import com.pulumi.alicloud.cs.outputs.NodePoolSpotPriceLimit;
import com.pulumi.alicloud.cs.outputs.NodePoolTaint;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Cluster nodepool can be imported using the id, e.g. Then complete the nodepool.tf accords to the result of `pulumi preview`.
 * 
 * ```sh
 *  $ pulumi import alicloud:cs/nodePool:NodePool custom_nodepool cluster_id:nodepool_id
 * ```
 * 
 */
@ResourceType(type="alicloud:cs/nodePool:NodePool")
public class NodePool extends com.pulumi.resources.CustomResource {
    /**
     * Enable Node payment auto-renew, default is `false`.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Enable Node payment auto-renew, default is `false`.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * Node payment auto-renew period, one of `1`, `2`, `3`,`6`, `12`.
     * 
     */
    @Export(name="autoRenewPeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoRenewPeriod;

    /**
     * @return Node payment auto-renew period, one of `1`, `2`, `3`,`6`, `12`.
     * 
     */
    public Output<Optional<Integer>> autoRenewPeriod() {
        return Codegen.optional(this.autoRenewPeriod);
    }
    /**
     * Whether enable worker node to support cis security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. See [CIS Reinforcement](https://help.aliyun.com/document_detail/223744.html).
     * 
     */
    @Export(name="cisEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cisEnabled;

    /**
     * @return Whether enable worker node to support cis security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. See [CIS Reinforcement](https://help.aliyun.com/document_detail/223744.html).
     * 
     */
    public Output<Optional<Boolean>> cisEnabled() {
        return Codegen.optional(this.cisEnabled);
    }
    /**
     * The id of kubernetes cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The id of kubernetes cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Kubelet cpu policy. For Kubernetes 1.12.6 and later, its valid value is either `static` or `none`. Default to `none` and modification is not supported.
     * 
     */
    @Export(name="cpuPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cpuPolicy;

    /**
     * @return Kubelet cpu policy. For Kubernetes 1.12.6 and later, its valid value is either `static` or `none`. Default to `none` and modification is not supported.
     * 
     */
    public Output<Optional<String>> cpuPolicy() {
        return Codegen.optional(this.cpuPolicy);
    }
    /**
     * The data disk configurations of worker nodes, such as the disk type and disk size. See `data_disks` below.
     * 
     */
    @Export(name="dataDisks", refs={List.class,NodePoolDataDisk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NodePoolDataDisk>> dataDisks;

    /**
     * @return The data disk configurations of worker nodes, such as the disk type and disk size. See `data_disks` below.
     * 
     */
    public Output<Optional<List<NodePoolDataDisk>>> dataDisks() {
        return Codegen.optional(this.dataDisks);
    }
    /**
     * The deployment set of node pool. Specify the deploymentSet to ensure that the nodes in the node pool can be distributed on different physical machines.
     * 
     */
    @Export(name="deploymentSetId", refs={String.class}, tree="[0]")
    private Output<String> deploymentSetId;

    /**
     * @return The deployment set of node pool. Specify the deploymentSet to ensure that the nodes in the node pool can be distributed on different physical machines.
     * 
     */
    public Output<String> deploymentSetId() {
        return this.deploymentSetId;
    }
    /**
     * The desired size of nodes of the node pool. From version 1.158.0, `desired_size` is not required.
     * 
     */
    @Export(name="desiredSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> desiredSize;

    /**
     * @return The desired size of nodes of the node pool. From version 1.158.0, `desired_size` is not required.
     * 
     */
    public Output<Integer> desiredSize() {
        return this.desiredSize;
    }
    /**
     * After you select this check box, if data disks have been attached to the specified ECS instances and the file system of the last data disk is uninitialized, the system automatically formats the last data disk to ext4 and mounts the data disk to /var/lib/docker and /var/lib/kubelet. The original data on the disk will be cleared. Make sure that you back up data in advance. If no data disk is mounted on the ECS instance, no new data disk will be purchased. Default is `false`.
     * 
     */
    @Export(name="formatDisk", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> formatDisk;

    /**
     * @return After you select this check box, if data disks have been attached to the specified ECS instances and the file system of the last data disk is uninitialized, the system automatically formats the last data disk to ext4 and mounts the data disk to /var/lib/docker and /var/lib/kubelet. The original data on the disk will be cleared. Make sure that you back up data in advance. If no data disk is mounted on the ECS instance, no new data disk will be purchased. Default is `false`.
     * 
     */
    public Output<Boolean> formatDisk() {
        return this.formatDisk;
    }
    /**
     * Custom Image support. Must based on CentOS7 or AliyunLinux2.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output<String> imageId;

    /**
     * @return Custom Image support. Must based on CentOS7 or AliyunLinux2.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }
    /**
     * The image type, instead of `platform`. This field cannot be modified. One of `AliyunLinux`, `AliyunLinux3`, `AliyunLinux3Arm64`, `AliyunLinuxUEFI`, `CentOS`, `Windows`,`WindowsCore`,`AliyunLinux Qboot`,`ContainerOS`. If you select `Windows` or `WindowsCore`, the `passord` is required.
     * 
     */
    @Export(name="imageType", refs={String.class}, tree="[0]")
    private Output<String> imageType;

    /**
     * @return The image type, instead of `platform`. This field cannot be modified. One of `AliyunLinux`, `AliyunLinux3`, `AliyunLinux3Arm64`, `AliyunLinuxUEFI`, `CentOS`, `Windows`,`WindowsCore`,`AliyunLinux Qboot`,`ContainerOS`. If you select `Windows` or `WindowsCore`, the `passord` is required.
     * 
     */
    public Output<String> imageType() {
        return this.imageType;
    }
    /**
     * Install the cloud monitoring plug-in on the node, and you can view the monitoring information of the instance through the cloud monitoring console. Default is `true`.
     * 
     */
    @Export(name="installCloudMonitor", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> installCloudMonitor;

    /**
     * @return Install the cloud monitoring plug-in on the node, and you can view the monitoring information of the instance through the cloud monitoring console. Default is `true`.
     * 
     */
    public Output<Optional<Boolean>> installCloudMonitor() {
        return Codegen.optional(this.installCloudMonitor);
    }
    /**
     * Node payment type. Valid values: `PostPaid`, `PrePaid`, default is `PostPaid`. If value is `PrePaid`, the arguments `period`, `period_unit`, `auto_renew` and `auto_renew_period` are required.
     * 
     */
    @Export(name="instanceChargeType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceChargeType;

    /**
     * @return Node payment type. Valid values: `PostPaid`, `PrePaid`, default is `PostPaid`. If value is `PrePaid`, the arguments `period`, `period_unit`, `auto_renew` and `auto_renew_period` are required.
     * 
     */
    public Output<Optional<String>> instanceChargeType() {
        return Codegen.optional(this.instanceChargeType);
    }
    /**
     * The instance type of worker node.
     * 
     */
    @Export(name="instanceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> instanceTypes;

    /**
     * @return The instance type of worker node.
     * 
     */
    public Output<List<String>> instanceTypes() {
        return this.instanceTypes;
    }
    /**
     * The instance list. Add existing nodes under the same cluster VPC to the node pool.
     * 
     */
    @Export(name="instances", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> instances;

    /**
     * @return The instance list. Add existing nodes under the same cluster VPC to the node pool.
     * 
     */
    public Output<Optional<List<String>>> instances() {
        return Codegen.optional(this.instances);
    }
    /**
     * The billing method for network usage. Valid values `PayByBandwidth` and `PayByTraffic`. Conflict with `eip_internet_charge_type`, EIP and public network IP can only choose one.
     * 
     */
    @Export(name="internetChargeType", refs={String.class}, tree="[0]")
    private Output<String> internetChargeType;

    /**
     * @return The billing method for network usage. Valid values `PayByBandwidth` and `PayByTraffic`. Conflict with `eip_internet_charge_type`, EIP and public network IP can only choose one.
     * 
     */
    public Output<String> internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * The maximum outbound bandwidth for the public network. Unit: Mbit/s. Valid values: 0 to 100.
     * 
     */
    @Export(name="internetMaxBandwidthOut", refs={Integer.class}, tree="[0]")
    private Output<Integer> internetMaxBandwidthOut;

    /**
     * @return The maximum outbound bandwidth for the public network. Unit: Mbit/s. Valid values: 0 to 100.
     * 
     */
    public Output<Integer> internetMaxBandwidthOut() {
        return this.internetMaxBandwidthOut;
    }
    /**
     * Add an existing instance to the node pool, whether to keep the original instance name. It is recommended to set to `true`.
     * 
     */
    @Export(name="keepInstanceName", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> keepInstanceName;

    /**
     * @return Add an existing instance to the node pool, whether to keep the original instance name. It is recommended to set to `true`.
     * 
     */
    public Output<Boolean> keepInstanceName() {
        return this.keepInstanceName;
    }
    /**
     * The keypair of ssh login cluster node, you have to create it first. You have to specify one of `password` `key_name` `kms_encrypted_password` fields. Only `key_name` is supported in the management node pool.
     * 
     */
    @Export(name="keyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyName;

    /**
     * @return The keypair of ssh login cluster node, you have to create it first. You have to specify one of `password` `key_name` `kms_encrypted_password` fields. Only `key_name` is supported in the management node pool.
     * 
     */
    public Output<Optional<String>> keyName() {
        return Codegen.optional(this.keyName);
    }
    /**
     * An KMS encrypts password used to a cs kubernetes. You have to specify one of `password` `key_name` `kms_encrypted_password` fields.
     * 
     */
    @Export(name="kmsEncryptedPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsEncryptedPassword;

    /**
     * @return An KMS encrypts password used to a cs kubernetes. You have to specify one of `password` `key_name` `kms_encrypted_password` fields.
     * 
     */
    public Output<Optional<String>> kmsEncryptedPassword() {
        return Codegen.optional(this.kmsEncryptedPassword);
    }
    /**
     * An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a cs kubernetes with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    @Export(name="kmsEncryptionContext", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> kmsEncryptionContext;

    /**
     * @return An KMS encryption context used to decrypt `kms_encrypted_password` before creating or updating a cs kubernetes with `kms_encrypted_password`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kms_encrypted_password` is set.
     * 
     */
    public Output<Optional<Map<String,Object>>> kmsEncryptionContext() {
        return Codegen.optional(this.kmsEncryptionContext);
    }
    /**
     * Kubelet configuration parameters for worker nodes. See `kubelet_configuration` below. More information in [Kubelet Configuration](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/).
     * 
     */
    @Export(name="kubeletConfiguration", refs={NodePoolKubeletConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolKubeletConfiguration> kubeletConfiguration;

    /**
     * @return Kubelet configuration parameters for worker nodes. See `kubelet_configuration` below. More information in [Kubelet Configuration](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/).
     * 
     */
    public Output<Optional<NodePoolKubeletConfiguration>> kubeletConfiguration() {
        return Codegen.optional(this.kubeletConfiguration);
    }
    /**
     * A List of Kubernetes labels to assign to the nodes . Only labels that are applied with the ACK API are managed by this argument. Detailed below. More information in [Labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/). See `labels` below.
     * 
     */
    @Export(name="labels", refs={List.class,NodePoolLabel.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NodePoolLabel>> labels;

    /**
     * @return A List of Kubernetes labels to assign to the nodes . Only labels that are applied with the ACK API are managed by this argument. Detailed below. More information in [Labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/). See `labels` below.
     * 
     */
    public Output<Optional<List<NodePoolLabel>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Managed node pool configuration. When using a managed node pool, the node key must use `key_name`. See `management` below.
     * 
     */
    @Export(name="management", refs={NodePoolManagement.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolManagement> management;

    /**
     * @return Managed node pool configuration. When using a managed node pool, the node key must use `key_name`. See `management` below.
     * 
     */
    public Output<Optional<NodePoolManagement>> management() {
        return Codegen.optional(this.management);
    }
    /**
     * The name of node pool.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of node pool.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The worker node number of the node pool. From version 1.111.0, `node_count` is not required.
     * 
     * @deprecated
     * Field &#39;node_count&#39; has been deprecated from provider version 1.158.0. New field &#39;desired_size&#39; instead.
     * 
     */
    @Deprecated /* Field 'node_count' has been deprecated from provider version 1.158.0. New field 'desired_size' instead. */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return The worker node number of the node pool. From version 1.111.0, `node_count` is not required.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * Each node name consists of a prefix, its private network IP, and a suffix, the input format is `customized,&lt;prefix&gt;,ip,&lt;suffix&gt;`. For example &#34;customized,aliyun.com-,ip,-test&#34;, if the node private network IP address is 192.168.59.176, the prefix is aliyun.com-,and the suffix is -test, the node name will be aliyun.com-192.168.59.176-test.
     * 
     */
    @Export(name="nodeNameMode", refs={String.class}, tree="[0]")
    private Output<String> nodeNameMode;

    /**
     * @return Each node name consists of a prefix, its private network IP, and a suffix, the input format is `customized,&lt;prefix&gt;,ip,&lt;suffix&gt;`. For example &#34;customized,aliyun.com-,ip,-test&#34;, if the node private network IP address is 192.168.59.176, the prefix is aliyun.com-,and the suffix is -test, the node name will be aliyun.com-192.168.59.176-test.
     * 
     */
    public Output<String> nodeNameMode() {
        return this.nodeNameMode;
    }
    /**
     * The password of ssh login cluster node. You have to specify one of `password` `key_name` `kms_encrypted_password` fields.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of ssh login cluster node. You have to specify one of `password` `key_name` `kms_encrypted_password` fields.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Node payment period. Its valid value is one of {1, 2, 3, 6, 12, 24, 36, 48, 60}.
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    /**
     * @return Node payment period. Its valid value is one of {1, 2, 3, 6, 12, 24, 36, 48, 60}.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * Node payment period unit, valid value: `Month`. Default is `Month`.
     * 
     */
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> periodUnit;

    /**
     * @return Node payment period unit, valid value: `Month`. Default is `Month`.
     * 
     */
    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    /**
     * The platform. One of `AliyunLinux`, `Windows`, `CentOS`, `WindowsCore`. If you select `Windows` or `WindowsCore`, the `passord` is required. Field `platform` has been deprecated from provider version 1.145.0. New field `image_type` instead.
     * 
     * @deprecated
     * Field &#39;platform&#39; has been deprecated from provider version 1.145.0. New field &#39;image_type&#39; instead
     * 
     */
    @Deprecated /* Field 'platform' has been deprecated from provider version 1.145.0. New field 'image_type' instead */
    @Export(name="platform", refs={String.class}, tree="[0]")
    private Output<String> platform;

    /**
     * @return The platform. One of `AliyunLinux`, `Windows`, `CentOS`, `WindowsCore`. If you select `Windows` or `WindowsCore`, the `passord` is required. Field `platform` has been deprecated from provider version 1.145.0. New field `image_type` instead.
     * 
     */
    public Output<String> platform() {
        return this.platform;
    }
    /**
     * PolarDB id list, You can choose which PolarDB whitelist to add instances to.
     * 
     */
    @Export(name="polardbIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> polardbIds;

    /**
     * @return PolarDB id list, You can choose which PolarDB whitelist to add instances to.
     * 
     */
    public Output<Optional<List<String>>> polardbIds() {
        return Codegen.optional(this.polardbIds);
    }
    /**
     * RDS instance list, You can choose which RDS instances whitelist to add instances to.
     * 
     */
    @Export(name="rdsInstances", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> rdsInstances;

    /**
     * @return RDS instance list, You can choose which RDS instances whitelist to add instances to.
     * 
     */
    public Output<Optional<List<String>>> rdsInstances() {
        return Codegen.optional(this.rdsInstances);
    }
    /**
     * The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Rolling policy is used to specify the strategy when the node pool is rolling update. This field works when nodepool updating. See `rolling_policy` below.
     * 
     */
    @Export(name="rollingPolicy", refs={NodePoolRollingPolicy.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolRollingPolicy> rollingPolicy;

    /**
     * @return Rolling policy is used to specify the strategy when the node pool is rolling update. This field works when nodepool updating. See `rolling_policy` below.
     * 
     */
    public Output<Optional<NodePoolRollingPolicy>> rollingPolicy() {
        return Codegen.optional(this.rollingPolicy);
    }
    /**
     * Rollout policy is used to specify the strategy when the node pool is rolling update. This field works when node pool updating. Please use `rolling_policy` to instead it from provider version 1.185.0. See `rollout_policy` below.
     * 
     * @deprecated
     * Field &#39;rollout_policy&#39; has been deprecated from provider version 1.184.0. Please use new field &#39;rolling_policy&#39; instead it to ensure the config takes effect
     * 
     */
    @Deprecated /* Field 'rollout_policy' has been deprecated from provider version 1.184.0. Please use new field 'rolling_policy' instead it to ensure the config takes effect */
    @Export(name="rolloutPolicy", refs={NodePoolRolloutPolicy.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolRolloutPolicy> rolloutPolicy;

    /**
     * @return Rollout policy is used to specify the strategy when the node pool is rolling update. This field works when node pool updating. Please use `rolling_policy` to instead it from provider version 1.185.0. See `rollout_policy` below.
     * 
     */
    public Output<Optional<NodePoolRolloutPolicy>> rolloutPolicy() {
        return Codegen.optional(this.rolloutPolicy);
    }
    /**
     * The runtime name of containers. If not set, the cluster runtime will be used as the node pool runtime. If you select another container runtime, see [Comparison of Docker, containerd, and Sandboxed-Container](https://www.alibabacloud.com/help/doc-detail/160313.htm).
     * 
     */
    @Export(name="runtimeName", refs={String.class}, tree="[0]")
    private Output<String> runtimeName;

    /**
     * @return The runtime name of containers. If not set, the cluster runtime will be used as the node pool runtime. If you select another container runtime, see [Comparison of Docker, containerd, and Sandboxed-Container](https://www.alibabacloud.com/help/doc-detail/160313.htm).
     * 
     */
    public Output<String> runtimeName() {
        return this.runtimeName;
    }
    /**
     * The runtime version of containers. If not set, the cluster runtime will be used as the node pool runtime.
     * 
     */
    @Export(name="runtimeVersion", refs={String.class}, tree="[0]")
    private Output<String> runtimeVersion;

    /**
     * @return The runtime version of containers. If not set, the cluster runtime will be used as the node pool runtime.
     * 
     */
    public Output<String> runtimeVersion() {
        return this.runtimeVersion;
    }
    /**
     * Auto scaling node pool configuration. See `scaling_config` below. With auto-scaling is enabled, the nodes in the node pool will be labeled with `k8s.aliyun.com=true` to prevent system pods such as coredns, metrics-servers from being scheduled to elastic nodes, and to prevent node shrinkage from causing business abnormalities.
     * 
     */
    @Export(name="scalingConfig", refs={NodePoolScalingConfig.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolScalingConfig> scalingConfig;

    /**
     * @return Auto scaling node pool configuration. See `scaling_config` below. With auto-scaling is enabled, the nodes in the node pool will be labeled with `k8s.aliyun.com=true` to prevent system pods such as coredns, metrics-servers from being scheduled to elastic nodes, and to prevent node shrinkage from causing business abnormalities.
     * 
     */
    public Output<Optional<NodePoolScalingConfig>> scalingConfig() {
        return Codegen.optional(this.scalingConfig);
    }
    /**
     * The scaling group id.
     * 
     */
    @Export(name="scalingGroupId", refs={String.class}, tree="[0]")
    private Output<String> scalingGroupId;

    /**
     * @return The scaling group id.
     * 
     */
    public Output<String> scalingGroupId() {
        return this.scalingGroupId;
    }
    /**
     * The scaling mode. Valid values: `release`, `recycle`, default is `release`. Standard mode(release): Create and release ECS instances based on requests.Swift mode(recycle): Create, stop, and restart ECS instances based on needs. New ECS instances are only created when no stopped ECS instance is avalible. This mode further accelerates the scaling process. Apart from ECS instances that use local storage, when an ECS instance is stopped, you are only chatged for storage space.
     * 
     */
    @Export(name="scalingPolicy", refs={String.class}, tree="[0]")
    private Output<String> scalingPolicy;

    /**
     * @return The scaling mode. Valid values: `release`, `recycle`, default is `release`. Standard mode(release): Create and release ECS instances based on requests.Swift mode(recycle): Create, stop, and restart ECS instances based on needs. New ECS instances are only created when no stopped ECS instance is avalible. This mode further accelerates the scaling process. Apart from ECS instances that use local storage, when an ECS instance is stopped, you are only chatged for storage space.
     * 
     */
    public Output<String> scalingPolicy() {
        return this.scalingPolicy;
    }
    /**
     * The security group id for worker node. Field `security_group_id` has been deprecated from provider version 1.145.0. New field `security_group_ids` instead.
     * 
     * @deprecated
     * Field &#39;security_group_id&#39; has been deprecated from provider version 1.145.0. New field &#39;security_group_ids&#39; instead
     * 
     */
    @Deprecated /* Field 'security_group_id' has been deprecated from provider version 1.145.0. New field 'security_group_ids' instead */
    @Export(name="securityGroupId", refs={String.class}, tree="[0]")
    private Output<String> securityGroupId;

    /**
     * @return The security group id for worker node. Field `security_group_id` has been deprecated from provider version 1.145.0. New field `security_group_ids` instead.
     * 
     */
    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * Multiple security groups can be configured for a node pool. If both `security_group_ids` and `security_group_id` are configured, `security_group_ids` takes effect. This field cannot be modified.
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroupIds;

    /**
     * @return Multiple security groups can be configured for a node pool. If both `security_group_ids` and `security_group_id` are configured, `security_group_ids` takes effect. This field cannot be modified.
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * Whether enable worker node to support soc security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. See [SOC Reinforcement](https://help.aliyun.com/document_detail/196148.html).
     * &gt; **NOTE:** It is forbidden to set both `cis_enabled` and `soc_enabled` to `true`at the same time.
     * 
     */
    @Export(name="socEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> socEnabled;

    /**
     * @return Whether enable worker node to support soc security reinforcement, its valid value `true` or `false`. Default to `false` and apply to AliyunLinux series. See [SOC Reinforcement](https://help.aliyun.com/document_detail/196148.html).
     * &gt; **NOTE:** It is forbidden to set both `cis_enabled` and `soc_enabled` to `true`at the same time.
     * 
     */
    public Output<Optional<Boolean>> socEnabled() {
        return Codegen.optional(this.socEnabled);
    }
    /**
     * The maximum hourly price of the instance. This parameter takes effect only when `spot_strategy` is set to `SpotWithPriceLimit`. You could enable multiple spot instances by setting this field repeatedly. See `spot_price_limit` below.
     * 
     */
    @Export(name="spotPriceLimits", refs={List.class,NodePoolSpotPriceLimit.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NodePoolSpotPriceLimit>> spotPriceLimits;

    /**
     * @return The maximum hourly price of the instance. This parameter takes effect only when `spot_strategy` is set to `SpotWithPriceLimit`. You could enable multiple spot instances by setting this field repeatedly. See `spot_price_limit` below.
     * 
     */
    public Output<Optional<List<NodePoolSpotPriceLimit>>> spotPriceLimits() {
        return Codegen.optional(this.spotPriceLimits);
    }
    /**
     * The preemption policy for the pay-as-you-go instance. This parameter takes effect only when `instance_charge_type` is set to `PostPaid`. Valid value `SpotWithPriceLimit`,`SpotAsPriceGo` and `NoSpot`, default is `NoSpot`.
     * 
     */
    @Export(name="spotStrategy", refs={String.class}, tree="[0]")
    private Output<String> spotStrategy;

    /**
     * @return The preemption policy for the pay-as-you-go instance. This parameter takes effect only when `instance_charge_type` is set to `PostPaid`. Valid value `SpotWithPriceLimit`,`SpotAsPriceGo` and `NoSpot`, default is `NoSpot`.
     * 
     */
    public Output<String> spotStrategy() {
        return this.spotStrategy;
    }
    /**
     * The system disk category of worker node. Its valid value are `cloud_ssd`, `cloud_efficiency` and `cloud_essd`. Default to `cloud_efficiency`.
     * 
     */
    @Export(name="systemDiskCategory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemDiskCategory;

    /**
     * @return The system disk category of worker node. Its valid value are `cloud_ssd`, `cloud_efficiency` and `cloud_essd`. Default to `cloud_efficiency`.
     * 
     */
    public Output<Optional<String>> systemDiskCategory() {
        return Codegen.optional(this.systemDiskCategory);
    }
    /**
     * The encryption Algorithm for Encrypting System Disk. It takes effect when system_disk_encrypted is true. Valid values `aes-256` and `sm4-128`.
     * 
     */
    @Export(name="systemDiskEncryptAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemDiskEncryptAlgorithm;

    /**
     * @return The encryption Algorithm for Encrypting System Disk. It takes effect when system_disk_encrypted is true. Valid values `aes-256` and `sm4-128`.
     * 
     */
    public Output<Optional<String>> systemDiskEncryptAlgorithm() {
        return Codegen.optional(this.systemDiskEncryptAlgorithm);
    }
    /**
     * Whether to enable system disk encryption.
     * 
     */
    @Export(name="systemDiskEncrypted", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> systemDiskEncrypted;

    /**
     * @return Whether to enable system disk encryption.
     * 
     */
    public Output<Optional<Boolean>> systemDiskEncrypted() {
        return Codegen.optional(this.systemDiskEncrypted);
    }
    /**
     * The kms key id used to encrypt the system disk. It takes effect when system_disk_encrypted is true.
     * 
     */
    @Export(name="systemDiskKmsKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemDiskKmsKey;

    /**
     * @return The kms key id used to encrypt the system disk. It takes effect when system_disk_encrypted is true.
     * 
     */
    public Output<Optional<String>> systemDiskKmsKey() {
        return Codegen.optional(this.systemDiskKmsKey);
    }
    /**
     * The performance of system disk, only valid for ESSD disk. You have to specify one of `PL0` `PL1` `PL2` `PL3` fields.
     * 
     */
    @Export(name="systemDiskPerformanceLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemDiskPerformanceLevel;

    /**
     * @return The performance of system disk, only valid for ESSD disk. You have to specify one of `PL0` `PL1` `PL2` `PL3` fields.
     * 
     */
    public Output<Optional<String>> systemDiskPerformanceLevel() {
        return Codegen.optional(this.systemDiskPerformanceLevel);
    }
    /**
     * The system disk category of worker node. Its valid value range [40~500] in GB. Default to `120`.
     * 
     */
    @Export(name="systemDiskSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> systemDiskSize;

    /**
     * @return The system disk category of worker node. Its valid value range [40~500] in GB. Default to `120`.
     * 
     */
    public Output<Optional<Integer>> systemDiskSize() {
        return Codegen.optional(this.systemDiskSize);
    }
    /**
     * The system disk snapshot policy id.
     * 
     */
    @Export(name="systemDiskSnapshotPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemDiskSnapshotPolicyId;

    /**
     * @return The system disk snapshot policy id.
     * 
     */
    public Output<Optional<String>> systemDiskSnapshotPolicyId() {
        return Codegen.optional(this.systemDiskSnapshotPolicyId);
    }
    /**
     * A Map of tags to assign to the resource. It will be applied for ECS instances finally. Detailed below.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return A Map of tags to assign to the resource. It will be applied for ECS instances finally. Detailed below.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A List of Kubernetes taints to assign to the nodes. Detailed below. More information in [Taints and Toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/). See `taints` below.
     * 
     */
    @Export(name="taints", refs={List.class,NodePoolTaint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NodePoolTaint>> taints;

    /**
     * @return A List of Kubernetes taints to assign to the nodes. Detailed below. More information in [Taints and Toleration](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/). See `taints` below.
     * 
     */
    public Output<Optional<List<NodePoolTaint>>> taints() {
        return Codegen.optional(this.taints);
    }
    /**
     * Set the newly added node as unschedulable. If you want to open the scheduling option, you can open it in the node list of the console. If you are using an auto-scaling node pool, the setting will not take effect. Default is `false`.
     * 
     */
    @Export(name="unschedulable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> unschedulable;

    /**
     * @return Set the newly added node as unschedulable. If you want to open the scheduling option, you can open it in the node list of the console. If you are using an auto-scaling node pool, the setting will not take effect. Default is `false`.
     * 
     */
    public Output<Optional<Boolean>> unschedulable() {
        return Codegen.optional(this.unschedulable);
    }
    /**
     * Windows instances support batch and PowerShell scripts. If your script file is larger than 1 KB, we recommend that you upload the script to Object Storage Service (OSS) and pull it through the internal endpoint of your OSS bucket.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userData;

    /**
     * @return Windows instances support batch and PowerShell scripts. If your script file is larger than 1 KB, we recommend that you upload the script to Object Storage Service (OSS) and pull it through the internal endpoint of your OSS bucket.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    /**
     * The VPC of the nodes in the node pool.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The VPC of the nodes in the node pool.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The vswitches used by node pool workers.
     * 
     */
    @Export(name="vswitchIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> vswitchIds;

    /**
     * @return The vswitches used by node pool workers.
     * 
     */
    public Output<List<String>> vswitchIds() {
        return this.vswitchIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodePool(String name) {
        this(name, NodePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodePool(String name, NodePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodePool(String name, NodePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/nodePool:NodePool", name, args == null ? NodePoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NodePool(String name, Output<String> id, @Nullable NodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/nodePool:NodePool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodePool get(String name, Output<String> id, @Nullable NodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NodePool(name, id, state, options);
    }
}
