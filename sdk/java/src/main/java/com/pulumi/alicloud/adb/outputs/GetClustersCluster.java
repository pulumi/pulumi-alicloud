// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClustersCluster {
    private Integer autoRenewPeriod;
    /**
     * @return Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
     * 
     */
    private String chargeType;
    private String commodityCode;
    private String computeResource;
    private String connectionString;
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    private String createTime;
    private String dbClusterCategory;
    private String dbClusterId;
    private String dbClusterNetworkType;
    private String dbClusterType;
    private String dbClusterVersion;
    /**
     * @return The DBNodeClass of the ADB cluster.
     * 
     */
    private String dbNodeClass;
    /**
     * @return The DBNodeCount of the ADB cluster.
     * 
     */
    private Integer dbNodeCount;
    /**
     * @return The DBNodeStorage of the ADB cluster.
     * 
     */
    private Integer dbNodeStorage;
    /**
     * @return The description of the ADB cluster.
     * 
     */
    private String description;
    private String diskType;
    private String dtsJobId;
    private Integer elasticIoResource;
    private String engine;
    private String engineVersion;
    private String executorCount;
    /**
     * @return Expiration time. Pay-As-You-Go clusters never expire.
     * 
     */
    private String expireTime;
    /**
     * @return The expired of the ADB cluster.
     * 
     */
    private String expired;
    /**
     * @return The ID of the ADB cluster.
     * 
     */
    private String id;
    /**
     * @return The LockMode of the ADB cluster.
     * 
     */
    private String lockMode;
    private String lockReason;
    private String maintainTime;
    private String mode;
    /**
     * @return The DBClusterNetworkType of the ADB cluster.
     * 
     */
    private String networkType;
    private String paymentType;
    private Integer port;
    private String rdsInstanceId;
    /**
     * @return Region ID the cluster belongs to.
     * 
     */
    private String regionId;
    private String renewalStatus;
    private String resourceGroupId;
    private List<String> securityIps;
    /**
     * @return The status of the cluster. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`. For more information, see [Cluster status](https://www.alibabacloud.com/help/doc-detail/143075.htm).
     * 
     */
    private String status;
    private String storageResource;
    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    private Map<String,Object> tags;
    private String vpcCloudInstanceId;
    /**
     * @return ID of the VPC the cluster belongs to.
     * 
     */
    private String vpcId;
    private String vswitchId;
    /**
     * @return The ZoneId of the ADB cluster.
     * 
     */
    private String zoneId;

    private GetClustersCluster() {}
    public Integer autoRenewPeriod() {
        return this.autoRenewPeriod;
    }
    /**
     * @return Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
     * 
     */
    public String chargeType() {
        return this.chargeType;
    }
    public String commodityCode() {
        return this.commodityCode;
    }
    public String computeResource() {
        return this.computeResource;
    }
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    public String dbClusterCategory() {
        return this.dbClusterCategory;
    }
    public String dbClusterId() {
        return this.dbClusterId;
    }
    public String dbClusterNetworkType() {
        return this.dbClusterNetworkType;
    }
    public String dbClusterType() {
        return this.dbClusterType;
    }
    public String dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * @return The DBNodeClass of the ADB cluster.
     * 
     */
    public String dbNodeClass() {
        return this.dbNodeClass;
    }
    /**
     * @return The DBNodeCount of the ADB cluster.
     * 
     */
    public Integer dbNodeCount() {
        return this.dbNodeCount;
    }
    /**
     * @return The DBNodeStorage of the ADB cluster.
     * 
     */
    public Integer dbNodeStorage() {
        return this.dbNodeStorage;
    }
    /**
     * @return The description of the ADB cluster.
     * 
     */
    public String description() {
        return this.description;
    }
    public String diskType() {
        return this.diskType;
    }
    public String dtsJobId() {
        return this.dtsJobId;
    }
    public Integer elasticIoResource() {
        return this.elasticIoResource;
    }
    public String engine() {
        return this.engine;
    }
    public String engineVersion() {
        return this.engineVersion;
    }
    public String executorCount() {
        return this.executorCount;
    }
    /**
     * @return Expiration time. Pay-As-You-Go clusters never expire.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The expired of the ADB cluster.
     * 
     */
    public String expired() {
        return this.expired;
    }
    /**
     * @return The ID of the ADB cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The LockMode of the ADB cluster.
     * 
     */
    public String lockMode() {
        return this.lockMode;
    }
    public String lockReason() {
        return this.lockReason;
    }
    public String maintainTime() {
        return this.maintainTime;
    }
    public String mode() {
        return this.mode;
    }
    /**
     * @return The DBClusterNetworkType of the ADB cluster.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    public String paymentType() {
        return this.paymentType;
    }
    public Integer port() {
        return this.port;
    }
    public String rdsInstanceId() {
        return this.rdsInstanceId;
    }
    /**
     * @return Region ID the cluster belongs to.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    public String renewalStatus() {
        return this.renewalStatus;
    }
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    public List<String> securityIps() {
        return this.securityIps;
    }
    /**
     * @return The status of the cluster. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`. For more information, see [Cluster status](https://www.alibabacloud.com/help/doc-detail/143075.htm).
     * 
     */
    public String status() {
        return this.status;
    }
    public String storageResource() {
        return this.storageResource;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    public String vpcCloudInstanceId() {
        return this.vpcCloudInstanceId;
    }
    /**
     * @return ID of the VPC the cluster belongs to.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The ZoneId of the ADB cluster.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer autoRenewPeriod;
        private String chargeType;
        private String commodityCode;
        private String computeResource;
        private String connectionString;
        private String createTime;
        private String dbClusterCategory;
        private String dbClusterId;
        private String dbClusterNetworkType;
        private String dbClusterType;
        private String dbClusterVersion;
        private String dbNodeClass;
        private Integer dbNodeCount;
        private Integer dbNodeStorage;
        private String description;
        private String diskType;
        private String dtsJobId;
        private Integer elasticIoResource;
        private String engine;
        private String engineVersion;
        private String executorCount;
        private String expireTime;
        private String expired;
        private String id;
        private String lockMode;
        private String lockReason;
        private String maintainTime;
        private String mode;
        private String networkType;
        private String paymentType;
        private Integer port;
        private String rdsInstanceId;
        private String regionId;
        private String renewalStatus;
        private String resourceGroupId;
        private List<String> securityIps;
        private String status;
        private String storageResource;
        private Map<String,Object> tags;
        private String vpcCloudInstanceId;
        private String vpcId;
        private String vswitchId;
        private String zoneId;
        public Builder() {}
        public Builder(GetClustersCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenewPeriod = defaults.autoRenewPeriod;
    	      this.chargeType = defaults.chargeType;
    	      this.commodityCode = defaults.commodityCode;
    	      this.computeResource = defaults.computeResource;
    	      this.connectionString = defaults.connectionString;
    	      this.createTime = defaults.createTime;
    	      this.dbClusterCategory = defaults.dbClusterCategory;
    	      this.dbClusterId = defaults.dbClusterId;
    	      this.dbClusterNetworkType = defaults.dbClusterNetworkType;
    	      this.dbClusterType = defaults.dbClusterType;
    	      this.dbClusterVersion = defaults.dbClusterVersion;
    	      this.dbNodeClass = defaults.dbNodeClass;
    	      this.dbNodeCount = defaults.dbNodeCount;
    	      this.dbNodeStorage = defaults.dbNodeStorage;
    	      this.description = defaults.description;
    	      this.diskType = defaults.diskType;
    	      this.dtsJobId = defaults.dtsJobId;
    	      this.elasticIoResource = defaults.elasticIoResource;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.executorCount = defaults.executorCount;
    	      this.expireTime = defaults.expireTime;
    	      this.expired = defaults.expired;
    	      this.id = defaults.id;
    	      this.lockMode = defaults.lockMode;
    	      this.lockReason = defaults.lockReason;
    	      this.maintainTime = defaults.maintainTime;
    	      this.mode = defaults.mode;
    	      this.networkType = defaults.networkType;
    	      this.paymentType = defaults.paymentType;
    	      this.port = defaults.port;
    	      this.rdsInstanceId = defaults.rdsInstanceId;
    	      this.regionId = defaults.regionId;
    	      this.renewalStatus = defaults.renewalStatus;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityIps = defaults.securityIps;
    	      this.status = defaults.status;
    	      this.storageResource = defaults.storageResource;
    	      this.tags = defaults.tags;
    	      this.vpcCloudInstanceId = defaults.vpcCloudInstanceId;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            if (autoRenewPeriod == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "autoRenewPeriod");
            }
            this.autoRenewPeriod = autoRenewPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder chargeType(String chargeType) {
            if (chargeType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "chargeType");
            }
            this.chargeType = chargeType;
            return this;
        }
        @CustomType.Setter
        public Builder commodityCode(String commodityCode) {
            if (commodityCode == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "commodityCode");
            }
            this.commodityCode = commodityCode;
            return this;
        }
        @CustomType.Setter
        public Builder computeResource(String computeResource) {
            if (computeResource == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "computeResource");
            }
            this.computeResource = computeResource;
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(String connectionString) {
            if (connectionString == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "connectionString");
            }
            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterCategory(String dbClusterCategory) {
            if (dbClusterCategory == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbClusterCategory");
            }
            this.dbClusterCategory = dbClusterCategory;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterId(String dbClusterId) {
            if (dbClusterId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbClusterId");
            }
            this.dbClusterId = dbClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterNetworkType(String dbClusterNetworkType) {
            if (dbClusterNetworkType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbClusterNetworkType");
            }
            this.dbClusterNetworkType = dbClusterNetworkType;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterType(String dbClusterType) {
            if (dbClusterType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbClusterType");
            }
            this.dbClusterType = dbClusterType;
            return this;
        }
        @CustomType.Setter
        public Builder dbClusterVersion(String dbClusterVersion) {
            if (dbClusterVersion == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbClusterVersion");
            }
            this.dbClusterVersion = dbClusterVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeClass(String dbNodeClass) {
            if (dbNodeClass == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbNodeClass");
            }
            this.dbNodeClass = dbNodeClass;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeCount(Integer dbNodeCount) {
            if (dbNodeCount == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbNodeCount");
            }
            this.dbNodeCount = dbNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorage(Integer dbNodeStorage) {
            if (dbNodeStorage == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dbNodeStorage");
            }
            this.dbNodeStorage = dbNodeStorage;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(String diskType) {
            if (diskType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "diskType");
            }
            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder dtsJobId(String dtsJobId) {
            if (dtsJobId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "dtsJobId");
            }
            this.dtsJobId = dtsJobId;
            return this;
        }
        @CustomType.Setter
        public Builder elasticIoResource(Integer elasticIoResource) {
            if (elasticIoResource == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "elasticIoResource");
            }
            this.elasticIoResource = elasticIoResource;
            return this;
        }
        @CustomType.Setter
        public Builder engine(String engine) {
            if (engine == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "engine");
            }
            this.engine = engine;
            return this;
        }
        @CustomType.Setter
        public Builder engineVersion(String engineVersion) {
            if (engineVersion == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "engineVersion");
            }
            this.engineVersion = engineVersion;
            return this;
        }
        @CustomType.Setter
        public Builder executorCount(String executorCount) {
            if (executorCount == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "executorCount");
            }
            this.executorCount = executorCount;
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            if (expireTime == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "expireTime");
            }
            this.expireTime = expireTime;
            return this;
        }
        @CustomType.Setter
        public Builder expired(String expired) {
            if (expired == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "expired");
            }
            this.expired = expired;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lockMode(String lockMode) {
            if (lockMode == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "lockMode");
            }
            this.lockMode = lockMode;
            return this;
        }
        @CustomType.Setter
        public Builder lockReason(String lockReason) {
            if (lockReason == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "lockReason");
            }
            this.lockReason = lockReason;
            return this;
        }
        @CustomType.Setter
        public Builder maintainTime(String maintainTime) {
            if (maintainTime == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "maintainTime");
            }
            this.maintainTime = maintainTime;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            if (networkType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "networkType");
            }
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder rdsInstanceId(String rdsInstanceId) {
            if (rdsInstanceId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "rdsInstanceId");
            }
            this.rdsInstanceId = rdsInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder renewalStatus(String renewalStatus) {
            if (renewalStatus == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "renewalStatus");
            }
            this.renewalStatus = renewalStatus;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityIps(List<String> securityIps) {
            if (securityIps == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "securityIps");
            }
            this.securityIps = securityIps;
            return this;
        }
        public Builder securityIps(String... securityIps) {
            return securityIps(List.of(securityIps));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder storageResource(String storageResource) {
            if (storageResource == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "storageResource");
            }
            this.storageResource = storageResource;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcCloudInstanceId(String vpcCloudInstanceId) {
            if (vpcCloudInstanceId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "vpcCloudInstanceId");
            }
            this.vpcCloudInstanceId = vpcCloudInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetClustersCluster", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetClustersCluster build() {
            final var _resultValue = new GetClustersCluster();
            _resultValue.autoRenewPeriod = autoRenewPeriod;
            _resultValue.chargeType = chargeType;
            _resultValue.commodityCode = commodityCode;
            _resultValue.computeResource = computeResource;
            _resultValue.connectionString = connectionString;
            _resultValue.createTime = createTime;
            _resultValue.dbClusterCategory = dbClusterCategory;
            _resultValue.dbClusterId = dbClusterId;
            _resultValue.dbClusterNetworkType = dbClusterNetworkType;
            _resultValue.dbClusterType = dbClusterType;
            _resultValue.dbClusterVersion = dbClusterVersion;
            _resultValue.dbNodeClass = dbNodeClass;
            _resultValue.dbNodeCount = dbNodeCount;
            _resultValue.dbNodeStorage = dbNodeStorage;
            _resultValue.description = description;
            _resultValue.diskType = diskType;
            _resultValue.dtsJobId = dtsJobId;
            _resultValue.elasticIoResource = elasticIoResource;
            _resultValue.engine = engine;
            _resultValue.engineVersion = engineVersion;
            _resultValue.executorCount = executorCount;
            _resultValue.expireTime = expireTime;
            _resultValue.expired = expired;
            _resultValue.id = id;
            _resultValue.lockMode = lockMode;
            _resultValue.lockReason = lockReason;
            _resultValue.maintainTime = maintainTime;
            _resultValue.mode = mode;
            _resultValue.networkType = networkType;
            _resultValue.paymentType = paymentType;
            _resultValue.port = port;
            _resultValue.rdsInstanceId = rdsInstanceId;
            _resultValue.regionId = regionId;
            _resultValue.renewalStatus = renewalStatus;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.securityIps = securityIps;
            _resultValue.status = status;
            _resultValue.storageResource = storageResource;
            _resultValue.tags = tags;
            _resultValue.vpcCloudInstanceId = vpcCloudInstanceId;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
