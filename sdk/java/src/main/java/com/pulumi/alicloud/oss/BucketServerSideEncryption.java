// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.oss.BucketServerSideEncryptionArgs;
import com.pulumi.alicloud.oss.inputs.BucketServerSideEncryptionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a OSS Bucket Server Side Encryption resource. Server-side encryption rules of the bucket.
 * 
 * For information about OSS Bucket Server Side Encryption and how to use it, see [What is Bucket Server Side Encryption](https://www.alibabacloud.com/help/en/oss/developer-reference/putbucketencryption).
 * 
 * &gt; **NOTE:** Available since v1.222.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.kms.Key;
 * import com.pulumi.alicloud.kms.KeyArgs;
 * import com.pulumi.alicloud.oss.BucketServerSideEncryption;
 * import com.pulumi.alicloud.oss.BucketServerSideEncryptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         var default_ = new Integer(&#34;default&#34;, IntegerArgs.builder()        
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var createBucket = new Bucket(&#34;createBucket&#34;, BucketArgs.builder()        
 *             .storageClass(&#34;Standard&#34;)
 *             .bucket(String.format(&#34;%s-%s&#34;, name,default_.result()))
 *             .build());
 * 
 *         var getKMS = new Key(&#34;getKMS&#34;, KeyArgs.builder()        
 *             .origin(&#34;Aliyun_KMS&#34;)
 *             .protectionLevel(&#34;SOFTWARE&#34;)
 *             .description(name)
 *             .keySpec(&#34;Aliyun_AES_256&#34;)
 *             .keyUsage(&#34;ENCRYPT/DECRYPT&#34;)
 *             .automaticRotation(&#34;Disabled&#34;)
 *             .pendingWindowInDays(7)
 *             .build());
 * 
 *         var defaultBucketServerSideEncryption = new BucketServerSideEncryption(&#34;defaultBucketServerSideEncryption&#34;, BucketServerSideEncryptionArgs.builder()        
 *             .kmsDataEncryption(&#34;SM4&#34;)
 *             .kmsMasterKeyId(getKMS.id())
 *             .bucket(createBucket.bucket())
 *             .sseAlgorithm(&#34;KMS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * OSS Bucket Server Side Encryption can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:oss/bucketServerSideEncryption:BucketServerSideEncryption example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:oss/bucketServerSideEncryption:BucketServerSideEncryption")
public class BucketServerSideEncryption extends com.pulumi.resources.CustomResource {
    /**
     * The name of the bucket.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
     * 
     */
    @Export(name="kmsDataEncryption", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsDataEncryption;

    /**
     * @return The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
     * 
     */
    public Output<Optional<String>> kmsDataEncryption() {
        return Codegen.optional(this.kmsDataEncryption);
    }
    /**
     * The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
     * 
     */
    @Export(name="kmsMasterKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsMasterKeyId;

    /**
     * @return The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
     * 
     */
    public Output<Optional<String>> kmsMasterKeyId() {
        return Codegen.optional(this.kmsMasterKeyId);
    }
    /**
     * The server-side encryption method. Valid Values: KMS, AES256.
     * 
     */
    @Export(name="sseAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> sseAlgorithm;

    /**
     * @return The server-side encryption method. Valid Values: KMS, AES256.
     * 
     */
    public Output<String> sseAlgorithm() {
        return this.sseAlgorithm;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketServerSideEncryption(String name) {
        this(name, BucketServerSideEncryptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketServerSideEncryption(String name, BucketServerSideEncryptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketServerSideEncryption(String name, BucketServerSideEncryptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucketServerSideEncryption:BucketServerSideEncryption", name, args == null ? BucketServerSideEncryptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BucketServerSideEncryption(String name, Output<String> id, @Nullable BucketServerSideEncryptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucketServerSideEncryption:BucketServerSideEncryption", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketServerSideEncryption get(String name, Output<String> id, @Nullable BucketServerSideEncryptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketServerSideEncryption(name, id, state, options);
    }
}
