// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketReplicationDestination {
    /**
     * @return The destination bucket to which the data is replicated.
     * 
     */
    private String bucket;
    private String location;
    /**
     * @return The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
     * 
     */
    private @Nullable String transferType;

    private BucketReplicationDestination() {}
    /**
     * @return The destination bucket to which the data is replicated.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    public String location() {
        return this.location;
    }
    /**
     * @return The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
     * 
     */
    public Optional<String> transferType() {
        return Optional.ofNullable(this.transferType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String location;
        private @Nullable String transferType;
        public Builder() {}
        public Builder(BucketReplicationDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.location = defaults.location;
    	      this.transferType = defaults.transferType;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder transferType(@Nullable String transferType) {
            this.transferType = transferType;
            return this;
        }
        public BucketReplicationDestination build() {
            final var o = new BucketReplicationDestination();
            o.bucket = bucket;
            o.location = location;
            o.transferType = transferType;
            return o;
        }
    }
}
