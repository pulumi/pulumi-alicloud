// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBundlesBundleDisk {
    /**
     * @return The disk size attribute of the bundle.
     * 
     */
    private String diskSize;
    /**
     * @return The disk type attribute of the bundle.
     * 
     */
    private String diskType;

    private GetBundlesBundleDisk() {}
    /**
     * @return The disk size attribute of the bundle.
     * 
     */
    public String diskSize() {
        return this.diskSize;
    }
    /**
     * @return The disk type attribute of the bundle.
     * 
     */
    public String diskType() {
        return this.diskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBundlesBundleDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String diskSize;
        private String diskType;
        public Builder() {}
        public Builder(GetBundlesBundleDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSize = defaults.diskSize;
    	      this.diskType = defaults.diskType;
        }

        @CustomType.Setter
        public Builder diskSize(String diskSize) {
            if (diskSize == null) {
              throw new MissingRequiredPropertyException("GetBundlesBundleDisk", "diskSize");
            }
            this.diskSize = diskSize;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(String diskType) {
            if (diskType == null) {
              throw new MissingRequiredPropertyException("GetBundlesBundleDisk", "diskType");
            }
            this.diskType = diskType;
            return this;
        }
        public GetBundlesBundleDisk build() {
            final var _resultValue = new GetBundlesBundleDisk();
            _resultValue.diskSize = diskSize;
            _resultValue.diskType = diskType;
            return _resultValue;
        }
    }
}
