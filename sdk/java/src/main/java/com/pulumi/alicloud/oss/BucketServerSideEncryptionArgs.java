// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketServerSideEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketServerSideEncryptionArgs Empty = new BucketServerSideEncryptionArgs();

    /**
     * The name of the bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
     * 
     */
    @Import(name="kmsDataEncryption")
    private @Nullable Output<String> kmsDataEncryption;

    /**
     * @return The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
     * 
     */
    public Optional<Output<String>> kmsDataEncryption() {
        return Optional.ofNullable(this.kmsDataEncryption);
    }

    /**
     * The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
     * 
     */
    @Import(name="kmsMasterKeyId")
    private @Nullable Output<String> kmsMasterKeyId;

    /**
     * @return The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
     * 
     */
    public Optional<Output<String>> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }

    /**
     * The server-side encryption method. Valid Values: KMS, AES256.
     * 
     */
    @Import(name="sseAlgorithm", required=true)
    private Output<String> sseAlgorithm;

    /**
     * @return The server-side encryption method. Valid Values: KMS, AES256.
     * 
     */
    public Output<String> sseAlgorithm() {
        return this.sseAlgorithm;
    }

    private BucketServerSideEncryptionArgs() {}

    private BucketServerSideEncryptionArgs(BucketServerSideEncryptionArgs $) {
        this.bucket = $.bucket;
        this.kmsDataEncryption = $.kmsDataEncryption;
        this.kmsMasterKeyId = $.kmsMasterKeyId;
        this.sseAlgorithm = $.sseAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketServerSideEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketServerSideEncryptionArgs $;

        public Builder() {
            $ = new BucketServerSideEncryptionArgs();
        }

        public Builder(BucketServerSideEncryptionArgs defaults) {
            $ = new BucketServerSideEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param kmsDataEncryption The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsDataEncryption(@Nullable Output<String> kmsDataEncryption) {
            $.kmsDataEncryption = kmsDataEncryption;
            return this;
        }

        /**
         * @param kmsDataEncryption The algorithm used to encrypt objects. If this element is not specified, objects are encrypted by using AES256. This element is valid only when the value of SSEAlgorithm is set to KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsDataEncryption(String kmsDataEncryption) {
            return kmsDataEncryption(Output.of(kmsDataEncryption));
        }

        /**
         * @param kmsMasterKeyId The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
         * 
         * @return builder
         * 
         */
        public Builder kmsMasterKeyId(@Nullable Output<String> kmsMasterKeyId) {
            $.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }

        /**
         * @param kmsMasterKeyId The CMK ID that must be specified when SSEAlgorithm is set to KMS and a specified CMK is used for encryption. In other cases, this element must be set to null.
         * 
         * @return builder
         * 
         */
        public Builder kmsMasterKeyId(String kmsMasterKeyId) {
            return kmsMasterKeyId(Output.of(kmsMasterKeyId));
        }

        /**
         * @param sseAlgorithm The server-side encryption method. Valid Values: KMS, AES256.
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(Output<String> sseAlgorithm) {
            $.sseAlgorithm = sseAlgorithm;
            return this;
        }

        /**
         * @param sseAlgorithm The server-side encryption method. Valid Values: KMS, AES256.
         * 
         * @return builder
         * 
         */
        public Builder sseAlgorithm(String sseAlgorithm) {
            return sseAlgorithm(Output.of(sseAlgorithm));
        }

        public BucketServerSideEncryptionArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketServerSideEncryptionArgs", "bucket");
            }
            if ($.sseAlgorithm == null) {
                throw new MissingRequiredPropertyException("BucketServerSideEncryptionArgs", "sseAlgorithm");
            }
            return $;
        }
    }

}
