// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.alicloud.emrv2.outputs.ClusterBootstrapScriptNodeSelector;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterBootstrapScript {
    /**
     * @return The bootstrap scripts execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ .
     * 
     */
    private String executionFailStrategy;
    /**
     * @return The bootstrap scripts execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ .
     * 
     */
    private String executionMoment;
    /**
     * @return The bootstrap scripts execution target. See `node_selector` below.
     * 
     */
    private ClusterBootstrapScriptNodeSelector nodeSelector;
    /**
     * @return The bootstrap scripts priority.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return The bootstrap script args, e.g. &#34;--a=b&#34;.
     * 
     */
    private String scriptArgs;
    /**
     * @return The bootstrap script name.
     * 
     */
    private String scriptName;
    /**
     * @return The bootstrap script path, e.g. &#34;oss://bucket/path&#34;.
     * 
     */
    private String scriptPath;

    private ClusterBootstrapScript() {}
    /**
     * @return The bootstrap scripts execution fail strategy, ’FAILED_BLOCKED’ or ‘FAILED_CONTINUE’ .
     * 
     */
    public String executionFailStrategy() {
        return this.executionFailStrategy;
    }
    /**
     * @return The bootstrap scripts execution moment, ’BEFORE_INSTALL’ or ‘AFTER_STARTED’ .
     * 
     */
    public String executionMoment() {
        return this.executionMoment;
    }
    /**
     * @return The bootstrap scripts execution target. See `node_selector` below.
     * 
     */
    public ClusterBootstrapScriptNodeSelector nodeSelector() {
        return this.nodeSelector;
    }
    /**
     * @return The bootstrap scripts priority.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return The bootstrap script args, e.g. &#34;--a=b&#34;.
     * 
     */
    public String scriptArgs() {
        return this.scriptArgs;
    }
    /**
     * @return The bootstrap script name.
     * 
     */
    public String scriptName() {
        return this.scriptName;
    }
    /**
     * @return The bootstrap script path, e.g. &#34;oss://bucket/path&#34;.
     * 
     */
    public String scriptPath() {
        return this.scriptPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterBootstrapScript defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String executionFailStrategy;
        private String executionMoment;
        private ClusterBootstrapScriptNodeSelector nodeSelector;
        private @Nullable Integer priority;
        private String scriptArgs;
        private String scriptName;
        private String scriptPath;
        public Builder() {}
        public Builder(ClusterBootstrapScript defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionFailStrategy = defaults.executionFailStrategy;
    	      this.executionMoment = defaults.executionMoment;
    	      this.nodeSelector = defaults.nodeSelector;
    	      this.priority = defaults.priority;
    	      this.scriptArgs = defaults.scriptArgs;
    	      this.scriptName = defaults.scriptName;
    	      this.scriptPath = defaults.scriptPath;
        }

        @CustomType.Setter
        public Builder executionFailStrategy(String executionFailStrategy) {
            this.executionFailStrategy = Objects.requireNonNull(executionFailStrategy);
            return this;
        }
        @CustomType.Setter
        public Builder executionMoment(String executionMoment) {
            this.executionMoment = Objects.requireNonNull(executionMoment);
            return this;
        }
        @CustomType.Setter
        public Builder nodeSelector(ClusterBootstrapScriptNodeSelector nodeSelector) {
            this.nodeSelector = Objects.requireNonNull(nodeSelector);
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder scriptArgs(String scriptArgs) {
            this.scriptArgs = Objects.requireNonNull(scriptArgs);
            return this;
        }
        @CustomType.Setter
        public Builder scriptName(String scriptName) {
            this.scriptName = Objects.requireNonNull(scriptName);
            return this;
        }
        @CustomType.Setter
        public Builder scriptPath(String scriptPath) {
            this.scriptPath = Objects.requireNonNull(scriptPath);
            return this;
        }
        public ClusterBootstrapScript build() {
            final var _resultValue = new ClusterBootstrapScript();
            _resultValue.executionFailStrategy = executionFailStrategy;
            _resultValue.executionMoment = executionMoment;
            _resultValue.nodeSelector = nodeSelector;
            _resultValue.priority = priority;
            _resultValue.scriptArgs = scriptArgs;
            _resultValue.scriptName = scriptName;
            _resultValue.scriptPath = scriptPath;
            return _resultValue;
        }
    }
}
