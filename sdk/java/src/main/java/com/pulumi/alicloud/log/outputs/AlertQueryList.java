// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlertQueryList {
    /**
     * @return Chart title, optional from 1.161.0+.
     * 
     */
    private @Nullable String chartTitle;
    /**
     * @return Query dashboard id.
     * 
     */
    private @Nullable String dashboardId;
    /**
     * @return End time. example: 20s.
     * 
     */
    private String end;
    /**
     * @return Query logstore, use store for new alert, Deprecated from 1.161.0+.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use store
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use store */
    private @Nullable String logstore;
    /**
     * @return default disable, whether to use power sql. support auto, enable, disable.
     * 
     */
    private @Nullable String powerSqlMode;
    /**
     * @return Query project.
     * 
     */
    private @Nullable String project;
    /**
     * @return Query corresponding to chart. example: * AND aliyun.
     * 
     */
    private String query;
    /**
     * @return Query project region.
     * 
     */
    private @Nullable String region;
    /**
     * @return Query project store&#39;s ARN.
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return Begin time. example: -60s.
     * 
     */
    private String start;
    /**
     * @return Query store for new alert.
     * 
     */
    private @Nullable String store;
    /**
     * @return Query store type for new alert, including log,metric,meta.
     * 
     */
    private @Nullable String storeType;
    /**
     * @return default Custom. No need to configure this parameter.
     * 
     */
    private @Nullable String timeSpanType;

    private AlertQueryList() {}
    /**
     * @return Chart title, optional from 1.161.0+.
     * 
     */
    public Optional<String> chartTitle() {
        return Optional.ofNullable(this.chartTitle);
    }
    /**
     * @return Query dashboard id.
     * 
     */
    public Optional<String> dashboardId() {
        return Optional.ofNullable(this.dashboardId);
    }
    /**
     * @return End time. example: 20s.
     * 
     */
    public String end() {
        return this.end;
    }
    /**
     * @return Query logstore, use store for new alert, Deprecated from 1.161.0+.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use store
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use store */
    public Optional<String> logstore() {
        return Optional.ofNullable(this.logstore);
    }
    /**
     * @return default disable, whether to use power sql. support auto, enable, disable.
     * 
     */
    public Optional<String> powerSqlMode() {
        return Optional.ofNullable(this.powerSqlMode);
    }
    /**
     * @return Query project.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Query corresponding to chart. example: * AND aliyun.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return Query project region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Query project store&#39;s ARN.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Begin time. example: -60s.
     * 
     */
    public String start() {
        return this.start;
    }
    /**
     * @return Query store for new alert.
     * 
     */
    public Optional<String> store() {
        return Optional.ofNullable(this.store);
    }
    /**
     * @return Query store type for new alert, including log,metric,meta.
     * 
     */
    public Optional<String> storeType() {
        return Optional.ofNullable(this.storeType);
    }
    /**
     * @return default Custom. No need to configure this parameter.
     * 
     */
    public Optional<String> timeSpanType() {
        return Optional.ofNullable(this.timeSpanType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertQueryList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String chartTitle;
        private @Nullable String dashboardId;
        private String end;
        private @Nullable String logstore;
        private @Nullable String powerSqlMode;
        private @Nullable String project;
        private String query;
        private @Nullable String region;
        private @Nullable String roleArn;
        private String start;
        private @Nullable String store;
        private @Nullable String storeType;
        private @Nullable String timeSpanType;
        public Builder() {}
        public Builder(AlertQueryList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartTitle = defaults.chartTitle;
    	      this.dashboardId = defaults.dashboardId;
    	      this.end = defaults.end;
    	      this.logstore = defaults.logstore;
    	      this.powerSqlMode = defaults.powerSqlMode;
    	      this.project = defaults.project;
    	      this.query = defaults.query;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.start = defaults.start;
    	      this.store = defaults.store;
    	      this.storeType = defaults.storeType;
    	      this.timeSpanType = defaults.timeSpanType;
        }

        @CustomType.Setter
        public Builder chartTitle(@Nullable String chartTitle) {
            this.chartTitle = chartTitle;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardId(@Nullable String dashboardId) {
            this.dashboardId = dashboardId;
            return this;
        }
        @CustomType.Setter
        public Builder end(String end) {
            this.end = Objects.requireNonNull(end);
            return this;
        }
        @CustomType.Setter
        public Builder logstore(@Nullable String logstore) {
            this.logstore = logstore;
            return this;
        }
        @CustomType.Setter
        public Builder powerSqlMode(@Nullable String powerSqlMode) {
            this.powerSqlMode = powerSqlMode;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder start(String start) {
            this.start = Objects.requireNonNull(start);
            return this;
        }
        @CustomType.Setter
        public Builder store(@Nullable String store) {
            this.store = store;
            return this;
        }
        @CustomType.Setter
        public Builder storeType(@Nullable String storeType) {
            this.storeType = storeType;
            return this;
        }
        @CustomType.Setter
        public Builder timeSpanType(@Nullable String timeSpanType) {
            this.timeSpanType = timeSpanType;
            return this;
        }
        public AlertQueryList build() {
            final var o = new AlertQueryList();
            o.chartTitle = chartTitle;
            o.dashboardId = dashboardId;
            o.end = end;
            o.logstore = logstore;
            o.powerSqlMode = powerSqlMode;
            o.project = project;
            o.query = query;
            o.region = region;
            o.roleArn = roleArn;
            o.start = start;
            o.store = store;
            o.storeType = storeType;
            o.timeSpanType = timeSpanType;
            return o;
        }
    }
}
