// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDhcpOptionsSetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDhcpOptionsSetsPlainArgs Empty = new GetDhcpOptionsSetsPlainArgs();

    /**
     * The name of the DHCP options set.The name must be 2 to 128 characters in length and can contain letters, Chinese characters, digits, underscores (_), and hyphens (-). It must start with a letter or a Chinese character.
     * 
     */
    @Import(name="dhcpOptionsSetName")
    private @Nullable String dhcpOptionsSetName;

    /**
     * @return The name of the DHCP options set.The name must be 2 to 128 characters in length and can contain letters, Chinese characters, digits, underscores (_), and hyphens (-). It must start with a letter or a Chinese character.
     * 
     */
    public Optional<String> dhcpOptionsSetName() {
        return Optional.ofNullable(this.dhcpOptionsSetName);
    }

    /**
     * The root domain, for example, example.com. After a DHCP options set is associated with a Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS instances in the VPC network.
     * 
     */
    @Import(name="domainName")
    private @Nullable String domainName;

    /**
     * @return The root domain, for example, example.com. After a DHCP options set is associated with a Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS instances in the VPC network.
     * 
     */
    public Optional<String> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * A list of Dhcp Options Set IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Dhcp Options Set IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Dhcp Options Set name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Dhcp Options Set name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetDhcpOptionsSetsPlainArgs() {}

    private GetDhcpOptionsSetsPlainArgs(GetDhcpOptionsSetsPlainArgs $) {
        this.dhcpOptionsSetName = $.dhcpOptionsSetName;
        this.domainName = $.domainName;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDhcpOptionsSetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDhcpOptionsSetsPlainArgs $;

        public Builder() {
            $ = new GetDhcpOptionsSetsPlainArgs();
        }

        public Builder(GetDhcpOptionsSetsPlainArgs defaults) {
            $ = new GetDhcpOptionsSetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dhcpOptionsSetName The name of the DHCP options set.The name must be 2 to 128 characters in length and can contain letters, Chinese characters, digits, underscores (_), and hyphens (-). It must start with a letter or a Chinese character.
         * 
         * @return builder
         * 
         */
        public Builder dhcpOptionsSetName(@Nullable String dhcpOptionsSetName) {
            $.dhcpOptionsSetName = dhcpOptionsSetName;
            return this;
        }

        /**
         * @param domainName The root domain, for example, example.com. After a DHCP options set is associated with a Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS instances in the VPC network.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable String domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param ids A list of Dhcp Options Set IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Dhcp Options Set IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Dhcp Options Set name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetDhcpOptionsSetsPlainArgs build() {
            return $;
        }
    }

}
