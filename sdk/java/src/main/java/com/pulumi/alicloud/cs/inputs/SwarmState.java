// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.alicloud.cs.inputs.SwarmNodeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwarmState extends com.pulumi.resources.ResourceArgs {

    public static final SwarmState Empty = new SwarmState();

    @Import(name="agentVersion")
    private @Nullable Output<String> agentVersion;

    public Optional<Output<String>> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }

    @Import(name="cidrBlock")
    private @Nullable Output<String> cidrBlock;

    public Optional<Output<String>> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }

    @Import(name="diskCategory")
    private @Nullable Output<String> diskCategory;

    public Optional<Output<String>> diskCategory() {
        return Optional.ofNullable(this.diskCategory);
    }

    @Import(name="diskSize")
    private @Nullable Output<Integer> diskSize;

    public Optional<Output<Integer>> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }

    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="isOutdated")
    private @Nullable Output<Boolean> isOutdated;

    public Optional<Output<Boolean>> isOutdated() {
        return Optional.ofNullable(this.isOutdated);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="needSlb")
    private @Nullable Output<Boolean> needSlb;

    public Optional<Output<Boolean>> needSlb() {
        return Optional.ofNullable(this.needSlb);
    }

    @Import(name="nodeNumber")
    private @Nullable Output<Integer> nodeNumber;

    public Optional<Output<Integer>> nodeNumber() {
        return Optional.ofNullable(this.nodeNumber);
    }

    @Import(name="nodes")
    private @Nullable Output<List<SwarmNodeArgs>> nodes;

    public Optional<Output<List<SwarmNodeArgs>>> nodes() {
        return Optional.ofNullable(this.nodes);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="releaseEip")
    private @Nullable Output<Boolean> releaseEip;

    public Optional<Output<Boolean>> releaseEip() {
        return Optional.ofNullable(this.releaseEip);
    }

    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * @deprecated
     * Field &#39;size&#39; has been deprecated from provider version 1.9.1. New field &#39;node_number&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it. */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @deprecated
     * Field &#39;size&#39; has been deprecated from provider version 1.9.1. New field &#39;node_number&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it. */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    @Import(name="slbId")
    private @Nullable Output<String> slbId;

    public Optional<Output<String>> slbId() {
        return Optional.ofNullable(this.slbId);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private SwarmState() {}

    private SwarmState(SwarmState $) {
        this.agentVersion = $.agentVersion;
        this.cidrBlock = $.cidrBlock;
        this.diskCategory = $.diskCategory;
        this.diskSize = $.diskSize;
        this.imageId = $.imageId;
        this.instanceType = $.instanceType;
        this.isOutdated = $.isOutdated;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.needSlb = $.needSlb;
        this.nodeNumber = $.nodeNumber;
        this.nodes = $.nodes;
        this.password = $.password;
        this.releaseEip = $.releaseEip;
        this.securityGroupId = $.securityGroupId;
        this.size = $.size;
        this.slbId = $.slbId;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwarmState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwarmState $;

        public Builder() {
            $ = new SwarmState();
        }

        public Builder(SwarmState defaults) {
            $ = new SwarmState(Objects.requireNonNull(defaults));
        }

        public Builder agentVersion(@Nullable Output<String> agentVersion) {
            $.agentVersion = agentVersion;
            return this;
        }

        public Builder agentVersion(String agentVersion) {
            return agentVersion(Output.of(agentVersion));
        }

        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        public Builder diskCategory(@Nullable Output<String> diskCategory) {
            $.diskCategory = diskCategory;
            return this;
        }

        public Builder diskCategory(String diskCategory) {
            return diskCategory(Output.of(diskCategory));
        }

        public Builder diskSize(@Nullable Output<Integer> diskSize) {
            $.diskSize = diskSize;
            return this;
        }

        public Builder diskSize(Integer diskSize) {
            return diskSize(Output.of(diskSize));
        }

        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder isOutdated(@Nullable Output<Boolean> isOutdated) {
            $.isOutdated = isOutdated;
            return this;
        }

        public Builder isOutdated(Boolean isOutdated) {
            return isOutdated(Output.of(isOutdated));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder needSlb(@Nullable Output<Boolean> needSlb) {
            $.needSlb = needSlb;
            return this;
        }

        public Builder needSlb(Boolean needSlb) {
            return needSlb(Output.of(needSlb));
        }

        public Builder nodeNumber(@Nullable Output<Integer> nodeNumber) {
            $.nodeNumber = nodeNumber;
            return this;
        }

        public Builder nodeNumber(Integer nodeNumber) {
            return nodeNumber(Output.of(nodeNumber));
        }

        public Builder nodes(@Nullable Output<List<SwarmNodeArgs>> nodes) {
            $.nodes = nodes;
            return this;
        }

        public Builder nodes(List<SwarmNodeArgs> nodes) {
            return nodes(Output.of(nodes));
        }

        public Builder nodes(SwarmNodeArgs... nodes) {
            return nodes(List.of(nodes));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder releaseEip(@Nullable Output<Boolean> releaseEip) {
            $.releaseEip = releaseEip;
            return this;
        }

        public Builder releaseEip(Boolean releaseEip) {
            return releaseEip(Output.of(releaseEip));
        }

        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Field &#39;size&#39; has been deprecated from provider version 1.9.1. New field &#39;node_number&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it. */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Field &#39;size&#39; has been deprecated from provider version 1.9.1. New field &#39;node_number&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it. */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public Builder slbId(@Nullable Output<String> slbId) {
            $.slbId = slbId;
            return this;
        }

        public Builder slbId(String slbId) {
            return slbId(Output.of(slbId));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public SwarmState build() {
            return $;
        }
    }

}
