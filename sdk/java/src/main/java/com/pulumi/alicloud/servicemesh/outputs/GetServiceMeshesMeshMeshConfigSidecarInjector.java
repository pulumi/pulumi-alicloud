// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicemesh.outputs;

import com.pulumi.alicloud.servicemesh.outputs.GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceMeshesMeshMeshConfigSidecarInjector {
    /**
     * @return Whether to enable by Pod Annotations automatic injection Sidecar.
     * 
     */
    private Boolean autoInjectionPolicyEnabled;
    /**
     * @return Whether it is the all namespaces you turn on the auto injection capabilities.
     * 
     */
    private Boolean enableNamespacesByDefault;
    /**
     * @return The configuration of the CNI
     * 
     */
    private List<GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration> initCniConfigurations;
    /**
     * @return Sidecar injector Pods on the throttle.
     * 
     */
    private String limitCpu;
    /**
     * @return The memory limit  of the Sidecar injector Pods.
     * 
     */
    private String limitMemory;
    /**
     * @return The requested cpu the Sidecar injector Pods.
     * 
     */
    private String requestCpu;
    /**
     * @return The requested memory the Sidecar injector Pods.
     * 
     */
    private String requestMemory;
    /**
     * @return Other automatic injection Sidecar configuration (in YAML format).
     * 
     */
    private String sidecarInjectorWebhookAsYaml;

    private GetServiceMeshesMeshMeshConfigSidecarInjector() {}
    /**
     * @return Whether to enable by Pod Annotations automatic injection Sidecar.
     * 
     */
    public Boolean autoInjectionPolicyEnabled() {
        return this.autoInjectionPolicyEnabled;
    }
    /**
     * @return Whether it is the all namespaces you turn on the auto injection capabilities.
     * 
     */
    public Boolean enableNamespacesByDefault() {
        return this.enableNamespacesByDefault;
    }
    /**
     * @return The configuration of the CNI
     * 
     */
    public List<GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration> initCniConfigurations() {
        return this.initCniConfigurations;
    }
    /**
     * @return Sidecar injector Pods on the throttle.
     * 
     */
    public String limitCpu() {
        return this.limitCpu;
    }
    /**
     * @return The memory limit  of the Sidecar injector Pods.
     * 
     */
    public String limitMemory() {
        return this.limitMemory;
    }
    /**
     * @return The requested cpu the Sidecar injector Pods.
     * 
     */
    public String requestCpu() {
        return this.requestCpu;
    }
    /**
     * @return The requested memory the Sidecar injector Pods.
     * 
     */
    public String requestMemory() {
        return this.requestMemory;
    }
    /**
     * @return Other automatic injection Sidecar configuration (in YAML format).
     * 
     */
    public String sidecarInjectorWebhookAsYaml() {
        return this.sidecarInjectorWebhookAsYaml;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMeshesMeshMeshConfigSidecarInjector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoInjectionPolicyEnabled;
        private Boolean enableNamespacesByDefault;
        private List<GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration> initCniConfigurations;
        private String limitCpu;
        private String limitMemory;
        private String requestCpu;
        private String requestMemory;
        private String sidecarInjectorWebhookAsYaml;
        public Builder() {}
        public Builder(GetServiceMeshesMeshMeshConfigSidecarInjector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoInjectionPolicyEnabled = defaults.autoInjectionPolicyEnabled;
    	      this.enableNamespacesByDefault = defaults.enableNamespacesByDefault;
    	      this.initCniConfigurations = defaults.initCniConfigurations;
    	      this.limitCpu = defaults.limitCpu;
    	      this.limitMemory = defaults.limitMemory;
    	      this.requestCpu = defaults.requestCpu;
    	      this.requestMemory = defaults.requestMemory;
    	      this.sidecarInjectorWebhookAsYaml = defaults.sidecarInjectorWebhookAsYaml;
        }

        @CustomType.Setter
        public Builder autoInjectionPolicyEnabled(Boolean autoInjectionPolicyEnabled) {
            this.autoInjectionPolicyEnabled = Objects.requireNonNull(autoInjectionPolicyEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder enableNamespacesByDefault(Boolean enableNamespacesByDefault) {
            this.enableNamespacesByDefault = Objects.requireNonNull(enableNamespacesByDefault);
            return this;
        }
        @CustomType.Setter
        public Builder initCniConfigurations(List<GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration> initCniConfigurations) {
            this.initCniConfigurations = Objects.requireNonNull(initCniConfigurations);
            return this;
        }
        public Builder initCniConfigurations(GetServiceMeshesMeshMeshConfigSidecarInjectorInitCniConfiguration... initCniConfigurations) {
            return initCniConfigurations(List.of(initCniConfigurations));
        }
        @CustomType.Setter
        public Builder limitCpu(String limitCpu) {
            this.limitCpu = Objects.requireNonNull(limitCpu);
            return this;
        }
        @CustomType.Setter
        public Builder limitMemory(String limitMemory) {
            this.limitMemory = Objects.requireNonNull(limitMemory);
            return this;
        }
        @CustomType.Setter
        public Builder requestCpu(String requestCpu) {
            this.requestCpu = Objects.requireNonNull(requestCpu);
            return this;
        }
        @CustomType.Setter
        public Builder requestMemory(String requestMemory) {
            this.requestMemory = Objects.requireNonNull(requestMemory);
            return this;
        }
        @CustomType.Setter
        public Builder sidecarInjectorWebhookAsYaml(String sidecarInjectorWebhookAsYaml) {
            this.sidecarInjectorWebhookAsYaml = Objects.requireNonNull(sidecarInjectorWebhookAsYaml);
            return this;
        }
        public GetServiceMeshesMeshMeshConfigSidecarInjector build() {
            final var o = new GetServiceMeshesMeshMeshConfigSidecarInjector();
            o.autoInjectionPolicyEnabled = autoInjectionPolicyEnabled;
            o.enableNamespacesByDefault = enableNamespacesByDefault;
            o.initCniConfigurations = initCniConfigurations;
            o.limitCpu = limitCpu;
            o.limitMemory = limitMemory;
            o.requestCpu = requestCpu;
            o.requestMemory = requestMemory;
            o.sidecarInjectorWebhookAsYaml = sidecarInjectorWebhookAsYaml;
            return o;
        }
    }
}
