// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBasicAccelerateIpsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBasicAccelerateIpsPlainArgs Empty = new GetBasicAccelerateIpsPlainArgs();

    /**
     * The address of the Basic Accelerate IP.
     * 
     */
    @Import(name="accelerateIpAddress")
    private @Nullable String accelerateIpAddress;

    /**
     * @return The address of the Basic Accelerate IP.
     * 
     */
    public Optional<String> accelerateIpAddress() {
        return Optional.ofNullable(this.accelerateIpAddress);
    }

    /**
     * The id of the Basic Accelerate IP.
     * 
     */
    @Import(name="accelerateIpId")
    private @Nullable String accelerateIpId;

    /**
     * @return The id of the Basic Accelerate IP.
     * 
     */
    public Optional<String> accelerateIpId() {
        return Optional.ofNullable(this.accelerateIpId);
    }

    /**
     * A list of Global Accelerator Basic Accelerate IP IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Global Accelerator Basic Accelerate IP IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The ID of the Basic Ip Set.
     * 
     */
    @Import(name="ipSetId", required=true)
    private String ipSetId;

    /**
     * @return The ID of the Basic Ip Set.
     * 
     */
    public String ipSetId() {
        return this.ipSetId;
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetBasicAccelerateIpsPlainArgs() {}

    private GetBasicAccelerateIpsPlainArgs(GetBasicAccelerateIpsPlainArgs $) {
        this.accelerateIpAddress = $.accelerateIpAddress;
        this.accelerateIpId = $.accelerateIpId;
        this.ids = $.ids;
        this.ipSetId = $.ipSetId;
        this.outputFile = $.outputFile;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBasicAccelerateIpsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBasicAccelerateIpsPlainArgs $;

        public Builder() {
            $ = new GetBasicAccelerateIpsPlainArgs();
        }

        public Builder(GetBasicAccelerateIpsPlainArgs defaults) {
            $ = new GetBasicAccelerateIpsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerateIpAddress The address of the Basic Accelerate IP.
         * 
         * @return builder
         * 
         */
        public Builder accelerateIpAddress(@Nullable String accelerateIpAddress) {
            $.accelerateIpAddress = accelerateIpAddress;
            return this;
        }

        /**
         * @param accelerateIpId The id of the Basic Accelerate IP.
         * 
         * @return builder
         * 
         */
        public Builder accelerateIpId(@Nullable String accelerateIpId) {
            $.accelerateIpId = accelerateIpId;
            return this;
        }

        /**
         * @param ids A list of Global Accelerator Basic Accelerate IP IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Global Accelerator Basic Accelerate IP IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param ipSetId The ID of the Basic Ip Set.
         * 
         * @return builder
         * 
         */
        public Builder ipSetId(String ipSetId) {
            $.ipSetId = ipSetId;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The status of the Global Accelerator Basic Accelerate IP instance. Valid Value: `active`, `binding`, `bound`, `unbinding`, `deleting`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetBasicAccelerateIpsPlainArgs build() {
            if ($.ipSetId == null) {
                throw new MissingRequiredPropertyException("GetBasicAccelerateIpsPlainArgs", "ipSetId");
            }
            return $;
        }
    }

}
