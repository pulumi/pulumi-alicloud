// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterVbrChildInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final RouterVbrChildInstanceState Empty = new RouterVbrChildInstanceState();

    /**
     * The ID of the leased line gateway subinstance.
     * 
     */
    @Import(name="childInstanceId")
    private @Nullable Output<String> childInstanceId;

    /**
     * @return The ID of the leased line gateway subinstance.
     * 
     */
    public Optional<Output<String>> childInstanceId() {
        return Optional.ofNullable(this.childInstanceId);
    }

    /**
     * The ID of the subinstance of the leased line gateway.
     * 
     */
    @Import(name="childInstanceOwnerId")
    private @Nullable Output<String> childInstanceOwnerId;

    /**
     * @return The ID of the subinstance of the leased line gateway.
     * 
     */
    public Optional<Output<String>> childInstanceOwnerId() {
        return Optional.ofNullable(this.childInstanceOwnerId);
    }

    /**
     * Region of the leased line gateway sub-instance.
     * 
     */
    @Import(name="childInstanceRegionId")
    private @Nullable Output<String> childInstanceRegionId;

    /**
     * @return Region of the leased line gateway sub-instance.
     * 
     */
    public Optional<Output<String>> childInstanceRegionId() {
        return Optional.ofNullable(this.childInstanceRegionId);
    }

    /**
     * The type of leased line gateway sub-instance, Valid values: `VBR`.
     * 
     */
    @Import(name="childInstanceType")
    private @Nullable Output<String> childInstanceType;

    /**
     * @return The type of leased line gateway sub-instance, Valid values: `VBR`.
     * 
     */
    public Optional<Output<String>> childInstanceType() {
        return Optional.ofNullable(this.childInstanceType);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * ID of the representative leased line gateway instance.
     * 
     */
    @Import(name="ecrId")
    private @Nullable Output<String> ecrId;

    /**
     * @return ID of the representative leased line gateway instance.
     * 
     */
    public Optional<Output<String>> ecrId() {
        return Optional.ofNullable(this.ecrId);
    }

    /**
     * Binding relationship status of leased line gateway subinstances.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Binding relationship status of leased line gateway subinstances.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private RouterVbrChildInstanceState() {}

    private RouterVbrChildInstanceState(RouterVbrChildInstanceState $) {
        this.childInstanceId = $.childInstanceId;
        this.childInstanceOwnerId = $.childInstanceOwnerId;
        this.childInstanceRegionId = $.childInstanceRegionId;
        this.childInstanceType = $.childInstanceType;
        this.createTime = $.createTime;
        this.ecrId = $.ecrId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterVbrChildInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterVbrChildInstanceState $;

        public Builder() {
            $ = new RouterVbrChildInstanceState();
        }

        public Builder(RouterVbrChildInstanceState defaults) {
            $ = new RouterVbrChildInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param childInstanceId The ID of the leased line gateway subinstance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(@Nullable Output<String> childInstanceId) {
            $.childInstanceId = childInstanceId;
            return this;
        }

        /**
         * @param childInstanceId The ID of the leased line gateway subinstance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(String childInstanceId) {
            return childInstanceId(Output.of(childInstanceId));
        }

        /**
         * @param childInstanceOwnerId The ID of the subinstance of the leased line gateway.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceOwnerId(@Nullable Output<String> childInstanceOwnerId) {
            $.childInstanceOwnerId = childInstanceOwnerId;
            return this;
        }

        /**
         * @param childInstanceOwnerId The ID of the subinstance of the leased line gateway.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceOwnerId(String childInstanceOwnerId) {
            return childInstanceOwnerId(Output.of(childInstanceOwnerId));
        }

        /**
         * @param childInstanceRegionId Region of the leased line gateway sub-instance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceRegionId(@Nullable Output<String> childInstanceRegionId) {
            $.childInstanceRegionId = childInstanceRegionId;
            return this;
        }

        /**
         * @param childInstanceRegionId Region of the leased line gateway sub-instance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceRegionId(String childInstanceRegionId) {
            return childInstanceRegionId(Output.of(childInstanceRegionId));
        }

        /**
         * @param childInstanceType The type of leased line gateway sub-instance, Valid values: `VBR`.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceType(@Nullable Output<String> childInstanceType) {
            $.childInstanceType = childInstanceType;
            return this;
        }

        /**
         * @param childInstanceType The type of leased line gateway sub-instance, Valid values: `VBR`.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceType(String childInstanceType) {
            return childInstanceType(Output.of(childInstanceType));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param ecrId ID of the representative leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(@Nullable Output<String> ecrId) {
            $.ecrId = ecrId;
            return this;
        }

        /**
         * @param ecrId ID of the representative leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(String ecrId) {
            return ecrId(Output.of(ecrId));
        }

        /**
         * @param status Binding relationship status of leased line gateway subinstances.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Binding relationship status of leased line gateway subinstances.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public RouterVbrChildInstanceState build() {
            return $;
        }
    }

}
