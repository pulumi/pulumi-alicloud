// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.outputs;

import com.pulumi.alicloud.hbr.outputs.GetUdmSnapshotsSnapshot;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUdmSnapshotsResult {
    /**
     * @return Cloud disk ID. This field is valid only when SourceType = UDM_ECS_DISK.
     * 
     */
    private @Nullable String diskId;
    private Integer endTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Udm Snapshot IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return ECS instance ID
     * 
     */
    private String instanceId;
    /**
     * @return The ID of the backup job that creates the snapshot.
     * 
     */
    private @Nullable String jobId;
    private @Nullable String outputFile;
    /**
     * @return A list of Udm Snapshot Entries. Each element contains the following attributes:
     * 
     */
    private List<GetUdmSnapshotsSnapshot> snapshots;
    /**
     * @return Data source type. Only UDM_ECS and UDM_ECS_DISK are supported.
     * 
     */
    private String sourceType;
    /**
     * @return Start Time
     * 
     */
    private Integer startTime;

    private GetUdmSnapshotsResult() {}
    /**
     * @return Cloud disk ID. This field is valid only when SourceType = UDM_ECS_DISK.
     * 
     */
    public Optional<String> diskId() {
        return Optional.ofNullable(this.diskId);
    }
    public Integer endTime() {
        return this.endTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Udm Snapshot IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return ECS instance ID
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The ID of the backup job that creates the snapshot.
     * 
     */
    public Optional<String> jobId() {
        return Optional.ofNullable(this.jobId);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return A list of Udm Snapshot Entries. Each element contains the following attributes:
     * 
     */
    public List<GetUdmSnapshotsSnapshot> snapshots() {
        return this.snapshots;
    }
    /**
     * @return Data source type. Only UDM_ECS and UDM_ECS_DISK are supported.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return Start Time
     * 
     */
    public Integer startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUdmSnapshotsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String diskId;
        private Integer endTime;
        private String id;
        private List<String> ids;
        private String instanceId;
        private @Nullable String jobId;
        private @Nullable String outputFile;
        private List<GetUdmSnapshotsSnapshot> snapshots;
        private String sourceType;
        private Integer startTime;
        public Builder() {}
        public Builder(GetUdmSnapshotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskId = defaults.diskId;
    	      this.endTime = defaults.endTime;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instanceId = defaults.instanceId;
    	      this.jobId = defaults.jobId;
    	      this.outputFile = defaults.outputFile;
    	      this.snapshots = defaults.snapshots;
    	      this.sourceType = defaults.sourceType;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder diskId(@Nullable String diskId) {

            this.diskId = diskId;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(Integer endTime) {
            if (endTime == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "endTime");
            }
            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder jobId(@Nullable String jobId) {

            this.jobId = jobId;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder snapshots(List<GetUdmSnapshotsSnapshot> snapshots) {
            if (snapshots == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "snapshots");
            }
            this.snapshots = snapshots;
            return this;
        }
        public Builder snapshots(GetUdmSnapshotsSnapshot... snapshots) {
            return snapshots(List.of(snapshots));
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(Integer startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("GetUdmSnapshotsResult", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        public GetUdmSnapshotsResult build() {
            final var _resultValue = new GetUdmSnapshotsResult();
            _resultValue.diskId = diskId;
            _resultValue.endTime = endTime;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.instanceId = instanceId;
            _resultValue.jobId = jobId;
            _resultValue.outputFile = outputFile;
            _resultValue.snapshots = snapshots;
            _resultValue.sourceType = sourceType;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
