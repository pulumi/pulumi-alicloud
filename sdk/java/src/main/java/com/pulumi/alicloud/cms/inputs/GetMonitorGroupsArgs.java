// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMonitorGroupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMonitorGroupsArgs Empty = new GetMonitorGroupsArgs();

    /**
     * The ID of the tag rule.
     * 
     */
    @Import(name="dynamicTagRuleId")
    private @Nullable Output<String> dynamicTagRuleId;

    /**
     * @return The ID of the tag rule.
     * 
     */
    public Optional<Output<String>> dynamicTagRuleId() {
        return Optional.ofNullable(this.dynamicTagRuleId);
    }

    /**
     * A list of Monitor Group IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Monitor Group IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The include template history.
     * 
     */
    @Import(name="includeTemplateHistory")
    private @Nullable Output<Boolean> includeTemplateHistory;

    /**
     * @return The include template history.
     * 
     */
    public Optional<Output<Boolean>> includeTemplateHistory() {
        return Optional.ofNullable(this.includeTemplateHistory);
    }

    /**
     * The keyword to be matched.
     * 
     */
    @Import(name="keyword")
    private @Nullable Output<String> keyword;

    /**
     * @return The keyword to be matched.
     * 
     */
    public Optional<Output<String>> keyword() {
        return Optional.ofNullable(this.keyword);
    }

    /**
     * The name of the application group.
     * 
     */
    @Import(name="monitorGroupName")
    private @Nullable Output<String> monitorGroupName;

    /**
     * @return The name of the application group.
     * 
     */
    public Optional<Output<String>> monitorGroupName() {
        return Optional.ofNullable(this.monitorGroupName);
    }

    /**
     * A regex string to filter results by Monitor Group name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Monitor Group name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The select contact groups.
     * 
     */
    @Import(name="selectContactGroups")
    private @Nullable Output<Boolean> selectContactGroups;

    /**
     * @return The select contact groups.
     * 
     */
    public Optional<Output<Boolean>> selectContactGroups() {
        return Optional.ofNullable(this.selectContactGroups);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of the application group. Valid values: `custom`, `ehpc_cluster`, `kubernetes`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the application group. Valid values: `custom`, `ehpc_cluster`, `kubernetes`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetMonitorGroupsArgs() {}

    private GetMonitorGroupsArgs(GetMonitorGroupsArgs $) {
        this.dynamicTagRuleId = $.dynamicTagRuleId;
        this.ids = $.ids;
        this.includeTemplateHistory = $.includeTemplateHistory;
        this.keyword = $.keyword;
        this.monitorGroupName = $.monitorGroupName;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.selectContactGroups = $.selectContactGroups;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMonitorGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMonitorGroupsArgs $;

        public Builder() {
            $ = new GetMonitorGroupsArgs();
        }

        public Builder(GetMonitorGroupsArgs defaults) {
            $ = new GetMonitorGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dynamicTagRuleId The ID of the tag rule.
         * 
         * @return builder
         * 
         */
        public Builder dynamicTagRuleId(@Nullable Output<String> dynamicTagRuleId) {
            $.dynamicTagRuleId = dynamicTagRuleId;
            return this;
        }

        /**
         * @param dynamicTagRuleId The ID of the tag rule.
         * 
         * @return builder
         * 
         */
        public Builder dynamicTagRuleId(String dynamicTagRuleId) {
            return dynamicTagRuleId(Output.of(dynamicTagRuleId));
        }

        /**
         * @param ids A list of Monitor Group IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Monitor Group IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Monitor Group IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param includeTemplateHistory The include template history.
         * 
         * @return builder
         * 
         */
        public Builder includeTemplateHistory(@Nullable Output<Boolean> includeTemplateHistory) {
            $.includeTemplateHistory = includeTemplateHistory;
            return this;
        }

        /**
         * @param includeTemplateHistory The include template history.
         * 
         * @return builder
         * 
         */
        public Builder includeTemplateHistory(Boolean includeTemplateHistory) {
            return includeTemplateHistory(Output.of(includeTemplateHistory));
        }

        /**
         * @param keyword The keyword to be matched.
         * 
         * @return builder
         * 
         */
        public Builder keyword(@Nullable Output<String> keyword) {
            $.keyword = keyword;
            return this;
        }

        /**
         * @param keyword The keyword to be matched.
         * 
         * @return builder
         * 
         */
        public Builder keyword(String keyword) {
            return keyword(Output.of(keyword));
        }

        /**
         * @param monitorGroupName The name of the application group.
         * 
         * @return builder
         * 
         */
        public Builder monitorGroupName(@Nullable Output<String> monitorGroupName) {
            $.monitorGroupName = monitorGroupName;
            return this;
        }

        /**
         * @param monitorGroupName The name of the application group.
         * 
         * @return builder
         * 
         */
        public Builder monitorGroupName(String monitorGroupName) {
            return monitorGroupName(Output.of(monitorGroupName));
        }

        /**
         * @param nameRegex A regex string to filter results by Monitor Group name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Monitor Group name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param selectContactGroups The select contact groups.
         * 
         * @return builder
         * 
         */
        public Builder selectContactGroups(@Nullable Output<Boolean> selectContactGroups) {
            $.selectContactGroups = selectContactGroups;
            return this;
        }

        /**
         * @param selectContactGroups The select contact groups.
         * 
         * @return builder
         * 
         */
        public Builder selectContactGroups(Boolean selectContactGroups) {
            return selectContactGroups(Output.of(selectContactGroups));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type The type of the application group. Valid values: `custom`, `ehpc_cluster`, `kubernetes`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the application group. Valid values: `custom`, `ehpc_cluster`, `kubernetes`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetMonitorGroupsArgs build() {
            return $;
        }
    }

}
