// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess.inputs;

import com.pulumi.alicloud.ess.inputs.InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceRefreshDesiredConfigurationContainerArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceRefreshDesiredConfigurationContainerArgs Empty = new InstanceRefreshDesiredConfigurationContainerArgs();

    /**
     * The arguments for the container startup command.
     * 
     */
    @Import(name="args")
    private @Nullable Output<List<String>> args;

    /**
     * @return The arguments for the container startup command.
     * 
     */
    public Optional<Output<List<String>>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * The container startup command.
     * 
     */
    @Import(name="commands")
    private @Nullable Output<List<String>> commands;

    /**
     * @return The container startup command.
     * 
     */
    public Optional<Output<List<String>>> commands() {
        return Optional.ofNullable(this.commands);
    }

    /**
     * Information about the environment variables. See `environmentVars` below for details.
     * 
     */
    @Import(name="environmentVars")
    private @Nullable Output<List<InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs>> environmentVars;

    /**
     * @return Information about the environment variables. See `environmentVars` below for details.
     * 
     */
    public Optional<Output<List<InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs>>> environmentVars() {
        return Optional.ofNullable(this.environmentVars);
    }

    /**
     * The container image.
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return The container image.
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * The custom name of the container.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The custom name of the container.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private InstanceRefreshDesiredConfigurationContainerArgs() {}

    private InstanceRefreshDesiredConfigurationContainerArgs(InstanceRefreshDesiredConfigurationContainerArgs $) {
        this.args = $.args;
        this.commands = $.commands;
        this.environmentVars = $.environmentVars;
        this.image = $.image;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceRefreshDesiredConfigurationContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceRefreshDesiredConfigurationContainerArgs $;

        public Builder() {
            $ = new InstanceRefreshDesiredConfigurationContainerArgs();
        }

        public Builder(InstanceRefreshDesiredConfigurationContainerArgs defaults) {
            $ = new InstanceRefreshDesiredConfigurationContainerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param args The arguments for the container startup command.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<List<String>> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args The arguments for the container startup command.
         * 
         * @return builder
         * 
         */
        public Builder args(List<String> args) {
            return args(Output.of(args));
        }

        /**
         * @param args The arguments for the container startup command.
         * 
         * @return builder
         * 
         */
        public Builder args(String... args) {
            return args(List.of(args));
        }

        /**
         * @param commands The container startup command.
         * 
         * @return builder
         * 
         */
        public Builder commands(@Nullable Output<List<String>> commands) {
            $.commands = commands;
            return this;
        }

        /**
         * @param commands The container startup command.
         * 
         * @return builder
         * 
         */
        public Builder commands(List<String> commands) {
            return commands(Output.of(commands));
        }

        /**
         * @param commands The container startup command.
         * 
         * @return builder
         * 
         */
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }

        /**
         * @param environmentVars Information about the environment variables. See `environmentVars` below for details.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(@Nullable Output<List<InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs>> environmentVars) {
            $.environmentVars = environmentVars;
            return this;
        }

        /**
         * @param environmentVars Information about the environment variables. See `environmentVars` below for details.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(List<InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs> environmentVars) {
            return environmentVars(Output.of(environmentVars));
        }

        /**
         * @param environmentVars Information about the environment variables. See `environmentVars` below for details.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(InstanceRefreshDesiredConfigurationContainerEnvironmentVarArgs... environmentVars) {
            return environmentVars(List.of(environmentVars));
        }

        /**
         * @param image The container image.
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image The container image.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param name The custom name of the container.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The custom name of the container.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public InstanceRefreshDesiredConfigurationContainerArgs build() {
            return $;
        }
    }

}
