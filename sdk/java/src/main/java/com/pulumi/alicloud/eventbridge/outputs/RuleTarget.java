// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge.outputs;

import com.pulumi.alicloud.eventbridge.outputs.RuleTargetParamList;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RuleTarget {
    /**
     * @return The endpoint of target.
     * 
     */
    private String endpoint;
    /**
     * @return A list of param.
     * 
     */
    private List<RuleTargetParamList> paramLists;
    /**
     * @return The ID of target.
     * 
     */
    private String targetId;
    /**
     * @return The type of target. Valid values: `acs.fc.function`, `acs.mns.topic`, `acs.mns.queue`,`http`,`acs.sms`,`acs.mail`,`acs.dingtalk`,`https`, `acs.eventbridge`,`acs.rabbitmq` and `acs.rocketmq`.
     * 
     */
    private String type;

    private RuleTarget() {}
    /**
     * @return The endpoint of target.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return A list of param.
     * 
     */
    public List<RuleTargetParamList> paramLists() {
        return this.paramLists;
    }
    /**
     * @return The ID of target.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The type of target. Valid values: `acs.fc.function`, `acs.mns.topic`, `acs.mns.queue`,`http`,`acs.sms`,`acs.mail`,`acs.dingtalk`,`https`, `acs.eventbridge`,`acs.rabbitmq` and `acs.rocketmq`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpoint;
        private List<RuleTargetParamList> paramLists;
        private String targetId;
        private String type;
        public Builder() {}
        public Builder(RuleTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.paramLists = defaults.paramLists;
    	      this.targetId = defaults.targetId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder paramLists(List<RuleTargetParamList> paramLists) {
            this.paramLists = Objects.requireNonNull(paramLists);
            return this;
        }
        public Builder paramLists(RuleTargetParamList... paramLists) {
            return paramLists(List.of(paramLists));
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public RuleTarget build() {
            final var o = new RuleTarget();
            o.endpoint = endpoint;
            o.paramLists = paramLists;
            o.targetId = targetId;
            o.type = type;
            return o;
        }
    }
}
