// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class BucketVersioningArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketVersioningArgs Empty = new BucketVersioningArgs();

    /**
     * Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    private BucketVersioningArgs() {}

    private BucketVersioningArgs(BucketVersioningArgs $) {
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketVersioningArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketVersioningArgs $;

        public Builder() {
            $ = new BucketVersioningArgs();
        }

        public Builder(BucketVersioningArgs defaults) {
            $ = new BucketVersioningArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param status Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Specifies the versioning state of a bucket. Valid values: `Enabled` and `Suspended`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public BucketVersioningArgs build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
