// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDirectoriesDirectoryTask {
    /**
     * @return The ID of Access Configuration.
     * 
     */
    private String accessConfigurationId;
    /**
     * @return The Name of Access Configuration.
     * 
     */
    private String accessConfigurationName;
    /**
     * @return The End Time of Task.
     * 
     */
    private String endTime;
    /**
     * @return the Reason for the Failure of  the task.
     * 
     */
    private String failureReason;
    /**
     * @return The ID of Cloud SSO Identity.
     * 
     */
    private String principalId;
    /**
     * @return The Name of Cloud SSO Identity.
     * 
     */
    private String principalName;
    /**
     * @return The Type of Cloud SSO Identity.
     * 
     */
    private String principalType;
    /**
     * @return The Start Time of Task.
     * 
     */
    private String startTime;
    /**
     * @return The Task Status.
     * 
     */
    private String status;
    /**
     * @return The Id of deploy target.
     * 
     */
    private String targetId;
    /**
     * @return The Name of Deploy Target.
     * 
     */
    private String targetName;
    /**
     * @return The Path in RD of Deploy Target.
     * 
     */
    private String targetPath;
    /**
     * @return The Type of Deploy Target.
     * 
     */
    private String targetType;
    /**
     * @return The ID of the Task.
     * 
     */
    private String taskId;
    /**
     * @return The Type of the Task.
     * 
     */
    private String taskType;

    private GetDirectoriesDirectoryTask() {}
    /**
     * @return The ID of Access Configuration.
     * 
     */
    public String accessConfigurationId() {
        return this.accessConfigurationId;
    }
    /**
     * @return The Name of Access Configuration.
     * 
     */
    public String accessConfigurationName() {
        return this.accessConfigurationName;
    }
    /**
     * @return The End Time of Task.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return the Reason for the Failure of  the task.
     * 
     */
    public String failureReason() {
        return this.failureReason;
    }
    /**
     * @return The ID of Cloud SSO Identity.
     * 
     */
    public String principalId() {
        return this.principalId;
    }
    /**
     * @return The Name of Cloud SSO Identity.
     * 
     */
    public String principalName() {
        return this.principalName;
    }
    /**
     * @return The Type of Cloud SSO Identity.
     * 
     */
    public String principalType() {
        return this.principalType;
    }
    /**
     * @return The Start Time of Task.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The Task Status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The Id of deploy target.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The Name of Deploy Target.
     * 
     */
    public String targetName() {
        return this.targetName;
    }
    /**
     * @return The Path in RD of Deploy Target.
     * 
     */
    public String targetPath() {
        return this.targetPath;
    }
    /**
     * @return The Type of Deploy Target.
     * 
     */
    public String targetType() {
        return this.targetType;
    }
    /**
     * @return The ID of the Task.
     * 
     */
    public String taskId() {
        return this.taskId;
    }
    /**
     * @return The Type of the Task.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoriesDirectoryTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessConfigurationId;
        private String accessConfigurationName;
        private String endTime;
        private String failureReason;
        private String principalId;
        private String principalName;
        private String principalType;
        private String startTime;
        private String status;
        private String targetId;
        private String targetName;
        private String targetPath;
        private String targetType;
        private String taskId;
        private String taskType;
        public Builder() {}
        public Builder(GetDirectoriesDirectoryTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessConfigurationId = defaults.accessConfigurationId;
    	      this.accessConfigurationName = defaults.accessConfigurationName;
    	      this.endTime = defaults.endTime;
    	      this.failureReason = defaults.failureReason;
    	      this.principalId = defaults.principalId;
    	      this.principalName = defaults.principalName;
    	      this.principalType = defaults.principalType;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
    	      this.targetId = defaults.targetId;
    	      this.targetName = defaults.targetName;
    	      this.targetPath = defaults.targetPath;
    	      this.targetType = defaults.targetType;
    	      this.taskId = defaults.taskId;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder accessConfigurationId(String accessConfigurationId) {
            if (accessConfigurationId == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "accessConfigurationId");
            }
            this.accessConfigurationId = accessConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder accessConfigurationName(String accessConfigurationName) {
            if (accessConfigurationName == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "accessConfigurationName");
            }
            this.accessConfigurationName = accessConfigurationName;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            if (endTime == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "endTime");
            }
            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder failureReason(String failureReason) {
            if (failureReason == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "failureReason");
            }
            this.failureReason = failureReason;
            return this;
        }
        @CustomType.Setter
        public Builder principalId(String principalId) {
            if (principalId == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "principalId");
            }
            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder principalName(String principalName) {
            if (principalName == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "principalName");
            }
            this.principalName = principalName;
            return this;
        }
        @CustomType.Setter
        public Builder principalType(String principalType) {
            if (principalType == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "principalType");
            }
            this.principalType = principalType;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetName(String targetName) {
            if (targetName == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "targetName");
            }
            this.targetName = targetName;
            return this;
        }
        @CustomType.Setter
        public Builder targetPath(String targetPath) {
            if (targetPath == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "targetPath");
            }
            this.targetPath = targetPath;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(String targetType) {
            if (targetType == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "targetType");
            }
            this.targetType = targetType;
            return this;
        }
        @CustomType.Setter
        public Builder taskId(String taskId) {
            if (taskId == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "taskId");
            }
            this.taskId = taskId;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("GetDirectoriesDirectoryTask", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public GetDirectoriesDirectoryTask build() {
            final var _resultValue = new GetDirectoriesDirectoryTask();
            _resultValue.accessConfigurationId = accessConfigurationId;
            _resultValue.accessConfigurationName = accessConfigurationName;
            _resultValue.endTime = endTime;
            _resultValue.failureReason = failureReason;
            _resultValue.principalId = principalId;
            _resultValue.principalName = principalName;
            _resultValue.principalType = principalType;
            _resultValue.startTime = startTime;
            _resultValue.status = status;
            _resultValue.targetId = targetId;
            _resultValue.targetName = targetName;
            _resultValue.targetPath = targetPath;
            _resultValue.targetType = targetType;
            _resultValue.taskId = taskId;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
