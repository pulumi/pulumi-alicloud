// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mse.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEngineNamespacesNamespace {
    /**
     * @return The Number of Configuration of the Namespace.
     * 
     */
    private Integer configCount;
    /**
     * @return The ID of the Engine Namespace. It is formatted to `&lt;cluster_id&gt;:&lt;namespace_id&gt;`.
     * 
     */
    private String id;
    /**
     * @return The description of the Namespace.
     * 
     */
    private String namespaceDesc;
    /**
     * @return The id of Namespace.
     * 
     */
    private String namespaceId;
    /**
     * @return The name of the Namespace.
     * 
     */
    private String namespaceShowName;
    /**
     * @return The Quota of the Namespace.
     * 
     */
    private Integer quota;
    /**
     * @return The number of active services.
     * 
     */
    private String serviceCount;
    /**
     * @return The type of the Namespace, the value is as follows:
     * - &#39;0&#39;: Global Configuration.
     * - &#39;1&#39;: default namespace.
     * - &#39;2&#39;: Custom Namespace.
     * 
     */
    private Integer type;

    private GetEngineNamespacesNamespace() {}
    /**
     * @return The Number of Configuration of the Namespace.
     * 
     */
    public Integer configCount() {
        return this.configCount;
    }
    /**
     * @return The ID of the Engine Namespace. It is formatted to `&lt;cluster_id&gt;:&lt;namespace_id&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The description of the Namespace.
     * 
     */
    public String namespaceDesc() {
        return this.namespaceDesc;
    }
    /**
     * @return The id of Namespace.
     * 
     */
    public String namespaceId() {
        return this.namespaceId;
    }
    /**
     * @return The name of the Namespace.
     * 
     */
    public String namespaceShowName() {
        return this.namespaceShowName;
    }
    /**
     * @return The Quota of the Namespace.
     * 
     */
    public Integer quota() {
        return this.quota;
    }
    /**
     * @return The number of active services.
     * 
     */
    public String serviceCount() {
        return this.serviceCount;
    }
    /**
     * @return The type of the Namespace, the value is as follows:
     * - &#39;0&#39;: Global Configuration.
     * - &#39;1&#39;: default namespace.
     * - &#39;2&#39;: Custom Namespace.
     * 
     */
    public Integer type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEngineNamespacesNamespace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer configCount;
        private String id;
        private String namespaceDesc;
        private String namespaceId;
        private String namespaceShowName;
        private Integer quota;
        private String serviceCount;
        private Integer type;
        public Builder() {}
        public Builder(GetEngineNamespacesNamespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configCount = defaults.configCount;
    	      this.id = defaults.id;
    	      this.namespaceDesc = defaults.namespaceDesc;
    	      this.namespaceId = defaults.namespaceId;
    	      this.namespaceShowName = defaults.namespaceShowName;
    	      this.quota = defaults.quota;
    	      this.serviceCount = defaults.serviceCount;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configCount(Integer configCount) {
            this.configCount = Objects.requireNonNull(configCount);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceDesc(String namespaceDesc) {
            this.namespaceDesc = Objects.requireNonNull(namespaceDesc);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(String namespaceId) {
            this.namespaceId = Objects.requireNonNull(namespaceId);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceShowName(String namespaceShowName) {
            this.namespaceShowName = Objects.requireNonNull(namespaceShowName);
            return this;
        }
        @CustomType.Setter
        public Builder quota(Integer quota) {
            this.quota = Objects.requireNonNull(quota);
            return this;
        }
        @CustomType.Setter
        public Builder serviceCount(String serviceCount) {
            this.serviceCount = Objects.requireNonNull(serviceCount);
            return this;
        }
        @CustomType.Setter
        public Builder type(Integer type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetEngineNamespacesNamespace build() {
            final var o = new GetEngineNamespacesNamespace();
            o.configCount = configCount;
            o.id = id;
            o.namespaceDesc = namespaceDesc;
            o.namespaceId = namespaceId;
            o.namespaceShowName = namespaceShowName;
            o.quota = quota;
            o.serviceCount = serviceCount;
            o.type = type;
            return o;
        }
    }
}
