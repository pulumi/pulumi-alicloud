// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vod;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vod.EditingProjectArgs;
import com.pulumi.alicloud.vod.inputs.EditingProjectState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a VOD Editing Project resource.
 * 
 * For information about VOD Editing Project and how to use it, see [What is Editing Project](https://www.alibabacloud.com/help/en/apsaravideo-for-vod/latest/addeditingproject#doc-api-vod-AddEditingProject).
 * 
 * &gt; **NOTE:** Available since v1.187.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetRegionsArgs;
 * import com.pulumi.alicloud.vod.EditingProject;
 * import com.pulumi.alicloud.vod.EditingProjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tfexample&#34;);
 *         final var default = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         var example = new EditingProject(&#34;example&#34;, EditingProjectArgs.builder()        
 *             .editingProjectName(name)
 *             .title(name)
 *             .timeline(&#34;&#34;&#34;
 *   {
 *     &#34;VideoTracks&#34;:[
 *       {
 *         &#34;VideoTrackClips&#34;:[
 *           {
 *           &#34;MediaId&#34;:&#34;0c60e6f02dae71edbfaa472190a90102&#34;,
 *           &#34;In&#34;:2811
 *           }
 *         ]
 *       }
 *     ]
 *   }
 *             &#34;&#34;&#34;)
 *             .coverUrl(&#34;https://demo.aliyundoc.com/6AB4D0E1E1C74468883516C2349D1FC2-6-2.png&#34;)
 *             .division(default_.regions()[0].id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VOD Editing Project can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:vod/editingProject:EditingProject example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vod/editingProject:EditingProject")
public class EditingProject extends com.pulumi.resources.CustomResource {
    /**
     * The thumbnail URL of the online editing project. If you do not specify this parameter and the video track in the timeline has mezzanine files, the thumbnail of the first mezzanine file in the timeline is used.
     * 
     */
    @Export(name="coverUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> coverUrl;

    /**
     * @return The thumbnail URL of the online editing project. If you do not specify this parameter and the video track in the timeline has mezzanine files, the thumbnail of the first mezzanine file in the timeline is used.
     * 
     */
    public Output<Optional<String>> coverUrl() {
        return Codegen.optional(this.coverUrl);
    }
    /**
     * The region where you want to create the online editing project.
     * 
     */
    @Export(name="division", type=String.class, parameters={})
    private Output</* @Nullable */ String> division;

    /**
     * @return The region where you want to create the online editing project.
     * 
     */
    public Output<Optional<String>> division() {
        return Codegen.optional(this.division);
    }
    /**
     * The description of the online editing project.
     * 
     */
    @Export(name="editingProjectName", type=String.class, parameters={})
    private Output<String> editingProjectName;

    /**
     * @return The description of the online editing project.
     * 
     */
    public Output<String> editingProjectName() {
        return this.editingProjectName;
    }
    /**
     * The Status of the resource.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The Status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The timeline of the online editing project, in JSON format. For more information about the structure, see [Timeline](https://www.alibabacloud.com/help/en/apsaravideo-for-vod/latest/basic-structures). If you do not specify this parameter, an empty timeline is created and the duration of the online editing project is zero.
     * 
     */
    @Export(name="timeline", type=String.class, parameters={})
    private Output<String> timeline;

    /**
     * @return The timeline of the online editing project, in JSON format. For more information about the structure, see [Timeline](https://www.alibabacloud.com/help/en/apsaravideo-for-vod/latest/basic-structures). If you do not specify this parameter, an empty timeline is created and the duration of the online editing project is zero.
     * 
     */
    public Output<String> timeline() {
        return this.timeline;
    }
    /**
     * The title of the online editing project.
     * 
     */
    @Export(name="title", type=String.class, parameters={})
    private Output<String> title;

    /**
     * @return The title of the online editing project.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EditingProject(String name) {
        this(name, EditingProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EditingProject(String name, EditingProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EditingProject(String name, EditingProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vod/editingProject:EditingProject", name, args == null ? EditingProjectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EditingProject(String name, Output<String> id, @Nullable EditingProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vod/editingProject:EditingProject", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EditingProject get(String name, Output<String> id, @Nullable EditingProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EditingProject(name, id, state, options);
    }
}
