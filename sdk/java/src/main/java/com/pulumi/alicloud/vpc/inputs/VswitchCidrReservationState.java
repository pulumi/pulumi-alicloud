// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VswitchCidrReservationState extends com.pulumi.resources.ResourceArgs {

    public static final VswitchCidrReservationState Empty = new VswitchCidrReservationState();

    /**
     * Reserved network segment CIdrBlock.
     * 
     */
    @Import(name="cidrReservationCidr")
    private @Nullable Output<String> cidrReservationCidr;

    /**
     * @return Reserved network segment CIdrBlock.
     * 
     */
    public Optional<Output<String>> cidrReservationCidr() {
        return Optional.ofNullable(this.cidrReservationCidr);
    }

    /**
     * The description of the reserved CIDR block.
     * 
     */
    @Import(name="cidrReservationDescription")
    private @Nullable Output<String> cidrReservationDescription;

    /**
     * @return The description of the reserved CIDR block.
     * 
     */
    public Optional<Output<String>> cidrReservationDescription() {
        return Optional.ofNullable(this.cidrReservationDescription);
    }

    /**
     * Reserved segment mask.
     * 
     */
    @Import(name="cidrReservationMask")
    private @Nullable Output<String> cidrReservationMask;

    /**
     * @return Reserved segment mask.
     * 
     */
    public Optional<Output<String>> cidrReservationMask() {
        return Optional.ofNullable(this.cidrReservationMask);
    }

    /**
     * Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
     * 
     */
    @Import(name="cidrReservationType")
    private @Nullable Output<String> cidrReservationType;

    /**
     * @return Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
     * 
     */
    public Optional<Output<String>> cidrReservationType() {
        return Optional.ofNullable(this.cidrReservationType);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The id of the vpc instance to which the reserved CIDR block belongs.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The id of the vpc instance to which the reserved CIDR block belongs.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The resource attribute field of the resource ID.
     * 
     */
    @Import(name="vswitchCidrReservationId")
    private @Nullable Output<String> vswitchCidrReservationId;

    /**
     * @return The resource attribute field of the resource ID.
     * 
     */
    public Optional<Output<String>> vswitchCidrReservationId() {
        return Optional.ofNullable(this.vswitchCidrReservationId);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="vswitchCidrReservationName")
    private @Nullable Output<String> vswitchCidrReservationName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> vswitchCidrReservationName() {
        return Optional.ofNullable(this.vswitchCidrReservationName);
    }

    /**
     * The Id of the switch instance.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The Id of the switch instance.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private VswitchCidrReservationState() {}

    private VswitchCidrReservationState(VswitchCidrReservationState $) {
        this.cidrReservationCidr = $.cidrReservationCidr;
        this.cidrReservationDescription = $.cidrReservationDescription;
        this.cidrReservationMask = $.cidrReservationMask;
        this.cidrReservationType = $.cidrReservationType;
        this.createTime = $.createTime;
        this.ipVersion = $.ipVersion;
        this.status = $.status;
        this.vpcId = $.vpcId;
        this.vswitchCidrReservationId = $.vswitchCidrReservationId;
        this.vswitchCidrReservationName = $.vswitchCidrReservationName;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VswitchCidrReservationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VswitchCidrReservationState $;

        public Builder() {
            $ = new VswitchCidrReservationState();
        }

        public Builder(VswitchCidrReservationState defaults) {
            $ = new VswitchCidrReservationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrReservationCidr Reserved network segment CIdrBlock.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationCidr(@Nullable Output<String> cidrReservationCidr) {
            $.cidrReservationCidr = cidrReservationCidr;
            return this;
        }

        /**
         * @param cidrReservationCidr Reserved network segment CIdrBlock.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationCidr(String cidrReservationCidr) {
            return cidrReservationCidr(Output.of(cidrReservationCidr));
        }

        /**
         * @param cidrReservationDescription The description of the reserved CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationDescription(@Nullable Output<String> cidrReservationDescription) {
            $.cidrReservationDescription = cidrReservationDescription;
            return this;
        }

        /**
         * @param cidrReservationDescription The description of the reserved CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationDescription(String cidrReservationDescription) {
            return cidrReservationDescription(Output.of(cidrReservationDescription));
        }

        /**
         * @param cidrReservationMask Reserved segment mask.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationMask(@Nullable Output<String> cidrReservationMask) {
            $.cidrReservationMask = cidrReservationMask;
            return this;
        }

        /**
         * @param cidrReservationMask Reserved segment mask.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationMask(String cidrReservationMask) {
            return cidrReservationMask(Output.of(cidrReservationMask));
        }

        /**
         * @param cidrReservationType Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationType(@Nullable Output<String> cidrReservationType) {
            $.cidrReservationType = cidrReservationType;
            return this;
        }

        /**
         * @param cidrReservationType Reserved CIDR Block Type.Valid values: `Prefix`. Default value: Prefix.
         * 
         * @return builder
         * 
         */
        public Builder cidrReservationType(String cidrReservationType) {
            return cidrReservationType(Output.of(cidrReservationType));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param ipVersion Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion Reserved ip version of network segment, valid values: `IPv4`, `IPv6`, default IPv4.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId The id of the vpc instance to which the reserved CIDR block belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The id of the vpc instance to which the reserved CIDR block belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchCidrReservationId The resource attribute field of the resource ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchCidrReservationId(@Nullable Output<String> vswitchCidrReservationId) {
            $.vswitchCidrReservationId = vswitchCidrReservationId;
            return this;
        }

        /**
         * @param vswitchCidrReservationId The resource attribute field of the resource ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchCidrReservationId(String vswitchCidrReservationId) {
            return vswitchCidrReservationId(Output.of(vswitchCidrReservationId));
        }

        /**
         * @param vswitchCidrReservationName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder vswitchCidrReservationName(@Nullable Output<String> vswitchCidrReservationName) {
            $.vswitchCidrReservationName = vswitchCidrReservationName;
            return this;
        }

        /**
         * @param vswitchCidrReservationName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder vswitchCidrReservationName(String vswitchCidrReservationName) {
            return vswitchCidrReservationName(Output.of(vswitchCidrReservationName));
        }

        /**
         * @param vswitchId The Id of the switch instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The Id of the switch instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public VswitchCidrReservationState build() {
            return $;
        }
    }

}
