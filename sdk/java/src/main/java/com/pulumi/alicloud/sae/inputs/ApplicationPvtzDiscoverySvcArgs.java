// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationPvtzDiscoverySvcPortProtocolArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPvtzDiscoverySvcArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPvtzDiscoverySvcArgs Empty = new ApplicationPvtzDiscoverySvcArgs();

    /**
     * Enables the Kubernetes Service-based registration and discovery feature.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Enables the Kubernetes Service-based registration and discovery feature.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * The ID of the namespace.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable Output<String> namespaceId;

    /**
     * @return The ID of the namespace.
     * 
     */
    public Optional<Output<String>> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * The port number and protocol. See `port_protocols` below.
     * 
     */
    @Import(name="portProtocols")
    private @Nullable Output<List<ApplicationPvtzDiscoverySvcPortProtocolArgs>> portProtocols;

    /**
     * @return The port number and protocol. See `port_protocols` below.
     * 
     */
    public Optional<Output<List<ApplicationPvtzDiscoverySvcPortProtocolArgs>>> portProtocols() {
        return Optional.ofNullable(this.portProtocols);
    }

    /**
     * The name of the Service.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the Service.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private ApplicationPvtzDiscoverySvcArgs() {}

    private ApplicationPvtzDiscoverySvcArgs(ApplicationPvtzDiscoverySvcArgs $) {
        this.enable = $.enable;
        this.namespaceId = $.namespaceId;
        this.portProtocols = $.portProtocols;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPvtzDiscoverySvcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPvtzDiscoverySvcArgs $;

        public Builder() {
            $ = new ApplicationPvtzDiscoverySvcArgs();
        }

        public Builder(ApplicationPvtzDiscoverySvcArgs defaults) {
            $ = new ApplicationPvtzDiscoverySvcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enable Enables the Kubernetes Service-based registration and discovery feature.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Enables the Kubernetes Service-based registration and discovery feature.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param namespaceId The ID of the namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The ID of the namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param portProtocols The port number and protocol. See `port_protocols` below.
         * 
         * @return builder
         * 
         */
        public Builder portProtocols(@Nullable Output<List<ApplicationPvtzDiscoverySvcPortProtocolArgs>> portProtocols) {
            $.portProtocols = portProtocols;
            return this;
        }

        /**
         * @param portProtocols The port number and protocol. See `port_protocols` below.
         * 
         * @return builder
         * 
         */
        public Builder portProtocols(List<ApplicationPvtzDiscoverySvcPortProtocolArgs> portProtocols) {
            return portProtocols(Output.of(portProtocols));
        }

        /**
         * @param portProtocols The port number and protocol. See `port_protocols` below.
         * 
         * @return builder
         * 
         */
        public Builder portProtocols(ApplicationPvtzDiscoverySvcPortProtocolArgs... portProtocols) {
            return portProtocols(List.of(portProtocols));
        }

        /**
         * @param serviceName The name of the Service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ApplicationPvtzDiscoverySvcArgs build() {
            return $;
        }
    }

}
