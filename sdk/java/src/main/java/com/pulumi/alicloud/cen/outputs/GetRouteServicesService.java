// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRouteServicesService {
    /**
     * @return The region of the network instances that access the cloud services.
     * 
     */
    private String accessRegionId;
    /**
     * @return -(Required, ForceNew) The ID of the CEN instance.
     * 
     */
    private String cenId;
    /**
     * @return The IP address of the cloud service.
     * 
     */
    private List<String> cidrs;
    /**
     * @return The description of the cloud service.
     * 
     */
    private String description;
    /**
     * @return -(Optional, ForceNew) The domain name or IP address of the cloud service.
     * 
     */
    private String host;
    /**
     * @return The region of the cloud service.
     * 
     */
    private String hostRegionId;
    /**
     * @return The VPC associated with the cloud service.
     * 
     */
    private String hostVpcId;
    /**
     * @return The ID of the route service.
     * 
     */
    private String id;
    /**
     * @return The status of the cloud service. Valid values: `Active`, `Creating` and `Deleting`.
     * 
     */
    private String status;
    /**
     * @return The update interval. Default value: 5. The value cannot be modified.
     * 
     */
    private String updateInterval;

    private GetRouteServicesService() {}
    /**
     * @return The region of the network instances that access the cloud services.
     * 
     */
    public String accessRegionId() {
        return this.accessRegionId;
    }
    /**
     * @return -(Required, ForceNew) The ID of the CEN instance.
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    /**
     * @return The IP address of the cloud service.
     * 
     */
    public List<String> cidrs() {
        return this.cidrs;
    }
    /**
     * @return The description of the cloud service.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return -(Optional, ForceNew) The domain name or IP address of the cloud service.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return The region of the cloud service.
     * 
     */
    public String hostRegionId() {
        return this.hostRegionId;
    }
    /**
     * @return The VPC associated with the cloud service.
     * 
     */
    public String hostVpcId() {
        return this.hostVpcId;
    }
    /**
     * @return The ID of the route service.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The status of the cloud service. Valid values: `Active`, `Creating` and `Deleting`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The update interval. Default value: 5. The value cannot be modified.
     * 
     */
    public String updateInterval() {
        return this.updateInterval;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteServicesService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessRegionId;
        private String cenId;
        private List<String> cidrs;
        private String description;
        private String host;
        private String hostRegionId;
        private String hostVpcId;
        private String id;
        private String status;
        private String updateInterval;
        public Builder() {}
        public Builder(GetRouteServicesService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRegionId = defaults.accessRegionId;
    	      this.cenId = defaults.cenId;
    	      this.cidrs = defaults.cidrs;
    	      this.description = defaults.description;
    	      this.host = defaults.host;
    	      this.hostRegionId = defaults.hostRegionId;
    	      this.hostVpcId = defaults.hostVpcId;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.updateInterval = defaults.updateInterval;
        }

        @CustomType.Setter
        public Builder accessRegionId(String accessRegionId) {
            this.accessRegionId = Objects.requireNonNull(accessRegionId);
            return this;
        }
        @CustomType.Setter
        public Builder cenId(String cenId) {
            this.cenId = Objects.requireNonNull(cenId);
            return this;
        }
        @CustomType.Setter
        public Builder cidrs(List<String> cidrs) {
            this.cidrs = Objects.requireNonNull(cidrs);
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder hostRegionId(String hostRegionId) {
            this.hostRegionId = Objects.requireNonNull(hostRegionId);
            return this;
        }
        @CustomType.Setter
        public Builder hostVpcId(String hostVpcId) {
            this.hostVpcId = Objects.requireNonNull(hostVpcId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder updateInterval(String updateInterval) {
            this.updateInterval = Objects.requireNonNull(updateInterval);
            return this;
        }
        public GetRouteServicesService build() {
            final var o = new GetRouteServicesService();
            o.accessRegionId = accessRegionId;
            o.cenId = cenId;
            o.cidrs = cidrs;
            o.description = description;
            o.host = host;
            o.hostRegionId = hostRegionId;
            o.hostVpcId = hostVpcId;
            o.id = id;
            o.status = status;
            o.updateInterval = updateInterval;
            return o;
        }
    }
}
