// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class HostAccountUserAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostAccountUserAttachmentArgs Empty = new HostAccountUserAttachmentArgs();

    /**
     * A list IDs of the host account.
     * 
     */
    @Import(name="hostAccountIds", required=true)
    private Output<List<String>> hostAccountIds;

    /**
     * @return A list IDs of the host account.
     * 
     */
    public Output<List<String>> hostAccountIds() {
        return this.hostAccountIds;
    }

    /**
     * The ID of the host.
     * 
     */
    @Import(name="hostId", required=true)
    private Output<String> hostId;

    /**
     * @return The ID of the host.
     * 
     */
    public Output<String> hostId() {
        return this.hostId;
    }

    /**
     * The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The ID of the user that you want to authorize to manage the specified hosts and host accounts.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return The ID of the user that you want to authorize to manage the specified hosts and host accounts.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private HostAccountUserAttachmentArgs() {}

    private HostAccountUserAttachmentArgs(HostAccountUserAttachmentArgs $) {
        this.hostAccountIds = $.hostAccountIds;
        this.hostId = $.hostId;
        this.instanceId = $.instanceId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostAccountUserAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostAccountUserAttachmentArgs $;

        public Builder() {
            $ = new HostAccountUserAttachmentArgs();
        }

        public Builder(HostAccountUserAttachmentArgs defaults) {
            $ = new HostAccountUserAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostAccountIds A list IDs of the host account.
         * 
         * @return builder
         * 
         */
        public Builder hostAccountIds(Output<List<String>> hostAccountIds) {
            $.hostAccountIds = hostAccountIds;
            return this;
        }

        /**
         * @param hostAccountIds A list IDs of the host account.
         * 
         * @return builder
         * 
         */
        public Builder hostAccountIds(List<String> hostAccountIds) {
            return hostAccountIds(Output.of(hostAccountIds));
        }

        /**
         * @param hostAccountIds A list IDs of the host account.
         * 
         * @return builder
         * 
         */
        public Builder hostAccountIds(String... hostAccountIds) {
            return hostAccountIds(List.of(hostAccountIds));
        }

        /**
         * @param hostId The ID of the host.
         * 
         * @return builder
         * 
         */
        public Builder hostId(Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId The ID of the host.
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param instanceId The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param userId The ID of the user that you want to authorize to manage the specified hosts and host accounts.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The ID of the user that you want to authorize to manage the specified hosts and host accounts.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public HostAccountUserAttachmentArgs build() {
            if ($.hostAccountIds == null) {
                throw new MissingRequiredPropertyException("HostAccountUserAttachmentArgs", "hostAccountIds");
            }
            if ($.hostId == null) {
                throw new MissingRequiredPropertyException("HostAccountUserAttachmentArgs", "hostId");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("HostAccountUserAttachmentArgs", "instanceId");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("HostAccountUserAttachmentArgs", "userId");
            }
            return $;
        }
    }

}
