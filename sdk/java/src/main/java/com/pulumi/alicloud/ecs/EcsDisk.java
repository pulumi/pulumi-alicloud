// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.EcsDiskArgs;
import com.pulumi.alicloud.ecs.inputs.EcsDiskState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ECS Disk can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ecs/ecsDisk:EcsDisk example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ecs/ecsDisk:EcsDisk")
public class EcsDisk extends com.pulumi.resources.CustomResource {
    @Export(name="advancedFeatures", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> advancedFeatures;

    public Output<Optional<String>> advancedFeatures() {
        return Codegen.optional(this.advancedFeatures);
    }
    /**
     * Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
     * 
     * @deprecated
     * Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead
     * 
     */
    @Deprecated /* Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead */
    @Export(name="availabilityZone", refs={String.class}, tree="[0]")
    private Output<String> availabilityZone;

    /**
     * @return Field `availabilityZone` has been deprecated from provider version 1.122.0. New field `zoneId` instead.
     * 
     */
    public Output<String> availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
     * 
     */
    @Export(name="burstingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> burstingEnabled;

    /**
     * @return Specifies whether to enable the performance burst feature. Valid values: `true`, `false`. **NOTE:** `burstingEnabled` is only valid when `category` is `cloudAuto`.
     * 
     */
    public Output<Optional<Boolean>> burstingEnabled() {
        return Codegen.optional(this.burstingEnabled);
    }
    /**
     * The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
     * 
     */
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> category;

    /**
     * @return The category of the data disk. Default value: `cloudEfficiency`. Valid Values: `cloud`, `cloudEfficiency`, `cloudSsd`, `cloudEssd`, `cloudAuto`, `cloudEssdEntry`, `elasticEphemeralDiskStandard`, `elasticEphemeralDiskPremium`.
     * 
     */
    public Output<Optional<String>> category() {
        return Codegen.optional(this.category);
    }
    /**
     * (Available since v1.237.0) The time when the disk was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Available since v1.237.0) The time when the disk was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
     * 
     */
    @Export(name="deleteAutoSnapshot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteAutoSnapshot;

    /**
     * @return Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: `false`.
     * 
     */
    public Output<Optional<Boolean>> deleteAutoSnapshot() {
        return Codegen.optional(this.deleteAutoSnapshot);
    }
    /**
     * Specifies whether to release the disk along with its associated instance. Default value: `false`.
     * 
     */
    @Export(name="deleteWithInstance", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deleteWithInstance;

    /**
     * @return Specifies whether to release the disk along with its associated instance. Default value: `false`.
     * 
     */
    public Output<Boolean> deleteWithInstance() {
        return this.deleteWithInstance;
    }
    /**
     * The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
     * 
     */
    @Export(name="diskName", refs={String.class}, tree="[0]")
    private Output<String> diskName;

    /**
     * @return The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
     * 
     */
    public Output<String> diskName() {
        return this.diskName;
    }
    /**
     * Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return Specifies whether to check the validity of the request without actually making the request.request Default value: `false`. Valid values:
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
     * 
     */
    @Export(name="enableAutoSnapshot", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableAutoSnapshot;

    /**
     * @return Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: `true`, `false`.
     * 
     */
    public Output<Boolean> enableAutoSnapshot() {
        return this.enableAutoSnapshot;
    }
    @Export(name="encryptAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptAlgorithm;

    public Output<Optional<String>> encryptAlgorithm() {
        return Codegen.optional(this.encryptAlgorithm);
    }
    /**
     * Specifies whether to encrypt the disk. Default value: `false`. Valid values:
     * 
     */
    @Export(name="encrypted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> encrypted;

    /**
     * @return Specifies whether to encrypt the disk. Default value: `false`. Valid values:
     * 
     */
    public Output<Boolean> encrypted() {
        return this.encrypted;
    }
    /**
     * The ID of the instance to which the created subscription disk is automatically attached.
     * * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
     * * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance to which the created subscription disk is automatically attached.
     * * After you specify the instance ID, the specified `resourceGroupId`, `tags`, and `kmsKeyId` parameters are ignored.
     * * One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyId;

    /**
     * @return The ID of the Key Management Service (KMS) key that is used for the disk. **NOTE:** `kmsKeyId` is only valid when `encrypted` is `true`.
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
     * 
     */
    @Export(name="multiAttach", refs={String.class}, tree="[0]")
    private Output<String> multiAttach;

    /**
     * @return Specifies whether to enable the multi-attach feature for the disk. Default value: `Disabled`. Valid values: `Enabled`, `Disabled`. **NOTE:** Currently, `multiAttach` can only be set to `Enabled` when `category` is set to `cloudEssd`.
     * 
     */
    public Output<String> multiAttach() {
        return this.multiAttach;
    }
    /**
     * Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     * 
     * &gt; **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead. */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Field `name` has been deprecated from provider version 1.122.0. New field `diskName` instead.
     * 
     * &gt; **NOTE:** Disk category `cloud` has been outdated, and it only can be used none I/O Optimized ECS instances. Recommend `cloudEfficiency` and `cloudSsd` disk.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the disk. Default to `PayAsYouGo`. Valid values: `PayAsYouGo`, `Subscription`. If you want to change the disk payment type, the `instanceId` is required.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * Specifies the performance level of an ESSD when you create the ESSD. Valid values:
     * - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
     * - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     * 
     */
    @Export(name="performanceLevel", refs={String.class}, tree="[0]")
    private Output<String> performanceLevel;

    /**
     * @return Specifies the performance level of an ESSD when you create the ESSD. Valid values:
     * - `PL0`: A single ESSD delivers up to 10,000 random read/write IOPS.
     * - `PL1`: A single ESSD delivers up to 50,000 random read/write IOPS.
     * - `PL2`: A single ESSD delivers up to 100,000 random read/write IOPS.
     * - `PL3`: A single ESSD delivers up to 1,000,000 random read/write IOPS.
     * 
     */
    public Output<String> performanceLevel() {
        return this.performanceLevel;
    }
    /**
     * The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
     * 
     */
    @Export(name="provisionedIops", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> provisionedIops;

    /**
     * @return The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. **NOTE:** `provisionedIops` is only valid when `category` is `cloudAuto`.
     * 
     */
    public Output<Optional<Integer>> provisionedIops() {
        return Codegen.optional(this.provisionedIops);
    }
    /**
     * (Available since v1.237.0) The ID of the region to which the disk belongs.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return (Available since v1.237.0) The ID of the region to which the disk belongs.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The ID of the resource group to which to add the disk.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which to add the disk.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The size of the disk. Unit: GiB. This parameter is required. Valid values:
     * - If `category` is set to `cloud`. Valid values: `5` to `2000`.
     * - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
     * - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
     * - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
     * - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
     * - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
     * - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
     * - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
     * - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
     * - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return The size of the disk. Unit: GiB. This parameter is required. Valid values:
     * - If `category` is set to `cloud`. Valid values: `5` to `2000`.
     * - If `category` is set to `cloudEfficiency`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudSsd`. Valid values: `20` to `32768`.
     * - If `category` is set to `cloudAuto`. Valid values: `1` to `65536`.
     * - If `category` is set to `cloudEssdEntry`. Valid values: `10` to `32768`.
     * - If `category` is set to `elasticEphemeralDiskStandard`. Valid values: `64` to `8192`.
     * - If `category` is set to `elasticEphemeralDiskPremium`. Valid values: `64` to `8192`.
     * - If `category` is set to `cloudEssd`, the valid values are related to `performanceLevel`. Valid values:
     * - If `performanceLevel` is set to `PL0`. Valid values: `1` to `65536`.
     * - If `performanceLevel` is set to `PL1`. Valid values: `20` to `65536`.
     * - If `performanceLevel` is set to `PL2`. Valid values: `461` to `65536`.
     * - If `performanceLevel` is set to `PL3`. Valid values: `1261` to `65536`.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return The ID of the snapshot to use to create the disk. **NOTE:** If the size of the snapshot specified by `snapshotId` is larger than the value of `size`, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by `snapshotId` is smaller than the value of `size`, the size of the created disk is equal to the value of `size`.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * The status of the disk.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the disk.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the storage set.
     * 
     */
    @Export(name="storageSetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageSetId;

    /**
     * @return The ID of the storage set.
     * 
     */
    public Output<Optional<String>> storageSetId() {
        return Codegen.optional(this.storageSetId);
    }
    /**
     * The number of partitions in the storage set.
     * 
     */
    @Export(name="storageSetPartitionNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> storageSetPartitionNumber;

    /**
     * @return The number of partitions in the storage set.
     * 
     */
    public Output<Optional<Integer>> storageSetPartitionNumber() {
        return Codegen.optional(this.storageSetPartitionNumber);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return The type to expand cloud disks. Valid Values: `online`, `offline`. Default to `offline`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return ID of the free zone to which the disk belongs. One of the `zoneId` and `instanceId` must be set but can not be set at the same time.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EcsDisk(java.lang.String name) {
        this(name, EcsDiskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EcsDisk(java.lang.String name, @Nullable EcsDiskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EcsDisk(java.lang.String name, @Nullable EcsDiskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/ecsDisk:EcsDisk", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EcsDisk(java.lang.String name, Output<java.lang.String> id, @Nullable EcsDiskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/ecsDisk:EcsDisk", name, state, makeResourceOptions(options, id), false);
    }

    private static EcsDiskArgs makeArgs(@Nullable EcsDiskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EcsDiskArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EcsDisk get(java.lang.String name, Output<java.lang.String> id, @Nullable EcsDiskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EcsDisk(name, id, state, options);
    }
}
