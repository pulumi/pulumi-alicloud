// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.slb.BackendServerArgs;
import com.pulumi.alicloud.slb.inputs.BackendServerState;
import com.pulumi.alicloud.slb.outputs.BackendServerBackendServer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Add a group of backend servers (ECS or ENI instance) to the Server Load Balancer or remove them from it.
 * 
 * &gt; **NOTE:** Available in 1.53.0+
 * 
 * ## Block servers
 * 
 * The servers mapping supports the following:
 * 
 * * `server_id` - (Required) A list backend server ID (ECS instance ID).
 * * `weight` - (Optional) Weight of the backend server. Valid value range: [0-100].
 * * `type` - (Optional) Type of the backend server. Valid value `ecs`, `eni`, `eci`. Default to `ecs`. **NOTE:** From 1.170.0+, The `eci` is valid.
 * * `server_ip` - (Optional, Computed, Available in 1.93.0+) ServerIp of the backend server. This parameter can be specified when the type is `eni`. `ecs` type currently does not support adding `server_ip` parameter.
 * 
 * ## Import
 * 
 * Load balancer backend server can be imported using the load balancer id.
 * 
 * ```sh
 *  $ pulumi import alicloud:slb/backendServer:BackendServer example &lt;load_balancer_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:slb/backendServer:BackendServer")
public class BackendServer extends com.pulumi.resources.CustomResource {
    /**
     * A list of instances to added backend server in the SLB. It contains three sub-fields as `Block server` follows.
     * 
     */
    @Export(name="backendServers", type=List.class, parameters={BackendServerBackendServer.class})
    private Output</* @Nullable */ List<BackendServerBackendServer>> backendServers;

    /**
     * @return A list of instances to added backend server in the SLB. It contains three sub-fields as `Block server` follows.
     * 
     */
    public Output<Optional<List<BackendServerBackendServer>>> backendServers() {
        return Codegen.optional(this.backendServers);
    }
    /**
     * Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    @Export(name="deleteProtectionValidation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deleteProtectionValidation;

    /**
     * @return Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    public Output<Optional<Boolean>> deleteProtectionValidation() {
        return Codegen.optional(this.deleteProtectionValidation);
    }
    /**
     * ID of the load balancer.
     * 
     */
    @Export(name="loadBalancerId", type=String.class, parameters={})
    private Output<String> loadBalancerId;

    /**
     * @return ID of the load balancer.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackendServer(String name) {
        this(name, BackendServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackendServer(String name, BackendServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackendServer(String name, BackendServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:slb/backendServer:BackendServer", name, args == null ? BackendServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackendServer(String name, Output<String> id, @Nullable BackendServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:slb/backendServer:BackendServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackendServer get(String name, Output<String> id, @Nullable BackendServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackendServer(name, id, state, options);
    }
}
