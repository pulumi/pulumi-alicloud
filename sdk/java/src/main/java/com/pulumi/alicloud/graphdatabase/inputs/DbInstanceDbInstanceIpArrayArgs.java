// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.graphdatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbInstanceDbInstanceIpArrayArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbInstanceDbInstanceIpArrayArgs Empty = new DbInstanceDbInstanceIpArrayArgs();

    /**
     * The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
     * 
     */
    @Import(name="dbInstanceIpArrayAttribute")
    private @Nullable Output<String> dbInstanceIpArrayAttribute;

    /**
     * @return The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
     * 
     */
    public Optional<Output<String>> dbInstanceIpArrayAttribute() {
        return Optional.ofNullable(this.dbInstanceIpArrayAttribute);
    }

    /**
     * IP ADDRESS whitelist group name.
     * 
     */
    @Import(name="dbInstanceIpArrayName")
    private @Nullable Output<String> dbInstanceIpArrayName;

    /**
     * @return IP ADDRESS whitelist group name.
     * 
     */
    public Optional<Output<String>> dbInstanceIpArrayName() {
        return Optional.ofNullable(this.dbInstanceIpArrayName);
    }

    /**
     * IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0.0.0.0/0` and `10.23.12.24`(IP) or `10.23.12.24/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).
     * 
     */
    @Import(name="securityIps")
    private @Nullable Output<String> securityIps;

    /**
     * @return IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0.0.0.0/0` and `10.23.12.24`(IP) or `10.23.12.24/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).
     * 
     */
    public Optional<Output<String>> securityIps() {
        return Optional.ofNullable(this.securityIps);
    }

    private DbInstanceDbInstanceIpArrayArgs() {}

    private DbInstanceDbInstanceIpArrayArgs(DbInstanceDbInstanceIpArrayArgs $) {
        this.dbInstanceIpArrayAttribute = $.dbInstanceIpArrayAttribute;
        this.dbInstanceIpArrayName = $.dbInstanceIpArrayName;
        this.securityIps = $.securityIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbInstanceDbInstanceIpArrayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbInstanceDbInstanceIpArrayArgs $;

        public Builder() {
            $ = new DbInstanceDbInstanceIpArrayArgs();
        }

        public Builder(DbInstanceDbInstanceIpArrayArgs defaults) {
            $ = new DbInstanceDbInstanceIpArrayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbInstanceIpArrayAttribute The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(@Nullable Output<String> dbInstanceIpArrayAttribute) {
            $.dbInstanceIpArrayAttribute = dbInstanceIpArrayAttribute;
            return this;
        }

        /**
         * @param dbInstanceIpArrayAttribute The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(String dbInstanceIpArrayAttribute) {
            return dbInstanceIpArrayAttribute(Output.of(dbInstanceIpArrayAttribute));
        }

        /**
         * @param dbInstanceIpArrayName IP ADDRESS whitelist group name.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(@Nullable Output<String> dbInstanceIpArrayName) {
            $.dbInstanceIpArrayName = dbInstanceIpArrayName;
            return this;
        }

        /**
         * @param dbInstanceIpArrayName IP ADDRESS whitelist group name.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(String dbInstanceIpArrayName) {
            return dbInstanceIpArrayName(Output.of(dbInstanceIpArrayName));
        }

        /**
         * @param securityIps IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0.0.0.0/0` and `10.23.12.24`(IP) or `10.23.12.24/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).
         * 
         * @return builder
         * 
         */
        public Builder securityIps(@Nullable Output<String> securityIps) {
            $.securityIps = securityIps;
            return this;
        }

        /**
         * @param securityIps IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0.0.0.0/0` and `10.23.12.24`(IP) or `10.23.12.24/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).
         * 
         * @return builder
         * 
         */
        public Builder securityIps(String securityIps) {
            return securityIps(Output.of(securityIps));
        }

        public DbInstanceDbInstanceIpArrayArgs build() {
            return $;
        }
    }

}
