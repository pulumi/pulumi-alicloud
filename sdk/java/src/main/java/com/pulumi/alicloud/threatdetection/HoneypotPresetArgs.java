// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.alicloud.threatdetection.inputs.HoneypotPresetMetaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class HoneypotPresetArgs extends com.pulumi.resources.ResourceArgs {

    public static final HoneypotPresetArgs Empty = new HoneypotPresetArgs();

    /**
     * Honeypot mirror name
     * 
     */
    @Import(name="honeypotImageName", required=true)
    private Output<String> honeypotImageName;

    /**
     * @return Honeypot mirror name
     * 
     */
    public Output<String> honeypotImageName() {
        return this.honeypotImageName;
    }

    /**
     * Honeypot template custom parameters. See `meta` below.
     * 
     */
    @Import(name="meta", required=true)
    private Output<HoneypotPresetMetaArgs> meta;

    /**
     * @return Honeypot template custom parameters. See `meta` below.
     * 
     */
    public Output<HoneypotPresetMetaArgs> meta() {
        return this.meta;
    }

    /**
     * Unique id of management node
     * 
     */
    @Import(name="nodeId", required=true)
    private Output<String> nodeId;

    /**
     * @return Unique id of management node
     * 
     */
    public Output<String> nodeId() {
        return this.nodeId;
    }

    /**
     * Honeypot template custom name
     * 
     */
    @Import(name="presetName", required=true)
    private Output<String> presetName;

    /**
     * @return Honeypot template custom name
     * 
     */
    public Output<String> presetName() {
        return this.presetName;
    }

    private HoneypotPresetArgs() {}

    private HoneypotPresetArgs(HoneypotPresetArgs $) {
        this.honeypotImageName = $.honeypotImageName;
        this.meta = $.meta;
        this.nodeId = $.nodeId;
        this.presetName = $.presetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HoneypotPresetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HoneypotPresetArgs $;

        public Builder() {
            $ = new HoneypotPresetArgs();
        }

        public Builder(HoneypotPresetArgs defaults) {
            $ = new HoneypotPresetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param honeypotImageName Honeypot mirror name
         * 
         * @return builder
         * 
         */
        public Builder honeypotImageName(Output<String> honeypotImageName) {
            $.honeypotImageName = honeypotImageName;
            return this;
        }

        /**
         * @param honeypotImageName Honeypot mirror name
         * 
         * @return builder
         * 
         */
        public Builder honeypotImageName(String honeypotImageName) {
            return honeypotImageName(Output.of(honeypotImageName));
        }

        /**
         * @param meta Honeypot template custom parameters. See `meta` below.
         * 
         * @return builder
         * 
         */
        public Builder meta(Output<HoneypotPresetMetaArgs> meta) {
            $.meta = meta;
            return this;
        }

        /**
         * @param meta Honeypot template custom parameters. See `meta` below.
         * 
         * @return builder
         * 
         */
        public Builder meta(HoneypotPresetMetaArgs meta) {
            return meta(Output.of(meta));
        }

        /**
         * @param nodeId Unique id of management node
         * 
         * @return builder
         * 
         */
        public Builder nodeId(Output<String> nodeId) {
            $.nodeId = nodeId;
            return this;
        }

        /**
         * @param nodeId Unique id of management node
         * 
         * @return builder
         * 
         */
        public Builder nodeId(String nodeId) {
            return nodeId(Output.of(nodeId));
        }

        /**
         * @param presetName Honeypot template custom name
         * 
         * @return builder
         * 
         */
        public Builder presetName(Output<String> presetName) {
            $.presetName = presetName;
            return this;
        }

        /**
         * @param presetName Honeypot template custom name
         * 
         * @return builder
         * 
         */
        public Builder presetName(String presetName) {
            return presetName(Output.of(presetName));
        }

        public HoneypotPresetArgs build() {
            if ($.honeypotImageName == null) {
                throw new MissingRequiredPropertyException("HoneypotPresetArgs", "honeypotImageName");
            }
            if ($.meta == null) {
                throw new MissingRequiredPropertyException("HoneypotPresetArgs", "meta");
            }
            if ($.nodeId == null) {
                throw new MissingRequiredPropertyException("HoneypotPresetArgs", "nodeId");
            }
            if ($.presetName == null) {
                throw new MissingRequiredPropertyException("HoneypotPresetArgs", "presetName");
            }
            return $;
        }
    }

}
