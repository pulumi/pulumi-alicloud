// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertConfigurationPolicyConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertConfigurationPolicyConfigurationArgs Empty = new AlertConfigurationPolicyConfigurationArgs();

    /**
     * The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
     * 
     */
    @Import(name="actionPolicyId")
    private @Nullable Output<String> actionPolicyId;

    /**
     * @return The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
     * 
     */
    public Optional<Output<String>> actionPolicyId() {
        return Optional.ofNullable(this.actionPolicyId);
    }

    /**
     * Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
     * 
     */
    @Import(name="alertPolicyId")
    private @Nullable Output<String> alertPolicyId;

    /**
     * @return Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
     * 
     */
    public Optional<Output<String>> alertPolicyId() {
        return Optional.ofNullable(this.alertPolicyId);
    }

    /**
     * Repeat the waiting time. For example, 5m, 1H, etc.
     * 
     */
    @Import(name="repeatInterval")
    private @Nullable Output<String> repeatInterval;

    /**
     * @return Repeat the waiting time. For example, 5m, 1H, etc.
     * 
     */
    public Optional<Output<String>> repeatInterval() {
        return Optional.ofNullable(this.repeatInterval);
    }

    private AlertConfigurationPolicyConfigurationArgs() {}

    private AlertConfigurationPolicyConfigurationArgs(AlertConfigurationPolicyConfigurationArgs $) {
        this.actionPolicyId = $.actionPolicyId;
        this.alertPolicyId = $.alertPolicyId;
        this.repeatInterval = $.repeatInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertConfigurationPolicyConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertConfigurationPolicyConfigurationArgs $;

        public Builder() {
            $ = new AlertConfigurationPolicyConfigurationArgs();
        }

        public Builder(AlertConfigurationPolicyConfigurationArgs defaults) {
            $ = new AlertConfigurationPolicyConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionPolicyId The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
         * 
         * @return builder
         * 
         */
        public Builder actionPolicyId(@Nullable Output<String> actionPolicyId) {
            $.actionPolicyId = actionPolicyId;
            return this;
        }

        /**
         * @param actionPolicyId The ID of the action policy used. If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
         * 
         * @return builder
         * 
         */
        public Builder actionPolicyId(String actionPolicyId) {
            return actionPolicyId(Output.of(actionPolicyId));
        }

        /**
         * @param alertPolicyId Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(@Nullable Output<String> alertPolicyId) {
            $.alertPolicyId = alertPolicyId;
            return this;
        }

        /**
         * @param alertPolicyId Alarm policy ID. If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system). For advanced mode, set it to the specified alarm policy ID.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(String alertPolicyId) {
            return alertPolicyId(Output.of(alertPolicyId));
        }

        /**
         * @param repeatInterval Repeat the waiting time. For example, 5m, 1H, etc.
         * 
         * @return builder
         * 
         */
        public Builder repeatInterval(@Nullable Output<String> repeatInterval) {
            $.repeatInterval = repeatInterval;
            return this;
        }

        /**
         * @param repeatInterval Repeat the waiting time. For example, 5m, 1H, etc.
         * 
         * @return builder
         * 
         */
        public Builder repeatInterval(String repeatInterval) {
            return repeatInterval(Output.of(repeatInterval));
        }

        public AlertConfigurationPolicyConfigurationArgs build() {
            return $;
        }
    }

}
