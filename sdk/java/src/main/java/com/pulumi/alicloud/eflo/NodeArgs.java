// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeArgs Empty = new NodeArgs();

    /**
     * Billing cycle
     * 
     */
    @Import(name="billingCycle")
    private @Nullable Output<String> billingCycle;

    /**
     * @return Billing cycle
     * 
     */
    public Optional<Output<String>> billingCycle() {
        return Optional.ofNullable(this.billingCycle);
    }

    /**
     * Classification
     * 
     */
    @Import(name="classify")
    private @Nullable Output<String> classify;

    /**
     * @return Classification
     * 
     */
    public Optional<Output<String>> classify() {
        return Optional.ofNullable(this.classify);
    }

    /**
     * Node Model. Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
     * 
     * @deprecated
     * Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
     * 
     */
    @Deprecated /* Field 'computing_server' has been deprecated from provider version 1.261.0. New field 'machine_type' instead. */
    @Import(name="computingServer")
    private @Nullable Output<String> computingServer;

    /**
     * @return Node Model. Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
     * 
     * @deprecated
     * Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
     * 
     */
    @Deprecated /* Field 'computing_server' has been deprecated from provider version 1.261.0. New field 'machine_type' instead. */
    public Optional<Output<String>> computingServer() {
        return Optional.ofNullable(this.computingServer);
    }

    /**
     * Offer Information
     * 
     */
    @Import(name="discountLevel")
    private @Nullable Output<String> discountLevel;

    /**
     * @return Offer Information
     * 
     */
    public Optional<Output<String>> discountLevel() {
        return Optional.ofNullable(this.discountLevel);
    }

    /**
     * Cluster Number
     * 
     */
    @Import(name="hpnZone")
    private @Nullable Output<String> hpnZone;

    /**
     * @return Cluster Number
     * 
     */
    public Optional<Output<String>> hpnZone() {
        return Optional.ofNullable(this.hpnZone);
    }

    /**
     * Whether to buy PAI. default value `false`.
     * 
     */
    @Import(name="installPai")
    private @Nullable Output<Boolean> installPai;

    /**
     * @return Whether to buy PAI. default value `false`.
     * 
     */
    public Optional<Output<Boolean>> installPai() {
        return Optional.ofNullable(this.installPai);
    }

    /**
     * Model
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return Model
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Down payment ratio
     * 
     */
    @Import(name="paymentRatio")
    private @Nullable Output<String> paymentRatio;

    /**
     * @return Down payment ratio
     * 
     */
    public Optional<Output<String>> paymentRatio() {
        return Optional.ofNullable(this.paymentRatio);
    }

    /**
     * The payment method of the node. Value range: Subscription: fixed fee installment; PayAsYouGo: pay by volume.
     * The default is Subscription.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The payment method of the node. Value range: Subscription: fixed fee installment; PayAsYouGo: pay by volume.
     * The default is Subscription.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Form
     * 
     */
    @Import(name="productForm")
    private @Nullable Output<String> productForm;

    /**
     * @return Form
     * 
     */
    public Optional<Output<String>> productForm() {
        return Optional.ofNullable(this.productForm);
    }

    /**
     * Automatic renewal period, in months.
     * 
     * &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Automatic renewal period, in months.
     * 
     * &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Automatic renewal status, value:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     * The default ManualRenewal.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Automatic renewal status, value:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     * The default ManualRenewal.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Architecture
     * 
     */
    @Import(name="serverArch")
    private @Nullable Output<String> serverArch;

    /**
     * @return Architecture
     * 
     */
    public Optional<Output<String>> serverArch() {
        return Optional.ofNullable(this.serverArch);
    }

    /**
     * Number of stages
     * 
     */
    @Import(name="stageNum")
    private @Nullable Output<String> stageNum;

    /**
     * @return Number of stages
     * 
     */
    public Optional<Output<String>> stageNum() {
        return Optional.ofNullable(this.stageNum);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Availability Zone
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Availability Zone
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private NodeArgs() {}

    private NodeArgs(NodeArgs $) {
        this.billingCycle = $.billingCycle;
        this.classify = $.classify;
        this.computingServer = $.computingServer;
        this.discountLevel = $.discountLevel;
        this.hpnZone = $.hpnZone;
        this.installPai = $.installPai;
        this.machineType = $.machineType;
        this.paymentRatio = $.paymentRatio;
        this.paymentType = $.paymentType;
        this.period = $.period;
        this.productForm = $.productForm;
        this.renewPeriod = $.renewPeriod;
        this.renewalStatus = $.renewalStatus;
        this.resourceGroupId = $.resourceGroupId;
        this.serverArch = $.serverArch;
        this.stageNum = $.stageNum;
        this.status = $.status;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeArgs $;

        public Builder() {
            $ = new NodeArgs();
        }

        public Builder(NodeArgs defaults) {
            $ = new NodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingCycle Billing cycle
         * 
         * @return builder
         * 
         */
        public Builder billingCycle(@Nullable Output<String> billingCycle) {
            $.billingCycle = billingCycle;
            return this;
        }

        /**
         * @param billingCycle Billing cycle
         * 
         * @return builder
         * 
         */
        public Builder billingCycle(String billingCycle) {
            return billingCycle(Output.of(billingCycle));
        }

        /**
         * @param classify Classification
         * 
         * @return builder
         * 
         */
        public Builder classify(@Nullable Output<String> classify) {
            $.classify = classify;
            return this;
        }

        /**
         * @param classify Classification
         * 
         * @return builder
         * 
         */
        public Builder classify(String classify) {
            return classify(Output.of(classify));
        }

        /**
         * @param computingServer Node Model. Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
         * 
         */
        @Deprecated /* Field 'computing_server' has been deprecated from provider version 1.261.0. New field 'machine_type' instead. */
        public Builder computingServer(@Nullable Output<String> computingServer) {
            $.computingServer = computingServer;
            return this;
        }

        /**
         * @param computingServer Node Model. Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;computing_server&#39; has been deprecated from provider version 1.261.0. New field &#39;machine_type&#39; instead.
         * 
         */
        @Deprecated /* Field 'computing_server' has been deprecated from provider version 1.261.0. New field 'machine_type' instead. */
        public Builder computingServer(String computingServer) {
            return computingServer(Output.of(computingServer));
        }

        /**
         * @param discountLevel Offer Information
         * 
         * @return builder
         * 
         */
        public Builder discountLevel(@Nullable Output<String> discountLevel) {
            $.discountLevel = discountLevel;
            return this;
        }

        /**
         * @param discountLevel Offer Information
         * 
         * @return builder
         * 
         */
        public Builder discountLevel(String discountLevel) {
            return discountLevel(Output.of(discountLevel));
        }

        /**
         * @param hpnZone Cluster Number
         * 
         * @return builder
         * 
         */
        public Builder hpnZone(@Nullable Output<String> hpnZone) {
            $.hpnZone = hpnZone;
            return this;
        }

        /**
         * @param hpnZone Cluster Number
         * 
         * @return builder
         * 
         */
        public Builder hpnZone(String hpnZone) {
            return hpnZone(Output.of(hpnZone));
        }

        /**
         * @param installPai Whether to buy PAI. default value `false`.
         * 
         * @return builder
         * 
         */
        public Builder installPai(@Nullable Output<Boolean> installPai) {
            $.installPai = installPai;
            return this;
        }

        /**
         * @param installPai Whether to buy PAI. default value `false`.
         * 
         * @return builder
         * 
         */
        public Builder installPai(Boolean installPai) {
            return installPai(Output.of(installPai));
        }

        /**
         * @param machineType Model
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType Model
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param paymentRatio Down payment ratio
         * 
         * @return builder
         * 
         */
        public Builder paymentRatio(@Nullable Output<String> paymentRatio) {
            $.paymentRatio = paymentRatio;
            return this;
        }

        /**
         * @param paymentRatio Down payment ratio
         * 
         * @return builder
         * 
         */
        public Builder paymentRatio(String paymentRatio) {
            return paymentRatio(Output.of(paymentRatio));
        }

        /**
         * @param paymentType The payment method of the node. Value range: Subscription: fixed fee installment; PayAsYouGo: pay by volume.
         * The default is Subscription.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment method of the node. Value range: Subscription: fixed fee installment; PayAsYouGo: pay by volume.
         * The default is Subscription.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param period Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Prepaid cycle. The unit is Month, please enter an integer multiple of 12 for the annual payment product.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param productForm Form
         * 
         * @return builder
         * 
         */
        public Builder productForm(@Nullable Output<String> productForm) {
            $.productForm = productForm;
            return this;
        }

        /**
         * @param productForm Form
         * 
         * @return builder
         * 
         */
        public Builder productForm(String productForm) {
            return productForm(Output.of(productForm));
        }

        /**
         * @param renewPeriod Automatic renewal period, in months.
         * 
         * &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Automatic renewal period, in months.
         * 
         * &gt; **NOTE:**  When setting `RenewalStatus` to `AutoRenewal`, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewalStatus Automatic renewal status, value:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * The default ManualRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Automatic renewal status, value:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * The default ManualRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param serverArch Architecture
         * 
         * @return builder
         * 
         */
        public Builder serverArch(@Nullable Output<String> serverArch) {
            $.serverArch = serverArch;
            return this;
        }

        /**
         * @param serverArch Architecture
         * 
         * @return builder
         * 
         */
        public Builder serverArch(String serverArch) {
            return serverArch(Output.of(serverArch));
        }

        /**
         * @param stageNum Number of stages
         * 
         * @return builder
         * 
         */
        public Builder stageNum(@Nullable Output<String> stageNum) {
            $.stageNum = stageNum;
            return this;
        }

        /**
         * @param stageNum Number of stages
         * 
         * @return builder
         * 
         */
        public Builder stageNum(String stageNum) {
            return stageNum(Output.of(stageNum));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zone Availability Zone
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Availability Zone
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public NodeArgs build() {
            return $;
        }
    }

}
