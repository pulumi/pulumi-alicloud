// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketRefererConfig {
    /**
     * @return Allows referer to be empty. Defaults false.
     * 
     */
    private @Nullable Boolean allowEmpty;
    /**
     * @return The list of referer.
     * 
     */
    private List<String> referers;

    private BucketRefererConfig() {}
    /**
     * @return Allows referer to be empty. Defaults false.
     * 
     */
    public Optional<Boolean> allowEmpty() {
        return Optional.ofNullable(this.allowEmpty);
    }
    /**
     * @return The list of referer.
     * 
     */
    public List<String> referers() {
        return this.referers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketRefererConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowEmpty;
        private List<String> referers;
        public Builder() {}
        public Builder(BucketRefererConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowEmpty = defaults.allowEmpty;
    	      this.referers = defaults.referers;
        }

        @CustomType.Setter
        public Builder allowEmpty(@Nullable Boolean allowEmpty) {
            this.allowEmpty = allowEmpty;
            return this;
        }
        @CustomType.Setter
        public Builder referers(List<String> referers) {
            this.referers = Objects.requireNonNull(referers);
            return this;
        }
        public Builder referers(String... referers) {
            return referers(List.of(referers));
        }
        public BucketRefererConfig build() {
            final var o = new BucketRefererConfig();
            o.allowEmpty = allowEmpty;
            o.referers = referers;
            return o;
        }
    }
}
