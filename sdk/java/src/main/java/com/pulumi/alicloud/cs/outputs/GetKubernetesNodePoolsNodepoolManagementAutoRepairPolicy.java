// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy {
    /**
     * @return Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    private Boolean restartNode;

    private GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy() {}
    /**
     * @return Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    public Boolean restartNode() {
        return this.restartNode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean restartNode;
        public Builder() {}
        public Builder(GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.restartNode = defaults.restartNode;
        }

        @CustomType.Setter
        public Builder restartNode(Boolean restartNode) {
            if (restartNode == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy", "restartNode");
            }
            this.restartNode = restartNode;
            return this;
        }
        public GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy build() {
            final var _resultValue = new GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy();
            _resultValue.restartNode = restartNode;
            return _resultValue;
        }
    }
}
