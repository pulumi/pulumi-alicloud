// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertConfigurationTemplateConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertConfigurationTemplateConfigurationArgs Empty = new AlertConfigurationTemplateConfigurationArgs();

    @Import(name="annotations")
    private @Nullable Output<Map<String,Object>> annotations;

    public Optional<Output<Map<String,Object>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    @Import(name="lang")
    private @Nullable Output<String> lang;

    public Optional<Output<String>> lang() {
        return Optional.ofNullable(this.lang);
    }

    @Import(name="templateId")
    private @Nullable Output<String> templateId;

    public Optional<Output<String>> templateId() {
        return Optional.ofNullable(this.templateId);
    }

    @Import(name="tokens")
    private @Nullable Output<Map<String,Object>> tokens;

    public Optional<Output<Map<String,Object>>> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private AlertConfigurationTemplateConfigurationArgs() {}

    private AlertConfigurationTemplateConfigurationArgs(AlertConfigurationTemplateConfigurationArgs $) {
        this.annotations = $.annotations;
        this.lang = $.lang;
        this.templateId = $.templateId;
        this.tokens = $.tokens;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertConfigurationTemplateConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertConfigurationTemplateConfigurationArgs $;

        public Builder() {
            $ = new AlertConfigurationTemplateConfigurationArgs();
        }

        public Builder(AlertConfigurationTemplateConfigurationArgs defaults) {
            $ = new AlertConfigurationTemplateConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder annotations(@Nullable Output<Map<String,Object>> annotations) {
            $.annotations = annotations;
            return this;
        }

        public Builder annotations(Map<String,Object> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder lang(@Nullable Output<String> lang) {
            $.lang = lang;
            return this;
        }

        public Builder lang(String lang) {
            return lang(Output.of(lang));
        }

        public Builder templateId(@Nullable Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        public Builder tokens(@Nullable Output<Map<String,Object>> tokens) {
            $.tokens = tokens;
            return this;
        }

        public Builder tokens(Map<String,Object> tokens) {
            return tokens(Output.of(tokens));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public AlertConfigurationTemplateConfigurationArgs build() {
            return $;
        }
    }

}
