// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertResourcePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAlertResourcePlainArgs Empty = new GetAlertResourcePlainArgs();

    /**
     * The lang of alert center resource when type is user.
     * 
     */
    @Import(name="lang")
    private @Nullable String lang;

    /**
     * @return The lang of alert center resource when type is user.
     * 
     */
    public Optional<String> lang() {
        return Optional.ofNullable(this.lang);
    }

    /**
     * The project of alert resource when type is project.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project of alert resource when type is project.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The type of alert resources, must be user or project, &#39;user&#39; for init aliyuncloud account&#39;s alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; &#39;project&#39; for init project&#39;s alert resource, including logstore named internal-alert-history and alert dashboard.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of alert resources, must be user or project, &#39;user&#39; for init aliyuncloud account&#39;s alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; &#39;project&#39; for init project&#39;s alert resource, including logstore named internal-alert-history and alert dashboard.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetAlertResourcePlainArgs() {}

    private GetAlertResourcePlainArgs(GetAlertResourcePlainArgs $) {
        this.lang = $.lang;
        this.project = $.project;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertResourcePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertResourcePlainArgs $;

        public Builder() {
            $ = new GetAlertResourcePlainArgs();
        }

        public Builder(GetAlertResourcePlainArgs defaults) {
            $ = new GetAlertResourcePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lang The lang of alert center resource when type is user.
         * 
         * @return builder
         * 
         */
        public Builder lang(@Nullable String lang) {
            $.lang = lang;
            return this;
        }

        /**
         * @param project The project of alert resource when type is project.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param type The type of alert resources, must be user or project, &#39;user&#39; for init aliyuncloud account&#39;s alert center resource, including project named sls-alert-{uid}-{region} and some dashboards; &#39;project&#39; for init project&#39;s alert resource, including logstore named internal-alert-history and alert dashboard.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetAlertResourcePlainArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetAlertResourcePlainArgs", "type");
            }
            return $;
        }
    }

}
