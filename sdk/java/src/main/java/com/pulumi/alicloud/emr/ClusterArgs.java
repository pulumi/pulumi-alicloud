// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emr;

import com.pulumi.alicloud.emr.inputs.ClusterBootstrapActionArgs;
import com.pulumi.alicloud.emr.inputs.ClusterConfigArgs;
import com.pulumi.alicloud.emr.inputs.ClusterHostGroupArgs;
import com.pulumi.alicloud.emr.inputs.ClusterMetaStoreConfArgs;
import com.pulumi.alicloud.emr.inputs.ClusterModifyClusterServiceConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * Boot action parameters.
     * 
     */
    @Import(name="bootstrapActions")
    private @Nullable Output<List<ClusterBootstrapActionArgs>> bootstrapActions;

    /**
     * @return Boot action parameters.
     * 
     */
    public Optional<Output<List<ClusterBootstrapActionArgs>>> bootstrapActions() {
        return Optional.ofNullable(this.bootstrapActions);
    }

    /**
     * Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
     * 
     */
    @Import(name="chargeType")
    private @Nullable Output<String> chargeType;

    /**
     * @return Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
     * 
     */
    public Optional<Output<String>> chargeType() {
        return Optional.ofNullable(this.chargeType);
    }

    /**
     * EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported &#39;GATEWAY&#39; available in 1.61.0+.
     * 
     */
    @Import(name="clusterType", required=true)
    private Output<String> clusterType;

    /**
     * @return EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported &#39;GATEWAY&#39; available in 1.61.0+.
     * 
     */
    public Output<String> clusterType() {
        return this.clusterType;
    }

    /**
     * The custom configurations of emr-cluster service.
     * 
     */
    @Import(name="configs")
    private @Nullable Output<List<ClusterConfigArgs>> configs;

    /**
     * @return The custom configurations of emr-cluster service.
     * 
     */
    public Optional<Output<List<ClusterConfigArgs>>> configs() {
        return Optional.ofNullable(this.configs);
    }

    /**
     * Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
     * 
     */
    @Import(name="depositType")
    private @Nullable Output<String> depositType;

    /**
     * @return Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
     * 
     */
    public Optional<Output<String>> depositType() {
        return Optional.ofNullable(this.depositType);
    }

    /**
     * High security cluster (true) or not. Default value is false.
     * 
     */
    @Import(name="easEnable")
    private @Nullable Output<Boolean> easEnable;

    /**
     * @return High security cluster (true) or not. Default value is false.
     * 
     */
    public Optional<Output<Boolean>> easEnable() {
        return Optional.ofNullable(this.easEnable);
    }

    /**
     * EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
     * 
     */
    @Import(name="emrVer", required=true)
    private Output<String> emrVer;

    /**
     * @return EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
     * 
     */
    public Output<String> emrVer() {
        return this.emrVer;
    }

    /**
     * High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
     * 
     */
    @Import(name="highAvailabilityEnable")
    private @Nullable Output<Boolean> highAvailabilityEnable;

    /**
     * @return High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
     * 
     */
    public Optional<Output<Boolean>> highAvailabilityEnable() {
        return Optional.ofNullable(this.highAvailabilityEnable);
    }

    /**
     * Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
     * 
     */
    @Import(name="hostGroups")
    private @Nullable Output<List<ClusterHostGroupArgs>> hostGroups;

    /**
     * @return Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
     * 
     */
    public Optional<Output<List<ClusterHostGroupArgs>>> hostGroups() {
        return Optional.ofNullable(this.hostGroups);
    }

    /**
     * Whether the MASTER node has a public IP address enabled. Default value is false.
     * 
     */
    @Import(name="isOpenPublicIp")
    private @Nullable Output<Boolean> isOpenPublicIp;

    /**
     * @return Whether the MASTER node has a public IP address enabled. Default value is false.
     * 
     */
    public Optional<Output<Boolean>> isOpenPublicIp() {
        return Optional.ofNullable(this.isOpenPublicIp);
    }

    /**
     * Ssh key pair.
     * 
     */
    @Import(name="keyPairName")
    private @Nullable Output<String> keyPairName;

    /**
     * @return Ssh key pair.
     * 
     */
    public Optional<Output<String>> keyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }

    /**
     * Master ssh password.
     * 
     */
    @Import(name="masterPwd")
    private @Nullable Output<String> masterPwd;

    /**
     * @return Master ssh password.
     * 
     */
    public Optional<Output<String>> masterPwd() {
        return Optional.ofNullable(this.masterPwd);
    }

    /**
     * The configuration of emr-cluster service component metadata storage. If meta store type is ’user_rds’, this should be specified.
     * 
     */
    @Import(name="metaStoreConf")
    private @Nullable Output<ClusterMetaStoreConfArgs> metaStoreConf;

    /**
     * @return The configuration of emr-cluster service component metadata storage. If meta store type is ’user_rds’, this should be specified.
     * 
     */
    public Optional<Output<ClusterMetaStoreConfArgs>> metaStoreConf() {
        return Optional.ofNullable(this.metaStoreConf);
    }

    /**
     * The type of emr-cluster service component metadata storage. ’dlf’ or ’local’ or ’user_rds’ .
     * 
     */
    @Import(name="metaStoreType")
    private @Nullable Output<String> metaStoreType;

    /**
     * @return The type of emr-cluster service component metadata storage. ’dlf’ or ’local’ or ’user_rds’ .
     * 
     */
    public Optional<Output<String>> metaStoreType() {
        return Optional.ofNullable(this.metaStoreType);
    }

    /**
     * The configurations of emr-cluster service modification after cluster created.
     * 
     */
    @Import(name="modifyClusterServiceConfig")
    private @Nullable Output<ClusterModifyClusterServiceConfigArgs> modifyClusterServiceConfig;

    /**
     * @return The configurations of emr-cluster service modification after cluster created.
     * 
     */
    public Optional<Output<ClusterModifyClusterServiceConfigArgs>> modifyClusterServiceConfig() {
        return Optional.ofNullable(this.modifyClusterServiceConfig);
    }

    /**
     * The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Optional software list.
     * 
     */
    @Import(name="optionSoftwareLists")
    private @Nullable Output<List<String>> optionSoftwareLists;

    /**
     * @return Optional software list.
     * 
     */
    public Optional<Output<List<String>>> optionSoftwareLists() {
        return Optional.ofNullable(this.optionSoftwareLists);
    }

    /**
     * If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * This specify the related cluster id, if this cluster is a Gateway.
     * 
     */
    @Import(name="relatedClusterId")
    private @Nullable Output<String> relatedClusterId;

    /**
     * @return This specify the related cluster id, if this cluster is a Gateway.
     * 
     */
    public Optional<Output<String>> relatedClusterId() {
        return Optional.ofNullable(this.relatedClusterId);
    }

    /**
     * The Id of resource group which the emr-cluster belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The Id of resource group which the emr-cluster belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Security Group ID for Cluster, you can also specify this key for each host group.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return Security Group ID for Cluster, you can also specify this key for each host group.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * If this is set true, we can ssh into cluster. Default value is false.
     * 
     */
    @Import(name="sshEnable")
    private @Nullable Output<Boolean> sshEnable;

    /**
     * @return If this is set true, we can ssh into cluster. Default value is false.
     * 
     */
    public Optional<Output<Boolean>> sshEnable() {
        return Optional.ofNullable(this.sshEnable);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Use local metadb. Default is false.
     * 
     */
    @Import(name="useLocalMetadb")
    private @Nullable Output<Boolean> useLocalMetadb;

    /**
     * @return Use local metadb. Default is false.
     * 
     */
    public Optional<Output<Boolean>> useLocalMetadb() {
        return Optional.ofNullable(this.useLocalMetadb);
    }

    /**
     * Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
     * 
     */
    @Import(name="userDefinedEmrEcsRole")
    private @Nullable Output<String> userDefinedEmrEcsRole;

    /**
     * @return Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
     * 
     */
    public Optional<Output<String>> userDefinedEmrEcsRole() {
        return Optional.ofNullable(this.userDefinedEmrEcsRole);
    }

    /**
     * Global vswitch id, you can also specify it in host group.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return Global vswitch id, you can also specify it in host group.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * Zone ID, e.g. cn-huhehaote-a
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return Zone ID, e.g. cn-huhehaote-a
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.bootstrapActions = $.bootstrapActions;
        this.chargeType = $.chargeType;
        this.clusterType = $.clusterType;
        this.configs = $.configs;
        this.depositType = $.depositType;
        this.easEnable = $.easEnable;
        this.emrVer = $.emrVer;
        this.highAvailabilityEnable = $.highAvailabilityEnable;
        this.hostGroups = $.hostGroups;
        this.isOpenPublicIp = $.isOpenPublicIp;
        this.keyPairName = $.keyPairName;
        this.masterPwd = $.masterPwd;
        this.metaStoreConf = $.metaStoreConf;
        this.metaStoreType = $.metaStoreType;
        this.modifyClusterServiceConfig = $.modifyClusterServiceConfig;
        this.name = $.name;
        this.optionSoftwareLists = $.optionSoftwareLists;
        this.period = $.period;
        this.relatedClusterId = $.relatedClusterId;
        this.resourceGroupId = $.resourceGroupId;
        this.securityGroupId = $.securityGroupId;
        this.sshEnable = $.sshEnable;
        this.tags = $.tags;
        this.useLocalMetadb = $.useLocalMetadb;
        this.userDefinedEmrEcsRole = $.userDefinedEmrEcsRole;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootstrapActions Boot action parameters.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapActions(@Nullable Output<List<ClusterBootstrapActionArgs>> bootstrapActions) {
            $.bootstrapActions = bootstrapActions;
            return this;
        }

        /**
         * @param bootstrapActions Boot action parameters.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapActions(List<ClusterBootstrapActionArgs> bootstrapActions) {
            return bootstrapActions(Output.of(bootstrapActions));
        }

        /**
         * @param bootstrapActions Boot action parameters.
         * 
         * @return builder
         * 
         */
        public Builder bootstrapActions(ClusterBootstrapActionArgs... bootstrapActions) {
            return bootstrapActions(List.of(bootstrapActions));
        }

        /**
         * @param chargeType Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
         * 
         * @return builder
         * 
         */
        public Builder chargeType(@Nullable Output<String> chargeType) {
            $.chargeType = chargeType;
            return this;
        }

        /**
         * @param chargeType Charge Type for this cluster. Supported value: PostPaid or PrePaid. Default value: PostPaid.
         * 
         * @return builder
         * 
         */
        public Builder chargeType(String chargeType) {
            return chargeType(Output.of(chargeType));
        }

        /**
         * @param clusterType EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported &#39;GATEWAY&#39; available in 1.61.0+.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported &#39;GATEWAY&#39; available in 1.61.0+.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param configs The custom configurations of emr-cluster service.
         * 
         * @return builder
         * 
         */
        public Builder configs(@Nullable Output<List<ClusterConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        /**
         * @param configs The custom configurations of emr-cluster service.
         * 
         * @return builder
         * 
         */
        public Builder configs(List<ClusterConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        /**
         * @param configs The custom configurations of emr-cluster service.
         * 
         * @return builder
         * 
         */
        public Builder configs(ClusterConfigArgs... configs) {
            return configs(List.of(configs));
        }

        /**
         * @param depositType Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
         * 
         * @return builder
         * 
         */
        public Builder depositType(@Nullable Output<String> depositType) {
            $.depositType = depositType;
            return this;
        }

        /**
         * @param depositType Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
         * 
         * @return builder
         * 
         */
        public Builder depositType(String depositType) {
            return depositType(Output.of(depositType));
        }

        /**
         * @param easEnable High security cluster (true) or not. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder easEnable(@Nullable Output<Boolean> easEnable) {
            $.easEnable = easEnable;
            return this;
        }

        /**
         * @param easEnable High security cluster (true) or not. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder easEnable(Boolean easEnable) {
            return easEnable(Output.of(easEnable));
        }

        /**
         * @param emrVer EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
         * 
         * @return builder
         * 
         */
        public Builder emrVer(Output<String> emrVer) {
            $.emrVer = emrVer;
            return this;
        }

        /**
         * @param emrVer EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
         * 
         * @return builder
         * 
         */
        public Builder emrVer(String emrVer) {
            return emrVer(Output.of(emrVer));
        }

        /**
         * @param highAvailabilityEnable High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
         * 
         * @return builder
         * 
         */
        public Builder highAvailabilityEnable(@Nullable Output<Boolean> highAvailabilityEnable) {
            $.highAvailabilityEnable = highAvailabilityEnable;
            return this;
        }

        /**
         * @param highAvailabilityEnable High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
         * 
         * @return builder
         * 
         */
        public Builder highAvailabilityEnable(Boolean highAvailabilityEnable) {
            return highAvailabilityEnable(Output.of(highAvailabilityEnable));
        }

        /**
         * @param hostGroups Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
         * 
         * @return builder
         * 
         */
        public Builder hostGroups(@Nullable Output<List<ClusterHostGroupArgs>> hostGroups) {
            $.hostGroups = hostGroups;
            return this;
        }

        /**
         * @param hostGroups Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
         * 
         * @return builder
         * 
         */
        public Builder hostGroups(List<ClusterHostGroupArgs> hostGroups) {
            return hostGroups(Output.of(hostGroups));
        }

        /**
         * @param hostGroups Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
         * 
         * @return builder
         * 
         */
        public Builder hostGroups(ClusterHostGroupArgs... hostGroups) {
            return hostGroups(List.of(hostGroups));
        }

        /**
         * @param isOpenPublicIp Whether the MASTER node has a public IP address enabled. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isOpenPublicIp(@Nullable Output<Boolean> isOpenPublicIp) {
            $.isOpenPublicIp = isOpenPublicIp;
            return this;
        }

        /**
         * @param isOpenPublicIp Whether the MASTER node has a public IP address enabled. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isOpenPublicIp(Boolean isOpenPublicIp) {
            return isOpenPublicIp(Output.of(isOpenPublicIp));
        }

        /**
         * @param keyPairName Ssh key pair.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(@Nullable Output<String> keyPairName) {
            $.keyPairName = keyPairName;
            return this;
        }

        /**
         * @param keyPairName Ssh key pair.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(String keyPairName) {
            return keyPairName(Output.of(keyPairName));
        }

        /**
         * @param masterPwd Master ssh password.
         * 
         * @return builder
         * 
         */
        public Builder masterPwd(@Nullable Output<String> masterPwd) {
            $.masterPwd = masterPwd;
            return this;
        }

        /**
         * @param masterPwd Master ssh password.
         * 
         * @return builder
         * 
         */
        public Builder masterPwd(String masterPwd) {
            return masterPwd(Output.of(masterPwd));
        }

        /**
         * @param metaStoreConf The configuration of emr-cluster service component metadata storage. If meta store type is ’user_rds’, this should be specified.
         * 
         * @return builder
         * 
         */
        public Builder metaStoreConf(@Nullable Output<ClusterMetaStoreConfArgs> metaStoreConf) {
            $.metaStoreConf = metaStoreConf;
            return this;
        }

        /**
         * @param metaStoreConf The configuration of emr-cluster service component metadata storage. If meta store type is ’user_rds’, this should be specified.
         * 
         * @return builder
         * 
         */
        public Builder metaStoreConf(ClusterMetaStoreConfArgs metaStoreConf) {
            return metaStoreConf(Output.of(metaStoreConf));
        }

        /**
         * @param metaStoreType The type of emr-cluster service component metadata storage. ’dlf’ or ’local’ or ’user_rds’ .
         * 
         * @return builder
         * 
         */
        public Builder metaStoreType(@Nullable Output<String> metaStoreType) {
            $.metaStoreType = metaStoreType;
            return this;
        }

        /**
         * @param metaStoreType The type of emr-cluster service component metadata storage. ’dlf’ or ’local’ or ’user_rds’ .
         * 
         * @return builder
         * 
         */
        public Builder metaStoreType(String metaStoreType) {
            return metaStoreType(Output.of(metaStoreType));
        }

        /**
         * @param modifyClusterServiceConfig The configurations of emr-cluster service modification after cluster created.
         * 
         * @return builder
         * 
         */
        public Builder modifyClusterServiceConfig(@Nullable Output<ClusterModifyClusterServiceConfigArgs> modifyClusterServiceConfig) {
            $.modifyClusterServiceConfig = modifyClusterServiceConfig;
            return this;
        }

        /**
         * @param modifyClusterServiceConfig The configurations of emr-cluster service modification after cluster created.
         * 
         * @return builder
         * 
         */
        public Builder modifyClusterServiceConfig(ClusterModifyClusterServiceConfigArgs modifyClusterServiceConfig) {
            return modifyClusterServiceConfig(Output.of(modifyClusterServiceConfig));
        }

        /**
         * @param name The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param optionSoftwareLists Optional software list.
         * 
         * @return builder
         * 
         */
        public Builder optionSoftwareLists(@Nullable Output<List<String>> optionSoftwareLists) {
            $.optionSoftwareLists = optionSoftwareLists;
            return this;
        }

        /**
         * @param optionSoftwareLists Optional software list.
         * 
         * @return builder
         * 
         */
        public Builder optionSoftwareLists(List<String> optionSoftwareLists) {
            return optionSoftwareLists(Output.of(optionSoftwareLists));
        }

        /**
         * @param optionSoftwareLists Optional software list.
         * 
         * @return builder
         * 
         */
        public Builder optionSoftwareLists(String... optionSoftwareLists) {
            return optionSoftwareLists(List.of(optionSoftwareLists));
        }

        /**
         * @param period If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param relatedClusterId This specify the related cluster id, if this cluster is a Gateway.
         * 
         * @return builder
         * 
         */
        public Builder relatedClusterId(@Nullable Output<String> relatedClusterId) {
            $.relatedClusterId = relatedClusterId;
            return this;
        }

        /**
         * @param relatedClusterId This specify the related cluster id, if this cluster is a Gateway.
         * 
         * @return builder
         * 
         */
        public Builder relatedClusterId(String relatedClusterId) {
            return relatedClusterId(Output.of(relatedClusterId));
        }

        /**
         * @param resourceGroupId The Id of resource group which the emr-cluster belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The Id of resource group which the emr-cluster belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityGroupId Security Group ID for Cluster, you can also specify this key for each host group.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId Security Group ID for Cluster, you can also specify this key for each host group.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param sshEnable If this is set true, we can ssh into cluster. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder sshEnable(@Nullable Output<Boolean> sshEnable) {
            $.sshEnable = sshEnable;
            return this;
        }

        /**
         * @param sshEnable If this is set true, we can ssh into cluster. Default value is false.
         * 
         * @return builder
         * 
         */
        public Builder sshEnable(Boolean sshEnable) {
            return sshEnable(Output.of(sshEnable));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param useLocalMetadb Use local metadb. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder useLocalMetadb(@Nullable Output<Boolean> useLocalMetadb) {
            $.useLocalMetadb = useLocalMetadb;
            return this;
        }

        /**
         * @param useLocalMetadb Use local metadb. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder useLocalMetadb(Boolean useLocalMetadb) {
            return useLocalMetadb(Output.of(useLocalMetadb));
        }

        /**
         * @param userDefinedEmrEcsRole Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
         * 
         * @return builder
         * 
         */
        public Builder userDefinedEmrEcsRole(@Nullable Output<String> userDefinedEmrEcsRole) {
            $.userDefinedEmrEcsRole = userDefinedEmrEcsRole;
            return this;
        }

        /**
         * @param userDefinedEmrEcsRole Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
         * 
         * @return builder
         * 
         */
        public Builder userDefinedEmrEcsRole(String userDefinedEmrEcsRole) {
            return userDefinedEmrEcsRole(Output.of(userDefinedEmrEcsRole));
        }

        /**
         * @param vswitchId Global vswitch id, you can also specify it in host group.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId Global vswitch id, you can also specify it in host group.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId Zone ID, e.g. cn-huhehaote-a
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId Zone ID, e.g. cn-huhehaote-a
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ClusterArgs build() {
            if ($.clusterType == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "clusterType");
            }
            if ($.emrVer == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "emrVer");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "zoneId");
            }
            return $;
        }
    }

}
