// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionTunnelOptionsSpecificationTunnelIkeConfig {
    private @Nullable String ikeAuthAlg;
    private @Nullable String ikeEncAlg;
    private @Nullable Integer ikeLifetime;
    private @Nullable String ikeMode;
    private @Nullable String ikePfs;
    private @Nullable String ikeVersion;
    private @Nullable String localId;
    private @Nullable String psk;
    private @Nullable String remoteId;

    private ConnectionTunnelOptionsSpecificationTunnelIkeConfig() {}
    public Optional<String> ikeAuthAlg() {
        return Optional.ofNullable(this.ikeAuthAlg);
    }
    public Optional<String> ikeEncAlg() {
        return Optional.ofNullable(this.ikeEncAlg);
    }
    public Optional<Integer> ikeLifetime() {
        return Optional.ofNullable(this.ikeLifetime);
    }
    public Optional<String> ikeMode() {
        return Optional.ofNullable(this.ikeMode);
    }
    public Optional<String> ikePfs() {
        return Optional.ofNullable(this.ikePfs);
    }
    public Optional<String> ikeVersion() {
        return Optional.ofNullable(this.ikeVersion);
    }
    public Optional<String> localId() {
        return Optional.ofNullable(this.localId);
    }
    public Optional<String> psk() {
        return Optional.ofNullable(this.psk);
    }
    public Optional<String> remoteId() {
        return Optional.ofNullable(this.remoteId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionTunnelOptionsSpecificationTunnelIkeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ikeAuthAlg;
        private @Nullable String ikeEncAlg;
        private @Nullable Integer ikeLifetime;
        private @Nullable String ikeMode;
        private @Nullable String ikePfs;
        private @Nullable String ikeVersion;
        private @Nullable String localId;
        private @Nullable String psk;
        private @Nullable String remoteId;
        public Builder() {}
        public Builder(ConnectionTunnelOptionsSpecificationTunnelIkeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ikeAuthAlg = defaults.ikeAuthAlg;
    	      this.ikeEncAlg = defaults.ikeEncAlg;
    	      this.ikeLifetime = defaults.ikeLifetime;
    	      this.ikeMode = defaults.ikeMode;
    	      this.ikePfs = defaults.ikePfs;
    	      this.ikeVersion = defaults.ikeVersion;
    	      this.localId = defaults.localId;
    	      this.psk = defaults.psk;
    	      this.remoteId = defaults.remoteId;
        }

        @CustomType.Setter
        public Builder ikeAuthAlg(@Nullable String ikeAuthAlg) {

            this.ikeAuthAlg = ikeAuthAlg;
            return this;
        }
        @CustomType.Setter
        public Builder ikeEncAlg(@Nullable String ikeEncAlg) {

            this.ikeEncAlg = ikeEncAlg;
            return this;
        }
        @CustomType.Setter
        public Builder ikeLifetime(@Nullable Integer ikeLifetime) {

            this.ikeLifetime = ikeLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder ikeMode(@Nullable String ikeMode) {

            this.ikeMode = ikeMode;
            return this;
        }
        @CustomType.Setter
        public Builder ikePfs(@Nullable String ikePfs) {

            this.ikePfs = ikePfs;
            return this;
        }
        @CustomType.Setter
        public Builder ikeVersion(@Nullable String ikeVersion) {

            this.ikeVersion = ikeVersion;
            return this;
        }
        @CustomType.Setter
        public Builder localId(@Nullable String localId) {

            this.localId = localId;
            return this;
        }
        @CustomType.Setter
        public Builder psk(@Nullable String psk) {

            this.psk = psk;
            return this;
        }
        @CustomType.Setter
        public Builder remoteId(@Nullable String remoteId) {

            this.remoteId = remoteId;
            return this;
        }
        public ConnectionTunnelOptionsSpecificationTunnelIkeConfig build() {
            final var _resultValue = new ConnectionTunnelOptionsSpecificationTunnelIkeConfig();
            _resultValue.ikeAuthAlg = ikeAuthAlg;
            _resultValue.ikeEncAlg = ikeEncAlg;
            _resultValue.ikeLifetime = ikeLifetime;
            _resultValue.ikeMode = ikeMode;
            _resultValue.ikePfs = ikePfs;
            _resultValue.ikeVersion = ikeVersion;
            _resultValue.localId = localId;
            _resultValue.psk = psk;
            _resultValue.remoteId = remoteId;
            return _resultValue;
        }
    }
}
