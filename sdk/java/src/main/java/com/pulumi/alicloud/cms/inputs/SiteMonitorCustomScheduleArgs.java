// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteMonitorCustomScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteMonitorCustomScheduleArgs Empty = new SiteMonitorCustomScheduleArgs();

    /**
     * The days in a week.
     * 
     */
    @Import(name="days")
    private @Nullable Output<List<Integer>> days;

    /**
     * @return The days in a week.
     * 
     */
    public Optional<Output<List<Integer>>> days() {
        return Optional.ofNullable(this.days);
    }

    /**
     * The end time of the detection. Unit: hours.
     * 
     */
    @Import(name="endHour")
    private @Nullable Output<Integer> endHour;

    /**
     * @return The end time of the detection. Unit: hours.
     * 
     */
    public Optional<Output<Integer>> endHour() {
        return Optional.ofNullable(this.endHour);
    }

    /**
     * The start time of the detection. Unit: hours.
     * 
     */
    @Import(name="startHour")
    private @Nullable Output<Integer> startHour;

    /**
     * @return The start time of the detection. Unit: hours.
     * 
     */
    public Optional<Output<Integer>> startHour() {
        return Optional.ofNullable(this.startHour);
    }

    /**
     * The time zone of the detection.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return The time zone of the detection.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private SiteMonitorCustomScheduleArgs() {}

    private SiteMonitorCustomScheduleArgs(SiteMonitorCustomScheduleArgs $) {
        this.days = $.days;
        this.endHour = $.endHour;
        this.startHour = $.startHour;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteMonitorCustomScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteMonitorCustomScheduleArgs $;

        public Builder() {
            $ = new SiteMonitorCustomScheduleArgs();
        }

        public Builder(SiteMonitorCustomScheduleArgs defaults) {
            $ = new SiteMonitorCustomScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param days The days in a week.
         * 
         * @return builder
         * 
         */
        public Builder days(@Nullable Output<List<Integer>> days) {
            $.days = days;
            return this;
        }

        /**
         * @param days The days in a week.
         * 
         * @return builder
         * 
         */
        public Builder days(List<Integer> days) {
            return days(Output.of(days));
        }

        /**
         * @param days The days in a week.
         * 
         * @return builder
         * 
         */
        public Builder days(Integer... days) {
            return days(List.of(days));
        }

        /**
         * @param endHour The end time of the detection. Unit: hours.
         * 
         * @return builder
         * 
         */
        public Builder endHour(@Nullable Output<Integer> endHour) {
            $.endHour = endHour;
            return this;
        }

        /**
         * @param endHour The end time of the detection. Unit: hours.
         * 
         * @return builder
         * 
         */
        public Builder endHour(Integer endHour) {
            return endHour(Output.of(endHour));
        }

        /**
         * @param startHour The start time of the detection. Unit: hours.
         * 
         * @return builder
         * 
         */
        public Builder startHour(@Nullable Output<Integer> startHour) {
            $.startHour = startHour;
            return this;
        }

        /**
         * @param startHour The start time of the detection. Unit: hours.
         * 
         * @return builder
         * 
         */
        public Builder startHour(Integer startHour) {
            return startHour(Output.of(startHour));
        }

        /**
         * @param timeZone The time zone of the detection.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone of the detection.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public SiteMonitorCustomScheduleArgs build() {
            return $;
        }
    }

}
