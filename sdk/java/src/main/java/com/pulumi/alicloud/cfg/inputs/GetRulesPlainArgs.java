// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRulesPlainArgs Empty = new GetRulesPlainArgs();

    /**
     * Field `configRuleState` has been deprecated from provider version 1.124.1. New field `status` instead.
     * 
     * @deprecated
     * Field &#39;config_rule_state&#39; has been deprecated from provider version 1.124.1. New field &#39;status&#39; instead.
     * 
     */
    @Deprecated /* Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead. */
    @Import(name="configRuleState")
    private @Nullable String configRuleState;

    /**
     * @return Field `configRuleState` has been deprecated from provider version 1.124.1. New field `status` instead.
     * 
     * @deprecated
     * Field &#39;config_rule_state&#39; has been deprecated from provider version 1.124.1. New field &#39;status&#39; instead.
     * 
     */
    @Deprecated /* Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead. */
    public Optional<String> configRuleState() {
        return Optional.ofNullable(this.configRuleState);
    }

    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    @Import(name="enableDetails")
    private @Nullable Boolean enableDetails;

    /**
     * @return Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of Config Rule IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Config Rule IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by rule name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
     * 
     */
    @Import(name="riskLevel")
    private @Nullable Integer riskLevel;

    /**
     * @return The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
     * 
     */
    public Optional<Integer> riskLevel() {
        return Optional.ofNullable(this.riskLevel);
    }

    /**
     * The name of config rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable String ruleName;

    /**
     * @return The name of config rule.
     * 
     */
    public Optional<String> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * The status of the config rule, valid values: `ACTIVE`, `DELETING`, `EVALUATING` and `INACTIVE`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the config rule, valid values: `ACTIVE`, `DELETING`, `EVALUATING` and `INACTIVE`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetRulesPlainArgs() {}

    private GetRulesPlainArgs(GetRulesPlainArgs $) {
        this.configRuleState = $.configRuleState;
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.riskLevel = $.riskLevel;
        this.ruleName = $.ruleName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRulesPlainArgs $;

        public Builder() {
            $ = new GetRulesPlainArgs();
        }

        public Builder(GetRulesPlainArgs defaults) {
            $ = new GetRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configRuleState Field `configRuleState` has been deprecated from provider version 1.124.1. New field `status` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;config_rule_state&#39; has been deprecated from provider version 1.124.1. New field &#39;status&#39; instead.
         * 
         */
        @Deprecated /* Field 'config_rule_state' has been deprecated from provider version 1.124.1. New field 'status' instead. */
        public Builder configRuleState(@Nullable String configRuleState) {
            $.configRuleState = configRuleState;
            return this;
        }

        /**
         * @param enableDetails Default to `false`. Set it to `true` can output more details about resource attributes.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        /**
         * @param ids A list of Config Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Config Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param riskLevel The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
         * 
         * @return builder
         * 
         */
        public Builder riskLevel(@Nullable Integer riskLevel) {
            $.riskLevel = riskLevel;
            return this;
        }

        /**
         * @param ruleName The name of config rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable String ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param status The status of the config rule, valid values: `ACTIVE`, `DELETING`, `EVALUATING` and `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetRulesPlainArgs build() {
            return $;
        }
    }

}
