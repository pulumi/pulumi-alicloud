// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpSetState extends com.pulumi.resources.ResourceArgs {

    public static final IpSetState Empty = new IpSetState();

    /**
     * The ID of an acceleration region.
     * 
     */
    @Import(name="accelerateRegionId")
    private @Nullable Output<String> accelerateRegionId;

    /**
     * @return The ID of an acceleration region.
     * 
     */
    public Optional<Output<String>> accelerateRegionId() {
        return Optional.ofNullable(this.accelerateRegionId);
    }

    /**
     * The ID of the Global Accelerator (GA) instance.
     * 
     */
    @Import(name="acceleratorId")
    private @Nullable Output<String> acceleratorId;

    /**
     * @return The ID of the Global Accelerator (GA) instance.
     * 
     */
    public Optional<Output<String>> acceleratorId() {
        return Optional.ofNullable(this.acceleratorId);
    }

    /**
     * The bandwidth allocated to the acceleration region.
     * &gt; **NOTE:** The minimum bandwidth of each accelerated region is 2Mbps. The total bandwidth of the acceleration region should be less than or equal to the bandwidth of the basic bandwidth package you purchased.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The bandwidth allocated to the acceleration region.
     * &gt; **NOTE:** The minimum bandwidth of each accelerated region is 2Mbps. The total bandwidth of the acceleration region should be less than or equal to the bandwidth of the basic bandwidth package you purchased.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The list of accelerated IP addresses in the acceleration region.
     * 
     */
    @Import(name="ipAddressLists")
    private @Nullable Output<List<String>> ipAddressLists;

    /**
     * @return The list of accelerated IP addresses in the acceleration region.
     * 
     */
    public Optional<Output<List<String>>> ipAddressLists() {
        return Optional.ofNullable(this.ipAddressLists);
    }

    /**
     * The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value: `IPv4`.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value: `IPv4`.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * The line type of the elastic IP address (EIP) in the acceleration region. Valid values: `BGP`, `BGP_PRO`.
     * 
     */
    @Import(name="ispType")
    private @Nullable Output<String> ispType;

    /**
     * @return The line type of the elastic IP address (EIP) in the acceleration region. Valid values: `BGP`, `BGP_PRO`.
     * 
     */
    public Optional<Output<String>> ispType() {
        return Optional.ofNullable(this.ispType);
    }

    /**
     * The status of the acceleration region.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the acceleration region.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private IpSetState() {}

    private IpSetState(IpSetState $) {
        this.accelerateRegionId = $.accelerateRegionId;
        this.acceleratorId = $.acceleratorId;
        this.bandwidth = $.bandwidth;
        this.ipAddressLists = $.ipAddressLists;
        this.ipVersion = $.ipVersion;
        this.ispType = $.ispType;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpSetState $;

        public Builder() {
            $ = new IpSetState();
        }

        public Builder(IpSetState defaults) {
            $ = new IpSetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerateRegionId The ID of an acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder accelerateRegionId(@Nullable Output<String> accelerateRegionId) {
            $.accelerateRegionId = accelerateRegionId;
            return this;
        }

        /**
         * @param accelerateRegionId The ID of an acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder accelerateRegionId(String accelerateRegionId) {
            return accelerateRegionId(Output.of(accelerateRegionId));
        }

        /**
         * @param acceleratorId The ID of the Global Accelerator (GA) instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(@Nullable Output<String> acceleratorId) {
            $.acceleratorId = acceleratorId;
            return this;
        }

        /**
         * @param acceleratorId The ID of the Global Accelerator (GA) instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(String acceleratorId) {
            return acceleratorId(Output.of(acceleratorId));
        }

        /**
         * @param bandwidth The bandwidth allocated to the acceleration region.
         * &gt; **NOTE:** The minimum bandwidth of each accelerated region is 2Mbps. The total bandwidth of the acceleration region should be less than or equal to the bandwidth of the basic bandwidth package you purchased.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth allocated to the acceleration region.
         * &gt; **NOTE:** The minimum bandwidth of each accelerated region is 2Mbps. The total bandwidth of the acceleration region should be less than or equal to the bandwidth of the basic bandwidth package you purchased.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param ipAddressLists The list of accelerated IP addresses in the acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressLists(@Nullable Output<List<String>> ipAddressLists) {
            $.ipAddressLists = ipAddressLists;
            return this;
        }

        /**
         * @param ipAddressLists The list of accelerated IP addresses in the acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressLists(List<String> ipAddressLists) {
            return ipAddressLists(Output.of(ipAddressLists));
        }

        /**
         * @param ipAddressLists The list of accelerated IP addresses in the acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressLists(String... ipAddressLists) {
            return ipAddressLists(List.of(ipAddressLists));
        }

        /**
         * @param ipVersion The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value: `IPv4`.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion The IP protocol used by the GA instance. Valid values: `IPv4`, `IPv6`. Default value: `IPv4`.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param ispType The line type of the elastic IP address (EIP) in the acceleration region. Valid values: `BGP`, `BGP_PRO`.
         * 
         * @return builder
         * 
         */
        public Builder ispType(@Nullable Output<String> ispType) {
            $.ispType = ispType;
            return this;
        }

        /**
         * @param ispType The line type of the elastic IP address (EIP) in the acceleration region. Valid values: `BGP`, `BGP_PRO`.
         * 
         * @return builder
         * 
         */
        public Builder ispType(String ispType) {
            return ispType(Output.of(ispType));
        }

        /**
         * @param status The status of the acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the acceleration region.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public IpSetState build() {
            return $;
        }
    }

}
