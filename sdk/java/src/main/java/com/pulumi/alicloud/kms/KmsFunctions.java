// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
import com.pulumi.alicloud.kms.inputs.GetAliasesPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
import com.pulumi.alicloud.kms.inputs.GetCiphertextPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
import com.pulumi.alicloud.kms.inputs.GetInstancesPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
import com.pulumi.alicloud.kms.inputs.GetKeyVersionsPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
import com.pulumi.alicloud.kms.inputs.GetKeysPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
import com.pulumi.alicloud.kms.inputs.GetPlaintextPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
import com.pulumi.alicloud.kms.inputs.GetSecretVersionsPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
import com.pulumi.alicloud.kms.inputs.GetSecretsPlainArgs;
import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
import com.pulumi.alicloud.kms.inputs.GetServicePlainArgs;
import com.pulumi.alicloud.kms.outputs.GetAliasesResult;
import com.pulumi.alicloud.kms.outputs.GetCiphertextResult;
import com.pulumi.alicloud.kms.outputs.GetInstancesResult;
import com.pulumi.alicloud.kms.outputs.GetKeyVersionsResult;
import com.pulumi.alicloud.kms.outputs.GetKeysResult;
import com.pulumi.alicloud.kms.outputs.GetPlaintextResult;
import com.pulumi.alicloud.kms.outputs.GetSecretVersionsResult;
import com.pulumi.alicloud.kms.outputs.GetSecretsResult;
import com.pulumi.alicloud.kms.outputs.GetServiceResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class KmsFunctions {
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAliasesResult> getAliases() {
        return getAliases(GetAliasesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAliasesResult> getAliasesPlain() {
        return getAliasesPlain(GetAliasesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAliasesResult> getAliases(GetAliasesArgs args) {
        return getAliases(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAliasesResult> getAliasesPlain(GetAliasesPlainArgs args) {
        return getAliasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAliasesResult> getAliases(GetAliasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getAliases:getAliases", TypeShape.of(GetAliasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAliasesResult> getAliases(GetAliasesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getAliases:getAliases", TypeShape.of(GetAliasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS aliases in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.79.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetAliasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsAliases = KmsFunctions.getAliases(GetAliasesArgs.builder()
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .nameRegex("alias/tf-example")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsAliases.aliases()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAliasesResult> getAliasesPlain(GetAliasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getAliases:getAliases", TypeShape.of(GetAliasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         final var encrypted = KmsFunctions.getCiphertext(GetCiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCiphertextResult> getCiphertext(GetCiphertextArgs args) {
        return getCiphertext(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         final var encrypted = KmsFunctions.getCiphertext(GetCiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCiphertextResult> getCiphertextPlain(GetCiphertextPlainArgs args) {
        return getCiphertextPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         final var encrypted = KmsFunctions.getCiphertext(GetCiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCiphertextResult> getCiphertext(GetCiphertextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getCiphertext:getCiphertext", TypeShape.of(GetCiphertextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         final var encrypted = KmsFunctions.getCiphertext(GetCiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCiphertextResult> getCiphertext(GetCiphertextArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getCiphertext:getCiphertext", TypeShape.of(GetCiphertextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetCiphertextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         final var encrypted = KmsFunctions.getCiphertext(GetCiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCiphertextResult> getCiphertextPlain(GetCiphertextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getCiphertext:getCiphertext", TypeShape.of(GetCiphertextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Kms Instance available to the user.[What is Instance](https://www.alibabacloud.com/help/en/)
     * 
     * &gt; **NOTE:** Available since v1.242.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.FormatArgs;
     * import com.pulumi.alicloud.kms.Instance;
     * import com.pulumi.alicloud.kms.InstanceArgs;
     * import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var current = AlicloudFunctions.getAccount(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *         var vpc_amp_instance_example = new Network("vpc-amp-instance-example", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(name)
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var vswitch_j = new Switch("vswitch-j", SwitchArgs.builder()
     *             .vpcId(vpc_amp_instance_example.id())
     *             .zoneId("cn-hangzhou-j")
     *             .cidrBlock("172.16.2.0/24")
     *             .build());
     * 
     *         var shareVPC = new Network("shareVPC", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s3")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var shareVswitch = new Switch("shareVswitch", SwitchArgs.builder()
     *             .vpcId(shareVPC.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC2 = new Network("share-VPC2", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s5")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vswitch2 = new Switch("share-vswitch2", SwitchArgs.builder()
     *             .vpcId(share_VPC2.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var share_VPC3 = new Network("share-VPC3", NetworkArgs.builder()
     *             .cidrBlock("172.16.0.0/12")
     *             .vpcName(StdFunctions.format(FormatArgs.builder()
     *                 .input("%s7")
     *                 .args(name)
     *                 .build()).result())
     *             .build());
     * 
     *         var share_vsw3 = new Switch("share-vsw3", SwitchArgs.builder()
     *             .vpcId(share_VPC3.id())
     *             .zoneId("cn-hangzhou-k")
     *             .cidrBlock("172.16.1.0/24")
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .vpcNum(7)
     *             .keyNum(1000)
     *             .secretNum(0)
     *             .spec(1000)
     *             .renewStatus("ManualRenewal")
     *             .productVersion("3")
     *             .renewPeriod(3)
     *             .vpcId(vswitch.vpcId())
     *             .zoneIds(            
     *                 "cn-hangzhou-k",
     *                 "cn-hangzhou-j")
     *             .vswitchIds(vswitch.id())
     *             .bindVpcs(            
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(shareVswitch.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(shareVswitch.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vswitch2.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vswitch2.id())
     *                     .vpcOwnerId(current.id())
     *                     .build(),
     *                 InstanceBindVpcArgs.builder()
     *                     .vpcId(share_vsw3.vpcId())
     *                     .regionId("cn-hangzhou")
     *                     .vswitchId(share_vsw3.id())
     *                     .vpcOwnerId(current.id())
     *                     .build())
     *             .log("0")
     *             .period(1)
     *             .logStorage(0)
     *             .paymentType("Subscription")
     *             .build());
     * 
     *         final var default = KmsFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(defaultInstance.id())
     *             .build());
     * 
     *         ctx.export("alicloudKmsInstanceExampleId", default_.applyValue(_default_ -> _default_.instances()[0].instanceId()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS KeyVersions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; NOTE: Available in v1.85.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var alicloudKmsKeyVersionsDs = KmsFunctions.getKeyVersions(GetKeyVersionsArgs.builder()
     *             .keyId("08438c-b4d5-4d05-928c-07b7xxxx")
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .build());
     * 
     *         ctx.export("allVersions", alicloudKmsKeyVersionsDs.versions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVersionsResult> getKeyVersions(GetKeyVersionsArgs args) {
        return getKeyVersions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS KeyVersions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; NOTE: Available in v1.85.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var alicloudKmsKeyVersionsDs = KmsFunctions.getKeyVersions(GetKeyVersionsArgs.builder()
     *             .keyId("08438c-b4d5-4d05-928c-07b7xxxx")
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .build());
     * 
     *         ctx.export("allVersions", alicloudKmsKeyVersionsDs.versions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyVersionsResult> getKeyVersionsPlain(GetKeyVersionsPlainArgs args) {
        return getKeyVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS KeyVersions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; NOTE: Available in v1.85.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var alicloudKmsKeyVersionsDs = KmsFunctions.getKeyVersions(GetKeyVersionsArgs.builder()
     *             .keyId("08438c-b4d5-4d05-928c-07b7xxxx")
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .build());
     * 
     *         ctx.export("allVersions", alicloudKmsKeyVersionsDs.versions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVersionsResult> getKeyVersions(GetKeyVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getKeyVersions:getKeyVersions", TypeShape.of(GetKeyVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS KeyVersions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; NOTE: Available in v1.85.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var alicloudKmsKeyVersionsDs = KmsFunctions.getKeyVersions(GetKeyVersionsArgs.builder()
     *             .keyId("08438c-b4d5-4d05-928c-07b7xxxx")
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .build());
     * 
     *         ctx.export("allVersions", alicloudKmsKeyVersionsDs.versions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVersionsResult> getKeyVersions(GetKeyVersionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getKeyVersions:getKeyVersions", TypeShape.of(GetKeyVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS KeyVersions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; NOTE: Available in v1.85.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeyVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var alicloudKmsKeyVersionsDs = KmsFunctions.getKeyVersions(GetKeyVersionsArgs.builder()
     *             .keyId("08438c-b4d5-4d05-928c-07b7xxxx")
     *             .ids("d89e8a53-b708-41aa-8c67-6873axxx")
     *             .build());
     * 
     *         ctx.export("allVersions", alicloudKmsKeyVersionsDs.versions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyVersionsResult> getKeyVersionsPlain(GetKeyVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getKeyVersions:getKeyVersions", TypeShape.of(GetKeyVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeysResult> getKeys() {
        return getKeys(GetKeysArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeysResult> getKeysPlain() {
        return getKeysPlain(GetKeysPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeysResult> getKeys(GetKeysArgs args) {
        return getKeys(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeysResult> getKeysPlain(GetKeysPlainArgs args) {
        return getKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeysResult> getKeys(GetKeysArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getKeys:getKeys", TypeShape.of(GetKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeysResult> getKeys(GetKeysArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getKeys:getKeys", TypeShape.of(GetKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS keys in an Alibaba Cloud account according to the specified filters.
     * 
     * For information about KMS Key and how to use it, see [What is Key](https://www.alibabacloud.com/help/en/kms/developer-reference/api-createkey).
     * 
     * &gt; **NOTE:** Available since v1.85.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsKeysDs = KmsFunctions.getKeys(GetKeysArgs.builder()
     *             .descriptionRegex("Hello KMS")
     *             .outputFile("kms_keys.json")
     *             .build());
     * 
     *         ctx.export("firstKeyId", kmsKeysDs.keys()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeysResult> getKeysPlain(GetKeysPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getKeys:getKeys", TypeShape.of(GetKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.Ciphertext;
     * import com.pulumi.alicloud.kms.CiphertextArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         // Encrypt plaintext 'example'
     *         var encrypted = new Ciphertext("encrypted", CiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *         // Decrypt encrypted ciphertext
     *         final var plaintext = KmsFunctions.getPlaintext(GetPlaintextArgs.builder()
     *             .ciphertextBlob(encrypted.ciphertextBlob())
     *             .build());
     * 
     *         ctx.export("decrypted", plaintext.applyValue(_plaintext -> _plaintext.plaintext()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPlaintextResult> getPlaintext(GetPlaintextArgs args) {
        return getPlaintext(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.Ciphertext;
     * import com.pulumi.alicloud.kms.CiphertextArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         // Encrypt plaintext 'example'
     *         var encrypted = new Ciphertext("encrypted", CiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *         // Decrypt encrypted ciphertext
     *         final var plaintext = KmsFunctions.getPlaintext(GetPlaintextArgs.builder()
     *             .ciphertextBlob(encrypted.ciphertextBlob())
     *             .build());
     * 
     *         ctx.export("decrypted", plaintext.applyValue(_plaintext -> _plaintext.plaintext()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPlaintextResult> getPlaintextPlain(GetPlaintextPlainArgs args) {
        return getPlaintextPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.Ciphertext;
     * import com.pulumi.alicloud.kms.CiphertextArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         // Encrypt plaintext 'example'
     *         var encrypted = new Ciphertext("encrypted", CiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *         // Decrypt encrypted ciphertext
     *         final var plaintext = KmsFunctions.getPlaintext(GetPlaintextArgs.builder()
     *             .ciphertextBlob(encrypted.ciphertextBlob())
     *             .build());
     * 
     *         ctx.export("decrypted", plaintext.applyValue(_plaintext -> _plaintext.plaintext()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPlaintextResult> getPlaintext(GetPlaintextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getPlaintext:getPlaintext", TypeShape.of(GetPlaintextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.Ciphertext;
     * import com.pulumi.alicloud.kms.CiphertextArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         // Encrypt plaintext 'example'
     *         var encrypted = new Ciphertext("encrypted", CiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *         // Decrypt encrypted ciphertext
     *         final var plaintext = KmsFunctions.getPlaintext(GetPlaintextArgs.builder()
     *             .ciphertextBlob(encrypted.ciphertextBlob())
     *             .build());
     * 
     *         ctx.export("decrypted", plaintext.applyValue(_plaintext -> _plaintext.plaintext()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPlaintextResult> getPlaintext(GetPlaintextArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getPlaintext:getPlaintext", TypeShape.of(GetPlaintextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.Key;
     * import com.pulumi.alicloud.kms.KeyArgs;
     * import com.pulumi.alicloud.kms.Ciphertext;
     * import com.pulumi.alicloud.kms.CiphertextArgs;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetPlaintextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var key = new Key("key", KeyArgs.builder()
     *             .description("example key")
     *             .isEnabled(true)
     *             .build());
     * 
     *         // Encrypt plaintext 'example'
     *         var encrypted = new Ciphertext("encrypted", CiphertextArgs.builder()
     *             .keyId(key.id())
     *             .plaintext("example")
     *             .build());
     * 
     *         // Decrypt encrypted ciphertext
     *         final var plaintext = KmsFunctions.getPlaintext(GetPlaintextArgs.builder()
     *             .ciphertextBlob(encrypted.ciphertextBlob())
     *             .build());
     * 
     *         ctx.export("decrypted", plaintext.applyValue(_plaintext -> _plaintext.plaintext()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPlaintextResult> getPlaintextPlain(GetPlaintextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getPlaintext:getPlaintext", TypeShape.of(GetPlaintextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.88.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretVersionsDs = KmsFunctions.getSecretVersions(GetSecretVersionsArgs.builder()
     *             .secretName("secret_name")
     *             .enableDetails(true)
     *             .build());
     * 
     *         ctx.export("firstSecretData", kmsSecretVersionsDs.versions()[0].secretData());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretVersionsResult> getSecretVersions(GetSecretVersionsArgs args) {
        return getSecretVersions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.88.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretVersionsDs = KmsFunctions.getSecretVersions(GetSecretVersionsArgs.builder()
     *             .secretName("secret_name")
     *             .enableDetails(true)
     *             .build());
     * 
     *         ctx.export("firstSecretData", kmsSecretVersionsDs.versions()[0].secretData());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretVersionsResult> getSecretVersionsPlain(GetSecretVersionsPlainArgs args) {
        return getSecretVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.88.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretVersionsDs = KmsFunctions.getSecretVersions(GetSecretVersionsArgs.builder()
     *             .secretName("secret_name")
     *             .enableDetails(true)
     *             .build());
     * 
     *         ctx.export("firstSecretData", kmsSecretVersionsDs.versions()[0].secretData());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretVersionsResult> getSecretVersions(GetSecretVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getSecretVersions:getSecretVersions", TypeShape.of(GetSecretVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.88.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretVersionsDs = KmsFunctions.getSecretVersions(GetSecretVersionsArgs.builder()
     *             .secretName("secret_name")
     *             .enableDetails(true)
     *             .build());
     * 
     *         ctx.export("firstSecretData", kmsSecretVersionsDs.versions()[0].secretData());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretVersionsResult> getSecretVersions(GetSecretVersionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getSecretVersions:getSecretVersions", TypeShape.of(GetSecretVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secret Versions in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.88.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretVersionsDs = KmsFunctions.getSecretVersions(GetSecretVersionsArgs.builder()
     *             .secretName("secret_name")
     *             .enableDetails(true)
     *             .build());
     * 
     *         ctx.export("firstSecretData", kmsSecretVersionsDs.versions()[0].secretData());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretVersionsResult> getSecretVersionsPlain(GetSecretVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getSecretVersions:getSecretVersions", TypeShape.of(GetSecretVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretsResult> getSecrets() {
        return getSecrets(GetSecretsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretsResult> getSecretsPlain() {
        return getSecretsPlain(GetSecretsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args) {
        return getSecrets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretsResult> getSecretsPlain(GetSecretsPlainArgs args) {
        return getSecretsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of KMS Secrets in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.86.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetSecretsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var kmsSecretsDs = KmsFunctions.getSecrets(GetSecretsArgs.builder()
     *             .fetchTags(true)
     *             .nameRegex("name_regex")
     *             .tags(Map.ofEntries(
     *                 Map.entry("k-aa", "v-aa"),
     *                 Map.entry("k-bb", "v-bb")
     *             ))
     *             .build());
     * 
     *         ctx.export("firstSecretId", kmsSecretsDs.secrets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretsResult> getSecretsPlain(GetSecretsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService() {
        return getService(GetServiceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain() {
        return getServicePlain(GetServicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:kms/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open KMS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about KMS and how to use it, see [What is KMS](https://help.aliyun.com/document_detail/186020.html).
     * 
     * &gt; **NOTE:** Available in v1.108.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.kms.KmsFunctions;
     * import com.pulumi.alicloud.kms.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = KmsFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:kms/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
}
