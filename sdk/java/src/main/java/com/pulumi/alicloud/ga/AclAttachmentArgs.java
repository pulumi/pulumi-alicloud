// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclAttachmentArgs Empty = new AclAttachmentArgs();

    /**
     * The ID of an ACL.
     * 
     */
    @Import(name="aclId", required=true)
    private Output<String> aclId;

    /**
     * @return The ID of an ACL.
     * 
     */
    public Output<String> aclId() {
        return this.aclId;
    }

    /**
     * The type of the ACL. Valid values:
     * 
     */
    @Import(name="aclType", required=true)
    private Output<String> aclType;

    /**
     * @return The type of the ACL. Valid values:
     * 
     */
    public Output<String> aclType() {
        return this.aclType;
    }

    /**
     * The dry run.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The ID of the listener.
     * 
     */
    @Import(name="listenerId", required=true)
    private Output<String> listenerId;

    /**
     * @return The ID of the listener.
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }

    private AclAttachmentArgs() {}

    private AclAttachmentArgs(AclAttachmentArgs $) {
        this.aclId = $.aclId;
        this.aclType = $.aclType;
        this.dryRun = $.dryRun;
        this.listenerId = $.listenerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclAttachmentArgs $;

        public Builder() {
            $ = new AclAttachmentArgs();
        }

        public Builder(AclAttachmentArgs defaults) {
            $ = new AclAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclId The ID of an ACL.
         * 
         * @return builder
         * 
         */
        public Builder aclId(Output<String> aclId) {
            $.aclId = aclId;
            return this;
        }

        /**
         * @param aclId The ID of an ACL.
         * 
         * @return builder
         * 
         */
        public Builder aclId(String aclId) {
            return aclId(Output.of(aclId));
        }

        /**
         * @param aclType The type of the ACL. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder aclType(Output<String> aclType) {
            $.aclType = aclType;
            return this;
        }

        /**
         * @param aclType The type of the ACL. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder aclType(String aclType) {
            return aclType(Output.of(aclType));
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param listenerId The ID of the listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        /**
         * @param listenerId The ID of the listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        public AclAttachmentArgs build() {
            $.aclId = Objects.requireNonNull($.aclId, "expected parameter 'aclId' to be non-null");
            $.aclType = Objects.requireNonNull($.aclType, "expected parameter 'aclType' to be non-null");
            $.listenerId = Objects.requireNonNull($.listenerId, "expected parameter 'listenerId' to be non-null");
            return $;
        }
    }

}
