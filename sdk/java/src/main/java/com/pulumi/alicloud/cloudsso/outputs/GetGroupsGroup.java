// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGroupsGroup {
    /**
     * @return The Created Time of the Directory.
     * 
     */
    private String createTime;
    /**
     * @return The Description of the Directory.
     * 
     */
    private String description;
    /**
     * @return The ID of the Directory.
     * 
     */
    private String directoryId;
    /**
     * @return The Group ID of the group.
     * 
     */
    private String groupId;
    /**
     * @return The Name of the group.
     * 
     */
    private String groupName;
    /**
     * @return The ID of the Group.
     * 
     */
    private String id;
    /**
     * @return The Provision Type of the Group. Valid values: `Manual`, `Synchronized`.
     * 
     */
    private String provisionType;

    private GetGroupsGroup() {}
    /**
     * @return The Created Time of the Directory.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The Description of the Directory.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Directory.
     * 
     */
    public String directoryId() {
        return this.directoryId;
    }
    /**
     * @return The Group ID of the group.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The Name of the group.
     * 
     */
    public String groupName() {
        return this.groupName;
    }
    /**
     * @return The ID of the Group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Provision Type of the Group. Valid values: `Manual`, `Synchronized`.
     * 
     */
    public String provisionType() {
        return this.provisionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String directoryId;
        private String groupId;
        private String groupName;
        private String id;
        private String provisionType;
        public Builder() {}
        public Builder(GetGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.directoryId = defaults.directoryId;
    	      this.groupId = defaults.groupId;
    	      this.groupName = defaults.groupName;
    	      this.id = defaults.id;
    	      this.provisionType = defaults.provisionType;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder directoryId(String directoryId) {
            if (directoryId == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "directoryId");
            }
            this.directoryId = directoryId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder groupName(String groupName) {
            if (groupName == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "groupName");
            }
            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder provisionType(String provisionType) {
            if (provisionType == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "provisionType");
            }
            this.provisionType = provisionType;
            return this;
        }
        public GetGroupsGroup build() {
            final var _resultValue = new GetGroupsGroup();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.directoryId = directoryId;
            _resultValue.groupId = groupId;
            _resultValue.groupName = groupName;
            _resultValue.id = id;
            _resultValue.provisionType = provisionType;
            return _resultValue;
        }
    }
}
