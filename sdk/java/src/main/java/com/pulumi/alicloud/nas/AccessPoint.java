// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.AccessPointArgs;
import com.pulumi.alicloud.nas.inputs.AccessPointState;
import com.pulumi.alicloud.nas.outputs.AccessPointPosixUser;
import com.pulumi.alicloud.nas.outputs.AccessPointRootPathPermission;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a File Storage (NAS) Access Point resource.
 * 
 * For information about NAS Access Point and how to use it, see [What is Access Point](https://www.alibabacloud.com/help/zh/nas/developer-reference/api-nas-2017-06-26-createaccesspoint).
 * 
 * &gt; **NOTE:** Available since v1.224.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.nas.AccessGroup;
 * import com.pulumi.alicloud.nas.AccessGroupArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import com.pulumi.alicloud.nas.AccessPoint;
 * import com.pulumi.alicloud.nas.AccessPointArgs;
 * import com.pulumi.alicloud.nas.inputs.AccessPointPosixUserArgs;
 * import com.pulumi.alicloud.nas.inputs.AccessPointRootPathPermissionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var azone = config.get("azone").orElse("cn-hangzhou-g");
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultkyVC70 = new Network("defaultkyVC70", NetworkArgs.builder()
 *             .cidrBlock("172.16.0.0/12")
 *             .description("接入点测试noRootDirectory")
 *             .build());
 * 
 *         var defaultoZAPmO = new Switch("defaultoZAPmO", SwitchArgs.builder()
 *             .vpcId(defaultkyVC70.id())
 *             .zoneId(default_.zones()[0].id())
 *             .cidrBlock("172.16.0.0/24")
 *             .build());
 * 
 *         var defaultBbc7ev = new AccessGroup("defaultBbc7ev", AccessGroupArgs.builder()
 *             .accessGroupType("Vpc")
 *             .accessGroupName(String.format("%s-%s", name,defaultInteger.result()))
 *             .fileSystemType("standard")
 *             .build());
 * 
 *         var defaultVtUpDh = new FileSystem("defaultVtUpDh", FileSystemArgs.builder()
 *             .storageType("Performance")
 *             .zoneId(azone)
 *             .encryptType(0)
 *             .protocolType("NFS")
 *             .fileSystemType("standard")
 *             .description("AccessPointnoRootDirectory")
 *             .build());
 * 
 *         var defaultAccessPoint = new AccessPoint("defaultAccessPoint", AccessPointArgs.builder()
 *             .vpcId(defaultkyVC70.id())
 *             .accessGroup(defaultBbc7ev.accessGroupName())
 *             .vswitchId(defaultoZAPmO.id())
 *             .fileSystemId(defaultVtUpDh.id())
 *             .accessPointName(name)
 *             .posixUser(AccessPointPosixUserArgs.builder()
 *                 .posixGroupId(123)
 *                 .posixUserId(123)
 *                 .build())
 *             .rootPathPermission(AccessPointRootPathPermissionArgs.builder()
 *                 .ownerGroupId(1)
 *                 .ownerUserId(1)
 *                 .permission("0777")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * File Storage (NAS) Access Point can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nas/accessPoint:AccessPoint example &lt;file_system_id&gt;:&lt;access_point_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nas/accessPoint:AccessPoint")
public class AccessPoint extends com.pulumi.resources.CustomResource {
    /**
     * The name of the permission group.
     * 
     */
    @Export(name="accessGroup", refs={String.class}, tree="[0]")
    private Output<String> accessGroup;

    /**
     * @return The name of the permission group.
     * 
     */
    public Output<String> accessGroup() {
        return this.accessGroup;
    }
    /**
     * The ID of the access point.
     * 
     */
    @Export(name="accessPointId", refs={String.class}, tree="[0]")
    private Output<String> accessPointId;

    /**
     * @return The ID of the access point.
     * 
     */
    public Output<String> accessPointId() {
        return this.accessPointId;
    }
    /**
     * The name of the access point.
     * 
     */
    @Export(name="accessPointName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessPointName;

    /**
     * @return The name of the access point.
     * 
     */
    public Output<Optional<String>> accessPointName() {
        return Codegen.optional(this.accessPointName);
    }
    /**
     * The time when the access point was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time when the access point was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Specifies whether to enable the RAM policy. Default value: `false`. Valid values:
     * 
     */
    @Export(name="enabledRam", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabledRam;

    /**
     * @return Specifies whether to enable the RAM policy. Default value: `false`. Valid values:
     * 
     */
    public Output<Optional<Boolean>> enabledRam() {
        return Codegen.optional(this.enabledRam);
    }
    /**
     * The ID of the file system.
     * 
     */
    @Export(name="fileSystemId", refs={String.class}, tree="[0]")
    private Output<String> fileSystemId;

    /**
     * @return The ID of the file system.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * The Posix user. See `posix_user` below.
     * 
     */
    @Export(name="posixUser", refs={AccessPointPosixUser.class}, tree="[0]")
    private Output<AccessPointPosixUser> posixUser;

    /**
     * @return The Posix user. See `posix_user` below.
     * 
     */
    public Output<AccessPointPosixUser> posixUser() {
        return this.posixUser;
    }
    /**
     * (Available since v1.254.0) The region ID.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return (Available since v1.254.0) The region ID.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The root directory of the access point.
     * 
     */
    @Export(name="rootPath", refs={String.class}, tree="[0]")
    private Output<String> rootPath;

    /**
     * @return The root directory of the access point.
     * 
     */
    public Output<String> rootPath() {
        return this.rootPath;
    }
    /**
     * Root permissions. See `root_path_permission` below.
     * 
     */
    @Export(name="rootPathPermission", refs={AccessPointRootPathPermission.class}, tree="[0]")
    private Output<AccessPointRootPathPermission> rootPathPermission;

    /**
     * @return Root permissions. See `root_path_permission` below.
     * 
     */
    public Output<AccessPointRootPathPermission> rootPathPermission() {
        return this.rootPathPermission;
    }
    /**
     * The status of the access point.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the access point.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the VPC.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The vSwitch ID.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output<String> vswitchId;

    /**
     * @return The vSwitch ID.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessPoint(java.lang.String name) {
        this(name, AccessPointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessPoint(java.lang.String name, AccessPointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessPoint(java.lang.String name, AccessPointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/accessPoint:AccessPoint", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccessPoint(java.lang.String name, Output<java.lang.String> id, @Nullable AccessPointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/accessPoint:AccessPoint", name, state, makeResourceOptions(options, id), false);
    }

    private static AccessPointArgs makeArgs(AccessPointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccessPointArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessPoint get(java.lang.String name, Output<java.lang.String> id, @Nullable AccessPointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessPoint(name, id, state, options);
    }
}
