// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dfs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VscMountPointInstanceVscArgs extends com.pulumi.resources.ResourceArgs {

    public static final VscMountPointInstanceVscArgs Empty = new VscMountPointInstanceVscArgs();

    /**
     * VSC Channel primary key representation, used to retrieve the specified VSC Channel.
     * 
     */
    @Import(name="vscId")
    private @Nullable Output<String> vscId;

    /**
     * @return VSC Channel primary key representation, used to retrieve the specified VSC Channel.
     * 
     */
    public Optional<Output<String>> vscId() {
        return Optional.ofNullable(this.vscId);
    }

    /**
     * VSC Mount status.
     * 
     */
    @Import(name="vscStatus")
    private @Nullable Output<String> vscStatus;

    /**
     * @return VSC Mount status.
     * 
     */
    public Optional<Output<String>> vscStatus() {
        return Optional.ofNullable(this.vscStatus);
    }

    /**
     * The VSC type.
     * 
     */
    @Import(name="vscType")
    private @Nullable Output<String> vscType;

    /**
     * @return The VSC type.
     * 
     */
    public Optional<Output<String>> vscType() {
        return Optional.ofNullable(this.vscType);
    }

    private VscMountPointInstanceVscArgs() {}

    private VscMountPointInstanceVscArgs(VscMountPointInstanceVscArgs $) {
        this.vscId = $.vscId;
        this.vscStatus = $.vscStatus;
        this.vscType = $.vscType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VscMountPointInstanceVscArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VscMountPointInstanceVscArgs $;

        public Builder() {
            $ = new VscMountPointInstanceVscArgs();
        }

        public Builder(VscMountPointInstanceVscArgs defaults) {
            $ = new VscMountPointInstanceVscArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param vscId VSC Channel primary key representation, used to retrieve the specified VSC Channel.
         * 
         * @return builder
         * 
         */
        public Builder vscId(@Nullable Output<String> vscId) {
            $.vscId = vscId;
            return this;
        }

        /**
         * @param vscId VSC Channel primary key representation, used to retrieve the specified VSC Channel.
         * 
         * @return builder
         * 
         */
        public Builder vscId(String vscId) {
            return vscId(Output.of(vscId));
        }

        /**
         * @param vscStatus VSC Mount status.
         * 
         * @return builder
         * 
         */
        public Builder vscStatus(@Nullable Output<String> vscStatus) {
            $.vscStatus = vscStatus;
            return this;
        }

        /**
         * @param vscStatus VSC Mount status.
         * 
         * @return builder
         * 
         */
        public Builder vscStatus(String vscStatus) {
            return vscStatus(Output.of(vscStatus));
        }

        /**
         * @param vscType The VSC type.
         * 
         * @return builder
         * 
         */
        public Builder vscType(@Nullable Output<String> vscType) {
            $.vscType = vscType;
            return this;
        }

        /**
         * @param vscType The VSC type.
         * 
         * @return builder
         * 
         */
        public Builder vscType(String vscType) {
            return vscType(Output.of(vscType));
        }

        public VscMountPointInstanceVscArgs build() {
            return $;
        }
    }

}
