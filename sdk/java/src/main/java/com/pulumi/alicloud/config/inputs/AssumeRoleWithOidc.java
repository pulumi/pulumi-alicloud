// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.config.inputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssumeRoleWithOidc {
    /**
     * @return ARN of the OIDC IdP.
     * 
     */
    private String oidcProviderArn;
    private @Nullable String oidcToken;
    /**
     * @return The file path of OIDC token that is issued by the external IdP.
     * 
     */
    private @Nullable String oidcTokenFile;
    /**
     * @return The policy that specifies the permissions of the returned STS token. You can use this parameter to grant the STS token fewer permissions than the permissions granted to the RAM role.
     * 
     */
    private @Nullable String policy;
    /**
     * @return ARN of a RAM role to assume prior to making API calls.
     * 
     */
    private String roleArn;
    /**
     * @return The custom name of the role session. Set this parameter based on your business requirements. In most cases, this parameter is set to the identity of the user who calls the operation, for example, the username.
     * 
     */
    private @Nullable String roleSessionName;
    /**
     * @return The validity period of the STS token. Unit: seconds. Default value: 3600. Minimum value: 900. Maximum value: the value of the MaxSessionDuration parameter when creating a ram role.
     * 
     */
    private @Nullable Integer sessionExpiration;

    private AssumeRoleWithOidc() {}
    /**
     * @return ARN of the OIDC IdP.
     * 
     */
    public String oidcProviderArn() {
        return this.oidcProviderArn;
    }
    public Optional<String> oidcToken() {
        return Optional.ofNullable(this.oidcToken);
    }
    /**
     * @return The file path of OIDC token that is issued by the external IdP.
     * 
     */
    public Optional<String> oidcTokenFile() {
        return Optional.ofNullable(this.oidcTokenFile);
    }
    /**
     * @return The policy that specifies the permissions of the returned STS token. You can use this parameter to grant the STS token fewer permissions than the permissions granted to the RAM role.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return ARN of a RAM role to assume prior to making API calls.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return The custom name of the role session. Set this parameter based on your business requirements. In most cases, this parameter is set to the identity of the user who calls the operation, for example, the username.
     * 
     */
    public Optional<String> roleSessionName() {
        return Optional.ofNullable(this.roleSessionName);
    }
    /**
     * @return The validity period of the STS token. Unit: seconds. Default value: 3600. Minimum value: 900. Maximum value: the value of the MaxSessionDuration parameter when creating a ram role.
     * 
     */
    public Optional<Integer> sessionExpiration() {
        return Optional.ofNullable(this.sessionExpiration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssumeRoleWithOidc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String oidcProviderArn;
        private @Nullable String oidcToken;
        private @Nullable String oidcTokenFile;
        private @Nullable String policy;
        private String roleArn;
        private @Nullable String roleSessionName;
        private @Nullable Integer sessionExpiration;
        public Builder() {}
        public Builder(AssumeRoleWithOidc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oidcProviderArn = defaults.oidcProviderArn;
    	      this.oidcToken = defaults.oidcToken;
    	      this.oidcTokenFile = defaults.oidcTokenFile;
    	      this.policy = defaults.policy;
    	      this.roleArn = defaults.roleArn;
    	      this.roleSessionName = defaults.roleSessionName;
    	      this.sessionExpiration = defaults.sessionExpiration;
        }

        @CustomType.Setter
        public Builder oidcProviderArn(String oidcProviderArn) {
            if (oidcProviderArn == null) {
              throw new MissingRequiredPropertyException("AssumeRoleWithOidc", "oidcProviderArn");
            }
            this.oidcProviderArn = oidcProviderArn;
            return this;
        }
        @CustomType.Setter
        public Builder oidcToken(@Nullable String oidcToken) {

            this.oidcToken = oidcToken;
            return this;
        }
        @CustomType.Setter
        public Builder oidcTokenFile(@Nullable String oidcTokenFile) {

            this.oidcTokenFile = oidcTokenFile;
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {

            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("AssumeRoleWithOidc", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder roleSessionName(@Nullable String roleSessionName) {

            this.roleSessionName = roleSessionName;
            return this;
        }
        @CustomType.Setter
        public Builder sessionExpiration(@Nullable Integer sessionExpiration) {

            this.sessionExpiration = sessionExpiration;
            return this;
        }
        public AssumeRoleWithOidc build() {
            final var _resultValue = new AssumeRoleWithOidc();
            _resultValue.oidcProviderArn = oidcProviderArn;
            _resultValue.oidcToken = oidcToken;
            _resultValue.oidcTokenFile = oidcTokenFile;
            _resultValue.policy = policy;
            _resultValue.roleArn = roleArn;
            _resultValue.roleSessionName = roleSessionName;
            _resultValue.sessionExpiration = sessionExpiration;
            return _resultValue;
        }
    }
}
