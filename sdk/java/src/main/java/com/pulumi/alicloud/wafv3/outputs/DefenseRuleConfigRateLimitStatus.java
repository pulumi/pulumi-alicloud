// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.wafv3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DefenseRuleConfigRateLimitStatus {
    /**
     * @return Required. Specifies the response code.
     * 
     */
    private @Nullable Integer code;
    /**
     * @return The threshold for the number of occurrences. When the number of occurrences of the specified HTTP status code exceeds this threshold, the protection rule is triggered. Valid values: 2 to 50000. You can specify Count or Ratio. You cannot specify the two parameters at the same time.
     * 
     */
    private @Nullable Integer count;
    /**
     * @return The threshold for the proportion of occurrences (percentage). When the proportion of occurrences of the specified HTTP status code exceeds this threshold, the protection rule is triggered. Valid values: 1 to 100. You can specify Count or Ratio. You cannot specify the two parameters at the same time.
     * 
     */
    private @Nullable Integer ratio;

    private DefenseRuleConfigRateLimitStatus() {}
    /**
     * @return Required. Specifies the response code.
     * 
     */
    public Optional<Integer> code() {
        return Optional.ofNullable(this.code);
    }
    /**
     * @return The threshold for the number of occurrences. When the number of occurrences of the specified HTTP status code exceeds this threshold, the protection rule is triggered. Valid values: 2 to 50000. You can specify Count or Ratio. You cannot specify the two parameters at the same time.
     * 
     */
    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return The threshold for the proportion of occurrences (percentage). When the proportion of occurrences of the specified HTTP status code exceeds this threshold, the protection rule is triggered. Valid values: 1 to 100. You can specify Count or Ratio. You cannot specify the two parameters at the same time.
     * 
     */
    public Optional<Integer> ratio() {
        return Optional.ofNullable(this.ratio);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefenseRuleConfigRateLimitStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer code;
        private @Nullable Integer count;
        private @Nullable Integer ratio;
        public Builder() {}
        public Builder(DefenseRuleConfigRateLimitStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.count = defaults.count;
    	      this.ratio = defaults.ratio;
        }

        @CustomType.Setter
        public Builder code(@Nullable Integer code) {

            this.code = code;
            return this;
        }
        @CustomType.Setter
        public Builder count(@Nullable Integer count) {

            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder ratio(@Nullable Integer ratio) {

            this.ratio = ratio;
            return this;
        }
        public DefenseRuleConfigRateLimitStatus build() {
            final var _resultValue = new DefenseRuleConfigRateLimitStatus();
            _resultValue.code = code;
            _resultValue.count = count;
            _resultValue.ratio = ratio;
            return _resultValue;
        }
    }
}
