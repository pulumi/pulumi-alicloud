// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.esa.ScheduledPreloadJobArgs;
import com.pulumi.alicloud.esa.inputs.ScheduledPreloadJobState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ESA Scheduled Preload Job resource.
 * 
 * For information about ESA Scheduled Preload Job and how to use it, see [What is Scheduled Preload Job](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateScheduledPreloadJob).
 * 
 * &gt; **NOTE:** Available since v1.248.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.esa.EsaFunctions;
 * import com.pulumi.alicloud.esa.inputs.GetSitesArgs;
 * import com.pulumi.alicloud.esa.Site;
 * import com.pulumi.alicloud.esa.SiteArgs;
 * import com.pulumi.alicloud.esa.ScheduledPreloadJob;
 * import com.pulumi.alicloud.esa.ScheduledPreloadJobArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = EsaFunctions.getSites(GetSitesArgs.builder()
 *             .planSubscribeType("enterpriseplan")
 *             .build());
 * 
 *         var defaultSite = new Site("defaultSite", SiteArgs.builder()
 *             .siteName("terraform.cn")
 *             .instanceId(default_.sites()[0].instanceId())
 *             .coverage("overseas")
 *             .accessType("NS")
 *             .build());
 * 
 *         var defaultScheduledPreloadJob = new ScheduledPreloadJob("defaultScheduledPreloadJob", ScheduledPreloadJobArgs.builder()
 *             .insertWay("textBox")
 *             .siteId(defaultSite.id())
 *             .scheduledPreloadJobName("example_scheduledpreloadexecution_job")
 *             .urlList("http://example.gositecdn.cn/example/example.txt")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ESA Scheduled Preload Job can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:esa/scheduledPreloadJob:ScheduledPreloadJob example &lt;site_id&gt;:&lt;scheduled_preload_job_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:esa/scheduledPreloadJob:ScheduledPreloadJob")
public class ScheduledPreloadJob extends com.pulumi.resources.CustomResource {
    /**
     * The time when the task was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time when the task was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The method to submit the URLs to be prefetched.
     * 
     */
    @Export(name="insertWay", refs={String.class}, tree="[0]")
    private Output<String> insertWay;

    /**
     * @return The method to submit the URLs to be prefetched.
     * 
     */
    public Output<String> insertWay() {
        return this.insertWay;
    }
    /**
     * Preheat OSS files regularly and fill in the OSS file address. Note: The OSS file contains the URL that you need to warm up.
     * 
     */
    @Export(name="ossUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ossUrl;

    /**
     * @return Preheat OSS files regularly and fill in the OSS file address. Note: The OSS file contains the URL that you need to warm up.
     * 
     */
    public Output<Optional<String>> ossUrl() {
        return Codegen.optional(this.ossUrl);
    }
    /**
     * The ID of the prefetch task.
     * 
     */
    @Export(name="scheduledPreloadJobId", refs={String.class}, tree="[0]")
    private Output<String> scheduledPreloadJobId;

    /**
     * @return The ID of the prefetch task.
     * 
     */
    public Output<String> scheduledPreloadJobId() {
        return this.scheduledPreloadJobId;
    }
    /**
     * The task name.
     * 
     */
    @Export(name="scheduledPreloadJobName", refs={String.class}, tree="[0]")
    private Output<String> scheduledPreloadJobName;

    /**
     * @return The task name.
     * 
     */
    public Output<String> scheduledPreloadJobName() {
        return this.scheduledPreloadJobName;
    }
    /**
     * The site ID.
     * 
     */
    @Export(name="siteId", refs={Integer.class}, tree="[0]")
    private Output<Integer> siteId;

    /**
     * @return The site ID.
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }
    /**
     * A list of URLs to be preheated, which is used when uploading a preheated file in the text box mode.
     * 
     */
    @Export(name="urlList", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> urlList;

    /**
     * @return A list of URLs to be preheated, which is used when uploading a preheated file in the text box mode.
     * 
     */
    public Output<Optional<String>> urlList() {
        return Codegen.optional(this.urlList);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScheduledPreloadJob(java.lang.String name) {
        this(name, ScheduledPreloadJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScheduledPreloadJob(java.lang.String name, ScheduledPreloadJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScheduledPreloadJob(java.lang.String name, ScheduledPreloadJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/scheduledPreloadJob:ScheduledPreloadJob", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ScheduledPreloadJob(java.lang.String name, Output<java.lang.String> id, @Nullable ScheduledPreloadJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/scheduledPreloadJob:ScheduledPreloadJob", name, state, makeResourceOptions(options, id), false);
    }

    private static ScheduledPreloadJobArgs makeArgs(ScheduledPreloadJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ScheduledPreloadJobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScheduledPreloadJob get(java.lang.String name, Output<java.lang.String> id, @Nullable ScheduledPreloadJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScheduledPreloadJob(name, id, state, options);
    }
}
