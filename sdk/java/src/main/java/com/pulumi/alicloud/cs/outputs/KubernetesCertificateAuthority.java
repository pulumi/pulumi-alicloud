// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesCertificateAuthority {
    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-cert.pem) for replace it.
     * 
     */
    private @Nullable String clientCert;
    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_key attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-key.pem) for replace it.
     * 
     */
    private @Nullable String clientKey;
    /**
     * @return The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
     * 
     */
    private @Nullable String clusterCert;

    private KubernetesCertificateAuthority() {}
    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-cert.pem) for replace it.
     * 
     */
    public Optional<String> clientCert() {
        return Optional.ofNullable(this.clientCert);
    }
    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_key attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-key.pem) for replace it.
     * 
     */
    public Optional<String> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    /**
     * @return The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
     * 
     */
    public Optional<String> clusterCert() {
        return Optional.ofNullable(this.clusterCert);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesCertificateAuthority defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clientCert;
        private @Nullable String clientKey;
        private @Nullable String clusterCert;
        public Builder() {}
        public Builder(KubernetesCertificateAuthority defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCert = defaults.clientCert;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCert = defaults.clusterCert;
        }

        @CustomType.Setter
        public Builder clientCert(@Nullable String clientCert) {

            this.clientCert = clientCert;
            return this;
        }
        @CustomType.Setter
        public Builder clientKey(@Nullable String clientKey) {

            this.clientKey = clientKey;
            return this;
        }
        @CustomType.Setter
        public Builder clusterCert(@Nullable String clusterCert) {

            this.clusterCert = clusterCert;
            return this;
        }
        public KubernetesCertificateAuthority build() {
            final var _resultValue = new KubernetesCertificateAuthority();
            _resultValue.clientCert = clientCert;
            _resultValue.clientKey = clientKey;
            _resultValue.clusterCert = clusterCert;
            return _resultValue;
        }
    }
}
