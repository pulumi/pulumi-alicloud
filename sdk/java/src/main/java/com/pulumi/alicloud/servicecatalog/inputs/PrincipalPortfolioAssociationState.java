// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrincipalPortfolioAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final PrincipalPortfolioAssociationState Empty = new PrincipalPortfolioAssociationState();

    /**
     * Product Portfolio ID
     * 
     */
    @Import(name="portfolioId")
    private @Nullable Output<String> portfolioId;

    /**
     * @return Product Portfolio ID
     * 
     */
    public Optional<Output<String>> portfolioId() {
        return Optional.ofNullable(this.portfolioId);
    }

    /**
     * RAM entity ID
     * 
     */
    @Import(name="principalId")
    private @Nullable Output<String> principalId;

    /**
     * @return RAM entity ID
     * 
     */
    public Optional<Output<String>> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    /**
     * RAM entity type
     * 
     */
    @Import(name="principalType")
    private @Nullable Output<String> principalType;

    /**
     * @return RAM entity type
     * 
     */
    public Optional<Output<String>> principalType() {
        return Optional.ofNullable(this.principalType);
    }

    private PrincipalPortfolioAssociationState() {}

    private PrincipalPortfolioAssociationState(PrincipalPortfolioAssociationState $) {
        this.portfolioId = $.portfolioId;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrincipalPortfolioAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrincipalPortfolioAssociationState $;

        public Builder() {
            $ = new PrincipalPortfolioAssociationState();
        }

        public Builder(PrincipalPortfolioAssociationState defaults) {
            $ = new PrincipalPortfolioAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param portfolioId Product Portfolio ID
         * 
         * @return builder
         * 
         */
        public Builder portfolioId(@Nullable Output<String> portfolioId) {
            $.portfolioId = portfolioId;
            return this;
        }

        /**
         * @param portfolioId Product Portfolio ID
         * 
         * @return builder
         * 
         */
        public Builder portfolioId(String portfolioId) {
            return portfolioId(Output.of(portfolioId));
        }

        /**
         * @param principalId RAM entity ID
         * 
         * @return builder
         * 
         */
        public Builder principalId(@Nullable Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalId RAM entity ID
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        /**
         * @param principalType RAM entity type
         * 
         * @return builder
         * 
         */
        public Builder principalType(@Nullable Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        /**
         * @param principalType RAM entity type
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        public PrincipalPortfolioAssociationState build() {
            return $;
        }
    }

}
