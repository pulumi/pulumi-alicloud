// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetControlPolicyAttachmentsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetControlPolicyAttachmentsArgs Empty = new GetControlPolicyAttachmentsArgs();

    /**
     * The language. Valid value `zh-CN`, `en`, and `ja`. Default value `zh-CN`
     * 
     */
    @Import(name="language")
    private @Nullable Output<String> language;

    /**
     * @return The language. Valid value `zh-CN`, `en`, and `ja`. Default value `zh-CN`
     * 
     */
    public Optional<Output<String>> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The type of policy.
     * 
     */
    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    /**
     * @return The type of policy.
     * 
     */
    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    /**
     * The Id of target.
     * 
     */
    @Import(name="targetId", required=true)
    private Output<String> targetId;

    /**
     * @return The Id of target.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }

    private GetControlPolicyAttachmentsArgs() {}

    private GetControlPolicyAttachmentsArgs(GetControlPolicyAttachmentsArgs $) {
        this.language = $.language;
        this.outputFile = $.outputFile;
        this.policyType = $.policyType;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetControlPolicyAttachmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetControlPolicyAttachmentsArgs $;

        public Builder() {
            $ = new GetControlPolicyAttachmentsArgs();
        }

        public Builder(GetControlPolicyAttachmentsArgs defaults) {
            $ = new GetControlPolicyAttachmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param language The language. Valid value `zh-CN`, `en`, and `ja`. Default value `zh-CN`
         * 
         * @return builder
         * 
         */
        public Builder language(@Nullable Output<String> language) {
            $.language = language;
            return this;
        }

        /**
         * @param language The language. Valid value `zh-CN`, `en`, and `ja`. Default value `zh-CN`
         * 
         * @return builder
         * 
         */
        public Builder language(String language) {
            return language(Output.of(language));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param policyType The type of policy.
         * 
         * @return builder
         * 
         */
        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The type of policy.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        /**
         * @param targetId The Id of target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The Id of target.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public GetControlPolicyAttachmentsArgs build() {
            if ($.targetId == null) {
                throw new MissingRequiredPropertyException("GetControlPolicyAttachmentsArgs", "targetId");
            }
            return $;
        }
    }

}
