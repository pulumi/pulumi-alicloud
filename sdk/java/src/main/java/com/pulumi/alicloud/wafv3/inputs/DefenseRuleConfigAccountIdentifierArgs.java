// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.wafv3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefenseRuleConfigAccountIdentifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefenseRuleConfigAccountIdentifierArgs Empty = new DefenseRuleConfigAccountIdentifierArgs();

    /**
     * The authentication mode. Valid values:
     * - plain: indicates plaintext.
     * - basic: indicates Basic authentication.
     * - jwt: indicates JWT authentication. For JWT authentication, you must specify the field that stores the decoded account information (position).
     * 
     */
    @Import(name="decodeType")
    private @Nullable Output<String> decodeType;

    /**
     * @return The authentication mode. Valid values:
     * - plain: indicates plaintext.
     * - basic: indicates Basic authentication.
     * - jwt: indicates JWT authentication. For JWT authentication, you must specify the field that stores the decoded account information (position).
     * 
     */
    public Optional<Output<String>> decodeType() {
        return Optional.ofNullable(this.decodeType);
    }

    /**
     * Match field. Valid values: URL, URLPath, IP, Referer, User-Agent, Params, Cookie, Content-Type, Content-Length, X-Forwarded-For, Post-Body, Http-Method, Header, Host, HttpCode, and SensitiveInfo.
     * 
     * &gt; **NOTE:**  Support for matching fields is based on the display in the WAF console. HttpCode and SensitiveInfo are the matching fields supported by the information leakage prevention rule (dlp).
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Match field. Valid values: URL, URLPath, IP, Referer, User-Agent, Params, Cookie, Content-Type, Content-Length, X-Forwarded-For, Post-Body, Http-Method, Header, Host, HttpCode, and SensitiveInfo.
     * 
     * &gt; **NOTE:**  Support for matching fields is based on the display in the WAF console. HttpCode and SensitiveInfo are the matching fields supported by the information leakage prevention rule (dlp).
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The field that stores the decoded account information.
     * 
     */
    @Import(name="position")
    private @Nullable Output<String> position;

    /**
     * @return The field that stores the decoded account information.
     * 
     */
    public Optional<Output<String>> position() {
        return Optional.ofNullable(this.position);
    }

    /**
     * The priority of the current extraction configuration. Each traffic can match at most one extraction policy. Valid values: [0,20]. A smaller value indicates a higher priority. The priority value must be unique.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the current extraction configuration. Each traffic can match at most one extraction policy. Valid values: [0,20]. A smaller value indicates a higher priority. The priority value must be unique.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
     * 
     */
    @Import(name="subKey")
    private @Nullable Output<String> subKey;

    /**
     * @return The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
     * 
     */
    public Optional<Output<String>> subKey() {
        return Optional.ofNullable(this.subKey);
    }

    private DefenseRuleConfigAccountIdentifierArgs() {}

    private DefenseRuleConfigAccountIdentifierArgs(DefenseRuleConfigAccountIdentifierArgs $) {
        this.decodeType = $.decodeType;
        this.key = $.key;
        this.position = $.position;
        this.priority = $.priority;
        this.subKey = $.subKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefenseRuleConfigAccountIdentifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefenseRuleConfigAccountIdentifierArgs $;

        public Builder() {
            $ = new DefenseRuleConfigAccountIdentifierArgs();
        }

        public Builder(DefenseRuleConfigAccountIdentifierArgs defaults) {
            $ = new DefenseRuleConfigAccountIdentifierArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param decodeType The authentication mode. Valid values:
         * - plain: indicates plaintext.
         * - basic: indicates Basic authentication.
         * - jwt: indicates JWT authentication. For JWT authentication, you must specify the field that stores the decoded account information (position).
         * 
         * @return builder
         * 
         */
        public Builder decodeType(@Nullable Output<String> decodeType) {
            $.decodeType = decodeType;
            return this;
        }

        /**
         * @param decodeType The authentication mode. Valid values:
         * - plain: indicates plaintext.
         * - basic: indicates Basic authentication.
         * - jwt: indicates JWT authentication. For JWT authentication, you must specify the field that stores the decoded account information (position).
         * 
         * @return builder
         * 
         */
        public Builder decodeType(String decodeType) {
            return decodeType(Output.of(decodeType));
        }

        /**
         * @param key Match field. Valid values: URL, URLPath, IP, Referer, User-Agent, Params, Cookie, Content-Type, Content-Length, X-Forwarded-For, Post-Body, Http-Method, Header, Host, HttpCode, and SensitiveInfo.
         * 
         * &gt; **NOTE:**  Support for matching fields is based on the display in the WAF console. HttpCode and SensitiveInfo are the matching fields supported by the information leakage prevention rule (dlp).
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Match field. Valid values: URL, URLPath, IP, Referer, User-Agent, Params, Cookie, Content-Type, Content-Length, X-Forwarded-For, Post-Body, Http-Method, Header, Host, HttpCode, and SensitiveInfo.
         * 
         * &gt; **NOTE:**  Support for matching fields is based on the display in the WAF console. HttpCode and SensitiveInfo are the matching fields supported by the information leakage prevention rule (dlp).
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param position The field that stores the decoded account information.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<String> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position The field that stores the decoded account information.
         * 
         * @return builder
         * 
         */
        public Builder position(String position) {
            return position(Output.of(position));
        }

        /**
         * @param priority The priority of the current extraction configuration. Each traffic can match at most one extraction policy. Valid values: [0,20]. A smaller value indicates a higher priority. The priority value must be unique.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the current extraction configuration. Each traffic can match at most one extraction policy. Valid values: [0,20]. A smaller value indicates a higher priority. The priority value must be unique.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param subKey The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
         * 
         * @return builder
         * 
         */
        public Builder subKey(@Nullable Output<String> subKey) {
            $.subKey = subKey;
            return this;
        }

        /**
         * @param subKey The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
         * 
         * @return builder
         * 
         */
        public Builder subKey(String subKey) {
            return subKey(Output.of(subKey));
        }

        public DefenseRuleConfigAccountIdentifierArgs build() {
            return $;
        }
    }

}
