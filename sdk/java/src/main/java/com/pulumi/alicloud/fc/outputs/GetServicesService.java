// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.alicloud.fc.outputs.GetServicesServiceLogConfig;
import com.pulumi.alicloud.fc.outputs.GetServicesServiceNasConfig;
import com.pulumi.alicloud.fc.outputs.GetServicesServiceVpcConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServicesService {
    /**
     * @return FC service creation time.
     * 
     */
    private String creationTime;
    /**
     * @return FC service description.
     * 
     */
    private String description;
    /**
     * @return FC service ID.
     * 
     */
    private String id;
    /**
     * @return Indicate whether the service can access to internet or not.
     * 
     */
    private Boolean internetAccess;
    /**
     * @return FC service last modification time.
     * 
     */
    private String lastModificationTime;
    /**
     * @return A list of one element containing information about the associated log store. It contains the following attributes:
     * 
     */
    private GetServicesServiceLogConfig logConfig;
    /**
     * @return FC service name.
     * 
     */
    private String name;
    /**
     * @return A list of one element about the nas configuration.
     * 
     */
    private GetServicesServiceNasConfig nasConfig;
    /**
     * @return FC service role ARN.
     * 
     */
    private String role;
    /**
     * @return A list of one element containing information about accessible VPC resources. It contains the following attributes:
     * 
     */
    private GetServicesServiceVpcConfig vpcConfig;

    private GetServicesService() {}
    /**
     * @return FC service creation time.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return FC service description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return FC service ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicate whether the service can access to internet or not.
     * 
     */
    public Boolean internetAccess() {
        return this.internetAccess;
    }
    /**
     * @return FC service last modification time.
     * 
     */
    public String lastModificationTime() {
        return this.lastModificationTime;
    }
    /**
     * @return A list of one element containing information about the associated log store. It contains the following attributes:
     * 
     */
    public GetServicesServiceLogConfig logConfig() {
        return this.logConfig;
    }
    /**
     * @return FC service name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of one element about the nas configuration.
     * 
     */
    public GetServicesServiceNasConfig nasConfig() {
        return this.nasConfig;
    }
    /**
     * @return FC service role ARN.
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return A list of one element containing information about accessible VPC resources. It contains the following attributes:
     * 
     */
    public GetServicesServiceVpcConfig vpcConfig() {
        return this.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicesService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String description;
        private String id;
        private Boolean internetAccess;
        private String lastModificationTime;
        private GetServicesServiceLogConfig logConfig;
        private String name;
        private GetServicesServiceNasConfig nasConfig;
        private String role;
        private GetServicesServiceVpcConfig vpcConfig;
        public Builder() {}
        public Builder(GetServicesService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.internetAccess = defaults.internetAccess;
    	      this.lastModificationTime = defaults.lastModificationTime;
    	      this.logConfig = defaults.logConfig;
    	      this.name = defaults.name;
    	      this.nasConfig = defaults.nasConfig;
    	      this.role = defaults.role;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder internetAccess(Boolean internetAccess) {
            this.internetAccess = Objects.requireNonNull(internetAccess);
            return this;
        }
        @CustomType.Setter
        public Builder lastModificationTime(String lastModificationTime) {
            this.lastModificationTime = Objects.requireNonNull(lastModificationTime);
            return this;
        }
        @CustomType.Setter
        public Builder logConfig(GetServicesServiceLogConfig logConfig) {
            this.logConfig = Objects.requireNonNull(logConfig);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nasConfig(GetServicesServiceNasConfig nasConfig) {
            this.nasConfig = Objects.requireNonNull(nasConfig);
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfig(GetServicesServiceVpcConfig vpcConfig) {
            this.vpcConfig = Objects.requireNonNull(vpcConfig);
            return this;
        }
        public GetServicesService build() {
            final var o = new GetServicesService();
            o.creationTime = creationTime;
            o.description = description;
            o.id = id;
            o.internetAccess = internetAccess;
            o.lastModificationTime = lastModificationTime;
            o.logConfig = logConfig;
            o.name = name;
            o.nasConfig = nasConfig;
            o.role = role;
            o.vpcConfig = vpcConfig;
            return o;
        }
    }
}
