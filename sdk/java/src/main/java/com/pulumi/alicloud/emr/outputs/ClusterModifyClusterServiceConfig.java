// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterModifyClusterServiceConfig {
    private @Nullable String comment;
    private String configParams;
    private @Nullable String configType;
    private @Nullable String customConfigParams;
    private @Nullable List<String> gatewayClusterIdLists;
    private @Nullable String groupId;
    private @Nullable String hostInstanceId;
    private @Nullable Boolean refreshHostConfig;
    private String serviceName;

    private ClusterModifyClusterServiceConfig() {}
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public String configParams() {
        return this.configParams;
    }
    public Optional<String> configType() {
        return Optional.ofNullable(this.configType);
    }
    public Optional<String> customConfigParams() {
        return Optional.ofNullable(this.customConfigParams);
    }
    public List<String> gatewayClusterIdLists() {
        return this.gatewayClusterIdLists == null ? List.of() : this.gatewayClusterIdLists;
    }
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }
    public Optional<String> hostInstanceId() {
        return Optional.ofNullable(this.hostInstanceId);
    }
    public Optional<Boolean> refreshHostConfig() {
        return Optional.ofNullable(this.refreshHostConfig);
    }
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterModifyClusterServiceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private String configParams;
        private @Nullable String configType;
        private @Nullable String customConfigParams;
        private @Nullable List<String> gatewayClusterIdLists;
        private @Nullable String groupId;
        private @Nullable String hostInstanceId;
        private @Nullable Boolean refreshHostConfig;
        private String serviceName;
        public Builder() {}
        public Builder(ClusterModifyClusterServiceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.configParams = defaults.configParams;
    	      this.configType = defaults.configType;
    	      this.customConfigParams = defaults.customConfigParams;
    	      this.gatewayClusterIdLists = defaults.gatewayClusterIdLists;
    	      this.groupId = defaults.groupId;
    	      this.hostInstanceId = defaults.hostInstanceId;
    	      this.refreshHostConfig = defaults.refreshHostConfig;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder configParams(String configParams) {
            if (configParams == null) {
              throw new MissingRequiredPropertyException("ClusterModifyClusterServiceConfig", "configParams");
            }
            this.configParams = configParams;
            return this;
        }
        @CustomType.Setter
        public Builder configType(@Nullable String configType) {

            this.configType = configType;
            return this;
        }
        @CustomType.Setter
        public Builder customConfigParams(@Nullable String customConfigParams) {

            this.customConfigParams = customConfigParams;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayClusterIdLists(@Nullable List<String> gatewayClusterIdLists) {

            this.gatewayClusterIdLists = gatewayClusterIdLists;
            return this;
        }
        public Builder gatewayClusterIdLists(String... gatewayClusterIdLists) {
            return gatewayClusterIdLists(List.of(gatewayClusterIdLists));
        }
        @CustomType.Setter
        public Builder groupId(@Nullable String groupId) {

            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder hostInstanceId(@Nullable String hostInstanceId) {

            this.hostInstanceId = hostInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder refreshHostConfig(@Nullable Boolean refreshHostConfig) {

            this.refreshHostConfig = refreshHostConfig;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("ClusterModifyClusterServiceConfig", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        public ClusterModifyClusterServiceConfig build() {
            final var _resultValue = new ClusterModifyClusterServiceConfig();
            _resultValue.comment = comment;
            _resultValue.configParams = configParams;
            _resultValue.configType = configType;
            _resultValue.customConfigParams = customConfigParams;
            _resultValue.gatewayClusterIdLists = gatewayClusterIdLists;
            _resultValue.groupId = groupId;
            _resultValue.hostInstanceId = hostInstanceId;
            _resultValue.refreshHostConfig = refreshHostConfig;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
