// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ens;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EipArgs extends com.pulumi.resources.ResourceArgs {

    public static final EipArgs Empty = new EipArgs();

    /**
     * The peak bandwidth of the EIP to be specified.Rules:Default value: 5, value range: 5~10000, unit: Mbps. Example value: 5.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The peak bandwidth of the EIP to be specified.Rules:Default value: 5, value range: 5~10000, unit: Mbps. Example value: 5.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The description of the EIP.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the EIP.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the EIP instance.
     * 
     */
    @Import(name="eipName")
    private @Nullable Output<String> eipName;

    /**
     * @return Name of the EIP instance.
     * 
     */
    public Optional<Output<String>> eipName() {
        return Optional.ofNullable(this.eipName);
    }

    /**
     * Ens node ID.
     * 
     */
    @Import(name="ensRegionId", required=true)
    private Output<String> ensRegionId;

    /**
     * @return Ens node ID.
     * 
     */
    public Output<String> ensRegionId() {
        return this.ensRegionId;
    }

    /**
     * Billing type of the EIP instance. Valid value: 95bandwidthbymonth.
     * 
     */
    @Import(name="internetChargeType", required=true)
    private Output<String> internetChargeType;

    /**
     * @return Billing type of the EIP instance. Valid value: 95bandwidthbymonth.
     * 
     */
    public Output<String> internetChargeType() {
        return this.internetChargeType;
    }

    /**
     * Internet service provider, if not filled in, it will be assigned according to the default rules.
     * 
     */
    @Import(name="isp")
    private @Nullable Output<String> isp;

    /**
     * @return Internet service provider, if not filled in, it will be assigned according to the default rules.
     * 
     */
    public Optional<Output<String>> isp() {
        return Optional.ofNullable(this.isp);
    }

    /**
     * The billing type of the EIP instanceValue: PayAsYouGo.
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return The billing type of the EIP instanceValue: PayAsYouGo.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    private EipArgs() {}

    private EipArgs(EipArgs $) {
        this.bandwidth = $.bandwidth;
        this.description = $.description;
        this.eipName = $.eipName;
        this.ensRegionId = $.ensRegionId;
        this.internetChargeType = $.internetChargeType;
        this.isp = $.isp;
        this.paymentType = $.paymentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EipArgs $;

        public Builder() {
            $ = new EipArgs();
        }

        public Builder(EipArgs defaults) {
            $ = new EipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth The peak bandwidth of the EIP to be specified.Rules:Default value: 5, value range: 5~10000, unit: Mbps. Example value: 5.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The peak bandwidth of the EIP to be specified.Rules:Default value: 5, value range: 5~10000, unit: Mbps. Example value: 5.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param description The description of the EIP.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the EIP.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eipName Name of the EIP instance.
         * 
         * @return builder
         * 
         */
        public Builder eipName(@Nullable Output<String> eipName) {
            $.eipName = eipName;
            return this;
        }

        /**
         * @param eipName Name of the EIP instance.
         * 
         * @return builder
         * 
         */
        public Builder eipName(String eipName) {
            return eipName(Output.of(eipName));
        }

        /**
         * @param ensRegionId Ens node ID.
         * 
         * @return builder
         * 
         */
        public Builder ensRegionId(Output<String> ensRegionId) {
            $.ensRegionId = ensRegionId;
            return this;
        }

        /**
         * @param ensRegionId Ens node ID.
         * 
         * @return builder
         * 
         */
        public Builder ensRegionId(String ensRegionId) {
            return ensRegionId(Output.of(ensRegionId));
        }

        /**
         * @param internetChargeType Billing type of the EIP instance. Valid value: 95bandwidthbymonth.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(Output<String> internetChargeType) {
            $.internetChargeType = internetChargeType;
            return this;
        }

        /**
         * @param internetChargeType Billing type of the EIP instance. Valid value: 95bandwidthbymonth.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(String internetChargeType) {
            return internetChargeType(Output.of(internetChargeType));
        }

        /**
         * @param isp Internet service provider, if not filled in, it will be assigned according to the default rules.
         * 
         * @return builder
         * 
         */
        public Builder isp(@Nullable Output<String> isp) {
            $.isp = isp;
            return this;
        }

        /**
         * @param isp Internet service provider, if not filled in, it will be assigned according to the default rules.
         * 
         * @return builder
         * 
         */
        public Builder isp(String isp) {
            return isp(Output.of(isp));
        }

        /**
         * @param paymentType The billing type of the EIP instanceValue: PayAsYouGo.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The billing type of the EIP instanceValue: PayAsYouGo.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        public EipArgs build() {
            $.ensRegionId = Objects.requireNonNull($.ensRegionId, "expected parameter 'ensRegionId' to be non-null");
            $.internetChargeType = Objects.requireNonNull($.internetChargeType, "expected parameter 'internetChargeType' to be non-null");
            $.paymentType = Objects.requireNonNull($.paymentType, "expected parameter 'paymentType' to be non-null");
            return $;
        }
    }

}
