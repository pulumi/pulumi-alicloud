// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HoneypotNodeState extends com.pulumi.resources.ResourceArgs {

    public static final HoneypotNodeState Empty = new HoneypotNodeState();

    /**
     * Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
     * 
     */
    @Import(name="allowHoneypotAccessInternet")
    private @Nullable Output<Boolean> allowHoneypotAccessInternet;

    /**
     * @return Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
     * 
     */
    public Optional<Output<Boolean>> allowHoneypotAccessInternet() {
        return Optional.ofNullable(this.allowHoneypotAccessInternet);
    }

    /**
     * Number of probes available.
     * 
     */
    @Import(name="availableProbeNum")
    private @Nullable Output<Integer> availableProbeNum;

    /**
     * @return Number of probes available.
     * 
     */
    public Optional<Output<Integer>> availableProbeNum() {
        return Optional.ofNullable(this.availableProbeNum);
    }

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Management node name.
     * 
     */
    @Import(name="nodeName")
    private @Nullable Output<String> nodeName;

    /**
     * @return Management node name.
     * 
     */
    public Optional<Output<String>> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }

    /**
     * Release the collection of network segments.
     * 
     */
    @Import(name="securityGroupProbeIpLists")
    private @Nullable Output<List<String>> securityGroupProbeIpLists;

    /**
     * @return Release the collection of network segments.
     * 
     */
    public Optional<Output<List<String>>> securityGroupProbeIpLists() {
        return Optional.ofNullable(this.securityGroupProbeIpLists);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    private HoneypotNodeState() {}

    private HoneypotNodeState(HoneypotNodeState $) {
        this.allowHoneypotAccessInternet = $.allowHoneypotAccessInternet;
        this.availableProbeNum = $.availableProbeNum;
        this.createTime = $.createTime;
        this.nodeName = $.nodeName;
        this.securityGroupProbeIpLists = $.securityGroupProbeIpLists;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HoneypotNodeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HoneypotNodeState $;

        public Builder() {
            $ = new HoneypotNodeState();
        }

        public Builder(HoneypotNodeState defaults) {
            $ = new HoneypotNodeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowHoneypotAccessInternet Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
         * 
         * @return builder
         * 
         */
        public Builder allowHoneypotAccessInternet(@Nullable Output<Boolean> allowHoneypotAccessInternet) {
            $.allowHoneypotAccessInternet = allowHoneypotAccessInternet;
            return this;
        }

        /**
         * @param allowHoneypotAccessInternet Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
         * 
         * @return builder
         * 
         */
        public Builder allowHoneypotAccessInternet(Boolean allowHoneypotAccessInternet) {
            return allowHoneypotAccessInternet(Output.of(allowHoneypotAccessInternet));
        }

        /**
         * @param availableProbeNum Number of probes available.
         * 
         * @return builder
         * 
         */
        public Builder availableProbeNum(@Nullable Output<Integer> availableProbeNum) {
            $.availableProbeNum = availableProbeNum;
            return this;
        }

        /**
         * @param availableProbeNum Number of probes available.
         * 
         * @return builder
         * 
         */
        public Builder availableProbeNum(Integer availableProbeNum) {
            return availableProbeNum(Output.of(availableProbeNum));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param nodeName Management node name.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(@Nullable Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName Management node name.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        /**
         * @param securityGroupProbeIpLists Release the collection of network segments.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupProbeIpLists(@Nullable Output<List<String>> securityGroupProbeIpLists) {
            $.securityGroupProbeIpLists = securityGroupProbeIpLists;
            return this;
        }

        /**
         * @param securityGroupProbeIpLists Release the collection of network segments.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupProbeIpLists(List<String> securityGroupProbeIpLists) {
            return securityGroupProbeIpLists(Output.of(securityGroupProbeIpLists));
        }

        /**
         * @param securityGroupProbeIpLists Release the collection of network segments.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupProbeIpLists(String... securityGroupProbeIpLists) {
            return securityGroupProbeIpLists(List.of(securityGroupProbeIpLists));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        public HoneypotNodeState build() {
            return $;
        }
    }

}
