// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterPeerAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterPeerAttachmentArgs Empty = new TransitRouterPeerAttachmentArgs();

    /**
     * Auto publish route enabled. The system default value is `false`.
     * 
     */
    @Import(name="autoPublishRouteEnabled")
    private @Nullable Output<Boolean> autoPublishRouteEnabled;

    /**
     * @return Auto publish route enabled. The system default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> autoPublishRouteEnabled() {
        return Optional.ofNullable(this.autoPublishRouteEnabled);
    }

    /**
     * The bandwidth of the bandwidth package.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The bandwidth of the bandwidth package.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
     * 
     */
    @Import(name="bandwidthType")
    private @Nullable Output<String> bandwidthType;

    /**
     * @return The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
     * 
     */
    public Optional<Output<String>> bandwidthType() {
        return Optional.ofNullable(this.bandwidthType);
    }

    /**
     * The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
     * 
     */
    @Import(name="cenBandwidthPackageId")
    private @Nullable Output<String> cenBandwidthPackageId;

    /**
     * @return The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
     * 
     */
    public Optional<Output<String>> cenBandwidthPackageId() {
        return Optional.ofNullable(this.cenBandwidthPackageId);
    }

    /**
     * The ID of the CEN.
     * 
     */
    @Import(name="cenId", required=true)
    private Output<String> cenId;

    /**
     * @return The ID of the CEN.
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }

    /**
     * Whether to perform pre-check for this request, including permission, instance status verification, etc.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Whether to perform pre-check for this request, including permission, instance status verification, etc.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The ID of the peer transit router.
     * 
     */
    @Import(name="peerTransitRouterId", required=true)
    private Output<String> peerTransitRouterId;

    /**
     * @return The ID of the peer transit router.
     * 
     */
    public Output<String> peerTransitRouterId() {
        return this.peerTransitRouterId;
    }

    /**
     * The region ID of peer transit router.
     * 
     */
    @Import(name="peerTransitRouterRegionId", required=true)
    private Output<String> peerTransitRouterRegionId;

    /**
     * @return The region ID of peer transit router.
     * 
     */
    public Output<String> peerTransitRouterRegionId() {
        return this.peerTransitRouterRegionId;
    }

    /**
     * The resource type to attachment. Only support `VR` and default value is `VR`.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The resource type to attachment. Only support `VR` and default value is `VR`.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Whether to association route table. System default is `false`.
     * 
     */
    @Import(name="routeTableAssociationEnabled")
    private @Nullable Output<Boolean> routeTableAssociationEnabled;

    /**
     * @return Whether to association route table. System default is `false`.
     * 
     */
    public Optional<Output<Boolean>> routeTableAssociationEnabled() {
        return Optional.ofNullable(this.routeTableAssociationEnabled);
    }

    /**
     * Whether to propagation route table. System default is `false`.
     * 
     */
    @Import(name="routeTablePropagationEnabled")
    private @Nullable Output<Boolean> routeTablePropagationEnabled;

    /**
     * @return Whether to propagation route table. System default is `false`.
     * 
     */
    public Optional<Output<Boolean>> routeTablePropagationEnabled() {
        return Optional.ofNullable(this.routeTablePropagationEnabled);
    }

    /**
     * The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="transitRouterAttachmentDescription")
    private @Nullable Output<String> transitRouterAttachmentDescription;

    /**
     * @return The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentDescription() {
        return Optional.ofNullable(this.transitRouterAttachmentDescription);
    }

    /**
     * The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
     * 
     */
    @Import(name="transitRouterAttachmentName")
    private @Nullable Output<String> transitRouterAttachmentName;

    /**
     * @return The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentName() {
        return Optional.ofNullable(this.transitRouterAttachmentName);
    }

    /**
     * The ID of the transit router to attach.
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return The ID of the transit router to attach.
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    private TransitRouterPeerAttachmentArgs() {}

    private TransitRouterPeerAttachmentArgs(TransitRouterPeerAttachmentArgs $) {
        this.autoPublishRouteEnabled = $.autoPublishRouteEnabled;
        this.bandwidth = $.bandwidth;
        this.bandwidthType = $.bandwidthType;
        this.cenBandwidthPackageId = $.cenBandwidthPackageId;
        this.cenId = $.cenId;
        this.dryRun = $.dryRun;
        this.peerTransitRouterId = $.peerTransitRouterId;
        this.peerTransitRouterRegionId = $.peerTransitRouterRegionId;
        this.resourceType = $.resourceType;
        this.routeTableAssociationEnabled = $.routeTableAssociationEnabled;
        this.routeTablePropagationEnabled = $.routeTablePropagationEnabled;
        this.transitRouterAttachmentDescription = $.transitRouterAttachmentDescription;
        this.transitRouterAttachmentName = $.transitRouterAttachmentName;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterPeerAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterPeerAttachmentArgs $;

        public Builder() {
            $ = new TransitRouterPeerAttachmentArgs();
        }

        public Builder(TransitRouterPeerAttachmentArgs defaults) {
            $ = new TransitRouterPeerAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPublishRouteEnabled Auto publish route enabled. The system default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(@Nullable Output<Boolean> autoPublishRouteEnabled) {
            $.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }

        /**
         * @param autoPublishRouteEnabled Auto publish route enabled. The system default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            return autoPublishRouteEnabled(Output.of(autoPublishRouteEnabled));
        }

        /**
         * @param bandwidth The bandwidth of the bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth of the bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param bandwidthType The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(@Nullable Output<String> bandwidthType) {
            $.bandwidthType = bandwidthType;
            return this;
        }

        /**
         * @param bandwidthType The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(String bandwidthType) {
            return bandwidthType(Output.of(bandwidthType));
        }

        /**
         * @param cenBandwidthPackageId The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
         * 
         * @return builder
         * 
         */
        public Builder cenBandwidthPackageId(@Nullable Output<String> cenBandwidthPackageId) {
            $.cenBandwidthPackageId = cenBandwidthPackageId;
            return this;
        }

        /**
         * @param cenBandwidthPackageId The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
         * 
         * @return builder
         * 
         */
        public Builder cenBandwidthPackageId(String cenBandwidthPackageId) {
            return cenBandwidthPackageId(Output.of(cenBandwidthPackageId));
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param dryRun Whether to perform pre-check for this request, including permission, instance status verification, etc.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Whether to perform pre-check for this request, including permission, instance status verification, etc.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param peerTransitRouterId The ID of the peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterId(Output<String> peerTransitRouterId) {
            $.peerTransitRouterId = peerTransitRouterId;
            return this;
        }

        /**
         * @param peerTransitRouterId The ID of the peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterId(String peerTransitRouterId) {
            return peerTransitRouterId(Output.of(peerTransitRouterId));
        }

        /**
         * @param peerTransitRouterRegionId The region ID of peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterRegionId(Output<String> peerTransitRouterRegionId) {
            $.peerTransitRouterRegionId = peerTransitRouterRegionId;
            return this;
        }

        /**
         * @param peerTransitRouterRegionId The region ID of peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterRegionId(String peerTransitRouterRegionId) {
            return peerTransitRouterRegionId(Output.of(peerTransitRouterRegionId));
        }

        /**
         * @param resourceType The resource type to attachment. Only support `VR` and default value is `VR`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type to attachment. Only support `VR` and default value is `VR`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param routeTableAssociationEnabled Whether to association route table. System default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder routeTableAssociationEnabled(@Nullable Output<Boolean> routeTableAssociationEnabled) {
            $.routeTableAssociationEnabled = routeTableAssociationEnabled;
            return this;
        }

        /**
         * @param routeTableAssociationEnabled Whether to association route table. System default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder routeTableAssociationEnabled(Boolean routeTableAssociationEnabled) {
            return routeTableAssociationEnabled(Output.of(routeTableAssociationEnabled));
        }

        /**
         * @param routeTablePropagationEnabled Whether to propagation route table. System default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder routeTablePropagationEnabled(@Nullable Output<Boolean> routeTablePropagationEnabled) {
            $.routeTablePropagationEnabled = routeTablePropagationEnabled;
            return this;
        }

        /**
         * @param routeTablePropagationEnabled Whether to propagation route table. System default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder routeTablePropagationEnabled(Boolean routeTablePropagationEnabled) {
            return routeTablePropagationEnabled(Output.of(routeTablePropagationEnabled));
        }

        /**
         * @param transitRouterAttachmentDescription The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(@Nullable Output<String> transitRouterAttachmentDescription) {
            $.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }

        /**
         * @param transitRouterAttachmentDescription The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            return transitRouterAttachmentDescription(Output.of(transitRouterAttachmentDescription));
        }

        /**
         * @param transitRouterAttachmentName The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(@Nullable Output<String> transitRouterAttachmentName) {
            $.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }

        /**
         * @param transitRouterAttachmentName The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            return transitRouterAttachmentName(Output.of(transitRouterAttachmentName));
        }

        /**
         * @param transitRouterId The ID of the transit router to attach.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the transit router to attach.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        public TransitRouterPeerAttachmentArgs build() {
            if ($.cenId == null) {
                throw new MissingRequiredPropertyException("TransitRouterPeerAttachmentArgs", "cenId");
            }
            if ($.peerTransitRouterId == null) {
                throw new MissingRequiredPropertyException("TransitRouterPeerAttachmentArgs", "peerTransitRouterId");
            }
            if ($.peerTransitRouterRegionId == null) {
                throw new MissingRequiredPropertyException("TransitRouterPeerAttachmentArgs", "peerTransitRouterRegionId");
            }
            return $;
        }
    }

}
