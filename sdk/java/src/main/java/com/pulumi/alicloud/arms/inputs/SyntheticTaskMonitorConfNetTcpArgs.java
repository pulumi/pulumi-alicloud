// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticTaskMonitorConfNetTcpArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticTaskMonitorConfNetTcpArgs Empty = new SyntheticTaskMonitorConfNetTcpArgs();

    @Import(name="connectTimes")
    private @Nullable Output<Integer> connectTimes;

    public Optional<Output<Integer>> connectTimes() {
        return Optional.ofNullable(this.connectTimes);
    }

    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="targetUrl", required=true)
    private Output<String> targetUrl;

    public Output<String> targetUrl() {
        return this.targetUrl;
    }

    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="tracertEnable")
    private @Nullable Output<Boolean> tracertEnable;

    public Optional<Output<Boolean>> tracertEnable() {
        return Optional.ofNullable(this.tracertEnable);
    }

    @Import(name="tracertNumMax")
    private @Nullable Output<Integer> tracertNumMax;

    public Optional<Output<Integer>> tracertNumMax() {
        return Optional.ofNullable(this.tracertNumMax);
    }

    @Import(name="tracertTimeout")
    private @Nullable Output<Integer> tracertTimeout;

    public Optional<Output<Integer>> tracertTimeout() {
        return Optional.ofNullable(this.tracertTimeout);
    }

    private SyntheticTaskMonitorConfNetTcpArgs() {}

    private SyntheticTaskMonitorConfNetTcpArgs(SyntheticTaskMonitorConfNetTcpArgs $) {
        this.connectTimes = $.connectTimes;
        this.interval = $.interval;
        this.targetUrl = $.targetUrl;
        this.timeout = $.timeout;
        this.tracertEnable = $.tracertEnable;
        this.tracertNumMax = $.tracertNumMax;
        this.tracertTimeout = $.tracertTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticTaskMonitorConfNetTcpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticTaskMonitorConfNetTcpArgs $;

        public Builder() {
            $ = new SyntheticTaskMonitorConfNetTcpArgs();
        }

        public Builder(SyntheticTaskMonitorConfNetTcpArgs defaults) {
            $ = new SyntheticTaskMonitorConfNetTcpArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectTimes(@Nullable Output<Integer> connectTimes) {
            $.connectTimes = connectTimes;
            return this;
        }

        public Builder connectTimes(Integer connectTimes) {
            return connectTimes(Output.of(connectTimes));
        }

        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public Builder targetUrl(Output<String> targetUrl) {
            $.targetUrl = targetUrl;
            return this;
        }

        public Builder targetUrl(String targetUrl) {
            return targetUrl(Output.of(targetUrl));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder tracertEnable(@Nullable Output<Boolean> tracertEnable) {
            $.tracertEnable = tracertEnable;
            return this;
        }

        public Builder tracertEnable(Boolean tracertEnable) {
            return tracertEnable(Output.of(tracertEnable));
        }

        public Builder tracertNumMax(@Nullable Output<Integer> tracertNumMax) {
            $.tracertNumMax = tracertNumMax;
            return this;
        }

        public Builder tracertNumMax(Integer tracertNumMax) {
            return tracertNumMax(Output.of(tracertNumMax));
        }

        public Builder tracertTimeout(@Nullable Output<Integer> tracertTimeout) {
            $.tracertTimeout = tracertTimeout;
            return this;
        }

        public Builder tracertTimeout(Integer tracertTimeout) {
            return tracertTimeout(Output.of(tracertTimeout));
        }

        public SyntheticTaskMonitorConfNetTcpArgs build() {
            if ($.targetUrl == null) {
                throw new MissingRequiredPropertyException("SyntheticTaskMonitorConfNetTcpArgs", "targetUrl");
            }
            return $;
        }
    }

}
