// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eflo.ResourceArgs;
import com.pulumi.alicloud.eflo.inputs.ResourceState;
import com.pulumi.alicloud.eflo.outputs.ResourceMachineTypes;
import com.pulumi.alicloud.eflo.outputs.ResourceUserAccessParam;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Eflo Resource can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:eflo/resource:Resource example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eflo/resource:Resource")
public class Resource extends com.pulumi.resources.CustomResource {
    /**
     * Used to provide a description or comment on the compute cluster.
     * 
     */
    @Export(name="clusterDesc", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterDesc;

    /**
     * @return Used to provide a description or comment on the compute cluster.
     * 
     */
    public Output<Optional<String>> clusterDesc() {
        return Codegen.optional(this.clusterDesc);
    }
    /**
     * Used to uniquely identify a computing cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return Used to uniquely identify a computing cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Represents the name of the compute cluster, usually including the model number.
     * 
     */
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output<String> clusterName;

    /**
     * @return Represents the name of the compute cluster, usually including the model number.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
     * 
     */
    @Export(name="machineTypes", refs={ResourceMachineTypes.class}, tree="[0]")
    private Output<ResourceMachineTypes> machineTypes;

    /**
     * @return Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
     * 
     */
    public Output<ResourceMachineTypes> machineTypes() {
        return this.machineTypes;
    }
    /**
     * The ID of the Resource.
     * 
     */
    @Export(name="resourceId", refs={String.class}, tree="[0]")
    private Output<String> resourceId;

    /**
     * @return The ID of the Resource.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }
    /**
     * Used to define the access parameters for the user. See `userAccessParam` below.
     * 
     */
    @Export(name="userAccessParam", refs={ResourceUserAccessParam.class}, tree="[0]")
    private Output<ResourceUserAccessParam> userAccessParam;

    /**
     * @return Used to define the access parameters for the user. See `userAccessParam` below.
     * 
     */
    public Output<ResourceUserAccessParam> userAccessParam() {
        return this.userAccessParam;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Resource(java.lang.String name) {
        this(name, ResourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Resource(java.lang.String name, ResourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Resource(java.lang.String name, ResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/resource:Resource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Resource(java.lang.String name, Output<java.lang.String> id, @Nullable ResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/resource:Resource", name, state, makeResourceOptions(options, id), false);
    }

    private static ResourceArgs makeArgs(ResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ResourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Resource get(java.lang.String name, Output<java.lang.String> id, @Nullable ResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Resource(name, id, state, options);
    }
}
