// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvPodMonitorsMonitor {
    /**
     * @return The YAML configuration string.
     * 
     */
    private String configYaml;
    /**
     * @return The name of the PodMonitor.
     * 
     */
    private String envPodMonitorName;
    /**
     * @return The environment ID.
     * 
     */
    private String environmentId;
    /**
     * @return The ID of the PodMonitor. It formats as `&lt;environment_id&gt;:&lt;namespace&gt;:&lt;env_pod_monitor_name&gt;`.
     * 
     */
    private String id;
    /**
     * @return The namespace.
     * 
     */
    private String namespace;
    /**
     * @return The region ID.
     * 
     */
    private String regionId;
    /**
     * @return The status of the PodMonitor.
     * 
     */
    private String status;

    private GetEnvPodMonitorsMonitor() {}
    /**
     * @return The YAML configuration string.
     * 
     */
    public String configYaml() {
        return this.configYaml;
    }
    /**
     * @return The name of the PodMonitor.
     * 
     */
    public String envPodMonitorName() {
        return this.envPodMonitorName;
    }
    /**
     * @return The environment ID.
     * 
     */
    public String environmentId() {
        return this.environmentId;
    }
    /**
     * @return The ID of the PodMonitor. It formats as `&lt;environment_id&gt;:&lt;namespace&gt;:&lt;env_pod_monitor_name&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The namespace.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The region ID.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The status of the PodMonitor.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvPodMonitorsMonitor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configYaml;
        private String envPodMonitorName;
        private String environmentId;
        private String id;
        private String namespace;
        private String regionId;
        private String status;
        public Builder() {}
        public Builder(GetEnvPodMonitorsMonitor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configYaml = defaults.configYaml;
    	      this.envPodMonitorName = defaults.envPodMonitorName;
    	      this.environmentId = defaults.environmentId;
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
    	      this.regionId = defaults.regionId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder configYaml(String configYaml) {
            if (configYaml == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "configYaml");
            }
            this.configYaml = configYaml;
            return this;
        }
        @CustomType.Setter
        public Builder envPodMonitorName(String envPodMonitorName) {
            if (envPodMonitorName == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "envPodMonitorName");
            }
            this.envPodMonitorName = envPodMonitorName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(String environmentId) {
            if (environmentId == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "environmentId");
            }
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEnvPodMonitorsMonitor", "status");
            }
            this.status = status;
            return this;
        }
        public GetEnvPodMonitorsMonitor build() {
            final var _resultValue = new GetEnvPodMonitorsMonitor();
            _resultValue.configYaml = configYaml;
            _resultValue.envPodMonitorName = envPodMonitorName;
            _resultValue.environmentId = environmentId;
            _resultValue.id = id;
            _resultValue.namespace = namespace;
            _resultValue.regionId = regionId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
