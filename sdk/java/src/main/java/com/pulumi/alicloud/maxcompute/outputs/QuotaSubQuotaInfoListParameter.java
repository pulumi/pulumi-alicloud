// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QuotaSubQuotaInfoListParameter {
    /**
     * @return Enable priority. Valid values: true/false, default: false
     * 
     */
    private @Nullable Boolean enablePriority;
    /**
     * @return Exclusive or not. Valid values: true/false, default: false
     * 
     */
    private @Nullable Boolean forceReservedMin;
    /**
     * @return The value of maxCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
     * 
     */
    private Integer maxCu;
    /**
     * @return The value of minCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
     * 
     */
    private Integer minCu;
    /**
     * @return Scheduling policy. Valid values: Fifo/Fair, default: Fifo
     * 
     */
    private @Nullable String schedulerType;
    /**
     * @return Single job CU upper limit. Valid value: greater than or equal to 1
     * 
     * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
     * 
     */
    private @Nullable Integer singleJobCuLimit;

    private QuotaSubQuotaInfoListParameter() {}
    /**
     * @return Enable priority. Valid values: true/false, default: false
     * 
     */
    public Optional<Boolean> enablePriority() {
        return Optional.ofNullable(this.enablePriority);
    }
    /**
     * @return Exclusive or not. Valid values: true/false, default: false
     * 
     */
    public Optional<Boolean> forceReservedMin() {
        return Optional.ofNullable(this.forceReservedMin);
    }
    /**
     * @return The value of maxCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
     * 
     */
    public Integer maxCu() {
        return this.maxCu;
    }
    /**
     * @return The value of minCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
     * 
     */
    public Integer minCu() {
        return this.minCu;
    }
    /**
     * @return Scheduling policy. Valid values: Fifo/Fair, default: Fifo
     * 
     */
    public Optional<String> schedulerType() {
        return Optional.ofNullable(this.schedulerType);
    }
    /**
     * @return Single job CU upper limit. Valid value: greater than or equal to 1
     * 
     * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
     * 
     */
    public Optional<Integer> singleJobCuLimit() {
        return Optional.ofNullable(this.singleJobCuLimit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuotaSubQuotaInfoListParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enablePriority;
        private @Nullable Boolean forceReservedMin;
        private Integer maxCu;
        private Integer minCu;
        private @Nullable String schedulerType;
        private @Nullable Integer singleJobCuLimit;
        public Builder() {}
        public Builder(QuotaSubQuotaInfoListParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablePriority = defaults.enablePriority;
    	      this.forceReservedMin = defaults.forceReservedMin;
    	      this.maxCu = defaults.maxCu;
    	      this.minCu = defaults.minCu;
    	      this.schedulerType = defaults.schedulerType;
    	      this.singleJobCuLimit = defaults.singleJobCuLimit;
        }

        @CustomType.Setter
        public Builder enablePriority(@Nullable Boolean enablePriority) {

            this.enablePriority = enablePriority;
            return this;
        }
        @CustomType.Setter
        public Builder forceReservedMin(@Nullable Boolean forceReservedMin) {

            this.forceReservedMin = forceReservedMin;
            return this;
        }
        @CustomType.Setter
        public Builder maxCu(Integer maxCu) {
            if (maxCu == null) {
              throw new MissingRequiredPropertyException("QuotaSubQuotaInfoListParameter", "maxCu");
            }
            this.maxCu = maxCu;
            return this;
        }
        @CustomType.Setter
        public Builder minCu(Integer minCu) {
            if (minCu == null) {
              throw new MissingRequiredPropertyException("QuotaSubQuotaInfoListParameter", "minCu");
            }
            this.minCu = minCu;
            return this;
        }
        @CustomType.Setter
        public Builder schedulerType(@Nullable String schedulerType) {

            this.schedulerType = schedulerType;
            return this;
        }
        @CustomType.Setter
        public Builder singleJobCuLimit(@Nullable Integer singleJobCuLimit) {

            this.singleJobCuLimit = singleJobCuLimit;
            return this;
        }
        public QuotaSubQuotaInfoListParameter build() {
            final var _resultValue = new QuotaSubQuotaInfoListParameter();
            _resultValue.enablePriority = enablePriority;
            _resultValue.forceReservedMin = forceReservedMin;
            _resultValue.maxCu = maxCu;
            _resultValue.minCu = minCu;
            _resultValue.schedulerType = schedulerType;
            _resultValue.singleJobCuLimit = singleJobCuLimit;
            return _resultValue;
        }
    }
}
