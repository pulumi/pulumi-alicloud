// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpamIpamPoolCidrsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpamIpamPoolCidrsPlainArgs Empty = new GetIpamIpamPoolCidrsPlainArgs();

    /**
     * The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
     * 
     */
    @Import(name="cidr")
    private @Nullable String cidr;

    /**
     * @return The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
     * 
     */
    public Optional<String> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * The ID of the IPAM pool instance.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private String ipamPoolId;

    /**
     * @return The ID of the IPAM pool instance.
     * 
     */
    public String ipamPoolId() {
        return this.ipamPoolId;
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetIpamIpamPoolCidrsPlainArgs() {}

    private GetIpamIpamPoolCidrsPlainArgs(GetIpamIpamPoolCidrsPlainArgs $) {
        this.cidr = $.cidr;
        this.ipamPoolId = $.ipamPoolId;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpamIpamPoolCidrsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpamIpamPoolCidrsPlainArgs $;

        public Builder() {
            $ = new GetIpamIpamPoolCidrsPlainArgs();
        }

        public Builder(GetIpamIpamPoolCidrsPlainArgs defaults) {
            $ = new GetIpamIpamPoolCidrsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr The CIDR address segment to be preset.&gt; currently, only IPv4 address segments are supported.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable String cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the IPAM pool instance.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public GetIpamIpamPoolCidrsPlainArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("GetIpamIpamPoolCidrsPlainArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
