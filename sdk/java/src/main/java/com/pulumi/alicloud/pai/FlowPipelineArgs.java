// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FlowPipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowPipelineArgs Empty = new FlowPipelineArgs();

    /**
     * The pipeline definition. For more information, see the sample pipeline definition).
     * 
     */
    @Import(name="manifest", required=true)
    private Output<String> manifest;

    /**
     * @return The pipeline definition. For more information, see the sample pipeline definition).
     * 
     */
    public Output<String> manifest() {
        return this.manifest;
    }

    /**
     * The ID of the workspace.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The ID of the workspace.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private FlowPipelineArgs() {}

    private FlowPipelineArgs(FlowPipelineArgs $) {
        this.manifest = $.manifest;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowPipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowPipelineArgs $;

        public Builder() {
            $ = new FlowPipelineArgs();
        }

        public Builder(FlowPipelineArgs defaults) {
            $ = new FlowPipelineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param manifest The pipeline definition. For more information, see the sample pipeline definition).
         * 
         * @return builder
         * 
         */
        public Builder manifest(Output<String> manifest) {
            $.manifest = manifest;
            return this;
        }

        /**
         * @param manifest The pipeline definition. For more information, see the sample pipeline definition).
         * 
         * @return builder
         * 
         */
        public Builder manifest(String manifest) {
            return manifest(Output.of(manifest));
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public FlowPipelineArgs build() {
            if ($.manifest == null) {
                throw new MissingRequiredPropertyException("FlowPipelineArgs", "manifest");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("FlowPipelineArgs", "workspaceId");
            }
            return $;
        }
    }

}
