// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuotaSubQuotaInfoListParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuotaSubQuotaInfoListParameterArgs Empty = new QuotaSubQuotaInfoListParameterArgs();

    /**
     * Enable priority. Valid values: true/false, default: false
     * 
     */
    @Import(name="enablePriority")
    private @Nullable Output<Boolean> enablePriority;

    /**
     * @return Enable priority. Valid values: true/false, default: false
     * 
     */
    public Optional<Output<Boolean>> enablePriority() {
        return Optional.ofNullable(this.enablePriority);
    }

    /**
     * Exclusive or not. Valid values: true/false, default: false
     * 
     */
    @Import(name="forceReservedMin")
    private @Nullable Output<Boolean> forceReservedMin;

    /**
     * @return Exclusive or not. Valid values: true/false, default: false
     * 
     */
    public Optional<Output<Boolean>> forceReservedMin() {
        return Optional.ofNullable(this.forceReservedMin);
    }

    /**
     * The value of maxCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
     * 
     */
    @Import(name="maxCu", required=true)
    private Output<Integer> maxCu;

    /**
     * @return The value of maxCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
     * 
     */
    public Output<Integer> maxCu() {
        return this.maxCu;
    }

    /**
     * The value of minCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
     * 
     */
    @Import(name="minCu", required=true)
    private Output<Integer> minCu;

    /**
     * @return The value of minCU in Reserved CUs.
     * 
     * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
     * 
     */
    public Output<Integer> minCu() {
        return this.minCu;
    }

    /**
     * Scheduling policy. Valid values: Fifo/Fair, default: Fifo
     * 
     */
    @Import(name="schedulerType")
    private @Nullable Output<String> schedulerType;

    /**
     * @return Scheduling policy. Valid values: Fifo/Fair, default: Fifo
     * 
     */
    public Optional<Output<String>> schedulerType() {
        return Optional.ofNullable(this.schedulerType);
    }

    /**
     * Single job CU upper limit. Valid value: greater than or equal to 1
     * 
     * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
     * 
     */
    @Import(name="singleJobCuLimit")
    private @Nullable Output<Integer> singleJobCuLimit;

    /**
     * @return Single job CU upper limit. Valid value: greater than or equal to 1
     * 
     * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
     * 
     */
    public Optional<Output<Integer>> singleJobCuLimit() {
        return Optional.ofNullable(this.singleJobCuLimit);
    }

    private QuotaSubQuotaInfoListParameterArgs() {}

    private QuotaSubQuotaInfoListParameterArgs(QuotaSubQuotaInfoListParameterArgs $) {
        this.enablePriority = $.enablePriority;
        this.forceReservedMin = $.forceReservedMin;
        this.maxCu = $.maxCu;
        this.minCu = $.minCu;
        this.schedulerType = $.schedulerType;
        this.singleJobCuLimit = $.singleJobCuLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaSubQuotaInfoListParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaSubQuotaInfoListParameterArgs $;

        public Builder() {
            $ = new QuotaSubQuotaInfoListParameterArgs();
        }

        public Builder(QuotaSubQuotaInfoListParameterArgs defaults) {
            $ = new QuotaSubQuotaInfoListParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enablePriority Enable priority. Valid values: true/false, default: false
         * 
         * @return builder
         * 
         */
        public Builder enablePriority(@Nullable Output<Boolean> enablePriority) {
            $.enablePriority = enablePriority;
            return this;
        }

        /**
         * @param enablePriority Enable priority. Valid values: true/false, default: false
         * 
         * @return builder
         * 
         */
        public Builder enablePriority(Boolean enablePriority) {
            return enablePriority(Output.of(enablePriority));
        }

        /**
         * @param forceReservedMin Exclusive or not. Valid values: true/false, default: false
         * 
         * @return builder
         * 
         */
        public Builder forceReservedMin(@Nullable Output<Boolean> forceReservedMin) {
            $.forceReservedMin = forceReservedMin;
            return this;
        }

        /**
         * @param forceReservedMin Exclusive or not. Valid values: true/false, default: false
         * 
         * @return builder
         * 
         */
        public Builder forceReservedMin(Boolean forceReservedMin) {
            return forceReservedMin(Output.of(forceReservedMin));
        }

        /**
         * @param maxCu The value of maxCU in Reserved CUs.
         * 
         * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
         * 
         * @return builder
         * 
         */
        public Builder maxCu(Output<Integer> maxCu) {
            $.maxCu = maxCu;
            return this;
        }

        /**
         * @param maxCu The value of maxCU in Reserved CUs.
         * 
         * &gt; **NOTE:**  The value of maxCU must be less than or equal to the value of maxCU in the level-1 quota that you purchased.
         * 
         * @return builder
         * 
         */
        public Builder maxCu(Integer maxCu) {
            return maxCu(Output.of(maxCu));
        }

        /**
         * @param minCu The value of minCU in Reserved CUs.
         * 
         * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
         * 
         * @return builder
         * 
         */
        public Builder minCu(Output<Integer> minCu) {
            $.minCu = minCu;
            return this;
        }

        /**
         * @param minCu The value of minCU in Reserved CUs.
         * 
         * &gt; **NOTE:**  -- The total value of minCU in all the level-2 quotas is equal to the value of minCU in the level-1 quota.    -- The value of minCU must be less than or equal to the value of maxCU in the level-2 quota and less than or equal to the value of minCU in the level-1 quota that you purchased.
         * 
         * @return builder
         * 
         */
        public Builder minCu(Integer minCu) {
            return minCu(Output.of(minCu));
        }

        /**
         * @param schedulerType Scheduling policy. Valid values: Fifo/Fair, default: Fifo
         * 
         * @return builder
         * 
         */
        public Builder schedulerType(@Nullable Output<String> schedulerType) {
            $.schedulerType = schedulerType;
            return this;
        }

        /**
         * @param schedulerType Scheduling policy. Valid values: Fifo/Fair, default: Fifo
         * 
         * @return builder
         * 
         */
        public Builder schedulerType(String schedulerType) {
            return schedulerType(Output.of(schedulerType));
        }

        /**
         * @param singleJobCuLimit Single job CU upper limit. Valid value: greater than or equal to 1
         * 
         * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
         * 
         * @return builder
         * 
         */
        public Builder singleJobCuLimit(@Nullable Output<Integer> singleJobCuLimit) {
            $.singleJobCuLimit = singleJobCuLimit;
            return this;
        }

        /**
         * @param singleJobCuLimit Single job CU upper limit. Valid value: greater than or equal to 1
         * 
         * &gt; **NOTE:** -- If you want to not restrict SingleJobCuLimit, please make sure that this parameter is not included in the configuration at all. That is, do not configure SingleJobCuLimit to &#34;null&#34; or any other invalid value
         * 
         * @return builder
         * 
         */
        public Builder singleJobCuLimit(Integer singleJobCuLimit) {
            return singleJobCuLimit(Output.of(singleJobCuLimit));
        }

        public QuotaSubQuotaInfoListParameterArgs build() {
            if ($.maxCu == null) {
                throw new MissingRequiredPropertyException("QuotaSubQuotaInfoListParameterArgs", "maxCu");
            }
            if ($.minCu == null) {
                throw new MissingRequiredPropertyException("QuotaSubQuotaInfoListParameterArgs", "minCu");
            }
            return $;
        }
    }

}
