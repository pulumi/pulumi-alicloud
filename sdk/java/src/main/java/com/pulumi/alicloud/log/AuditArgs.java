// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditArgs Empty = new AuditArgs();

    /**
     * Aliuid value of your account.
     * 
     */
    @Import(name="aliuid", required=true)
    private Output<String> aliuid;

    /**
     * @return Aliuid value of your account.
     * 
     */
    public Output<String> aliuid() {
        return this.aliuid;
    }

    /**
     * Name of SLS log audit.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Name of SLS log audit.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    @Import(name="multiAccounts")
    private @Nullable Output<List<String>> multiAccounts;

    /**
     * @return Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    public Optional<Output<List<String>>> multiAccounts() {
        return Optional.ofNullable(this.multiAccounts);
    }

    /**
     * Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    @Import(name="resourceDirectoryType")
    private @Nullable Output<String> resourceDirectoryType;

    /**
     * @return Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    public Optional<Output<String>> resourceDirectoryType() {
        return Optional.ofNullable(this.resourceDirectoryType);
    }

    /**
     * Log audit detailed configuration.
     * 
     */
    @Import(name="variableMap")
    private @Nullable Output<Map<String,Object>> variableMap;

    /**
     * @return Log audit detailed configuration.
     * 
     */
    public Optional<Output<Map<String,Object>>> variableMap() {
        return Optional.ofNullable(this.variableMap);
    }

    private AuditArgs() {}

    private AuditArgs(AuditArgs $) {
        this.aliuid = $.aliuid;
        this.displayName = $.displayName;
        this.multiAccounts = $.multiAccounts;
        this.resourceDirectoryType = $.resourceDirectoryType;
        this.variableMap = $.variableMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditArgs $;

        public Builder() {
            $ = new AuditArgs();
        }

        public Builder(AuditArgs defaults) {
            $ = new AuditArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliuid Aliuid value of your account.
         * 
         * @return builder
         * 
         */
        public Builder aliuid(Output<String> aliuid) {
            $.aliuid = aliuid;
            return this;
        }

        /**
         * @param aliuid Aliuid value of your account.
         * 
         * @return builder
         * 
         */
        public Builder aliuid(String aliuid) {
            return aliuid(Output.of(aliuid));
        }

        /**
         * @param displayName Name of SLS log audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Name of SLS log audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(@Nullable Output<List<String>> multiAccounts) {
            $.multiAccounts = multiAccounts;
            return this;
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(List<String> multiAccounts) {
            return multiAccounts(Output.of(multiAccounts));
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(String... multiAccounts) {
            return multiAccounts(List.of(multiAccounts));
        }

        /**
         * @param resourceDirectoryType Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryType(@Nullable Output<String> resourceDirectoryType) {
            $.resourceDirectoryType = resourceDirectoryType;
            return this;
        }

        /**
         * @param resourceDirectoryType Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryType(String resourceDirectoryType) {
            return resourceDirectoryType(Output.of(resourceDirectoryType));
        }

        /**
         * @param variableMap Log audit detailed configuration.
         * 
         * @return builder
         * 
         */
        public Builder variableMap(@Nullable Output<Map<String,Object>> variableMap) {
            $.variableMap = variableMap;
            return this;
        }

        /**
         * @param variableMap Log audit detailed configuration.
         * 
         * @return builder
         * 
         */
        public Builder variableMap(Map<String,Object> variableMap) {
            return variableMap(Output.of(variableMap));
        }

        public AuditArgs build() {
            if ($.aliuid == null) {
                throw new MissingRequiredPropertyException("AuditArgs", "aliuid");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("AuditArgs", "displayName");
            }
            return $;
        }
    }

}
