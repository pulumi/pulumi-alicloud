// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.chatbot.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAgentsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAgentsPlainArgs Empty = new GetAgentsPlainArgs();

    /**
     * The name of the agent.
     * 
     */
    @Import(name="agentName")
    private @Nullable String agentName;

    /**
     * @return The name of the agent.
     * 
     */
    public Optional<String> agentName() {
        return Optional.ofNullable(this.agentName);
    }

    /**
     * A regex string to filter resulting chatbot agents by name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter resulting chatbot agents by name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="outputFile")
    private @Nullable String outputFile;

    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="pageNumber")
    private @Nullable Integer pageNumber;

    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    @Import(name="pageSize")
    private @Nullable Integer pageSize;

    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    private GetAgentsPlainArgs() {}

    private GetAgentsPlainArgs(GetAgentsPlainArgs $) {
        this.agentName = $.agentName;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAgentsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAgentsPlainArgs $;

        public Builder() {
            $ = new GetAgentsPlainArgs();
        }

        public Builder(GetAgentsPlainArgs defaults) {
            $ = new GetAgentsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentName The name of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentName(@Nullable String agentName) {
            $.agentName = agentName;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter resulting chatbot agents by name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder pageNumber(@Nullable Integer pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        public Builder pageSize(@Nullable Integer pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        public GetAgentsPlainArgs build() {
            return $;
        }
    }

}
