// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WaitingRoomHostNameAndPath {
    /**
     * @return The domain name.
     * 
     */
    private String domain;
    /**
     * @return The path.
     * 
     */
    private String path;
    /**
     * @return The subdomain.
     * 
     */
    private String subdomain;

    private WaitingRoomHostNameAndPath() {}
    /**
     * @return The domain name.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The path.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The subdomain.
     * 
     */
    public String subdomain() {
        return this.subdomain;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WaitingRoomHostNameAndPath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String path;
        private String subdomain;
        public Builder() {}
        public Builder(WaitingRoomHostNameAndPath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.path = defaults.path;
    	      this.subdomain = defaults.subdomain;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("WaitingRoomHostNameAndPath", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("WaitingRoomHostNameAndPath", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder subdomain(String subdomain) {
            if (subdomain == null) {
              throw new MissingRequiredPropertyException("WaitingRoomHostNameAndPath", "subdomain");
            }
            this.subdomain = subdomain;
            return this;
        }
        public WaitingRoomHostNameAndPath build() {
            final var _resultValue = new WaitingRoomHostNameAndPath();
            _resultValue.domain = domain;
            _resultValue.path = path;
            _resultValue.subdomain = subdomain;
            return _resultValue;
        }
    }
}
