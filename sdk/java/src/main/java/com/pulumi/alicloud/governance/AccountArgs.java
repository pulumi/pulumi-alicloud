// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.governance;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * The ID of the enrolled account.
     * - If you are creating a new resource account, this parameter is not required.
     * - If you are enrolling a existing account to account factory, this parameter is required.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<Integer> accountId;

    /**
     * @return The ID of the enrolled account.
     * - If you are creating a new resource account, this parameter is not required.
     * - If you are enrolling a existing account to account factory, this parameter is required.
     * 
     */
    public Optional<Output<Integer>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Account name prefix.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="accountNamePrefix")
    private @Nullable Output<String> accountNamePrefix;

    /**
     * @return Account name prefix.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> accountNamePrefix() {
        return Optional.ofNullable(this.accountNamePrefix);
    }

    /**
     * The baseline ID.
     * 
     * If it is left blank, the system default baseline is used by default.
     * 
     */
    @Import(name="baselineId", required=true)
    private Output<String> baselineId;

    /**
     * @return The baseline ID.
     * 
     * If it is left blank, the system default baseline is used by default.
     * 
     */
    public Output<String> baselineId() {
        return this.baselineId;
    }

    /**
     * The domain name is used to qualify the login name of RAM users and RAM roles.
     * 
     * Format: \&lt;AccountAlias&gt;.onaliyun.com where \&lt;AccountAlias&gt; is the account alias, and the default value is the Aliyun account ID. The default domain name must end with the .onaliyun.com suffix. The maximum length of the default domain name (including suffix) is 64 characters. It can contain English letters, numbers, English periods (.) , dashes (-) and underscores (_).
     * 
     */
    @Import(name="defaultDomainName")
    private @Nullable Output<String> defaultDomainName;

    /**
     * @return The domain name is used to qualify the login name of RAM users and RAM roles.
     * 
     * Format: \&lt;AccountAlias&gt;.onaliyun.com where \&lt;AccountAlias&gt; is the account alias, and the default value is the Aliyun account ID. The default domain name must end with the .onaliyun.com suffix. The maximum length of the default domain name (including suffix) is 64 characters. It can contain English letters, numbers, English periods (.) , dashes (-) and underscores (_).
     * 
     */
    public Optional<Output<String>> defaultDomainName() {
        return Optional.ofNullable(this.defaultDomainName);
    }

    /**
     * The account display name.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The account display name.
     * - This parameter is required if you are creating a new resource account.
     * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The ID of the parent resource folder.
     * 
     * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
     * 
     * If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    @Import(name="folderId")
    private @Nullable Output<String> folderId;

    /**
     * @return The ID of the parent resource folder.
     * 
     * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
     * 
     * If the registration application is applied to an existing account, this parameter does not need to be filled in.
     * 
     */
    public Optional<Output<String>> folderId() {
        return Optional.ofNullable(this.folderId);
    }

    /**
     * The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    @Import(name="payerAccountId")
    private @Nullable Output<Integer> payerAccountId;

    /**
     * @return The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    public Optional<Output<Integer>> payerAccountId() {
        return Optional.ofNullable(this.payerAccountId);
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.accountId = $.accountId;
        this.accountNamePrefix = $.accountNamePrefix;
        this.baselineId = $.baselineId;
        this.defaultDomainName = $.defaultDomainName;
        this.displayName = $.displayName;
        this.folderId = $.folderId;
        this.payerAccountId = $.payerAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The ID of the enrolled account.
         * - If you are creating a new resource account, this parameter is not required.
         * - If you are enrolling a existing account to account factory, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<Integer> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The ID of the enrolled account.
         * - If you are creating a new resource account, this parameter is not required.
         * - If you are enrolling a existing account to account factory, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Integer accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountNamePrefix Account name prefix.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(@Nullable Output<String> accountNamePrefix) {
            $.accountNamePrefix = accountNamePrefix;
            return this;
        }

        /**
         * @param accountNamePrefix Account name prefix.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(String accountNamePrefix) {
            return accountNamePrefix(Output.of(accountNamePrefix));
        }

        /**
         * @param baselineId The baseline ID.
         * 
         * If it is left blank, the system default baseline is used by default.
         * 
         * @return builder
         * 
         */
        public Builder baselineId(Output<String> baselineId) {
            $.baselineId = baselineId;
            return this;
        }

        /**
         * @param baselineId The baseline ID.
         * 
         * If it is left blank, the system default baseline is used by default.
         * 
         * @return builder
         * 
         */
        public Builder baselineId(String baselineId) {
            return baselineId(Output.of(baselineId));
        }

        /**
         * @param defaultDomainName The domain name is used to qualify the login name of RAM users and RAM roles.
         * 
         * Format: \&lt;AccountAlias&gt;.onaliyun.com where \&lt;AccountAlias&gt; is the account alias, and the default value is the Aliyun account ID. The default domain name must end with the .onaliyun.com suffix. The maximum length of the default domain name (including suffix) is 64 characters. It can contain English letters, numbers, English periods (.) , dashes (-) and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder defaultDomainName(@Nullable Output<String> defaultDomainName) {
            $.defaultDomainName = defaultDomainName;
            return this;
        }

        /**
         * @param defaultDomainName The domain name is used to qualify the login name of RAM users and RAM roles.
         * 
         * Format: \&lt;AccountAlias&gt;.onaliyun.com where \&lt;AccountAlias&gt; is the account alias, and the default value is the Aliyun account ID. The default domain name must end with the .onaliyun.com suffix. The maximum length of the default domain name (including suffix) is 64 characters. It can contain English letters, numbers, English periods (.) , dashes (-) and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder defaultDomainName(String defaultDomainName) {
            return defaultDomainName(Output.of(defaultDomainName));
        }

        /**
         * @param displayName The account display name.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The account display name.
         * - This parameter is required if you are creating a new resource account.
         * - If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param folderId The ID of the parent resource folder.
         * 
         * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
         * 
         * If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder folderId(@Nullable Output<String> folderId) {
            $.folderId = folderId;
            return this;
        }

        /**
         * @param folderId The ID of the parent resource folder.
         * 
         * If you want to create a new resource account and leave this parameter blank, the account is created in the Root folder by default.
         * 
         * If the registration application is applied to an existing account, this parameter does not need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder folderId(String folderId) {
            return folderId(Output.of(folderId));
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(@Nullable Output<Integer> payerAccountId) {
            $.payerAccountId = payerAccountId;
            return this;
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(Integer payerAccountId) {
            return payerAccountId(Output.of(payerAccountId));
        }

        public AccountArgs build() {
            if ($.baselineId == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "baselineId");
            }
            return $;
        }
    }

}
