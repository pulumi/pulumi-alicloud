// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasefilesystem;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.databasefilesystem.InstanceArgs;
import com.pulumi.alicloud.databasefilesystem.inputs.InstanceState;
import com.pulumi.alicloud.databasefilesystem.outputs.InstanceEcsList;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a DBFS Dbfs Instance resource. An instance of a database file system is equivalent to a file system and can store data of file types.
 * 
 * For information about DBFS Dbfs Instance and how to use it, see [What is Dbfs Instance](https://next.api.alibabacloud.com/document/DBFS/2020-04-18/CreateDbfs).
 * 
 * &gt; **NOTE:** Available since v1.136.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.databasefilesystem.Instance;
 * import com.pulumi.alicloud.databasefilesystem.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         var example = new Instance(&#34;example&#34;, InstanceArgs.builder()        
 *             .category(&#34;standard&#34;)
 *             .zoneId(&#34;cn-hangzhou-i&#34;)
 *             .performanceLevel(&#34;PL1&#34;)
 *             .instanceName(name)
 *             .size(100)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * DBFS Dbfs Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:databasefilesystem/instance:Instance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:databasefilesystem/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * The number of CPU cores and the upper limit of memory used by the database file storage instance.
     * 
     */
    @Export(name="advancedFeatures", refs={String.class}, tree="[0]")
    private Output<String> advancedFeatures;

    /**
     * @return The number of CPU cores and the upper limit of memory used by the database file storage instance.
     * 
     */
    public Output<String> advancedFeatures() {
        return this.advancedFeatures;
    }
    /**
     * Category of database file system.
     * 
     */
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output<String> category;

    /**
     * @return Category of database file system.
     * 
     */
    public Output<String> category() {
        return this.category;
    }
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Whether to delete the original snapshot after creating DBFS using the snapshot.
     * 
     */
    @Export(name="deleteSnapshot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteSnapshot;

    /**
     * @return Whether to delete the original snapshot after creating DBFS using the snapshot.
     * 
     */
    public Output<Optional<Boolean>> deleteSnapshot() {
        return Codegen.optional(this.deleteSnapshot);
    }
    /**
     * The collection of ECS instances mounted to the Database file system. See `ecs_list` below.  **NOTE:** Field &#39;ecs_list&#39; has been deprecated from provider version 1.156.0 and it will be removed in the future version. Please use the new resource &#39;alicloud_dbfs_instance_attachment&#39; to attach ECS and DBFS. See `ecs_list` below.
     * 
     * @deprecated
     * Field &#39;ecs_list&#39; has been deprecated from provider version 1.156.0 and it will be removed in the future version. Please use the new resource &#39;alicloud_dbfs_instance_attachment&#39; to attach ECS and DBFS.
     * 
     */
    @Deprecated /* Field 'ecs_list' has been deprecated from provider version 1.156.0 and it will be removed in the future version. Please use the new resource 'alicloud_dbfs_instance_attachment' to attach ECS and DBFS. */
    @Export(name="ecsLists", refs={List.class,InstanceEcsList.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InstanceEcsList>> ecsLists;

    /**
     * @return The collection of ECS instances mounted to the Database file system. See `ecs_list` below.  **NOTE:** Field &#39;ecs_list&#39; has been deprecated from provider version 1.156.0 and it will be removed in the future version. Please use the new resource &#39;alicloud_dbfs_instance_attachment&#39; to attach ECS and DBFS. See `ecs_list` below.
     * 
     */
    public Output<Optional<List<InstanceEcsList>>> ecsLists() {
        return Codegen.optional(this.ecsLists);
    }
    /**
     * Whether to create DBFS in RAID mode. If created in RAID mode, the capacity is at least 66GB.Valid values: true or false. Default value: false.
     * 
     */
    @Export(name="enableRaid", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableRaid;

    /**
     * @return Whether to create DBFS in RAID mode. If created in RAID mode, the capacity is at least 66GB.Valid values: true or false. Default value: false.
     * 
     */
    public Output<Optional<Boolean>> enableRaid() {
        return Codegen.optional(this.enableRaid);
    }
    /**
     * Whether to encrypt DBFS.Valid values: true or false. Default value: false.
     * 
     */
    @Export(name="encryption", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> encryption;

    /**
     * @return Whether to encrypt DBFS.Valid values: true or false. Default value: false.
     * 
     */
    public Output<Optional<Boolean>> encryption() {
        return Codegen.optional(this.encryption);
    }
    /**
     * Database file system name.
     * 
     */
    @Export(name="fsName", refs={String.class}, tree="[0]")
    private Output<String> fsName;

    /**
     * @return Database file system name.
     * 
     */
    public Output<String> fsName() {
        return this.fsName;
    }
    /**
     * . Field &#39;instance_name&#39; has been deprecated from provider version 1.212.0. New field &#39;fs_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;instance_name&#39; has been deprecated since provider version 1.212.0. New field &#39;fs_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'instance_name' has been deprecated since provider version 1.212.0. New field 'fs_name' instead. */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output<String> instanceName;

    /**
     * @return . Field &#39;instance_name&#39; has been deprecated from provider version 1.212.0. New field &#39;fs_name&#39; instead.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * Instance type. Value range:
     * - dbfs.small
     * - dbfs.medium
     * - dbfs.large (default)
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceType;

    /**
     * @return Instance type. Value range:
     * - dbfs.small
     * - dbfs.medium
     * - dbfs.large (default)
     * 
     */
    public Output<Optional<String>> instanceType() {
        return Codegen.optional(this.instanceType);
    }
    /**
     * The ID of the KMS key used by DBFS.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return The ID of the KMS key used by DBFS.
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * When you create a DBFS instance, set the performance level of the DBFS instance. Value range:
     * - PL0: single disk maximum random read-write IOPS 10000
     * - PL1: highest random read-write IOPS 50000 per disk (default)
     * - PL2: single disk maximum random read-write IOPS 100000
     * - PL3: single disk maximum random read-write IOPS 1 million.
     * 
     */
    @Export(name="performanceLevel", refs={String.class}, tree="[0]")
    private Output<String> performanceLevel;

    /**
     * @return When you create a DBFS instance, set the performance level of the DBFS instance. Value range:
     * - PL0: single disk maximum random read-write IOPS 10000
     * - PL1: highest random read-write IOPS 50000 per disk (default)
     * - PL2: single disk maximum random read-write IOPS 100000
     * - PL3: single disk maximum random read-write IOPS 1 million.
     * 
     */
    public Output<String> performanceLevel() {
        return this.performanceLevel;
    }
    /**
     * Number of strips. Required when the EnableRaid parameter is true.Value range: Currently, only 8 stripes are supported.
     * 
     */
    @Export(name="raidStripeUnitNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> raidStripeUnitNumber;

    /**
     * @return Number of strips. Required when the EnableRaid parameter is true.Value range: Currently, only 8 stripes are supported.
     * 
     */
    public Output<Optional<Integer>> raidStripeUnitNumber() {
        return Codegen.optional(this.raidStripeUnitNumber);
    }
    /**
     * Size of database file system, unit GiB.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return Size of database file system, unit GiB.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * The ID of the snapshot used to create the DBFS instance.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return The ID of the snapshot used to create the DBFS instance.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The usage scenario of DBFS. Value range:
     * - MySQL 5.7
     * - PostgreSQL
     * - MongoDB.
     * 
     */
    @Export(name="usedScene", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usedScene;

    /**
     * @return The usage scenario of DBFS. Value range:
     * - MySQL 5.7
     * - PostgreSQL
     * - MongoDB.
     * 
     */
    public Output<Optional<String>> usedScene() {
        return Codegen.optional(this.usedScene);
    }
    /**
     * The ID of the zone to which the database file system belongs.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The ID of the zone to which the database file system belongs.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:databasefilesystem/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:databasefilesystem/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
