// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpv4GatewaysGateway {
    /**
     * @return The creation time of the resource.
     * 
     */
    private String createTime;
    /**
     * @return Indicates whether the IPv4 gateway is activated.
     * 
     */
    private Boolean enabled;
    /**
     * @return The ID of the Ipv4 Gateway.
     * 
     */
    private String id;
    /**
     * @return The description of the IPv4 gateway.
     * 
     */
    private String ipv4GatewayDescription;
    /**
     * @return The resource attribute field that represents the resource level 1 ID.
     * 
     */
    private String ipv4GatewayId;
    /**
     * @return The name of the IPv4 gateway.
     * 
     */
    private String ipv4GatewayName;
    /**
     * @return ID of the route table associated with IPv4 Gateway.
     * 
     */
    private String ipv4GatewayRouteTableId;
    /**
     * @return The status of the resource.
     * 
     */
    private String status;
    /**
     * @return The ID of the VPC associated with the IPv4 Gateway.
     * 
     */
    private String vpcId;

    private GetIpv4GatewaysGateway() {}
    /**
     * @return The creation time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Indicates whether the IPv4 gateway is activated.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The ID of the Ipv4 Gateway.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The description of the IPv4 gateway.
     * 
     */
    public String ipv4GatewayDescription() {
        return this.ipv4GatewayDescription;
    }
    /**
     * @return The resource attribute field that represents the resource level 1 ID.
     * 
     */
    public String ipv4GatewayId() {
        return this.ipv4GatewayId;
    }
    /**
     * @return The name of the IPv4 gateway.
     * 
     */
    public String ipv4GatewayName() {
        return this.ipv4GatewayName;
    }
    /**
     * @return ID of the route table associated with IPv4 Gateway.
     * 
     */
    public String ipv4GatewayRouteTableId() {
        return this.ipv4GatewayRouteTableId;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the VPC associated with the IPv4 Gateway.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpv4GatewaysGateway defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private Boolean enabled;
        private String id;
        private String ipv4GatewayDescription;
        private String ipv4GatewayId;
        private String ipv4GatewayName;
        private String ipv4GatewayRouteTableId;
        private String status;
        private String vpcId;
        public Builder() {}
        public Builder(GetIpv4GatewaysGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.ipv4GatewayDescription = defaults.ipv4GatewayDescription;
    	      this.ipv4GatewayId = defaults.ipv4GatewayId;
    	      this.ipv4GatewayName = defaults.ipv4GatewayName;
    	      this.ipv4GatewayRouteTableId = defaults.ipv4GatewayRouteTableId;
    	      this.status = defaults.status;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4GatewayDescription(String ipv4GatewayDescription) {
            if (ipv4GatewayDescription == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "ipv4GatewayDescription");
            }
            this.ipv4GatewayDescription = ipv4GatewayDescription;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4GatewayId(String ipv4GatewayId) {
            if (ipv4GatewayId == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "ipv4GatewayId");
            }
            this.ipv4GatewayId = ipv4GatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4GatewayName(String ipv4GatewayName) {
            if (ipv4GatewayName == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "ipv4GatewayName");
            }
            this.ipv4GatewayName = ipv4GatewayName;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4GatewayRouteTableId(String ipv4GatewayRouteTableId) {
            if (ipv4GatewayRouteTableId == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "ipv4GatewayRouteTableId");
            }
            this.ipv4GatewayRouteTableId = ipv4GatewayRouteTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetIpv4GatewaysGateway", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetIpv4GatewaysGateway build() {
            final var _resultValue = new GetIpv4GatewaysGateway();
            _resultValue.createTime = createTime;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.ipv4GatewayDescription = ipv4GatewayDescription;
            _resultValue.ipv4GatewayId = ipv4GatewayId;
            _resultValue.ipv4GatewayName = ipv4GatewayName;
            _resultValue.ipv4GatewayRouteTableId = ipv4GatewayRouteTableId;
            _resultValue.status = status;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
