// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.opensearch.outputs;

import com.pulumi.alicloud.opensearch.outputs.GetAppGroupsGroupQuota;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAppGroupsGroup {
    /**
     * @return The ID of the App Group.
     * 
     */
    private String appGroupId;
    /**
     * @return Application Group Name.
     * 
     */
    private String appGroupName;
    /**
     * @return Billing model. Valid values:`compute_resource` and `qps`.
     * 
     */
    private Integer chargeWay;
    /**
     * @return The commodity code.
     * 
     */
    private String commodityCode;
    /**
     * @return The time of creation.
     * 
     */
    private Integer createTime;
    /**
     * @return The version of Application Group Name.
     * 
     */
    private String currentVersion;
    /**
     * @return The description of the resource.
     * 
     */
    private String description;
    /**
     * @return Domain name.
     * 
     */
    private String domain;
    /**
     * @return Expiration Time.
     * 
     */
    private String expireOn;
    /**
     * @return Coarse deployment ID.
     * 
     */
    private Integer firstRankAlgoDeploymentId;
    /**
     * @return Whether the quota status is under approval. Valid status:
     * 
     */
    private Integer hasPendingQuotaReviewTask;
    private String id;
    /**
     * @return The Instance ID.
     * 
     */
    private String instanceId;
    /**
     * @return Locked state. Valid status: `Unlock`,`LockByExpiration`,`ManualLock`.
     * 
     */
    private String lockMode;
    /**
     * @return Instance is automatically locked after expiration.
     * 
     */
    private Integer lockedByExpiration;
    /**
     * @return The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
     * 
     */
    private String paymentType;
    /**
     * @return Refine deployment ID in deployment.
     * 
     */
    private Integer pendingSecondRankAlgoDeploymentId;
    /**
     * @return Unfinished order number.
     * 
     */
    private String processingOrderId;
    /**
     * @return Whether the production is completed. Valid values:
     * 
     */
    private Integer produced;
    /**
     * @return The Project ID.
     * 
     */
    private String projectId;
    /**
     * @return Quota information.
     * 
     */
    private List<GetAppGroupsGroupQuota> quotas;
    /**
     * @return The Resource Group ID.
     * 
     */
    private String resourceGroupId;
    /**
     * @return Refine deployment ID.
     * 
     */
    private Integer secondRankAlgoDeploymentId;
    /**
     * @return The status of the resource. Valid values: `producing`,`review_pending`,`config_pending`,`normal`,`frozen`.
     * 
     */
    private String status;
    /**
     * @return The Switched time.
     * 
     */
    private Integer switchedTime;
    /**
     * @return Application type. Valid Values: `standard`, `enhanced`.
     * 
     */
    private String type;

    private GetAppGroupsGroup() {}
    /**
     * @return The ID of the App Group.
     * 
     */
    public String appGroupId() {
        return this.appGroupId;
    }
    /**
     * @return Application Group Name.
     * 
     */
    public String appGroupName() {
        return this.appGroupName;
    }
    /**
     * @return Billing model. Valid values:`compute_resource` and `qps`.
     * 
     */
    public Integer chargeWay() {
        return this.chargeWay;
    }
    /**
     * @return The commodity code.
     * 
     */
    public String commodityCode() {
        return this.commodityCode;
    }
    /**
     * @return The time of creation.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The version of Application Group Name.
     * 
     */
    public String currentVersion() {
        return this.currentVersion;
    }
    /**
     * @return The description of the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Domain name.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Expiration Time.
     * 
     */
    public String expireOn() {
        return this.expireOn;
    }
    /**
     * @return Coarse deployment ID.
     * 
     */
    public Integer firstRankAlgoDeploymentId() {
        return this.firstRankAlgoDeploymentId;
    }
    /**
     * @return Whether the quota status is under approval. Valid status:
     * 
     */
    public Integer hasPendingQuotaReviewTask() {
        return this.hasPendingQuotaReviewTask;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The Instance ID.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Locked state. Valid status: `Unlock`,`LockByExpiration`,`ManualLock`.
     * 
     */
    public String lockMode() {
        return this.lockMode;
    }
    /**
     * @return Instance is automatically locked after expiration.
     * 
     */
    public Integer lockedByExpiration() {
        return this.lockedByExpiration;
    }
    /**
     * @return The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return Refine deployment ID in deployment.
     * 
     */
    public Integer pendingSecondRankAlgoDeploymentId() {
        return this.pendingSecondRankAlgoDeploymentId;
    }
    /**
     * @return Unfinished order number.
     * 
     */
    public String processingOrderId() {
        return this.processingOrderId;
    }
    /**
     * @return Whether the production is completed. Valid values:
     * 
     */
    public Integer produced() {
        return this.produced;
    }
    /**
     * @return The Project ID.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Quota information.
     * 
     */
    public List<GetAppGroupsGroupQuota> quotas() {
        return this.quotas;
    }
    /**
     * @return The Resource Group ID.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Refine deployment ID.
     * 
     */
    public Integer secondRankAlgoDeploymentId() {
        return this.secondRankAlgoDeploymentId;
    }
    /**
     * @return The status of the resource. Valid values: `producing`,`review_pending`,`config_pending`,`normal`,`frozen`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The Switched time.
     * 
     */
    public Integer switchedTime() {
        return this.switchedTime;
    }
    /**
     * @return Application type. Valid Values: `standard`, `enhanced`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appGroupId;
        private String appGroupName;
        private Integer chargeWay;
        private String commodityCode;
        private Integer createTime;
        private String currentVersion;
        private String description;
        private String domain;
        private String expireOn;
        private Integer firstRankAlgoDeploymentId;
        private Integer hasPendingQuotaReviewTask;
        private String id;
        private String instanceId;
        private String lockMode;
        private Integer lockedByExpiration;
        private String paymentType;
        private Integer pendingSecondRankAlgoDeploymentId;
        private String processingOrderId;
        private Integer produced;
        private String projectId;
        private List<GetAppGroupsGroupQuota> quotas;
        private String resourceGroupId;
        private Integer secondRankAlgoDeploymentId;
        private String status;
        private Integer switchedTime;
        private String type;
        public Builder() {}
        public Builder(GetAppGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appGroupId = defaults.appGroupId;
    	      this.appGroupName = defaults.appGroupName;
    	      this.chargeWay = defaults.chargeWay;
    	      this.commodityCode = defaults.commodityCode;
    	      this.createTime = defaults.createTime;
    	      this.currentVersion = defaults.currentVersion;
    	      this.description = defaults.description;
    	      this.domain = defaults.domain;
    	      this.expireOn = defaults.expireOn;
    	      this.firstRankAlgoDeploymentId = defaults.firstRankAlgoDeploymentId;
    	      this.hasPendingQuotaReviewTask = defaults.hasPendingQuotaReviewTask;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.lockMode = defaults.lockMode;
    	      this.lockedByExpiration = defaults.lockedByExpiration;
    	      this.paymentType = defaults.paymentType;
    	      this.pendingSecondRankAlgoDeploymentId = defaults.pendingSecondRankAlgoDeploymentId;
    	      this.processingOrderId = defaults.processingOrderId;
    	      this.produced = defaults.produced;
    	      this.projectId = defaults.projectId;
    	      this.quotas = defaults.quotas;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.secondRankAlgoDeploymentId = defaults.secondRankAlgoDeploymentId;
    	      this.status = defaults.status;
    	      this.switchedTime = defaults.switchedTime;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder appGroupId(String appGroupId) {
            if (appGroupId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "appGroupId");
            }
            this.appGroupId = appGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder appGroupName(String appGroupName) {
            if (appGroupName == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "appGroupName");
            }
            this.appGroupName = appGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder chargeWay(Integer chargeWay) {
            if (chargeWay == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "chargeWay");
            }
            this.chargeWay = chargeWay;
            return this;
        }
        @CustomType.Setter
        public Builder commodityCode(String commodityCode) {
            if (commodityCode == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "commodityCode");
            }
            this.commodityCode = commodityCode;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(Integer createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder currentVersion(String currentVersion) {
            if (currentVersion == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "currentVersion");
            }
            this.currentVersion = currentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder expireOn(String expireOn) {
            if (expireOn == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "expireOn");
            }
            this.expireOn = expireOn;
            return this;
        }
        @CustomType.Setter
        public Builder firstRankAlgoDeploymentId(Integer firstRankAlgoDeploymentId) {
            if (firstRankAlgoDeploymentId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "firstRankAlgoDeploymentId");
            }
            this.firstRankAlgoDeploymentId = firstRankAlgoDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder hasPendingQuotaReviewTask(Integer hasPendingQuotaReviewTask) {
            if (hasPendingQuotaReviewTask == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "hasPendingQuotaReviewTask");
            }
            this.hasPendingQuotaReviewTask = hasPendingQuotaReviewTask;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder lockMode(String lockMode) {
            if (lockMode == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "lockMode");
            }
            this.lockMode = lockMode;
            return this;
        }
        @CustomType.Setter
        public Builder lockedByExpiration(Integer lockedByExpiration) {
            if (lockedByExpiration == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "lockedByExpiration");
            }
            this.lockedByExpiration = lockedByExpiration;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder pendingSecondRankAlgoDeploymentId(Integer pendingSecondRankAlgoDeploymentId) {
            if (pendingSecondRankAlgoDeploymentId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "pendingSecondRankAlgoDeploymentId");
            }
            this.pendingSecondRankAlgoDeploymentId = pendingSecondRankAlgoDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder processingOrderId(String processingOrderId) {
            if (processingOrderId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "processingOrderId");
            }
            this.processingOrderId = processingOrderId;
            return this;
        }
        @CustomType.Setter
        public Builder produced(Integer produced) {
            if (produced == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "produced");
            }
            this.produced = produced;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder quotas(List<GetAppGroupsGroupQuota> quotas) {
            if (quotas == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "quotas");
            }
            this.quotas = quotas;
            return this;
        }
        public Builder quotas(GetAppGroupsGroupQuota... quotas) {
            return quotas(List.of(quotas));
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder secondRankAlgoDeploymentId(Integer secondRankAlgoDeploymentId) {
            if (secondRankAlgoDeploymentId == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "secondRankAlgoDeploymentId");
            }
            this.secondRankAlgoDeploymentId = secondRankAlgoDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder switchedTime(Integer switchedTime) {
            if (switchedTime == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "switchedTime");
            }
            this.switchedTime = switchedTime;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAppGroupsGroup", "type");
            }
            this.type = type;
            return this;
        }
        public GetAppGroupsGroup build() {
            final var _resultValue = new GetAppGroupsGroup();
            _resultValue.appGroupId = appGroupId;
            _resultValue.appGroupName = appGroupName;
            _resultValue.chargeWay = chargeWay;
            _resultValue.commodityCode = commodityCode;
            _resultValue.createTime = createTime;
            _resultValue.currentVersion = currentVersion;
            _resultValue.description = description;
            _resultValue.domain = domain;
            _resultValue.expireOn = expireOn;
            _resultValue.firstRankAlgoDeploymentId = firstRankAlgoDeploymentId;
            _resultValue.hasPendingQuotaReviewTask = hasPendingQuotaReviewTask;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.lockMode = lockMode;
            _resultValue.lockedByExpiration = lockedByExpiration;
            _resultValue.paymentType = paymentType;
            _resultValue.pendingSecondRankAlgoDeploymentId = pendingSecondRankAlgoDeploymentId;
            _resultValue.processingOrderId = processingOrderId;
            _resultValue.produced = produced;
            _resultValue.projectId = projectId;
            _resultValue.quotas = quotas;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.secondRankAlgoDeploymentId = secondRankAlgoDeploymentId;
            _resultValue.status = status;
            _resultValue.switchedTime = switchedTime;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
