// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessGroupsPlainArgs Empty = new GetAccessGroupsPlainArgs();

    /**
     * The name of access group.
     * 
     */
    @Import(name="accessGroupName")
    private @Nullable String accessGroupName;

    /**
     * @return The name of access group.
     * 
     */
    public Optional<String> accessGroupName() {
        return Optional.ofNullable(this.accessGroupName);
    }

    /**
     * Filter results by a specific AccessGroupType.
     * 
     */
    @Import(name="accessGroupType")
    private @Nullable String accessGroupType;

    /**
     * @return Filter results by a specific AccessGroupType.
     * 
     */
    public Optional<String> accessGroupType() {
        return Optional.ofNullable(this.accessGroupType);
    }

    /**
     * Filter results by a specific Description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Filter results by a specific Description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The type of file system. Valid values: `standard` and `extreme`. Default to `standard`.
     * 
     */
    @Import(name="fileSystemType")
    private @Nullable String fileSystemType;

    /**
     * @return The type of file system. Valid values: `standard` and `extreme`. Default to `standard`.
     * 
     */
    public Optional<String> fileSystemType() {
        return Optional.ofNullable(this.fileSystemType);
    }

    /**
     * A regex string to filter AccessGroups by name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter AccessGroups by name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
     * 
     * @deprecated
     * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;access_group_type&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'access_group_type' replaces it. */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
     * 
     * @deprecated
     * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;access_group_type&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'access_group_type' replaces it. */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Specifies whether the time to return is in UTC. Valid values: true and false.
     * 
     */
    @Import(name="useutcDateTime")
    private @Nullable Boolean useutcDateTime;

    /**
     * @return Specifies whether the time to return is in UTC. Valid values: true and false.
     * 
     */
    public Optional<Boolean> useutcDateTime() {
        return Optional.ofNullable(this.useutcDateTime);
    }

    private GetAccessGroupsPlainArgs() {}

    private GetAccessGroupsPlainArgs(GetAccessGroupsPlainArgs $) {
        this.accessGroupName = $.accessGroupName;
        this.accessGroupType = $.accessGroupType;
        this.description = $.description;
        this.fileSystemType = $.fileSystemType;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.type = $.type;
        this.useutcDateTime = $.useutcDateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessGroupsPlainArgs $;

        public Builder() {
            $ = new GetAccessGroupsPlainArgs();
        }

        public Builder(GetAccessGroupsPlainArgs defaults) {
            $ = new GetAccessGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessGroupName The name of access group.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupName(@Nullable String accessGroupName) {
            $.accessGroupName = accessGroupName;
            return this;
        }

        /**
         * @param accessGroupType Filter results by a specific AccessGroupType.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupType(@Nullable String accessGroupType) {
            $.accessGroupType = accessGroupType;
            return this;
        }

        /**
         * @param description Filter results by a specific Description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param fileSystemType The type of file system. Valid values: `standard` and `extreme`. Default to `standard`.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemType(@Nullable String fileSystemType) {
            $.fileSystemType = fileSystemType;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter AccessGroups by name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param type Field `type` has been deprecated from version 1.95.0. Use `accessGroupType` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;access_group_type&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'access_group_type' replaces it. */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        /**
         * @param useutcDateTime Specifies whether the time to return is in UTC. Valid values: true and false.
         * 
         * @return builder
         * 
         */
        public Builder useutcDateTime(@Nullable Boolean useutcDateTime) {
            $.useutcDateTime = useutcDateTime;
            return this;
        }

        public GetAccessGroupsPlainArgs build() {
            return $;
        }
    }

}
