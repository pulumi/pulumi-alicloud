// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fnf;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExecutionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExecutionArgs Empty = new ExecutionArgs();

    /**
     * The name of the execution.
     * 
     */
    @Import(name="executionName", required=true)
    private Output<String> executionName;

    /**
     * @return The name of the execution.
     * 
     */
    public Output<String> executionName() {
        return this.executionName;
    }

    /**
     * The name of the flow.
     * 
     */
    @Import(name="flowName", required=true)
    private Output<String> flowName;

    /**
     * @return The name of the flow.
     * 
     */
    public Output<String> flowName() {
        return this.flowName;
    }

    /**
     * The Input information for this execution.
     * 
     */
    @Import(name="input")
    private @Nullable Output<String> input;

    /**
     * @return The Input information for this execution.
     * 
     */
    public Optional<Output<String>> input() {
        return Optional.ofNullable(this.input);
    }

    /**
     * The status of the resource. Valid values: `Stopped`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `Stopped`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ExecutionArgs() {}

    private ExecutionArgs(ExecutionArgs $) {
        this.executionName = $.executionName;
        this.flowName = $.flowName;
        this.input = $.input;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExecutionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExecutionArgs $;

        public Builder() {
            $ = new ExecutionArgs();
        }

        public Builder(ExecutionArgs defaults) {
            $ = new ExecutionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executionName The name of the execution.
         * 
         * @return builder
         * 
         */
        public Builder executionName(Output<String> executionName) {
            $.executionName = executionName;
            return this;
        }

        /**
         * @param executionName The name of the execution.
         * 
         * @return builder
         * 
         */
        public Builder executionName(String executionName) {
            return executionName(Output.of(executionName));
        }

        /**
         * @param flowName The name of the flow.
         * 
         * @return builder
         * 
         */
        public Builder flowName(Output<String> flowName) {
            $.flowName = flowName;
            return this;
        }

        /**
         * @param flowName The name of the flow.
         * 
         * @return builder
         * 
         */
        public Builder flowName(String flowName) {
            return flowName(Output.of(flowName));
        }

        /**
         * @param input The Input information for this execution.
         * 
         * @return builder
         * 
         */
        public Builder input(@Nullable Output<String> input) {
            $.input = input;
            return this;
        }

        /**
         * @param input The Input information for this execution.
         * 
         * @return builder
         * 
         */
        public Builder input(String input) {
            return input(Output.of(input));
        }

        /**
         * @param status The status of the resource. Valid values: `Stopped`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `Stopped`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ExecutionArgs build() {
            if ($.executionName == null) {
                throw new MissingRequiredPropertyException("ExecutionArgs", "executionName");
            }
            if ($.flowName == null) {
                throw new MissingRequiredPropertyException("ExecutionArgs", "flowName");
            }
            return $;
        }
    }

}
