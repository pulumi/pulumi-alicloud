// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAclsAclRelatedListener {
    private String aclType;
    private Integer frontendPort;
    private String loadBalancerId;
    private String protocol;

    private GetAclsAclRelatedListener() {}
    public String aclType() {
        return this.aclType;
    }
    public Integer frontendPort() {
        return this.frontendPort;
    }
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAclsAclRelatedListener defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aclType;
        private Integer frontendPort;
        private String loadBalancerId;
        private String protocol;
        public Builder() {}
        public Builder(GetAclsAclRelatedListener defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aclType = defaults.aclType;
    	      this.frontendPort = defaults.frontendPort;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder aclType(String aclType) {
            if (aclType == null) {
              throw new MissingRequiredPropertyException("GetAclsAclRelatedListener", "aclType");
            }
            this.aclType = aclType;
            return this;
        }
        @CustomType.Setter
        public Builder frontendPort(Integer frontendPort) {
            if (frontendPort == null) {
              throw new MissingRequiredPropertyException("GetAclsAclRelatedListener", "frontendPort");
            }
            this.frontendPort = frontendPort;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetAclsAclRelatedListener", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetAclsAclRelatedListener", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetAclsAclRelatedListener build() {
            final var _resultValue = new GetAclsAclRelatedListener();
            _resultValue.aclType = aclType;
            _resultValue.frontendPort = frontendPort;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
