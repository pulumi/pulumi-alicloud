// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cr.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetChartRepositoriesRepository {
    /**
     * @return The first ID of the resource.
     * 
     */
    private String chartRepositoryId;
    /**
     * @return The creation time of the resource.
     * 
     */
    private String createTime;
    /**
     * @return The ID of the Chart Repository.
     * 
     */
    private String id;
    /**
     * @return The ID of the Container Registry instance.
     * 
     */
    private String instanceId;
    /**
     * @return The name of the repository.
     * 
     */
    private String repoName;
    /**
     * @return The namespace to which the repository belongs.
     * 
     */
    private String repoNamespaceName;
    /**
     * @return The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
     * 
     */
    private String repoType;
    /**
     * @return The summary about the repository.
     * 
     */
    private String summary;

    private GetChartRepositoriesRepository() {}
    /**
     * @return The first ID of the resource.
     * 
     */
    public String chartRepositoryId() {
        return this.chartRepositoryId;
    }
    /**
     * @return The creation time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the Chart Repository.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the Container Registry instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The name of the repository.
     * 
     */
    public String repoName() {
        return this.repoName;
    }
    /**
     * @return The namespace to which the repository belongs.
     * 
     */
    public String repoNamespaceName() {
        return this.repoNamespaceName;
    }
    /**
     * @return The type of the repository. Valid values: `PUBLIC`,`PRIVATE`.
     * 
     */
    public String repoType() {
        return this.repoType;
    }
    /**
     * @return The summary about the repository.
     * 
     */
    public String summary() {
        return this.summary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetChartRepositoriesRepository defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chartRepositoryId;
        private String createTime;
        private String id;
        private String instanceId;
        private String repoName;
        private String repoNamespaceName;
        private String repoType;
        private String summary;
        public Builder() {}
        public Builder(GetChartRepositoriesRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartRepositoryId = defaults.chartRepositoryId;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.repoName = defaults.repoName;
    	      this.repoNamespaceName = defaults.repoNamespaceName;
    	      this.repoType = defaults.repoType;
    	      this.summary = defaults.summary;
        }

        @CustomType.Setter
        public Builder chartRepositoryId(String chartRepositoryId) {
            this.chartRepositoryId = Objects.requireNonNull(chartRepositoryId);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder repoName(String repoName) {
            this.repoName = Objects.requireNonNull(repoName);
            return this;
        }
        @CustomType.Setter
        public Builder repoNamespaceName(String repoNamespaceName) {
            this.repoNamespaceName = Objects.requireNonNull(repoNamespaceName);
            return this;
        }
        @CustomType.Setter
        public Builder repoType(String repoType) {
            this.repoType = Objects.requireNonNull(repoType);
            return this;
        }
        @CustomType.Setter
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }
        public GetChartRepositoriesRepository build() {
            final var o = new GetChartRepositoriesRepository();
            o.chartRepositoryId = chartRepositoryId;
            o.createTime = createTime;
            o.id = id;
            o.instanceId = instanceId;
            o.repoName = repoName;
            o.repoNamespaceName = repoNamespaceName;
            o.repoType = repoType;
            o.summary = summary;
            return o;
        }
    }
}
