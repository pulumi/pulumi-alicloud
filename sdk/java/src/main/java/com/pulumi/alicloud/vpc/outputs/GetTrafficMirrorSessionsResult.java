// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetTrafficMirrorSessionsSession;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTrafficMirrorSessionsResult {
    private @Nullable Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable String nameRegex;
    private List<String> names;
    private @Nullable String outputFile;
    private @Nullable Integer priority;
    private List<GetTrafficMirrorSessionsSession> sessions;
    private @Nullable String status;
    private @Nullable String trafficMirrorFilterId;
    private @Nullable String trafficMirrorSessionName;
    private @Nullable String trafficMirrorSourceId;
    private @Nullable String trafficMirrorTargetId;

    private GetTrafficMirrorSessionsResult() {}
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    public List<GetTrafficMirrorSessionsSession> sessions() {
        return this.sessions;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> trafficMirrorFilterId() {
        return Optional.ofNullable(this.trafficMirrorFilterId);
    }
    public Optional<String> trafficMirrorSessionName() {
        return Optional.ofNullable(this.trafficMirrorSessionName);
    }
    public Optional<String> trafficMirrorSourceId() {
        return Optional.ofNullable(this.trafficMirrorSourceId);
    }
    public Optional<String> trafficMirrorTargetId() {
        return Optional.ofNullable(this.trafficMirrorTargetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficMirrorSessionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable Integer priority;
        private List<GetTrafficMirrorSessionsSession> sessions;
        private @Nullable String status;
        private @Nullable String trafficMirrorFilterId;
        private @Nullable String trafficMirrorSessionName;
        private @Nullable String trafficMirrorSourceId;
        private @Nullable String trafficMirrorTargetId;
        public Builder() {}
        public Builder(GetTrafficMirrorSessionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.priority = defaults.priority;
    	      this.sessions = defaults.sessions;
    	      this.status = defaults.status;
    	      this.trafficMirrorFilterId = defaults.trafficMirrorFilterId;
    	      this.trafficMirrorSessionName = defaults.trafficMirrorSessionName;
    	      this.trafficMirrorSourceId = defaults.trafficMirrorSourceId;
    	      this.trafficMirrorTargetId = defaults.trafficMirrorTargetId;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder sessions(List<GetTrafficMirrorSessionsSession> sessions) {
            this.sessions = Objects.requireNonNull(sessions);
            return this;
        }
        public Builder sessions(GetTrafficMirrorSessionsSession... sessions) {
            return sessions(List.of(sessions));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorFilterId(@Nullable String trafficMirrorFilterId) {
            this.trafficMirrorFilterId = trafficMirrorFilterId;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorSessionName(@Nullable String trafficMirrorSessionName) {
            this.trafficMirrorSessionName = trafficMirrorSessionName;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorSourceId(@Nullable String trafficMirrorSourceId) {
            this.trafficMirrorSourceId = trafficMirrorSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorTargetId(@Nullable String trafficMirrorTargetId) {
            this.trafficMirrorTargetId = trafficMirrorTargetId;
            return this;
        }
        public GetTrafficMirrorSessionsResult build() {
            final var o = new GetTrafficMirrorSessionsResult();
            o.enabled = enabled;
            o.id = id;
            o.ids = ids;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.priority = priority;
            o.sessions = sessions;
            o.status = status;
            o.trafficMirrorFilterId = trafficMirrorFilterId;
            o.trafficMirrorSessionName = trafficMirrorSessionName;
            o.trafficMirrorSourceId = trafficMirrorSourceId;
            o.trafficMirrorTargetId = trafficMirrorTargetId;
            return o;
        }
    }
}
