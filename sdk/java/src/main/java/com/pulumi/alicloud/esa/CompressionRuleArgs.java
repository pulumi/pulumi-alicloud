// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CompressionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CompressionRuleArgs Empty = new CompressionRuleArgs();

    /**
     * Brotli compression. Value range:
     * 
     */
    @Import(name="brotli")
    private @Nullable Output<String> brotli;

    /**
     * @return Brotli compression. Value range:
     * 
     */
    public Optional<Output<String>> brotli() {
        return Optional.ofNullable(this.brotli);
    }

    /**
     * Gzip compression. Value range:
     * 
     */
    @Import(name="gzip")
    private @Nullable Output<String> gzip;

    /**
     * @return Gzip compression. Value range:
     * 
     */
    public Optional<Output<String>> gzip() {
        return Optional.ofNullable(this.gzip);
    }

    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    @Import(name="rule")
    private @Nullable Output<String> rule;

    /**
     * @return Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * 
     */
    @Import(name="ruleEnable")
    private @Nullable Output<String> ruleEnable;

    /**
     * @return Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * 
     */
    public Optional<Output<String>> ruleEnable() {
        return Optional.ofNullable(this.ruleEnable);
    }

    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    @Import(name="siteId", required=true)
    private Output<Integer> siteId;

    /**
     * @return The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }

    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    /**
     * Zstd compression. Value range:
     * 
     */
    @Import(name="zstd")
    private @Nullable Output<String> zstd;

    /**
     * @return Zstd compression. Value range:
     * 
     */
    public Optional<Output<String>> zstd() {
        return Optional.ofNullable(this.zstd);
    }

    private CompressionRuleArgs() {}

    private CompressionRuleArgs(CompressionRuleArgs $) {
        this.brotli = $.brotli;
        this.gzip = $.gzip;
        this.rule = $.rule;
        this.ruleEnable = $.ruleEnable;
        this.ruleName = $.ruleName;
        this.siteId = $.siteId;
        this.siteVersion = $.siteVersion;
        this.zstd = $.zstd;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompressionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompressionRuleArgs $;

        public Builder() {
            $ = new CompressionRuleArgs();
        }

        public Builder(CompressionRuleArgs defaults) {
            $ = new CompressionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param brotli Brotli compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder brotli(@Nullable Output<String> brotli) {
            $.brotli = brotli;
            return this;
        }

        /**
         * @param brotli Brotli compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder brotli(String brotli) {
            return brotli(Output.of(brotli));
        }

        /**
         * @param gzip Gzip compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder gzip(@Nullable Output<String> gzip) {
            $.gzip = gzip;
            return this;
        }

        /**
         * @param gzip Gzip compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder gzip(String gzip) {
            return gzip(Output.of(gzip));
        }

        /**
         * @param rule Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
         * - Match all incoming requests: value set to true
         * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
         * - Match all incoming requests: value set to true
         * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param ruleEnable Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(@Nullable Output<String> ruleEnable) {
            $.ruleEnable = ruleEnable;
            return this;
        }

        /**
         * @param ruleEnable Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(String ruleEnable) {
            return ruleEnable(Output.of(ruleEnable));
        }

        /**
         * @param ruleName Rule name. When adding global configuration, this parameter does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Rule name. When adding global configuration, this parameter does not need to be set.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteVersion The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        /**
         * @param zstd Zstd compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder zstd(@Nullable Output<String> zstd) {
            $.zstd = zstd;
            return this;
        }

        /**
         * @param zstd Zstd compression. Value range:
         * 
         * @return builder
         * 
         */
        public Builder zstd(String zstd) {
            return zstd(Output.of(zstd));
        }

        public CompressionRuleArgs build() {
            if ($.siteId == null) {
                throw new MissingRequiredPropertyException("CompressionRuleArgs", "siteId");
            }
            return $;
        }
    }

}
