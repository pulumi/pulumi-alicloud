// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.ecs.inputs.LaunchTemplateDataDiskArgs;
import com.pulumi.alicloud.ecs.inputs.LaunchTemplateNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.LaunchTemplateSystemDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LaunchTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchTemplateArgs Empty = new LaunchTemplateArgs();

    /**
     * Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
     * 
     */
    @Import(name="autoReleaseTime")
    private @Nullable Output<String> autoReleaseTime;

    /**
     * @return Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
     * 
     */
    public Optional<Output<String>> autoReleaseTime() {
        return Optional.ofNullable(this.autoReleaseTime);
    }

    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * The list of data disks created with instance.
     * 
     */
    @Import(name="dataDisks")
    private @Nullable Output<List<LaunchTemplateDataDiskArgs>> dataDisks;

    /**
     * @return The list of data disks created with instance.
     * 
     */
    public Optional<Output<List<LaunchTemplateDataDiskArgs>>> dataDisks() {
        return Optional.ofNullable(this.dataDisks);
    }

    @Import(name="deploymentSetId")
    private @Nullable Output<String> deploymentSetId;

    public Optional<Output<String>> deploymentSetId() {
        return Optional.ofNullable(this.deploymentSetId);
    }

    /**
     * Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enableVmOsConfig")
    private @Nullable Output<Boolean> enableVmOsConfig;

    public Optional<Output<Boolean>> enableVmOsConfig() {
        return Optional.ofNullable(this.enableVmOsConfig);
    }

    /**
     * Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Image ID.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return Image ID.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    @Import(name="imageOwnerAlias")
    private @Nullable Output<String> imageOwnerAlias;

    public Optional<Output<String>> imageOwnerAlias() {
        return Optional.ofNullable(this.imageOwnerAlias);
    }

    /**
     * Billing methods. Optional values:
     * - PrePaid: Monthly, or annual subscription. Make sure that your registered credit card is invalid or you have insufficient balance in your PayPal account. Otherwise, InvalidPayMethod error may occur.
     * - PostPaid: Pay-As-You-Go.
     * 
     * Default value: PostPaid.
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return Billing methods. Optional values:
     * - PrePaid: Monthly, or annual subscription. Make sure that your registered credit card is invalid or you have insufficient balance in your PayPal account. Otherwise, InvalidPayMethod error may occur.
     * - PostPaid: Pay-As-You-Go.
     * 
     * Default value: PostPaid.
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * The name of the instance. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of the instance. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Internet bandwidth billing method. Optional values: `PayByTraffic` | `PayByBandwidth`.
     * 
     */
    @Import(name="internetChargeType")
    private @Nullable Output<String> internetChargeType;

    /**
     * @return Internet bandwidth billing method. Optional values: `PayByTraffic` | `PayByBandwidth`.
     * 
     */
    public Optional<Output<String>> internetChargeType() {
        return Optional.ofNullable(this.internetChargeType);
    }

    /**
     * The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
     * 
     */
    @Import(name="internetMaxBandwidthIn")
    private @Nullable Output<Integer> internetMaxBandwidthIn;

    /**
     * @return The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthIn() {
        return Optional.ofNullable(this.internetMaxBandwidthIn);
    }

    /**
     * Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
     * 
     */
    @Import(name="internetMaxBandwidthOut")
    private @Nullable Output<Integer> internetMaxBandwidthOut;

    /**
     * @return Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthOut() {
        return Optional.ofNullable(this.internetMaxBandwidthOut);
    }

    /**
     * Whether it is an I/O-optimized instance or not. Optional values:
     * - none
     * - optimized
     * 
     */
    @Import(name="ioOptimized")
    private @Nullable Output<String> ioOptimized;

    /**
     * @return Whether it is an I/O-optimized instance or not. Optional values:
     * - none
     * - optimized
     * 
     */
    public Optional<Output<String>> ioOptimized() {
        return Optional.ofNullable(this.ioOptimized);
    }

    /**
     * The name of the key pair.
     * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
     * - The password logon method for Linux instances is set to forbidden upon initialization.
     * 
     */
    @Import(name="keyPairName")
    private @Nullable Output<String> keyPairName;

    /**
     * @return The name of the key pair.
     * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
     * - The password logon method for Linux instances is set to forbidden upon initialization.
     * 
     */
    public Optional<Output<String>> keyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }

    @Import(name="launchTemplateName")
    private @Nullable Output<String> launchTemplateName;

    public Optional<Output<String>> launchTemplateName() {
        return Optional.ofNullable(this.launchTemplateName);
    }

    /**
     * Instance launch template name. Can contain [2, 128] characters in length. It must start with an English letter or Chinese, can contain numbers, periods (.), colons (:), underscores (_), and hyphens (-). It cannot start with &#34;http://&#34; or &#34;https://&#34;.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Instance launch template name. Can contain [2, 128] characters in length. It must start with an English letter or Chinese, can contain numbers, periods (.), colons (:), underscores (_), and hyphens (-). It cannot start with &#34;http://&#34; or &#34;https://&#34;.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of network interfaces created with instance.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<LaunchTemplateNetworkInterfacesArgs> networkInterfaces;

    /**
     * @return The list of network interfaces created with instance.
     * 
     */
    public Optional<Output<LaunchTemplateNetworkInterfacesArgs>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * Network type of the instance. Value options: `classic` | `vpc`.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    /**
     * @return Network type of the instance. Value options: `classic` | `vpc`.
     * 
     */
    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    @Import(name="passwordInherit")
    private @Nullable Output<Boolean> passwordInherit;

    public Optional<Output<Boolean>> passwordInherit() {
        return Optional.ofNullable(this.passwordInherit);
    }

    @Import(name="period")
    private @Nullable Output<Integer> period;

    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    @Import(name="periodUnit")
    private @Nullable Output<String> periodUnit;

    public Optional<Output<String>> periodUnit() {
        return Optional.ofNullable(this.periodUnit);
    }

    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
     * 
     */
    @Import(name="ramRoleName")
    private @Nullable Output<String> ramRoleName;

    /**
     * @return The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
     * 
     */
    public Optional<Output<String>> ramRoleName() {
        return Optional.ofNullable(this.ramRoleName);
    }

    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Whether or not to activate the security enhancement feature and install network security software free of charge. Optional values: Active | Deactive.
     * 
     */
    @Import(name="securityEnhancementStrategy")
    private @Nullable Output<String> securityEnhancementStrategy;

    /**
     * @return Whether or not to activate the security enhancement feature and install network security software free of charge. Optional values: Active | Deactive.
     * 
     */
    public Optional<Output<String>> securityEnhancementStrategy() {
        return Optional.ofNullable(this.securityEnhancementStrategy);
    }

    /**
     * The security group ID.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return The security group ID.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="spotDuration")
    private @Nullable Output<String> spotDuration;

    public Optional<Output<String>> spotDuration() {
        return Optional.ofNullable(this.spotDuration);
    }

    /**
     * Sets the maximum hourly instance price. Supports up to three decimal places.
     * 
     */
    @Import(name="spotPriceLimit")
    private @Nullable Output<Double> spotPriceLimit;

    /**
     * @return Sets the maximum hourly instance price. Supports up to three decimal places.
     * 
     */
    public Optional<Output<Double>> spotPriceLimit() {
        return Optional.ofNullable(this.spotPriceLimit);
    }

    /**
     * The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Value range:
     * - NoSpot: Normal Pay-As-You-Go instance.
     * - SpotWithPriceLimit: Sets the maximum price for a spot instance.
     * - SpotAsPriceGo: The system automatically calculates the price. The maximum value is the Pay-As-You-Go price.
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Value range:
     * - NoSpot: Normal Pay-As-You-Go instance.
     * - SpotWithPriceLimit: Sets the maximum price for a spot instance.
     * - SpotAsPriceGo: The system automatically calculates the price. The maximum value is the Pay-As-You-Go price.
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    @Import(name="systemDisk")
    private @Nullable Output<LaunchTemplateSystemDiskArgs> systemDisk;

    public Optional<Output<LaunchTemplateSystemDiskArgs>> systemDisk() {
        return Optional.ofNullable(this.systemDisk);
    }

    /**
     * The category of the system disk. System disk type. Optional values:
     * - cloud: Basic cloud disk.
     * - cloud_efficiency: Ultra cloud disk.
     * - cloud_ssd: SSD cloud Disks.
     * - ephemeral_ssd: local SSD Disks
     * - cloud_essd: ESSD cloud Disks.
     * 
     * @deprecated
     * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskCategory")
    private @Nullable Output<String> systemDiskCategory;

    /**
     * @return The category of the system disk. System disk type. Optional values:
     * - cloud: Basic cloud disk.
     * - cloud_efficiency: Ultra cloud disk.
     * - cloud_ssd: SSD cloud Disks.
     * - ephemeral_ssd: local SSD Disks
     * - cloud_essd: ESSD cloud Disks.
     * 
     * @deprecated
     * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskCategory() {
        return Optional.ofNullable(this.systemDiskCategory);
    }

    /**
     * System disk description. It cannot begin with http:// or https://.
     * 
     * @deprecated
     * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskDescription")
    private @Nullable Output<String> systemDiskDescription;

    /**
     * @return System disk description. It cannot begin with http:// or https://.
     * 
     * @deprecated
     * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskDescription() {
        return Optional.ofNullable(this.systemDiskDescription);
    }

    /**
     * System disk name. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     * @deprecated
     * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskName")
    private @Nullable Output<String> systemDiskName;

    /**
     * @return System disk name. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     * @deprecated
     * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskName() {
        return Optional.ofNullable(this.systemDiskName);
    }

    /**
     * Size of the system disk, measured in GB. Value range: [20, 500].
     * 
     * @deprecated
     * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskSize")
    private @Nullable Output<Integer> systemDiskSize;

    /**
     * @return Size of the system disk, measured in GB. Value range: [20, 500].
     * 
     * @deprecated
     * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<Integer>> systemDiskSize() {
        return Optional.ofNullable(this.systemDiskSize);
    }

    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="templateResourceGroupId")
    private @Nullable Output<String> templateResourceGroupId;

    public Optional<Output<String>> templateResourceGroupId() {
        return Optional.ofNullable(this.templateResourceGroupId);
    }

    @Import(name="templateTags")
    private @Nullable Output<Map<String,Object>> templateTags;

    public Optional<Output<Map<String,Object>>> templateTags() {
        return Optional.ofNullable(this.templateTags);
    }

    @Import(name="userData")
    private @Nullable Output<String> userData;

    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * User data of the instance, which is Base64-encoded. Size of the raw data cannot exceed 16 KB.
     * 
     * @deprecated
     * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
     * 
     */
    @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
    @Import(name="userdata")
    private @Nullable Output<String> userdata;

    /**
     * @return User data of the instance, which is Base64-encoded. Size of the raw data cannot exceed 16 KB.
     * 
     * @deprecated
     * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
     * 
     */
    @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
    public Optional<Output<String>> userdata() {
        return Optional.ofNullable(this.userdata);
    }

    @Import(name="versionDescription")
    private @Nullable Output<String> versionDescription;

    public Optional<Output<String>> versionDescription() {
        return Optional.ofNullable(this.versionDescription);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * When creating a VPC-Connected instance, you must specify its VSwitch ID.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return When creating a VPC-Connected instance, you must specify its VSwitch ID.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The zone ID of the instance.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID of the instance.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private LaunchTemplateArgs() {}

    private LaunchTemplateArgs(LaunchTemplateArgs $) {
        this.autoReleaseTime = $.autoReleaseTime;
        this.autoRenew = $.autoRenew;
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.dataDisks = $.dataDisks;
        this.deploymentSetId = $.deploymentSetId;
        this.description = $.description;
        this.enableVmOsConfig = $.enableVmOsConfig;
        this.hostName = $.hostName;
        this.imageId = $.imageId;
        this.imageOwnerAlias = $.imageOwnerAlias;
        this.instanceChargeType = $.instanceChargeType;
        this.instanceName = $.instanceName;
        this.instanceType = $.instanceType;
        this.internetChargeType = $.internetChargeType;
        this.internetMaxBandwidthIn = $.internetMaxBandwidthIn;
        this.internetMaxBandwidthOut = $.internetMaxBandwidthOut;
        this.ioOptimized = $.ioOptimized;
        this.keyPairName = $.keyPairName;
        this.launchTemplateName = $.launchTemplateName;
        this.name = $.name;
        this.networkInterfaces = $.networkInterfaces;
        this.networkType = $.networkType;
        this.passwordInherit = $.passwordInherit;
        this.period = $.period;
        this.periodUnit = $.periodUnit;
        this.privateIpAddress = $.privateIpAddress;
        this.ramRoleName = $.ramRoleName;
        this.resourceGroupId = $.resourceGroupId;
        this.securityEnhancementStrategy = $.securityEnhancementStrategy;
        this.securityGroupId = $.securityGroupId;
        this.securityGroupIds = $.securityGroupIds;
        this.spotDuration = $.spotDuration;
        this.spotPriceLimit = $.spotPriceLimit;
        this.spotStrategy = $.spotStrategy;
        this.systemDisk = $.systemDisk;
        this.systemDiskCategory = $.systemDiskCategory;
        this.systemDiskDescription = $.systemDiskDescription;
        this.systemDiskName = $.systemDiskName;
        this.systemDiskSize = $.systemDiskSize;
        this.tags = $.tags;
        this.templateResourceGroupId = $.templateResourceGroupId;
        this.templateTags = $.templateTags;
        this.userData = $.userData;
        this.userdata = $.userdata;
        this.versionDescription = $.versionDescription;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LaunchTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchTemplateArgs $;

        public Builder() {
            $ = new LaunchTemplateArgs();
        }

        public Builder(LaunchTemplateArgs defaults) {
            $ = new LaunchTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoReleaseTime Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(@Nullable Output<String> autoReleaseTime) {
            $.autoReleaseTime = autoReleaseTime;
            return this;
        }

        /**
         * @param autoReleaseTime Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(String autoReleaseTime) {
            return autoReleaseTime(Output.of(autoReleaseTime));
        }

        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param dataDisks The list of data disks created with instance.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(@Nullable Output<List<LaunchTemplateDataDiskArgs>> dataDisks) {
            $.dataDisks = dataDisks;
            return this;
        }

        /**
         * @param dataDisks The list of data disks created with instance.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(List<LaunchTemplateDataDiskArgs> dataDisks) {
            return dataDisks(Output.of(dataDisks));
        }

        /**
         * @param dataDisks The list of data disks created with instance.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(LaunchTemplateDataDiskArgs... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }

        public Builder deploymentSetId(@Nullable Output<String> deploymentSetId) {
            $.deploymentSetId = deploymentSetId;
            return this;
        }

        public Builder deploymentSetId(String deploymentSetId) {
            return deploymentSetId(Output.of(deploymentSetId));
        }

        /**
         * @param description Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enableVmOsConfig(@Nullable Output<Boolean> enableVmOsConfig) {
            $.enableVmOsConfig = enableVmOsConfig;
            return this;
        }

        public Builder enableVmOsConfig(Boolean enableVmOsConfig) {
            return enableVmOsConfig(Output.of(enableVmOsConfig));
        }

        /**
         * @param hostName Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param imageId Image ID.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId Image ID.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public Builder imageOwnerAlias(@Nullable Output<String> imageOwnerAlias) {
            $.imageOwnerAlias = imageOwnerAlias;
            return this;
        }

        public Builder imageOwnerAlias(String imageOwnerAlias) {
            return imageOwnerAlias(Output.of(imageOwnerAlias));
        }

        /**
         * @param instanceChargeType Billing methods. Optional values:
         * - PrePaid: Monthly, or annual subscription. Make sure that your registered credit card is invalid or you have insufficient balance in your PayPal account. Otherwise, InvalidPayMethod error may occur.
         * - PostPaid: Pay-As-You-Go.
         * 
         * Default value: PostPaid.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType Billing methods. Optional values:
         * - PrePaid: Monthly, or annual subscription. Make sure that your registered credit card is invalid or you have insufficient balance in your PayPal account. Otherwise, InvalidPayMethod error may occur.
         * - PostPaid: Pay-As-You-Go.
         * 
         * Default value: PostPaid.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param instanceName The name of the instance. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of the instance. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceType Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param internetChargeType Internet bandwidth billing method. Optional values: `PayByTraffic` | `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(@Nullable Output<String> internetChargeType) {
            $.internetChargeType = internetChargeType;
            return this;
        }

        /**
         * @param internetChargeType Internet bandwidth billing method. Optional values: `PayByTraffic` | `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(String internetChargeType) {
            return internetChargeType(Output.of(internetChargeType));
        }

        /**
         * @param internetMaxBandwidthIn The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(@Nullable Output<Integer> internetMaxBandwidthIn) {
            $.internetMaxBandwidthIn = internetMaxBandwidthIn;
            return this;
        }

        /**
         * @param internetMaxBandwidthIn The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
            return internetMaxBandwidthIn(Output.of(internetMaxBandwidthIn));
        }

        /**
         * @param internetMaxBandwidthOut Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(@Nullable Output<Integer> internetMaxBandwidthOut) {
            $.internetMaxBandwidthOut = internetMaxBandwidthOut;
            return this;
        }

        /**
         * @param internetMaxBandwidthOut Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
            return internetMaxBandwidthOut(Output.of(internetMaxBandwidthOut));
        }

        /**
         * @param ioOptimized Whether it is an I/O-optimized instance or not. Optional values:
         * - none
         * - optimized
         * 
         * @return builder
         * 
         */
        public Builder ioOptimized(@Nullable Output<String> ioOptimized) {
            $.ioOptimized = ioOptimized;
            return this;
        }

        /**
         * @param ioOptimized Whether it is an I/O-optimized instance or not. Optional values:
         * - none
         * - optimized
         * 
         * @return builder
         * 
         */
        public Builder ioOptimized(String ioOptimized) {
            return ioOptimized(Output.of(ioOptimized));
        }

        /**
         * @param keyPairName The name of the key pair.
         * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
         * - The password logon method for Linux instances is set to forbidden upon initialization.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(@Nullable Output<String> keyPairName) {
            $.keyPairName = keyPairName;
            return this;
        }

        /**
         * @param keyPairName The name of the key pair.
         * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
         * - The password logon method for Linux instances is set to forbidden upon initialization.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(String keyPairName) {
            return keyPairName(Output.of(keyPairName));
        }

        public Builder launchTemplateName(@Nullable Output<String> launchTemplateName) {
            $.launchTemplateName = launchTemplateName;
            return this;
        }

        public Builder launchTemplateName(String launchTemplateName) {
            return launchTemplateName(Output.of(launchTemplateName));
        }

        /**
         * @param name Instance launch template name. Can contain [2, 128] characters in length. It must start with an English letter or Chinese, can contain numbers, periods (.), colons (:), underscores (_), and hyphens (-). It cannot start with &#34;http://&#34; or &#34;https://&#34;.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Instance launch template name. Can contain [2, 128] characters in length. It must start with an English letter or Chinese, can contain numbers, periods (.), colons (:), underscores (_), and hyphens (-). It cannot start with &#34;http://&#34; or &#34;https://&#34;.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkInterfaces The list of network interfaces created with instance.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(@Nullable Output<LaunchTemplateNetworkInterfacesArgs> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        /**
         * @param networkInterfaces The list of network interfaces created with instance.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(LaunchTemplateNetworkInterfacesArgs networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        /**
         * @param networkType Network type of the instance. Value options: `classic` | `vpc`.
         * 
         * @return builder
         * 
         */
        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        /**
         * @param networkType Network type of the instance. Value options: `classic` | `vpc`.
         * 
         * @return builder
         * 
         */
        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        public Builder passwordInherit(@Nullable Output<Boolean> passwordInherit) {
            $.passwordInherit = passwordInherit;
            return this;
        }

        public Builder passwordInherit(Boolean passwordInherit) {
            return passwordInherit(Output.of(passwordInherit));
        }

        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        public Builder periodUnit(@Nullable Output<String> periodUnit) {
            $.periodUnit = periodUnit;
            return this;
        }

        public Builder periodUnit(String periodUnit) {
            return periodUnit(Output.of(periodUnit));
        }

        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param ramRoleName The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(@Nullable Output<String> ramRoleName) {
            $.ramRoleName = ramRoleName;
            return this;
        }

        /**
         * @param ramRoleName The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(String ramRoleName) {
            return ramRoleName(Output.of(ramRoleName));
        }

        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityEnhancementStrategy Whether or not to activate the security enhancement feature and install network security software free of charge. Optional values: Active | Deactive.
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(@Nullable Output<String> securityEnhancementStrategy) {
            $.securityEnhancementStrategy = securityEnhancementStrategy;
            return this;
        }

        /**
         * @param securityEnhancementStrategy Whether or not to activate the security enhancement feature and install network security software free of charge. Optional values: Active | Deactive.
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(String securityEnhancementStrategy) {
            return securityEnhancementStrategy(Output.of(securityEnhancementStrategy));
        }

        /**
         * @param securityGroupId The security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId The security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder spotDuration(@Nullable Output<String> spotDuration) {
            $.spotDuration = spotDuration;
            return this;
        }

        public Builder spotDuration(String spotDuration) {
            return spotDuration(Output.of(spotDuration));
        }

        /**
         * @param spotPriceLimit Sets the maximum hourly instance price. Supports up to three decimal places.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(@Nullable Output<Double> spotPriceLimit) {
            $.spotPriceLimit = spotPriceLimit;
            return this;
        }

        /**
         * @param spotPriceLimit Sets the maximum hourly instance price. Supports up to three decimal places.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(Double spotPriceLimit) {
            return spotPriceLimit(Output.of(spotPriceLimit));
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Value range:
         * - NoSpot: Normal Pay-As-You-Go instance.
         * - SpotWithPriceLimit: Sets the maximum price for a spot instance.
         * - SpotAsPriceGo: The system automatically calculates the price. The maximum value is the Pay-As-You-Go price.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Value range:
         * - NoSpot: Normal Pay-As-You-Go instance.
         * - SpotWithPriceLimit: Sets the maximum price for a spot instance.
         * - SpotAsPriceGo: The system automatically calculates the price. The maximum value is the Pay-As-You-Go price.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        public Builder systemDisk(@Nullable Output<LaunchTemplateSystemDiskArgs> systemDisk) {
            $.systemDisk = systemDisk;
            return this;
        }

        public Builder systemDisk(LaunchTemplateSystemDiskArgs systemDisk) {
            return systemDisk(Output.of(systemDisk));
        }

        /**
         * @param systemDiskCategory The category of the system disk. System disk type. Optional values:
         * - cloud: Basic cloud disk.
         * - cloud_efficiency: Ultra cloud disk.
         * - cloud_ssd: SSD cloud Disks.
         * - ephemeral_ssd: local SSD Disks
         * - cloud_essd: ESSD cloud Disks.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskCategory(@Nullable Output<String> systemDiskCategory) {
            $.systemDiskCategory = systemDiskCategory;
            return this;
        }

        /**
         * @param systemDiskCategory The category of the system disk. System disk type. Optional values:
         * - cloud: Basic cloud disk.
         * - cloud_efficiency: Ultra cloud disk.
         * - cloud_ssd: SSD cloud Disks.
         * - ephemeral_ssd: local SSD Disks
         * - cloud_essd: ESSD cloud Disks.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskCategory(String systemDiskCategory) {
            return systemDiskCategory(Output.of(systemDiskCategory));
        }

        /**
         * @param systemDiskDescription System disk description. It cannot begin with http:// or https://.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskDescription(@Nullable Output<String> systemDiskDescription) {
            $.systemDiskDescription = systemDiskDescription;
            return this;
        }

        /**
         * @param systemDiskDescription System disk description. It cannot begin with http:// or https://.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskDescription(String systemDiskDescription) {
            return systemDiskDescription(Output.of(systemDiskDescription));
        }

        /**
         * @param systemDiskName System disk name. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskName(@Nullable Output<String> systemDiskName) {
            $.systemDiskName = systemDiskName;
            return this;
        }

        /**
         * @param systemDiskName System disk name. The name is a string of 2 to 128 characters. It must begin with an English or a Chinese character. It can contain A-Z, a-z, Chinese characters, numbers, periods (.), colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskName(String systemDiskName) {
            return systemDiskName(Output.of(systemDiskName));
        }

        /**
         * @param systemDiskSize Size of the system disk, measured in GB. Value range: [20, 500].
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskSize(@Nullable Output<Integer> systemDiskSize) {
            $.systemDiskSize = systemDiskSize;
            return this;
        }

        /**
         * @param systemDiskSize Size of the system disk, measured in GB. Value range: [20, 500].
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskSize(Integer systemDiskSize) {
            return systemDiskSize(Output.of(systemDiskSize));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        public Builder templateResourceGroupId(@Nullable Output<String> templateResourceGroupId) {
            $.templateResourceGroupId = templateResourceGroupId;
            return this;
        }

        public Builder templateResourceGroupId(String templateResourceGroupId) {
            return templateResourceGroupId(Output.of(templateResourceGroupId));
        }

        public Builder templateTags(@Nullable Output<Map<String,Object>> templateTags) {
            $.templateTags = templateTags;
            return this;
        }

        public Builder templateTags(Map<String,Object> templateTags) {
            return templateTags(Output.of(templateTags));
        }

        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        /**
         * @param userdata User data of the instance, which is Base64-encoded. Size of the raw data cannot exceed 16 KB.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
         * 
         */
        @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
        public Builder userdata(@Nullable Output<String> userdata) {
            $.userdata = userdata;
            return this;
        }

        /**
         * @param userdata User data of the instance, which is Base64-encoded. Size of the raw data cannot exceed 16 KB.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
         * 
         */
        @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
        public Builder userdata(String userdata) {
            return userdata(Output.of(userdata));
        }

        public Builder versionDescription(@Nullable Output<String> versionDescription) {
            $.versionDescription = versionDescription;
            return this;
        }

        public Builder versionDescription(String versionDescription) {
            return versionDescription(Output.of(versionDescription));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId When creating a VPC-Connected instance, you must specify its VSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId When creating a VPC-Connected instance, you must specify its VSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public LaunchTemplateArgs build() {
            return $;
        }
    }

}
