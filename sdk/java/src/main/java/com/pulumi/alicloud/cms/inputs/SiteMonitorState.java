// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.alicloud.cms.inputs.SiteMonitorCustomScheduleArgs;
import com.pulumi.alicloud.cms.inputs.SiteMonitorIspCityArgs;
import com.pulumi.alicloud.cms.inputs.SiteMonitorOptionJsonArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteMonitorState extends com.pulumi.resources.ResourceArgs {

    public static final SiteMonitorState Empty = new SiteMonitorState();

    /**
     * The URL or IP address monitored by the site monitoring task.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return The URL or IP address monitored by the site monitoring task.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
     * 
     */
    @Import(name="agentGroup")
    private @Nullable Output<String> agentGroup;

    /**
     * @return The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
     * 
     */
    public Optional<Output<String>> agentGroup() {
        return Optional.ofNullable(this.agentGroup);
    }

    /**
     * Field `alertIds` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `alertIds` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `alertIds` has been deprecated from provider version 1.262.0. */
    @Import(name="alertIds")
    private @Nullable Output<List<String>> alertIds;

    /**
     * @return Field `alertIds` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `alertIds` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `alertIds` has been deprecated from provider version 1.262.0. */
    public Optional<Output<List<String>>> alertIds() {
        return Optional.ofNullable(this.alertIds);
    }

    /**
     * (Deprecated since v1.262.0) Field `createTime` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `createTime` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `createTime` has been deprecated from provider version 1.262.0. */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return (Deprecated since v1.262.0) Field `createTime` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `createTime` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `createTime` has been deprecated from provider version 1.262.0. */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `customSchedule` below.
     * 
     */
    @Import(name="customSchedule")
    private @Nullable Output<SiteMonitorCustomScheduleArgs> customSchedule;

    /**
     * @return Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `customSchedule` below.
     * 
     */
    public Optional<Output<SiteMonitorCustomScheduleArgs>> customSchedule() {
        return Optional.ofNullable(this.customSchedule);
    }

    /**
     * The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `interval` can be set to `30`, `60`.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<String> interval;

    /**
     * @return The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `interval` can be set to `30`, `60`.
     * 
     */
    public Optional<Output<String>> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * The detection points in a JSON array. For example, `[{&#34;city&#34;:&#34;546&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;572&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;738&#34;,&#34;isp&#34;:&#34;465&#34;}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `ispCities` below.
     * 
     */
    @Import(name="ispCities")
    private @Nullable Output<List<SiteMonitorIspCityArgs>> ispCities;

    /**
     * @return The detection points in a JSON array. For example, `[{&#34;city&#34;:&#34;546&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;572&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;738&#34;,&#34;isp&#34;:&#34;465&#34;}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `ispCities` below.
     * 
     */
    public Optional<Output<List<SiteMonitorIspCityArgs>>> ispCities() {
        return Optional.ofNullable(this.ispCities);
    }

    /**
     * The extended options of the protocol that is used by the site monitoring task. See `optionJson` below.
     * 
     */
    @Import(name="optionJson")
    private @Nullable Output<SiteMonitorOptionJsonArgs> optionJson;

    /**
     * @return The extended options of the protocol that is used by the site monitoring task. See `optionJson` below.
     * 
     */
    public Optional<Output<SiteMonitorOptionJsonArgs>> optionJson() {
        return Optional.ofNullable(this.optionJson);
    }

    /**
     * Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead.
     * 
     * @deprecated
     * Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead
     * 
     */
    @Deprecated /* Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead */
    @Import(name="optionsJson")
    private @Nullable Output<String> optionsJson;

    /**
     * @return Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead.
     * 
     * @deprecated
     * Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead
     * 
     */
    @Deprecated /* Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead */
    public Optional<Output<String>> optionsJson() {
        return Optional.ofNullable(this.optionsJson);
    }

    /**
     * The status of the site monitoring task. Valid values:
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the site monitoring task. Valid values:
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
     * 
     */
    @Import(name="taskName")
    private @Nullable Output<String> taskName;

    /**
     * @return The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
     * 
     */
    public Optional<Output<String>> taskName() {
        return Optional.ofNullable(this.taskName);
    }

    /**
     * (Deprecated since v1.262.0) Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
     * 
     * @deprecated
     * Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
     * 
     */
    @Deprecated /* Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead. */
    @Import(name="taskState")
    private @Nullable Output<String> taskState;

    /**
     * @return (Deprecated since v1.262.0) Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
     * 
     * @deprecated
     * Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
     * 
     */
    @Deprecated /* Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead. */
    public Optional<Output<String>> taskState() {
        return Optional.ofNullable(this.taskState);
    }

    /**
     * The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
     * 
     */
    @Import(name="taskType")
    private @Nullable Output<String> taskType;

    /**
     * @return The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
     * 
     */
    public Optional<Output<String>> taskType() {
        return Optional.ofNullable(this.taskType);
    }

    /**
     * (Deprecated since v1.262.0) Field `updateTime` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `updateTime` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `updateTime` has been deprecated from provider version 1.262.0. */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return (Deprecated since v1.262.0) Field `updateTime` has been deprecated from provider version 1.262.0.
     * 
     * @deprecated
     * Field `updateTime` has been deprecated from provider version 1.262.0.
     * 
     */
    @Deprecated /* Field `updateTime` has been deprecated from provider version 1.262.0. */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private SiteMonitorState() {}

    private SiteMonitorState(SiteMonitorState $) {
        this.address = $.address;
        this.agentGroup = $.agentGroup;
        this.alertIds = $.alertIds;
        this.createTime = $.createTime;
        this.customSchedule = $.customSchedule;
        this.interval = $.interval;
        this.ispCities = $.ispCities;
        this.optionJson = $.optionJson;
        this.optionsJson = $.optionsJson;
        this.status = $.status;
        this.taskName = $.taskName;
        this.taskState = $.taskState;
        this.taskType = $.taskType;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteMonitorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteMonitorState $;

        public Builder() {
            $ = new SiteMonitorState();
        }

        public Builder(SiteMonitorState defaults) {
            $ = new SiteMonitorState(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The URL or IP address monitored by the site monitoring task.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The URL or IP address monitored by the site monitoring task.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param agentGroup The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
         * 
         * @return builder
         * 
         */
        public Builder agentGroup(@Nullable Output<String> agentGroup) {
            $.agentGroup = agentGroup;
            return this;
        }

        /**
         * @param agentGroup The type of the detection point. Default value: `PC`. Valid values: `PC`, `MOBILE`.
         * 
         * @return builder
         * 
         */
        public Builder agentGroup(String agentGroup) {
            return agentGroup(Output.of(agentGroup));
        }

        /**
         * @param alertIds Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `alertIds` has been deprecated from provider version 1.262.0. */
        public Builder alertIds(@Nullable Output<List<String>> alertIds) {
            $.alertIds = alertIds;
            return this;
        }

        /**
         * @param alertIds Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `alertIds` has been deprecated from provider version 1.262.0. */
        public Builder alertIds(List<String> alertIds) {
            return alertIds(Output.of(alertIds));
        }

        /**
         * @param alertIds Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `alertIds` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `alertIds` has been deprecated from provider version 1.262.0. */
        public Builder alertIds(String... alertIds) {
            return alertIds(List.of(alertIds));
        }

        /**
         * @param createTime (Deprecated since v1.262.0) Field `createTime` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `createTime` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `createTime` has been deprecated from provider version 1.262.0. */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime (Deprecated since v1.262.0) Field `createTime` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `createTime` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `createTime` has been deprecated from provider version 1.262.0. */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param customSchedule Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `customSchedule` below.
         * 
         * @return builder
         * 
         */
        public Builder customSchedule(@Nullable Output<SiteMonitorCustomScheduleArgs> customSchedule) {
            $.customSchedule = customSchedule;
            return this;
        }

        /**
         * @param customSchedule Custom probing period. Only a certain period of time from Monday to Sunday can be selected for detection. See `customSchedule` below.
         * 
         * @return builder
         * 
         */
        public Builder customSchedule(SiteMonitorCustomScheduleArgs customSchedule) {
            return customSchedule(Output.of(customSchedule));
        }

        /**
         * @param interval The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `interval` can be set to `30`, `60`.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<String> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval The monitoring interval of the site monitoring task. Unit: minutes. Valid values: `1`, `5`, `15`, `30` and `60`. Default value: `1`. **NOTE:** From version 1.207.0, `interval` can be set to `30`, `60`.
         * 
         * @return builder
         * 
         */
        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param ispCities The detection points in a JSON array. For example, `[{&#34;city&#34;:&#34;546&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;572&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;738&#34;,&#34;isp&#34;:&#34;465&#34;}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `ispCities` below.
         * 
         * @return builder
         * 
         */
        public Builder ispCities(@Nullable Output<List<SiteMonitorIspCityArgs>> ispCities) {
            $.ispCities = ispCities;
            return this;
        }

        /**
         * @param ispCities The detection points in a JSON array. For example, `[{&#34;city&#34;:&#34;546&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;572&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;738&#34;,&#34;isp&#34;:&#34;465&#34;}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `ispCities` below.
         * 
         * @return builder
         * 
         */
        public Builder ispCities(List<SiteMonitorIspCityArgs> ispCities) {
            return ispCities(Output.of(ispCities));
        }

        /**
         * @param ispCities The detection points in a JSON array. For example, `[{&#34;city&#34;:&#34;546&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;572&#34;,&#34;isp&#34;:&#34;465&#34;},{&#34;city&#34;:&#34;738&#34;,&#34;isp&#34;:&#34;465&#34;}]` indicates the detection points in Beijing, Hangzhou, and Qingdao respectively. You can call the [DescribeSiteMonitorISPCityList](https://www.alibabacloud.com/help/en/doc-detail/115045.htm) operation to query detection point information. If this parameter is not specified, three detection points will be chosen randomly for monitoring. See `ispCities` below.
         * 
         * @return builder
         * 
         */
        public Builder ispCities(SiteMonitorIspCityArgs... ispCities) {
            return ispCities(List.of(ispCities));
        }

        /**
         * @param optionJson The extended options of the protocol that is used by the site monitoring task. See `optionJson` below.
         * 
         * @return builder
         * 
         */
        public Builder optionJson(@Nullable Output<SiteMonitorOptionJsonArgs> optionJson) {
            $.optionJson = optionJson;
            return this;
        }

        /**
         * @param optionJson The extended options of the protocol that is used by the site monitoring task. See `optionJson` below.
         * 
         * @return builder
         * 
         */
        public Builder optionJson(SiteMonitorOptionJsonArgs optionJson) {
            return optionJson(Output.of(optionJson));
        }

        /**
         * @param optionsJson Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead
         * 
         */
        @Deprecated /* Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead */
        public Builder optionsJson(@Nullable Output<String> optionsJson) {
            $.optionsJson = optionsJson;
            return this;
        }

        /**
         * @param optionsJson Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead
         * 
         */
        @Deprecated /* Field `optionsJson` has been deprecated from provider version 1.262.0. New field `optionJson` instead */
        public Builder optionsJson(String optionsJson) {
            return optionsJson(Output.of(optionsJson));
        }

        /**
         * @param status The status of the site monitoring task. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the site monitoring task. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param taskName The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder taskName(@Nullable Output<String> taskName) {
            $.taskName = taskName;
            return this;
        }

        /**
         * @param taskName The name of the site monitoring task. The name must be 4 to 100 characters in length. The name can contain the following types of characters: letters, digits, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder taskName(String taskName) {
            return taskName(Output.of(taskName));
        }

        /**
         * @param taskState (Deprecated since v1.262.0) Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
         * 
         */
        @Deprecated /* Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead. */
        public Builder taskState(@Nullable Output<String> taskState) {
            $.taskState = taskState;
            return this;
        }

        /**
         * @param taskState (Deprecated since v1.262.0) Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead.
         * 
         */
        @Deprecated /* Field `taskState` has been deprecated from provider version 1.262.0. New field `status` instead. */
        public Builder taskState(String taskState) {
            return taskState(Output.of(taskState));
        }

        /**
         * @param taskType The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
         * 
         * @return builder
         * 
         */
        public Builder taskType(@Nullable Output<String> taskType) {
            $.taskType = taskType;
            return this;
        }

        /**
         * @param taskType The protocol of the site monitoring task. Currently, site monitoring supports the following protocols: HTTP, PING, TCP, UDP, DNS, SMTP, POP3, and FTP.
         * 
         * @return builder
         * 
         */
        public Builder taskType(String taskType) {
            return taskType(Output.of(taskType));
        }

        /**
         * @param updateTime (Deprecated since v1.262.0) Field `updateTime` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `updateTime` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `updateTime` has been deprecated from provider version 1.262.0. */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime (Deprecated since v1.262.0) Field `updateTime` has been deprecated from provider version 1.262.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `updateTime` has been deprecated from provider version 1.262.0.
         * 
         */
        @Deprecated /* Field `updateTime` has been deprecated from provider version 1.262.0. */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public SiteMonitorState build() {
            return $;
        }
    }

}
