// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.fc.inputs.FunctionCustomContainerConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionArgs Empty = new FunctionArgs();

    /**
     * The port that the function listen to, only valid for [custom runtime](https://www.alibabacloud.com/help/doc-detail/132044.htm) and [custom container runtime](https://www.alibabacloud.com/help/doc-detail/179368.htm).
     * 
     */
    @Import(name="caPort")
    private @Nullable Output<Integer> caPort;

    /**
     * @return The port that the function listen to, only valid for [custom runtime](https://www.alibabacloud.com/help/doc-detail/132044.htm) and [custom container runtime](https://www.alibabacloud.com/help/doc-detail/179368.htm).
     * 
     */
    public Optional<Output<Integer>> caPort() {
        return Optional.ofNullable(this.caPort);
    }

    /**
     * The checksum (crc64) of the function code.Used to trigger updates.The value can be generated by data source alicloud_file_crc64_checksum.
     * &gt; **NOTE:** For more information, see [Limits](https://www.alibabacloud.com/help/doc-detail/51907.htm).
     * 
     */
    @Import(name="codeChecksum")
    private @Nullable Output<String> codeChecksum;

    /**
     * @return The checksum (crc64) of the function code.Used to trigger updates.The value can be generated by data source alicloud_file_crc64_checksum.
     * &gt; **NOTE:** For more information, see [Limits](https://www.alibabacloud.com/help/doc-detail/51907.htm).
     * 
     */
    public Optional<Output<String>> codeChecksum() {
        return Optional.ofNullable(this.codeChecksum);
    }

    /**
     * The configuration for custom container runtime.See `custom_container_config` below.
     * 
     */
    @Import(name="customContainerConfig")
    private @Nullable Output<FunctionCustomContainerConfigArgs> customContainerConfig;

    /**
     * @return The configuration for custom container runtime.See `custom_container_config` below.
     * 
     */
    public Optional<Output<FunctionCustomContainerConfigArgs>> customContainerConfig() {
        return Optional.ofNullable(this.customContainerConfig);
    }

    /**
     * The Function Compute function description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Function Compute function description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A map that defines environment variables for the function.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,Object>> environmentVariables;

    /**
     * @return A map that defines environment variables for the function.
     * 
     */
    public Optional<Output<Map<String,Object>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * The path to the function&#39;s deployment package within the local filesystem. It is conflict with the `oss_`-prefixed options.
     * 
     */
    @Import(name="filename")
    private @Nullable Output<String> filename;

    /**
     * @return The path to the function&#39;s deployment package within the local filesystem. It is conflict with the `oss_`-prefixed options.
     * 
     */
    public Optional<Output<String>> filename() {
        return Optional.ofNullable(this.filename);
    }

    /**
     * The function [entry point](https://www.alibabacloud.com/help/doc-detail/157704.htm) in your code.
     * 
     */
    @Import(name="handler", required=true)
    private Output<String> handler;

    /**
     * @return The function [entry point](https://www.alibabacloud.com/help/doc-detail/157704.htm) in your code.
     * 
     */
    public Output<String> handler() {
        return this.handler;
    }

    /**
     * The maximum length of time, in seconds, that the function&#39;s initialization should be run for.
     * 
     */
    @Import(name="initializationTimeout")
    private @Nullable Output<Integer> initializationTimeout;

    /**
     * @return The maximum length of time, in seconds, that the function&#39;s initialization should be run for.
     * 
     */
    public Optional<Output<Integer>> initializationTimeout() {
        return Optional.ofNullable(this.initializationTimeout);
    }

    /**
     * The entry point of the function&#39;s [initialization](https://www.alibabacloud.com/help/doc-detail/157704.htm).
     * 
     */
    @Import(name="initializer")
    private @Nullable Output<String> initializer;

    /**
     * @return The entry point of the function&#39;s [initialization](https://www.alibabacloud.com/help/doc-detail/157704.htm).
     * 
     */
    public Optional<Output<String>> initializer() {
        return Optional.ofNullable(this.initializer);
    }

    /**
     * The maximum number of requests can be executed concurrently within the single function instance.
     * 
     */
    @Import(name="instanceConcurrency")
    private @Nullable Output<Integer> instanceConcurrency;

    /**
     * @return The maximum number of requests can be executed concurrently within the single function instance.
     * 
     */
    public Optional<Output<Integer>> instanceConcurrency() {
        return Optional.ofNullable(this.instanceConcurrency);
    }

    /**
     * The instance type of the function.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The instance type of the function.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The configuration for layers.
     * 
     */
    @Import(name="layers")
    private @Nullable Output<List<String>> layers;

    /**
     * @return The configuration for layers.
     * 
     */
    public Optional<Output<List<String>>> layers() {
        return Optional.ofNullable(this.layers);
    }

    /**
     * Amount of memory in MB your function can use at runtime. Defaults to `128`. Limits to [128, 32768].
     * 
     */
    @Import(name="memorySize")
    private @Nullable Output<Integer> memorySize;

    /**
     * @return Amount of memory in MB your function can use at runtime. Defaults to `128`. Limits to [128, 32768].
     * 
     */
    public Optional<Output<Integer>> memorySize() {
        return Optional.ofNullable(this.memorySize);
    }

    /**
     * The Function Compute function name. It is the only in one service and is conflict with &#34;name_prefix&#34;.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Function Compute function name. It is the only in one service and is conflict with &#34;name_prefix&#34;.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Setting a prefix to get a only function name. It is conflict with &#34;name&#34;.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return Setting a prefix to get a only function name. It is conflict with &#34;name&#34;.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The OSS bucket location containing the function&#39;s deployment package. Conflicts with `filename`. This bucket must reside in the same Alibaba Cloud region where you are creating the function.
     * 
     */
    @Import(name="ossBucket")
    private @Nullable Output<String> ossBucket;

    /**
     * @return The OSS bucket location containing the function&#39;s deployment package. Conflicts with `filename`. This bucket must reside in the same Alibaba Cloud region where you are creating the function.
     * 
     */
    public Optional<Output<String>> ossBucket() {
        return Optional.ofNullable(this.ossBucket);
    }

    /**
     * The OSS key of an object containing the function&#39;s deployment package. Conflicts with `filename`.
     * 
     */
    @Import(name="ossKey")
    private @Nullable Output<String> ossKey;

    /**
     * @return The OSS key of an object containing the function&#39;s deployment package. Conflicts with `filename`.
     * 
     */
    public Optional<Output<String>> ossKey() {
        return Optional.ofNullable(this.ossKey);
    }

    /**
     * See [Runtimes][https://www.alibabacloud.com/help/zh/function-compute/latest/manage-functions#multiTask3514] for valid values.
     * 
     */
    @Import(name="runtime", required=true)
    private Output<String> runtime;

    /**
     * @return See [Runtimes][https://www.alibabacloud.com/help/zh/function-compute/latest/manage-functions#multiTask3514] for valid values.
     * 
     */
    public Output<String> runtime() {
        return this.runtime;
    }

    /**
     * The Function Compute service name.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The Function Compute service name.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    /**
     * The amount of time your function has to run in seconds.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return The amount of time your function has to run in seconds.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private FunctionArgs() {}

    private FunctionArgs(FunctionArgs $) {
        this.caPort = $.caPort;
        this.codeChecksum = $.codeChecksum;
        this.customContainerConfig = $.customContainerConfig;
        this.description = $.description;
        this.environmentVariables = $.environmentVariables;
        this.filename = $.filename;
        this.handler = $.handler;
        this.initializationTimeout = $.initializationTimeout;
        this.initializer = $.initializer;
        this.instanceConcurrency = $.instanceConcurrency;
        this.instanceType = $.instanceType;
        this.layers = $.layers;
        this.memorySize = $.memorySize;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.ossBucket = $.ossBucket;
        this.ossKey = $.ossKey;
        this.runtime = $.runtime;
        this.service = $.service;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionArgs $;

        public Builder() {
            $ = new FunctionArgs();
        }

        public Builder(FunctionArgs defaults) {
            $ = new FunctionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caPort The port that the function listen to, only valid for [custom runtime](https://www.alibabacloud.com/help/doc-detail/132044.htm) and [custom container runtime](https://www.alibabacloud.com/help/doc-detail/179368.htm).
         * 
         * @return builder
         * 
         */
        public Builder caPort(@Nullable Output<Integer> caPort) {
            $.caPort = caPort;
            return this;
        }

        /**
         * @param caPort The port that the function listen to, only valid for [custom runtime](https://www.alibabacloud.com/help/doc-detail/132044.htm) and [custom container runtime](https://www.alibabacloud.com/help/doc-detail/179368.htm).
         * 
         * @return builder
         * 
         */
        public Builder caPort(Integer caPort) {
            return caPort(Output.of(caPort));
        }

        /**
         * @param codeChecksum The checksum (crc64) of the function code.Used to trigger updates.The value can be generated by data source alicloud_file_crc64_checksum.
         * &gt; **NOTE:** For more information, see [Limits](https://www.alibabacloud.com/help/doc-detail/51907.htm).
         * 
         * @return builder
         * 
         */
        public Builder codeChecksum(@Nullable Output<String> codeChecksum) {
            $.codeChecksum = codeChecksum;
            return this;
        }

        /**
         * @param codeChecksum The checksum (crc64) of the function code.Used to trigger updates.The value can be generated by data source alicloud_file_crc64_checksum.
         * &gt; **NOTE:** For more information, see [Limits](https://www.alibabacloud.com/help/doc-detail/51907.htm).
         * 
         * @return builder
         * 
         */
        public Builder codeChecksum(String codeChecksum) {
            return codeChecksum(Output.of(codeChecksum));
        }

        /**
         * @param customContainerConfig The configuration for custom container runtime.See `custom_container_config` below.
         * 
         * @return builder
         * 
         */
        public Builder customContainerConfig(@Nullable Output<FunctionCustomContainerConfigArgs> customContainerConfig) {
            $.customContainerConfig = customContainerConfig;
            return this;
        }

        /**
         * @param customContainerConfig The configuration for custom container runtime.See `custom_container_config` below.
         * 
         * @return builder
         * 
         */
        public Builder customContainerConfig(FunctionCustomContainerConfigArgs customContainerConfig) {
            return customContainerConfig(Output.of(customContainerConfig));
        }

        /**
         * @param description The Function Compute function description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Function Compute function description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param environmentVariables A map that defines environment variables for the function.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,Object>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables A map that defines environment variables for the function.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,Object> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param filename The path to the function&#39;s deployment package within the local filesystem. It is conflict with the `oss_`-prefixed options.
         * 
         * @return builder
         * 
         */
        public Builder filename(@Nullable Output<String> filename) {
            $.filename = filename;
            return this;
        }

        /**
         * @param filename The path to the function&#39;s deployment package within the local filesystem. It is conflict with the `oss_`-prefixed options.
         * 
         * @return builder
         * 
         */
        public Builder filename(String filename) {
            return filename(Output.of(filename));
        }

        /**
         * @param handler The function [entry point](https://www.alibabacloud.com/help/doc-detail/157704.htm) in your code.
         * 
         * @return builder
         * 
         */
        public Builder handler(Output<String> handler) {
            $.handler = handler;
            return this;
        }

        /**
         * @param handler The function [entry point](https://www.alibabacloud.com/help/doc-detail/157704.htm) in your code.
         * 
         * @return builder
         * 
         */
        public Builder handler(String handler) {
            return handler(Output.of(handler));
        }

        /**
         * @param initializationTimeout The maximum length of time, in seconds, that the function&#39;s initialization should be run for.
         * 
         * @return builder
         * 
         */
        public Builder initializationTimeout(@Nullable Output<Integer> initializationTimeout) {
            $.initializationTimeout = initializationTimeout;
            return this;
        }

        /**
         * @param initializationTimeout The maximum length of time, in seconds, that the function&#39;s initialization should be run for.
         * 
         * @return builder
         * 
         */
        public Builder initializationTimeout(Integer initializationTimeout) {
            return initializationTimeout(Output.of(initializationTimeout));
        }

        /**
         * @param initializer The entry point of the function&#39;s [initialization](https://www.alibabacloud.com/help/doc-detail/157704.htm).
         * 
         * @return builder
         * 
         */
        public Builder initializer(@Nullable Output<String> initializer) {
            $.initializer = initializer;
            return this;
        }

        /**
         * @param initializer The entry point of the function&#39;s [initialization](https://www.alibabacloud.com/help/doc-detail/157704.htm).
         * 
         * @return builder
         * 
         */
        public Builder initializer(String initializer) {
            return initializer(Output.of(initializer));
        }

        /**
         * @param instanceConcurrency The maximum number of requests can be executed concurrently within the single function instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceConcurrency(@Nullable Output<Integer> instanceConcurrency) {
            $.instanceConcurrency = instanceConcurrency;
            return this;
        }

        /**
         * @param instanceConcurrency The maximum number of requests can be executed concurrently within the single function instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceConcurrency(Integer instanceConcurrency) {
            return instanceConcurrency(Output.of(instanceConcurrency));
        }

        /**
         * @param instanceType The instance type of the function.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The instance type of the function.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param layers The configuration for layers.
         * 
         * @return builder
         * 
         */
        public Builder layers(@Nullable Output<List<String>> layers) {
            $.layers = layers;
            return this;
        }

        /**
         * @param layers The configuration for layers.
         * 
         * @return builder
         * 
         */
        public Builder layers(List<String> layers) {
            return layers(Output.of(layers));
        }

        /**
         * @param layers The configuration for layers.
         * 
         * @return builder
         * 
         */
        public Builder layers(String... layers) {
            return layers(List.of(layers));
        }

        /**
         * @param memorySize Amount of memory in MB your function can use at runtime. Defaults to `128`. Limits to [128, 32768].
         * 
         * @return builder
         * 
         */
        public Builder memorySize(@Nullable Output<Integer> memorySize) {
            $.memorySize = memorySize;
            return this;
        }

        /**
         * @param memorySize Amount of memory in MB your function can use at runtime. Defaults to `128`. Limits to [128, 32768].
         * 
         * @return builder
         * 
         */
        public Builder memorySize(Integer memorySize) {
            return memorySize(Output.of(memorySize));
        }

        /**
         * @param name The Function Compute function name. It is the only in one service and is conflict with &#34;name_prefix&#34;.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Function Compute function name. It is the only in one service and is conflict with &#34;name_prefix&#34;.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePrefix Setting a prefix to get a only function name. It is conflict with &#34;name&#34;.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix Setting a prefix to get a only function name. It is conflict with &#34;name&#34;.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param ossBucket The OSS bucket location containing the function&#39;s deployment package. Conflicts with `filename`. This bucket must reside in the same Alibaba Cloud region where you are creating the function.
         * 
         * @return builder
         * 
         */
        public Builder ossBucket(@Nullable Output<String> ossBucket) {
            $.ossBucket = ossBucket;
            return this;
        }

        /**
         * @param ossBucket The OSS bucket location containing the function&#39;s deployment package. Conflicts with `filename`. This bucket must reside in the same Alibaba Cloud region where you are creating the function.
         * 
         * @return builder
         * 
         */
        public Builder ossBucket(String ossBucket) {
            return ossBucket(Output.of(ossBucket));
        }

        /**
         * @param ossKey The OSS key of an object containing the function&#39;s deployment package. Conflicts with `filename`.
         * 
         * @return builder
         * 
         */
        public Builder ossKey(@Nullable Output<String> ossKey) {
            $.ossKey = ossKey;
            return this;
        }

        /**
         * @param ossKey The OSS key of an object containing the function&#39;s deployment package. Conflicts with `filename`.
         * 
         * @return builder
         * 
         */
        public Builder ossKey(String ossKey) {
            return ossKey(Output.of(ossKey));
        }

        /**
         * @param runtime See [Runtimes][https://www.alibabacloud.com/help/zh/function-compute/latest/manage-functions#multiTask3514] for valid values.
         * 
         * @return builder
         * 
         */
        public Builder runtime(Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        /**
         * @param runtime See [Runtimes][https://www.alibabacloud.com/help/zh/function-compute/latest/manage-functions#multiTask3514] for valid values.
         * 
         * @return builder
         * 
         */
        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        /**
         * @param service The Function Compute service name.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The Function Compute service name.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param timeout The amount of time your function has to run in seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The amount of time your function has to run in seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public FunctionArgs build() {
            $.handler = Objects.requireNonNull($.handler, "expected parameter 'handler' to be non-null");
            $.runtime = Objects.requireNonNull($.runtime, "expected parameter 'runtime' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            return $;
        }
    }

}
