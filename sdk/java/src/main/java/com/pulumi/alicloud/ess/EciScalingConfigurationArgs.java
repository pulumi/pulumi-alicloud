// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess;

import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationAcrRegistryInfoArgs;
import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationContainerArgs;
import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationHostAliasArgs;
import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationImageRegistryCredentialArgs;
import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationInitContainerArgs;
import com.pulumi.alicloud.ess.inputs.EciScalingConfigurationVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EciScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EciScalingConfigurationArgs Empty = new EciScalingConfigurationArgs();

    /**
     * Information about the Container Registry Enterprise Edition instance. See `acr_registry_infos` below for details.
     * 
     */
    @Import(name="acrRegistryInfos")
    private @Nullable Output<List<EciScalingConfigurationAcrRegistryInfoArgs>> acrRegistryInfos;

    /**
     * @return Information about the Container Registry Enterprise Edition instance. See `acr_registry_infos` below for details.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationAcrRegistryInfoArgs>>> acrRegistryInfos() {
        return Optional.ofNullable(this.acrRegistryInfos);
    }

    /**
     * Whether active current eci scaling configuration in the specified scaling group. Note that only
     * one configuration can be active. Default to `false`.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether active current eci scaling configuration in the specified scaling group. Note that only
     * one configuration can be active. Default to `false`.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Whether create eip automatically.
     * 
     */
    @Import(name="autoCreateEip")
    private @Nullable Output<Boolean> autoCreateEip;

    /**
     * @return Whether create eip automatically.
     * 
     */
    public Optional<Output<Boolean>> autoCreateEip() {
        return Optional.ofNullable(this.autoCreateEip);
    }

    /**
     * The name of the container group.
     * 
     */
    @Import(name="containerGroupName")
    private @Nullable Output<String> containerGroupName;

    /**
     * @return The name of the container group.
     * 
     */
    public Optional<Output<String>> containerGroupName() {
        return Optional.ofNullable(this.containerGroupName);
    }

    /**
     * The list of containers. See `containers` below for details.
     * 
     */
    @Import(name="containers")
    private @Nullable Output<List<EciScalingConfigurationContainerArgs>> containers;

    /**
     * @return The list of containers. See `containers` below for details.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationContainerArgs>>> containers() {
        return Optional.ofNullable(this.containers);
    }

    /**
     * The amount of CPU resources allocated to the container group.
     * 
     */
    @Import(name="cpu")
    private @Nullable Output<Double> cpu;

    /**
     * @return The amount of CPU resources allocated to the container group.
     * 
     */
    public Optional<Output<Double>> cpu() {
        return Optional.ofNullable(this.cpu);
    }

    /**
     * The description of data disk N. Valid values of N: 1 to 16. The description must be 2 to
     * 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of data disk N. Valid values of N: 1 to 16. The description must be 2 to
     * 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * dns policy of contain group.
     * 
     */
    @Import(name="dnsPolicy")
    private @Nullable Output<String> dnsPolicy;

    /**
     * @return dns policy of contain group.
     * 
     */
    public Optional<Output<String>> dnsPolicy() {
        return Optional.ofNullable(this.dnsPolicy);
    }

    /**
     * egress bandwidth.
     * 
     */
    @Import(name="egressBandwidth")
    private @Nullable Output<Integer> egressBandwidth;

    /**
     * @return egress bandwidth.
     * 
     */
    public Optional<Output<Integer>> egressBandwidth() {
        return Optional.ofNullable(this.egressBandwidth);
    }

    /**
     * Eip bandwidth.
     * 
     */
    @Import(name="eipBandwidth")
    private @Nullable Output<Integer> eipBandwidth;

    /**
     * @return Eip bandwidth.
     * 
     */
    public Optional<Output<Integer>> eipBandwidth() {
        return Optional.ofNullable(this.eipBandwidth);
    }

    /**
     * Enable sls log service.
     * 
     */
    @Import(name="enableSls")
    private @Nullable Output<Boolean> enableSls;

    /**
     * @return Enable sls log service.
     * 
     */
    public Optional<Output<Boolean>> enableSls() {
        return Optional.ofNullable(this.enableSls);
    }

    /**
     * The eci scaling configuration will be deleted forcibly with deleting its scaling group.
     * Default to false.
     * 
     */
    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    /**
     * @return The eci scaling configuration will be deleted forcibly with deleting its scaling group.
     * Default to false.
     * 
     */
    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    /**
     * HostAliases. See `host_aliases` below.
     * 
     */
    @Import(name="hostAliases")
    private @Nullable Output<List<EciScalingConfigurationHostAliasArgs>> hostAliases;

    /**
     * @return HostAliases. See `host_aliases` below.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationHostAliasArgs>>> hostAliases() {
        return Optional.ofNullable(this.hostAliases);
    }

    /**
     * Hostname of an ECI instance.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Hostname of an ECI instance.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The image registry credential.   See `image_registry_credentials` below for
     * details.
     * 
     */
    @Import(name="imageRegistryCredentials")
    private @Nullable Output<List<EciScalingConfigurationImageRegistryCredentialArgs>> imageRegistryCredentials;

    /**
     * @return The image registry credential.   See `image_registry_credentials` below for
     * details.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationImageRegistryCredentialArgs>>> imageRegistryCredentials() {
        return Optional.ofNullable(this.imageRegistryCredentials);
    }

    /**
     * Ingress bandwidth.
     * 
     */
    @Import(name="ingressBandwidth")
    private @Nullable Output<Integer> ingressBandwidth;

    /**
     * @return Ingress bandwidth.
     * 
     */
    public Optional<Output<Integer>> ingressBandwidth() {
        return Optional.ofNullable(this.ingressBandwidth);
    }

    /**
     * The list of initContainers. See `init_containers` below for details.
     * 
     */
    @Import(name="initContainers")
    private @Nullable Output<List<EciScalingConfigurationInitContainerArgs>> initContainers;

    /**
     * @return The list of initContainers. See `init_containers` below for details.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationInitContainerArgs>>> initContainers() {
        return Optional.ofNullable(this.initContainers);
    }

    /**
     * The amount of memory resources allocated to the container group.
     * 
     */
    @Import(name="memory")
    private @Nullable Output<Double> memory;

    /**
     * @return The amount of memory resources allocated to the container group.
     * 
     */
    public Optional<Output<Double>> memory() {
        return Optional.ofNullable(this.memory);
    }

    /**
     * The RAM role that the container group assumes. ECI and ECS share the same RAM role.
     * 
     */
    @Import(name="ramRoleName")
    private @Nullable Output<String> ramRoleName;

    /**
     * @return The RAM role that the container group assumes. ECI and ECS share the same RAM role.
     * 
     */
    public Optional<Output<String>> ramRoleName() {
        return Optional.ofNullable(this.ramRoleName);
    }

    /**
     * ID of resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return ID of resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The restart policy of the container group. Default to `Always`.
     * 
     */
    @Import(name="restartPolicy")
    private @Nullable Output<String> restartPolicy;

    /**
     * @return The restart policy of the container group. Default to `Always`.
     * 
     */
    public Optional<Output<String>> restartPolicy() {
        return Optional.ofNullable(this.restartPolicy);
    }

    /**
     * Name shown for the scheduled task. which must contain 2-64 characters (
     * English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number,
     * underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is
     * EciScalingConfigurationId.
     * 
     */
    @Import(name="scalingConfigurationName")
    private @Nullable Output<String> scalingConfigurationName;

    /**
     * @return Name shown for the scheduled task. which must contain 2-64 characters (
     * English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number,
     * underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is
     * EciScalingConfigurationId.
     * 
     */
    public Optional<Output<String>> scalingConfigurationName() {
        return Optional.ofNullable(this.scalingConfigurationName);
    }

    /**
     * ID of the scaling group of a eci scaling configuration.
     * 
     */
    @Import(name="scalingGroupId", required=true)
    private Output<String> scalingGroupId;

    /**
     * @return ID of the scaling group of a eci scaling configuration.
     * 
     */
    public Output<String> scalingGroupId() {
        return this.scalingGroupId;
    }

    /**
     * ID of the security group used to create new instance. It is conflict
     * with `security_group_ids`.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return ID of the security group used to create new instance. It is conflict
     * with `security_group_ids`.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * The maximum price hourly for spot instance.
     * 
     */
    @Import(name="spotPriceLimit")
    private @Nullable Output<Double> spotPriceLimit;

    /**
     * @return The maximum price hourly for spot instance.
     * 
     */
    public Optional<Output<Double>> spotPriceLimit() {
        return Optional.ofNullable(this.spotPriceLimit);
    }

    /**
     * The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`
     * , `SpotWithPriceLimit`.
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`
     * , `SpotWithPriceLimit`.
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    /**
     * A mapping of tags to assign to the resource. It will be applied for ECI instances finally.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot
     *   be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be
     *   a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource. It will be applied for ECI instances finally.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot
     *   be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be
     *   a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The list of volumes. See `volumes` below for details.
     * 
     */
    @Import(name="volumes")
    private @Nullable Output<List<EciScalingConfigurationVolumeArgs>> volumes;

    /**
     * @return The list of volumes. See `volumes` below for details.
     * 
     */
    public Optional<Output<List<EciScalingConfigurationVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private EciScalingConfigurationArgs() {}

    private EciScalingConfigurationArgs(EciScalingConfigurationArgs $) {
        this.acrRegistryInfos = $.acrRegistryInfos;
        this.active = $.active;
        this.autoCreateEip = $.autoCreateEip;
        this.containerGroupName = $.containerGroupName;
        this.containers = $.containers;
        this.cpu = $.cpu;
        this.description = $.description;
        this.dnsPolicy = $.dnsPolicy;
        this.egressBandwidth = $.egressBandwidth;
        this.eipBandwidth = $.eipBandwidth;
        this.enableSls = $.enableSls;
        this.forceDelete = $.forceDelete;
        this.hostAliases = $.hostAliases;
        this.hostName = $.hostName;
        this.imageRegistryCredentials = $.imageRegistryCredentials;
        this.ingressBandwidth = $.ingressBandwidth;
        this.initContainers = $.initContainers;
        this.memory = $.memory;
        this.ramRoleName = $.ramRoleName;
        this.resourceGroupId = $.resourceGroupId;
        this.restartPolicy = $.restartPolicy;
        this.scalingConfigurationName = $.scalingConfigurationName;
        this.scalingGroupId = $.scalingGroupId;
        this.securityGroupId = $.securityGroupId;
        this.spotPriceLimit = $.spotPriceLimit;
        this.spotStrategy = $.spotStrategy;
        this.tags = $.tags;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EciScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EciScalingConfigurationArgs $;

        public Builder() {
            $ = new EciScalingConfigurationArgs();
        }

        public Builder(EciScalingConfigurationArgs defaults) {
            $ = new EciScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acrRegistryInfos Information about the Container Registry Enterprise Edition instance. See `acr_registry_infos` below for details.
         * 
         * @return builder
         * 
         */
        public Builder acrRegistryInfos(@Nullable Output<List<EciScalingConfigurationAcrRegistryInfoArgs>> acrRegistryInfos) {
            $.acrRegistryInfos = acrRegistryInfos;
            return this;
        }

        /**
         * @param acrRegistryInfos Information about the Container Registry Enterprise Edition instance. See `acr_registry_infos` below for details.
         * 
         * @return builder
         * 
         */
        public Builder acrRegistryInfos(List<EciScalingConfigurationAcrRegistryInfoArgs> acrRegistryInfos) {
            return acrRegistryInfos(Output.of(acrRegistryInfos));
        }

        /**
         * @param acrRegistryInfos Information about the Container Registry Enterprise Edition instance. See `acr_registry_infos` below for details.
         * 
         * @return builder
         * 
         */
        public Builder acrRegistryInfos(EciScalingConfigurationAcrRegistryInfoArgs... acrRegistryInfos) {
            return acrRegistryInfos(List.of(acrRegistryInfos));
        }

        /**
         * @param active Whether active current eci scaling configuration in the specified scaling group. Note that only
         * one configuration can be active. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether active current eci scaling configuration in the specified scaling group. Note that only
         * one configuration can be active. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param autoCreateEip Whether create eip automatically.
         * 
         * @return builder
         * 
         */
        public Builder autoCreateEip(@Nullable Output<Boolean> autoCreateEip) {
            $.autoCreateEip = autoCreateEip;
            return this;
        }

        /**
         * @param autoCreateEip Whether create eip automatically.
         * 
         * @return builder
         * 
         */
        public Builder autoCreateEip(Boolean autoCreateEip) {
            return autoCreateEip(Output.of(autoCreateEip));
        }

        /**
         * @param containerGroupName The name of the container group.
         * 
         * @return builder
         * 
         */
        public Builder containerGroupName(@Nullable Output<String> containerGroupName) {
            $.containerGroupName = containerGroupName;
            return this;
        }

        /**
         * @param containerGroupName The name of the container group.
         * 
         * @return builder
         * 
         */
        public Builder containerGroupName(String containerGroupName) {
            return containerGroupName(Output.of(containerGroupName));
        }

        /**
         * @param containers The list of containers. See `containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder containers(@Nullable Output<List<EciScalingConfigurationContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers The list of containers. See `containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<EciScalingConfigurationContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers The list of containers. See `containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder containers(EciScalingConfigurationContainerArgs... containers) {
            return containers(List.of(containers));
        }

        /**
         * @param cpu The amount of CPU resources allocated to the container group.
         * 
         * @return builder
         * 
         */
        public Builder cpu(@Nullable Output<Double> cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param cpu The amount of CPU resources allocated to the container group.
         * 
         * @return builder
         * 
         */
        public Builder cpu(Double cpu) {
            return cpu(Output.of(cpu));
        }

        /**
         * @param description The description of data disk N. Valid values of N: 1 to 16. The description must be 2 to
         * 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of data disk N. Valid values of N: 1 to 16. The description must be 2 to
         * 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dnsPolicy dns policy of contain group.
         * 
         * @return builder
         * 
         */
        public Builder dnsPolicy(@Nullable Output<String> dnsPolicy) {
            $.dnsPolicy = dnsPolicy;
            return this;
        }

        /**
         * @param dnsPolicy dns policy of contain group.
         * 
         * @return builder
         * 
         */
        public Builder dnsPolicy(String dnsPolicy) {
            return dnsPolicy(Output.of(dnsPolicy));
        }

        /**
         * @param egressBandwidth egress bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder egressBandwidth(@Nullable Output<Integer> egressBandwidth) {
            $.egressBandwidth = egressBandwidth;
            return this;
        }

        /**
         * @param egressBandwidth egress bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder egressBandwidth(Integer egressBandwidth) {
            return egressBandwidth(Output.of(egressBandwidth));
        }

        /**
         * @param eipBandwidth Eip bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder eipBandwidth(@Nullable Output<Integer> eipBandwidth) {
            $.eipBandwidth = eipBandwidth;
            return this;
        }

        /**
         * @param eipBandwidth Eip bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder eipBandwidth(Integer eipBandwidth) {
            return eipBandwidth(Output.of(eipBandwidth));
        }

        /**
         * @param enableSls Enable sls log service.
         * 
         * @return builder
         * 
         */
        public Builder enableSls(@Nullable Output<Boolean> enableSls) {
            $.enableSls = enableSls;
            return this;
        }

        /**
         * @param enableSls Enable sls log service.
         * 
         * @return builder
         * 
         */
        public Builder enableSls(Boolean enableSls) {
            return enableSls(Output.of(enableSls));
        }

        /**
         * @param forceDelete The eci scaling configuration will be deleted forcibly with deleting its scaling group.
         * Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        /**
         * @param forceDelete The eci scaling configuration will be deleted forcibly with deleting its scaling group.
         * Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        /**
         * @param hostAliases HostAliases. See `host_aliases` below.
         * 
         * @return builder
         * 
         */
        public Builder hostAliases(@Nullable Output<List<EciScalingConfigurationHostAliasArgs>> hostAliases) {
            $.hostAliases = hostAliases;
            return this;
        }

        /**
         * @param hostAliases HostAliases. See `host_aliases` below.
         * 
         * @return builder
         * 
         */
        public Builder hostAliases(List<EciScalingConfigurationHostAliasArgs> hostAliases) {
            return hostAliases(Output.of(hostAliases));
        }

        /**
         * @param hostAliases HostAliases. See `host_aliases` below.
         * 
         * @return builder
         * 
         */
        public Builder hostAliases(EciScalingConfigurationHostAliasArgs... hostAliases) {
            return hostAliases(List.of(hostAliases));
        }

        /**
         * @param hostName Hostname of an ECI instance.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Hostname of an ECI instance.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param imageRegistryCredentials The image registry credential.   See `image_registry_credentials` below for
         * details.
         * 
         * @return builder
         * 
         */
        public Builder imageRegistryCredentials(@Nullable Output<List<EciScalingConfigurationImageRegistryCredentialArgs>> imageRegistryCredentials) {
            $.imageRegistryCredentials = imageRegistryCredentials;
            return this;
        }

        /**
         * @param imageRegistryCredentials The image registry credential.   See `image_registry_credentials` below for
         * details.
         * 
         * @return builder
         * 
         */
        public Builder imageRegistryCredentials(List<EciScalingConfigurationImageRegistryCredentialArgs> imageRegistryCredentials) {
            return imageRegistryCredentials(Output.of(imageRegistryCredentials));
        }

        /**
         * @param imageRegistryCredentials The image registry credential.   See `image_registry_credentials` below for
         * details.
         * 
         * @return builder
         * 
         */
        public Builder imageRegistryCredentials(EciScalingConfigurationImageRegistryCredentialArgs... imageRegistryCredentials) {
            return imageRegistryCredentials(List.of(imageRegistryCredentials));
        }

        /**
         * @param ingressBandwidth Ingress bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder ingressBandwidth(@Nullable Output<Integer> ingressBandwidth) {
            $.ingressBandwidth = ingressBandwidth;
            return this;
        }

        /**
         * @param ingressBandwidth Ingress bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder ingressBandwidth(Integer ingressBandwidth) {
            return ingressBandwidth(Output.of(ingressBandwidth));
        }

        /**
         * @param initContainers The list of initContainers. See `init_containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(@Nullable Output<List<EciScalingConfigurationInitContainerArgs>> initContainers) {
            $.initContainers = initContainers;
            return this;
        }

        /**
         * @param initContainers The list of initContainers. See `init_containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(List<EciScalingConfigurationInitContainerArgs> initContainers) {
            return initContainers(Output.of(initContainers));
        }

        /**
         * @param initContainers The list of initContainers. See `init_containers` below for details.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(EciScalingConfigurationInitContainerArgs... initContainers) {
            return initContainers(List.of(initContainers));
        }

        /**
         * @param memory The amount of memory resources allocated to the container group.
         * 
         * @return builder
         * 
         */
        public Builder memory(@Nullable Output<Double> memory) {
            $.memory = memory;
            return this;
        }

        /**
         * @param memory The amount of memory resources allocated to the container group.
         * 
         * @return builder
         * 
         */
        public Builder memory(Double memory) {
            return memory(Output.of(memory));
        }

        /**
         * @param ramRoleName The RAM role that the container group assumes. ECI and ECS share the same RAM role.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(@Nullable Output<String> ramRoleName) {
            $.ramRoleName = ramRoleName;
            return this;
        }

        /**
         * @param ramRoleName The RAM role that the container group assumes. ECI and ECS share the same RAM role.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(String ramRoleName) {
            return ramRoleName(Output.of(ramRoleName));
        }

        /**
         * @param resourceGroupId ID of resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId ID of resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param restartPolicy The restart policy of the container group. Default to `Always`.
         * 
         * @return builder
         * 
         */
        public Builder restartPolicy(@Nullable Output<String> restartPolicy) {
            $.restartPolicy = restartPolicy;
            return this;
        }

        /**
         * @param restartPolicy The restart policy of the container group. Default to `Always`.
         * 
         * @return builder
         * 
         */
        public Builder restartPolicy(String restartPolicy) {
            return restartPolicy(Output.of(restartPolicy));
        }

        /**
         * @param scalingConfigurationName Name shown for the scheduled task. which must contain 2-64 characters (
         * English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number,
         * underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is
         * EciScalingConfigurationId.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(@Nullable Output<String> scalingConfigurationName) {
            $.scalingConfigurationName = scalingConfigurationName;
            return this;
        }

        /**
         * @param scalingConfigurationName Name shown for the scheduled task. which must contain 2-64 characters (
         * English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number,
         * underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is
         * EciScalingConfigurationId.
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(String scalingConfigurationName) {
            return scalingConfigurationName(Output.of(scalingConfigurationName));
        }

        /**
         * @param scalingGroupId ID of the scaling group of a eci scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(Output<String> scalingGroupId) {
            $.scalingGroupId = scalingGroupId;
            return this;
        }

        /**
         * @param scalingGroupId ID of the scaling group of a eci scaling configuration.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(String scalingGroupId) {
            return scalingGroupId(Output.of(scalingGroupId));
        }

        /**
         * @param securityGroupId ID of the security group used to create new instance. It is conflict
         * with `security_group_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId ID of the security group used to create new instance. It is conflict
         * with `security_group_ids`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param spotPriceLimit The maximum price hourly for spot instance.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(@Nullable Output<Double> spotPriceLimit) {
            $.spotPriceLimit = spotPriceLimit;
            return this;
        }

        /**
         * @param spotPriceLimit The maximum price hourly for spot instance.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(Double spotPriceLimit) {
            return spotPriceLimit(Output.of(spotPriceLimit));
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`
         * , `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. Valid values: `NoSpot`, `SpotAsPriceGo`
         * , `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. It will be applied for ECI instances finally.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot
         *   be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be
         *   a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. It will be applied for ECI instances finally.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot
         *   be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;http://&#34;, or &#34;https://&#34; It can be
         *   a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param volumes The list of volumes. See `volumes` below for details.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable Output<List<EciScalingConfigurationVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes The list of volumes. See `volumes` below for details.
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<EciScalingConfigurationVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes The list of volumes. See `volumes` below for details.
         * 
         * @return builder
         * 
         */
        public Builder volumes(EciScalingConfigurationVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public EciScalingConfigurationArgs build() {
            $.scalingGroupId = Objects.requireNonNull($.scalingGroupId, "expected parameter 'scalingGroupId' to be non-null");
            return $;
        }
    }

}
