// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.compute.outputs;

import com.pulumi.alicloud.compute.outputs.GetNestServiceInstancesServiceInstanceServiceServiceInfo;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNestServiceInstancesServiceInstanceService {
    /**
     * @return The type of the deployment.
     * 
     */
    private String deployType;
    /**
     * @return The time of publish.
     * 
     */
    private String publishTime;
    /**
     * @return The id of the service.
     * 
     */
    private String serviceId;
    /**
     * @return Service information.
     * 
     */
    private List<GetNestServiceInstancesServiceInstanceServiceServiceInfo> serviceInfos;
    /**
     * @return The type of the service.
     * 
     */
    private String serviceType;
    /**
     * @return The status of the Service Instance. Valid Values: `Created`, `Deploying`, `DeployedFailed`, `Deployed`, `Upgrading`, `Deleting`, `Deleted`, `DeletedFailed`.
     * 
     */
    private String status;
    /**
     * @return The name of the supplier.
     * 
     */
    private String supplierName;
    /**
     * @return The url of the supplier.
     * 
     */
    private String supplierUrl;
    /**
     * @return The version of the service.
     * 
     */
    private String version;
    /**
     * @return The version name of the service.
     * 
     */
    private String versionName;

    private GetNestServiceInstancesServiceInstanceService() {}
    /**
     * @return The type of the deployment.
     * 
     */
    public String deployType() {
        return this.deployType;
    }
    /**
     * @return The time of publish.
     * 
     */
    public String publishTime() {
        return this.publishTime;
    }
    /**
     * @return The id of the service.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }
    /**
     * @return Service information.
     * 
     */
    public List<GetNestServiceInstancesServiceInstanceServiceServiceInfo> serviceInfos() {
        return this.serviceInfos;
    }
    /**
     * @return The type of the service.
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }
    /**
     * @return The status of the Service Instance. Valid Values: `Created`, `Deploying`, `DeployedFailed`, `Deployed`, `Upgrading`, `Deleting`, `Deleted`, `DeletedFailed`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The name of the supplier.
     * 
     */
    public String supplierName() {
        return this.supplierName;
    }
    /**
     * @return The url of the supplier.
     * 
     */
    public String supplierUrl() {
        return this.supplierUrl;
    }
    /**
     * @return The version of the service.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return The version name of the service.
     * 
     */
    public String versionName() {
        return this.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNestServiceInstancesServiceInstanceService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deployType;
        private String publishTime;
        private String serviceId;
        private List<GetNestServiceInstancesServiceInstanceServiceServiceInfo> serviceInfos;
        private String serviceType;
        private String status;
        private String supplierName;
        private String supplierUrl;
        private String version;
        private String versionName;
        public Builder() {}
        public Builder(GetNestServiceInstancesServiceInstanceService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deployType = defaults.deployType;
    	      this.publishTime = defaults.publishTime;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceInfos = defaults.serviceInfos;
    	      this.serviceType = defaults.serviceType;
    	      this.status = defaults.status;
    	      this.supplierName = defaults.supplierName;
    	      this.supplierUrl = defaults.supplierUrl;
    	      this.version = defaults.version;
    	      this.versionName = defaults.versionName;
        }

        @CustomType.Setter
        public Builder deployType(String deployType) {
            if (deployType == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "deployType");
            }
            this.deployType = deployType;
            return this;
        }
        @CustomType.Setter
        public Builder publishTime(String publishTime) {
            if (publishTime == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "publishTime");
            }
            this.publishTime = publishTime;
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            if (serviceId == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "serviceId");
            }
            this.serviceId = serviceId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceInfos(List<GetNestServiceInstancesServiceInstanceServiceServiceInfo> serviceInfos) {
            if (serviceInfos == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "serviceInfos");
            }
            this.serviceInfos = serviceInfos;
            return this;
        }
        public Builder serviceInfos(GetNestServiceInstancesServiceInstanceServiceServiceInfo... serviceInfos) {
            return serviceInfos(List.of(serviceInfos));
        }
        @CustomType.Setter
        public Builder serviceType(String serviceType) {
            if (serviceType == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "serviceType");
            }
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder supplierName(String supplierName) {
            if (supplierName == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "supplierName");
            }
            this.supplierName = supplierName;
            return this;
        }
        @CustomType.Setter
        public Builder supplierUrl(String supplierUrl) {
            if (supplierUrl == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "supplierUrl");
            }
            this.supplierUrl = supplierUrl;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "version");
            }
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder versionName(String versionName) {
            if (versionName == null) {
              throw new MissingRequiredPropertyException("GetNestServiceInstancesServiceInstanceService", "versionName");
            }
            this.versionName = versionName;
            return this;
        }
        public GetNestServiceInstancesServiceInstanceService build() {
            final var _resultValue = new GetNestServiceInstancesServiceInstanceService();
            _resultValue.deployType = deployType;
            _resultValue.publishTime = publishTime;
            _resultValue.serviceId = serviceId;
            _resultValue.serviceInfos = serviceInfos;
            _resultValue.serviceType = serviceType;
            _resultValue.status = status;
            _resultValue.supplierName = supplierName;
            _resultValue.supplierUrl = supplierUrl;
            _resultValue.version = version;
            _resultValue.versionName = versionName;
            return _resultValue;
        }
    }
}
