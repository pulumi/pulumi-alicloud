// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterVbrChildInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterVbrChildInstanceArgs Empty = new RouterVbrChildInstanceArgs();

    /**
     * The ID of the leased line gateway subinstance.
     * 
     */
    @Import(name="childInstanceId", required=true)
    private Output<String> childInstanceId;

    /**
     * @return The ID of the leased line gateway subinstance.
     * 
     */
    public Output<String> childInstanceId() {
        return this.childInstanceId;
    }

    /**
     * The ID of the subinstance of the leased line gateway.
     * 
     */
    @Import(name="childInstanceOwnerId")
    private @Nullable Output<String> childInstanceOwnerId;

    /**
     * @return The ID of the subinstance of the leased line gateway.
     * 
     */
    public Optional<Output<String>> childInstanceOwnerId() {
        return Optional.ofNullable(this.childInstanceOwnerId);
    }

    /**
     * Region of the leased line gateway sub-instance.
     * 
     */
    @Import(name="childInstanceRegionId", required=true)
    private Output<String> childInstanceRegionId;

    /**
     * @return Region of the leased line gateway sub-instance.
     * 
     */
    public Output<String> childInstanceRegionId() {
        return this.childInstanceRegionId;
    }

    /**
     * The type of leased line gateway sub-instance, Valid values: `VBR`.
     * 
     */
    @Import(name="childInstanceType", required=true)
    private Output<String> childInstanceType;

    /**
     * @return The type of leased line gateway sub-instance, Valid values: `VBR`.
     * 
     */
    public Output<String> childInstanceType() {
        return this.childInstanceType;
    }

    /**
     * ID of the representative leased line gateway instance.
     * 
     */
    @Import(name="ecrId", required=true)
    private Output<String> ecrId;

    /**
     * @return ID of the representative leased line gateway instance.
     * 
     */
    public Output<String> ecrId() {
        return this.ecrId;
    }

    private RouterVbrChildInstanceArgs() {}

    private RouterVbrChildInstanceArgs(RouterVbrChildInstanceArgs $) {
        this.childInstanceId = $.childInstanceId;
        this.childInstanceOwnerId = $.childInstanceOwnerId;
        this.childInstanceRegionId = $.childInstanceRegionId;
        this.childInstanceType = $.childInstanceType;
        this.ecrId = $.ecrId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterVbrChildInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterVbrChildInstanceArgs $;

        public Builder() {
            $ = new RouterVbrChildInstanceArgs();
        }

        public Builder(RouterVbrChildInstanceArgs defaults) {
            $ = new RouterVbrChildInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param childInstanceId The ID of the leased line gateway subinstance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(Output<String> childInstanceId) {
            $.childInstanceId = childInstanceId;
            return this;
        }

        /**
         * @param childInstanceId The ID of the leased line gateway subinstance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceId(String childInstanceId) {
            return childInstanceId(Output.of(childInstanceId));
        }

        /**
         * @param childInstanceOwnerId The ID of the subinstance of the leased line gateway.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceOwnerId(@Nullable Output<String> childInstanceOwnerId) {
            $.childInstanceOwnerId = childInstanceOwnerId;
            return this;
        }

        /**
         * @param childInstanceOwnerId The ID of the subinstance of the leased line gateway.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceOwnerId(String childInstanceOwnerId) {
            return childInstanceOwnerId(Output.of(childInstanceOwnerId));
        }

        /**
         * @param childInstanceRegionId Region of the leased line gateway sub-instance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceRegionId(Output<String> childInstanceRegionId) {
            $.childInstanceRegionId = childInstanceRegionId;
            return this;
        }

        /**
         * @param childInstanceRegionId Region of the leased line gateway sub-instance.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceRegionId(String childInstanceRegionId) {
            return childInstanceRegionId(Output.of(childInstanceRegionId));
        }

        /**
         * @param childInstanceType The type of leased line gateway sub-instance, Valid values: `VBR`.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceType(Output<String> childInstanceType) {
            $.childInstanceType = childInstanceType;
            return this;
        }

        /**
         * @param childInstanceType The type of leased line gateway sub-instance, Valid values: `VBR`.
         * 
         * @return builder
         * 
         */
        public Builder childInstanceType(String childInstanceType) {
            return childInstanceType(Output.of(childInstanceType));
        }

        /**
         * @param ecrId ID of the representative leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(Output<String> ecrId) {
            $.ecrId = ecrId;
            return this;
        }

        /**
         * @param ecrId ID of the representative leased line gateway instance.
         * 
         * @return builder
         * 
         */
        public Builder ecrId(String ecrId) {
            return ecrId(Output.of(ecrId));
        }

        public RouterVbrChildInstanceArgs build() {
            if ($.childInstanceId == null) {
                throw new MissingRequiredPropertyException("RouterVbrChildInstanceArgs", "childInstanceId");
            }
            if ($.childInstanceRegionId == null) {
                throw new MissingRequiredPropertyException("RouterVbrChildInstanceArgs", "childInstanceRegionId");
            }
            if ($.childInstanceType == null) {
                throw new MissingRequiredPropertyException("RouterVbrChildInstanceArgs", "childInstanceType");
            }
            if ($.ecrId == null) {
                throw new MissingRequiredPropertyException("RouterVbrChildInstanceArgs", "ecrId");
            }
            return $;
        }
    }

}
