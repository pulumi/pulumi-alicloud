// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.alicloud.cen.outputs.GetTransitRouterVpcAttachmentsAttachmentZoneMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTransitRouterVpcAttachmentsAttachment {
    /**
     * @return (Available since v1.224.0) Whether the transit router is automatically published to the VPC instance.
     * 
     */
    private Boolean autoPublishRouteEnabled;
    /**
     * @return The ID of the CEN instance.
     * 
     */
    private String cenId;
    private String id;
    /**
     * @return The payment type of the resource.
     * 
     */
    private String paymentType;
    /**
     * @return The resource type of the Transit Router VPC Attachment.
     * 
     */
    private String resourceType;
    /**
     * @return The status of the Transit Router VPC Attachment. Valid Values: `Attached`, `Attaching`, `Detaching`.
     * 
     */
    private String status;
    /**
     * @return The description of the Transit Router VPC Attachment.
     * 
     */
    private String transitRouterAttachmentDescription;
    /**
     * @return The ID of the Transit Router VPC Attachment.
     * 
     */
    private String transitRouterAttachmentId;
    /**
     * @return The name of the Transit Router VPC Attachment.
     * 
     */
    private String transitRouterAttachmentName;
    /**
     * @return The ID of the transit router.
     * 
     */
    private String transitRouterId;
    /**
     * @return The ID of the VPC.
     * 
     */
    private String vpcId;
    /**
     * @return The Owner ID of the VPC.
     * 
     */
    private String vpcOwnerId;
    /**
     * @return The list of zone mapping of the VPC.
     * 
     */
    private List<GetTransitRouterVpcAttachmentsAttachmentZoneMapping> zoneMappings;

    private GetTransitRouterVpcAttachmentsAttachment() {}
    /**
     * @return (Available since v1.224.0) Whether the transit router is automatically published to the VPC instance.
     * 
     */
    public Boolean autoPublishRouteEnabled() {
        return this.autoPublishRouteEnabled;
    }
    /**
     * @return The ID of the CEN instance.
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The resource type of the Transit Router VPC Attachment.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The status of the Transit Router VPC Attachment. Valid Values: `Attached`, `Attaching`, `Detaching`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The description of the Transit Router VPC Attachment.
     * 
     */
    public String transitRouterAttachmentDescription() {
        return this.transitRouterAttachmentDescription;
    }
    /**
     * @return The ID of the Transit Router VPC Attachment.
     * 
     */
    public String transitRouterAttachmentId() {
        return this.transitRouterAttachmentId;
    }
    /**
     * @return The name of the Transit Router VPC Attachment.
     * 
     */
    public String transitRouterAttachmentName() {
        return this.transitRouterAttachmentName;
    }
    /**
     * @return The ID of the transit router.
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }
    /**
     * @return The ID of the VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The Owner ID of the VPC.
     * 
     */
    public String vpcOwnerId() {
        return this.vpcOwnerId;
    }
    /**
     * @return The list of zone mapping of the VPC.
     * 
     */
    public List<GetTransitRouterVpcAttachmentsAttachmentZoneMapping> zoneMappings() {
        return this.zoneMappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouterVpcAttachmentsAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoPublishRouteEnabled;
        private String cenId;
        private String id;
        private String paymentType;
        private String resourceType;
        private String status;
        private String transitRouterAttachmentDescription;
        private String transitRouterAttachmentId;
        private String transitRouterAttachmentName;
        private String transitRouterId;
        private String vpcId;
        private String vpcOwnerId;
        private List<GetTransitRouterVpcAttachmentsAttachmentZoneMapping> zoneMappings;
        public Builder() {}
        public Builder(GetTransitRouterVpcAttachmentsAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoPublishRouteEnabled = defaults.autoPublishRouteEnabled;
    	      this.cenId = defaults.cenId;
    	      this.id = defaults.id;
    	      this.paymentType = defaults.paymentType;
    	      this.resourceType = defaults.resourceType;
    	      this.status = defaults.status;
    	      this.transitRouterAttachmentDescription = defaults.transitRouterAttachmentDescription;
    	      this.transitRouterAttachmentId = defaults.transitRouterAttachmentId;
    	      this.transitRouterAttachmentName = defaults.transitRouterAttachmentName;
    	      this.transitRouterId = defaults.transitRouterId;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcOwnerId = defaults.vpcOwnerId;
    	      this.zoneMappings = defaults.zoneMappings;
        }

        @CustomType.Setter
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            if (autoPublishRouteEnabled == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "autoPublishRouteEnabled");
            }
            this.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cenId(String cenId) {
            if (cenId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "cenId");
            }
            this.cenId = cenId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            if (transitRouterAttachmentDescription == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "transitRouterAttachmentDescription");
            }
            this.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentId(String transitRouterAttachmentId) {
            if (transitRouterAttachmentId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "transitRouterAttachmentId");
            }
            this.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            if (transitRouterAttachmentName == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "transitRouterAttachmentName");
            }
            this.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            if (transitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "transitRouterId");
            }
            this.transitRouterId = transitRouterId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcOwnerId(String vpcOwnerId) {
            if (vpcOwnerId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "vpcOwnerId");
            }
            this.vpcOwnerId = vpcOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneMappings(List<GetTransitRouterVpcAttachmentsAttachmentZoneMapping> zoneMappings) {
            if (zoneMappings == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterVpcAttachmentsAttachment", "zoneMappings");
            }
            this.zoneMappings = zoneMappings;
            return this;
        }
        public Builder zoneMappings(GetTransitRouterVpcAttachmentsAttachmentZoneMapping... zoneMappings) {
            return zoneMappings(List.of(zoneMappings));
        }
        public GetTransitRouterVpcAttachmentsAttachment build() {
            final var _resultValue = new GetTransitRouterVpcAttachmentsAttachment();
            _resultValue.autoPublishRouteEnabled = autoPublishRouteEnabled;
            _resultValue.cenId = cenId;
            _resultValue.id = id;
            _resultValue.paymentType = paymentType;
            _resultValue.resourceType = resourceType;
            _resultValue.status = status;
            _resultValue.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            _resultValue.transitRouterAttachmentId = transitRouterAttachmentId;
            _resultValue.transitRouterAttachmentName = transitRouterAttachmentName;
            _resultValue.transitRouterId = transitRouterId;
            _resultValue.vpcId = vpcId;
            _resultValue.vpcOwnerId = vpcOwnerId;
            _resultValue.zoneMappings = zoneMappings;
            return _resultValue;
        }
    }
}
