// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V3FunctionInstanceLifecycleConfigInitializer {
    private @Nullable List<String> commands;
    /**
     * @return Function Handler: the call entry for the function compute system to run your function.
     * 
     */
    private @Nullable String handler;
    /**
     * @return The maximum running time of the function, in seconds.
     * 
     */
    private @Nullable Integer timeout;

    private V3FunctionInstanceLifecycleConfigInitializer() {}
    public List<String> commands() {
        return this.commands == null ? List.of() : this.commands;
    }
    /**
     * @return Function Handler: the call entry for the function compute system to run your function.
     * 
     */
    public Optional<String> handler() {
        return Optional.ofNullable(this.handler);
    }
    /**
     * @return The maximum running time of the function, in seconds.
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V3FunctionInstanceLifecycleConfigInitializer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> commands;
        private @Nullable String handler;
        private @Nullable Integer timeout;
        public Builder() {}
        public Builder(V3FunctionInstanceLifecycleConfigInitializer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.handler = defaults.handler;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder commands(@Nullable List<String> commands) {

            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder handler(@Nullable String handler) {

            this.handler = handler;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {

            this.timeout = timeout;
            return this;
        }
        public V3FunctionInstanceLifecycleConfigInitializer build() {
            final var _resultValue = new V3FunctionInstanceLifecycleConfigInitializer();
            _resultValue.commands = commands;
            _resultValue.handler = handler;
            _resultValue.timeout = timeout;
            return _resultValue;
        }
    }
}
