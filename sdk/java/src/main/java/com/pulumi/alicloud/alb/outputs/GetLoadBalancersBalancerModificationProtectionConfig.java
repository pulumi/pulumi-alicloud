// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancersBalancerModificationProtectionConfig {
    /**
     * @return The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
     * 
     */
    private String reason;
    /**
     * @return Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     * * `NonProtection` - disables the configuration read-only mode. After you disable the configuration read-only mode, you cannot set the ModificationProtectionReason parameter. If the parameter is set, the value is cleared.
     * * `ConsoleProtection` - enables the configuration read-only mode. After you enable the configuration read-only mode, you can set the ModificationProtectionReason parameter.
     * 
     */
    private String status;

    private GetLoadBalancersBalancerModificationProtectionConfig() {}
    /**
     * @return The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
     * 
     */
    public String reason() {
        return this.reason;
    }
    /**
     * @return Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     * * `NonProtection` - disables the configuration read-only mode. After you disable the configuration read-only mode, you cannot set the ModificationProtectionReason parameter. If the parameter is set, the value is cleared.
     * * `ConsoleProtection` - enables the configuration read-only mode. After you enable the configuration read-only mode, you can set the ModificationProtectionReason parameter.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancersBalancerModificationProtectionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String reason;
        private String status;
        public Builder() {}
        public Builder(GetLoadBalancersBalancerModificationProtectionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.reason = defaults.reason;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerModificationProtectionConfig", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerModificationProtectionConfig", "status");
            }
            this.status = status;
            return this;
        }
        public GetLoadBalancersBalancerModificationProtectionConfig build() {
            final var _resultValue = new GetLoadBalancersBalancerModificationProtectionConfig();
            _resultValue.reason = reason;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
