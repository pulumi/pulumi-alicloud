// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMountTargetsTarget {
    /**
     * @return Filter results by a specific AccessGroupName.
     * 
     */
    private String accessGroupName;
    /**
     * @return ID of the MountTargetDomain.
     * 
     */
    private String id;
    /**
     * @return Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
     * 
     */
    private String mountTargetDomain;
    /**
     * @return Filter results by a specific NetworkType.
     * 
     */
    private String networkType;
    /**
     * @return Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
     * 
     */
    private String status;
    /**
     * @return Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
     * 
     */
    private String type;
    /**
     * @return Filter results by a specific VpcId.
     * 
     */
    private String vpcId;
    /**
     * @return Filter results by a specific VSwitchId.
     * 
     */
    private String vswitchId;

    private GetMountTargetsTarget() {}
    /**
     * @return Filter results by a specific AccessGroupName.
     * 
     */
    public String accessGroupName() {
        return this.accessGroupName;
    }
    /**
     * @return ID of the MountTargetDomain.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
     * 
     */
    public String mountTargetDomain() {
        return this.mountTargetDomain;
    }
    /**
     * @return Filter results by a specific NetworkType.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Filter results by a specific VpcId.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return Filter results by a specific VSwitchId.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMountTargetsTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessGroupName;
        private String id;
        private String mountTargetDomain;
        private String networkType;
        private String status;
        private String type;
        private String vpcId;
        private String vswitchId;
        public Builder() {}
        public Builder(GetMountTargetsTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessGroupName = defaults.accessGroupName;
    	      this.id = defaults.id;
    	      this.mountTargetDomain = defaults.mountTargetDomain;
    	      this.networkType = defaults.networkType;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder accessGroupName(String accessGroupName) {
            if (accessGroupName == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "accessGroupName");
            }
            this.accessGroupName = accessGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetDomain(String mountTargetDomain) {
            if (mountTargetDomain == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "mountTargetDomain");
            }
            this.mountTargetDomain = mountTargetDomain;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            if (networkType == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "networkType");
            }
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetMountTargetsTarget", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        public GetMountTargetsTarget build() {
            final var _resultValue = new GetMountTargetsTarget();
            _resultValue.accessGroupName = accessGroupName;
            _resultValue.id = id;
            _resultValue.mountTargetDomain = mountTargetDomain;
            _resultValue.networkType = networkType;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
