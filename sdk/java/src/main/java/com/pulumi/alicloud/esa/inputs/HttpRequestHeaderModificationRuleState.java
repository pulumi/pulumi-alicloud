// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.HttpRequestHeaderModificationRuleRequestHeaderModificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HttpRequestHeaderModificationRuleState extends com.pulumi.resources.ResourceArgs {

    public static final HttpRequestHeaderModificationRuleState Empty = new HttpRequestHeaderModificationRuleState();

    /**
     * Config Id
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Config Id
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * The configurations of modifying request headers. You can add, delete, or modify a request header. See `request_header_modification` below.
     * 
     */
    @Import(name="requestHeaderModifications")
    private @Nullable Output<List<HttpRequestHeaderModificationRuleRequestHeaderModificationArgs>> requestHeaderModifications;

    /**
     * @return The configurations of modifying request headers. You can add, delete, or modify a request header. See `request_header_modification` below.
     * 
     */
    public Optional<Output<List<HttpRequestHeaderModificationRuleRequestHeaderModificationArgs>>> requestHeaderModifications() {
        return Optional.ofNullable(this.requestHeaderModifications);
    }

    /**
     * The rule content.
     * 
     */
    @Import(name="rule")
    private @Nullable Output<String> rule;

    /**
     * @return The rule content.
     * 
     */
    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    /**
     * Rule switch. Value range:
     * on: Open.
     * off: off.
     * 
     */
    @Import(name="ruleEnable")
    private @Nullable Output<String> ruleEnable;

    /**
     * @return Rule switch. Value range:
     * on: Open.
     * off: off.
     * 
     */
    public Optional<Output<String>> ruleEnable() {
        return Optional.ofNullable(this.ruleEnable);
    }

    /**
     * Rule Name.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return Rule Name.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The version number of the website configurations.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return The version number of the website configurations.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    private HttpRequestHeaderModificationRuleState() {}

    private HttpRequestHeaderModificationRuleState(HttpRequestHeaderModificationRuleState $) {
        this.configId = $.configId;
        this.requestHeaderModifications = $.requestHeaderModifications;
        this.rule = $.rule;
        this.ruleEnable = $.ruleEnable;
        this.ruleName = $.ruleName;
        this.siteId = $.siteId;
        this.siteVersion = $.siteVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpRequestHeaderModificationRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpRequestHeaderModificationRuleState $;

        public Builder() {
            $ = new HttpRequestHeaderModificationRuleState();
        }

        public Builder(HttpRequestHeaderModificationRuleState defaults) {
            $ = new HttpRequestHeaderModificationRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Config Id
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param requestHeaderModifications The configurations of modifying request headers. You can add, delete, or modify a request header. See `request_header_modification` below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeaderModifications(@Nullable Output<List<HttpRequestHeaderModificationRuleRequestHeaderModificationArgs>> requestHeaderModifications) {
            $.requestHeaderModifications = requestHeaderModifications;
            return this;
        }

        /**
         * @param requestHeaderModifications The configurations of modifying request headers. You can add, delete, or modify a request header. See `request_header_modification` below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeaderModifications(List<HttpRequestHeaderModificationRuleRequestHeaderModificationArgs> requestHeaderModifications) {
            return requestHeaderModifications(Output.of(requestHeaderModifications));
        }

        /**
         * @param requestHeaderModifications The configurations of modifying request headers. You can add, delete, or modify a request header. See `request_header_modification` below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeaderModifications(HttpRequestHeaderModificationRuleRequestHeaderModificationArgs... requestHeaderModifications) {
            return requestHeaderModifications(List.of(requestHeaderModifications));
        }

        /**
         * @param rule The rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param ruleEnable Rule switch. Value range:
         * on: Open.
         * off: off.
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(@Nullable Output<String> ruleEnable) {
            $.ruleEnable = ruleEnable;
            return this;
        }

        /**
         * @param ruleEnable Rule switch. Value range:
         * on: Open.
         * off: off.
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(String ruleEnable) {
            return ruleEnable(Output.of(ruleEnable));
        }

        /**
         * @param ruleName Rule Name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Rule Name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID, which can be obtained by calling the ListSites API.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteVersion The version number of the website configurations.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion The version number of the website configurations.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        public HttpRequestHeaderModificationRuleState build() {
            return $;
        }
    }

}
