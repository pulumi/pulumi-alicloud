// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs Empty = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs();

    /**
     * Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
     * 
     */
    @Import(name="passAll")
    private @Nullable Output<Boolean> passAll;

    /**
     * @return Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
     * 
     */
    public Optional<Output<Boolean>> passAll() {
        return Optional.ofNullable(this.passAll);
    }

    /**
     * Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
     * 
     */
    @Import(name="passes")
    private @Nullable Output<List<String>> passes;

    /**
     * @return Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
     * 
     */
    public Optional<Output<List<String>>> passes() {
        return Optional.ofNullable(this.passes);
    }

    /**
     * Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
     * 
     */
    @Import(name="removes")
    private @Nullable Output<List<String>> removes;

    /**
     * @return Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
     * 
     */
    public Optional<Output<List<String>>> removes() {
        return Optional.ofNullable(this.removes);
    }

    /**
     * Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See `set` below.
     * 
     */
    @Import(name="sets")
    private @Nullable Output<List<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs>> sets;

    /**
     * @return Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See `set` below.
     * 
     */
    public Optional<Output<List<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs>>> sets() {
        return Optional.ofNullable(this.sets);
    }

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs() {}

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs $) {
        this.passAll = $.passAll;
        this.passes = $.passes;
        this.removes = $.removes;
        this.sets = $.sets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs $;

        public Builder() {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs();
        }

        public Builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs defaults) {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passAll Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
         * 
         * @return builder
         * 
         */
        public Builder passAll(@Nullable Output<Boolean> passAll) {
            $.passAll = passAll;
            return this;
        }

        /**
         * @param passAll Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
         * 
         * @return builder
         * 
         */
        public Builder passAll(Boolean passAll) {
            return passAll(Output.of(passAll));
        }

        /**
         * @param passes Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder passes(@Nullable Output<List<String>> passes) {
            $.passes = passes;
            return this;
        }

        /**
         * @param passes Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder passes(List<String> passes) {
            return passes(Output.of(passes));
        }

        /**
         * @param passes Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder passes(String... passes) {
            return passes(List.of(passes));
        }

        /**
         * @param removes Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder removes(@Nullable Output<List<String>> removes) {
            $.removes = removes;
            return this;
        }

        /**
         * @param removes Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder removes(List<String> removes) {
            return removes(Output.of(removes));
        }

        /**
         * @param removes Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder removes(String... removes) {
            return removes(List.of(removes));
        }

        /**
         * @param sets Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See `set` below.
         * 
         * @return builder
         * 
         */
        public Builder sets(@Nullable Output<List<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs>> sets) {
            $.sets = sets;
            return this;
        }

        /**
         * @param sets Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See `set` below.
         * 
         * @return builder
         * 
         */
        public Builder sets(List<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs> sets) {
            return sets(Output.of(sets));
        }

        /**
         * @param sets Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See `set` below.
         * 
         * @return builder
         * 
         */
        public Builder sets(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersSetArgs... sets) {
            return sets(List.of(sets));
        }

        public BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs build() {
            return $;
        }
    }

}
