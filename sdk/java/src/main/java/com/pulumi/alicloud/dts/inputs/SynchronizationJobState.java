// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SynchronizationJobState extends com.pulumi.resources.ResourceArgs {

    public static final SynchronizationJobState Empty = new SynchronizationJobState();

    /**
     * The start point or synchronization point of incremental data migration, the format is Unix timestamp, and the unit is seconds.
     * 
     */
    @Import(name="checkpoint")
    private @Nullable Output<String> checkpoint;

    /**
     * @return The start point or synchronization point of incremental data migration, the format is Unix timestamp, and the unit is seconds.
     * 
     */
    public Optional<Output<String>> checkpoint() {
        return Optional.ofNullable(this.checkpoint);
    }

    /**
     * The data verification task of the migration or synchronization instance, in the format of a JSON string, such as parameter limits or alarm configurations. For more information, see the DataCheckConfigure parameter description [datacheckconfigure-parameter](https://help.aliyun.com/zh/dts/developer-reference/datacheckconfigure-parameter).
     * 
     */
    @Import(name="dataCheckConfigure")
    private @Nullable Output<String> dataCheckConfigure;

    /**
     * @return The data verification task of the migration or synchronization instance, in the format of a JSON string, such as parameter limits or alarm configurations. For more information, see the DataCheckConfigure parameter description [datacheckconfigure-parameter](https://help.aliyun.com/zh/dts/developer-reference/datacheckconfigure-parameter).
     * 
     */
    public Optional<Output<String>> dataCheckConfigure() {
        return Optional.ofNullable(this.dataCheckConfigure);
    }

    /**
     * Whether to perform full data migration or full data initialization. Valid values: `true`, `false`.
     * 
     */
    @Import(name="dataInitialization")
    private @Nullable Output<Boolean> dataInitialization;

    /**
     * @return Whether to perform full data migration or full data initialization. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> dataInitialization() {
        return Optional.ofNullable(this.dataInitialization);
    }

    /**
     * Whether to perform incremental data migration or synchronization. Valid values: `true`, `false`.
     * 
     */
    @Import(name="dataSynchronization")
    private @Nullable Output<Boolean> dataSynchronization;

    /**
     * @return Whether to perform incremental data migration or synchronization. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> dataSynchronization() {
        return Optional.ofNullable(this.dataSynchronization);
    }

    /**
     * Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html). **NOTE:** From version 1.173.0, `db_list` can be modified.
     * 
     */
    @Import(name="dbList")
    private @Nullable Output<String> dbList;

    /**
     * @return Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html). **NOTE:** From version 1.173.0, `db_list` can be modified.
     * 
     */
    public Optional<Output<String>> dbList() {
        return Optional.ofNullable(this.dbList);
    }

    /**
     * When the ID of the dedicated cluster is input, the task is scheduled to the corresponding cluster.
     * 
     */
    @Import(name="dedicatedClusterId")
    private @Nullable Output<String> dedicatedClusterId;

    /**
     * @return When the ID of the dedicated cluster is input, the task is scheduled to the corresponding cluster.
     * 
     */
    public Optional<Output<String>> dedicatedClusterId() {
        return Optional.ofNullable(this.dedicatedClusterId);
    }

    /**
     * The delay notice. Valid values: `true`, `false`.
     * 
     */
    @Import(name="delayNotice")
    private @Nullable Output<Boolean> delayNotice;

    /**
     * @return The delay notice. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> delayNotice() {
        return Optional.ofNullable(this.delayNotice);
    }

    /**
     * The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
     * 
     */
    @Import(name="delayPhone")
    private @Nullable Output<String> delayPhone;

    /**
     * @return The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
     * 
     */
    public Optional<Output<String>> delayPhone() {
        return Optional.ofNullable(this.delayPhone);
    }

    /**
     * The delay rule time. When `delay_notice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
     * 
     */
    @Import(name="delayRuleTime")
    private @Nullable Output<String> delayRuleTime;

    /**
     * @return The delay rule time. When `delay_notice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
     * 
     */
    public Optional<Output<String>> delayRuleTime() {
        return Optional.ofNullable(this.delayRuleTime);
    }

    /**
     * The name of the database to which the migration object belongs in the target instance. Note: when the target instance or target database type is PolarDB O engine, AnalyticDB PostgreSQL, PostgreSQL, MongoDB database, this parameter is available and must be passed in.
     * 
     */
    @Import(name="destinationEndpointDatabaseName")
    private @Nullable Output<String> destinationEndpointDatabaseName;

    /**
     * @return The name of the database to which the migration object belongs in the target instance. Note: when the target instance or target database type is PolarDB O engine, AnalyticDB PostgreSQL, PostgreSQL, MongoDB database, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointDatabaseName() {
        return Optional.ofNullable(this.destinationEndpointDatabaseName);
    }

    /**
     * The type of destination database. The default value is MYSQL. For the correspondence between supported target libraries and source libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the target instance is KAFKA or MONGODB, you also need to pass in some information in the reserved parameter `reserve`. For the configuration method, see the description of `reserve` parameters. Valid values: `ADS`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
     * 
     */
    @Import(name="destinationEndpointEngineName")
    private @Nullable Output<String> destinationEndpointEngineName;

    /**
     * @return The type of destination database. The default value is MYSQL. For the correspondence between supported target libraries and source libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the target instance is KAFKA or MONGODB, you also need to pass in some information in the reserved parameter `reserve`. For the configuration method, see the description of `reserve` parameters. Valid values: `ADS`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
     * 
     */
    public Optional<Output<String>> destinationEndpointEngineName() {
        return Optional.ofNullable(this.destinationEndpointEngineName);
    }

    /**
     * The ID of destination instance. If the target instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the target instance is a self-built database, the value of this parameter changes according to the value of `destination_endpoint_instance_type`. For example, the value of `destination_endpoint_instance_type` is:
     * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
     * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
     * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
     * 
     */
    @Import(name="destinationEndpointInstanceId")
    private @Nullable Output<String> destinationEndpointInstanceId;

    /**
     * @return The ID of destination instance. If the target instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the target instance is a self-built database, the value of this parameter changes according to the value of `destination_endpoint_instance_type`. For example, the value of `destination_endpoint_instance_type` is:
     * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
     * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
     * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
     * 
     */
    public Optional<Output<String>> destinationEndpointInstanceId() {
        return Optional.ofNullable(this.destinationEndpointInstanceId);
    }

    /**
     * The type of destination instance. If the target instance is a PolarDB O engine cluster, the target instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. If the target instance is the Kafka version of Message Queuing, the target instance type needs to be `ECS` or `EXPRESS` as a self-built database, and access via ECS or dedicated line. For the correspondence between supported targets and source instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the target instance is a self-built database, you also need to perform corresponding preparations, please refer to the [overview of preparations](https://help.aliyun.com/document_detail/146958.htm). Valid values: `ADS`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
     * 
     */
    @Import(name="destinationEndpointInstanceType")
    private @Nullable Output<String> destinationEndpointInstanceType;

    /**
     * @return The type of destination instance. If the target instance is a PolarDB O engine cluster, the target instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. If the target instance is the Kafka version of Message Queuing, the target instance type needs to be `ECS` or `EXPRESS` as a self-built database, and access via ECS or dedicated line. For the correspondence between supported targets and source instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the target instance is a self-built database, you also need to perform corresponding preparations, please refer to the [overview of preparations](https://help.aliyun.com/document_detail/146958.htm). Valid values: `ADS`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
     * 
     */
    public Optional<Output<String>> destinationEndpointInstanceType() {
        return Optional.ofNullable(this.destinationEndpointInstanceType);
    }

    /**
     * The IP of source endpoint. When `destination_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
     * 
     */
    @Import(name="destinationEndpointIp")
    private @Nullable Output<String> destinationEndpointIp;

    /**
     * @return The IP of source endpoint. When `destination_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointIp() {
        return Optional.ofNullable(this.destinationEndpointIp);
    }

    /**
     * The SID of Oracle database. Note: when the value of DestinationEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    @Import(name="destinationEndpointOracleSid")
    private @Nullable Output<String> destinationEndpointOracleSid;

    /**
     * @return The SID of Oracle database. Note: when the value of DestinationEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointOracleSid() {
        return Optional.ofNullable(this.destinationEndpointOracleSid);
    }

    /**
     * The ID of the Alibaba Cloud account to which the target RDS MySQL instance belongs. can be configured only when the target instance is RDS MySQL. This parameter is used to migrate or synchronize data across Alibaba Cloud accounts. You also need to enter the **destinationendpointrle** parameter.
     * 
     */
    @Import(name="destinationEndpointOwnerId")
    private @Nullable Output<String> destinationEndpointOwnerId;

    /**
     * @return The ID of the Alibaba Cloud account to which the target RDS MySQL instance belongs. can be configured only when the target instance is RDS MySQL. This parameter is used to migrate or synchronize data across Alibaba Cloud accounts. You also need to enter the **destinationendpointrle** parameter.
     * 
     */
    public Optional<Output<String>> destinationEndpointOwnerId() {
        return Optional.ofNullable(this.destinationEndpointOwnerId);
    }

    /**
     * The password of database account.
     * 
     */
    @Import(name="destinationEndpointPassword")
    private @Nullable Output<String> destinationEndpointPassword;

    /**
     * @return The password of database account.
     * 
     */
    public Optional<Output<String>> destinationEndpointPassword() {
        return Optional.ofNullable(this.destinationEndpointPassword);
    }

    /**
     * The port of source endpoint. When the target instance is a self-built database, this parameter is available and must be passed in.
     * 
     */
    @Import(name="destinationEndpointPort")
    private @Nullable Output<String> destinationEndpointPort;

    /**
     * @return The port of source endpoint. When the target instance is a self-built database, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointPort() {
        return Optional.ofNullable(this.destinationEndpointPort);
    }

    /**
     * The region of destination instance. For the target instance region, please refer to the [list of supported regions](https://help.aliyun.com/document_detail/141033.htm). Note: if the target is an Alibaba Cloud database, this parameter must be passed in.
     * 
     */
    @Import(name="destinationEndpointRegion")
    private @Nullable Output<String> destinationEndpointRegion;

    /**
     * @return The region of destination instance. For the target instance region, please refer to the [list of supported regions](https://help.aliyun.com/document_detail/141033.htm). Note: if the target is an Alibaba Cloud database, this parameter must be passed in.
     * 
     */
    public Optional<Output<String>> destinationEndpointRegion() {
        return Optional.ofNullable(this.destinationEndpointRegion);
    }

    /**
     * The role name of the Alibaba Cloud account to which the target instance belongs. This parameter must be entered when data migration or synchronization across Alibaba Cloud accounts is performed. For the permissions and authorization methods required by this role.
     * 
     */
    @Import(name="destinationEndpointRole")
    private @Nullable Output<String> destinationEndpointRole;

    /**
     * @return The role name of the Alibaba Cloud account to which the target instance belongs. This parameter must be entered when data migration or synchronization across Alibaba Cloud accounts is performed. For the permissions and authorization methods required by this role.
     * 
     */
    public Optional<Output<String>> destinationEndpointRole() {
        return Optional.ofNullable(this.destinationEndpointRole);
    }

    /**
     * The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
     * 
     */
    @Import(name="destinationEndpointUserName")
    private @Nullable Output<String> destinationEndpointUserName;

    /**
     * @return The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
     * 
     */
    public Optional<Output<String>> destinationEndpointUserName() {
        return Optional.ofNullable(this.destinationEndpointUserName);
    }

    /**
     * The environment label of the DTS instance. The value is: **normal**, **online**.
     * 
     * &gt; **NOTE:** From the status of `NotStarted` to `Synchronizing`, the resource goes through the `Prechecking` and `Initializing` phases. Because of the `Initializing` phase takes too long, and once the resource passes to the status of `Prechecking`, it can be considered that the task can be executed normally. Therefore, we treat the status of `Initializing` as an equivalent to `Synchronizing`.
     * 
     * &gt; **NOTE:** If you want to upgrade the synchronization job specifications by the property `instance_class`, you must also modify the property `instance_class` of it&#39;s instance to keep them consistent.
     * 
     */
    @Import(name="dtsBisLabel")
    private @Nullable Output<String> dtsBisLabel;

    /**
     * @return The environment label of the DTS instance. The value is: **normal**, **online**.
     * 
     * &gt; **NOTE:** From the status of `NotStarted` to `Synchronizing`, the resource goes through the `Prechecking` and `Initializing` phases. Because of the `Initializing` phase takes too long, and once the resource passes to the status of `Prechecking`, it can be considered that the task can be executed normally. Therefore, we treat the status of `Initializing` as an equivalent to `Synchronizing`.
     * 
     * &gt; **NOTE:** If you want to upgrade the synchronization job specifications by the property `instance_class`, you must also modify the property `instance_class` of it&#39;s instance to keep them consistent.
     * 
     */
    public Optional<Output<String>> dtsBisLabel() {
        return Optional.ofNullable(this.dtsBisLabel);
    }

    /**
     * The ID of synchronization instance, it must be an ID of `alicloud.dts.SynchronizationInstance`.
     * 
     */
    @Import(name="dtsInstanceId")
    private @Nullable Output<String> dtsInstanceId;

    /**
     * @return The ID of synchronization instance, it must be an ID of `alicloud.dts.SynchronizationInstance`.
     * 
     */
    public Optional<Output<String>> dtsInstanceId() {
        return Optional.ofNullable(this.dtsInstanceId);
    }

    /**
     * The name of synchronization job.
     * 
     */
    @Import(name="dtsJobName")
    private @Nullable Output<String> dtsJobName;

    /**
     * @return The name of synchronization job.
     * 
     */
    public Optional<Output<String>> dtsJobName() {
        return Optional.ofNullable(this.dtsJobName);
    }

    /**
     * The error notice. Valid values: `true`, `false`.
     * 
     */
    @Import(name="errorNotice")
    private @Nullable Output<Boolean> errorNotice;

    /**
     * @return The error notice. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> errorNotice() {
        return Optional.ofNullable(this.errorNotice);
    }

    /**
     * The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
     * 
     */
    @Import(name="errorPhone")
    private @Nullable Output<String> errorPhone;

    /**
     * @return The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
     * 
     */
    public Optional<Output<String>> errorPhone() {
        return Optional.ofNullable(this.errorPhone);
    }

    /**
     * The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
     * 
     */
    @Import(name="instanceClass")
    private @Nullable Output<String> instanceClass;

    /**
     * @return The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
     * 
     */
    public Optional<Output<String>> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    /**
     * DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
     * 
     */
    @Import(name="reserve")
    private @Nullable Output<String> reserve;

    /**
     * @return DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
     * 
     */
    public Optional<Output<String>> reserve() {
        return Optional.ofNullable(this.reserve);
    }

    /**
     * The name of the database to which the migration object belongs in the source instance. Note: this parameter is only available and must be passed in when the source instance, or the database type of the source instance is PolarDB O engine, PostgreSQL, or MongoDB database.
     * 
     */
    @Import(name="sourceEndpointDatabaseName")
    private @Nullable Output<String> sourceEndpointDatabaseName;

    /**
     * @return The name of the database to which the migration object belongs in the source instance. Note: this parameter is only available and must be passed in when the source instance, or the database type of the source instance is PolarDB O engine, PostgreSQL, or MongoDB database.
     * 
     */
    public Optional<Output<String>> sourceEndpointDatabaseName() {
        return Optional.ofNullable(this.sourceEndpointDatabaseName);
    }

    /**
     * The type of source database. The default value is `MySQL`. For the correspondence between supported source libraries and target libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the source instance is `MONGODB`, you also need to pass in some information in the reserved parameter `Reserve`, for the configuration method, see the description of Reserve parameters. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
     * 
     */
    @Import(name="sourceEndpointEngineName")
    private @Nullable Output<String> sourceEndpointEngineName;

    /**
     * @return The type of source database. The default value is `MySQL`. For the correspondence between supported source libraries and target libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the source instance is `MONGODB`, you also need to pass in some information in the reserved parameter `Reserve`, for the configuration method, see the description of Reserve parameters. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
     * 
     */
    public Optional<Output<String>> sourceEndpointEngineName() {
        return Optional.ofNullable(this.sourceEndpointEngineName);
    }

    /**
     * The ID of source instance. If the source instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the source instance is a self-built database, the value of this parameter changes according to the value of `source_endpoint_instance_type`. For example, the value of `source_endpoint_instance_type` is:
     * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
     * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
     * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
     * 
     */
    @Import(name="sourceEndpointInstanceId")
    private @Nullable Output<String> sourceEndpointInstanceId;

    /**
     * @return The ID of source instance. If the source instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the source instance is a self-built database, the value of this parameter changes according to the value of `source_endpoint_instance_type`. For example, the value of `source_endpoint_instance_type` is:
     * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
     * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
     * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
     * 
     */
    public Optional<Output<String>> sourceEndpointInstanceId() {
        return Optional.ofNullable(this.sourceEndpointInstanceId);
    }

    /**
     * The type of source instance. If the source instance is a `PolarDB O` engine cluster, the source instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. For the correspondence between supported source and target instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the source instance is a self-built database, you also need to perform corresponding preparations, for details, see [Preparations Overview](https://help.aliyun.com/document_detail/146958.htm). Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
     * 
     */
    @Import(name="sourceEndpointInstanceType")
    private @Nullable Output<String> sourceEndpointInstanceType;

    /**
     * @return The type of source instance. If the source instance is a `PolarDB O` engine cluster, the source instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. For the correspondence between supported source and target instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the source instance is a self-built database, you also need to perform corresponding preparations, for details, see [Preparations Overview](https://help.aliyun.com/document_detail/146958.htm). Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
     * 
     */
    public Optional<Output<String>> sourceEndpointInstanceType() {
        return Optional.ofNullable(this.sourceEndpointInstanceType);
    }

    /**
     * The IP of source endpoint. When `source_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
     * 
     */
    @Import(name="sourceEndpointIp")
    private @Nullable Output<String> sourceEndpointIp;

    /**
     * @return The IP of source endpoint. When `source_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> sourceEndpointIp() {
        return Optional.ofNullable(this.sourceEndpointIp);
    }

    /**
     * The SID of Oracle database. When the value of SourceEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    @Import(name="sourceEndpointOracleSid")
    private @Nullable Output<String> sourceEndpointOracleSid;

    /**
     * @return The SID of Oracle database. When the value of SourceEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> sourceEndpointOracleSid() {
        return Optional.ofNullable(this.sourceEndpointOracleSid);
    }

    /**
     * The ID of Alibaba Cloud account to which the source instance belongs. Note: passing in this parameter means performing data migration or synchronization across Alibaba Cloud accounts, and you also need to pass in the `source_endpoint_role` parameter.
     * 
     */
    @Import(name="sourceEndpointOwnerId")
    private @Nullable Output<String> sourceEndpointOwnerId;

    /**
     * @return The ID of Alibaba Cloud account to which the source instance belongs. Note: passing in this parameter means performing data migration or synchronization across Alibaba Cloud accounts, and you also need to pass in the `source_endpoint_role` parameter.
     * 
     */
    public Optional<Output<String>> sourceEndpointOwnerId() {
        return Optional.ofNullable(this.sourceEndpointOwnerId);
    }

    /**
     * The password of database account.
     * 
     */
    @Import(name="sourceEndpointPassword")
    private @Nullable Output<String> sourceEndpointPassword;

    /**
     * @return The password of database account.
     * 
     */
    public Optional<Output<String>> sourceEndpointPassword() {
        return Optional.ofNullable(this.sourceEndpointPassword);
    }

    /**
     * The port of source endpoint. When the source instance is a self-built database, this parameter is available and must be passed in.
     * 
     */
    @Import(name="sourceEndpointPort")
    private @Nullable Output<String> sourceEndpointPort;

    /**
     * @return The port of source endpoint. When the source instance is a self-built database, this parameter is available and must be passed in.
     * 
     */
    public Optional<Output<String>> sourceEndpointPort() {
        return Optional.ofNullable(this.sourceEndpointPort);
    }

    /**
     * Source instance area, please refer to the [list of supported areas](https://help.aliyun.com/document_detail/141033.htm) for details. Note if the source is an Alibaba Cloud database, this parameter must be passed in.
     * 
     */
    @Import(name="sourceEndpointRegion")
    private @Nullable Output<String> sourceEndpointRegion;

    /**
     * @return Source instance area, please refer to the [list of supported areas](https://help.aliyun.com/document_detail/141033.htm) for details. Note if the source is an Alibaba Cloud database, this parameter must be passed in.
     * 
     */
    public Optional<Output<String>> sourceEndpointRegion() {
        return Optional.ofNullable(this.sourceEndpointRegion);
    }

    /**
     * The name of the role configured for the cloud account to which the source instance belongs. Note: this parameter must be passed in when performing cross Alibaba Cloud account data migration or synchronization. For the permissions and authorization methods required by this role, please refer to [How to configure RAM authorization when cross-Alibaba Cloud account data migration or synchronization](https://help.aliyun.com/document_detail/48468.htm).
     * 
     */
    @Import(name="sourceEndpointRole")
    private @Nullable Output<String> sourceEndpointRole;

    /**
     * @return The name of the role configured for the cloud account to which the source instance belongs. Note: this parameter must be passed in when performing cross Alibaba Cloud account data migration or synchronization. For the permissions and authorization methods required by this role, please refer to [How to configure RAM authorization when cross-Alibaba Cloud account data migration or synchronization](https://help.aliyun.com/document_detail/48468.htm).
     * 
     */
    public Optional<Output<String>> sourceEndpointRole() {
        return Optional.ofNullable(this.sourceEndpointRole);
    }

    /**
     * The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
     * 
     */
    @Import(name="sourceEndpointUserName")
    private @Nullable Output<String> sourceEndpointUserName;

    /**
     * @return The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
     * 
     */
    public Optional<Output<String>> sourceEndpointUserName() {
        return Optional.ofNullable(this.sourceEndpointUserName);
    }

    /**
     * Data Delivery link switch instance id
     * 
     */
    @Import(name="sourceEndpointVswitchId")
    private @Nullable Output<String> sourceEndpointVswitchId;

    /**
     * @return Data Delivery link switch instance id
     * 
     */
    public Optional<Output<String>> sourceEndpointVswitchId() {
        return Optional.ofNullable(this.sourceEndpointVswitchId);
    }

    /**
     * The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Whether to perform library table structure migration or initialization. Valid values: `true`, `false`.
     * 
     */
    @Import(name="structureInitialization")
    private @Nullable Output<Boolean> structureInitialization;

    /**
     * @return Whether to perform library table structure migration or initialization. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> structureInitialization() {
        return Optional.ofNullable(this.structureInitialization);
    }

    /**
     * Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `sync_architecture` of the `alicloud.dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
     * 
     */
    @Import(name="synchronizationDirection")
    private @Nullable Output<String> synchronizationDirection;

    /**
     * @return Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `sync_architecture` of the `alicloud.dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
     * 
     */
    public Optional<Output<String>> synchronizationDirection() {
        return Optional.ofNullable(this.synchronizationDirection);
    }

    private SynchronizationJobState() {}

    private SynchronizationJobState(SynchronizationJobState $) {
        this.checkpoint = $.checkpoint;
        this.dataCheckConfigure = $.dataCheckConfigure;
        this.dataInitialization = $.dataInitialization;
        this.dataSynchronization = $.dataSynchronization;
        this.dbList = $.dbList;
        this.dedicatedClusterId = $.dedicatedClusterId;
        this.delayNotice = $.delayNotice;
        this.delayPhone = $.delayPhone;
        this.delayRuleTime = $.delayRuleTime;
        this.destinationEndpointDatabaseName = $.destinationEndpointDatabaseName;
        this.destinationEndpointEngineName = $.destinationEndpointEngineName;
        this.destinationEndpointInstanceId = $.destinationEndpointInstanceId;
        this.destinationEndpointInstanceType = $.destinationEndpointInstanceType;
        this.destinationEndpointIp = $.destinationEndpointIp;
        this.destinationEndpointOracleSid = $.destinationEndpointOracleSid;
        this.destinationEndpointOwnerId = $.destinationEndpointOwnerId;
        this.destinationEndpointPassword = $.destinationEndpointPassword;
        this.destinationEndpointPort = $.destinationEndpointPort;
        this.destinationEndpointRegion = $.destinationEndpointRegion;
        this.destinationEndpointRole = $.destinationEndpointRole;
        this.destinationEndpointUserName = $.destinationEndpointUserName;
        this.dtsBisLabel = $.dtsBisLabel;
        this.dtsInstanceId = $.dtsInstanceId;
        this.dtsJobName = $.dtsJobName;
        this.errorNotice = $.errorNotice;
        this.errorPhone = $.errorPhone;
        this.instanceClass = $.instanceClass;
        this.reserve = $.reserve;
        this.sourceEndpointDatabaseName = $.sourceEndpointDatabaseName;
        this.sourceEndpointEngineName = $.sourceEndpointEngineName;
        this.sourceEndpointInstanceId = $.sourceEndpointInstanceId;
        this.sourceEndpointInstanceType = $.sourceEndpointInstanceType;
        this.sourceEndpointIp = $.sourceEndpointIp;
        this.sourceEndpointOracleSid = $.sourceEndpointOracleSid;
        this.sourceEndpointOwnerId = $.sourceEndpointOwnerId;
        this.sourceEndpointPassword = $.sourceEndpointPassword;
        this.sourceEndpointPort = $.sourceEndpointPort;
        this.sourceEndpointRegion = $.sourceEndpointRegion;
        this.sourceEndpointRole = $.sourceEndpointRole;
        this.sourceEndpointUserName = $.sourceEndpointUserName;
        this.sourceEndpointVswitchId = $.sourceEndpointVswitchId;
        this.status = $.status;
        this.structureInitialization = $.structureInitialization;
        this.synchronizationDirection = $.synchronizationDirection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SynchronizationJobState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SynchronizationJobState $;

        public Builder() {
            $ = new SynchronizationJobState();
        }

        public Builder(SynchronizationJobState defaults) {
            $ = new SynchronizationJobState(Objects.requireNonNull(defaults));
        }

        /**
         * @param checkpoint The start point or synchronization point of incremental data migration, the format is Unix timestamp, and the unit is seconds.
         * 
         * @return builder
         * 
         */
        public Builder checkpoint(@Nullable Output<String> checkpoint) {
            $.checkpoint = checkpoint;
            return this;
        }

        /**
         * @param checkpoint The start point or synchronization point of incremental data migration, the format is Unix timestamp, and the unit is seconds.
         * 
         * @return builder
         * 
         */
        public Builder checkpoint(String checkpoint) {
            return checkpoint(Output.of(checkpoint));
        }

        /**
         * @param dataCheckConfigure The data verification task of the migration or synchronization instance, in the format of a JSON string, such as parameter limits or alarm configurations. For more information, see the DataCheckConfigure parameter description [datacheckconfigure-parameter](https://help.aliyun.com/zh/dts/developer-reference/datacheckconfigure-parameter).
         * 
         * @return builder
         * 
         */
        public Builder dataCheckConfigure(@Nullable Output<String> dataCheckConfigure) {
            $.dataCheckConfigure = dataCheckConfigure;
            return this;
        }

        /**
         * @param dataCheckConfigure The data verification task of the migration or synchronization instance, in the format of a JSON string, such as parameter limits or alarm configurations. For more information, see the DataCheckConfigure parameter description [datacheckconfigure-parameter](https://help.aliyun.com/zh/dts/developer-reference/datacheckconfigure-parameter).
         * 
         * @return builder
         * 
         */
        public Builder dataCheckConfigure(String dataCheckConfigure) {
            return dataCheckConfigure(Output.of(dataCheckConfigure));
        }

        /**
         * @param dataInitialization Whether to perform full data migration or full data initialization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataInitialization(@Nullable Output<Boolean> dataInitialization) {
            $.dataInitialization = dataInitialization;
            return this;
        }

        /**
         * @param dataInitialization Whether to perform full data migration or full data initialization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataInitialization(Boolean dataInitialization) {
            return dataInitialization(Output.of(dataInitialization));
        }

        /**
         * @param dataSynchronization Whether to perform incremental data migration or synchronization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataSynchronization(@Nullable Output<Boolean> dataSynchronization) {
            $.dataSynchronization = dataSynchronization;
            return this;
        }

        /**
         * @param dataSynchronization Whether to perform incremental data migration or synchronization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dataSynchronization(Boolean dataSynchronization) {
            return dataSynchronization(Output.of(dataSynchronization));
        }

        /**
         * @param dbList Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html). **NOTE:** From version 1.173.0, `db_list` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder dbList(@Nullable Output<String> dbList) {
            $.dbList = dbList;
            return this;
        }

        /**
         * @param dbList Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html). **NOTE:** From version 1.173.0, `db_list` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder dbList(String dbList) {
            return dbList(Output.of(dbList));
        }

        /**
         * @param dedicatedClusterId When the ID of the dedicated cluster is input, the task is scheduled to the corresponding cluster.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedClusterId(@Nullable Output<String> dedicatedClusterId) {
            $.dedicatedClusterId = dedicatedClusterId;
            return this;
        }

        /**
         * @param dedicatedClusterId When the ID of the dedicated cluster is input, the task is scheduled to the corresponding cluster.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedClusterId(String dedicatedClusterId) {
            return dedicatedClusterId(Output.of(dedicatedClusterId));
        }

        /**
         * @param delayNotice The delay notice. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder delayNotice(@Nullable Output<Boolean> delayNotice) {
            $.delayNotice = delayNotice;
            return this;
        }

        /**
         * @param delayNotice The delay notice. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder delayNotice(Boolean delayNotice) {
            return delayNotice(Output.of(delayNotice));
        }

        /**
         * @param delayPhone The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
         * 
         * @return builder
         * 
         */
        public Builder delayPhone(@Nullable Output<String> delayPhone) {
            $.delayPhone = delayPhone;
            return this;
        }

        /**
         * @param delayPhone The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
         * 
         * @return builder
         * 
         */
        public Builder delayPhone(String delayPhone) {
            return delayPhone(Output.of(delayPhone));
        }

        /**
         * @param delayRuleTime The delay rule time. When `delay_notice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
         * 
         * @return builder
         * 
         */
        public Builder delayRuleTime(@Nullable Output<String> delayRuleTime) {
            $.delayRuleTime = delayRuleTime;
            return this;
        }

        /**
         * @param delayRuleTime The delay rule time. When `delay_notice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
         * 
         * @return builder
         * 
         */
        public Builder delayRuleTime(String delayRuleTime) {
            return delayRuleTime(Output.of(delayRuleTime));
        }

        /**
         * @param destinationEndpointDatabaseName The name of the database to which the migration object belongs in the target instance. Note: when the target instance or target database type is PolarDB O engine, AnalyticDB PostgreSQL, PostgreSQL, MongoDB database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointDatabaseName(@Nullable Output<String> destinationEndpointDatabaseName) {
            $.destinationEndpointDatabaseName = destinationEndpointDatabaseName;
            return this;
        }

        /**
         * @param destinationEndpointDatabaseName The name of the database to which the migration object belongs in the target instance. Note: when the target instance or target database type is PolarDB O engine, AnalyticDB PostgreSQL, PostgreSQL, MongoDB database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointDatabaseName(String destinationEndpointDatabaseName) {
            return destinationEndpointDatabaseName(Output.of(destinationEndpointDatabaseName));
        }

        /**
         * @param destinationEndpointEngineName The type of destination database. The default value is MYSQL. For the correspondence between supported target libraries and source libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the target instance is KAFKA or MONGODB, you also need to pass in some information in the reserved parameter `reserve`. For the configuration method, see the description of `reserve` parameters. Valid values: `ADS`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(@Nullable Output<String> destinationEndpointEngineName) {
            $.destinationEndpointEngineName = destinationEndpointEngineName;
            return this;
        }

        /**
         * @param destinationEndpointEngineName The type of destination database. The default value is MYSQL. For the correspondence between supported target libraries and source libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the target instance is KAFKA or MONGODB, you also need to pass in some information in the reserved parameter `reserve`. For the configuration method, see the description of `reserve` parameters. Valid values: `ADS`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(String destinationEndpointEngineName) {
            return destinationEndpointEngineName(Output.of(destinationEndpointEngineName));
        }

        /**
         * @param destinationEndpointInstanceId The ID of destination instance. If the target instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the target instance is a self-built database, the value of this parameter changes according to the value of `destination_endpoint_instance_type`. For example, the value of `destination_endpoint_instance_type` is:
         * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
         * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
         * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointInstanceId(@Nullable Output<String> destinationEndpointInstanceId) {
            $.destinationEndpointInstanceId = destinationEndpointInstanceId;
            return this;
        }

        /**
         * @param destinationEndpointInstanceId The ID of destination instance. If the target instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the target instance is a self-built database, the value of this parameter changes according to the value of `destination_endpoint_instance_type`. For example, the value of `destination_endpoint_instance_type` is:
         * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
         * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
         * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointInstanceId(String destinationEndpointInstanceId) {
            return destinationEndpointInstanceId(Output.of(destinationEndpointInstanceId));
        }

        /**
         * @param destinationEndpointInstanceType The type of destination instance. If the target instance is a PolarDB O engine cluster, the target instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. If the target instance is the Kafka version of Message Queuing, the target instance type needs to be `ECS` or `EXPRESS` as a self-built database, and access via ECS or dedicated line. For the correspondence between supported targets and source instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the target instance is a self-built database, you also need to perform corresponding preparations, please refer to the [overview of preparations](https://help.aliyun.com/document_detail/146958.htm). Valid values: `ADS`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointInstanceType(@Nullable Output<String> destinationEndpointInstanceType) {
            $.destinationEndpointInstanceType = destinationEndpointInstanceType;
            return this;
        }

        /**
         * @param destinationEndpointInstanceType The type of destination instance. If the target instance is a PolarDB O engine cluster, the target instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. If the target instance is the Kafka version of Message Queuing, the target instance type needs to be `ECS` or `EXPRESS` as a self-built database, and access via ECS or dedicated line. For the correspondence between supported targets and source instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the target instance is a self-built database, you also need to perform corresponding preparations, please refer to the [overview of preparations](https://help.aliyun.com/document_detail/146958.htm). Valid values: `ADS`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointInstanceType(String destinationEndpointInstanceType) {
            return destinationEndpointInstanceType(Output.of(destinationEndpointInstanceType));
        }

        /**
         * @param destinationEndpointIp The IP of source endpoint. When `destination_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointIp(@Nullable Output<String> destinationEndpointIp) {
            $.destinationEndpointIp = destinationEndpointIp;
            return this;
        }

        /**
         * @param destinationEndpointIp The IP of source endpoint. When `destination_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointIp(String destinationEndpointIp) {
            return destinationEndpointIp(Output.of(destinationEndpointIp));
        }

        /**
         * @param destinationEndpointOracleSid The SID of Oracle database. Note: when the value of DestinationEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointOracleSid(@Nullable Output<String> destinationEndpointOracleSid) {
            $.destinationEndpointOracleSid = destinationEndpointOracleSid;
            return this;
        }

        /**
         * @param destinationEndpointOracleSid The SID of Oracle database. Note: when the value of DestinationEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointOracleSid(String destinationEndpointOracleSid) {
            return destinationEndpointOracleSid(Output.of(destinationEndpointOracleSid));
        }

        /**
         * @param destinationEndpointOwnerId The ID of the Alibaba Cloud account to which the target RDS MySQL instance belongs. can be configured only when the target instance is RDS MySQL. This parameter is used to migrate or synchronize data across Alibaba Cloud accounts. You also need to enter the **destinationendpointrle** parameter.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointOwnerId(@Nullable Output<String> destinationEndpointOwnerId) {
            $.destinationEndpointOwnerId = destinationEndpointOwnerId;
            return this;
        }

        /**
         * @param destinationEndpointOwnerId The ID of the Alibaba Cloud account to which the target RDS MySQL instance belongs. can be configured only when the target instance is RDS MySQL. This parameter is used to migrate or synchronize data across Alibaba Cloud accounts. You also need to enter the **destinationendpointrle** parameter.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointOwnerId(String destinationEndpointOwnerId) {
            return destinationEndpointOwnerId(Output.of(destinationEndpointOwnerId));
        }

        /**
         * @param destinationEndpointPassword The password of database account.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointPassword(@Nullable Output<String> destinationEndpointPassword) {
            $.destinationEndpointPassword = destinationEndpointPassword;
            return this;
        }

        /**
         * @param destinationEndpointPassword The password of database account.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointPassword(String destinationEndpointPassword) {
            return destinationEndpointPassword(Output.of(destinationEndpointPassword));
        }

        /**
         * @param destinationEndpointPort The port of source endpoint. When the target instance is a self-built database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointPort(@Nullable Output<String> destinationEndpointPort) {
            $.destinationEndpointPort = destinationEndpointPort;
            return this;
        }

        /**
         * @param destinationEndpointPort The port of source endpoint. When the target instance is a self-built database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointPort(String destinationEndpointPort) {
            return destinationEndpointPort(Output.of(destinationEndpointPort));
        }

        /**
         * @param destinationEndpointRegion The region of destination instance. For the target instance region, please refer to the [list of supported regions](https://help.aliyun.com/document_detail/141033.htm). Note: if the target is an Alibaba Cloud database, this parameter must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRegion(@Nullable Output<String> destinationEndpointRegion) {
            $.destinationEndpointRegion = destinationEndpointRegion;
            return this;
        }

        /**
         * @param destinationEndpointRegion The region of destination instance. For the target instance region, please refer to the [list of supported regions](https://help.aliyun.com/document_detail/141033.htm). Note: if the target is an Alibaba Cloud database, this parameter must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRegion(String destinationEndpointRegion) {
            return destinationEndpointRegion(Output.of(destinationEndpointRegion));
        }

        /**
         * @param destinationEndpointRole The role name of the Alibaba Cloud account to which the target instance belongs. This parameter must be entered when data migration or synchronization across Alibaba Cloud accounts is performed. For the permissions and authorization methods required by this role.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRole(@Nullable Output<String> destinationEndpointRole) {
            $.destinationEndpointRole = destinationEndpointRole;
            return this;
        }

        /**
         * @param destinationEndpointRole The role name of the Alibaba Cloud account to which the target instance belongs. This parameter must be entered when data migration or synchronization across Alibaba Cloud accounts is performed. For the permissions and authorization methods required by this role.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRole(String destinationEndpointRole) {
            return destinationEndpointRole(Output.of(destinationEndpointRole));
        }

        /**
         * @param destinationEndpointUserName The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointUserName(@Nullable Output<String> destinationEndpointUserName) {
            $.destinationEndpointUserName = destinationEndpointUserName;
            return this;
        }

        /**
         * @param destinationEndpointUserName The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointUserName(String destinationEndpointUserName) {
            return destinationEndpointUserName(Output.of(destinationEndpointUserName));
        }

        /**
         * @param dtsBisLabel The environment label of the DTS instance. The value is: **normal**, **online**.
         * 
         * &gt; **NOTE:** From the status of `NotStarted` to `Synchronizing`, the resource goes through the `Prechecking` and `Initializing` phases. Because of the `Initializing` phase takes too long, and once the resource passes to the status of `Prechecking`, it can be considered that the task can be executed normally. Therefore, we treat the status of `Initializing` as an equivalent to `Synchronizing`.
         * 
         * &gt; **NOTE:** If you want to upgrade the synchronization job specifications by the property `instance_class`, you must also modify the property `instance_class` of it&#39;s instance to keep them consistent.
         * 
         * @return builder
         * 
         */
        public Builder dtsBisLabel(@Nullable Output<String> dtsBisLabel) {
            $.dtsBisLabel = dtsBisLabel;
            return this;
        }

        /**
         * @param dtsBisLabel The environment label of the DTS instance. The value is: **normal**, **online**.
         * 
         * &gt; **NOTE:** From the status of `NotStarted` to `Synchronizing`, the resource goes through the `Prechecking` and `Initializing` phases. Because of the `Initializing` phase takes too long, and once the resource passes to the status of `Prechecking`, it can be considered that the task can be executed normally. Therefore, we treat the status of `Initializing` as an equivalent to `Synchronizing`.
         * 
         * &gt; **NOTE:** If you want to upgrade the synchronization job specifications by the property `instance_class`, you must also modify the property `instance_class` of it&#39;s instance to keep them consistent.
         * 
         * @return builder
         * 
         */
        public Builder dtsBisLabel(String dtsBisLabel) {
            return dtsBisLabel(Output.of(dtsBisLabel));
        }

        /**
         * @param dtsInstanceId The ID of synchronization instance, it must be an ID of `alicloud.dts.SynchronizationInstance`.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(@Nullable Output<String> dtsInstanceId) {
            $.dtsInstanceId = dtsInstanceId;
            return this;
        }

        /**
         * @param dtsInstanceId The ID of synchronization instance, it must be an ID of `alicloud.dts.SynchronizationInstance`.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(String dtsInstanceId) {
            return dtsInstanceId(Output.of(dtsInstanceId));
        }

        /**
         * @param dtsJobName The name of synchronization job.
         * 
         * @return builder
         * 
         */
        public Builder dtsJobName(@Nullable Output<String> dtsJobName) {
            $.dtsJobName = dtsJobName;
            return this;
        }

        /**
         * @param dtsJobName The name of synchronization job.
         * 
         * @return builder
         * 
         */
        public Builder dtsJobName(String dtsJobName) {
            return dtsJobName(Output.of(dtsJobName));
        }

        /**
         * @param errorNotice The error notice. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder errorNotice(@Nullable Output<Boolean> errorNotice) {
            $.errorNotice = errorNotice;
            return this;
        }

        /**
         * @param errorNotice The error notice. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder errorNotice(Boolean errorNotice) {
            return errorNotice(Output.of(errorNotice));
        }

        /**
         * @param errorPhone The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
         * 
         * @return builder
         * 
         */
        public Builder errorPhone(@Nullable Output<String> errorPhone) {
            $.errorPhone = errorPhone;
            return this;
        }

        /**
         * @param errorPhone The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
         * 
         * @return builder
         * 
         */
        public Builder errorPhone(String errorPhone) {
            return errorPhone(Output.of(errorPhone));
        }

        /**
         * @param instanceClass The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param reserve DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
         * 
         * @return builder
         * 
         */
        public Builder reserve(@Nullable Output<String> reserve) {
            $.reserve = reserve;
            return this;
        }

        /**
         * @param reserve DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
         * 
         * @return builder
         * 
         */
        public Builder reserve(String reserve) {
            return reserve(Output.of(reserve));
        }

        /**
         * @param sourceEndpointDatabaseName The name of the database to which the migration object belongs in the source instance. Note: this parameter is only available and must be passed in when the source instance, or the database type of the source instance is PolarDB O engine, PostgreSQL, or MongoDB database.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointDatabaseName(@Nullable Output<String> sourceEndpointDatabaseName) {
            $.sourceEndpointDatabaseName = sourceEndpointDatabaseName;
            return this;
        }

        /**
         * @param sourceEndpointDatabaseName The name of the database to which the migration object belongs in the source instance. Note: this parameter is only available and must be passed in when the source instance, or the database type of the source instance is PolarDB O engine, PostgreSQL, or MongoDB database.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointDatabaseName(String sourceEndpointDatabaseName) {
            return sourceEndpointDatabaseName(Output.of(sourceEndpointDatabaseName));
        }

        /**
         * @param sourceEndpointEngineName The type of source database. The default value is `MySQL`. For the correspondence between supported source libraries and target libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the source instance is `MONGODB`, you also need to pass in some information in the reserved parameter `Reserve`, for the configuration method, see the description of Reserve parameters. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(@Nullable Output<String> sourceEndpointEngineName) {
            $.sourceEndpointEngineName = sourceEndpointEngineName;
            return this;
        }

        /**
         * @param sourceEndpointEngineName The type of source database. The default value is `MySQL`. For the correspondence between supported source libraries and target libraries, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the database type of the source instance is `MONGODB`, you also need to pass in some information in the reserved parameter `Reserve`, for the configuration method, see the description of Reserve parameters. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(String sourceEndpointEngineName) {
            return sourceEndpointEngineName(Output.of(sourceEndpointEngineName));
        }

        /**
         * @param sourceEndpointInstanceId The ID of source instance. If the source instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the source instance is a self-built database, the value of this parameter changes according to the value of `source_endpoint_instance_type`. For example, the value of `source_endpoint_instance_type` is:
         * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
         * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
         * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointInstanceId(@Nullable Output<String> sourceEndpointInstanceId) {
            $.sourceEndpointInstanceId = sourceEndpointInstanceId;
            return this;
        }

        /**
         * @param sourceEndpointInstanceId The ID of source instance. If the source instance is a cloud database (such as RDS MySQL), you need to pass in the instance ID of the cloud database (such as the instance ID of RDS MySQL). If the source instance is a self-built database, the value of this parameter changes according to the value of `source_endpoint_instance_type`. For example, the value of `source_endpoint_instance_type` is:
         * ** `ECS`, then this parameter needs to be passed into the instance ID of ECS.
         * ** `DG`, then this parameter needs to be passed into the ID of database gateway.
         * ** `EXPRESS`, `CEN`, then this parameter needs to be passed in the ID of VPC that has been interconnected with the source database. **Note**: when the value is `CEN`, you also need to pass in the ID of CEN instance in the cloud enterprise network with the reserved parameter `reserve`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointInstanceId(String sourceEndpointInstanceId) {
            return sourceEndpointInstanceId(Output.of(sourceEndpointInstanceId));
        }

        /**
         * @param sourceEndpointInstanceType The type of source instance. If the source instance is a `PolarDB O` engine cluster, the source instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. For the correspondence between supported source and target instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the source instance is a self-built database, you also need to perform corresponding preparations, for details, see [Preparations Overview](https://help.aliyun.com/document_detail/146958.htm). Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointInstanceType(@Nullable Output<String> sourceEndpointInstanceType) {
            $.sourceEndpointInstanceType = sourceEndpointInstanceType;
            return this;
        }

        /**
         * @param sourceEndpointInstanceType The type of source instance. If the source instance is a `PolarDB O` engine cluster, the source instance type needs to be `OTHER` or `EXPRESS` as a self-built database, and access via public IP or dedicated line. For the correspondence between supported source and target instances, see [Supported Databases](https://help.aliyun.com/document_detail/131497.htm). When the source instance is a self-built database, you also need to perform corresponding preparations, for details, see [Preparations Overview](https://help.aliyun.com/document_detail/146958.htm). Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointInstanceType(String sourceEndpointInstanceType) {
            return sourceEndpointInstanceType(Output.of(sourceEndpointInstanceType));
        }

        /**
         * @param sourceEndpointIp The IP of source endpoint. When `source_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointIp(@Nullable Output<String> sourceEndpointIp) {
            $.sourceEndpointIp = sourceEndpointIp;
            return this;
        }

        /**
         * @param sourceEndpointIp The IP of source endpoint. When `source_endpoint_instance_type` is `OTHER`, `EXPRESS`, `DG`, `CEN`, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointIp(String sourceEndpointIp) {
            return sourceEndpointIp(Output.of(sourceEndpointIp));
        }

        /**
         * @param sourceEndpointOracleSid The SID of Oracle database. When the value of SourceEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointOracleSid(@Nullable Output<String> sourceEndpointOracleSid) {
            $.sourceEndpointOracleSid = sourceEndpointOracleSid;
            return this;
        }

        /**
         * @param sourceEndpointOracleSid The SID of Oracle database. When the value of SourceEndpointEngineName is Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointOracleSid(String sourceEndpointOracleSid) {
            return sourceEndpointOracleSid(Output.of(sourceEndpointOracleSid));
        }

        /**
         * @param sourceEndpointOwnerId The ID of Alibaba Cloud account to which the source instance belongs. Note: passing in this parameter means performing data migration or synchronization across Alibaba Cloud accounts, and you also need to pass in the `source_endpoint_role` parameter.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointOwnerId(@Nullable Output<String> sourceEndpointOwnerId) {
            $.sourceEndpointOwnerId = sourceEndpointOwnerId;
            return this;
        }

        /**
         * @param sourceEndpointOwnerId The ID of Alibaba Cloud account to which the source instance belongs. Note: passing in this parameter means performing data migration or synchronization across Alibaba Cloud accounts, and you also need to pass in the `source_endpoint_role` parameter.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointOwnerId(String sourceEndpointOwnerId) {
            return sourceEndpointOwnerId(Output.of(sourceEndpointOwnerId));
        }

        /**
         * @param sourceEndpointPassword The password of database account.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointPassword(@Nullable Output<String> sourceEndpointPassword) {
            $.sourceEndpointPassword = sourceEndpointPassword;
            return this;
        }

        /**
         * @param sourceEndpointPassword The password of database account.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointPassword(String sourceEndpointPassword) {
            return sourceEndpointPassword(Output.of(sourceEndpointPassword));
        }

        /**
         * @param sourceEndpointPort The port of source endpoint. When the source instance is a self-built database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointPort(@Nullable Output<String> sourceEndpointPort) {
            $.sourceEndpointPort = sourceEndpointPort;
            return this;
        }

        /**
         * @param sourceEndpointPort The port of source endpoint. When the source instance is a self-built database, this parameter is available and must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointPort(String sourceEndpointPort) {
            return sourceEndpointPort(Output.of(sourceEndpointPort));
        }

        /**
         * @param sourceEndpointRegion Source instance area, please refer to the [list of supported areas](https://help.aliyun.com/document_detail/141033.htm) for details. Note if the source is an Alibaba Cloud database, this parameter must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRegion(@Nullable Output<String> sourceEndpointRegion) {
            $.sourceEndpointRegion = sourceEndpointRegion;
            return this;
        }

        /**
         * @param sourceEndpointRegion Source instance area, please refer to the [list of supported areas](https://help.aliyun.com/document_detail/141033.htm) for details. Note if the source is an Alibaba Cloud database, this parameter must be passed in.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRegion(String sourceEndpointRegion) {
            return sourceEndpointRegion(Output.of(sourceEndpointRegion));
        }

        /**
         * @param sourceEndpointRole The name of the role configured for the cloud account to which the source instance belongs. Note: this parameter must be passed in when performing cross Alibaba Cloud account data migration or synchronization. For the permissions and authorization methods required by this role, please refer to [How to configure RAM authorization when cross-Alibaba Cloud account data migration or synchronization](https://help.aliyun.com/document_detail/48468.htm).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRole(@Nullable Output<String> sourceEndpointRole) {
            $.sourceEndpointRole = sourceEndpointRole;
            return this;
        }

        /**
         * @param sourceEndpointRole The name of the role configured for the cloud account to which the source instance belongs. Note: this parameter must be passed in when performing cross Alibaba Cloud account data migration or synchronization. For the permissions and authorization methods required by this role, please refer to [How to configure RAM authorization when cross-Alibaba Cloud account data migration or synchronization](https://help.aliyun.com/document_detail/48468.htm).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRole(String sourceEndpointRole) {
            return sourceEndpointRole(Output.of(sourceEndpointRole));
        }

        /**
         * @param sourceEndpointUserName The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointUserName(@Nullable Output<String> sourceEndpointUserName) {
            $.sourceEndpointUserName = sourceEndpointUserName;
            return this;
        }

        /**
         * @param sourceEndpointUserName The username of database account. Note: in most cases, you need to pass in the database account of the source library. The permissions required for migrating or synchronizing different databases are different. For specific permission requirements, see [Preparing database accounts for data migration](https://help.aliyun.com/document_detail/175878.htm) and [Preparing database accounts for data synchronization](https://help.aliyun.com/document_detail/213152.htm).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointUserName(String sourceEndpointUserName) {
            return sourceEndpointUserName(Output.of(sourceEndpointUserName));
        }

        /**
         * @param sourceEndpointVswitchId Data Delivery link switch instance id
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointVswitchId(@Nullable Output<String> sourceEndpointVswitchId) {
            $.sourceEndpointVswitchId = sourceEndpointVswitchId;
            return this;
        }

        /**
         * @param sourceEndpointVswitchId Data Delivery link switch instance id
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointVswitchId(String sourceEndpointVswitchId) {
            return sourceEndpointVswitchId(Output.of(sourceEndpointVswitchId));
        }

        /**
         * @param status The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param structureInitialization Whether to perform library table structure migration or initialization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder structureInitialization(@Nullable Output<Boolean> structureInitialization) {
            $.structureInitialization = structureInitialization;
            return this;
        }

        /**
         * @param structureInitialization Whether to perform library table structure migration or initialization. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder structureInitialization(Boolean structureInitialization) {
            return structureInitialization(Output.of(structureInitialization));
        }

        /**
         * @param synchronizationDirection Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `sync_architecture` of the `alicloud.dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
         * 
         * @return builder
         * 
         */
        public Builder synchronizationDirection(@Nullable Output<String> synchronizationDirection) {
            $.synchronizationDirection = synchronizationDirection;
            return this;
        }

        /**
         * @param synchronizationDirection Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `sync_architecture` of the `alicloud.dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
         * 
         * @return builder
         * 
         */
        public Builder synchronizationDirection(String synchronizationDirection) {
            return synchronizationDirection(Output.of(synchronizationDirection));
        }

        public SynchronizationJobState build() {
            return $;
        }
    }

}
