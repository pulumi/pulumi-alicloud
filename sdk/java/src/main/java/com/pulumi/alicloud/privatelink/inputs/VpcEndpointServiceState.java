// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.privatelink.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointServiceState extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointServiceState Empty = new VpcEndpointServiceState();

    /**
     * The IP address version.
     * 
     */
    @Import(name="addressIpVersion")
    private @Nullable Output<String> addressIpVersion;

    /**
     * @return The IP address version.
     * 
     */
    public Optional<Output<String>> addressIpVersion() {
        return Optional.ofNullable(this.addressIpVersion);
    }

    /**
     * Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
     * 
     */
    @Import(name="autoAcceptConnection")
    private @Nullable Output<Boolean> autoAcceptConnection;

    /**
     * @return Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
     * 
     */
    public Optional<Output<Boolean>> autoAcceptConnection() {
        return Optional.ofNullable(this.autoAcceptConnection);
    }

    /**
     * The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
     * 
     */
    @Import(name="connectBandwidth")
    private @Nullable Output<Integer> connectBandwidth;

    /**
     * @return The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
     * 
     */
    public Optional<Output<Integer>> connectBandwidth() {
        return Optional.ofNullable(this.connectBandwidth);
    }

    /**
     * The time when the endpoint service was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the endpoint service was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Specifies whether to perform only a dry run, without performing the actual request.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to perform only a dry run, without performing the actual request.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The payer of the endpoint service. Valid values:
     * - `Endpoint`: the service consumer.
     * - `EndpointService`: the service provider.
     * 
     */
    @Import(name="payer")
    private @Nullable Output<String> payer;

    /**
     * @return The payer of the endpoint service. Valid values:
     * - `Endpoint`: the service consumer.
     * - `EndpointService`: the service provider.
     * 
     */
    public Optional<Output<String>> payer() {
        return Optional.ofNullable(this.payer);
    }

    /**
     * The ID of the region to which the endpoint service belongs.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The ID of the region to which the endpoint service belongs.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The resource group ID.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The resource group ID.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The service state of the endpoint service.
     * 
     */
    @Import(name="serviceBusinessStatus")
    private @Nullable Output<String> serviceBusinessStatus;

    /**
     * @return The service state of the endpoint service.
     * 
     */
    public Optional<Output<String>> serviceBusinessStatus() {
        return Optional.ofNullable(this.serviceBusinessStatus);
    }

    /**
     * The description of the endpoint service.
     * 
     */
    @Import(name="serviceDescription")
    private @Nullable Output<String> serviceDescription;

    /**
     * @return The description of the endpoint service.
     * 
     */
    public Optional<Output<String>> serviceDescription() {
        return Optional.ofNullable(this.serviceDescription);
    }

    /**
     * The domain name of the endpoint service.
     * 
     */
    @Import(name="serviceDomain")
    private @Nullable Output<String> serviceDomain;

    /**
     * @return The domain name of the endpoint service.
     * 
     */
    public Optional<Output<String>> serviceDomain() {
        return Optional.ofNullable(this.serviceDomain);
    }

    /**
     * The service resource type. Value:
     * 
     */
    @Import(name="serviceResourceType")
    private @Nullable Output<String> serviceResourceType;

    /**
     * @return The service resource type. Value:
     * 
     */
    public Optional<Output<String>> serviceResourceType() {
        return Optional.ofNullable(this.serviceResourceType);
    }

    /**
     * Specifies whether to enable IPv6 for the endpoint service. Valid values:
     * 
     */
    @Import(name="serviceSupportIpv6")
    private @Nullable Output<Boolean> serviceSupportIpv6;

    /**
     * @return Specifies whether to enable IPv6 for the endpoint service. Valid values:
     * 
     */
    public Optional<Output<Boolean>> serviceSupportIpv6() {
        return Optional.ofNullable(this.serviceSupportIpv6);
    }

    /**
     * The state of the endpoint service.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The state of the endpoint service.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The list of tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The list of tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of the endpoint service.
     * 
     */
    @Import(name="vpcEndpointServiceName")
    private @Nullable Output<String> vpcEndpointServiceName;

    /**
     * @return The name of the endpoint service.
     * 
     */
    public Optional<Output<String>> vpcEndpointServiceName() {
        return Optional.ofNullable(this.vpcEndpointServiceName);
    }

    /**
     * Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
     * 
     */
    @Import(name="zoneAffinityEnabled")
    private @Nullable Output<Boolean> zoneAffinityEnabled;

    /**
     * @return Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
     * 
     */
    public Optional<Output<Boolean>> zoneAffinityEnabled() {
        return Optional.ofNullable(this.zoneAffinityEnabled);
    }

    private VpcEndpointServiceState() {}

    private VpcEndpointServiceState(VpcEndpointServiceState $) {
        this.addressIpVersion = $.addressIpVersion;
        this.autoAcceptConnection = $.autoAcceptConnection;
        this.connectBandwidth = $.connectBandwidth;
        this.createTime = $.createTime;
        this.dryRun = $.dryRun;
        this.payer = $.payer;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.serviceBusinessStatus = $.serviceBusinessStatus;
        this.serviceDescription = $.serviceDescription;
        this.serviceDomain = $.serviceDomain;
        this.serviceResourceType = $.serviceResourceType;
        this.serviceSupportIpv6 = $.serviceSupportIpv6;
        this.status = $.status;
        this.tags = $.tags;
        this.vpcEndpointServiceName = $.vpcEndpointServiceName;
        this.zoneAffinityEnabled = $.zoneAffinityEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointServiceState $;

        public Builder() {
            $ = new VpcEndpointServiceState();
        }

        public Builder(VpcEndpointServiceState defaults) {
            $ = new VpcEndpointServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressIpVersion The IP address version.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(@Nullable Output<String> addressIpVersion) {
            $.addressIpVersion = addressIpVersion;
            return this;
        }

        /**
         * @param addressIpVersion The IP address version.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(String addressIpVersion) {
            return addressIpVersion(Output.of(addressIpVersion));
        }

        /**
         * @param autoAcceptConnection Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoAcceptConnection(@Nullable Output<Boolean> autoAcceptConnection) {
            $.autoAcceptConnection = autoAcceptConnection;
            return this;
        }

        /**
         * @param autoAcceptConnection Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoAcceptConnection(Boolean autoAcceptConnection) {
            return autoAcceptConnection(Output.of(autoAcceptConnection));
        }

        /**
         * @param connectBandwidth The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder connectBandwidth(@Nullable Output<Integer> connectBandwidth) {
            $.connectBandwidth = connectBandwidth;
            return this;
        }

        /**
         * @param connectBandwidth The default bandwidth of the endpoint connection. Valid values: 100 to 10240. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder connectBandwidth(Integer connectBandwidth) {
            return connectBandwidth(Output.of(connectBandwidth));
        }

        /**
         * @param createTime The time when the endpoint service was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the endpoint service was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param payer The payer of the endpoint service. Valid values:
         * - `Endpoint`: the service consumer.
         * - `EndpointService`: the service provider.
         * 
         * @return builder
         * 
         */
        public Builder payer(@Nullable Output<String> payer) {
            $.payer = payer;
            return this;
        }

        /**
         * @param payer The payer of the endpoint service. Valid values:
         * - `Endpoint`: the service consumer.
         * - `EndpointService`: the service provider.
         * 
         * @return builder
         * 
         */
        public Builder payer(String payer) {
            return payer(Output.of(payer));
        }

        /**
         * @param regionId The ID of the region to which the endpoint service belongs.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The ID of the region to which the endpoint service belongs.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param serviceBusinessStatus The service state of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusinessStatus(@Nullable Output<String> serviceBusinessStatus) {
            $.serviceBusinessStatus = serviceBusinessStatus;
            return this;
        }

        /**
         * @param serviceBusinessStatus The service state of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusinessStatus(String serviceBusinessStatus) {
            return serviceBusinessStatus(Output.of(serviceBusinessStatus));
        }

        /**
         * @param serviceDescription The description of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceDescription(@Nullable Output<String> serviceDescription) {
            $.serviceDescription = serviceDescription;
            return this;
        }

        /**
         * @param serviceDescription The description of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceDescription(String serviceDescription) {
            return serviceDescription(Output.of(serviceDescription));
        }

        /**
         * @param serviceDomain The domain name of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceDomain(@Nullable Output<String> serviceDomain) {
            $.serviceDomain = serviceDomain;
            return this;
        }

        /**
         * @param serviceDomain The domain name of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder serviceDomain(String serviceDomain) {
            return serviceDomain(Output.of(serviceDomain));
        }

        /**
         * @param serviceResourceType The service resource type. Value:
         * 
         * @return builder
         * 
         */
        public Builder serviceResourceType(@Nullable Output<String> serviceResourceType) {
            $.serviceResourceType = serviceResourceType;
            return this;
        }

        /**
         * @param serviceResourceType The service resource type. Value:
         * 
         * @return builder
         * 
         */
        public Builder serviceResourceType(String serviceResourceType) {
            return serviceResourceType(Output.of(serviceResourceType));
        }

        /**
         * @param serviceSupportIpv6 Specifies whether to enable IPv6 for the endpoint service. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder serviceSupportIpv6(@Nullable Output<Boolean> serviceSupportIpv6) {
            $.serviceSupportIpv6 = serviceSupportIpv6;
            return this;
        }

        /**
         * @param serviceSupportIpv6 Specifies whether to enable IPv6 for the endpoint service. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder serviceSupportIpv6(Boolean serviceSupportIpv6) {
            return serviceSupportIpv6(Output.of(serviceSupportIpv6));
        }

        /**
         * @param status The state of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The state of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The list of tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The list of tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcEndpointServiceName The name of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceName(@Nullable Output<String> vpcEndpointServiceName) {
            $.vpcEndpointServiceName = vpcEndpointServiceName;
            return this;
        }

        /**
         * @param vpcEndpointServiceName The name of the endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceName(String vpcEndpointServiceName) {
            return vpcEndpointServiceName(Output.of(vpcEndpointServiceName));
        }

        /**
         * @param zoneAffinityEnabled Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder zoneAffinityEnabled(@Nullable Output<Boolean> zoneAffinityEnabled) {
            $.zoneAffinityEnabled = zoneAffinityEnabled;
            return this;
        }

        /**
         * @param zoneAffinityEnabled Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder zoneAffinityEnabled(Boolean zoneAffinityEnabled) {
            return zoneAffinityEnabled(Output.of(zoneAffinityEnabled));
        }

        public VpcEndpointServiceState build() {
            return $;
        }
    }

}
