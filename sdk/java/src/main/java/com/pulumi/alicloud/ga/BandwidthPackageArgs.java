// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BandwidthPackageArgs extends com.pulumi.resources.ResourceArgs {

    public static final BandwidthPackageArgs Empty = new BandwidthPackageArgs();

    /**
     * Whether to pay automatically. Valid values:
     * 
     */
    @Import(name="autoPay")
    private @Nullable Output<Boolean> autoPay;

    /**
     * @return Whether to pay automatically. Valid values:
     * 
     */
    public Optional<Output<Boolean>> autoPay() {
        return Optional.ofNullable(this.autoPay);
    }

    /**
     * Auto renewal period of a bandwidth packet, in the unit of month. The value range is 1-12.
     * 
     */
    @Import(name="autoRenewDuration")
    private @Nullable Output<Integer> autoRenewDuration;

    /**
     * @return Auto renewal period of a bandwidth packet, in the unit of month. The value range is 1-12.
     * 
     */
    public Optional<Output<Integer>> autoRenewDuration() {
        return Optional.ofNullable(this.autoRenewDuration);
    }

    /**
     * Whether use vouchers. Default value: `false`. Valid values:
     * 
     */
    @Import(name="autoUseCoupon")
    private @Nullable Output<Boolean> autoUseCoupon;

    /**
     * @return Whether use vouchers. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> autoUseCoupon() {
        return Optional.ofNullable(this.autoUseCoupon);
    }

    /**
     * The bandwidth value of bandwidth packet.
     * 
     */
    @Import(name="bandwidth", required=true)
    private Output<Integer> bandwidth;

    /**
     * @return The bandwidth value of bandwidth packet.
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }

    /**
     * The name of the bandwidth packet.
     * 
     */
    @Import(name="bandwidthPackageName")
    private @Nullable Output<String> bandwidthPackageName;

    /**
     * @return The name of the bandwidth packet.
     * 
     */
    public Optional<Output<String>> bandwidthPackageName() {
        return Optional.ofNullable(this.bandwidthPackageName);
    }

    /**
     * The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`. If `type` is set to `Basic`, this parameter is required.
     * &gt; **NOTE:** At present, only basic can be configured to enhanced, but not enhanced and advanced to other types of accelerated bandwidth.
     * 
     */
    @Import(name="bandwidthType")
    private @Nullable Output<String> bandwidthType;

    /**
     * @return The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`. If `type` is set to `Basic`, this parameter is required.
     * &gt; **NOTE:** At present, only basic can be configured to enhanced, but not enhanced and advanced to other types of accelerated bandwidth.
     * 
     */
    public Optional<Output<String>> bandwidthType() {
        return Optional.ofNullable(this.bandwidthType);
    }

    /**
     * The billing type. Valid values: `PayBy95`, `PayByTraffic`.
     * 
     */
    @Import(name="billingType")
    private @Nullable Output<String> billingType;

    /**
     * @return The billing type. Valid values: `PayBy95`, `PayByTraffic`.
     * 
     */
    public Optional<Output<String>> billingType() {
        return Optional.ofNullable(this.billingType);
    }

    /**
     * Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value: `China-mainland`.
     * 
     */
    @Import(name="cbnGeographicRegionIda")
    private @Nullable Output<String> cbnGeographicRegionIda;

    /**
     * @return Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value: `China-mainland`.
     * 
     */
    public Optional<Output<String>> cbnGeographicRegionIda() {
        return Optional.ofNullable(this.cbnGeographicRegionIda);
    }

    /**
     * Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value: `Global`.
     * 
     */
    @Import(name="cbnGeographicRegionIdb")
    private @Nullable Output<String> cbnGeographicRegionIdb;

    /**
     * @return Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value: `Global`.
     * 
     */
    public Optional<Output<String>> cbnGeographicRegionIdb() {
        return Optional.ofNullable(this.cbnGeographicRegionIdb);
    }

    /**
     * The description of bandwidth package.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of bandwidth package.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The subscription duration. **NOTE:** The ForceNew attribute has be removed from version 1.148.0. If `payment_type` is set to `Subscription`, this parameter is required.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return The subscription duration. **NOTE:** The ForceNew attribute has be removed from version 1.148.0. If `payment_type` is set to `Subscription`, this parameter is required.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * The payment type of the bandwidth. Default value: `Subscription`. Valid values: `PayAsYouGo`, `Subscription`.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The payment type of the bandwidth. Default value: `Subscription`. Valid values: `PayAsYouGo`, `Subscription`.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * The code of the coupon. **NOTE:** The `promotion_option_no` takes effect only for accounts registered on the international site (alibabacloud.com).
     * 
     */
    @Import(name="promotionOptionNo")
    private @Nullable Output<String> promotionOptionNo;

    /**
     * @return The code of the coupon. **NOTE:** The `promotion_option_no` takes effect only for accounts registered on the international site (alibabacloud.com).
     * 
     */
    public Optional<Output<String>> promotionOptionNo() {
        return Optional.ofNullable(this.promotionOptionNo);
    }

    /**
     * The minimum percentage for the pay-by-95th-percentile metering method. Valid values: `30` to `100`.
     * 
     */
    @Import(name="ratio")
    private @Nullable Output<Integer> ratio;

    /**
     * @return The minimum percentage for the pay-by-95th-percentile metering method. Valid values: `30` to `100`.
     * 
     */
    public Optional<Output<Integer>> ratio() {
        return Optional.ofNullable(this.ratio);
    }

    /**
     * Whether to renew a bandwidth packet. automatically or not. Valid values:
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Whether to renew a bandwidth packet. automatically or not. Valid values:
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private BandwidthPackageArgs() {}

    private BandwidthPackageArgs(BandwidthPackageArgs $) {
        this.autoPay = $.autoPay;
        this.autoRenewDuration = $.autoRenewDuration;
        this.autoUseCoupon = $.autoUseCoupon;
        this.bandwidth = $.bandwidth;
        this.bandwidthPackageName = $.bandwidthPackageName;
        this.bandwidthType = $.bandwidthType;
        this.billingType = $.billingType;
        this.cbnGeographicRegionIda = $.cbnGeographicRegionIda;
        this.cbnGeographicRegionIdb = $.cbnGeographicRegionIdb;
        this.description = $.description;
        this.duration = $.duration;
        this.paymentType = $.paymentType;
        this.promotionOptionNo = $.promotionOptionNo;
        this.ratio = $.ratio;
        this.renewalStatus = $.renewalStatus;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BandwidthPackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BandwidthPackageArgs $;

        public Builder() {
            $ = new BandwidthPackageArgs();
        }

        public Builder(BandwidthPackageArgs defaults) {
            $ = new BandwidthPackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPay Whether to pay automatically. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoPay(@Nullable Output<Boolean> autoPay) {
            $.autoPay = autoPay;
            return this;
        }

        /**
         * @param autoPay Whether to pay automatically. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoPay(Boolean autoPay) {
            return autoPay(Output.of(autoPay));
        }

        /**
         * @param autoRenewDuration Auto renewal period of a bandwidth packet, in the unit of month. The value range is 1-12.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(@Nullable Output<Integer> autoRenewDuration) {
            $.autoRenewDuration = autoRenewDuration;
            return this;
        }

        /**
         * @param autoRenewDuration Auto renewal period of a bandwidth packet, in the unit of month. The value range is 1-12.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(Integer autoRenewDuration) {
            return autoRenewDuration(Output.of(autoRenewDuration));
        }

        /**
         * @param autoUseCoupon Whether use vouchers. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoUseCoupon(@Nullable Output<Boolean> autoUseCoupon) {
            $.autoUseCoupon = autoUseCoupon;
            return this;
        }

        /**
         * @param autoUseCoupon Whether use vouchers. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder autoUseCoupon(Boolean autoUseCoupon) {
            return autoUseCoupon(Output.of(autoUseCoupon));
        }

        /**
         * @param bandwidth The bandwidth value of bandwidth packet.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth value of bandwidth packet.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param bandwidthPackageName The name of the bandwidth packet.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageName(@Nullable Output<String> bandwidthPackageName) {
            $.bandwidthPackageName = bandwidthPackageName;
            return this;
        }

        /**
         * @param bandwidthPackageName The name of the bandwidth packet.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageName(String bandwidthPackageName) {
            return bandwidthPackageName(Output.of(bandwidthPackageName));
        }

        /**
         * @param bandwidthType The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`. If `type` is set to `Basic`, this parameter is required.
         * &gt; **NOTE:** At present, only basic can be configured to enhanced, but not enhanced and advanced to other types of accelerated bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(@Nullable Output<String> bandwidthType) {
            $.bandwidthType = bandwidthType;
            return this;
        }

        /**
         * @param bandwidthType The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`. If `type` is set to `Basic`, this parameter is required.
         * &gt; **NOTE:** At present, only basic can be configured to enhanced, but not enhanced and advanced to other types of accelerated bandwidth.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(String bandwidthType) {
            return bandwidthType(Output.of(bandwidthType));
        }

        /**
         * @param billingType The billing type. Valid values: `PayBy95`, `PayByTraffic`.
         * 
         * @return builder
         * 
         */
        public Builder billingType(@Nullable Output<String> billingType) {
            $.billingType = billingType;
            return this;
        }

        /**
         * @param billingType The billing type. Valid values: `PayBy95`, `PayByTraffic`.
         * 
         * @return builder
         * 
         */
        public Builder billingType(String billingType) {
            return billingType(Output.of(billingType));
        }

        /**
         * @param cbnGeographicRegionIda Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value: `China-mainland`.
         * 
         * @return builder
         * 
         */
        public Builder cbnGeographicRegionIda(@Nullable Output<String> cbnGeographicRegionIda) {
            $.cbnGeographicRegionIda = cbnGeographicRegionIda;
            return this;
        }

        /**
         * @param cbnGeographicRegionIda Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value: `China-mainland`.
         * 
         * @return builder
         * 
         */
        public Builder cbnGeographicRegionIda(String cbnGeographicRegionIda) {
            return cbnGeographicRegionIda(Output.of(cbnGeographicRegionIda));
        }

        /**
         * @param cbnGeographicRegionIdb Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value: `Global`.
         * 
         * @return builder
         * 
         */
        public Builder cbnGeographicRegionIdb(@Nullable Output<String> cbnGeographicRegionIdb) {
            $.cbnGeographicRegionIdb = cbnGeographicRegionIdb;
            return this;
        }

        /**
         * @param cbnGeographicRegionIdb Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value: `Global`.
         * 
         * @return builder
         * 
         */
        public Builder cbnGeographicRegionIdb(String cbnGeographicRegionIdb) {
            return cbnGeographicRegionIdb(Output.of(cbnGeographicRegionIdb));
        }

        /**
         * @param description The description of bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param duration The subscription duration. **NOTE:** The ForceNew attribute has be removed from version 1.148.0. If `payment_type` is set to `Subscription`, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The subscription duration. **NOTE:** The ForceNew attribute has be removed from version 1.148.0. If `payment_type` is set to `Subscription`, this parameter is required.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param paymentType The payment type of the bandwidth. Default value: `Subscription`. Valid values: `PayAsYouGo`, `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the bandwidth. Default value: `Subscription`. Valid values: `PayAsYouGo`, `Subscription`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param promotionOptionNo The code of the coupon. **NOTE:** The `promotion_option_no` takes effect only for accounts registered on the international site (alibabacloud.com).
         * 
         * @return builder
         * 
         */
        public Builder promotionOptionNo(@Nullable Output<String> promotionOptionNo) {
            $.promotionOptionNo = promotionOptionNo;
            return this;
        }

        /**
         * @param promotionOptionNo The code of the coupon. **NOTE:** The `promotion_option_no` takes effect only for accounts registered on the international site (alibabacloud.com).
         * 
         * @return builder
         * 
         */
        public Builder promotionOptionNo(String promotionOptionNo) {
            return promotionOptionNo(Output.of(promotionOptionNo));
        }

        /**
         * @param ratio The minimum percentage for the pay-by-95th-percentile metering method. Valid values: `30` to `100`.
         * 
         * @return builder
         * 
         */
        public Builder ratio(@Nullable Output<Integer> ratio) {
            $.ratio = ratio;
            return this;
        }

        /**
         * @param ratio The minimum percentage for the pay-by-95th-percentile metering method. Valid values: `30` to `100`.
         * 
         * @return builder
         * 
         */
        public Builder ratio(Integer ratio) {
            return ratio(Output.of(ratio));
        }

        /**
         * @param renewalStatus Whether to renew a bandwidth packet. automatically or not. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Whether to renew a bandwidth packet. automatically or not. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public BandwidthPackageArgs build() {
            if ($.bandwidth == null) {
                throw new MissingRequiredPropertyException("BandwidthPackageArgs", "bandwidth");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("BandwidthPackageArgs", "type");
            }
            return $;
        }
    }

}
