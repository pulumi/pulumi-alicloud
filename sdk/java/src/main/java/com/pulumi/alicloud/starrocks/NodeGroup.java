// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.starrocks;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.starrocks.NodeGroupArgs;
import com.pulumi.alicloud.starrocks.inputs.NodeGroupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Star Rocks Node Group resource.
 * 
 * For information about Star Rocks Node Group and how to use it, see [What is Node Group](https://next.api.alibabacloud.com/document/starrocks/2022-10-19/CreateNodeGroup).
 * 
 * &gt; **NOTE:** Available since v1.262.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.starrocks.Instance;
 * import com.pulumi.alicloud.starrocks.InstanceArgs;
 * import com.pulumi.alicloud.starrocks.inputs.InstanceFrontendNodeGroupArgs;
 * import com.pulumi.alicloud.starrocks.inputs.InstanceVswitchArgs;
 * import com.pulumi.alicloud.starrocks.inputs.InstanceBackendNodeGroupArgs;
 * import com.pulumi.alicloud.starrocks.NodeGroup;
 * import com.pulumi.alicloud.starrocks.NodeGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var defaultq6pcFe = new Network("defaultq6pcFe", NetworkArgs.builder()
 *             .cidrBlock("172.16.0.0/12")
 *             .vpcName("example-vpc-487")
 *             .build());
 * 
 *         var defaultujlpyG = new Switch("defaultujlpyG", SwitchArgs.builder()
 *             .vpcId(defaultq6pcFe.id())
 *             .zoneId("cn-hangzhou-i")
 *             .cidrBlock("172.16.0.0/24")
 *             .vswitchName("sr-example-ng")
 *             .build());
 * 
 *         var defaultvjnpM0 = new Instance("defaultvjnpM0", InstanceArgs.builder()
 *             .clusterZoneId("cn-hangzhou-i")
 *             .encrypted(false)
 *             .autoRenew(false)
 *             .payType("postPaid")
 *             .frontendNodeGroups(InstanceFrontendNodeGroupArgs.builder()
 *                 .cu(8)
 *                 .storageSize(100)
 *                 .storagePerformanceLevel("pl1")
 *                 .diskNumber(1)
 *                 .zoneId("cn-hangzhou-i")
 *                 .specType("standard")
 *                 .residentNodeNumber(1)
 *                 .build())
 *             .instanceName("t1")
 *             .vswitches(InstanceVswitchArgs.builder()
 *                 .zoneId("cn-hangzhou-i")
 *                 .vswitchId(defaultujlpyG.id())
 *                 .build())
 *             .vpcId(defaultq6pcFe.id())
 *             .version("3.3")
 *             .runMode("shared_data")
 *             .packageType("official")
 *             .ossAccessingRoleName("AliyunEMRStarRocksAccessingOSSRolecn")
 *             .adminPassword("1qaz}{@literal @}{@code QAZ")
 *             .backendNodeGroups(InstanceBackendNodeGroupArgs.builder()
 *                 .cu(8)
 *                 .storageSize(200)
 *                 .zoneId("cn-hangzhou-i")
 *                 .specType("standard")
 *                 .residentNodeNumber(3)
 *                 .diskNumber(1)
 *                 .storagePerformanceLevel("pl1")
 *                 .build())
 *             .build());
 * 
 *         var default_ = new NodeGroup("default", NodeGroupArgs.builder()
 *             .description("example_desc")
 *             .nodeGroupName("ng_676")
 *             .instanceId(defaultvjnpM0.id())
 *             .specType("standard")
 *             .storagePerformanceLevel("pl1")
 *             .pricingCycle("1")
 *             .autoRenew(false)
 *             .storageSize(200)
 *             .duration(1)
 *             .payType("postPaid")
 *             .cu(8)
 *             .diskNumber(1)
 *             .residentNodeNumber(1)
 *             .localStorageInstanceType("non_local_storage")
 *             .promotionOptionNo("blank")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Star Rocks Node Group can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:starrocks/nodeGroup:NodeGroup example &lt;instance_id&gt;:&lt;node_group_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:starrocks/nodeGroup:NodeGroup")
public class NodeGroup extends com.pulumi.resources.CustomResource {
    /**
     * Whether auto-renewal is enabled.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Whether auto-renewal is enabled.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * The creation time of the node group.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the node group.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Number of CUs. CU (Compute Unit) is the basic unit of service measurement, where 1 CU = 1 vCPU + 4 GiB memory. When SpecType is memory-optimized, 1 CU = 1 vCPU + 8 GiB memory.
     * 
     */
    @Export(name="cu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cu;

    /**
     * @return Number of CUs. CU (Compute Unit) is the basic unit of service measurement, where 1 CU = 1 vCPU + 4 GiB memory. When SpecType is memory-optimized, 1 CU = 1 vCPU + 8 GiB memory.
     * 
     */
    public Output<Optional<Integer>> cu() {
        return Codegen.optional(this.cu);
    }
    /**
     * Description of node group.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of node group.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Number of disks.
     * 
     */
    @Export(name="diskNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> diskNumber;

    /**
     * @return Number of disks.
     * 
     */
    public Output<Optional<Integer>> diskNumber() {
        return Codegen.optional(this.diskNumber);
    }
    /**
     * Duration of node group.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Export(name="duration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> duration;

    /**
     * @return Duration of node group.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Output<Optional<Integer>> duration() {
        return Codegen.optional(this.duration);
    }
    /**
     * Whether to restart in fast restart mode. The default is false.
     * - true: Reboots the compute node in fast restart mode. Restart computing nodes in multiple batches, restart in parallel within a batch, and execute serially between batches;
     * - false: Restarts the compute node in rolling restart mode.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Export(name="fastMode", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> fastMode;

    /**
     * @return Whether to restart in fast restart mode. The default is false.
     * - true: Reboots the compute node in fast restart mode. Restart computing nodes in multiple batches, restart in parallel within a batch, and execute serially between batches;
     * - false: Restarts the compute node in rolling restart mode.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Output<Optional<Boolean>> fastMode() {
        return Codegen.optional(this.fastMode);
    }
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * Node group local SSD instance specification. This value is only relevant when based on ECS instances and SpecType is set to local SSD/large-scale storage.
     * 
     */
    @Export(name="localStorageInstanceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localStorageInstanceType;

    /**
     * @return Node group local SSD instance specification. This value is only relevant when based on ECS instances and SpecType is set to local SSD/large-scale storage.
     * 
     */
    public Output<Optional<String>> localStorageInstanceType() {
        return Codegen.optional(this.localStorageInstanceType);
    }
    /**
     * The ID of the node group.
     * 
     */
    @Export(name="nodeGroupId", refs={String.class}, tree="[0]")
    private Output<String> nodeGroupId;

    /**
     * @return The ID of the node group.
     * 
     */
    public Output<String> nodeGroupId() {
        return this.nodeGroupId;
    }
    /**
     * The name of the node group.
     * 
     */
    @Export(name="nodeGroupName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nodeGroupName;

    /**
     * @return The name of the node group.
     * 
     */
    public Output<Optional<String>> nodeGroupName() {
        return Codegen.optional(this.nodeGroupName);
    }
    /**
     * Payment type:
     * - PrePaid: Subscription (prepaid).
     * - PostPaid: Pay-as-you-go (postpaid).
     * 
     */
    @Export(name="payType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> payType;

    /**
     * @return Payment type:
     * - PrePaid: Subscription (prepaid).
     * - PostPaid: Pay-as-you-go (postpaid).
     * 
     */
    public Output<Optional<String>> payType() {
        return Codegen.optional(this.payType);
    }
    /**
     * Unit of purchase duration:
     * - Month
     * - Year
     * 
     * This is only applicable when payType is set to PrePaid.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Export(name="pricingCycle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pricingCycle;

    /**
     * @return Unit of purchase duration:
     * - Month
     * - Year
     * 
     * This is only applicable when payType is set to PrePaid.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Output<Optional<String>> pricingCycle() {
        return Codegen.optional(this.pricingCycle);
    }
    @Export(name="promotionOptionNo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> promotionOptionNo;

    public Output<Optional<String>> promotionOptionNo() {
        return Codegen.optional(this.promotionOptionNo);
    }
    /**
     * The region ID of the node group.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return The region ID of the node group.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * Number of nodes.
     * 
     */
    @Export(name="residentNodeNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> residentNodeNumber;

    /**
     * @return Number of nodes.
     * 
     */
    public Output<Optional<Integer>> residentNodeNumber() {
        return Codegen.optional(this.residentNodeNumber);
    }
    /**
     * Node group spec types include the following:
     * - standard: Standard edition.
     * - localSSD: Local SSD.
     * - bigData: Large-scale storage.
     * - ramEnhanced: Memory-enhanced type.
     * - networkEnhanced: Network-enhanced type.
     * 
     */
    @Export(name="specType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> specType;

    /**
     * @return Node group spec types include the following:
     * - standard: Standard edition.
     * - localSSD: Local SSD.
     * - bigData: Large-scale storage.
     * - ramEnhanced: Memory-enhanced type.
     * - networkEnhanced: Network-enhanced type.
     * 
     */
    public Output<Optional<String>> specType() {
        return Codegen.optional(this.specType);
    }
    /**
     * Node group status, including the following values:_FAILED: Creation failed._CONFIG: Modifying configuration._TIMEZONE: Modifying timezone._SCALING_OUT: Elastic scaling out._SCALING_IN: Elastic scaling in._OUT: Scaling out._IN: Scaling in._UP: Scaling up (upgrading configuration)._DOWN: Scaling down (downgrading configuration)._PUBLIC_NETWORK: Enabling public network._PUBLIC_NETWORK: Disabling public network._AZ: Switching availability zones.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Node group status, including the following values:_FAILED: Creation failed._CONFIG: Modifying configuration._TIMEZONE: Modifying timezone._SCALING_OUT: Elastic scaling out._SCALING_IN: Elastic scaling in._OUT: Scaling out._IN: Scaling in._UP: Scaling up (upgrading configuration)._DOWN: Scaling down (downgrading configuration)._PUBLIC_NETWORK: Enabling public network._PUBLIC_NETWORK: Disabling public network._AZ: Switching availability zones.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Performance levels of the cloud disk. Includes the following values:
     * - pl0: Maximum random read/write IOPS of a single disk is 10,000.
     * - pl1: Maximum random read/write IOPS of a single disk is 50,000.
     * - pl2: Maximum random read/write IOPS of a single disk is 100,000.
     * - pl3: Maximum random read/write IOPS of a single disk is 1,000,000.
     * 
     */
    @Export(name="storagePerformanceLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storagePerformanceLevel;

    /**
     * @return Performance levels of the cloud disk. Includes the following values:
     * - pl0: Maximum random read/write IOPS of a single disk is 10,000.
     * - pl1: Maximum random read/write IOPS of a single disk is 50,000.
     * - pl2: Maximum random read/write IOPS of a single disk is 100,000.
     * - pl3: Maximum random read/write IOPS of a single disk is 1,000,000.
     * 
     */
    public Output<Optional<String>> storagePerformanceLevel() {
        return Codegen.optional(this.storagePerformanceLevel);
    }
    /**
     * Storage size, measured in GiB.
     * 
     */
    @Export(name="storageSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> storageSize;

    /**
     * @return Storage size, measured in GiB.
     * 
     */
    public Output<Optional<Integer>> storageSize() {
        return Codegen.optional(this.storageSize);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodeGroup(java.lang.String name) {
        this(name, NodeGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodeGroup(java.lang.String name, @Nullable NodeGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodeGroup(java.lang.String name, @Nullable NodeGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:starrocks/nodeGroup:NodeGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NodeGroup(java.lang.String name, Output<java.lang.String> id, @Nullable NodeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:starrocks/nodeGroup:NodeGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static NodeGroupArgs makeArgs(@Nullable NodeGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NodeGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodeGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable NodeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NodeGroup(name, id, state, options);
    }
}
