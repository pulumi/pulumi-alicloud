// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AggregatorAggregatorAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AggregatorAggregatorAccountArgs Empty = new AggregatorAggregatorAccountArgs();

    /**
     * The member ID.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The member ID.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The member name.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return The member name.
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The affiliation of the member. Valid values: `ResourceDirectory`.
     * 
     */
    @Import(name="accountType")
    private @Nullable Output<String> accountType;

    /**
     * @return The affiliation of the member. Valid values: `ResourceDirectory`.
     * 
     */
    public Optional<Output<String>> accountType() {
        return Optional.ofNullable(this.accountType);
    }

    private AggregatorAggregatorAccountArgs() {}

    private AggregatorAggregatorAccountArgs(AggregatorAggregatorAccountArgs $) {
        this.accountId = $.accountId;
        this.accountName = $.accountName;
        this.accountType = $.accountType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AggregatorAggregatorAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AggregatorAggregatorAccountArgs $;

        public Builder() {
            $ = new AggregatorAggregatorAccountArgs();
        }

        public Builder(AggregatorAggregatorAccountArgs defaults) {
            $ = new AggregatorAggregatorAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The member ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The member ID.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountName The member name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The member name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param accountType The affiliation of the member. Valid values: `ResourceDirectory`.
         * 
         * @return builder
         * 
         */
        public Builder accountType(@Nullable Output<String> accountType) {
            $.accountType = accountType;
            return this;
        }

        /**
         * @param accountType The affiliation of the member. Valid values: `ResourceDirectory`.
         * 
         * @return builder
         * 
         */
        public Builder accountType(String accountType) {
            return accountType(Output.of(accountType));
        }

        public AggregatorAggregatorAccountArgs build() {
            return $;
        }
    }

}
