// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResolutionLinesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResolutionLinesPlainArgs Empty = new GetResolutionLinesPlainArgs();

    /**
     * Domain Name.
     * 
     */
    @Import(name="domainName")
    private @Nullable String domainName;

    /**
     * @return Domain Name.
     * 
     */
    public Optional<String> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * language.
     * 
     */
    @Import(name="lang")
    private @Nullable String lang;

    /**
     * @return language.
     * 
     */
    public Optional<String> lang() {
        return Optional.ofNullable(this.lang);
    }

    /**
     * A list of lines codes.
     * 
     */
    @Import(name="lineCodes")
    private @Nullable List<String> lineCodes;

    /**
     * @return A list of lines codes.
     * 
     */
    public Optional<List<String>> lineCodes() {
        return Optional.ofNullable(this.lineCodes);
    }

    /**
     * A list of line display names.
     * 
     */
    @Import(name="lineDisplayNames")
    private @Nullable List<String> lineDisplayNames;

    /**
     * @return A list of line display names.
     * 
     */
    public Optional<List<String>> lineDisplayNames() {
        return Optional.ofNullable(this.lineDisplayNames);
    }

    @Import(name="lineNames")
    private @Nullable List<String> lineNames;

    public Optional<List<String>> lineNames() {
        return Optional.ofNullable(this.lineNames);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The ip of user client.
     * 
     */
    @Import(name="userClientIp")
    private @Nullable String userClientIp;

    /**
     * @return The ip of user client.
     * 
     */
    public Optional<String> userClientIp() {
        return Optional.ofNullable(this.userClientIp);
    }

    private GetResolutionLinesPlainArgs() {}

    private GetResolutionLinesPlainArgs(GetResolutionLinesPlainArgs $) {
        this.domainName = $.domainName;
        this.lang = $.lang;
        this.lineCodes = $.lineCodes;
        this.lineDisplayNames = $.lineDisplayNames;
        this.lineNames = $.lineNames;
        this.outputFile = $.outputFile;
        this.userClientIp = $.userClientIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResolutionLinesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResolutionLinesPlainArgs $;

        public Builder() {
            $ = new GetResolutionLinesPlainArgs();
        }

        public Builder(GetResolutionLinesPlainArgs defaults) {
            $ = new GetResolutionLinesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Domain Name.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable String domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param lang language.
         * 
         * @return builder
         * 
         */
        public Builder lang(@Nullable String lang) {
            $.lang = lang;
            return this;
        }

        /**
         * @param lineCodes A list of lines codes.
         * 
         * @return builder
         * 
         */
        public Builder lineCodes(@Nullable List<String> lineCodes) {
            $.lineCodes = lineCodes;
            return this;
        }

        /**
         * @param lineCodes A list of lines codes.
         * 
         * @return builder
         * 
         */
        public Builder lineCodes(String... lineCodes) {
            return lineCodes(List.of(lineCodes));
        }

        /**
         * @param lineDisplayNames A list of line display names.
         * 
         * @return builder
         * 
         */
        public Builder lineDisplayNames(@Nullable List<String> lineDisplayNames) {
            $.lineDisplayNames = lineDisplayNames;
            return this;
        }

        /**
         * @param lineDisplayNames A list of line display names.
         * 
         * @return builder
         * 
         */
        public Builder lineDisplayNames(String... lineDisplayNames) {
            return lineDisplayNames(List.of(lineDisplayNames));
        }

        public Builder lineNames(@Nullable List<String> lineNames) {
            $.lineNames = lineNames;
            return this;
        }

        public Builder lineNames(String... lineNames) {
            return lineNames(List.of(lineNames));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param userClientIp The ip of user client.
         * 
         * @return builder
         * 
         */
        public Builder userClientIp(@Nullable String userClientIp) {
            $.userClientIp = userClientIp;
            return this;
        }

        public GetResolutionLinesPlainArgs build() {
            return $;
        }
    }

}
