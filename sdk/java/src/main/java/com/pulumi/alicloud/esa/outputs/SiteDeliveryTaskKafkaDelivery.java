// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SiteDeliveryTaskKafkaDelivery {
    private @Nullable String balancer;
    private @Nullable List<String> brokers;
    /**
     * @return The compression method. By default, data is not compressed.
     * 
     */
    private @Nullable String compress;
    private @Nullable String machanismType;
    private @Nullable String password;
    private @Nullable String topic;
    private @Nullable Boolean userAuth;
    private @Nullable String userName;

    private SiteDeliveryTaskKafkaDelivery() {}
    public Optional<String> balancer() {
        return Optional.ofNullable(this.balancer);
    }
    public List<String> brokers() {
        return this.brokers == null ? List.of() : this.brokers;
    }
    /**
     * @return The compression method. By default, data is not compressed.
     * 
     */
    public Optional<String> compress() {
        return Optional.ofNullable(this.compress);
    }
    public Optional<String> machanismType() {
        return Optional.ofNullable(this.machanismType);
    }
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    public Optional<String> topic() {
        return Optional.ofNullable(this.topic);
    }
    public Optional<Boolean> userAuth() {
        return Optional.ofNullable(this.userAuth);
    }
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SiteDeliveryTaskKafkaDelivery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String balancer;
        private @Nullable List<String> brokers;
        private @Nullable String compress;
        private @Nullable String machanismType;
        private @Nullable String password;
        private @Nullable String topic;
        private @Nullable Boolean userAuth;
        private @Nullable String userName;
        public Builder() {}
        public Builder(SiteDeliveryTaskKafkaDelivery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.balancer = defaults.balancer;
    	      this.brokers = defaults.brokers;
    	      this.compress = defaults.compress;
    	      this.machanismType = defaults.machanismType;
    	      this.password = defaults.password;
    	      this.topic = defaults.topic;
    	      this.userAuth = defaults.userAuth;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder balancer(@Nullable String balancer) {

            this.balancer = balancer;
            return this;
        }
        @CustomType.Setter
        public Builder brokers(@Nullable List<String> brokers) {

            this.brokers = brokers;
            return this;
        }
        public Builder brokers(String... brokers) {
            return brokers(List.of(brokers));
        }
        @CustomType.Setter
        public Builder compress(@Nullable String compress) {

            this.compress = compress;
            return this;
        }
        @CustomType.Setter
        public Builder machanismType(@Nullable String machanismType) {

            this.machanismType = machanismType;
            return this;
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder topic(@Nullable String topic) {

            this.topic = topic;
            return this;
        }
        @CustomType.Setter
        public Builder userAuth(@Nullable Boolean userAuth) {

            this.userAuth = userAuth;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {

            this.userName = userName;
            return this;
        }
        public SiteDeliveryTaskKafkaDelivery build() {
            final var _resultValue = new SiteDeliveryTaskKafkaDelivery();
            _resultValue.balancer = balancer;
            _resultValue.brokers = brokers;
            _resultValue.compress = compress;
            _resultValue.machanismType = machanismType;
            _resultValue.password = password;
            _resultValue.topic = topic;
            _resultValue.userAuth = userAuth;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
