// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class K8sApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final K8sApplicationArgs Empty = new K8sApplicationArgs();

    /**
     * The description of the application
     * 
     */
    @Import(name="applicationDescriotion")
    private @Nullable Output<String> applicationDescriotion;

    /**
     * @return The description of the application
     * 
     */
    public Optional<Output<String>> applicationDescriotion() {
        return Optional.ofNullable(this.applicationDescriotion);
    }

    /**
     * The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
     * 
     */
    @Import(name="applicationName", required=true)
    private Output<String> applicationName;

    /**
     * @return The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
     * 
     */
    public Output<String> applicationName() {
        return this.applicationName;
    }

    /**
     * The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The set command, if set, will replace the startup command in the mirror when the mirror is started.
     * 
     */
    @Import(name="command")
    private @Nullable Output<String> command;

    /**
     * @return The set command, if set, will replace the startup command in the mirror when the mirror is started.
     * 
     */
    public Optional<Output<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
     * 
     */
    @Import(name="commandArgs")
    private @Nullable Output<List<String>> commandArgs;

    /**
     * @return Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
     * 
     */
    public Optional<Output<List<String>>> commandArgs() {
        return Optional.ofNullable(this.commandArgs);
    }

    /**
     * EDAS-Container version that the deployed package depends on. Image does not support this parameter.
     * 
     */
    @Import(name="edasContainerVersion")
    private @Nullable Output<String> edasContainerVersion;

    /**
     * @return EDAS-Container version that the deployed package depends on. Image does not support this parameter.
     * 
     */
    public Optional<Output<String>> edasContainerVersion() {
        return Optional.ofNullable(this.edasContainerVersion);
    }

    /**
     * Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
     * 
     */
    @Import(name="envs")
    private @Nullable Output<Map<String,String>> envs;

    /**
     * @return Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
     * 
     */
    public Optional<Output<Map<String,String>>> envs() {
        return Optional.ofNullable(this.envs);
    }

    /**
     * Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
     * 
     */
    @Import(name="imageUrl")
    private @Nullable Output<String> imageUrl;

    /**
     * @return Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
     * 
     */
    public Optional<Output<String>> imageUrl() {
        return Optional.ofNullable(this.imageUrl);
    }

    /**
     * Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_id&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_id' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Import(name="internetSlbId")
    private @Nullable Output<String> internetSlbId;

    /**
     * @return Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_id&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_id' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    public Optional<Output<String>> internetSlbId() {
        return Optional.ofNullable(this.internetSlbId);
    }

    /**
     * The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Import(name="internetSlbPort")
    private @Nullable Output<Integer> internetSlbPort;

    /**
     * @return The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    public Optional<Output<Integer>> internetSlbPort() {
        return Optional.ofNullable(this.internetSlbPort);
    }

    /**
     * The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_protocol&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_protocol' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Import(name="internetSlbProtocol")
    private @Nullable Output<String> internetSlbProtocol;

    /**
     * @return The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_protocol&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_protocol' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    public Optional<Output<String>> internetSlbProtocol() {
        return Optional.ofNullable(this.internetSlbProtocol);
    }

    /**
     * The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_target_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_target_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Import(name="internetTargetPort")
    private @Nullable Output<Integer> internetTargetPort;

    /**
     * @return The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_target_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_target_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    public Optional<Output<Integer>> internetTargetPort() {
        return Optional.ofNullable(this.internetTargetPort);
    }

    /**
     * The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
     * 
     */
    @Import(name="jdk")
    private @Nullable Output<String> jdk;

    /**
     * @return The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
     * 
     */
    public Optional<Output<String>> jdk() {
        return Optional.ofNullable(this.jdk);
    }

    /**
     * The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
     * 
     */
    @Import(name="limitMCpu")
    private @Nullable Output<Integer> limitMCpu;

    /**
     * @return The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
     * 
     */
    public Optional<Output<Integer>> limitMCpu() {
        return Optional.ofNullable(this.limitMCpu);
    }

    /**
     * The memory limit of the application instance during application operation, unit: M.
     * 
     */
    @Import(name="limitMem")
    private @Nullable Output<Integer> limitMem;

    /**
     * @return The memory limit of the application instance during application operation, unit: M.
     * 
     */
    public Optional<Output<Integer>> limitMem() {
        return Optional.ofNullable(this.limitMem);
    }

    /**
     * Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
     * 
     */
    @Import(name="liveness")
    private @Nullable Output<String> liveness;

    /**
     * @return Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
     * 
     */
    public Optional<Output<String>> liveness() {
        return Optional.ofNullable(this.liveness);
    }

    /**
     * The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
     * 
     */
    @Import(name="localVolume")
    private @Nullable Output<String> localVolume;

    /**
     * @return The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
     * 
     */
    public Optional<Output<String>> localVolume() {
        return Optional.ofNullable(this.localVolume);
    }

    /**
     * The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
     * 
     */
    @Import(name="logicalRegionId")
    private @Nullable Output<String> logicalRegionId;

    /**
     * @return The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
     * 
     */
    public Optional<Output<String>> logicalRegionId() {
        return Optional.ofNullable(this.logicalRegionId);
    }

    /**
     * Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
     * 
     */
    @Import(name="mountDescs")
    private @Nullable Output<String> mountDescs;

    /**
     * @return Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
     * 
     */
    public Optional<Output<String>> mountDescs() {
        return Optional.ofNullable(this.mountDescs);
    }

    /**
     * The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
     * 
     */
    @Import(name="nasId")
    private @Nullable Output<String> nasId;

    /**
     * @return The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
     * 
     */
    public Optional<Output<String>> nasId() {
        return Optional.ofNullable(this.nasId);
    }

    /**
     * Application package type. Optional parameter values include: FatJar, WAR and Image.
     * 
     */
    @Import(name="packageType")
    private @Nullable Output<String> packageType;

    /**
     * @return Application package type. Optional parameter values include: FatJar, WAR and Image.
     * 
     */
    public Optional<Output<String>> packageType() {
        return Optional.ofNullable(this.packageType);
    }

    /**
     * The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
     * 
     */
    @Import(name="packageUrl")
    private @Nullable Output<String> packageUrl;

    /**
     * @return The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
     * 
     */
    public Optional<Output<String>> packageUrl() {
        return Optional.ofNullable(this.packageUrl);
    }

    /**
     * The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
     * 
     */
    @Import(name="packageVersion")
    private @Nullable Output<String> packageVersion;

    /**
     * @return The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
     * 
     */
    public Optional<Output<String>> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    /**
     * Execute script after startup
     * 
     */
    @Import(name="postStart")
    private @Nullable Output<String> postStart;

    /**
     * @return Execute script after startup
     * 
     */
    public Optional<Output<String>> postStart() {
        return Optional.ofNullable(this.postStart);
    }

    /**
     * Execute script before stopping
     * 
     */
    @Import(name="preStop")
    private @Nullable Output<String> preStop;

    /**
     * @return Execute script before stopping
     * 
     */
    public Optional<Output<String>> preStop() {
        return Optional.ofNullable(this.preStop);
    }

    /**
     * Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
     * 
     */
    @Import(name="readiness")
    private @Nullable Output<String> readiness;

    /**
     * @return Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
     * 
     */
    public Optional<Output<String>> readiness() {
        return Optional.ofNullable(this.readiness);
    }

    /**
     * Number of application instances.
     * 
     */
    @Import(name="replicas")
    private @Nullable Output<Integer> replicas;

    /**
     * @return Number of application instances.
     * 
     */
    public Optional<Output<Integer>> replicas() {
        return Optional.ofNullable(this.replicas);
    }

    /**
     * When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
     * 
     */
    @Import(name="requestsMCpu")
    private @Nullable Output<Integer> requestsMCpu;

    /**
     * @return When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
     * 
     */
    public Optional<Output<Integer>> requestsMCpu() {
        return Optional.ofNullable(this.requestsMCpu);
    }

    /**
     * When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
     * 
     */
    @Import(name="requestsMem")
    private @Nullable Output<Integer> requestsMem;

    /**
     * @return When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
     * 
     */
    public Optional<Output<Integer>> requestsMem() {
        return Optional.ofNullable(this.requestsMem);
    }

    /**
     * The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
     * 
     */
    @Import(name="webContainer")
    private @Nullable Output<String> webContainer;

    /**
     * @return The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
     * 
     */
    public Optional<Output<String>> webContainer() {
        return Optional.ofNullable(this.webContainer);
    }

    private K8sApplicationArgs() {}

    private K8sApplicationArgs(K8sApplicationArgs $) {
        this.applicationDescriotion = $.applicationDescriotion;
        this.applicationName = $.applicationName;
        this.clusterId = $.clusterId;
        this.command = $.command;
        this.commandArgs = $.commandArgs;
        this.edasContainerVersion = $.edasContainerVersion;
        this.envs = $.envs;
        this.imageUrl = $.imageUrl;
        this.internetSlbId = $.internetSlbId;
        this.internetSlbPort = $.internetSlbPort;
        this.internetSlbProtocol = $.internetSlbProtocol;
        this.internetTargetPort = $.internetTargetPort;
        this.jdk = $.jdk;
        this.limitMCpu = $.limitMCpu;
        this.limitMem = $.limitMem;
        this.liveness = $.liveness;
        this.localVolume = $.localVolume;
        this.logicalRegionId = $.logicalRegionId;
        this.mountDescs = $.mountDescs;
        this.namespace = $.namespace;
        this.nasId = $.nasId;
        this.packageType = $.packageType;
        this.packageUrl = $.packageUrl;
        this.packageVersion = $.packageVersion;
        this.postStart = $.postStart;
        this.preStop = $.preStop;
        this.readiness = $.readiness;
        this.replicas = $.replicas;
        this.requestsMCpu = $.requestsMCpu;
        this.requestsMem = $.requestsMem;
        this.webContainer = $.webContainer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(K8sApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private K8sApplicationArgs $;

        public Builder() {
            $ = new K8sApplicationArgs();
        }

        public Builder(K8sApplicationArgs defaults) {
            $ = new K8sApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationDescriotion The description of the application
         * 
         * @return builder
         * 
         */
        public Builder applicationDescriotion(@Nullable Output<String> applicationDescriotion) {
            $.applicationDescriotion = applicationDescriotion;
            return this;
        }

        /**
         * @param applicationDescriotion The description of the application
         * 
         * @return builder
         * 
         */
        public Builder applicationDescriotion(String applicationDescriotion) {
            return applicationDescriotion(Output.of(applicationDescriotion));
        }

        /**
         * @param applicationName The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
         * 
         * @return builder
         * 
         */
        public Builder applicationName(Output<String> applicationName) {
            $.applicationName = applicationName;
            return this;
        }

        /**
         * @param applicationName The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
         * 
         * @return builder
         * 
         */
        public Builder applicationName(String applicationName) {
            return applicationName(Output.of(applicationName));
        }

        /**
         * @param clusterId The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param command The set command, if set, will replace the startup command in the mirror when the mirror is started.
         * 
         * @return builder
         * 
         */
        public Builder command(@Nullable Output<String> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command The set command, if set, will replace the startup command in the mirror when the mirror is started.
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param commandArgs Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
         * 
         * @return builder
         * 
         */
        public Builder commandArgs(@Nullable Output<List<String>> commandArgs) {
            $.commandArgs = commandArgs;
            return this;
        }

        /**
         * @param commandArgs Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
         * 
         * @return builder
         * 
         */
        public Builder commandArgs(List<String> commandArgs) {
            return commandArgs(Output.of(commandArgs));
        }

        /**
         * @param commandArgs Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
         * 
         * @return builder
         * 
         */
        public Builder commandArgs(String... commandArgs) {
            return commandArgs(List.of(commandArgs));
        }

        /**
         * @param edasContainerVersion EDAS-Container version that the deployed package depends on. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder edasContainerVersion(@Nullable Output<String> edasContainerVersion) {
            $.edasContainerVersion = edasContainerVersion;
            return this;
        }

        /**
         * @param edasContainerVersion EDAS-Container version that the deployed package depends on. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder edasContainerVersion(String edasContainerVersion) {
            return edasContainerVersion(Output.of(edasContainerVersion));
        }

        /**
         * @param envs Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
         * 
         * @return builder
         * 
         */
        public Builder envs(@Nullable Output<Map<String,String>> envs) {
            $.envs = envs;
            return this;
        }

        /**
         * @param envs Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
         * 
         * @return builder
         * 
         */
        public Builder envs(Map<String,String> envs) {
            return envs(Output.of(envs));
        }

        /**
         * @param imageUrl Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
         * 
         * @return builder
         * 
         */
        public Builder imageUrl(@Nullable Output<String> imageUrl) {
            $.imageUrl = imageUrl;
            return this;
        }

        /**
         * @param imageUrl Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
         * 
         * @return builder
         * 
         */
        public Builder imageUrl(String imageUrl) {
            return imageUrl(Output.of(imageUrl));
        }

        /**
         * @param internetSlbId Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
         * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_id&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_id' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbId(@Nullable Output<String> internetSlbId) {
            $.internetSlbId = internetSlbId;
            return this;
        }

        /**
         * @param internetSlbId Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
         * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_id&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_id' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbId(String internetSlbId) {
            return internetSlbId(Output.of(internetSlbId));
        }

        /**
         * @param internetSlbPort The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbPort(@Nullable Output<Integer> internetSlbPort) {
            $.internetSlbPort = internetSlbPort;
            return this;
        }

        /**
         * @param internetSlbPort The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbPort(Integer internetSlbPort) {
            return internetSlbPort(Output.of(internetSlbPort));
        }

        /**
         * @param internetSlbProtocol The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_protocol&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_protocol' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbProtocol(@Nullable Output<String> internetSlbProtocol) {
            $.internetSlbProtocol = internetSlbProtocol;
            return this;
        }

        /**
         * @param internetSlbProtocol The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_slb_protocol&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_slb_protocol' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetSlbProtocol(String internetSlbProtocol) {
            return internetSlbProtocol(Output.of(internetSlbProtocol));
        }

        /**
         * @param internetTargetPort The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
         * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_target_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_target_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetTargetPort(@Nullable Output<Integer> internetTargetPort) {
            $.internetTargetPort = internetTargetPort;
            return this;
        }

        /**
         * @param internetTargetPort The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
         * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;internet_target_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
         * 
         */
        @Deprecated /* Field 'internet_target_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
        public Builder internetTargetPort(Integer internetTargetPort) {
            return internetTargetPort(Output.of(internetTargetPort));
        }

        /**
         * @param jdk The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder jdk(@Nullable Output<String> jdk) {
            $.jdk = jdk;
            return this;
        }

        /**
         * @param jdk The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder jdk(String jdk) {
            return jdk(Output.of(jdk));
        }

        /**
         * @param limitMCpu The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
         * 
         * @return builder
         * 
         */
        public Builder limitMCpu(@Nullable Output<Integer> limitMCpu) {
            $.limitMCpu = limitMCpu;
            return this;
        }

        /**
         * @param limitMCpu The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
         * 
         * @return builder
         * 
         */
        public Builder limitMCpu(Integer limitMCpu) {
            return limitMCpu(Output.of(limitMCpu));
        }

        /**
         * @param limitMem The memory limit of the application instance during application operation, unit: M.
         * 
         * @return builder
         * 
         */
        public Builder limitMem(@Nullable Output<Integer> limitMem) {
            $.limitMem = limitMem;
            return this;
        }

        /**
         * @param limitMem The memory limit of the application instance during application operation, unit: M.
         * 
         * @return builder
         * 
         */
        public Builder limitMem(Integer limitMem) {
            return limitMem(Output.of(limitMem));
        }

        /**
         * @param liveness Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
         * 
         * @return builder
         * 
         */
        public Builder liveness(@Nullable Output<String> liveness) {
            $.liveness = liveness;
            return this;
        }

        /**
         * @param liveness Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
         * 
         * @return builder
         * 
         */
        public Builder liveness(String liveness) {
            return liveness(Output.of(liveness));
        }

        /**
         * @param localVolume The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
         * 
         * @return builder
         * 
         */
        public Builder localVolume(@Nullable Output<String> localVolume) {
            $.localVolume = localVolume;
            return this;
        }

        /**
         * @param localVolume The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
         * 
         * @return builder
         * 
         */
        public Builder localVolume(String localVolume) {
            return localVolume(Output.of(localVolume));
        }

        /**
         * @param logicalRegionId The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
         * 
         * @return builder
         * 
         */
        public Builder logicalRegionId(@Nullable Output<String> logicalRegionId) {
            $.logicalRegionId = logicalRegionId;
            return this;
        }

        /**
         * @param logicalRegionId The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
         * 
         * @return builder
         * 
         */
        public Builder logicalRegionId(String logicalRegionId) {
            return logicalRegionId(Output.of(logicalRegionId));
        }

        /**
         * @param mountDescs Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
         * 
         * @return builder
         * 
         */
        public Builder mountDescs(@Nullable Output<String> mountDescs) {
            $.mountDescs = mountDescs;
            return this;
        }

        /**
         * @param mountDescs Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
         * 
         * @return builder
         * 
         */
        public Builder mountDescs(String mountDescs) {
            return mountDescs(Output.of(mountDescs));
        }

        /**
         * @param namespace The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param nasId The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
         * 
         * @return builder
         * 
         */
        public Builder nasId(@Nullable Output<String> nasId) {
            $.nasId = nasId;
            return this;
        }

        /**
         * @param nasId The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
         * 
         * @return builder
         * 
         */
        public Builder nasId(String nasId) {
            return nasId(Output.of(nasId));
        }

        /**
         * @param packageType Application package type. Optional parameter values include: FatJar, WAR and Image.
         * 
         * @return builder
         * 
         */
        public Builder packageType(@Nullable Output<String> packageType) {
            $.packageType = packageType;
            return this;
        }

        /**
         * @param packageType Application package type. Optional parameter values include: FatJar, WAR and Image.
         * 
         * @return builder
         * 
         */
        public Builder packageType(String packageType) {
            return packageType(Output.of(packageType));
        }

        /**
         * @param packageUrl The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder packageUrl(@Nullable Output<String> packageUrl) {
            $.packageUrl = packageUrl;
            return this;
        }

        /**
         * @param packageUrl The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder packageUrl(String packageUrl) {
            return packageUrl(Output.of(packageUrl));
        }

        /**
         * @param packageVersion The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(@Nullable Output<String> packageVersion) {
            $.packageVersion = packageVersion;
            return this;
        }

        /**
         * @param packageVersion The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(String packageVersion) {
            return packageVersion(Output.of(packageVersion));
        }

        /**
         * @param postStart Execute script after startup
         * 
         * @return builder
         * 
         */
        public Builder postStart(@Nullable Output<String> postStart) {
            $.postStart = postStart;
            return this;
        }

        /**
         * @param postStart Execute script after startup
         * 
         * @return builder
         * 
         */
        public Builder postStart(String postStart) {
            return postStart(Output.of(postStart));
        }

        /**
         * @param preStop Execute script before stopping
         * 
         * @return builder
         * 
         */
        public Builder preStop(@Nullable Output<String> preStop) {
            $.preStop = preStop;
            return this;
        }

        /**
         * @param preStop Execute script before stopping
         * 
         * @return builder
         * 
         */
        public Builder preStop(String preStop) {
            return preStop(Output.of(preStop));
        }

        /**
         * @param readiness Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
         * 
         * @return builder
         * 
         */
        public Builder readiness(@Nullable Output<String> readiness) {
            $.readiness = readiness;
            return this;
        }

        /**
         * @param readiness Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
         * 
         * @return builder
         * 
         */
        public Builder readiness(String readiness) {
            return readiness(Output.of(readiness));
        }

        /**
         * @param replicas Number of application instances.
         * 
         * @return builder
         * 
         */
        public Builder replicas(@Nullable Output<Integer> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas Number of application instances.
         * 
         * @return builder
         * 
         */
        public Builder replicas(Integer replicas) {
            return replicas(Output.of(replicas));
        }

        /**
         * @param requestsMCpu When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
         * 
         * @return builder
         * 
         */
        public Builder requestsMCpu(@Nullable Output<Integer> requestsMCpu) {
            $.requestsMCpu = requestsMCpu;
            return this;
        }

        /**
         * @param requestsMCpu When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
         * 
         * @return builder
         * 
         */
        public Builder requestsMCpu(Integer requestsMCpu) {
            return requestsMCpu(Output.of(requestsMCpu));
        }

        /**
         * @param requestsMem When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
         * 
         * @return builder
         * 
         */
        public Builder requestsMem(@Nullable Output<Integer> requestsMem) {
            $.requestsMem = requestsMem;
            return this;
        }

        /**
         * @param requestsMem When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
         * 
         * @return builder
         * 
         */
        public Builder requestsMem(Integer requestsMem) {
            return requestsMem(Output.of(requestsMem));
        }

        /**
         * @param webContainer The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder webContainer(@Nullable Output<String> webContainer) {
            $.webContainer = webContainer;
            return this;
        }

        /**
         * @param webContainer The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder webContainer(String webContainer) {
            return webContainer(Output.of(webContainer));
        }

        public K8sApplicationArgs build() {
            if ($.applicationName == null) {
                throw new MissingRequiredPropertyException("K8sApplicationArgs", "applicationName");
            }
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("K8sApplicationArgs", "clusterId");
            }
            return $;
        }
    }

}
