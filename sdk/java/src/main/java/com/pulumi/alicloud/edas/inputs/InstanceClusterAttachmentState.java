// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceClusterAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceClusterAttachmentState Empty = new InstanceClusterAttachmentState();

    /**
     * The ID of the cluster that you want to create the application.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the cluster that you want to create the application.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The cluster members map of the resource supplied above. The key is instanceId and the value is cluster_member_id.
     * 
     */
    @Import(name="clusterMemberIds")
    private @Nullable Output<Map<String,String>> clusterMemberIds;

    /**
     * @return The cluster members map of the resource supplied above. The key is instanceId and the value is cluster_member_id.
     * 
     */
    public Optional<Output<Map<String,String>>> clusterMemberIds() {
        return Optional.ofNullable(this.clusterMemberIds);
    }

    /**
     * The ecu map of the resource supplied above. The key is instanceId and the value is ecu_id.
     * 
     */
    @Import(name="ecuMap")
    private @Nullable Output<Map<String,String>> ecuMap;

    /**
     * @return The ecu map of the resource supplied above. The key is instanceId and the value is ecu_id.
     * 
     */
    public Optional<Output<Map<String,String>>> ecuMap() {
        return Optional.ofNullable(this.ecuMap);
    }

    /**
     * The ID of instance. Type: list.
     * 
     */
    @Import(name="instanceIds")
    private @Nullable Output<List<String>> instanceIds;

    /**
     * @return The ID of instance. Type: list.
     * 
     */
    public Optional<Output<List<String>>> instanceIds() {
        return Optional.ofNullable(this.instanceIds);
    }

    /**
     * The status map of the resource supplied above. The key is instanceId and the values are 1(running) 0(converting) -1(failed) and -2(offline).
     * 
     */
    @Import(name="statusMap")
    private @Nullable Output<Map<String,Integer>> statusMap;

    /**
     * @return The status map of the resource supplied above. The key is instanceId and the values are 1(running) 0(converting) -1(failed) and -2(offline).
     * 
     */
    public Optional<Output<Map<String,Integer>>> statusMap() {
        return Optional.ofNullable(this.statusMap);
    }

    private InstanceClusterAttachmentState() {}

    private InstanceClusterAttachmentState(InstanceClusterAttachmentState $) {
        this.clusterId = $.clusterId;
        this.clusterMemberIds = $.clusterMemberIds;
        this.ecuMap = $.ecuMap;
        this.instanceIds = $.instanceIds;
        this.statusMap = $.statusMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceClusterAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceClusterAttachmentState $;

        public Builder() {
            $ = new InstanceClusterAttachmentState();
        }

        public Builder(InstanceClusterAttachmentState defaults) {
            $ = new InstanceClusterAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the cluster that you want to create the application.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the cluster that you want to create the application.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterMemberIds The cluster members map of the resource supplied above. The key is instanceId and the value is cluster_member_id.
         * 
         * @return builder
         * 
         */
        public Builder clusterMemberIds(@Nullable Output<Map<String,String>> clusterMemberIds) {
            $.clusterMemberIds = clusterMemberIds;
            return this;
        }

        /**
         * @param clusterMemberIds The cluster members map of the resource supplied above. The key is instanceId and the value is cluster_member_id.
         * 
         * @return builder
         * 
         */
        public Builder clusterMemberIds(Map<String,String> clusterMemberIds) {
            return clusterMemberIds(Output.of(clusterMemberIds));
        }

        /**
         * @param ecuMap The ecu map of the resource supplied above. The key is instanceId and the value is ecu_id.
         * 
         * @return builder
         * 
         */
        public Builder ecuMap(@Nullable Output<Map<String,String>> ecuMap) {
            $.ecuMap = ecuMap;
            return this;
        }

        /**
         * @param ecuMap The ecu map of the resource supplied above. The key is instanceId and the value is ecu_id.
         * 
         * @return builder
         * 
         */
        public Builder ecuMap(Map<String,String> ecuMap) {
            return ecuMap(Output.of(ecuMap));
        }

        /**
         * @param instanceIds The ID of instance. Type: list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(@Nullable Output<List<String>> instanceIds) {
            $.instanceIds = instanceIds;
            return this;
        }

        /**
         * @param instanceIds The ID of instance. Type: list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(List<String> instanceIds) {
            return instanceIds(Output.of(instanceIds));
        }

        /**
         * @param instanceIds The ID of instance. Type: list.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }

        /**
         * @param statusMap The status map of the resource supplied above. The key is instanceId and the values are 1(running) 0(converting) -1(failed) and -2(offline).
         * 
         * @return builder
         * 
         */
        public Builder statusMap(@Nullable Output<Map<String,Integer>> statusMap) {
            $.statusMap = statusMap;
            return this;
        }

        /**
         * @param statusMap The status map of the resource supplied above. The key is instanceId and the values are 1(running) 0(converting) -1(failed) and -2(offline).
         * 
         * @return builder
         * 
         */
        public Builder statusMap(Map<String,Integer> statusMap) {
            return statusMap(Output.of(statusMap));
        }

        public InstanceClusterAttachmentState build() {
            return $;
        }
    }

}
