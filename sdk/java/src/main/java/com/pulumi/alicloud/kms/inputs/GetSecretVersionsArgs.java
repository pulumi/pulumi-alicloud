// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecretVersionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecretVersionsArgs Empty = new GetSecretVersionsArgs();

    /**
     * Default to false and only output `secret_name`, `version_id`, `version_stages`. Set it to true can output more details.
     * 
     */
    @Import(name="enableDetails")
    private @Nullable Output<Boolean> enableDetails;

    /**
     * @return Default to false and only output `secret_name`, `version_id`, `version_stages`. Set it to true can output more details.
     * 
     */
    public Optional<Output<Boolean>> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of KMS Secret Version ids.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of KMS Secret Version ids.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Specifies whether to return deprecated secret versions. Default to `false`.
     * 
     */
    @Import(name="includeDeprecated")
    private @Nullable Output<String> includeDeprecated;

    /**
     * @return Specifies whether to return deprecated secret versions. Default to `false`.
     * 
     */
    public Optional<Output<String>> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The name of the secret.
     * 
     */
    @Import(name="secretName", required=true)
    private Output<String> secretName;

    /**
     * @return The name of the secret.
     * 
     */
    public Output<String> secretName() {
        return this.secretName;
    }

    /**
     * The stage of the secret version.
     * 
     */
    @Import(name="versionStage")
    private @Nullable Output<String> versionStage;

    /**
     * @return The stage of the secret version.
     * 
     */
    public Optional<Output<String>> versionStage() {
        return Optional.ofNullable(this.versionStage);
    }

    private GetSecretVersionsArgs() {}

    private GetSecretVersionsArgs(GetSecretVersionsArgs $) {
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.includeDeprecated = $.includeDeprecated;
        this.outputFile = $.outputFile;
        this.secretName = $.secretName;
        this.versionStage = $.versionStage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecretVersionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecretVersionsArgs $;

        public Builder() {
            $ = new GetSecretVersionsArgs();
        }

        public Builder(GetSecretVersionsArgs defaults) {
            $ = new GetSecretVersionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableDetails Default to false and only output `secret_name`, `version_id`, `version_stages`. Set it to true can output more details.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(@Nullable Output<Boolean> enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        /**
         * @param enableDetails Default to false and only output `secret_name`, `version_id`, `version_stages`. Set it to true can output more details.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(Boolean enableDetails) {
            return enableDetails(Output.of(enableDetails));
        }

        /**
         * @param ids A list of KMS Secret Version ids.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of KMS Secret Version ids.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of KMS Secret Version ids.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param includeDeprecated Specifies whether to return deprecated secret versions. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder includeDeprecated(@Nullable Output<String> includeDeprecated) {
            $.includeDeprecated = includeDeprecated;
            return this;
        }

        /**
         * @param includeDeprecated Specifies whether to return deprecated secret versions. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder includeDeprecated(String includeDeprecated) {
            return includeDeprecated(Output.of(includeDeprecated));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param secretName The name of the secret.
         * 
         * @return builder
         * 
         */
        public Builder secretName(Output<String> secretName) {
            $.secretName = secretName;
            return this;
        }

        /**
         * @param secretName The name of the secret.
         * 
         * @return builder
         * 
         */
        public Builder secretName(String secretName) {
            return secretName(Output.of(secretName));
        }

        /**
         * @param versionStage The stage of the secret version.
         * 
         * @return builder
         * 
         */
        public Builder versionStage(@Nullable Output<String> versionStage) {
            $.versionStage = versionStage;
            return this;
        }

        /**
         * @param versionStage The stage of the secret version.
         * 
         * @return builder
         * 
         */
        public Builder versionStage(String versionStage) {
            return versionStage(Output.of(versionStage));
        }

        public GetSecretVersionsArgs build() {
            if ($.secretName == null) {
                throw new MissingRequiredPropertyException("GetSecretVersionsArgs", "secretName");
            }
            return $;
        }
    }

}
