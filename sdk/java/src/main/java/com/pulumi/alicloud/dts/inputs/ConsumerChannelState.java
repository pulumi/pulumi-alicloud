// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumerChannelState extends com.pulumi.resources.ResourceArgs {

    public static final ConsumerChannelState Empty = new ConsumerChannelState();

    /**
     * The ID of the consumer group.
     * 
     */
    @Import(name="consumerGroupId")
    private @Nullable Output<String> consumerGroupId;

    /**
     * @return The ID of the consumer group.
     * 
     */
    public Optional<Output<String>> consumerGroupId() {
        return Optional.ofNullable(this.consumerGroupId);
    }

    /**
     * The name of the consumer group.
     * 
     */
    @Import(name="consumerGroupName")
    private @Nullable Output<String> consumerGroupName;

    /**
     * @return The name of the consumer group.
     * 
     */
    public Optional<Output<String>> consumerGroupName() {
        return Optional.ofNullable(this.consumerGroupName);
    }

    /**
     * The password of the consumer group account. The length of the `consumerGroupPassword` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
     * 
     */
    @Import(name="consumerGroupPassword")
    private @Nullable Output<String> consumerGroupPassword;

    /**
     * @return The password of the consumer group account. The length of the `consumerGroupPassword` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
     * 
     */
    public Optional<Output<String>> consumerGroupPassword() {
        return Optional.ofNullable(this.consumerGroupPassword);
    }

    /**
     * The username of the consumer group. The length of the `consumerGroupUserName` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
     * 
     */
    @Import(name="consumerGroupUserName")
    private @Nullable Output<String> consumerGroupUserName;

    /**
     * @return The username of the consumer group. The length of the `consumerGroupUserName` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
     * 
     */
    public Optional<Output<String>> consumerGroupUserName() {
        return Optional.ofNullable(this.consumerGroupUserName);
    }

    /**
     * The ID of the subscription instance.
     * 
     */
    @Import(name="dtsInstanceId")
    private @Nullable Output<String> dtsInstanceId;

    /**
     * @return The ID of the subscription instance.
     * 
     */
    public Optional<Output<String>> dtsInstanceId() {
        return Optional.ofNullable(this.dtsInstanceId);
    }

    private ConsumerChannelState() {}

    private ConsumerChannelState(ConsumerChannelState $) {
        this.consumerGroupId = $.consumerGroupId;
        this.consumerGroupName = $.consumerGroupName;
        this.consumerGroupPassword = $.consumerGroupPassword;
        this.consumerGroupUserName = $.consumerGroupUserName;
        this.dtsInstanceId = $.dtsInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumerChannelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumerChannelState $;

        public Builder() {
            $ = new ConsumerChannelState();
        }

        public Builder(ConsumerChannelState defaults) {
            $ = new ConsumerChannelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerGroupId The ID of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupId(@Nullable Output<String> consumerGroupId) {
            $.consumerGroupId = consumerGroupId;
            return this;
        }

        /**
         * @param consumerGroupId The ID of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupId(String consumerGroupId) {
            return consumerGroupId(Output.of(consumerGroupId));
        }

        /**
         * @param consumerGroupName The name of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupName(@Nullable Output<String> consumerGroupName) {
            $.consumerGroupName = consumerGroupName;
            return this;
        }

        /**
         * @param consumerGroupName The name of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupName(String consumerGroupName) {
            return consumerGroupName(Output.of(consumerGroupName));
        }

        /**
         * @param consumerGroupPassword The password of the consumer group account. The length of the `consumerGroupPassword` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupPassword(@Nullable Output<String> consumerGroupPassword) {
            $.consumerGroupPassword = consumerGroupPassword;
            return this;
        }

        /**
         * @param consumerGroupPassword The password of the consumer group account. The length of the `consumerGroupPassword` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupPassword(String consumerGroupPassword) {
            return consumerGroupPassword(Output.of(consumerGroupPassword));
        }

        /**
         * @param consumerGroupUserName The username of the consumer group. The length of the `consumerGroupUserName` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupUserName(@Nullable Output<String> consumerGroupUserName) {
            $.consumerGroupUserName = consumerGroupUserName;
            return this;
        }

        /**
         * @param consumerGroupUserName The username of the consumer group. The length of the `consumerGroupUserName` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupUserName(String consumerGroupUserName) {
            return consumerGroupUserName(Output.of(consumerGroupUserName));
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(@Nullable Output<String> dtsInstanceId) {
            $.dtsInstanceId = dtsInstanceId;
            return this;
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(String dtsInstanceId) {
            return dtsInstanceId(Output.of(dtsInstanceId));
        }

        public ConsumerChannelState build() {
            return $;
        }
    }

}
