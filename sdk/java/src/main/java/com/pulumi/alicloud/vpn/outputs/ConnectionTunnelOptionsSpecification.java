// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.alicloud.vpn.outputs.ConnectionTunnelOptionsSpecificationTunnelBgpConfig;
import com.pulumi.alicloud.vpn.outputs.ConnectionTunnelOptionsSpecificationTunnelIkeConfig;
import com.pulumi.alicloud.vpn.outputs.ConnectionTunnelOptionsSpecificationTunnelIpsecConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionTunnelOptionsSpecification {
    /**
     * @return The ID of the customer gateway in Tunnel.
     * 
     */
    private @Nullable String customerGatewayId;
    /**
     * @return Wether enable Dpd detection.
     * 
     */
    private @Nullable Boolean enableDpd;
    /**
     * @return enable nat traversal.
     * 
     */
    private @Nullable Boolean enableNatTraversal;
    /**
     * @return The local internet IP in Tunnel.
     * 
     */
    private @Nullable String internetIp;
    /**
     * @return The role of Tunnel.
     * 
     */
    private @Nullable String role;
    /**
     * @return The state of Tunnel.
     * 
     */
    private @Nullable String state;
    /**
     * @return The negotiation status of Tunnel.
     * 
     */
    private @Nullable String status;
    /**
     * @return The bgp config of Tunnel. See `tunnel_bgp_config` below.
     * 
     */
    private @Nullable ConnectionTunnelOptionsSpecificationTunnelBgpConfig tunnelBgpConfig;
    /**
     * @return The tunnel ID of IPsec-VPN connection.
     * 
     */
    private @Nullable String tunnelId;
    /**
     * @return The configuration of Phase 1 negotiations in Tunnel. See `tunnel_ike_config` below.
     * 
     */
    private @Nullable ConnectionTunnelOptionsSpecificationTunnelIkeConfig tunnelIkeConfig;
    /**
     * @return IPsec configuration in Tunnel. See `tunnel_ipsec_config` below.
     * 
     */
    private @Nullable ConnectionTunnelOptionsSpecificationTunnelIpsecConfig tunnelIpsecConfig;
    /**
     * @return The zoneNo of tunnel.
     * 
     */
    private @Nullable String zoneNo;

    private ConnectionTunnelOptionsSpecification() {}
    /**
     * @return The ID of the customer gateway in Tunnel.
     * 
     */
    public Optional<String> customerGatewayId() {
        return Optional.ofNullable(this.customerGatewayId);
    }
    /**
     * @return Wether enable Dpd detection.
     * 
     */
    public Optional<Boolean> enableDpd() {
        return Optional.ofNullable(this.enableDpd);
    }
    /**
     * @return enable nat traversal.
     * 
     */
    public Optional<Boolean> enableNatTraversal() {
        return Optional.ofNullable(this.enableNatTraversal);
    }
    /**
     * @return The local internet IP in Tunnel.
     * 
     */
    public Optional<String> internetIp() {
        return Optional.ofNullable(this.internetIp);
    }
    /**
     * @return The role of Tunnel.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    /**
     * @return The state of Tunnel.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The negotiation status of Tunnel.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The bgp config of Tunnel. See `tunnel_bgp_config` below.
     * 
     */
    public Optional<ConnectionTunnelOptionsSpecificationTunnelBgpConfig> tunnelBgpConfig() {
        return Optional.ofNullable(this.tunnelBgpConfig);
    }
    /**
     * @return The tunnel ID of IPsec-VPN connection.
     * 
     */
    public Optional<String> tunnelId() {
        return Optional.ofNullable(this.tunnelId);
    }
    /**
     * @return The configuration of Phase 1 negotiations in Tunnel. See `tunnel_ike_config` below.
     * 
     */
    public Optional<ConnectionTunnelOptionsSpecificationTunnelIkeConfig> tunnelIkeConfig() {
        return Optional.ofNullable(this.tunnelIkeConfig);
    }
    /**
     * @return IPsec configuration in Tunnel. See `tunnel_ipsec_config` below.
     * 
     */
    public Optional<ConnectionTunnelOptionsSpecificationTunnelIpsecConfig> tunnelIpsecConfig() {
        return Optional.ofNullable(this.tunnelIpsecConfig);
    }
    /**
     * @return The zoneNo of tunnel.
     * 
     */
    public Optional<String> zoneNo() {
        return Optional.ofNullable(this.zoneNo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionTunnelOptionsSpecification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customerGatewayId;
        private @Nullable Boolean enableDpd;
        private @Nullable Boolean enableNatTraversal;
        private @Nullable String internetIp;
        private @Nullable String role;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable ConnectionTunnelOptionsSpecificationTunnelBgpConfig tunnelBgpConfig;
        private @Nullable String tunnelId;
        private @Nullable ConnectionTunnelOptionsSpecificationTunnelIkeConfig tunnelIkeConfig;
        private @Nullable ConnectionTunnelOptionsSpecificationTunnelIpsecConfig tunnelIpsecConfig;
        private @Nullable String zoneNo;
        public Builder() {}
        public Builder(ConnectionTunnelOptionsSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerGatewayId = defaults.customerGatewayId;
    	      this.enableDpd = defaults.enableDpd;
    	      this.enableNatTraversal = defaults.enableNatTraversal;
    	      this.internetIp = defaults.internetIp;
    	      this.role = defaults.role;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.tunnelBgpConfig = defaults.tunnelBgpConfig;
    	      this.tunnelId = defaults.tunnelId;
    	      this.tunnelIkeConfig = defaults.tunnelIkeConfig;
    	      this.tunnelIpsecConfig = defaults.tunnelIpsecConfig;
    	      this.zoneNo = defaults.zoneNo;
        }

        @CustomType.Setter
        public Builder customerGatewayId(@Nullable String customerGatewayId) {

            this.customerGatewayId = customerGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder enableDpd(@Nullable Boolean enableDpd) {

            this.enableDpd = enableDpd;
            return this;
        }
        @CustomType.Setter
        public Builder enableNatTraversal(@Nullable Boolean enableNatTraversal) {

            this.enableNatTraversal = enableNatTraversal;
            return this;
        }
        @CustomType.Setter
        public Builder internetIp(@Nullable String internetIp) {

            this.internetIp = internetIp;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {

            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelBgpConfig(@Nullable ConnectionTunnelOptionsSpecificationTunnelBgpConfig tunnelBgpConfig) {

            this.tunnelBgpConfig = tunnelBgpConfig;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelId(@Nullable String tunnelId) {

            this.tunnelId = tunnelId;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelIkeConfig(@Nullable ConnectionTunnelOptionsSpecificationTunnelIkeConfig tunnelIkeConfig) {

            this.tunnelIkeConfig = tunnelIkeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelIpsecConfig(@Nullable ConnectionTunnelOptionsSpecificationTunnelIpsecConfig tunnelIpsecConfig) {

            this.tunnelIpsecConfig = tunnelIpsecConfig;
            return this;
        }
        @CustomType.Setter
        public Builder zoneNo(@Nullable String zoneNo) {

            this.zoneNo = zoneNo;
            return this;
        }
        public ConnectionTunnelOptionsSpecification build() {
            final var _resultValue = new ConnectionTunnelOptionsSpecification();
            _resultValue.customerGatewayId = customerGatewayId;
            _resultValue.enableDpd = enableDpd;
            _resultValue.enableNatTraversal = enableNatTraversal;
            _resultValue.internetIp = internetIp;
            _resultValue.role = role;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.tunnelBgpConfig = tunnelBgpConfig;
            _resultValue.tunnelId = tunnelId;
            _resultValue.tunnelIkeConfig = tunnelIkeConfig;
            _resultValue.tunnelIpsecConfig = tunnelIpsecConfig;
            _resultValue.zoneNo = zoneNo;
            return _resultValue;
        }
    }
}
