// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ots;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ots.SearchIndexArgs;
import com.pulumi.alicloud.ots.inputs.SearchIndexState;
import com.pulumi.alicloud.ots.outputs.SearchIndexSchema;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an OTS search index resource.
 * 
 * For information about OTS search index and how to use it, see [Search index overview](https://www.alibabacloud.com/help/en/tablestore/latest/search-index-overview).
 * 
 * &gt; **NOTE:** Available since v1.187.0.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.ots.Instance;
 * import com.pulumi.alicloud.ots.InstanceArgs;
 * import com.pulumi.alicloud.ots.Table;
 * import com.pulumi.alicloud.ots.TableArgs;
 * import com.pulumi.alicloud.ots.inputs.TablePrimaryKeyArgs;
 * import com.pulumi.alicloud.ots.SearchIndex;
 * import com.pulumi.alicloud.ots.SearchIndexArgs;
 * import com.pulumi.alicloud.ots.inputs.SearchIndexSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
 *             .name(String.format("%s-%s", name,default_.result()))
 *             .description(name)
 *             .accessedBy("Any")
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .build());
 * 
 *         var defaultTable = new Table("defaultTable", TableArgs.builder()
 *             .instanceName(defaultInstance.name())
 *             .tableName("tf_example")
 *             .timeToLive(-1)
 *             .maxVersion(1)
 *             .enableSse(true)
 *             .sseKeyType("SSE_KMS_SERVICE")
 *             .primaryKeys(            
 *                 TablePrimaryKeyArgs.builder()
 *                     .name("pk1")
 *                     .type("Integer")
 *                     .build(),
 *                 TablePrimaryKeyArgs.builder()
 *                     .name("pk2")
 *                     .type("String")
 *                     .build(),
 *                 TablePrimaryKeyArgs.builder()
 *                     .name("pk3")
 *                     .type("Binary")
 *                     .build())
 *             .build());
 * 
 *         var defaultSearchIndex = new SearchIndex("defaultSearchIndex", SearchIndexArgs.builder()
 *             .instanceName(defaultInstance.name())
 *             .tableName(defaultTable.tableName())
 *             .indexName("example_index")
 *             .timeToLive(-1)
 *             .schemas(SearchIndexSchemaArgs.builder()
 *                 .fieldSchemas(                
 *                     SearchIndexSchemaFieldSchemaArgs.builder()
 *                         .fieldName("col1")
 *                         .fieldType("Text")
 *                         .isArray(false)
 *                         .index(true)
 *                         .analyzer("Split")
 *                         .store(true)
 *                         .build(),
 *                     SearchIndexSchemaFieldSchemaArgs.builder()
 *                         .fieldName("col2")
 *                         .fieldType("Long")
 *                         .enableSortAndAgg(true)
 *                         .build(),
 *                     SearchIndexSchemaFieldSchemaArgs.builder()
 *                         .fieldName("pk1")
 *                         .fieldType("Long")
 *                         .build(),
 *                     SearchIndexSchemaFieldSchemaArgs.builder()
 *                         .fieldName("pk2")
 *                         .fieldType("Text")
 *                         .build())
 *                 .indexSettings(SearchIndexSchemaIndexSettingArgs.builder()
 *                     .routingFields(                    
 *                         "pk1",
 *                         "pk2")
 *                     .build())
 *                 .indexSorts(SearchIndexSchemaIndexSortArgs.builder()
 *                     .sorters(                    
 *                         SearchIndexSchemaIndexSortSorterArgs.builder()
 *                             .sorterType("PrimaryKeySort")
 *                             .order("Asc")
 *                             .build(),
 *                         SearchIndexSchemaIndexSortSorterArgs.builder()
 *                             .sorterType("FieldSort")
 *                             .order("Desc")
 *                             .fieldName("col2")
 *                             .mode("Max")
 *                             .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * OTS search index can be imported using id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ots/searchIndex:SearchIndex index1 &lt;instance_name&gt;:&lt;table_name&gt;:&lt;index_name&gt;:&lt;index_type&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ots/searchIndex:SearchIndex")
public class SearchIndex extends com.pulumi.resources.CustomResource {
    /**
     * The search index create time.
     * 
     */
    @Export(name="createTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> createTime;

    /**
     * @return The search index create time.
     * 
     */
    public Output<Integer> createTime() {
        return this.createTime;
    }
    /**
     * The timestamp for sync phase.
     * 
     */
    @Export(name="currentSyncTimestamp", refs={Integer.class}, tree="[0]")
    private Output<Integer> currentSyncTimestamp;

    /**
     * @return The timestamp for sync phase.
     * 
     */
    public Output<Integer> currentSyncTimestamp() {
        return this.currentSyncTimestamp;
    }
    /**
     * The index id of the search index which could not be changed.
     * 
     */
    @Export(name="indexId", refs={String.class}, tree="[0]")
    private Output<String> indexId;

    /**
     * @return The index id of the search index which could not be changed.
     * 
     */
    public Output<String> indexId() {
        return this.indexId;
    }
    /**
     * The index name of the OTS Table. If changed, a new index would be created.
     * 
     */
    @Export(name="indexName", refs={String.class}, tree="[0]")
    private Output<String> indexName;

    /**
     * @return The index name of the OTS Table. If changed, a new index would be created.
     * 
     */
    public Output<String> indexName() {
        return this.indexName;
    }
    /**
     * The name of the OTS instance in which table will located.
     * 
     */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output<String> instanceName;

    /**
     * @return The name of the OTS instance in which table will located.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * The schema of the search index. If changed, a new index would be created. See `schema` below.
     * 
     */
    @Export(name="schemas", refs={List.class,SearchIndexSchema.class}, tree="[0,1]")
    private Output<List<SearchIndexSchema>> schemas;

    /**
     * @return The schema of the search index. If changed, a new index would be created. See `schema` below.
     * 
     */
    public Output<List<SearchIndexSchema>> schemas() {
        return this.schemas;
    }
    /**
     * The search index sync phase. possible values: `Full`, `Incr`.
     * 
     */
    @Export(name="syncPhase", refs={String.class}, tree="[0]")
    private Output<String> syncPhase;

    /**
     * @return The search index sync phase. possible values: `Full`, `Incr`.
     * 
     */
    public Output<String> syncPhase() {
        return this.syncPhase;
    }
    /**
     * The name of the OTS table. If changed, a new table would be created.
     * 
     */
    @Export(name="tableName", refs={String.class}, tree="[0]")
    private Output<String> tableName;

    /**
     * @return The name of the OTS table. If changed, a new table would be created.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }
    /**
     * The index type of the OTS Table. Specifies the retention period of data in the search index. Unit: seconds. Default value: -1.
     * If the retention period exceeds the TTL value, OTS automatically deletes expired data.
     * 
     */
    @Export(name="timeToLive", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeToLive;

    /**
     * @return The index type of the OTS Table. Specifies the retention period of data in the search index. Unit: seconds. Default value: -1.
     * If the retention period exceeds the TTL value, OTS automatically deletes expired data.
     * 
     */
    public Output<Optional<Integer>> timeToLive() {
        return Codegen.optional(this.timeToLive);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SearchIndex(java.lang.String name) {
        this(name, SearchIndexArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SearchIndex(java.lang.String name, SearchIndexArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SearchIndex(java.lang.String name, SearchIndexArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ots/searchIndex:SearchIndex", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SearchIndex(java.lang.String name, Output<java.lang.String> id, @Nullable SearchIndexState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ots/searchIndex:SearchIndex", name, state, makeResourceOptions(options, id), false);
    }

    private static SearchIndexArgs makeArgs(SearchIndexArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SearchIndexArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SearchIndex get(java.lang.String name, Output<java.lang.String> id, @Nullable SearchIndexState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SearchIndex(name, id, state, options);
    }
}
