// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos.inputs;

import com.pulumi.alicloud.ddos.inputs.SchedulerRuleRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchedulerRuleState extends com.pulumi.resources.ResourceArgs {

    public static final SchedulerRuleState Empty = new SchedulerRuleState();

    /**
     * The cname is the traffic scheduler corresponding to rules.
     * 
     */
    @Import(name="cname")
    private @Nullable Output<String> cname;

    /**
     * @return The cname is the traffic scheduler corresponding to rules.
     * 
     */
    public Optional<Output<String>> cname() {
        return Optional.ofNullable(this.cname);
    }

    /**
     * The scheduling rule for the Global Accelerator instance that interacts with Anti-DDoS Pro or Anti-DDoS Premium.
     * 
     */
    @Import(name="param")
    private @Nullable Output<String> param;

    /**
     * @return The scheduling rule for the Global Accelerator instance that interacts with Anti-DDoS Pro or Anti-DDoS Premium.
     * 
     */
    public Optional<Output<String>> param() {
        return Optional.ofNullable(this.param);
    }

    /**
     * The ID of the resource group to which the anti-DDoS pro instance belongs in resource management. By default, no value is specified, indicating that the domains in the default resource group are listed.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which the anti-DDoS pro instance belongs in resource management. By default, no value is specified, indicating that the domains in the default resource group are listed.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return The name of the rule.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * The rule type. Valid values:
     * `2`: tiered protection.
     * `3`: globalization acceleration.
     * `6`: Cloud product interaction.
     * 
     */
    @Import(name="ruleType")
    private @Nullable Output<Integer> ruleType;

    /**
     * @return The rule type. Valid values:
     * `2`: tiered protection.
     * `3`: globalization acceleration.
     * `6`: Cloud product interaction.
     * 
     */
    public Optional<Output<Integer>> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }

    /**
     * The information about the scheduling rules. See `rules` below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<SchedulerRuleRuleArgs>> rules;

    /**
     * @return The information about the scheduling rules. See `rules` below.
     * 
     */
    public Optional<Output<List<SchedulerRuleRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private SchedulerRuleState() {}

    private SchedulerRuleState(SchedulerRuleState $) {
        this.cname = $.cname;
        this.param = $.param;
        this.resourceGroupId = $.resourceGroupId;
        this.ruleName = $.ruleName;
        this.ruleType = $.ruleType;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchedulerRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchedulerRuleState $;

        public Builder() {
            $ = new SchedulerRuleState();
        }

        public Builder(SchedulerRuleState defaults) {
            $ = new SchedulerRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cname The cname is the traffic scheduler corresponding to rules.
         * 
         * @return builder
         * 
         */
        public Builder cname(@Nullable Output<String> cname) {
            $.cname = cname;
            return this;
        }

        /**
         * @param cname The cname is the traffic scheduler corresponding to rules.
         * 
         * @return builder
         * 
         */
        public Builder cname(String cname) {
            return cname(Output.of(cname));
        }

        /**
         * @param param The scheduling rule for the Global Accelerator instance that interacts with Anti-DDoS Pro or Anti-DDoS Premium.
         * 
         * @return builder
         * 
         */
        public Builder param(@Nullable Output<String> param) {
            $.param = param;
            return this;
        }

        /**
         * @param param The scheduling rule for the Global Accelerator instance that interacts with Anti-DDoS Pro or Anti-DDoS Premium.
         * 
         * @return builder
         * 
         */
        public Builder param(String param) {
            return param(Output.of(param));
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the anti-DDoS pro instance belongs in resource management. By default, no value is specified, indicating that the domains in the default resource group are listed.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the anti-DDoS pro instance belongs in resource management. By default, no value is specified, indicating that the domains in the default resource group are listed.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param ruleName The name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param ruleType The rule type. Valid values:
         * `2`: tiered protection.
         * `3`: globalization acceleration.
         * `6`: Cloud product interaction.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(@Nullable Output<Integer> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType The rule type. Valid values:
         * `2`: tiered protection.
         * `3`: globalization acceleration.
         * `6`: Cloud product interaction.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Integer ruleType) {
            return ruleType(Output.of(ruleType));
        }

        /**
         * @param rules The information about the scheduling rules. See `rules` below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<SchedulerRuleRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules The information about the scheduling rules. See `rules` below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<SchedulerRuleRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules The information about the scheduling rules. See `rules` below.
         * 
         * @return builder
         * 
         */
        public Builder rules(SchedulerRuleRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public SchedulerRuleState build() {
            return $;
        }
    }

}
