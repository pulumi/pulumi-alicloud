// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.adb.LakeAccountArgs;
import com.pulumi.alicloud.adb.inputs.LakeAccountState;
import com.pulumi.alicloud.adb.outputs.LakeAccountAccountPrivilege;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ADB Lake Account resource. Account of the DBClusterLakeVesion.
 * 
 * For information about ADB Lake Account and how to use it, see [What is Lake Account](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/developer-reference/api-adb-2021-12-01-createaccount).
 * For information about ADB Lake Account Privileges and how to use it, see [What are Lake Account Privileges](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/developer-reference/api-adb-2021-12-01-modifyaccountprivileges/).
 * 
 * &gt; **NOTE:** Available since v1.214.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersion;
 * import com.pulumi.alicloud.adb.DBClusterLakeVersionArgs;
 * import com.pulumi.alicloud.adb.LakeAccount;
 * import com.pulumi.alicloud.adb.LakeAccountArgs;
 * import com.pulumi.alicloud.adb.inputs.LakeAccountAccountPrivilegeArgs;
 * import com.pulumi.alicloud.adb.inputs.LakeAccountAccountPrivilegePrivilegeObjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         var vPCID = new Network(&#34;vPCID&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;172.16.0.0/12&#34;)
 *             .build());
 * 
 *         var vSWITCHID = new Switch(&#34;vSWITCHID&#34;, SwitchArgs.builder()        
 *             .vpcId(vPCID.id())
 *             .zoneId(&#34;cn-hangzhou-k&#34;)
 *             .vswitchName(name)
 *             .cidrBlock(&#34;172.16.0.0/24&#34;)
 *             .build());
 * 
 *         var createInstance = new DBClusterLakeVersion(&#34;createInstance&#34;, DBClusterLakeVersionArgs.builder()        
 *             .storageResource(&#34;0ACU&#34;)
 *             .zoneId(&#34;cn-hangzhou-k&#34;)
 *             .vpcId(vPCID.id())
 *             .vswitchId(vSWITCHID.id())
 *             .dbClusterDescription(name)
 *             .computeResource(&#34;16ACU&#34;)
 *             .dbClusterVersion(&#34;5.0&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .securityIps(&#34;127.0.0.1&#34;)
 *             .build());
 * 
 *         var defaultLakeAccount = new LakeAccount(&#34;defaultLakeAccount&#34;, LakeAccountArgs.builder()        
 *             .dbClusterId(createInstance.id())
 *             .accountType(&#34;Super&#34;)
 *             .accountName(&#34;tfnormal&#34;)
 *             .accountPassword(&#34;normal@2023&#34;)
 *             .accountPrivileges(            
 *                 LakeAccountAccountPrivilegeArgs.builder()
 *                     .privilegeType(&#34;Database&#34;)
 *                     .privilegeObject(LakeAccountAccountPrivilegePrivilegeObjectArgs.builder()
 *                         .database(&#34;MYSQL&#34;)
 *                         .build())
 *                     .privileges(                    
 *                         &#34;select&#34;,
 *                         &#34;update&#34;)
 *                     .build(),
 *                 LakeAccountAccountPrivilegeArgs.builder()
 *                     .privilegeType(&#34;Table&#34;)
 *                     .privilegeObject(LakeAccountAccountPrivilegePrivilegeObjectArgs.builder()
 *                         .database(&#34;INFORMATION_SCHEMA&#34;)
 *                         .table(&#34;ENGINES&#34;)
 *                         .build())
 *                     .privileges(&#34;update&#34;)
 *                     .build(),
 *                 LakeAccountAccountPrivilegeArgs.builder()
 *                     .privilegeType(&#34;Column&#34;)
 *                     .privilegeObject(LakeAccountAccountPrivilegePrivilegeObjectArgs.builder()
 *                         .table(&#34;COLUMNS&#34;)
 *                         .column(&#34;PRIVILEGES&#34;)
 *                         .database(&#34;INFORMATION_SCHEMA&#34;)
 *                         .build())
 *                     .privileges(&#34;update&#34;)
 *                     .build())
 *             .accountDescription(name)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ADB Lake Account can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:adb/lakeAccount:LakeAccount example &lt;db_cluster_id&gt;:&lt;account_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:adb/lakeAccount:LakeAccount")
public class LakeAccount extends com.pulumi.resources.CustomResource {
    /**
     * The description of the account.
     * 
     */
    @Export(name="accountDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountDescription;

    /**
     * @return The description of the account.
     * 
     */
    public Output<Optional<String>> accountDescription() {
        return Codegen.optional(this.accountDescription);
    }
    /**
     * The name of the account.
     * 
     */
    @Export(name="accountName", refs={String.class}, tree="[0]")
    private Output<String> accountName;

    /**
     * @return The name of the account.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }
    /**
     * AccountPassword.
     * 
     */
    @Export(name="accountPassword", refs={String.class}, tree="[0]")
    private Output<String> accountPassword;

    /**
     * @return AccountPassword.
     * 
     */
    public Output<String> accountPassword() {
        return this.accountPassword;
    }
    /**
     * List of permissions granted. See `account_privileges` below.
     * 
     */
    @Export(name="accountPrivileges", refs={List.class,LakeAccountAccountPrivilege.class}, tree="[0,1]")
    private Output<List<LakeAccountAccountPrivilege>> accountPrivileges;

    /**
     * @return List of permissions granted. See `account_privileges` below.
     * 
     */
    public Output<List<LakeAccountAccountPrivilege>> accountPrivileges() {
        return this.accountPrivileges;
    }
    /**
     * The type of the account.
     * 
     */
    @Export(name="accountType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountType;

    /**
     * @return The type of the account.
     * 
     */
    public Output<Optional<String>> accountType() {
        return Codegen.optional(this.accountType);
    }
    /**
     * The DBCluster ID.
     * 
     */
    @Export(name="dbClusterId", refs={String.class}, tree="[0]")
    private Output<String> dbClusterId;

    /**
     * @return The DBCluster ID.
     * 
     */
    public Output<String> dbClusterId() {
        return this.dbClusterId;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LakeAccount(String name) {
        this(name, LakeAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LakeAccount(String name, LakeAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LakeAccount(String name, LakeAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/lakeAccount:LakeAccount", name, args == null ? LakeAccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LakeAccount(String name, Output<String> id, @Nullable LakeAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:adb/lakeAccount:LakeAccount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "accountPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LakeAccount get(String name, Output<String> id, @Nullable LakeAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LakeAccount(name, id, state, options);
    }
}
