// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos.outputs;

import com.pulumi.alicloud.ddos.outputs.BgpPolicyContentLayer4RuleListConditionList;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BgpPolicyContentLayer4RuleList {
    /**
     * @return 1 for observation 2 for blocking.
     * 
     */
    private String action;
    /**
     * @return Matching Condition. See `condition_list` below.
     * 
     */
    private List<BgpPolicyContentLayer4RuleListConditionList> conditionLists;
    /**
     * @return .
     * 
     */
    private Integer limited;
    /**
     * @return 0 indicates that the condition is not met 1 indicates that the condition is met.
     * 
     */
    private String match;
    /**
     * @return Char indicates a string match hex match.
     * 
     */
    private String method;
    /**
     * @return Rule Name.
     * 
     */
    private String name;
    /**
     * @return 1-100, priority, the lower the number, the higher the priority.
     * 
     */
    private Integer priority;

    private BgpPolicyContentLayer4RuleList() {}
    /**
     * @return 1 for observation 2 for blocking.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Matching Condition. See `condition_list` below.
     * 
     */
    public List<BgpPolicyContentLayer4RuleListConditionList> conditionLists() {
        return this.conditionLists;
    }
    /**
     * @return .
     * 
     */
    public Integer limited() {
        return this.limited;
    }
    /**
     * @return 0 indicates that the condition is not met 1 indicates that the condition is met.
     * 
     */
    public String match() {
        return this.match;
    }
    /**
     * @return Char indicates a string match hex match.
     * 
     */
    public String method() {
        return this.method;
    }
    /**
     * @return Rule Name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 1-100, priority, the lower the number, the higher the priority.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BgpPolicyContentLayer4RuleList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private List<BgpPolicyContentLayer4RuleListConditionList> conditionLists;
        private Integer limited;
        private String match;
        private String method;
        private String name;
        private Integer priority;
        public Builder() {}
        public Builder(BgpPolicyContentLayer4RuleList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditionLists = defaults.conditionLists;
    	      this.limited = defaults.limited;
    	      this.match = defaults.match;
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder conditionLists(List<BgpPolicyContentLayer4RuleListConditionList> conditionLists) {
            if (conditionLists == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "conditionLists");
            }
            this.conditionLists = conditionLists;
            return this;
        }
        public Builder conditionLists(BgpPolicyContentLayer4RuleListConditionList... conditionLists) {
            return conditionLists(List.of(conditionLists));
        }
        @CustomType.Setter
        public Builder limited(Integer limited) {
            if (limited == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "limited");
            }
            this.limited = limited;
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            if (match == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "match");
            }
            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            if (method == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "method");
            }
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("BgpPolicyContentLayer4RuleList", "priority");
            }
            this.priority = priority;
            return this;
        }
        public BgpPolicyContentLayer4RuleList build() {
            final var _resultValue = new BgpPolicyContentLayer4RuleList();
            _resultValue.action = action;
            _resultValue.conditionLists = conditionLists;
            _resultValue.limited = limited;
            _resultValue.match = match;
            _resultValue.method = method;
            _resultValue.name = name;
            _resultValue.priority = priority;
            return _resultValue;
        }
    }
}
