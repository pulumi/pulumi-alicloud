// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.schedulerx.JobArgs;
import com.pulumi.alicloud.schedulerx.inputs.JobState;
import com.pulumi.alicloud.schedulerx.outputs.JobJobMonitorInfo;
import com.pulumi.alicloud.schedulerx.outputs.JobMapTaskXattrs;
import com.pulumi.alicloud.schedulerx.outputs.JobTimeConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Schedulerx Job resource.
 * 
 * For information about Schedulerx Job and how to use it, see [What is Job](https://www.alibabacloud.com/help/en/schedulerx/schedulerx-serverless/developer-reference/api-schedulerx2-2019-04-30-createjob).
 * 
 * &gt; **NOTE:** Available since v1.240.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.schedulerx.Namespace;
 * import com.pulumi.alicloud.schedulerx.NamespaceArgs;
 * import com.pulumi.alicloud.schedulerx.AppGroup;
 * import com.pulumi.alicloud.schedulerx.AppGroupArgs;
 * import com.pulumi.alicloud.schedulerx.Job;
 * import com.pulumi.alicloud.schedulerx.JobArgs;
 * import com.pulumi.alicloud.schedulerx.inputs.JobTimeConfigArgs;
 * import com.pulumi.alicloud.schedulerx.inputs.JobMapTaskXattrsArgs;
 * import com.pulumi.alicloud.schedulerx.inputs.JobJobMonitorInfoArgs;
 * import com.pulumi.alicloud.schedulerx.inputs.JobJobMonitorInfoMonitorConfigArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var createNameSpace = new Namespace("createNameSpace", NamespaceArgs.builder()
 *             .namespaceName(name)
 *             .description(name)
 *             .build());
 * 
 *         var default_ = new AppGroup("default", AppGroupArgs.builder()
 *             .maxJobs(100)
 *             .monitorContactsJson(serializeJson(
 *                 jsonArray(
 *                     jsonObject(
 *                         jsonProperty("userName", "name1"),
 *                         jsonProperty("userPhone", "89756******")
 *                     ), 
 *                     jsonObject(
 *                         jsonProperty("userName", "name2"),
 *                         jsonProperty("ding", "http://www.example.com")
 *                     )
 *                 )))
 *             .deleteJobs(false)
 *             .appType(1)
 *             .namespaceSource("schedulerx")
 *             .groupId("example-appgroup-pop-autoexample")
 *             .namespaceName("default")
 *             .description(name)
 *             .monitorConfigJson(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("sendChannel", "sms,ding")
 *                 )))
 *             .appVersion("1")
 *             .appName("example-appgroup-pop-autoexample")
 *             .namespace(createNameSpace.namespaceUid())
 *             .enableLog(false)
 *             .scheduleBusyWorkers(false)
 *             .build());
 * 
 *         var defaultJob = new Job("defaultJob", JobArgs.builder()
 *             .timezone("GTM+7")
 *             .status("Enable")
 *             .maxAttempt(0)
 *             .description(name)
 *             .parameters("hello word")
 *             .jobName(name)
 *             .maxConcurrency("1")
 *             .timeConfig(JobTimeConfigArgs.builder()
 *                 .dataOffset(1)
 *                 .timeExpression("100000")
 *                 .timeType(3)
 *                 .calendar("workday")
 *                 .build())
 *             .mapTaskXattrs(JobMapTaskXattrsArgs.builder()
 *                 .taskMaxAttempt(1)
 *                 .taskAttemptInterval(1)
 *                 .consumerSize(5)
 *                 .queueSize(10000)
 *                 .dispatcherSize(5)
 *                 .pageSize(100)
 *                 .build())
 *             .namespace(createNameSpace.namespaceUid())
 *             .groupId(default_.groupId())
 *             .jobType("java")
 *             .jobMonitorInfo(JobJobMonitorInfoArgs.builder()
 *                 .contactInfos(                
 *                     JobJobMonitorInfoContactInfoArgs.builder()
 *                         .userPhone("12345678910")
 *                         .userName("tangtao-1")
 *                         .ding("https://alidocs.dingtalk.com")
 *                         .userMail("12345678}{@literal @}{@code xx.com")
 *                         .build(),
 *                     JobJobMonitorInfoContactInfoArgs.builder()
 *                         .userPhone("12345678910")
 *                         .userName("tangtao-2")
 *                         .ding("https://alidocs.dingtalk.com1")
 *                         .userMail("123456789}{@literal @}{@code xx.com")
 *                         .build())
 *                 .monitorConfig(JobJobMonitorInfoMonitorConfigArgs.builder()
 *                     .timeout(7200)
 *                     .sendChannel("sms")
 *                     .timeoutKillEnable(true)
 *                     .timeoutEnable(true)
 *                     .failEnable(true)
 *                     .missWorkerEnable(true)
 *                     .build())
 *                 .build())
 *             .className("com.aliyun.schedulerx.example.processor.SimpleJob")
 *             .namespaceSource("schedulerx")
 *             .attemptInterval(30)
 *             .failTimes(1)
 *             .executeMode("batch")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Schedulerx Job can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:schedulerx/job:Job example &lt;namespace&gt;:&lt;group_id&gt;:&lt;job_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:schedulerx/job:Job")
public class Job extends com.pulumi.resources.CustomResource {
    /**
     * Error retry interval, unit s, default value 30.
     * 
     */
    @Export(name="attemptInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> attemptInterval;

    /**
     * @return Error retry interval, unit s, default value 30.
     * 
     */
    public Output<Optional<Integer>> attemptInterval() {
        return Codegen.optional(this.attemptInterval);
    }
    /**
     * Full path of the task interface class.
     * 
     * This field is available only when your task is of the Java task type.
     * 
     */
    @Export(name="className", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> className;

    /**
     * @return Full path of the task interface class.
     * 
     * This field is available only when your task is of the Java task type.
     * 
     */
    public Output<Optional<String>> className() {
        return Codegen.optional(this.className);
    }
    /**
     * The script code of the python, shell, and go task types.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> content;

    /**
     * @return The script code of the python, shell, and go task types.
     * 
     */
    public Output<Optional<String>> content() {
        return Codegen.optional(this.content);
    }
    /**
     * Task description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Task description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Task execution mode, the possible results are as follows:
     * 
     */
    @Export(name="executeMode", refs={String.class}, tree="[0]")
    private Output<String> executeMode;

    /**
     * @return Task execution mode, the possible results are as follows:
     * 
     */
    public Output<String> executeMode() {
        return this.executeMode;
    }
    /**
     * Number of consecutive failed alarms
     * 
     */
    @Export(name="failTimes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> failTimes;

    /**
     * @return Number of consecutive failed alarms
     * 
     */
    public Output<Optional<Integer>> failTimes() {
        return Codegen.optional(this.failTimes);
    }
    /**
     * The application ID, which is obtained from the **application management** page of the console.
     * 
     */
    @Export(name="groupId", refs={String.class}, tree="[0]")
    private Output<String> groupId;

    /**
     * @return The application ID, which is obtained from the **application management** page of the console.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * JobId
     * 
     */
    @Export(name="jobId", refs={Integer.class}, tree="[0]")
    private Output<Integer> jobId;

    /**
     * @return JobId
     * 
     */
    public Output<Integer> jobId() {
        return this.jobId;
    }
    /**
     * Task monitoring information See `job_monitor_info` below.
     * 
     */
    @Export(name="jobMonitorInfo", refs={JobJobMonitorInfo.class}, tree="[0]")
    private Output</* @Nullable */ JobJobMonitorInfo> jobMonitorInfo;

    /**
     * @return Task monitoring information See `job_monitor_info` below.
     * 
     */
    public Output<Optional<JobJobMonitorInfo>> jobMonitorInfo() {
        return Codegen.optional(this.jobMonitorInfo);
    }
    /**
     * JobName
     * 
     */
    @Export(name="jobName", refs={String.class}, tree="[0]")
    private Output<String> jobName;

    /**
     * @return JobName
     * 
     */
    public Output<String> jobName() {
        return this.jobName;
    }
    /**
     * Job Type
     * 
     */
    @Export(name="jobType", refs={String.class}, tree="[0]")
    private Output<String> jobType;

    /**
     * @return Job Type
     * 
     */
    public Output<String> jobType() {
        return this.jobType;
    }
    /**
     * Advanced configuration, limited to parallel computing, memory grid, and grid computing. See `map_task_xattrs` below.
     * 
     */
    @Export(name="mapTaskXattrs", refs={JobMapTaskXattrs.class}, tree="[0]")
    private Output</* @Nullable */ JobMapTaskXattrs> mapTaskXattrs;

    /**
     * @return Advanced configuration, limited to parallel computing, memory grid, and grid computing. See `map_task_xattrs` below.
     * 
     */
    public Output<Optional<JobMapTaskXattrs>> mapTaskXattrs() {
        return Codegen.optional(this.mapTaskXattrs);
    }
    /**
     * The maximum number of error retries, which is set based on business requirements. The default value is 0.
     * 
     */
    @Export(name="maxAttempt", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxAttempt;

    /**
     * @return The maximum number of error retries, which is set based on business requirements. The default value is 0.
     * 
     */
    public Output<Optional<Integer>> maxAttempt() {
        return Codegen.optional(this.maxAttempt);
    }
    /**
     * The maximum number of instances running at the same time. The default value is 1, that is, the last trigger is not completed, and the next trigger will not be performed even at the running time.
     * 
     */
    @Export(name="maxConcurrency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> maxConcurrency;

    /**
     * @return The maximum number of instances running at the same time. The default value is 1, that is, the last trigger is not completed, and the next trigger will not be performed even at the running time.
     * 
     */
    public Output<Optional<String>> maxConcurrency() {
        return Codegen.optional(this.maxConcurrency);
    }
    /**
     * Namespace, which is obtained on the `Namespace` page of the console.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return Namespace, which is obtained on the `Namespace` page of the console.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * Special third parties are required.
     * 
     */
    @Export(name="namespaceSource", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespaceSource;

    /**
     * @return Special third parties are required.
     * 
     */
    public Output<Optional<String>> namespaceSource() {
        return Codegen.optional(this.namespaceSource);
    }
    /**
     * User-defined parameters, which can be obtained at runtime.
     * 
     */
    @Export(name="parameters", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parameters;

    /**
     * @return User-defined parameters, which can be obtained at runtime.
     * 
     */
    public Output<Optional<String>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * Task status. The values are as follows:
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Task status. The values are as follows:
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Success Notification Switch
     * 
     */
    @Export(name="successNoticeEnable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> successNoticeEnable;

    /**
     * @return Success Notification Switch
     * 
     */
    public Output<Optional<Boolean>> successNoticeEnable() {
        return Codegen.optional(this.successNoticeEnable);
    }
    /**
     * Advanced configuration of parallel grid tasks, push model or pull model
     * 
     */
    @Export(name="taskDispatchMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> taskDispatchMode;

    /**
     * @return Advanced configuration of parallel grid tasks, push model or pull model
     * 
     */
    public Output<Optional<String>> taskDispatchMode() {
        return Codegen.optional(this.taskDispatchMode);
    }
    /**
     * K8s task type custom task template
     * 
     */
    @Export(name="template", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> template;

    /**
     * @return K8s task type custom task template
     * 
     */
    public Output<Optional<String>> template() {
        return Codegen.optional(this.template);
    }
    /**
     * Time configuration information See `time_config` below.
     * 
     */
    @Export(name="timeConfig", refs={JobTimeConfig.class}, tree="[0]")
    private Output<JobTimeConfig> timeConfig;

    /**
     * @return Time configuration information See `time_config` below.
     * 
     */
    public Output<JobTimeConfig> timeConfig() {
        return this.timeConfig;
    }
    /**
     * Time Zone
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezone;

    /**
     * @return Time Zone
     * 
     */
    public Output<Optional<String>> timezone() {
        return Codegen.optional(this.timezone);
    }
    /**
     * Task Extension Field
     * 
     */
    @Export(name="xAttrs", refs={String.class}, tree="[0]")
    private Output<String> xAttrs;

    /**
     * @return Task Extension Field
     * 
     */
    public Output<String> xAttrs() {
        return this.xAttrs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Job(java.lang.String name) {
        this(name, JobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Job(java.lang.String name, JobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Job(java.lang.String name, JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:schedulerx/job:Job", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Job(java.lang.String name, Output<java.lang.String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:schedulerx/job:Job", name, state, makeResourceOptions(options, id), false);
    }

    private static JobArgs makeArgs(JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? JobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Job get(java.lang.String name, Output<java.lang.String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Job(name, id, state, options);
    }
}
